
# 1 "main.c"

# 8 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 7 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);




extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);


extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 13 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 21 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 47 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\pic18f67j60.h"
extern volatile unsigned char MAADR5 @ 0xE80;

asm("MAADR5 equ 0E80h");



extern volatile unsigned char MAADR6 @ 0xE81;

asm("MAADR6 equ 0E81h");



extern volatile unsigned char MAADR3 @ 0xE82;

asm("MAADR3 equ 0E82h");



extern volatile unsigned char MAADR4 @ 0xE83;

asm("MAADR4 equ 0E83h");



extern volatile unsigned char MAADR1 @ 0xE84;

asm("MAADR1 equ 0E84h");



extern volatile unsigned char MAADR2 @ 0xE85;

asm("MAADR2 equ 0E85h");



extern volatile unsigned char MISTAT @ 0xE8A;

asm("MISTAT equ 0E8Ah");


typedef union {
struct {
unsigned BUSY :1;
unsigned SCAN :1;
unsigned NVALID :1;
unsigned :1;
};
} MISTATbits_t;
extern volatile MISTATbits_t MISTATbits @ 0xE8A;

# 115
extern volatile unsigned char EFLOCON @ 0xE97;

asm("EFLOCON equ 0E97h");


typedef union {
struct {
unsigned FCEN0 :1;
unsigned FCEN1 :1;
unsigned FULDPXS :1;
};
} EFLOCONbits_t;
extern volatile EFLOCONbits_t EFLOCONbits @ 0xE97;

# 146
extern volatile unsigned short EPAUS @ 0xE98;

asm("EPAUS equ 0E98h");



extern volatile unsigned char EPAUSL @ 0xE98;

asm("EPAUSL equ 0E98h");



extern volatile unsigned char EPAUSH @ 0xE99;

asm("EPAUSH equ 0E99h");



extern volatile unsigned char MACON1 @ 0xEA0;

asm("MACON1 equ 0EA0h");


typedef union {
struct {
unsigned MARXEN :1;
unsigned PASSALL :1;
unsigned RXPAUS :1;
unsigned TXPAUS :1;
};
} MACON1bits_t;
extern volatile MACON1bits_t MACON1bits @ 0xEA0;

# 201
extern volatile unsigned char MACON3 @ 0xEA2;

asm("MACON3 equ 0EA2h");


typedef union {
struct {
unsigned FULDPX :1;
unsigned FRMLNEN :1;
unsigned HFRMEN :1;
unsigned PHDREN :1;
unsigned TXCRCEN :1;
unsigned PADCFG0 :1;
unsigned PADCFG1 :1;
unsigned PADCFG2 :1;
};
struct {
unsigned :5;
unsigned PADCFG :3;
};
} MACON3bits_t;
extern volatile MACON3bits_t MACON3bits @ 0xEA2;

# 271
extern volatile unsigned char MACON4 @ 0xEA3;

asm("MACON4 equ 0EA3h");


typedef union {
struct {
unsigned :5;
unsigned :1;
unsigned DEFER :1;
};
} MACON4bits_t;
extern volatile MACON4bits_t MACON4bits @ 0xEA3;

# 292
extern volatile unsigned char MABBIPG @ 0xEA4;

asm("MABBIPG equ 0EA4h");


typedef union {
struct {
unsigned BBIPG0 :1;
unsigned BBIPG1 :1;
unsigned BBIPG2 :1;
unsigned BBIPG3 :1;
unsigned BBIPG4 :1;
unsigned BBIPG5 :1;
unsigned BBIPG6 :1;
};
} MABBIPGbits_t;
extern volatile MABBIPGbits_t MABBIPGbits @ 0xEA4;

# 347
extern volatile unsigned short MAIPG @ 0xEA6;

asm("MAIPG equ 0EA6h");



extern volatile unsigned char MAIPGL @ 0xEA6;

asm("MAIPGL equ 0EA6h");



extern volatile unsigned char MAIPGH @ 0xEA7;

asm("MAIPGH equ 0EA7h");



extern volatile unsigned short MAMXFL @ 0xEAA;

asm("MAMXFL equ 0EAAh");



extern volatile unsigned char MAMXFLL @ 0xEAA;

asm("MAMXFLL equ 0EAAh");



extern volatile unsigned char MAMXFLH @ 0xEAB;

asm("MAMXFLH equ 0EABh");



extern volatile unsigned char MICMD @ 0xEB2;

asm("MICMD equ 0EB2h");


typedef union {
struct {
unsigned MIIRD :1;
unsigned MIISCAN :1;
};
} MICMDbits_t;
extern volatile MICMDbits_t MICMDbits @ 0xEB2;

# 408
extern volatile unsigned char MIREGADR @ 0xEB4;

asm("MIREGADR equ 0EB4h");



extern volatile unsigned short MIWR @ 0xEB6;

asm("MIWR equ 0EB6h");



extern volatile unsigned char MIWRL @ 0xEB6;

asm("MIWRL equ 0EB6h");



extern volatile unsigned char MIWRH @ 0xEB7;

asm("MIWRH equ 0EB7h");



extern volatile unsigned short MIRD @ 0xEB8;

asm("MIRD equ 0EB8h");



extern volatile unsigned char MIRDL @ 0xEB8;

asm("MIRDL equ 0EB8h");



extern volatile unsigned char MIRDH @ 0xEB9;

asm("MIRDH equ 0EB9h");



extern volatile unsigned char EHT0 @ 0xEC0;

asm("EHT0 equ 0EC0h");



extern volatile unsigned char EHT1 @ 0xEC1;

asm("EHT1 equ 0EC1h");



extern volatile unsigned char EHT2 @ 0xEC2;

asm("EHT2 equ 0EC2h");



extern volatile unsigned char EHT3 @ 0xEC3;

asm("EHT3 equ 0EC3h");



extern volatile unsigned char EHT4 @ 0xEC4;

asm("EHT4 equ 0EC4h");



extern volatile unsigned char EHT5 @ 0xEC5;

asm("EHT5 equ 0EC5h");



extern volatile unsigned char EHT6 @ 0xEC6;

asm("EHT6 equ 0EC6h");



extern volatile unsigned char EHT7 @ 0xEC7;

asm("EHT7 equ 0EC7h");



extern volatile unsigned char EPMM0 @ 0xEC8;

asm("EPMM0 equ 0EC8h");



extern volatile unsigned char EPMM1 @ 0xEC9;

asm("EPMM1 equ 0EC9h");



extern volatile unsigned char EPMM2 @ 0xECA;

asm("EPMM2 equ 0ECAh");



extern volatile unsigned char EPMM3 @ 0xECB;

asm("EPMM3 equ 0ECBh");



extern volatile unsigned char EPMM4 @ 0xECC;

asm("EPMM4 equ 0ECCh");



extern volatile unsigned char EPMM5 @ 0xECD;

asm("EPMM5 equ 0ECDh");



extern volatile unsigned char EPMM6 @ 0xECE;

asm("EPMM6 equ 0ECEh");



extern volatile unsigned char EPMM7 @ 0xECF;

asm("EPMM7 equ 0ECFh");



extern volatile unsigned short EPMCS @ 0xED0;

asm("EPMCS equ 0ED0h");



extern volatile unsigned char EPMCSL @ 0xED0;

asm("EPMCSL equ 0ED0h");



extern volatile unsigned char EPMCSH @ 0xED1;

asm("EPMCSH equ 0ED1h");



extern volatile unsigned short EPMO @ 0xED4;

asm("EPMO equ 0ED4h");



extern volatile unsigned char EPMOL @ 0xED4;

asm("EPMOL equ 0ED4h");



extern volatile unsigned char EPMOH @ 0xED5;

asm("EPMOH equ 0ED5h");



extern volatile unsigned char ERXFCON @ 0xED8;

asm("ERXFCON equ 0ED8h");


typedef union {
struct {
unsigned BCEN :1;
unsigned MCEN :1;
unsigned HTEN :1;
unsigned MPEN :1;
unsigned PMEN :1;
unsigned CRCEN :1;
unsigned ANDOR :1;
unsigned UCEN :1;
};
} ERXFCONbits_t;
extern volatile ERXFCONbits_t ERXFCONbits @ 0xED8;

# 643
extern volatile unsigned char EPKTCNT @ 0xED9;

asm("EPKTCNT equ 0ED9h");



extern volatile unsigned short EWRPT @ 0xEE2;

asm("EWRPT equ 0EE2h");



extern volatile unsigned char EWRPTL @ 0xEE2;

asm("EWRPTL equ 0EE2h");



extern volatile unsigned char EWRPTH @ 0xEE3;

asm("EWRPTH equ 0EE3h");



extern volatile unsigned short ETXST @ 0xEE4;

asm("ETXST equ 0EE4h");



extern volatile unsigned char ETXSTL @ 0xEE4;

asm("ETXSTL equ 0EE4h");



extern volatile unsigned char ETXSTH @ 0xEE5;

asm("ETXSTH equ 0EE5h");



extern volatile unsigned short ETXND @ 0xEE6;

asm("ETXND equ 0EE6h");



extern volatile unsigned char ETXNDL @ 0xEE6;

asm("ETXNDL equ 0EE6h");



extern volatile unsigned char ETXNDH @ 0xEE7;

asm("ETXNDH equ 0EE7h");



extern volatile unsigned short ERXST @ 0xEE8;

asm("ERXST equ 0EE8h");



extern volatile unsigned char ERXSTL @ 0xEE8;

asm("ERXSTL equ 0EE8h");



extern volatile unsigned char ERXSTH @ 0xEE9;

asm("ERXSTH equ 0EE9h");



extern volatile unsigned short ERXND @ 0xEEA;

asm("ERXND equ 0EEAh");



extern volatile unsigned char ERXNDL @ 0xEEA;

asm("ERXNDL equ 0EEAh");



extern volatile unsigned char ERXNDH @ 0xEEB;

asm("ERXNDH equ 0EEBh");



extern volatile unsigned short ERXRDPT @ 0xEEC;

asm("ERXRDPT equ 0EECh");



extern volatile unsigned char ERXRDPTL @ 0xEEC;

asm("ERXRDPTL equ 0EECh");



extern volatile unsigned char ERXRDPTH @ 0xEED;

asm("ERXRDPTH equ 0EEDh");



extern volatile unsigned short ERXWRPT @ 0xEEE;

asm("ERXWRPT equ 0EEEh");



extern volatile unsigned char ERXWRPTL @ 0xEEE;

asm("ERXWRPTL equ 0EEEh");



extern volatile unsigned char ERXWRPTH @ 0xEEF;

asm("ERXWRPTH equ 0EEFh");



extern volatile unsigned short EDMAST @ 0xEF0;

asm("EDMAST equ 0EF0h");



extern volatile unsigned char EDMASTL @ 0xEF0;

asm("EDMASTL equ 0EF0h");



extern volatile unsigned char EDMASTH @ 0xEF1;

asm("EDMASTH equ 0EF1h");



extern volatile unsigned short EDMAND @ 0xEF2;

asm("EDMAND equ 0EF2h");



extern volatile unsigned char EDMANDL @ 0xEF2;

asm("EDMANDL equ 0EF2h");



extern volatile unsigned char EDMANDH @ 0xEF3;

asm("EDMANDH equ 0EF3h");



extern volatile unsigned short EDMADST @ 0xEF4;

asm("EDMADST equ 0EF4h");



extern volatile unsigned char EDMADSTL @ 0xEF4;

asm("EDMADSTL equ 0EF4h");



extern volatile unsigned char EDMADSTH @ 0xEF5;

asm("EDMADSTH equ 0EF5h");



extern volatile unsigned short EDMACS @ 0xEF6;

asm("EDMACS equ 0EF6h");



extern volatile unsigned char EDMACSL @ 0xEF6;

asm("EDMACSL equ 0EF6h");



extern volatile unsigned char EDMACSH @ 0xEF7;

asm("EDMACSH equ 0EF7h");



extern volatile unsigned char EIE @ 0xEFB;

asm("EIE equ 0EFBh");


typedef union {
struct {
unsigned RXERIE :1;
unsigned TXERIE :1;
unsigned :1;
unsigned TXIE :1;
unsigned LINKIE :1;
unsigned DMAIE :1;
unsigned PKTIE :1;
};
struct {
unsigned :3;
unsigned ETXIE :1;
};
} EIEbits_t;
extern volatile EIEbits_t EIEbits @ 0xEFB;

# 906
extern volatile unsigned char ESTAT @ 0xEFD;

asm("ESTAT equ 0EFDh");


typedef union {
struct {
unsigned PHYRDY :1;
unsigned TXABRT :1;
unsigned RXBUSY :1;
unsigned :2;
unsigned :1;
unsigned BUFER :1;
};
} ESTATbits_t;
extern volatile ESTATbits_t ESTATbits @ 0xEFD;

# 945
extern volatile unsigned char ECON2 @ 0xEFE;

asm("ECON2 equ 0EFEh");


typedef union {
struct {
unsigned :5;
unsigned ETHEN :1;
unsigned PKTDEC :1;
unsigned AUTOINC :1;
};
} ECON2bits_t;
extern volatile ECON2bits_t ECON2bits @ 0xEFE;

# 977
extern volatile unsigned char EIR @ 0xF60;

asm("EIR equ 0F60h");


typedef union {
struct {
unsigned RXERIF :1;
unsigned TXERIF :1;
unsigned :1;
unsigned TXIF :1;
unsigned LINKIF :1;
unsigned DMAIF :1;
unsigned PKTIF :1;
};
struct {
unsigned :3;
unsigned ETXIF :1;
};
} EIRbits_t;
extern volatile EIRbits_t EIRbits @ 0xF60;

# 1036
extern volatile unsigned char EDATA @ 0xF61;

asm("EDATA equ 0F61h");


typedef union {
struct {
unsigned EDATA0 :1;
unsigned EDATA1 :1;
unsigned EDATA2 :1;
unsigned EDATA3 :1;
unsigned EDATA4 :1;
unsigned EDATA5 :1;
unsigned EDATA6 :1;
unsigned EDATA7 :1;
};
} EDATAbits_t;
extern volatile EDATAbits_t EDATAbits @ 0xF61;

# 1097
extern volatile unsigned char ECCP2DEL @ 0xF67;

asm("ECCP2DEL equ 0F67h");


typedef union {
struct {
unsigned PDC :7;
unsigned PRSEN :1;
};
struct {
unsigned PDC0 :1;
unsigned PDC1 :1;
unsigned PDC2 :1;
unsigned PDC3 :1;
unsigned PDC4 :1;
unsigned PDC5 :1;
unsigned PDC6 :1;
};
struct {
unsigned P2DC0 :1;
unsigned P2DC1 :1;
unsigned P2DC2 :1;
unsigned P2DC3 :1;
unsigned P2DC4 :1;
unsigned P2DC5 :1;
unsigned P2DC6 :1;
unsigned P2RSEN :1;
};
} ECCP2DELbits_t;
extern volatile ECCP2DELbits_t ECCP2DELbits @ 0xF67;

# 1216
extern volatile unsigned char ECCP2AS @ 0xF68;

asm("ECCP2AS equ 0F68h");


typedef union {
struct {
unsigned PSSBD :2;
unsigned PSSAC :2;
unsigned ECCPAS :3;
unsigned ECCPASE :1;
};
struct {
unsigned PSSBD0 :1;
unsigned PSSBD1 :1;
unsigned PSSAC0 :1;
unsigned PSSAC1 :1;
unsigned ECCPAS0 :1;
unsigned ECCPAS1 :1;
unsigned ECCPAS2 :1;
};
struct {
unsigned PSS2BD0 :1;
unsigned PSS2BD1 :1;
unsigned PSS2AC0 :1;
unsigned PSS2AC1 :1;
unsigned ECCP2AS0 :1;
unsigned ECCP2AS1 :1;
unsigned ECCP2AS2 :1;
unsigned ECCP2ASE :1;
};
} ECCP2ASbits_t;
extern volatile ECCP2ASbits_t ECCP2ASbits @ 0xF68;

# 1347
extern volatile unsigned char ECCP3DEL @ 0xF69;

asm("ECCP3DEL equ 0F69h");


typedef union {
struct {
unsigned PDC :7;
unsigned PRSEN :1;
};
struct {
unsigned PDC0 :1;
unsigned PDC1 :1;
unsigned PDC2 :1;
unsigned PDC3 :1;
unsigned PDC4 :1;
unsigned PDC5 :1;
unsigned PDC6 :1;
};
struct {
unsigned P3DC0 :1;
unsigned P3DC1 :1;
unsigned P3DC2 :1;
unsigned P3DC3 :1;
unsigned P3DC4 :1;
unsigned P3DC5 :1;
unsigned P3DC6 :1;
unsigned P3RSEN :1;
};
} ECCP3DELbits_t;
extern volatile ECCP3DELbits_t ECCP3DELbits @ 0xF69;

# 1466
extern volatile unsigned char ECCP3AS @ 0xF6A;

asm("ECCP3AS equ 0F6Ah");


typedef union {
struct {
unsigned PSSBD :2;
unsigned PSSAC :2;
unsigned ECCPAS :3;
unsigned ECCPASE :1;
};
struct {
unsigned PSSBD0 :1;
unsigned PSSBD1 :1;
unsigned PSSAC0 :1;
unsigned PSSAC1 :1;
unsigned ECCPAS0 :1;
unsigned ECCPAS1 :1;
unsigned ECCPAS2 :1;
};
struct {
unsigned PSS3BD0 :1;
unsigned PSS3BD1 :1;
unsigned PSS3AC0 :1;
unsigned PSS3AC1 :1;
unsigned ECCP3AS0 :1;
unsigned ECCP3AS1 :1;
unsigned ECCP3AS2 :1;
unsigned ECCP3ASE :1;
};
} ECCP3ASbits_t;
extern volatile ECCP3ASbits_t ECCP3ASbits @ 0xF6A;

# 1597
extern volatile unsigned char CCP5CON @ 0xF70;

asm("CCP5CON equ 0F70h");


typedef union {
struct {
unsigned CCP5M :4;
unsigned DC5B :2;
};
struct {
unsigned CCP5M0 :1;
unsigned CCP5M1 :1;
unsigned CCP5M2 :1;
unsigned CCP5M3 :1;
unsigned CCP5Y :1;
unsigned CCP5X :1;
};
struct {
unsigned :4;
unsigned DC5B0 :1;
unsigned DC5B1 :1;
};
} CCP5CONbits_t;
extern volatile CCP5CONbits_t CCP5CONbits @ 0xF70;

# 1675
extern volatile unsigned short CCPR5 @ 0xF71;

asm("CCPR5 equ 0F71h");



extern volatile unsigned char CCPR5L @ 0xF71;

asm("CCPR5L equ 0F71h");



extern volatile unsigned char CCPR5H @ 0xF72;

asm("CCPR5H equ 0F72h");



extern volatile unsigned char CCP4CON @ 0xF73;

asm("CCP4CON equ 0F73h");


typedef union {
struct {
unsigned CCP4M :4;
unsigned DC4B :2;
};
struct {
unsigned CCP4M0 :1;
unsigned CCP4M1 :1;
unsigned CCP4M2 :1;
unsigned CCP4M3 :1;
unsigned DC4B0 :1;
unsigned DC4B1 :1;
};
struct {
unsigned :4;
unsigned CCP4Y :1;
unsigned CCP4X :1;
};
} CCP4CONbits_t;
extern volatile CCP4CONbits_t CCP4CONbits @ 0xF73;

# 1771
extern volatile unsigned short CCPR4 @ 0xF74;

asm("CCPR4 equ 0F74h");



extern volatile unsigned char CCPR4L @ 0xF74;

asm("CCPR4L equ 0F74h");



extern volatile unsigned char CCPR4H @ 0xF75;

asm("CCPR4H equ 0F75h");



extern volatile unsigned char T4CON @ 0xF76;

asm("T4CON equ 0F76h");


typedef union {
struct {
unsigned T4CKPS :2;
unsigned TMR4ON :1;
unsigned T4OUTPS :4;
};
struct {
unsigned T4CKPS0 :1;
unsigned T4CKPS1 :1;
unsigned :1;
unsigned T4OUTPS0 :1;
unsigned T4OUTPS1 :1;
unsigned T4OUTPS2 :1;
unsigned T4OUTPS3 :1;
};
} T4CONbits_t;
extern volatile T4CONbits_t T4CONbits @ 0xF76;

# 1859
extern volatile unsigned char PR4 @ 0xF77;

asm("PR4 equ 0F77h");



extern volatile unsigned char TMR4 @ 0xF78;

asm("TMR4 equ 0F78h");



extern volatile unsigned char ECCP1DEL @ 0xF79;

asm("ECCP1DEL equ 0F79h");


typedef union {
struct {
unsigned PDC :7;
unsigned PRSEN :1;
};
struct {
unsigned PDC0 :1;
unsigned PDC1 :1;
unsigned PDC2 :1;
unsigned PDC3 :1;
unsigned PDC4 :1;
unsigned PDC5 :1;
unsigned PDC6 :1;
};
struct {
unsigned P1DC0 :1;
unsigned P1DC1 :1;
unsigned P1DC2 :1;
unsigned P1DC3 :1;
unsigned P1DC4 :1;
unsigned P1DC5 :1;
unsigned P1DC6 :1;
unsigned P1RSEN :1;
};
} ECCP1DELbits_t;
extern volatile ECCP1DELbits_t ECCP1DELbits @ 0xF79;

# 1990
extern volatile unsigned short ERDPT @ 0xF7A;

asm("ERDPT equ 0F7Ah");



extern volatile unsigned char ERDPTL @ 0xF7A;

asm("ERDPTL equ 0F7Ah");



extern volatile unsigned char ERDPTH @ 0xF7B;

asm("ERDPTH equ 0F7Bh");



extern volatile unsigned char BAUDCON1 @ 0xF7E;

asm("BAUDCON1 equ 0F7Eh");


extern volatile unsigned char BAUDCON @ 0xF7E;

asm("BAUDCON equ 0F7Eh");

extern volatile unsigned char BAUDCTL @ 0xF7E;

asm("BAUDCTL equ 0F7Eh");

extern volatile unsigned char BAUDCTL1 @ 0xF7E;

asm("BAUDCTL1 equ 0F7Eh");


typedef union {
struct {
unsigned ABDEN :1;
unsigned WUE :1;
unsigned :1;
unsigned BRG16 :1;
unsigned TXCKP :1;
unsigned RXDTP :1;
unsigned RCIDL :1;
unsigned ABDOVF :1;
};
struct {
unsigned :4;
unsigned SCKP :1;
unsigned :1;
unsigned RCMT :1;
};
struct {
unsigned ABDEN1 :1;
};
struct {
unsigned :7;
unsigned ABDOVF1 :1;
};
struct {
unsigned :3;
unsigned BRG161 :1;
};
struct {
unsigned :4;
unsigned CKTXP :1;
};
struct {
unsigned :5;
unsigned DTRXP :1;
};
struct {
unsigned :5;
unsigned DTRXP1 :1;
};
struct {
unsigned :6;
unsigned RCIDL1 :1;
};
struct {
unsigned :6;
unsigned RCMT1 :1;
};
struct {
unsigned :5;
unsigned RXDTP1 :1;
};
struct {
unsigned :4;
unsigned SCKP1 :1;
};
struct {
unsigned :4;
unsigned TXCKP1 :1;
};
struct {
unsigned :1;
unsigned WUE1 :1;
};
struct {
unsigned :5;
unsigned RXCKP :1;
};
struct {
unsigned :1;
unsigned W4E :1;
};
} BAUDCON1bits_t;
extern volatile BAUDCON1bits_t BAUDCON1bits @ 0xF7E;

# 2217
typedef union {
struct {
unsigned ABDEN :1;
unsigned WUE :1;
unsigned :1;
unsigned BRG16 :1;
unsigned TXCKP :1;
unsigned RXDTP :1;
unsigned RCIDL :1;
unsigned ABDOVF :1;
};
struct {
unsigned :4;
unsigned SCKP :1;
unsigned :1;
unsigned RCMT :1;
};
struct {
unsigned ABDEN1 :1;
};
struct {
unsigned :7;
unsigned ABDOVF1 :1;
};
struct {
unsigned :3;
unsigned BRG161 :1;
};
struct {
unsigned :4;
unsigned CKTXP :1;
};
struct {
unsigned :5;
unsigned DTRXP :1;
};
struct {
unsigned :5;
unsigned DTRXP1 :1;
};
struct {
unsigned :6;
unsigned RCIDL1 :1;
};
struct {
unsigned :6;
unsigned RCMT1 :1;
};
struct {
unsigned :5;
unsigned RXDTP1 :1;
};
struct {
unsigned :4;
unsigned SCKP1 :1;
};
struct {
unsigned :4;
unsigned TXCKP1 :1;
};
struct {
unsigned :1;
unsigned WUE1 :1;
};
struct {
unsigned :5;
unsigned RXCKP :1;
};
struct {
unsigned :1;
unsigned W4E :1;
};
} BAUDCONbits_t;
extern volatile BAUDCONbits_t BAUDCONbits @ 0xF7E;

# 2407
typedef union {
struct {
unsigned ABDEN :1;
unsigned WUE :1;
unsigned :1;
unsigned BRG16 :1;
unsigned TXCKP :1;
unsigned RXDTP :1;
unsigned RCIDL :1;
unsigned ABDOVF :1;
};
struct {
unsigned :4;
unsigned SCKP :1;
unsigned :1;
unsigned RCMT :1;
};
struct {
unsigned ABDEN1 :1;
};
struct {
unsigned :7;
unsigned ABDOVF1 :1;
};
struct {
unsigned :3;
unsigned BRG161 :1;
};
struct {
unsigned :4;
unsigned CKTXP :1;
};
struct {
unsigned :5;
unsigned DTRXP :1;
};
struct {
unsigned :5;
unsigned DTRXP1 :1;
};
struct {
unsigned :6;
unsigned RCIDL1 :1;
};
struct {
unsigned :6;
unsigned RCMT1 :1;
};
struct {
unsigned :5;
unsigned RXDTP1 :1;
};
struct {
unsigned :4;
unsigned SCKP1 :1;
};
struct {
unsigned :4;
unsigned TXCKP1 :1;
};
struct {
unsigned :1;
unsigned WUE1 :1;
};
struct {
unsigned :5;
unsigned RXCKP :1;
};
struct {
unsigned :1;
unsigned W4E :1;
};
} BAUDCTLbits_t;
extern volatile BAUDCTLbits_t BAUDCTLbits @ 0xF7E;

# 2597
typedef union {
struct {
unsigned ABDEN :1;
unsigned WUE :1;
unsigned :1;
unsigned BRG16 :1;
unsigned TXCKP :1;
unsigned RXDTP :1;
unsigned RCIDL :1;
unsigned ABDOVF :1;
};
struct {
unsigned :4;
unsigned SCKP :1;
unsigned :1;
unsigned RCMT :1;
};
struct {
unsigned ABDEN1 :1;
};
struct {
unsigned :7;
unsigned ABDOVF1 :1;
};
struct {
unsigned :3;
unsigned BRG161 :1;
};
struct {
unsigned :4;
unsigned CKTXP :1;
};
struct {
unsigned :5;
unsigned DTRXP :1;
};
struct {
unsigned :5;
unsigned DTRXP1 :1;
};
struct {
unsigned :6;
unsigned RCIDL1 :1;
};
struct {
unsigned :6;
unsigned RCMT1 :1;
};
struct {
unsigned :5;
unsigned RXDTP1 :1;
};
struct {
unsigned :4;
unsigned SCKP1 :1;
};
struct {
unsigned :4;
unsigned TXCKP1 :1;
};
struct {
unsigned :1;
unsigned WUE1 :1;
};
struct {
unsigned :5;
unsigned RXCKP :1;
};
struct {
unsigned :1;
unsigned W4E :1;
};
} BAUDCTL1bits_t;
extern volatile BAUDCTL1bits_t BAUDCTL1bits @ 0xF7E;

# 2789
extern volatile unsigned char SPBRGH1 @ 0xF7F;

asm("SPBRGH1 equ 0F7Fh");


extern volatile unsigned char SPBRGH @ 0xF7F;

asm("SPBRGH equ 0F7Fh");



extern volatile unsigned char PORTA @ 0xF80;

asm("PORTA equ 0F80h");


typedef union {
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
struct {
unsigned AN0 :1;
unsigned AN1 :1;
unsigned AN2 :1;
unsigned AN3 :1;
unsigned T0CKI :1;
unsigned AN4 :1;
};
struct {
unsigned LEDA :1;
unsigned LEDB :1;
unsigned VREFM :1;
unsigned VREFP :1;
};
struct {
unsigned :5;
unsigned LVDIN :1;
};
struct {
unsigned :6;
unsigned RA6 :1;
};
struct {
unsigned :7;
unsigned RA7 :1;
};
struct {
unsigned :7;
unsigned RJPU :1;
};
struct {
unsigned ULPWUIN :1;
};
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0xF80;

# 2957
extern volatile unsigned char PORTB @ 0xF81;

asm("PORTB equ 0F81h");


typedef union {
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
struct {
unsigned INT0 :1;
unsigned INT1 :1;
unsigned INT2 :1;
unsigned INT3 :1;
unsigned KBI0 :1;
unsigned KBI1 :1;
unsigned KBI2 :1;
unsigned KBI3 :1;
};
struct {
unsigned FLT0 :1;
unsigned :5;
unsigned PGC :1;
unsigned PGD :1;
};
struct {
unsigned :3;
unsigned CCP2_PA2 :1;
};
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits @ 0xF81;

# 3098
extern volatile unsigned char PORTC @ 0xF82;

asm("PORTC equ 0F82h");


typedef union {
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
struct {
unsigned T1OSO :1;
unsigned T1OSI :1;
unsigned CCP1 :1;
unsigned SCK :1;
unsigned SDI :1;
unsigned SDO :1;
unsigned TX :1;
unsigned RX :1;
};
struct {
unsigned T13CKI :1;
unsigned CCP2 :1;
unsigned :1;
unsigned SCL :1;
unsigned SDA :1;
unsigned :1;
unsigned CK :1;
unsigned DT :1;
};
struct {
unsigned :1;
unsigned ECCP2 :1;
unsigned ECCP1 :1;
unsigned SCK1 :1;
unsigned SDI1 :1;
unsigned SDO1 :1;
unsigned TX1 :1;
unsigned RX1 :1;
};
struct {
unsigned :3;
unsigned SCL1 :1;
unsigned SDA1 :1;
unsigned :1;
unsigned CK1 :1;
unsigned DT1 :1;
};
struct {
unsigned :2;
unsigned PA1 :1;
};
struct {
unsigned :1;
unsigned PA2 :1;
};
} PORTCbits_t;
extern volatile PORTCbits_t PORTCbits @ 0xF82;

# 3340
extern volatile unsigned char PORTD @ 0xF83;

asm("PORTD equ 0F83h");


typedef union {
struct {
unsigned RD0 :1;
unsigned RD1 :1;
unsigned RD2 :1;
};
struct {
unsigned :1;
unsigned CCP3 :1;
unsigned CCP4 :1;
};
struct {
unsigned :1;
unsigned ECCP3 :1;
};
struct {
unsigned :3;
unsigned RD3 :1;
};
struct {
unsigned :4;
unsigned RD4 :1;
};
struct {
unsigned :5;
unsigned RD5 :1;
};
struct {
unsigned :6;
unsigned RD6 :1;
};
struct {
unsigned :7;
unsigned RD7 :1;
};
struct {
unsigned :7;
unsigned SS2 :1;
};
} PORTDbits_t;
extern volatile PORTDbits_t PORTDbits @ 0xF83;

# 3449
extern volatile unsigned char PORTE @ 0xF84;

asm("PORTE equ 0F84h");


typedef union {
struct {
unsigned RE0 :1;
unsigned RE1 :1;
unsigned RE2 :1;
unsigned RE3 :1;
unsigned RE4 :1;
unsigned RE5 :1;
};
struct {
unsigned :2;
unsigned CCP10 :1;
};
struct {
unsigned :7;
unsigned CCP2E :1;
};
struct {
unsigned :6;
unsigned CCP6E :1;
};
struct {
unsigned :5;
unsigned CCP7E :1;
};
struct {
unsigned :4;
unsigned CCP8E :1;
};
struct {
unsigned :3;
unsigned CCP9E :1;
};
struct {
unsigned :2;
unsigned CS :1;
};
struct {
unsigned :7;
unsigned PA2E :1;
};
struct {
unsigned :6;
unsigned PB1E :1;
};
struct {
unsigned :2;
unsigned PB2 :1;
};
struct {
unsigned :4;
unsigned PB3E :1;
};
struct {
unsigned :5;
unsigned PC1E :1;
};
struct {
unsigned :1;
unsigned PC2 :1;
};
struct {
unsigned :3;
unsigned PC3E :1;
};
struct {
unsigned PD2 :1;
};
struct {
unsigned RDE :1;
};
struct {
unsigned :6;
unsigned RE6 :1;
};
struct {
unsigned :7;
unsigned RE7 :1;
};
struct {
unsigned :1;
unsigned WRE :1;
};
} PORTEbits_t;
extern volatile PORTEbits_t PORTEbits @ 0xF84;

# 3667
extern volatile unsigned char PORTF @ 0xF85;

asm("PORTF equ 0F85h");


typedef union {
struct {
unsigned :1;
unsigned RF1 :1;
unsigned RF2 :1;
unsigned RF3 :1;
unsigned RF4 :1;
unsigned RF5 :1;
unsigned RF6 :1;
unsigned RF7 :1;
};
struct {
unsigned :1;
unsigned AN6 :1;
unsigned AN7 :1;
unsigned AN8 :1;
unsigned AN9 :1;
unsigned AN10 :1;
unsigned AN11 :1;
unsigned SS :1;
};
struct {
unsigned :7;
unsigned NOT_SS :1;
};
struct {
unsigned :5;
unsigned CVREF :1;
unsigned :1;
unsigned nSS :1;
};
struct {
unsigned :7;
unsigned SS1 :1;
};
struct {
unsigned :7;
unsigned NOT_SS1 :1;
};
struct {
unsigned :7;
unsigned nSS1 :1;
};
struct {
unsigned :2;
unsigned C1OUTF :1;
};
struct {
unsigned :1;
unsigned C2OUTF :1;
};
struct {
unsigned RF0 :1;
};
} PORTFbits_t;
extern volatile PORTFbits_t PORTFbits @ 0xF85;

# 3846
extern volatile unsigned char PORTG @ 0xF86;

asm("PORTG equ 0F86h");


typedef union {
struct {
unsigned :4;
unsigned RG4 :1;
};
struct {
unsigned :4;
unsigned CCP5 :1;
};
struct {
unsigned :1;
unsigned C3OUTG :1;
};
struct {
unsigned RG0 :1;
};
struct {
unsigned :1;
unsigned RG1 :1;
};
struct {
unsigned :2;
unsigned RG2 :1;
};
struct {
unsigned :3;
unsigned RG3 :1;
};
struct {
unsigned :5;
unsigned RG5 :1;
};
struct {
unsigned :6;
unsigned RG6 :1;
};
struct {
unsigned :7;
unsigned RG7 :1;
};
struct {
unsigned :5;
unsigned RJPU :1;
};
} PORTGbits_t;
extern volatile PORTGbits_t PORTGbits @ 0xF86;

# 3955
extern volatile unsigned char LATA @ 0xF89;

asm("LATA equ 0F89h");


typedef union {
struct {
unsigned LATA0 :1;
unsigned LATA1 :1;
unsigned LATA2 :1;
unsigned LATA3 :1;
unsigned LATA4 :1;
unsigned LATA5 :1;
unsigned REPU :1;
unsigned RDPU :1;
};
struct {
unsigned LA0 :1;
};
struct {
unsigned :1;
unsigned LA1 :1;
};
struct {
unsigned :2;
unsigned LA2 :1;
};
struct {
unsigned :3;
unsigned LA3 :1;
};
struct {
unsigned :4;
unsigned LA4 :1;
};
struct {
unsigned :5;
unsigned LA5 :1;
};
struct {
unsigned :6;
unsigned LA6 :1;
};
struct {
unsigned :7;
unsigned LA7 :1;
};
struct {
unsigned :7;
unsigned LATA7 :1;
};
} LATAbits_t;
extern volatile LATAbits_t LATAbits @ 0xF89;

# 4096
extern volatile unsigned char LATB @ 0xF8A;

asm("LATB equ 0F8Ah");


typedef union {
struct {
unsigned LATB0 :1;
unsigned LATB1 :1;
unsigned LATB2 :1;
unsigned LATB3 :1;
unsigned LATB4 :1;
unsigned LATB5 :1;
unsigned LATB6 :1;
unsigned LATB7 :1;
};
struct {
unsigned LB0 :1;
};
struct {
unsigned :1;
unsigned LB1 :1;
};
struct {
unsigned :2;
unsigned LB2 :1;
};
struct {
unsigned :3;
unsigned LB3 :1;
};
struct {
unsigned :4;
unsigned LB4 :1;
};
struct {
unsigned :5;
unsigned LB5 :1;
};
struct {
unsigned :6;
unsigned LB6 :1;
};
struct {
unsigned :7;
unsigned LB7 :1;
};
} LATBbits_t;
extern volatile LATBbits_t LATBbits @ 0xF8A;

# 4228
extern volatile unsigned char LATC @ 0xF8B;

asm("LATC equ 0F8Bh");


typedef union {
struct {
unsigned LATC0 :1;
unsigned LATC1 :1;
unsigned LATC2 :1;
unsigned LATC3 :1;
unsigned LATC4 :1;
unsigned LATC5 :1;
unsigned LATC6 :1;
unsigned LATC7 :1;
};
struct {
unsigned LC0 :1;
};
struct {
unsigned :1;
unsigned LC1 :1;
};
struct {
unsigned :2;
unsigned LC2 :1;
};
struct {
unsigned :3;
unsigned LC3 :1;
};
struct {
unsigned :4;
unsigned LC4 :1;
};
struct {
unsigned :5;
unsigned LC5 :1;
};
struct {
unsigned :6;
unsigned LC6 :1;
};
struct {
unsigned :7;
unsigned LC7 :1;
};
} LATCbits_t;
extern volatile LATCbits_t LATCbits @ 0xF8B;

# 4360
extern volatile unsigned char LATD @ 0xF8C;

asm("LATD equ 0F8Ch");


typedef union {
struct {
unsigned LATD0 :1;
unsigned LATD1 :1;
unsigned LATD2 :1;
};
struct {
unsigned LD0 :1;
};
struct {
unsigned :1;
unsigned LD1 :1;
};
struct {
unsigned :2;
unsigned LD2 :1;
};
struct {
unsigned :3;
unsigned LD3 :1;
};
struct {
unsigned :4;
unsigned LD4 :1;
};
struct {
unsigned :5;
unsigned LD5 :1;
};
struct {
unsigned :6;
unsigned LD6 :1;
};
struct {
unsigned :7;
unsigned LD7 :1;
};
} LATDbits_t;
extern volatile LATDbits_t LATDbits @ 0xF8C;

# 4462
extern volatile unsigned char LATE @ 0xF8D;

asm("LATE equ 0F8Dh");


typedef union {
struct {
unsigned LATE0 :1;
unsigned LATE1 :1;
unsigned LATE2 :1;
unsigned LATE3 :1;
unsigned LATE4 :1;
unsigned LATE5 :1;
};
struct {
unsigned LE0 :1;
};
struct {
unsigned :1;
unsigned LE1 :1;
};
struct {
unsigned :2;
unsigned LE2 :1;
};
struct {
unsigned :3;
unsigned LE3 :1;
};
struct {
unsigned :4;
unsigned LE4 :1;
};
struct {
unsigned :5;
unsigned LE5 :1;
};
struct {
unsigned :6;
unsigned LE6 :1;
};
struct {
unsigned :7;
unsigned LE7 :1;
};
} LATEbits_t;
extern volatile LATEbits_t LATEbits @ 0xF8D;

# 4582
extern volatile unsigned char LATF @ 0xF8E;

asm("LATF equ 0F8Eh");


typedef union {
struct {
unsigned :1;
unsigned LATF1 :1;
unsigned LATF2 :1;
unsigned LATF3 :1;
unsigned LATF4 :1;
unsigned LATF5 :1;
unsigned LATF6 :1;
unsigned LATF7 :1;
};
struct {
unsigned LF0 :1;
};
struct {
unsigned :1;
unsigned LF1 :1;
};
struct {
unsigned :2;
unsigned LF2 :1;
};
struct {
unsigned :3;
unsigned LF3 :1;
};
struct {
unsigned :4;
unsigned LF4 :1;
};
struct {
unsigned :5;
unsigned LF5 :1;
};
struct {
unsigned :6;
unsigned LF6 :1;
};
struct {
unsigned :7;
unsigned LF7 :1;
};
} LATFbits_t;
extern volatile LATFbits_t LATFbits @ 0xF8E;

# 4709
extern volatile unsigned char LATG @ 0xF8F;

asm("LATG equ 0F8Fh");


typedef union {
struct {
unsigned :4;
unsigned LATG4 :1;
};
struct {
unsigned LG0 :1;
};
struct {
unsigned :1;
unsigned LG1 :1;
};
struct {
unsigned :2;
unsigned LG2 :1;
};
struct {
unsigned :3;
unsigned LG3 :1;
};
struct {
unsigned :4;
unsigned LG4 :1;
};
} LATGbits_t;
extern volatile LATGbits_t LATGbits @ 0xF8F;

# 4773
extern volatile unsigned char TRISA @ 0xF92;

asm("TRISA equ 0F92h");


extern volatile unsigned char DDRA @ 0xF92;

asm("DDRA equ 0F92h");


typedef union {
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
};
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0xF92;

# 4864
typedef union {
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
};
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
};
} DDRAbits_t;
extern volatile DDRAbits_t DDRAbits @ 0xF92;

# 4946
extern volatile unsigned char TRISB @ 0xF93;

asm("TRISB equ 0F93h");


extern volatile unsigned char DDRB @ 0xF93;

asm("DDRB equ 0F93h");


typedef union {
struct {
unsigned TRISB0 :1;
unsigned TRISB1 :1;
unsigned TRISB2 :1;
unsigned TRISB3 :1;
unsigned TRISB4 :1;
unsigned TRISB5 :1;
unsigned TRISB6 :1;
unsigned TRISB7 :1;
};
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits @ 0xF93;

# 5061
typedef union {
struct {
unsigned TRISB0 :1;
unsigned TRISB1 :1;
unsigned TRISB2 :1;
unsigned TRISB3 :1;
unsigned TRISB4 :1;
unsigned TRISB5 :1;
unsigned TRISB6 :1;
unsigned TRISB7 :1;
};
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
} DDRBbits_t;
extern volatile DDRBbits_t DDRBbits @ 0xF93;

# 5167
extern volatile unsigned char TRISC @ 0xF94;

asm("TRISC equ 0F94h");


extern volatile unsigned char DDRC @ 0xF94;

asm("DDRC equ 0F94h");


typedef union {
struct {
unsigned TRISC0 :1;
unsigned TRISC1 :1;
unsigned TRISC2 :1;
unsigned TRISC3 :1;
unsigned TRISC4 :1;
unsigned TRISC5 :1;
unsigned TRISC6 :1;
unsigned TRISC7 :1;
};
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
} TRISCbits_t;
extern volatile TRISCbits_t TRISCbits @ 0xF94;

# 5282
typedef union {
struct {
unsigned TRISC0 :1;
unsigned TRISC1 :1;
unsigned TRISC2 :1;
unsigned TRISC3 :1;
unsigned TRISC4 :1;
unsigned TRISC5 :1;
unsigned TRISC6 :1;
unsigned TRISC7 :1;
};
struct {
unsigned RC0 :1;
unsigned RC1 :1;
unsigned RC2 :1;
unsigned RC3 :1;
unsigned RC4 :1;
unsigned RC5 :1;
unsigned RC6 :1;
unsigned RC7 :1;
};
} DDRCbits_t;
extern volatile DDRCbits_t DDRCbits @ 0xF94;

# 5388
extern volatile unsigned char TRISD @ 0xF95;

asm("TRISD equ 0F95h");


extern volatile unsigned char DDRD @ 0xF95;

asm("DDRD equ 0F95h");


typedef union {
struct {
unsigned TRISD0 :1;
unsigned TRISD1 :1;
unsigned TRISD2 :1;
};
struct {
unsigned RD0 :1;
unsigned RD1 :1;
unsigned RD2 :1;
};
} TRISDbits_t;
extern volatile TRISDbits_t TRISDbits @ 0xF95;

# 5443
typedef union {
struct {
unsigned TRISD0 :1;
unsigned TRISD1 :1;
unsigned TRISD2 :1;
};
struct {
unsigned RD0 :1;
unsigned RD1 :1;
unsigned RD2 :1;
};
} DDRDbits_t;
extern volatile DDRDbits_t DDRDbits @ 0xF95;

# 5489
extern volatile unsigned char TRISE @ 0xF96;

asm("TRISE equ 0F96h");


extern volatile unsigned char DDRE @ 0xF96;

asm("DDRE equ 0F96h");


typedef union {
struct {
unsigned TRISE0 :1;
unsigned TRISE1 :1;
unsigned TRISE2 :1;
unsigned TRISE3 :1;
unsigned TRISE4 :1;
unsigned TRISE5 :1;
};
struct {
unsigned RE0 :1;
unsigned RE1 :1;
unsigned RE2 :1;
unsigned RE3 :1;
unsigned RE4 :1;
unsigned RE5 :1;
};
} TRISEbits_t;
extern volatile TRISEbits_t TRISEbits @ 0xF96;

# 5580
typedef union {
struct {
unsigned TRISE0 :1;
unsigned TRISE1 :1;
unsigned TRISE2 :1;
unsigned TRISE3 :1;
unsigned TRISE4 :1;
unsigned TRISE5 :1;
};
struct {
unsigned RE0 :1;
unsigned RE1 :1;
unsigned RE2 :1;
unsigned RE3 :1;
unsigned RE4 :1;
unsigned RE5 :1;
};
} DDREbits_t;
extern volatile DDREbits_t DDREbits @ 0xF96;

# 5662
extern volatile unsigned char TRISF @ 0xF97;

asm("TRISF equ 0F97h");


extern volatile unsigned char DDRF @ 0xF97;

asm("DDRF equ 0F97h");


typedef union {
struct {
unsigned :1;
unsigned TRISF1 :1;
unsigned TRISF2 :1;
unsigned TRISF3 :1;
unsigned TRISF4 :1;
unsigned TRISF5 :1;
unsigned TRISF6 :1;
unsigned TRISF7 :1;
};
struct {
unsigned :1;
unsigned RF1 :1;
unsigned RF2 :1;
unsigned RF3 :1;
unsigned RF4 :1;
unsigned RF5 :1;
unsigned RF6 :1;
unsigned RF7 :1;
};
} TRISFbits_t;
extern volatile TRISFbits_t TRISFbits @ 0xF97;

# 5767
typedef union {
struct {
unsigned :1;
unsigned TRISF1 :1;
unsigned TRISF2 :1;
unsigned TRISF3 :1;
unsigned TRISF4 :1;
unsigned TRISF5 :1;
unsigned TRISF6 :1;
unsigned TRISF7 :1;
};
struct {
unsigned :1;
unsigned RF1 :1;
unsigned RF2 :1;
unsigned RF3 :1;
unsigned RF4 :1;
unsigned RF5 :1;
unsigned RF6 :1;
unsigned RF7 :1;
};
} DDRFbits_t;
extern volatile DDRFbits_t DDRFbits @ 0xF97;

# 5863
extern volatile unsigned char TRISG @ 0xF98;

asm("TRISG equ 0F98h");


extern volatile unsigned char DDRG @ 0xF98;

asm("DDRG equ 0F98h");


typedef union {
struct {
unsigned :4;
unsigned TRISG4 :1;
};
struct {
unsigned :4;
unsigned RG4 :1;
};
} TRISGbits_t;
extern volatile TRISGbits_t TRISGbits @ 0xF98;

# 5896
typedef union {
struct {
unsigned :4;
unsigned TRISG4 :1;
};
struct {
unsigned :4;
unsigned RG4 :1;
};
} DDRGbits_t;
extern volatile DDRGbits_t DDRGbits @ 0xF98;

# 5920
extern volatile unsigned char OSCTUNE @ 0xF9B;

asm("OSCTUNE equ 0F9Bh");


typedef union {
struct {
unsigned :4;
unsigned PPRE :1;
unsigned PPST0 :1;
unsigned PLLEN :1;
unsigned PPST1 :1;
};
struct {
unsigned :4;
unsigned TUN4 :1;
};
struct {
unsigned :5;
unsigned TUN5 :1;
};
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0xF9B;

# 5976
extern volatile unsigned char PIE1 @ 0xF9D;

asm("PIE1 equ 0F9Dh");


typedef union {
struct {
unsigned TMR1IE :1;
unsigned TMR2IE :1;
unsigned CCP1IE :1;
unsigned SSP1IE :1;
unsigned TX1IE :1;
unsigned RC1IE :1;
unsigned ADIE :1;
};
struct {
unsigned :3;
unsigned SSPIE :1;
unsigned TXIE :1;
unsigned RCIE :1;
};
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0xF9D;

# 6052
extern volatile unsigned char PIR1 @ 0xF9E;

asm("PIR1 equ 0F9Eh");


typedef union {
struct {
unsigned TMR1IF :1;
unsigned TMR2IF :1;
unsigned CCP1IF :1;
unsigned SSP1IF :1;
unsigned TX1IF :1;
unsigned RC1IF :1;
unsigned ADIF :1;
};
struct {
unsigned :4;
unsigned TXIF :1;
unsigned RCIF :1;
};
struct {
unsigned :3;
unsigned SSPIF :1;
};
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0xF9E;

# 6131
extern volatile unsigned char IPR1 @ 0xF9F;

asm("IPR1 equ 0F9Fh");


typedef union {
struct {
unsigned TMR1IP :1;
unsigned TMR2IP :1;
unsigned CCP1IP :1;
unsigned SSP1IP :1;
unsigned TX1IP :1;
unsigned RC1IP :1;
unsigned ADIP :1;
};
struct {
unsigned :3;
unsigned SSPIP :1;
unsigned TXIP :1;
unsigned RCIP :1;
};
} IPR1bits_t;
extern volatile IPR1bits_t IPR1bits @ 0xF9F;

# 6207
extern volatile unsigned char PIE2 @ 0xFA0;

asm("PIE2 equ 0FA0h");


typedef union {
struct {
unsigned CCP2IE :1;
unsigned TMR3IE :1;
unsigned :1;
unsigned BCL1IE :1;
unsigned :1;
unsigned ETHIE :1;
unsigned CMIE :1;
unsigned OSCFIE :1;
};
struct {
unsigned :3;
unsigned BCLIE :1;
};
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0xFA0;

# 6267
extern volatile unsigned char PIR2 @ 0xFA1;

asm("PIR2 equ 0FA1h");


typedef union {
struct {
unsigned CCP2IF :1;
unsigned TMR3IF :1;
unsigned :1;
unsigned BCL1IF :1;
unsigned :1;
unsigned ETHIF :1;
unsigned CMIF :1;
unsigned OSCFIF :1;
};
struct {
unsigned :3;
unsigned BCLIF :1;
};
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0xFA1;

# 6327
extern volatile unsigned char IPR2 @ 0xFA2;

asm("IPR2 equ 0FA2h");


typedef union {
struct {
unsigned CCP2IP :1;
unsigned TMR3IP :1;
unsigned :1;
unsigned BCL1IP :1;
unsigned :1;
unsigned ETHIP :1;
unsigned CMIP :1;
unsigned OSCFIP :1;
};
struct {
unsigned :3;
unsigned BCLIP :1;
};
} IPR2bits_t;
extern volatile IPR2bits_t IPR2bits @ 0xFA2;

# 6387
extern volatile unsigned char PIE3 @ 0xFA3;

asm("PIE3 equ 0FA3h");


typedef union {
struct {
unsigned CCP3IE :1;
unsigned CCP4IE :1;
unsigned CCP5IE :1;
unsigned TMR4IE :1;
};
struct {
unsigned RXB0IE :1;
};
struct {
unsigned :1;
unsigned RXB1IE :1;
};
struct {
unsigned :1;
unsigned RXBNIE :1;
};
struct {
unsigned :2;
unsigned TXB0IE :1;
};
struct {
unsigned :3;
unsigned TXB1IE :1;
};
} PIE3bits_t;
extern volatile PIE3bits_t PIE3bits @ 0xFA3;

# 6468
extern volatile unsigned char PIR3 @ 0xFA4;

asm("PIR3 equ 0FA4h");


typedef union {
struct {
unsigned CCP3IF :1;
unsigned CCP4IF :1;
unsigned CCP5IF :1;
unsigned TMR4IF :1;
};
struct {
unsigned :1;
unsigned RXBNIF :1;
};
} PIR3bits_t;
extern volatile PIR3bits_t PIR3bits @ 0xFA4;

# 6514
extern volatile unsigned char IPR3 @ 0xFA5;

asm("IPR3 equ 0FA5h");


typedef union {
struct {
unsigned CCP3IP :1;
unsigned CCP4IP :1;
unsigned CCP5IP :1;
unsigned TMR4IP :1;
};
struct {
unsigned :1;
unsigned RXBNIP :1;
};
} IPR3bits_t;
extern volatile IPR3bits_t IPR3bits @ 0xFA5;

# 6560
extern volatile unsigned char EECON1 @ 0xFA6;

asm("EECON1 equ 0FA6h");


typedef union {
struct {
unsigned :1;
unsigned WR :1;
unsigned WREN :1;
unsigned WRERR :1;
unsigned FREE :1;
};
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits @ 0xFA6;

# 6598
extern volatile unsigned char EECON2 @ 0xFA7;

asm("EECON2 equ 0FA7h");



extern volatile unsigned char RCSTA1 @ 0xFAB;

asm("RCSTA1 equ 0FABh");


extern volatile unsigned char RCSTA @ 0xFAB;

asm("RCSTA equ 0FABh");


typedef union {
struct {
unsigned RX9D :1;
unsigned OERR :1;
unsigned FERR :1;
unsigned ADDEN :1;
unsigned CREN :1;
unsigned SREN :1;
unsigned RX9 :1;
unsigned SPEN :1;
};
struct {
unsigned RCD8 :1;
unsigned :5;
unsigned RC9 :1;
};
struct {
unsigned :6;
unsigned NOT_RC8 :1;
};
struct {
unsigned :6;
unsigned nRC8 :1;
};
struct {
unsigned :6;
unsigned RC8_9 :1;
};
struct {
unsigned RX9D1 :1;
unsigned OERR1 :1;
unsigned FERR1 :1;
unsigned ADDEN1 :1;
unsigned CREN1 :1;
unsigned SREN1 :1;
unsigned RX91 :1;
unsigned SPEN1 :1;
};
struct {
unsigned :5;
unsigned SRENA :1;
};
} RCSTA1bits_t;
extern volatile RCSTA1bits_t RCSTA1bits @ 0xFAB;

# 6770
typedef union {
struct {
unsigned RX9D :1;
unsigned OERR :1;
unsigned FERR :1;
unsigned ADDEN :1;
unsigned CREN :1;
unsigned SREN :1;
unsigned RX9 :1;
unsigned SPEN :1;
};
struct {
unsigned RCD8 :1;
unsigned :5;
unsigned RC9 :1;
};
struct {
unsigned :6;
unsigned NOT_RC8 :1;
};
struct {
unsigned :6;
unsigned nRC8 :1;
};
struct {
unsigned :6;
unsigned RC8_9 :1;
};
struct {
unsigned RX9D1 :1;
unsigned OERR1 :1;
unsigned FERR1 :1;
unsigned ADDEN1 :1;
unsigned CREN1 :1;
unsigned SREN1 :1;
unsigned RX91 :1;
unsigned SPEN1 :1;
};
struct {
unsigned :5;
unsigned SRENA :1;
};
} RCSTAbits_t;
extern volatile RCSTAbits_t RCSTAbits @ 0xFAB;

# 6927
extern volatile unsigned char TXSTA1 @ 0xFAC;

asm("TXSTA1 equ 0FACh");


extern volatile unsigned char TXSTA @ 0xFAC;

asm("TXSTA equ 0FACh");


typedef union {
struct {
unsigned TX9D :1;
unsigned TRMT :1;
unsigned BRGH :1;
unsigned SENDB :1;
unsigned SYNC :1;
unsigned TXEN :1;
unsigned TX9 :1;
unsigned CSRC :1;
};
struct {
unsigned TXD8 :1;
unsigned :5;
unsigned TX8_9 :1;
};
struct {
unsigned :6;
unsigned NOT_TX8 :1;
};
struct {
unsigned :6;
unsigned nTX8 :1;
};
struct {
unsigned TX9D1 :1;
unsigned TRMT1 :1;
unsigned BRGH1 :1;
unsigned SENDB1 :1;
unsigned SYNC1 :1;
unsigned TXEN1 :1;
unsigned TX91 :1;
unsigned CSRC1 :1;
};
} TXSTA1bits_t;
extern volatile TXSTA1bits_t TXSTA1bits @ 0xFAC;

# 7075
typedef union {
struct {
unsigned TX9D :1;
unsigned TRMT :1;
unsigned BRGH :1;
unsigned SENDB :1;
unsigned SYNC :1;
unsigned TXEN :1;
unsigned TX9 :1;
unsigned CSRC :1;
};
struct {
unsigned TXD8 :1;
unsigned :5;
unsigned TX8_9 :1;
};
struct {
unsigned :6;
unsigned NOT_TX8 :1;
};
struct {
unsigned :6;
unsigned nTX8 :1;
};
struct {
unsigned TX9D1 :1;
unsigned TRMT1 :1;
unsigned BRGH1 :1;
unsigned SENDB1 :1;
unsigned SYNC1 :1;
unsigned TXEN1 :1;
unsigned TX91 :1;
unsigned CSRC1 :1;
};
} TXSTAbits_t;
extern volatile TXSTAbits_t TXSTAbits @ 0xFAC;

# 7214
extern volatile unsigned char TXREG1 @ 0xFAD;

asm("TXREG1 equ 0FADh");


extern volatile unsigned char TXREG @ 0xFAD;

asm("TXREG equ 0FADh");



extern volatile unsigned char RCREG1 @ 0xFAE;

asm("RCREG1 equ 0FAEh");


extern volatile unsigned char RCREG @ 0xFAE;

asm("RCREG equ 0FAEh");



extern volatile unsigned char SPBRG1 @ 0xFAF;

asm("SPBRG1 equ 0FAFh");


extern volatile unsigned char SPBRG @ 0xFAF;

asm("SPBRG equ 0FAFh");



extern volatile unsigned char T3CON @ 0xFB1;

asm("T3CON equ 0FB1h");


typedef union {
struct {
unsigned :2;
unsigned NOT_T3SYNC :1;
};
struct {
unsigned TMR3ON :1;
unsigned TMR3CS :1;
unsigned nT3SYNC :1;
unsigned T3CCP1 :1;
unsigned T3CKPS :2;
unsigned T3CCP2 :1;
unsigned RD16 :1;
};
struct {
unsigned :2;
unsigned T3SYNC :1;
unsigned :1;
unsigned T3CKPS0 :1;
unsigned T3CKPS1 :1;
};
struct {
unsigned :2;
unsigned T3INSYNC :1;
};
struct {
unsigned :7;
unsigned RD163 :1;
};
struct {
unsigned :3;
unsigned SOSCEN3 :1;
};
struct {
unsigned :7;
unsigned T3RD16 :1;
};
} T3CONbits_t;
extern volatile T3CONbits_t T3CONbits @ 0xFB1;

# 7369
extern volatile unsigned short TMR3 @ 0xFB2;

asm("TMR3 equ 0FB2h");



extern volatile unsigned char TMR3L @ 0xFB2;

asm("TMR3L equ 0FB2h");



extern volatile unsigned char TMR3H @ 0xFB3;

asm("TMR3H equ 0FB3h");



extern volatile unsigned char CMCON @ 0xFB4;

asm("CMCON equ 0FB4h");


typedef union {
struct {
unsigned CM :3;
unsigned CIS :1;
unsigned C1INV :1;
unsigned C2INV :1;
unsigned C1OUT :1;
unsigned C2OUT :1;
};
struct {
unsigned CM0 :1;
unsigned CM1 :1;
unsigned CM2 :1;
};
struct {
unsigned CMEN0 :1;
};
struct {
unsigned :1;
unsigned CMEN1 :1;
};
struct {
unsigned :2;
unsigned CMEN2 :1;
};
} CMCONbits_t;
extern volatile CMCONbits_t CMCONbits @ 0xFB4;

# 7482
extern volatile unsigned char CVRCON @ 0xFB5;

asm("CVRCON equ 0FB5h");


typedef union {
struct {
unsigned CVR :4;
unsigned CVRSS :1;
unsigned CVRR :1;
unsigned CVROE :1;
unsigned CVREN :1;
};
struct {
unsigned CVR0 :1;
unsigned CVR1 :1;
unsigned CVR2 :1;
unsigned CVR3 :1;
};
struct {
unsigned :6;
unsigned CVROEN :1;
};
} CVRCONbits_t;
extern volatile CVRCONbits_t CVRCONbits @ 0xFB5;

# 7560
extern volatile unsigned char ECCP1AS @ 0xFB6;

asm("ECCP1AS equ 0FB6h");


typedef union {
struct {
unsigned PSSBD :2;
unsigned PSSAC :2;
unsigned ECCPAS :3;
unsigned ECCPASE :1;
};
struct {
unsigned PSSBD0 :1;
unsigned PSSBD1 :1;
unsigned PSSAC0 :1;
unsigned PSSAC1 :1;
unsigned ECCPAS0 :1;
unsigned ECCPAS1 :1;
unsigned ECCPAS2 :1;
};
struct {
unsigned PSS1BD0 :1;
unsigned PSS1BD1 :1;
unsigned PSS1AC0 :1;
unsigned PSS1AC1 :1;
unsigned ECCP1AS0 :1;
unsigned ECCP1AS1 :1;
unsigned ECCP1AS2 :1;
unsigned ECCP1ASE :1;
};
} ECCP1ASbits_t;
extern volatile ECCP1ASbits_t ECCP1ASbits @ 0xFB6;

# 7691
extern volatile unsigned char CCP3CON @ 0xFB7;

asm("CCP3CON equ 0FB7h");


extern volatile unsigned char ECCP3CON @ 0xFB7;

asm("ECCP3CON equ 0FB7h");


typedef union {
struct {
unsigned CCP3M :4;
unsigned DC3B :2;
unsigned P3M :2;
};
struct {
unsigned CCP3M0 :1;
unsigned CCP3M1 :1;
unsigned CCP3M2 :1;
unsigned CCP3M3 :1;
unsigned DC3B0 :1;
unsigned DC3B1 :1;
unsigned P3M0 :1;
unsigned P3M1 :1;
};
struct {
unsigned :4;
unsigned CCP3Y :1;
unsigned CCP3X :1;
};
} CCP3CONbits_t;
extern volatile CCP3CONbits_t CCP3CONbits @ 0xFB7;

# 7791
typedef union {
struct {
unsigned CCP3M :4;
unsigned DC3B :2;
unsigned P3M :2;
};
struct {
unsigned CCP3M0 :1;
unsigned CCP3M1 :1;
unsigned CCP3M2 :1;
unsigned CCP3M3 :1;
unsigned DC3B0 :1;
unsigned DC3B1 :1;
unsigned P3M0 :1;
unsigned P3M1 :1;
};
struct {
unsigned :4;
unsigned CCP3Y :1;
unsigned CCP3X :1;
};
} ECCP3CONbits_t;
extern volatile ECCP3CONbits_t ECCP3CONbits @ 0xFB7;

# 7882
extern volatile unsigned short CCPR3 @ 0xFB8;

asm("CCPR3 equ 0FB8h");



extern volatile unsigned char CCPR3L @ 0xFB8;

asm("CCPR3L equ 0FB8h");



extern volatile unsigned char CCPR3H @ 0xFB9;

asm("CCPR3H equ 0FB9h");



extern volatile unsigned char CCP2CON @ 0xFBA;

asm("CCP2CON equ 0FBAh");


extern volatile unsigned char ECCP2CON @ 0xFBA;

asm("ECCP2CON equ 0FBAh");


typedef union {
struct {
unsigned CCP2M :4;
unsigned DC2B :2;
unsigned P2M :2;
};
struct {
unsigned CCP2M0 :1;
unsigned CCP2M1 :1;
unsigned CCP2M2 :1;
unsigned CCP2M3 :1;
unsigned DC2B0 :1;
unsigned DC2B1 :1;
unsigned P2M0 :1;
unsigned P2M1 :1;
};
struct {
unsigned :4;
unsigned CCP2Y :1;
unsigned CCP2X :1;
};
} CCP2CONbits_t;
extern volatile CCP2CONbits_t CCP2CONbits @ 0xFBA;

# 8000
typedef union {
struct {
unsigned CCP2M :4;
unsigned DC2B :2;
unsigned P2M :2;
};
struct {
unsigned CCP2M0 :1;
unsigned CCP2M1 :1;
unsigned CCP2M2 :1;
unsigned CCP2M3 :1;
unsigned DC2B0 :1;
unsigned DC2B1 :1;
unsigned P2M0 :1;
unsigned P2M1 :1;
};
struct {
unsigned :4;
unsigned CCP2Y :1;
unsigned CCP2X :1;
};
} ECCP2CONbits_t;
extern volatile ECCP2CONbits_t ECCP2CONbits @ 0xFBA;

# 8091
extern volatile unsigned short CCPR2 @ 0xFBB;

asm("CCPR2 equ 0FBBh");



extern volatile unsigned char CCPR2L @ 0xFBB;

asm("CCPR2L equ 0FBBh");



extern volatile unsigned char CCPR2H @ 0xFBC;

asm("CCPR2H equ 0FBCh");



extern volatile unsigned char CCP1CON @ 0xFBD;

asm("CCP1CON equ 0FBDh");


extern volatile unsigned char ECCP1CON @ 0xFBD;

asm("ECCP1CON equ 0FBDh");


typedef union {
struct {
unsigned CCP1M :4;
unsigned DC1B :2;
unsigned P1M :2;
};
struct {
unsigned CCP1M0 :1;
unsigned CCP1M1 :1;
unsigned CCP1M2 :1;
unsigned CCP1M3 :1;
unsigned DC1B0 :1;
unsigned DC1B1 :1;
unsigned P1M0 :1;
unsigned P1M1 :1;
};
struct {
unsigned :4;
unsigned CCP1Y :1;
unsigned CCP1X :1;
};
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits @ 0xFBD;

# 8209
typedef union {
struct {
unsigned CCP1M :4;
unsigned DC1B :2;
unsigned P1M :2;
};
struct {
unsigned CCP1M0 :1;
unsigned CCP1M1 :1;
unsigned CCP1M2 :1;
unsigned CCP1M3 :1;
unsigned DC1B0 :1;
unsigned DC1B1 :1;
unsigned P1M0 :1;
unsigned P1M1 :1;
};
struct {
unsigned :4;
unsigned CCP1Y :1;
unsigned CCP1X :1;
};
} ECCP1CONbits_t;
extern volatile ECCP1CONbits_t ECCP1CONbits @ 0xFBD;

# 8300
extern volatile unsigned short CCPR1 @ 0xFBE;

asm("CCPR1 equ 0FBEh");



extern volatile unsigned char CCPR1L @ 0xFBE;

asm("CCPR1L equ 0FBEh");



extern volatile unsigned char CCPR1H @ 0xFBF;

asm("CCPR1H equ 0FBFh");



extern volatile unsigned char ADCON2 @ 0xFC0;

asm("ADCON2 equ 0FC0h");


typedef union {
struct {
unsigned ADCS :3;
unsigned ACQT :3;
unsigned :1;
unsigned ADFM :1;
};
struct {
unsigned ADCS0 :1;
unsigned ADCS1 :1;
unsigned ADCS2 :1;
unsigned ACQT0 :1;
unsigned ACQT1 :1;
unsigned ACQT2 :1;
};
} ADCON2bits_t;
extern volatile ADCON2bits_t ADCON2bits @ 0xFC0;

# 8388
extern volatile unsigned char ADCON1 @ 0xFC1;

asm("ADCON1 equ 0FC1h");


typedef union {
struct {
unsigned PCFG :4;
unsigned VCFG :2;
};
struct {
unsigned PCFG0 :1;
unsigned PCFG1 :1;
unsigned PCFG2 :1;
unsigned PCFG3 :1;
unsigned VCFG0 :1;
unsigned VCFG1 :1;
};
struct {
unsigned :3;
unsigned CHSN3 :1;
};
struct {
unsigned :4;
unsigned VCFG01 :1;
};
struct {
unsigned :5;
unsigned VCFG11 :1;
};
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits @ 0xFC1;

# 8478
extern volatile unsigned char ADCON0 @ 0xFC2;

asm("ADCON0 equ 0FC2h");


typedef union {
struct {
unsigned :1;
unsigned GO_NOT_DONE :1;
};
struct {
unsigned ADON :1;
unsigned GO_nDONE :1;
unsigned CHS :4;
};
struct {
unsigned :1;
unsigned GO_NOT_DONE :1;
};
struct {
unsigned :1;
unsigned DONE :1;
unsigned CHS0 :1;
unsigned CHS1 :1;
unsigned CHS2 :1;
unsigned CHS3 :1;
unsigned :1;
unsigned ADCAL :1;
};
struct {
unsigned :1;
unsigned GO_DONE :1;
};
struct {
unsigned :1;
unsigned GO :1;
};
struct {
unsigned :1;
unsigned NOT_DONE :1;
};
struct {
unsigned :1;
unsigned nDONE :1;
};
struct {
unsigned :1;
unsigned GODONE :1;
};
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0xFC2;

# 8607
extern volatile unsigned short ADRES @ 0xFC3;

asm("ADRES equ 0FC3h");



extern volatile unsigned char ADRESL @ 0xFC3;

asm("ADRESL equ 0FC3h");



extern volatile unsigned char ADRESH @ 0xFC4;

asm("ADRESH equ 0FC4h");



extern volatile unsigned char SSP1CON2 @ 0xFC5;

asm("SSP1CON2 equ 0FC5h");


extern volatile unsigned char SSPCON2 @ 0xFC5;

asm("SSPCON2 equ 0FC5h");


typedef union {
struct {
unsigned SEN :1;
unsigned RSEN :1;
unsigned PEN :1;
unsigned RCEN :1;
unsigned ACKEN :1;
unsigned ACKDT :1;
unsigned ACKSTAT :1;
unsigned GCEN :1;
};
struct {
unsigned :1;
unsigned ADMSK1 :1;
unsigned ADMSK2 :1;
unsigned ADMSK3 :1;
unsigned ADMSK4 :1;
unsigned ADMSK5 :1;
};
struct {
unsigned :1;
unsigned ADMSK :5;
};
struct {
unsigned :5;
unsigned ACKDT1 :1;
};
struct {
unsigned :4;
unsigned ACKEN1 :1;
};
struct {
unsigned :6;
unsigned ACKSTAT1 :1;
};
struct {
unsigned :1;
unsigned ADMSK11 :1;
};
struct {
unsigned :2;
unsigned ADMSK21 :1;
};
struct {
unsigned :3;
unsigned ADMSK31 :1;
};
struct {
unsigned :4;
unsigned ADMSK41 :1;
};
struct {
unsigned :5;
unsigned ADMSK51 :1;
};
struct {
unsigned :7;
unsigned GCEN1 :1;
};
struct {
unsigned :2;
unsigned PEN1 :1;
};
struct {
unsigned :3;
unsigned RCEN1 :1;
};
struct {
unsigned :1;
unsigned RSEN1 :1;
};
struct {
unsigned SEN1 :1;
};
} SSP1CON2bits_t;
extern volatile SSP1CON2bits_t SSP1CON2bits @ 0xFC5;

# 8848
typedef union {
struct {
unsigned SEN :1;
unsigned RSEN :1;
unsigned PEN :1;
unsigned RCEN :1;
unsigned ACKEN :1;
unsigned ACKDT :1;
unsigned ACKSTAT :1;
unsigned GCEN :1;
};
struct {
unsigned :1;
unsigned ADMSK1 :1;
unsigned ADMSK2 :1;
unsigned ADMSK3 :1;
unsigned ADMSK4 :1;
unsigned ADMSK5 :1;
};
struct {
unsigned :1;
unsigned ADMSK :5;
};
struct {
unsigned :5;
unsigned ACKDT1 :1;
};
struct {
unsigned :4;
unsigned ACKEN1 :1;
};
struct {
unsigned :6;
unsigned ACKSTAT1 :1;
};
struct {
unsigned :1;
unsigned ADMSK11 :1;
};
struct {
unsigned :2;
unsigned ADMSK21 :1;
};
struct {
unsigned :3;
unsigned ADMSK31 :1;
};
struct {
unsigned :4;
unsigned ADMSK41 :1;
};
struct {
unsigned :5;
unsigned ADMSK51 :1;
};
struct {
unsigned :7;
unsigned GCEN1 :1;
};
struct {
unsigned :2;
unsigned PEN1 :1;
};
struct {
unsigned :3;
unsigned RCEN1 :1;
};
struct {
unsigned :1;
unsigned RSEN1 :1;
};
struct {
unsigned SEN1 :1;
};
} SSPCON2bits_t;
extern volatile SSPCON2bits_t SSPCON2bits @ 0xFC5;

# 9062
extern volatile unsigned char SSP1CON1 @ 0xFC6;

asm("SSP1CON1 equ 0FC6h");


extern volatile unsigned char SSPCON1 @ 0xFC6;

asm("SSPCON1 equ 0FC6h");


typedef union {
struct {
unsigned SSPM :4;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM0 :1;
unsigned SSPM1 :1;
unsigned SSPM2 :1;
unsigned SSPM3 :1;
};
struct {
unsigned :4;
unsigned CKP1 :1;
};
struct {
unsigned :5;
unsigned SSPEN1 :1;
};
struct {
unsigned SSPM01 :1;
};
struct {
unsigned :1;
unsigned SSPM11 :1;
};
struct {
unsigned :2;
unsigned SSPM21 :1;
};
struct {
unsigned :3;
unsigned SSPM31 :1;
};
struct {
unsigned :6;
unsigned SSPOV1 :1;
};
struct {
unsigned :7;
unsigned WCOL1 :1;
};
} SSP1CON1bits_t;
extern volatile SSP1CON1bits_t SSP1CON1bits @ 0xFC6;

# 9206
typedef union {
struct {
unsigned SSPM :4;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM0 :1;
unsigned SSPM1 :1;
unsigned SSPM2 :1;
unsigned SSPM3 :1;
};
struct {
unsigned :4;
unsigned CKP1 :1;
};
struct {
unsigned :5;
unsigned SSPEN1 :1;
};
struct {
unsigned SSPM01 :1;
};
struct {
unsigned :1;
unsigned SSPM11 :1;
};
struct {
unsigned :2;
unsigned SSPM21 :1;
};
struct {
unsigned :3;
unsigned SSPM31 :1;
};
struct {
unsigned :6;
unsigned SSPOV1 :1;
};
struct {
unsigned :7;
unsigned WCOL1 :1;
};
} SSPCON1bits_t;
extern volatile SSPCON1bits_t SSPCON1bits @ 0xFC6;

# 9341
extern volatile unsigned char SSP1STAT @ 0xFC7;

asm("SSP1STAT equ 0FC7h");


extern volatile unsigned char SSPSTAT @ 0xFC7;

asm("SSPSTAT equ 0FC7h");


typedef union {
struct {
unsigned :2;
unsigned R_NOT_W :1;
};
struct {
unsigned :5;
unsigned D_NOT_A :1;
};
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
struct {
unsigned :2;
unsigned R_NOT_W :1;
};
struct {
unsigned :5;
unsigned D_NOT_A :1;
};
struct {
unsigned :2;
unsigned R_W :1;
unsigned :2;
unsigned D_A :1;
};
struct {
unsigned :2;
unsigned I2C_READ :1;
unsigned I2C_START :1;
unsigned I2C_STOP :1;
unsigned I2C_DAT :1;
};
struct {
unsigned :2;
unsigned nW :1;
unsigned :2;
unsigned nA :1;
};
struct {
unsigned :2;
unsigned NOT_WRITE :1;
};
struct {
unsigned :5;
unsigned NOT_ADDRESS :1;
};
struct {
unsigned :2;
unsigned nWRITE :1;
unsigned :2;
unsigned nADDRESS :1;
};
struct {
unsigned :2;
unsigned READ_WRITE :1;
unsigned :2;
unsigned DATA_ADDRESS :1;
};
struct {
unsigned :2;
unsigned R :1;
unsigned :2;
unsigned D :1;
};
struct {
unsigned BF1 :1;
};
struct {
unsigned :6;
unsigned CKE1 :1;
};
struct {
unsigned :5;
unsigned DA :1;
};
struct {
unsigned :5;
unsigned DA1 :1;
};
struct {
unsigned :2;
unsigned RW :1;
};
struct {
unsigned :2;
unsigned RW1 :1;
};
struct {
unsigned :7;
unsigned SMP1 :1;
};
struct {
unsigned :3;
unsigned START :1;
};
struct {
unsigned :3;
unsigned START1 :1;
};
struct {
unsigned :4;
unsigned STOP :1;
};
struct {
unsigned :4;
unsigned STOP1 :1;
};
struct {
unsigned :1;
unsigned UA1 :1;
};
struct {
unsigned :2;
unsigned NOT_W :1;
};
struct {
unsigned :5;
unsigned NOT_A :1;
};
} SSP1STATbits_t;
extern volatile SSP1STATbits_t SSP1STATbits @ 0xFC7;

# 9682
typedef union {
struct {
unsigned :2;
unsigned R_NOT_W :1;
};
struct {
unsigned :5;
unsigned D_NOT_A :1;
};
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
struct {
unsigned :2;
unsigned R_NOT_W :1;
};
struct {
unsigned :5;
unsigned D_NOT_A :1;
};
struct {
unsigned :2;
unsigned R_W :1;
unsigned :2;
unsigned D_A :1;
};
struct {
unsigned :2;
unsigned I2C_READ :1;
unsigned I2C_START :1;
unsigned I2C_STOP :1;
unsigned I2C_DAT :1;
};
struct {
unsigned :2;
unsigned nW :1;
unsigned :2;
unsigned nA :1;
};
struct {
unsigned :2;
unsigned NOT_WRITE :1;
};
struct {
unsigned :5;
unsigned NOT_ADDRESS :1;
};
struct {
unsigned :2;
unsigned nWRITE :1;
unsigned :2;
unsigned nADDRESS :1;
};
struct {
unsigned :2;
unsigned READ_WRITE :1;
unsigned :2;
unsigned DATA_ADDRESS :1;
};
struct {
unsigned :2;
unsigned R :1;
unsigned :2;
unsigned D :1;
};
struct {
unsigned BF1 :1;
};
struct {
unsigned :6;
unsigned CKE1 :1;
};
struct {
unsigned :5;
unsigned DA :1;
};
struct {
unsigned :5;
unsigned DA1 :1;
};
struct {
unsigned :2;
unsigned RW :1;
};
struct {
unsigned :2;
unsigned RW1 :1;
};
struct {
unsigned :7;
unsigned SMP1 :1;
};
struct {
unsigned :3;
unsigned START :1;
};
struct {
unsigned :3;
unsigned START1 :1;
};
struct {
unsigned :4;
unsigned STOP :1;
};
struct {
unsigned :4;
unsigned STOP1 :1;
};
struct {
unsigned :1;
unsigned UA1 :1;
};
struct {
unsigned :2;
unsigned NOT_W :1;
};
struct {
unsigned :5;
unsigned NOT_A :1;
};
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0xFC7;

# 10014
extern volatile unsigned char SSP1ADD @ 0xFC8;

asm("SSP1ADD equ 0FC8h");


extern volatile unsigned char SSPADD @ 0xFC8;

asm("SSPADD equ 0FC8h");


typedef union {
struct {
unsigned MSK0 :1;
};
struct {
unsigned MSK01 :1;
};
struct {
unsigned :1;
unsigned MSK1 :1;
};
struct {
unsigned :1;
unsigned MSK11 :1;
};
struct {
unsigned :2;
unsigned MSK2 :1;
};
struct {
unsigned :2;
unsigned MSK21 :1;
};
struct {
unsigned :3;
unsigned MSK3 :1;
};
struct {
unsigned :3;
unsigned MSK31 :1;
};
struct {
unsigned :4;
unsigned MSK4 :1;
};
struct {
unsigned :4;
unsigned MSK41 :1;
};
struct {
unsigned :5;
unsigned MSK5 :1;
};
struct {
unsigned :5;
unsigned MSK51 :1;
};
struct {
unsigned :6;
unsigned MSK6 :1;
};
struct {
unsigned :6;
unsigned MSK61 :1;
};
struct {
unsigned :7;
unsigned MSK7 :1;
};
struct {
unsigned :7;
unsigned MSK71 :1;
};
} SSP1ADDbits_t;
extern volatile SSP1ADDbits_t SSP1ADDbits @ 0xFC8;

# 10171
typedef union {
struct {
unsigned MSK0 :1;
};
struct {
unsigned MSK01 :1;
};
struct {
unsigned :1;
unsigned MSK1 :1;
};
struct {
unsigned :1;
unsigned MSK11 :1;
};
struct {
unsigned :2;
unsigned MSK2 :1;
};
struct {
unsigned :2;
unsigned MSK21 :1;
};
struct {
unsigned :3;
unsigned MSK3 :1;
};
struct {
unsigned :3;
unsigned MSK31 :1;
};
struct {
unsigned :4;
unsigned MSK4 :1;
};
struct {
unsigned :4;
unsigned MSK41 :1;
};
struct {
unsigned :5;
unsigned MSK5 :1;
};
struct {
unsigned :5;
unsigned MSK51 :1;
};
struct {
unsigned :6;
unsigned MSK6 :1;
};
struct {
unsigned :6;
unsigned MSK61 :1;
};
struct {
unsigned :7;
unsigned MSK7 :1;
};
struct {
unsigned :7;
unsigned MSK71 :1;
};
} SSPADDbits_t;
extern volatile SSPADDbits_t SSPADDbits @ 0xFC8;

# 10319
extern volatile unsigned char SSP1BUF @ 0xFC9;

asm("SSP1BUF equ 0FC9h");


extern volatile unsigned char SSPBUF @ 0xFC9;

asm("SSPBUF equ 0FC9h");



extern volatile unsigned char T2CON @ 0xFCA;

asm("T2CON equ 0FCAh");


typedef union {
struct {
unsigned T2CKPS :2;
unsigned TMR2ON :1;
unsigned TOUTPS :4;
};
struct {
unsigned T2CKPS0 :1;
unsigned T2CKPS1 :1;
unsigned :1;
unsigned T2OUTPS0 :1;
unsigned T2OUTPS1 :1;
unsigned T2OUTPS2 :1;
unsigned T2OUTPS3 :1;
};
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0xFCA;

# 10400
extern volatile unsigned char PR2 @ 0xFCB;

asm("PR2 equ 0FCBh");


extern volatile unsigned char MEMCON @ 0xFCB;

asm("MEMCON equ 0FCBh");


typedef union {
struct {
unsigned :7;
unsigned EBDIS :1;
};
struct {
unsigned :4;
unsigned WAIT0 :1;
};
struct {
unsigned :5;
unsigned WAIT1 :1;
};
struct {
unsigned WM0 :1;
};
struct {
unsigned :1;
unsigned WM1 :1;
};
} PR2bits_t;
extern volatile PR2bits_t PR2bits @ 0xFCB;

# 10459
typedef union {
struct {
unsigned :7;
unsigned EBDIS :1;
};
struct {
unsigned :4;
unsigned WAIT0 :1;
};
struct {
unsigned :5;
unsigned WAIT1 :1;
};
struct {
unsigned WM0 :1;
};
struct {
unsigned :1;
unsigned WM1 :1;
};
} MEMCONbits_t;
extern volatile MEMCONbits_t MEMCONbits @ 0xFCB;

# 10509
extern volatile unsigned char TMR2 @ 0xFCC;

asm("TMR2 equ 0FCCh");



extern volatile unsigned char T1CON @ 0xFCD;

asm("T1CON equ 0FCDh");


typedef union {
struct {
unsigned :2;
unsigned NOT_T1SYNC :1;
};
struct {
unsigned TMR1ON :1;
unsigned TMR1CS :1;
unsigned nT1SYNC :1;
unsigned T1OSCEN :1;
unsigned T1CKPS :2;
unsigned T1RUN :1;
unsigned RD16 :1;
};
struct {
unsigned :2;
unsigned T1SYNC :1;
unsigned :1;
unsigned T1CKPS0 :1;
unsigned T1CKPS1 :1;
};
struct {
unsigned :2;
unsigned T1INSYNC :1;
};
struct {
unsigned :3;
unsigned SOSCEN :1;
};
struct {
unsigned :7;
unsigned T1RD16 :1;
};
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0xFCD;

# 10628
extern volatile unsigned short TMR1 @ 0xFCE;

asm("TMR1 equ 0FCEh");



extern volatile unsigned char TMR1L @ 0xFCE;

asm("TMR1L equ 0FCEh");



extern volatile unsigned char TMR1H @ 0xFCF;

asm("TMR1H equ 0FCFh");



extern volatile unsigned char RCON @ 0xFD0;

asm("RCON equ 0FD0h");


typedef union {
struct {
unsigned NOT_BOR :1;
};
struct {
unsigned :1;
unsigned NOT_POR :1;
};
struct {
unsigned :2;
unsigned NOT_PD :1;
};
struct {
unsigned :3;
unsigned NOT_TO :1;
};
struct {
unsigned :4;
unsigned NOT_RI :1;
};
struct {
unsigned nBOR :1;
unsigned nPOR :1;
unsigned nPD :1;
unsigned nTO :1;
unsigned nRI :1;
unsigned :2;
unsigned IPEN :1;
};
struct {
unsigned BOR :1;
unsigned POR :1;
unsigned PD :1;
unsigned TO :1;
unsigned RI :1;
};
} RCONbits_t;
extern volatile RCONbits_t RCONbits @ 0xFD0;

# 10772
extern volatile unsigned char WDTCON @ 0xFD1;

asm("WDTCON equ 0FD1h");


typedef union {
struct {
unsigned SWDTEN :1;
};
struct {
unsigned SWDTE :1;
};
} WDTCONbits_t;
extern volatile WDTCONbits_t WDTCONbits @ 0xFD1;

# 10799
extern volatile unsigned char ECON1 @ 0xFD2;

asm("ECON1 equ 0FD2h");


typedef union {
struct {
unsigned :2;
unsigned RXEN :1;
unsigned TXRTS :1;
unsigned CSUMEN :1;
unsigned DMAST :1;
unsigned RXRST :1;
unsigned TXRST :1;
};
} ECON1bits_t;
extern volatile ECON1bits_t ECON1bits @ 0xFD2;

# 10849
extern volatile unsigned char OSCCON @ 0xFD3;

asm("OSCCON equ 0FD3h");


typedef union {
struct {
unsigned SCS :2;
unsigned :1;
unsigned OSTS :1;
unsigned :3;
unsigned IDLEN :1;
};
struct {
unsigned SCS0 :1;
unsigned SCS1 :1;
};
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits @ 0xFD3;

# 10896
extern volatile unsigned char T0CON @ 0xFD5;

asm("T0CON equ 0FD5h");


typedef union {
struct {
unsigned T0PS :3;
unsigned PSA :1;
unsigned T0SE :1;
unsigned T0CS :1;
unsigned T08BIT :1;
unsigned TMR0ON :1;
};
struct {
unsigned T0PS0 :1;
unsigned T0PS1 :1;
unsigned T0PS2 :1;
};
} T0CONbits_t;
extern volatile T0CONbits_t T0CONbits @ 0xFD5;

# 10965
extern volatile unsigned short TMR0 @ 0xFD6;

asm("TMR0 equ 0FD6h");



extern volatile unsigned char TMR0L @ 0xFD6;

asm("TMR0L equ 0FD6h");



extern volatile unsigned char TMR0H @ 0xFD7;

asm("TMR0H equ 0FD7h");



extern volatile unsigned char STATUS @ 0xFD8;

asm("STATUS equ 0FD8h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned OV :1;
unsigned N :1;
};
struct {
unsigned CARRY :1;
};
struct {
unsigned :4;
unsigned NEGATIVE :1;
};
struct {
unsigned :3;
unsigned OVERFLOW :1;
};
struct {
unsigned :2;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0xFD8;

# 11061
extern volatile unsigned short FSR2 @ 0xFD9;

asm("FSR2 equ 0FD9h");



extern volatile unsigned char FSR2L @ 0xFD9;

asm("FSR2L equ 0FD9h");



extern volatile unsigned char FSR2H @ 0xFDA;

asm("FSR2H equ 0FDAh");



extern volatile unsigned char PLUSW2 @ 0xFDB;

asm("PLUSW2 equ 0FDBh");



extern volatile unsigned char PREINC2 @ 0xFDC;

asm("PREINC2 equ 0FDCh");



extern volatile unsigned char POSTDEC2 @ 0xFDD;

asm("POSTDEC2 equ 0FDDh");



extern volatile unsigned char POSTINC2 @ 0xFDE;

asm("POSTINC2 equ 0FDEh");



extern volatile unsigned char INDF2 @ 0xFDF;

asm("INDF2 equ 0FDFh");



extern volatile unsigned char BSR @ 0xFE0;

asm("BSR equ 0FE0h");



extern volatile unsigned short FSR1 @ 0xFE1;

asm("FSR1 equ 0FE1h");



extern volatile unsigned char FSR1L @ 0xFE1;

asm("FSR1L equ 0FE1h");



extern volatile unsigned char FSR1H @ 0xFE2;

asm("FSR1H equ 0FE2h");



extern volatile unsigned char PLUSW1 @ 0xFE3;

asm("PLUSW1 equ 0FE3h");



extern volatile unsigned char PREINC1 @ 0xFE4;

asm("PREINC1 equ 0FE4h");



extern volatile unsigned char POSTDEC1 @ 0xFE5;

asm("POSTDEC1 equ 0FE5h");



extern volatile unsigned char POSTINC1 @ 0xFE6;

asm("POSTINC1 equ 0FE6h");



extern volatile unsigned char INDF1 @ 0xFE7;

asm("INDF1 equ 0FE7h");



extern volatile unsigned char WREG @ 0xFE8;

asm("WREG equ 0FE8h");



extern volatile unsigned short FSR0 @ 0xFE9;

asm("FSR0 equ 0FE9h");



extern volatile unsigned char FSR0L @ 0xFE9;

asm("FSR0L equ 0FE9h");



extern volatile unsigned char FSR0H @ 0xFEA;

asm("FSR0H equ 0FEAh");



extern volatile unsigned char PLUSW0 @ 0xFEB;

asm("PLUSW0 equ 0FEBh");



extern volatile unsigned char PREINC0 @ 0xFEC;

asm("PREINC0 equ 0FECh");



extern volatile unsigned char POSTDEC0 @ 0xFED;

asm("POSTDEC0 equ 0FEDh");



extern volatile unsigned char POSTINC0 @ 0xFEE;

asm("POSTINC0 equ 0FEEh");



extern volatile unsigned char INDF0 @ 0xFEF;

asm("INDF0 equ 0FEFh");



extern volatile unsigned char INTCON3 @ 0xFF0;

asm("INTCON3 equ 0FF0h");


typedef union {
struct {
unsigned INT1IF :1;
unsigned INT2IF :1;
unsigned INT3IF :1;
unsigned INT1IE :1;
unsigned INT2IE :1;
unsigned INT3IE :1;
unsigned INT1IP :1;
unsigned INT2IP :1;
};
struct {
unsigned INT1F :1;
unsigned INT2F :1;
unsigned INT3F :1;
unsigned INT1E :1;
unsigned INT2E :1;
unsigned INT3E :1;
unsigned INT1P :1;
unsigned INT2P :1;
};
} INTCON3bits_t;
extern volatile INTCON3bits_t INTCON3bits @ 0xFF0;

# 11328
extern volatile unsigned char INTCON2 @ 0xFF1;

asm("INTCON2 equ 0FF1h");


typedef union {
struct {
unsigned :7;
unsigned NOT_RBPU :1;
};
struct {
unsigned RBIP :1;
unsigned INT3IP :1;
unsigned TMR0IP :1;
unsigned INTEDG3 :1;
unsigned INTEDG2 :1;
unsigned INTEDG1 :1;
unsigned INTEDG0 :1;
unsigned nRBPU :1;
};
struct {
unsigned :2;
unsigned T0IP :1;
unsigned :4;
unsigned RBPU :1;
};
} INTCON2bits_t;
extern volatile INTCON2bits_t INTCON2bits @ 0xFF1;

# 11414
extern volatile unsigned char INTCON @ 0xFF2;

asm("INTCON equ 0FF2h");


typedef union {
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned PEIE_GIEL :1;
unsigned GIE_GIEH :1;
};
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned RBIF :1;
unsigned INT0IF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INT0IE :1;
unsigned TMR0IE :1;
unsigned GIEL :1;
unsigned GIEH :1;
};
struct {
unsigned :1;
unsigned INT0F :1;
unsigned T0IF :1;
unsigned :1;
unsigned INT0E :1;
unsigned T0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
struct {
unsigned :6;
unsigned GIEL :1;
unsigned GIEH :1;
};
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0xFF2;

# 11550
extern volatile unsigned short PROD @ 0xFF3;

asm("PROD equ 0FF3h");



extern volatile unsigned char PRODL @ 0xFF3;

asm("PRODL equ 0FF3h");



extern volatile unsigned char PRODH @ 0xFF4;

asm("PRODH equ 0FF4h");



extern volatile unsigned char TABLAT @ 0xFF5;

asm("TABLAT equ 0FF5h");




extern volatile unsigned short long TBLPTR @ 0xFF6;


asm("TBLPTR equ 0FF6h");



extern volatile unsigned char TBLPTRL @ 0xFF6;

asm("TBLPTRL equ 0FF6h");



extern volatile unsigned char TBLPTRH @ 0xFF7;

asm("TBLPTRH equ 0FF7h");



extern volatile unsigned char TBLPTRU @ 0xFF8;

asm("TBLPTRU equ 0FF8h");




extern volatile unsigned short long PCLAT @ 0xFF9;


asm("PCLAT equ 0FF9h");



extern volatile unsigned short long PC @ 0xFF9;


asm("PC equ 0FF9h");



extern volatile unsigned char PCL @ 0xFF9;

asm("PCL equ 0FF9h");



extern volatile unsigned char PCLATH @ 0xFFA;

asm("PCLATH equ 0FFAh");



extern volatile unsigned char PCLATU @ 0xFFB;

asm("PCLATU equ 0FFBh");



extern volatile unsigned char STKPTR @ 0xFFC;

asm("STKPTR equ 0FFCh");


typedef union {
struct {
unsigned STKPTR :5;
unsigned :1;
unsigned STKUNF :1;
unsigned STKFUL :1;
};
struct {
unsigned STKPTR0 :1;
unsigned STKPTR1 :1;
unsigned STKPTR2 :1;
unsigned STKPTR3 :1;
unsigned STKPTR4 :1;
unsigned :2;
unsigned STKOVF :1;
};
struct {
unsigned SP0 :1;
unsigned SP1 :1;
unsigned SP2 :1;
unsigned SP3 :1;
unsigned SP4 :1;
};
} STKPTRbits_t;
extern volatile STKPTRbits_t STKPTRbits @ 0xFFC;

# 11737
extern volatile unsigned short long TOS @ 0xFFD;


asm("TOS equ 0FFDh");



extern volatile unsigned char TOSL @ 0xFFD;

asm("TOSL equ 0FFDh");



extern volatile unsigned char TOSH @ 0xFFE;

asm("TOSH equ 0FFEh");



extern volatile unsigned char TOSU @ 0xFFF;

asm("TOSU equ 0FFFh");

# 11768
extern volatile __bit ABDEN @ (((unsigned) &BAUDCON1)*8) + 0;

extern volatile __bit ABDEN1 @ (((unsigned) &BAUDCON1)*8) + 0;

extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON1)*8) + 7;

extern volatile __bit ABDOVF1 @ (((unsigned) &BAUDCON1)*8) + 7;

extern volatile __bit ACKDT @ (((unsigned) &SSP1CON2)*8) + 5;

extern volatile __bit ACKDT1 @ (((unsigned) &SSP1CON2)*8) + 5;

extern volatile __bit ACKEN @ (((unsigned) &SSP1CON2)*8) + 4;

extern volatile __bit ACKEN1 @ (((unsigned) &SSP1CON2)*8) + 4;

extern volatile __bit ACKSTAT @ (((unsigned) &SSP1CON2)*8) + 6;

extern volatile __bit ACKSTAT1 @ (((unsigned) &SSP1CON2)*8) + 6;

extern volatile __bit ACQT0 @ (((unsigned) &ADCON2)*8) + 3;

extern volatile __bit ACQT1 @ (((unsigned) &ADCON2)*8) + 4;

extern volatile __bit ACQT2 @ (((unsigned) &ADCON2)*8) + 5;

extern volatile __bit ADCAL @ (((unsigned) &ADCON0)*8) + 7;

extern volatile __bit ADCS0 @ (((unsigned) &ADCON2)*8) + 0;

extern volatile __bit ADCS1 @ (((unsigned) &ADCON2)*8) + 1;

extern volatile __bit ADCS2 @ (((unsigned) &ADCON2)*8) + 2;

extern volatile __bit ADDEN @ (((unsigned) &RCSTA1)*8) + 3;

extern volatile __bit ADDEN1 @ (((unsigned) &RCSTA1)*8) + 3;

extern volatile __bit ADFM @ (((unsigned) &ADCON2)*8) + 7;

extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;

extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;

extern volatile __bit ADIP @ (((unsigned) &IPR1)*8) + 6;

extern volatile __bit ADMSK1 @ (((unsigned) &SSP1CON2)*8) + 1;

extern volatile __bit ADMSK11 @ (((unsigned) &SSP1CON2)*8) + 1;

extern volatile __bit ADMSK2 @ (((unsigned) &SSP1CON2)*8) + 2;

extern volatile __bit ADMSK21 @ (((unsigned) &SSP1CON2)*8) + 2;

extern volatile __bit ADMSK3 @ (((unsigned) &SSP1CON2)*8) + 3;

extern volatile __bit ADMSK31 @ (((unsigned) &SSP1CON2)*8) + 3;

extern volatile __bit ADMSK4 @ (((unsigned) &SSP1CON2)*8) + 4;

extern volatile __bit ADMSK41 @ (((unsigned) &SSP1CON2)*8) + 4;

extern volatile __bit ADMSK5 @ (((unsigned) &SSP1CON2)*8) + 5;

extern volatile __bit ADMSK51 @ (((unsigned) &SSP1CON2)*8) + 5;

extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;

extern volatile __bit AN0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit AN1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit AN10 @ (((unsigned) &PORTF)*8) + 5;

extern volatile __bit AN11 @ (((unsigned) &PORTF)*8) + 6;

extern volatile __bit AN2 @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit AN3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit AN4 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit AN6 @ (((unsigned) &PORTF)*8) + 1;

extern volatile __bit AN7 @ (((unsigned) &PORTF)*8) + 2;

extern volatile __bit AN8 @ (((unsigned) &PORTF)*8) + 3;

extern volatile __bit AN9 @ (((unsigned) &PORTF)*8) + 4;

extern volatile __bit ANDOR @ (((unsigned) &ERXFCON)*8) + 6;

extern volatile __bit AUTOINC @ (((unsigned) &ECON2)*8) + 7;

extern volatile __bit BBIPG0 @ (((unsigned) &MABBIPG)*8) + 0;

extern volatile __bit BBIPG1 @ (((unsigned) &MABBIPG)*8) + 1;

extern volatile __bit BBIPG2 @ (((unsigned) &MABBIPG)*8) + 2;

extern volatile __bit BBIPG3 @ (((unsigned) &MABBIPG)*8) + 3;

extern volatile __bit BBIPG4 @ (((unsigned) &MABBIPG)*8) + 4;

extern volatile __bit BBIPG5 @ (((unsigned) &MABBIPG)*8) + 5;

extern volatile __bit BBIPG6 @ (((unsigned) &MABBIPG)*8) + 6;

extern volatile __bit BCEN @ (((unsigned) &ERXFCON)*8) + 0;

extern volatile __bit BCL1IE @ (((unsigned) &PIE2)*8) + 3;

extern volatile __bit BCL1IF @ (((unsigned) &PIR2)*8) + 3;

extern volatile __bit BCL1IP @ (((unsigned) &IPR2)*8) + 3;

extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;

extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;

extern volatile __bit BCLIP @ (((unsigned) &IPR2)*8) + 3;

extern volatile __bit BF @ (((unsigned) &SSP1STAT)*8) + 0;

extern volatile __bit BF1 @ (((unsigned) &SSP1STAT)*8) + 0;

extern volatile __bit BOR @ (((unsigned) &RCON)*8) + 0;

extern volatile __bit BRG16 @ (((unsigned) &BAUDCON1)*8) + 3;

extern volatile __bit BRG161 @ (((unsigned) &BAUDCON1)*8) + 3;

extern volatile __bit BRGH @ (((unsigned) &TXSTA1)*8) + 2;

extern volatile __bit BRGH1 @ (((unsigned) &TXSTA1)*8) + 2;

extern volatile __bit BUFER @ (((unsigned) &ESTAT)*8) + 6;

extern volatile __bit BUSY @ (((unsigned) &MISTAT)*8) + 0;

extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;

extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;

extern volatile __bit C1OUTF @ (((unsigned) &PORTF)*8) + 2;

extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;

extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;

extern volatile __bit C2OUTF @ (((unsigned) &PORTF)*8) + 1;

extern volatile __bit C3OUTG @ (((unsigned) &PORTG)*8) + 1;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CCP1 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit CCP10 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;

extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;

extern volatile __bit CCP1IP @ (((unsigned) &IPR1)*8) + 2;

extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;

extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;

extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;

extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;

extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;

extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;

extern volatile __bit CCP2 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit CCP2E @ (((unsigned) &PORTE)*8) + 7;

extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;

extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;

extern volatile __bit CCP2IP @ (((unsigned) &IPR2)*8) + 0;

extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;

extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;

extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;

extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;

extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;

extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;

extern volatile __bit CCP2_PA2 @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit CCP3 @ (((unsigned) &PORTD)*8) + 1;

extern volatile __bit CCP3IE @ (((unsigned) &PIE3)*8) + 0;

extern volatile __bit CCP3IF @ (((unsigned) &PIR3)*8) + 0;

extern volatile __bit CCP3IP @ (((unsigned) &IPR3)*8) + 0;

extern volatile __bit CCP3M0 @ (((unsigned) &CCP3CON)*8) + 0;

extern volatile __bit CCP3M1 @ (((unsigned) &CCP3CON)*8) + 1;

extern volatile __bit CCP3M2 @ (((unsigned) &CCP3CON)*8) + 2;

extern volatile __bit CCP3M3 @ (((unsigned) &CCP3CON)*8) + 3;

extern volatile __bit CCP3X @ (((unsigned) &CCP3CON)*8) + 5;

extern volatile __bit CCP3Y @ (((unsigned) &CCP3CON)*8) + 4;

extern volatile __bit CCP4 @ (((unsigned) &PORTD)*8) + 2;

extern volatile __bit CCP4IE @ (((unsigned) &PIE3)*8) + 1;

extern volatile __bit CCP4IF @ (((unsigned) &PIR3)*8) + 1;

extern volatile __bit CCP4IP @ (((unsigned) &IPR3)*8) + 1;

extern volatile __bit CCP4M0 @ (((unsigned) &CCP4CON)*8) + 0;

extern volatile __bit CCP4M1 @ (((unsigned) &CCP4CON)*8) + 1;

extern volatile __bit CCP4M2 @ (((unsigned) &CCP4CON)*8) + 2;

extern volatile __bit CCP4M3 @ (((unsigned) &CCP4CON)*8) + 3;

extern volatile __bit CCP4X @ (((unsigned) &CCP4CON)*8) + 5;

extern volatile __bit CCP4Y @ (((unsigned) &CCP4CON)*8) + 4;

extern volatile __bit CCP5 @ (((unsigned) &PORTG)*8) + 4;

extern volatile __bit CCP5IE @ (((unsigned) &PIE3)*8) + 2;

extern volatile __bit CCP5IF @ (((unsigned) &PIR3)*8) + 2;

extern volatile __bit CCP5IP @ (((unsigned) &IPR3)*8) + 2;

extern volatile __bit CCP5M0 @ (((unsigned) &CCP5CON)*8) + 0;

extern volatile __bit CCP5M1 @ (((unsigned) &CCP5CON)*8) + 1;

extern volatile __bit CCP5M2 @ (((unsigned) &CCP5CON)*8) + 2;

extern volatile __bit CCP5M3 @ (((unsigned) &CCP5CON)*8) + 3;

extern volatile __bit CCP5X @ (((unsigned) &CCP5CON)*8) + 5;

extern volatile __bit CCP5Y @ (((unsigned) &CCP5CON)*8) + 4;

extern volatile __bit CCP6E @ (((unsigned) &PORTE)*8) + 6;

extern volatile __bit CCP7E @ (((unsigned) &PORTE)*8) + 5;

extern volatile __bit CCP8E @ (((unsigned) &PORTE)*8) + 4;

extern volatile __bit CCP9E @ (((unsigned) &PORTE)*8) + 3;

extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;

extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;

extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;

extern volatile __bit CHSN3 @ (((unsigned) &ADCON1)*8) + 3;

extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;

extern volatile __bit CK @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit CK1 @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit CKE @ (((unsigned) &SSP1STAT)*8) + 6;

extern volatile __bit CKE1 @ (((unsigned) &SSP1STAT)*8) + 6;

extern volatile __bit CKP @ (((unsigned) &SSP1CON1)*8) + 4;

extern volatile __bit CKP1 @ (((unsigned) &SSP1CON1)*8) + 4;

extern volatile __bit CKTXP @ (((unsigned) &BAUDCON1)*8) + 4;

extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;

extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;

extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;

extern volatile __bit CMEN0 @ (((unsigned) &CMCON)*8) + 0;

extern volatile __bit CMEN1 @ (((unsigned) &CMCON)*8) + 1;

extern volatile __bit CMEN2 @ (((unsigned) &CMCON)*8) + 2;

extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;

extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;

extern volatile __bit CMIP @ (((unsigned) &IPR2)*8) + 6;

extern volatile __bit CRCEN @ (((unsigned) &ERXFCON)*8) + 5;

extern volatile __bit CREN @ (((unsigned) &RCSTA1)*8) + 4;

extern volatile __bit CREN1 @ (((unsigned) &RCSTA1)*8) + 4;

extern volatile __bit CS @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit CSRC @ (((unsigned) &TXSTA1)*8) + 7;

extern volatile __bit CSRC1 @ (((unsigned) &TXSTA1)*8) + 7;

extern volatile __bit CSUMEN @ (((unsigned) &ECON1)*8) + 4;

extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;

extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;

extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;

extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;

extern volatile __bit CVREF @ (((unsigned) &PORTF)*8) + 5;

extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;

extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;

extern volatile __bit CVROEN @ (((unsigned) &CVRCON)*8) + 6;

extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;

extern volatile __bit CVRSS @ (((unsigned) &CVRCON)*8) + 4;

extern volatile __bit DA @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit DA1 @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;

extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;

extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;

extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;

extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;

extern volatile __bit DC3B0 @ (((unsigned) &CCP3CON)*8) + 4;

extern volatile __bit DC3B1 @ (((unsigned) &CCP3CON)*8) + 5;

extern volatile __bit DC4B0 @ (((unsigned) &CCP4CON)*8) + 4;

extern volatile __bit DC4B1 @ (((unsigned) &CCP4CON)*8) + 5;

extern volatile __bit DC5B0 @ (((unsigned) &CCP5CON)*8) + 4;

extern volatile __bit DC5B1 @ (((unsigned) &CCP5CON)*8) + 5;

extern volatile __bit DEFER @ (((unsigned) &MACON4)*8) + 6;

extern volatile __bit DMAIE @ (((unsigned) &EIE)*8) + 5;

extern volatile __bit DMAIF @ (((unsigned) &EIR)*8) + 5;

extern volatile __bit DMAST @ (((unsigned) &ECON1)*8) + 5;

extern volatile __bit DONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit DT @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit DT1 @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit DTRXP @ (((unsigned) &BAUDCON1)*8) + 5;

extern volatile __bit DTRXP1 @ (((unsigned) &BAUDCON1)*8) + 5;

extern volatile __bit D_A @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit D_NOT_A @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit D_nA @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit EBDIS @ (((unsigned) &PR2)*8) + 7;

extern volatile __bit ECCP1 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit ECCP1AS0 @ (((unsigned) &ECCP1AS)*8) + 4;

extern volatile __bit ECCP1AS1 @ (((unsigned) &ECCP1AS)*8) + 5;

extern volatile __bit ECCP1AS2 @ (((unsigned) &ECCP1AS)*8) + 6;

extern volatile __bit ECCP1ASE @ (((unsigned) &ECCP1AS)*8) + 7;

extern volatile __bit ECCP2 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit ECCP2AS0 @ (((unsigned) &ECCP2AS)*8) + 4;

extern volatile __bit ECCP2AS1 @ (((unsigned) &ECCP2AS)*8) + 5;

extern volatile __bit ECCP2AS2 @ (((unsigned) &ECCP2AS)*8) + 6;

extern volatile __bit ECCP2ASE @ (((unsigned) &ECCP2AS)*8) + 7;

extern volatile __bit ECCP3 @ (((unsigned) &PORTD)*8) + 1;

extern volatile __bit ECCP3AS0 @ (((unsigned) &ECCP3AS)*8) + 4;

extern volatile __bit ECCP3AS1 @ (((unsigned) &ECCP3AS)*8) + 5;

extern volatile __bit ECCP3AS2 @ (((unsigned) &ECCP3AS)*8) + 6;

extern volatile __bit ECCP3ASE @ (((unsigned) &ECCP3AS)*8) + 7;

extern volatile __bit EDATA0 @ (((unsigned) &EDATA)*8) + 0;

extern volatile __bit EDATA1 @ (((unsigned) &EDATA)*8) + 1;

extern volatile __bit EDATA2 @ (((unsigned) &EDATA)*8) + 2;

extern volatile __bit EDATA3 @ (((unsigned) &EDATA)*8) + 3;

extern volatile __bit EDATA4 @ (((unsigned) &EDATA)*8) + 4;

extern volatile __bit EDATA5 @ (((unsigned) &EDATA)*8) + 5;

extern volatile __bit EDATA6 @ (((unsigned) &EDATA)*8) + 6;

extern volatile __bit EDATA7 @ (((unsigned) &EDATA)*8) + 7;

extern volatile __bit ETHEN @ (((unsigned) &ECON2)*8) + 5;

extern volatile __bit ETHIE @ (((unsigned) &PIE2)*8) + 5;

extern volatile __bit ETHIF @ (((unsigned) &PIR2)*8) + 5;

extern volatile __bit ETHIP @ (((unsigned) &IPR2)*8) + 5;

extern volatile __bit ETXIE @ (((unsigned) &EIE)*8) + 3;

extern volatile __bit ETXIF @ (((unsigned) &EIR)*8) + 3;

extern volatile __bit FCEN0 @ (((unsigned) &EFLOCON)*8) + 0;

extern volatile __bit FCEN1 @ (((unsigned) &EFLOCON)*8) + 1;

extern volatile __bit FERR @ (((unsigned) &RCSTA1)*8) + 2;

extern volatile __bit FERR1 @ (((unsigned) &RCSTA1)*8) + 2;

extern volatile __bit FLT0 @ (((unsigned) &PORTB)*8) + 0;

extern volatile __bit FREE @ (((unsigned) &EECON1)*8) + 4;

extern volatile __bit FRMLNEN @ (((unsigned) &MACON3)*8) + 1;

extern volatile __bit FULDPX @ (((unsigned) &MACON3)*8) + 0;

extern volatile __bit FULDPXS @ (((unsigned) &EFLOCON)*8) + 2;

extern volatile __bit GCEN @ (((unsigned) &SSP1CON2)*8) + 7;

extern volatile __bit GCEN1 @ (((unsigned) &SSP1CON2)*8) + 7;

extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GIEH @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GIEL @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit GIE_GIEH @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GODONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GO_NOT_DONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit HFRMEN @ (((unsigned) &MACON3)*8) + 2;

extern volatile __bit HTEN @ (((unsigned) &ERXFCON)*8) + 2;

extern volatile __bit I2C_DAT @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit I2C_READ @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit I2C_START @ (((unsigned) &SSP1STAT)*8) + 3;

extern volatile __bit I2C_STOP @ (((unsigned) &SSP1STAT)*8) + 4;

extern volatile __bit IDLEN @ (((unsigned) &OSCCON)*8) + 7;

extern volatile __bit INT0 @ (((unsigned) &PORTB)*8) + 0;

extern volatile __bit INT0E @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INT0F @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit INT0IE @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INT0IF @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit INT1 @ (((unsigned) &PORTB)*8) + 1;

extern volatile __bit INT1E @ (((unsigned) &INTCON3)*8) + 3;

extern volatile __bit INT1F @ (((unsigned) &INTCON3)*8) + 0;

extern volatile __bit INT1IE @ (((unsigned) &INTCON3)*8) + 3;

extern volatile __bit INT1IF @ (((unsigned) &INTCON3)*8) + 0;

extern volatile __bit INT1IP @ (((unsigned) &INTCON3)*8) + 6;

extern volatile __bit INT1P @ (((unsigned) &INTCON3)*8) + 6;

extern volatile __bit INT2 @ (((unsigned) &PORTB)*8) + 2;

extern volatile __bit INT2E @ (((unsigned) &INTCON3)*8) + 4;

extern volatile __bit INT2F @ (((unsigned) &INTCON3)*8) + 1;

extern volatile __bit INT2IE @ (((unsigned) &INTCON3)*8) + 4;

extern volatile __bit INT2IF @ (((unsigned) &INTCON3)*8) + 1;

extern volatile __bit INT2IP @ (((unsigned) &INTCON3)*8) + 7;

extern volatile __bit INT2P @ (((unsigned) &INTCON3)*8) + 7;

extern volatile __bit INT3 @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit INT3E @ (((unsigned) &INTCON3)*8) + 5;

extern volatile __bit INT3F @ (((unsigned) &INTCON3)*8) + 2;

extern volatile __bit INT3IE @ (((unsigned) &INTCON3)*8) + 5;

extern volatile __bit INT3IF @ (((unsigned) &INTCON3)*8) + 2;

extern volatile __bit INT3IP @ (((unsigned) &INTCON2)*8) + 1;

extern volatile __bit INTEDG0 @ (((unsigned) &INTCON2)*8) + 6;

extern volatile __bit INTEDG1 @ (((unsigned) &INTCON2)*8) + 5;

extern volatile __bit INTEDG2 @ (((unsigned) &INTCON2)*8) + 4;

extern volatile __bit INTEDG3 @ (((unsigned) &INTCON2)*8) + 3;

extern volatile __bit IPEN @ (((unsigned) &RCON)*8) + 7;

extern volatile __bit KBI0 @ (((unsigned) &PORTB)*8) + 4;

extern volatile __bit KBI1 @ (((unsigned) &PORTB)*8) + 5;

extern volatile __bit KBI2 @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit KBI3 @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit LA0 @ (((unsigned) &LATA)*8) + 0;

extern volatile __bit LA1 @ (((unsigned) &LATA)*8) + 1;

extern volatile __bit LA2 @ (((unsigned) &LATA)*8) + 2;

extern volatile __bit LA3 @ (((unsigned) &LATA)*8) + 3;

extern volatile __bit LA4 @ (((unsigned) &LATA)*8) + 4;

extern volatile __bit LA5 @ (((unsigned) &LATA)*8) + 5;

extern volatile __bit LA6 @ (((unsigned) &LATA)*8) + 6;

extern volatile __bit LA7 @ (((unsigned) &LATA)*8) + 7;

extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;

extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;

extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;

extern volatile __bit LATA3 @ (((unsigned) &LATA)*8) + 3;

extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;

extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;

extern volatile __bit LATA7 @ (((unsigned) &LATA)*8) + 7;

extern volatile __bit LATB0 @ (((unsigned) &LATB)*8) + 0;

extern volatile __bit LATB1 @ (((unsigned) &LATB)*8) + 1;

extern volatile __bit LATB2 @ (((unsigned) &LATB)*8) + 2;

extern volatile __bit LATB3 @ (((unsigned) &LATB)*8) + 3;

extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;

extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;

extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;

extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;

extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;

extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;

extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;

extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;

extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;

extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;

extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;

extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;

extern volatile __bit LATD0 @ (((unsigned) &LATD)*8) + 0;

extern volatile __bit LATD1 @ (((unsigned) &LATD)*8) + 1;

extern volatile __bit LATD2 @ (((unsigned) &LATD)*8) + 2;

extern volatile __bit LATE0 @ (((unsigned) &LATE)*8) + 0;

extern volatile __bit LATE1 @ (((unsigned) &LATE)*8) + 1;

extern volatile __bit LATE2 @ (((unsigned) &LATE)*8) + 2;

extern volatile __bit LATE3 @ (((unsigned) &LATE)*8) + 3;

extern volatile __bit LATE4 @ (((unsigned) &LATE)*8) + 4;

extern volatile __bit LATE5 @ (((unsigned) &LATE)*8) + 5;

extern volatile __bit LATF1 @ (((unsigned) &LATF)*8) + 1;

extern volatile __bit LATF2 @ (((unsigned) &LATF)*8) + 2;

extern volatile __bit LATF3 @ (((unsigned) &LATF)*8) + 3;

extern volatile __bit LATF4 @ (((unsigned) &LATF)*8) + 4;

extern volatile __bit LATF5 @ (((unsigned) &LATF)*8) + 5;

extern volatile __bit LATF6 @ (((unsigned) &LATF)*8) + 6;

extern volatile __bit LATF7 @ (((unsigned) &LATF)*8) + 7;

extern volatile __bit LATG4 @ (((unsigned) &LATG)*8) + 4;

extern volatile __bit LB0 @ (((unsigned) &LATB)*8) + 0;

extern volatile __bit LB1 @ (((unsigned) &LATB)*8) + 1;

extern volatile __bit LB2 @ (((unsigned) &LATB)*8) + 2;

extern volatile __bit LB3 @ (((unsigned) &LATB)*8) + 3;

extern volatile __bit LB4 @ (((unsigned) &LATB)*8) + 4;

extern volatile __bit LB5 @ (((unsigned) &LATB)*8) + 5;

extern volatile __bit LB6 @ (((unsigned) &LATB)*8) + 6;

extern volatile __bit LB7 @ (((unsigned) &LATB)*8) + 7;

extern volatile __bit LC0 @ (((unsigned) &LATC)*8) + 0;

extern volatile __bit LC1 @ (((unsigned) &LATC)*8) + 1;

extern volatile __bit LC2 @ (((unsigned) &LATC)*8) + 2;

extern volatile __bit LC3 @ (((unsigned) &LATC)*8) + 3;

extern volatile __bit LC4 @ (((unsigned) &LATC)*8) + 4;

extern volatile __bit LC5 @ (((unsigned) &LATC)*8) + 5;

extern volatile __bit LC6 @ (((unsigned) &LATC)*8) + 6;

extern volatile __bit LC7 @ (((unsigned) &LATC)*8) + 7;

extern volatile __bit LD0 @ (((unsigned) &LATD)*8) + 0;

extern volatile __bit LD1 @ (((unsigned) &LATD)*8) + 1;

extern volatile __bit LD2 @ (((unsigned) &LATD)*8) + 2;

extern volatile __bit LD3 @ (((unsigned) &LATD)*8) + 3;

extern volatile __bit LD4 @ (((unsigned) &LATD)*8) + 4;

extern volatile __bit LD5 @ (((unsigned) &LATD)*8) + 5;

extern volatile __bit LD6 @ (((unsigned) &LATD)*8) + 6;

extern volatile __bit LD7 @ (((unsigned) &LATD)*8) + 7;

extern volatile __bit LE0 @ (((unsigned) &LATE)*8) + 0;

extern volatile __bit LE1 @ (((unsigned) &LATE)*8) + 1;

extern volatile __bit LE2 @ (((unsigned) &LATE)*8) + 2;

extern volatile __bit LE3 @ (((unsigned) &LATE)*8) + 3;

extern volatile __bit LE4 @ (((unsigned) &LATE)*8) + 4;

extern volatile __bit LE5 @ (((unsigned) &LATE)*8) + 5;

extern volatile __bit LE6 @ (((unsigned) &LATE)*8) + 6;

extern volatile __bit LE7 @ (((unsigned) &LATE)*8) + 7;

extern volatile __bit LEDA @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit LEDB @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit LF0 @ (((unsigned) &LATF)*8) + 0;

extern volatile __bit LF1 @ (((unsigned) &LATF)*8) + 1;

extern volatile __bit LF2 @ (((unsigned) &LATF)*8) + 2;

extern volatile __bit LF3 @ (((unsigned) &LATF)*8) + 3;

extern volatile __bit LF4 @ (((unsigned) &LATF)*8) + 4;

extern volatile __bit LF5 @ (((unsigned) &LATF)*8) + 5;

extern volatile __bit LF6 @ (((unsigned) &LATF)*8) + 6;

extern volatile __bit LF7 @ (((unsigned) &LATF)*8) + 7;

extern volatile __bit LG0 @ (((unsigned) &LATG)*8) + 0;

extern volatile __bit LG1 @ (((unsigned) &LATG)*8) + 1;

extern volatile __bit LG2 @ (((unsigned) &LATG)*8) + 2;

extern volatile __bit LG3 @ (((unsigned) &LATG)*8) + 3;

extern volatile __bit LG4 @ (((unsigned) &LATG)*8) + 4;

extern volatile __bit LINKIE @ (((unsigned) &EIE)*8) + 4;

extern volatile __bit LINKIF @ (((unsigned) &EIR)*8) + 4;

extern volatile __bit LVDIN @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit MARXEN @ (((unsigned) &MACON1)*8) + 0;

extern volatile __bit MCEN @ (((unsigned) &ERXFCON)*8) + 1;

extern volatile __bit MIIRD @ (((unsigned) &MICMD)*8) + 0;

extern volatile __bit MIISCAN @ (((unsigned) &MICMD)*8) + 1;

extern volatile __bit MPEN @ (((unsigned) &ERXFCON)*8) + 3;

extern volatile __bit MSK0 @ (((unsigned) &SSP1ADD)*8) + 0;

extern volatile __bit MSK01 @ (((unsigned) &SSP1ADD)*8) + 0;

extern volatile __bit MSK1 @ (((unsigned) &SSP1ADD)*8) + 1;

extern volatile __bit MSK11 @ (((unsigned) &SSP1ADD)*8) + 1;

extern volatile __bit MSK2 @ (((unsigned) &SSP1ADD)*8) + 2;

extern volatile __bit MSK21 @ (((unsigned) &SSP1ADD)*8) + 2;

extern volatile __bit MSK3 @ (((unsigned) &SSP1ADD)*8) + 3;

extern volatile __bit MSK31 @ (((unsigned) &SSP1ADD)*8) + 3;

extern volatile __bit MSK4 @ (((unsigned) &SSP1ADD)*8) + 4;

extern volatile __bit MSK41 @ (((unsigned) &SSP1ADD)*8) + 4;

extern volatile __bit MSK5 @ (((unsigned) &SSP1ADD)*8) + 5;

extern volatile __bit MSK51 @ (((unsigned) &SSP1ADD)*8) + 5;

extern volatile __bit MSK6 @ (((unsigned) &SSP1ADD)*8) + 6;

extern volatile __bit MSK61 @ (((unsigned) &SSP1ADD)*8) + 6;

extern volatile __bit MSK7 @ (((unsigned) &SSP1ADD)*8) + 7;

extern volatile __bit MSK71 @ (((unsigned) &SSP1ADD)*8) + 7;

extern volatile __bit NEGATIVE @ (((unsigned) &STATUS)*8) + 4;

extern volatile __bit NOT_A @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit NOT_ADDRESS @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit NOT_BOR @ (((unsigned) &RCON)*8) + 0;

extern volatile __bit NOT_DONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit NOT_PD @ (((unsigned) &RCON)*8) + 2;

extern volatile __bit NOT_POR @ (((unsigned) &RCON)*8) + 1;

extern volatile __bit NOT_RBPU @ (((unsigned) &INTCON2)*8) + 7;

extern volatile __bit NOT_RC8 @ (((unsigned) &RCSTA1)*8) + 6;

extern volatile __bit NOT_RI @ (((unsigned) &RCON)*8) + 4;

extern volatile __bit NOT_SS @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit NOT_SS1 @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit NOT_T1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit NOT_T3SYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit NOT_TO @ (((unsigned) &RCON)*8) + 3;

extern volatile __bit NOT_TX8 @ (((unsigned) &TXSTA1)*8) + 6;

extern volatile __bit NOT_W @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit NOT_WRITE @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit NVALID @ (((unsigned) &MISTAT)*8) + 2;

extern volatile __bit OERR @ (((unsigned) &RCSTA1)*8) + 1;

extern volatile __bit OERR1 @ (((unsigned) &RCSTA1)*8) + 1;

extern volatile __bit OSCFIE @ (((unsigned) &PIE2)*8) + 7;

extern volatile __bit OSCFIF @ (((unsigned) &PIR2)*8) + 7;

extern volatile __bit OSCFIP @ (((unsigned) &IPR2)*8) + 7;

extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;

extern volatile __bit OV @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit OVERFLOW @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit P1DC0 @ (((unsigned) &ECCP1DEL)*8) + 0;

extern volatile __bit P1DC1 @ (((unsigned) &ECCP1DEL)*8) + 1;

extern volatile __bit P1DC2 @ (((unsigned) &ECCP1DEL)*8) + 2;

extern volatile __bit P1DC3 @ (((unsigned) &ECCP1DEL)*8) + 3;

extern volatile __bit P1DC4 @ (((unsigned) &ECCP1DEL)*8) + 4;

extern volatile __bit P1DC5 @ (((unsigned) &ECCP1DEL)*8) + 5;

extern volatile __bit P1DC6 @ (((unsigned) &ECCP1DEL)*8) + 6;

extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;

extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;

extern volatile __bit P1RSEN @ (((unsigned) &ECCP1DEL)*8) + 7;

extern volatile __bit P2DC0 @ (((unsigned) &ECCP2DEL)*8) + 0;

extern volatile __bit P2DC1 @ (((unsigned) &ECCP2DEL)*8) + 1;

extern volatile __bit P2DC2 @ (((unsigned) &ECCP2DEL)*8) + 2;

extern volatile __bit P2DC3 @ (((unsigned) &ECCP2DEL)*8) + 3;

extern volatile __bit P2DC4 @ (((unsigned) &ECCP2DEL)*8) + 4;

extern volatile __bit P2DC5 @ (((unsigned) &ECCP2DEL)*8) + 5;

extern volatile __bit P2DC6 @ (((unsigned) &ECCP2DEL)*8) + 6;

extern volatile __bit P2M0 @ (((unsigned) &CCP2CON)*8) + 6;

extern volatile __bit P2M1 @ (((unsigned) &CCP2CON)*8) + 7;

extern volatile __bit P2RSEN @ (((unsigned) &ECCP2DEL)*8) + 7;

extern volatile __bit P3DC0 @ (((unsigned) &ECCP3DEL)*8) + 0;

extern volatile __bit P3DC1 @ (((unsigned) &ECCP3DEL)*8) + 1;

extern volatile __bit P3DC2 @ (((unsigned) &ECCP3DEL)*8) + 2;

extern volatile __bit P3DC3 @ (((unsigned) &ECCP3DEL)*8) + 3;

extern volatile __bit P3DC4 @ (((unsigned) &ECCP3DEL)*8) + 4;

extern volatile __bit P3DC5 @ (((unsigned) &ECCP3DEL)*8) + 5;

extern volatile __bit P3DC6 @ (((unsigned) &ECCP3DEL)*8) + 6;

extern volatile __bit P3M0 @ (((unsigned) &CCP3CON)*8) + 6;

extern volatile __bit P3M1 @ (((unsigned) &CCP3CON)*8) + 7;

extern volatile __bit P3RSEN @ (((unsigned) &ECCP3DEL)*8) + 7;

extern volatile __bit PA1 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit PA2 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit PA2E @ (((unsigned) &PORTE)*8) + 7;

extern volatile __bit PADCFG0 @ (((unsigned) &MACON3)*8) + 5;

extern volatile __bit PADCFG1 @ (((unsigned) &MACON3)*8) + 6;

extern volatile __bit PADCFG2 @ (((unsigned) &MACON3)*8) + 7;

extern volatile __bit PASSALL @ (((unsigned) &MACON1)*8) + 1;

extern volatile __bit PB1E @ (((unsigned) &PORTE)*8) + 6;

extern volatile __bit PB2 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit PB3E @ (((unsigned) &PORTE)*8) + 4;

extern volatile __bit PC1E @ (((unsigned) &PORTE)*8) + 5;

extern volatile __bit PC2 @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit PC3E @ (((unsigned) &PORTE)*8) + 3;

extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;

extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;

extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;

extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;

extern volatile __bit PD @ (((unsigned) &RCON)*8) + 2;

extern volatile __bit PD2 @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PEIE_GIEL @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PEN @ (((unsigned) &SSP1CON2)*8) + 2;

extern volatile __bit PEN1 @ (((unsigned) &SSP1CON2)*8) + 2;

extern volatile __bit PGC @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit PGD @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit PHDREN @ (((unsigned) &MACON3)*8) + 3;

extern volatile __bit PHYRDY @ (((unsigned) &ESTAT)*8) + 0;

extern volatile __bit PKTDEC @ (((unsigned) &ECON2)*8) + 6;

extern volatile __bit PKTIE @ (((unsigned) &EIE)*8) + 6;

extern volatile __bit PKTIF @ (((unsigned) &EIR)*8) + 6;

extern volatile __bit PLLEN @ (((unsigned) &OSCTUNE)*8) + 6;

extern volatile __bit PMEN @ (((unsigned) &ERXFCON)*8) + 4;

extern volatile __bit POR @ (((unsigned) &RCON)*8) + 1;

extern volatile __bit PPRE @ (((unsigned) &OSCTUNE)*8) + 4;

extern volatile __bit PPST0 @ (((unsigned) &OSCTUNE)*8) + 5;

extern volatile __bit PPST1 @ (((unsigned) &OSCTUNE)*8) + 7;

extern volatile __bit PSA @ (((unsigned) &T0CON)*8) + 3;

extern volatile __bit PSS1AC0 @ (((unsigned) &ECCP1AS)*8) + 2;

extern volatile __bit PSS1AC1 @ (((unsigned) &ECCP1AS)*8) + 3;

extern volatile __bit PSS1BD0 @ (((unsigned) &ECCP1AS)*8) + 0;

extern volatile __bit PSS1BD1 @ (((unsigned) &ECCP1AS)*8) + 1;

extern volatile __bit PSS2AC0 @ (((unsigned) &ECCP2AS)*8) + 2;

extern volatile __bit PSS2AC1 @ (((unsigned) &ECCP2AS)*8) + 3;

extern volatile __bit PSS2BD0 @ (((unsigned) &ECCP2AS)*8) + 0;

extern volatile __bit PSS2BD1 @ (((unsigned) &ECCP2AS)*8) + 1;

extern volatile __bit PSS3AC0 @ (((unsigned) &ECCP3AS)*8) + 2;

extern volatile __bit PSS3AC1 @ (((unsigned) &ECCP3AS)*8) + 3;

extern volatile __bit PSS3BD0 @ (((unsigned) &ECCP3AS)*8) + 0;

extern volatile __bit PSS3BD1 @ (((unsigned) &ECCP3AS)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RA0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RA1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RA2 @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RA3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RA4 @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RA5 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;

extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RB0 @ (((unsigned) &PORTB)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RB1 @ (((unsigned) &PORTB)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RB2 @ (((unsigned) &PORTB)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RB3 @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RB4 @ (((unsigned) &PORTB)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RB5 @ (((unsigned) &PORTB)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RB6 @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RB7 @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;

extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;

extern volatile __bit RBIP @ (((unsigned) &INTCON2)*8) + 0;

extern volatile __bit RBPU @ (((unsigned) &INTCON2)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RC0 @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RC1 @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit RC1IE @ (((unsigned) &PIE1)*8) + 5;

extern volatile __bit RC1IF @ (((unsigned) &PIR1)*8) + 5;

extern volatile __bit RC1IP @ (((unsigned) &IPR1)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RC2 @ (((unsigned) &PORTC)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RC3 @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RC4 @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RC5 @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RC6 @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RC7 @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit RC8_9 @ (((unsigned) &RCSTA1)*8) + 6;

extern volatile __bit RC9 @ (((unsigned) &RCSTA1)*8) + 6;

extern volatile __bit RCD8 @ (((unsigned) &RCSTA1)*8) + 0;

extern volatile __bit RCEN @ (((unsigned) &SSP1CON2)*8) + 3;

extern volatile __bit RCEN1 @ (((unsigned) &SSP1CON2)*8) + 3;

extern volatile __bit RCIDL @ (((unsigned) &BAUDCON1)*8) + 6;

extern volatile __bit RCIDL1 @ (((unsigned) &BAUDCON1)*8) + 6;

extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;

extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;

extern volatile __bit RCIP @ (((unsigned) &IPR1)*8) + 5;

extern volatile __bit RCMT @ (((unsigned) &BAUDCON1)*8) + 6;

extern volatile __bit RCMT1 @ (((unsigned) &BAUDCON1)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RD0 @ (((unsigned) &PORTD)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RD1 @ (((unsigned) &PORTD)*8) + 1;

extern volatile __bit RD163 @ (((unsigned) &T3CON)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RD2 @ (((unsigned) &PORTD)*8) + 2;

extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;

extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;

extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;

extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;

extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;

extern volatile __bit RDE @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit RDPU @ (((unsigned) &LATA)*8) + 7;

extern volatile __bit __attribute__((__deprecated__)) RE0 @ (((unsigned) &PORTE)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RE1 @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RE2 @ (((unsigned) &PORTE)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RE3 @ (((unsigned) &PORTE)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RE4 @ (((unsigned) &PORTE)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RE5 @ (((unsigned) &PORTE)*8) + 5;

extern volatile __bit RE6 @ (((unsigned) &PORTE)*8) + 6;

extern volatile __bit RE7 @ (((unsigned) &PORTE)*8) + 7;

extern volatile __bit READ_WRITE @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit REPU @ (((unsigned) &LATA)*8) + 6;

extern volatile __bit RF0 @ (((unsigned) &PORTF)*8) + 0;

extern volatile __bit __attribute__((__deprecated__)) RF1 @ (((unsigned) &PORTF)*8) + 1;

extern volatile __bit __attribute__((__deprecated__)) RF2 @ (((unsigned) &PORTF)*8) + 2;

extern volatile __bit __attribute__((__deprecated__)) RF3 @ (((unsigned) &PORTF)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RF4 @ (((unsigned) &PORTF)*8) + 4;

extern volatile __bit __attribute__((__deprecated__)) RF5 @ (((unsigned) &PORTF)*8) + 5;

extern volatile __bit __attribute__((__deprecated__)) RF6 @ (((unsigned) &PORTF)*8) + 6;

extern volatile __bit __attribute__((__deprecated__)) RF7 @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit RG0 @ (((unsigned) &PORTG)*8) + 0;

extern volatile __bit RG1 @ (((unsigned) &PORTG)*8) + 1;

extern volatile __bit RG2 @ (((unsigned) &PORTG)*8) + 2;

extern volatile __bit RG3 @ (((unsigned) &PORTG)*8) + 3;

extern volatile __bit __attribute__((__deprecated__)) RG4 @ (((unsigned) &PORTG)*8) + 4;

extern volatile __bit RG5 @ (((unsigned) &PORTG)*8) + 5;

extern volatile __bit RG6 @ (((unsigned) &PORTG)*8) + 6;

extern volatile __bit RG7 @ (((unsigned) &PORTG)*8) + 7;

extern volatile __bit RI @ (((unsigned) &RCON)*8) + 4;

extern volatile __bit RSEN @ (((unsigned) &SSP1CON2)*8) + 1;

extern volatile __bit RSEN1 @ (((unsigned) &SSP1CON2)*8) + 1;

extern volatile __bit RW @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit RW1 @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit RX @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit RX1 @ (((unsigned) &PORTC)*8) + 7;

extern volatile __bit RX9 @ (((unsigned) &RCSTA1)*8) + 6;

extern volatile __bit RX91 @ (((unsigned) &RCSTA1)*8) + 6;

extern volatile __bit RX9D @ (((unsigned) &RCSTA1)*8) + 0;

extern volatile __bit RX9D1 @ (((unsigned) &RCSTA1)*8) + 0;

extern volatile __bit RXB0IE @ (((unsigned) &PIE3)*8) + 0;

extern volatile __bit RXB1IE @ (((unsigned) &PIE3)*8) + 1;

extern volatile __bit RXBNIE @ (((unsigned) &PIE3)*8) + 1;

extern volatile __bit RXBNIF @ (((unsigned) &PIR3)*8) + 1;

extern volatile __bit RXBNIP @ (((unsigned) &IPR3)*8) + 1;

extern volatile __bit RXBUSY @ (((unsigned) &ESTAT)*8) + 2;

extern volatile __bit RXCKP @ (((unsigned) &BAUDCON1)*8) + 5;

extern volatile __bit RXDTP @ (((unsigned) &BAUDCON1)*8) + 5;

extern volatile __bit RXDTP1 @ (((unsigned) &BAUDCON1)*8) + 5;

extern volatile __bit RXEN @ (((unsigned) &ECON1)*8) + 2;

extern volatile __bit RXERIE @ (((unsigned) &EIE)*8) + 0;

extern volatile __bit RXERIF @ (((unsigned) &EIR)*8) + 0;

extern volatile __bit RXPAUS @ (((unsigned) &MACON1)*8) + 2;

extern volatile __bit RXRST @ (((unsigned) &ECON1)*8) + 6;

extern volatile __bit R_NOT_W @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit R_W @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit R_nW @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit SCAN @ (((unsigned) &MISTAT)*8) + 1;

extern volatile __bit SCK @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit SCK1 @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit SCKP @ (((unsigned) &BAUDCON1)*8) + 4;

extern volatile __bit SCKP1 @ (((unsigned) &BAUDCON1)*8) + 4;

extern volatile __bit SCL @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit SCL1 @ (((unsigned) &PORTC)*8) + 3;

extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;

extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;

extern volatile __bit SDA @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit SDA1 @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit SDI @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit SDI1 @ (((unsigned) &PORTC)*8) + 4;

extern volatile __bit SDO @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit SDO1 @ (((unsigned) &PORTC)*8) + 5;

extern volatile __bit SEN @ (((unsigned) &SSP1CON2)*8) + 0;

extern volatile __bit SEN1 @ (((unsigned) &SSP1CON2)*8) + 0;

extern volatile __bit SENDB @ (((unsigned) &TXSTA1)*8) + 3;

extern volatile __bit SENDB1 @ (((unsigned) &TXSTA1)*8) + 3;

extern volatile __bit SMP @ (((unsigned) &SSP1STAT)*8) + 7;

extern volatile __bit SMP1 @ (((unsigned) &SSP1STAT)*8) + 7;

extern volatile __bit SOSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit SOSCEN3 @ (((unsigned) &T3CON)*8) + 3;

extern volatile __bit SP0 @ (((unsigned) &STKPTR)*8) + 0;

extern volatile __bit SP1 @ (((unsigned) &STKPTR)*8) + 1;

extern volatile __bit SP2 @ (((unsigned) &STKPTR)*8) + 2;

extern volatile __bit SP3 @ (((unsigned) &STKPTR)*8) + 3;

extern volatile __bit SP4 @ (((unsigned) &STKPTR)*8) + 4;

extern volatile __bit SPEN @ (((unsigned) &RCSTA1)*8) + 7;

extern volatile __bit SPEN1 @ (((unsigned) &RCSTA1)*8) + 7;

extern volatile __bit SREN @ (((unsigned) &RCSTA1)*8) + 5;

extern volatile __bit SREN1 @ (((unsigned) &RCSTA1)*8) + 5;

extern volatile __bit SRENA @ (((unsigned) &RCSTA1)*8) + 5;

extern volatile __bit SS @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit SS1 @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit SS2 @ (((unsigned) &PORTD)*8) + 7;

extern volatile __bit SSP1IE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit SSP1IF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit SSP1IP @ (((unsigned) &IPR1)*8) + 3;

extern volatile __bit SSPEN @ (((unsigned) &SSP1CON1)*8) + 5;

extern volatile __bit SSPEN1 @ (((unsigned) &SSP1CON1)*8) + 5;

extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit SSPIP @ (((unsigned) &IPR1)*8) + 3;

extern volatile __bit SSPM0 @ (((unsigned) &SSP1CON1)*8) + 0;

extern volatile __bit SSPM01 @ (((unsigned) &SSP1CON1)*8) + 0;

extern volatile __bit SSPM1 @ (((unsigned) &SSP1CON1)*8) + 1;

extern volatile __bit SSPM11 @ (((unsigned) &SSP1CON1)*8) + 1;

extern volatile __bit SSPM2 @ (((unsigned) &SSP1CON1)*8) + 2;

extern volatile __bit SSPM21 @ (((unsigned) &SSP1CON1)*8) + 2;

extern volatile __bit SSPM3 @ (((unsigned) &SSP1CON1)*8) + 3;

extern volatile __bit SSPM31 @ (((unsigned) &SSP1CON1)*8) + 3;

extern volatile __bit SSPOV @ (((unsigned) &SSP1CON1)*8) + 6;

extern volatile __bit SSPOV1 @ (((unsigned) &SSP1CON1)*8) + 6;

extern volatile __bit START @ (((unsigned) &SSP1STAT)*8) + 3;

extern volatile __bit START1 @ (((unsigned) &SSP1STAT)*8) + 3;

extern volatile __bit STKFUL @ (((unsigned) &STKPTR)*8) + 7;

extern volatile __bit STKOVF @ (((unsigned) &STKPTR)*8) + 7;

extern volatile __bit STKPTR0 @ (((unsigned) &STKPTR)*8) + 0;

extern volatile __bit STKPTR1 @ (((unsigned) &STKPTR)*8) + 1;

extern volatile __bit STKPTR2 @ (((unsigned) &STKPTR)*8) + 2;

extern volatile __bit STKPTR3 @ (((unsigned) &STKPTR)*8) + 3;

extern volatile __bit STKPTR4 @ (((unsigned) &STKPTR)*8) + 4;

extern volatile __bit STKUNF @ (((unsigned) &STKPTR)*8) + 6;

extern volatile __bit STOP @ (((unsigned) &SSP1STAT)*8) + 4;

extern volatile __bit STOP1 @ (((unsigned) &SSP1STAT)*8) + 4;

extern volatile __bit SWDTE @ (((unsigned) &WDTCON)*8) + 0;

extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;

extern volatile __bit SYNC @ (((unsigned) &TXSTA1)*8) + 4;

extern volatile __bit SYNC1 @ (((unsigned) &TXSTA1)*8) + 4;

extern volatile __bit T08BIT @ (((unsigned) &T0CON)*8) + 6;

extern volatile __bit T0CKI @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit T0CS @ (((unsigned) &T0CON)*8) + 5;

extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit T0IP @ (((unsigned) &INTCON2)*8) + 2;

extern volatile __bit T0PS0 @ (((unsigned) &T0CON)*8) + 0;

extern volatile __bit T0PS1 @ (((unsigned) &T0CON)*8) + 1;

extern volatile __bit T0PS2 @ (((unsigned) &T0CON)*8) + 2;

extern volatile __bit T0SE @ (((unsigned) &T0CON)*8) + 4;

extern volatile __bit T13CKI @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;

extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;

extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit T1OSI @ (((unsigned) &PORTC)*8) + 1;

extern volatile __bit T1OSO @ (((unsigned) &PORTC)*8) + 0;

extern volatile __bit T1RD16 @ (((unsigned) &T1CON)*8) + 7;

extern volatile __bit T1RUN @ (((unsigned) &T1CON)*8) + 6;

extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;

extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;

extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;

extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;

extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;

extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;

extern volatile __bit T3CCP1 @ (((unsigned) &T3CON)*8) + 3;

extern volatile __bit T3CCP2 @ (((unsigned) &T3CON)*8) + 6;

extern volatile __bit T3CKPS0 @ (((unsigned) &T3CON)*8) + 4;

extern volatile __bit T3CKPS1 @ (((unsigned) &T3CON)*8) + 5;

extern volatile __bit T3INSYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit T3RD16 @ (((unsigned) &T3CON)*8) + 7;

extern volatile __bit T3SYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit T4CKPS0 @ (((unsigned) &T4CON)*8) + 0;

extern volatile __bit T4CKPS1 @ (((unsigned) &T4CON)*8) + 1;

extern volatile __bit T4OUTPS0 @ (((unsigned) &T4CON)*8) + 3;

extern volatile __bit T4OUTPS1 @ (((unsigned) &T4CON)*8) + 4;

extern volatile __bit T4OUTPS2 @ (((unsigned) &T4CON)*8) + 5;

extern volatile __bit T4OUTPS3 @ (((unsigned) &T4CON)*8) + 6;

extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit TMR0IP @ (((unsigned) &INTCON2)*8) + 2;

extern volatile __bit TMR0ON @ (((unsigned) &T0CON)*8) + 7;

extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;

extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit TMR1IP @ (((unsigned) &IPR1)*8) + 0;

extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;

extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;

extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;

extern volatile __bit TMR2IP @ (((unsigned) &IPR1)*8) + 1;

extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;

extern volatile __bit TMR3CS @ (((unsigned) &T3CON)*8) + 1;

extern volatile __bit TMR3IE @ (((unsigned) &PIE2)*8) + 1;

extern volatile __bit TMR3IF @ (((unsigned) &PIR2)*8) + 1;

extern volatile __bit TMR3IP @ (((unsigned) &IPR2)*8) + 1;

extern volatile __bit TMR3ON @ (((unsigned) &T3CON)*8) + 0;

extern volatile __bit TMR4IE @ (((unsigned) &PIE3)*8) + 3;

extern volatile __bit TMR4IF @ (((unsigned) &PIR3)*8) + 3;

extern volatile __bit TMR4IP @ (((unsigned) &IPR3)*8) + 3;

extern volatile __bit TMR4ON @ (((unsigned) &T4CON)*8) + 2;

extern volatile __bit TO @ (((unsigned) &RCON)*8) + 3;

extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;

extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;

extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;

extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;

extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;

extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;

extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;

extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;

extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;

extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;

extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;

extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;

extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;

extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;

extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;

extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;

extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;

extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;

extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;

extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;

extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;

extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;

extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;

extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;

extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;

extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;

extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;

extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;

extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;

extern volatile __bit TRISE4 @ (((unsigned) &TRISE)*8) + 4;

extern volatile __bit TRISE5 @ (((unsigned) &TRISE)*8) + 5;

extern volatile __bit TRISF1 @ (((unsigned) &TRISF)*8) + 1;

extern volatile __bit TRISF2 @ (((unsigned) &TRISF)*8) + 2;

extern volatile __bit TRISF3 @ (((unsigned) &TRISF)*8) + 3;

extern volatile __bit TRISF4 @ (((unsigned) &TRISF)*8) + 4;

extern volatile __bit TRISF5 @ (((unsigned) &TRISF)*8) + 5;

extern volatile __bit TRISF6 @ (((unsigned) &TRISF)*8) + 6;

extern volatile __bit TRISF7 @ (((unsigned) &TRISF)*8) + 7;

extern volatile __bit TRISG4 @ (((unsigned) &TRISG)*8) + 4;

extern volatile __bit TRMT @ (((unsigned) &TXSTA1)*8) + 1;

extern volatile __bit TRMT1 @ (((unsigned) &TXSTA1)*8) + 1;

extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;

extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;

extern volatile __bit TX @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit TX1 @ (((unsigned) &PORTC)*8) + 6;

extern volatile __bit TX1IE @ (((unsigned) &PIE1)*8) + 4;

extern volatile __bit TX1IF @ (((unsigned) &PIR1)*8) + 4;

extern volatile __bit TX1IP @ (((unsigned) &IPR1)*8) + 4;

extern volatile __bit TX8_9 @ (((unsigned) &TXSTA1)*8) + 6;

extern volatile __bit TX9 @ (((unsigned) &TXSTA1)*8) + 6;

extern volatile __bit TX91 @ (((unsigned) &TXSTA1)*8) + 6;

extern volatile __bit TX9D @ (((unsigned) &TXSTA1)*8) + 0;

extern volatile __bit TX9D1 @ (((unsigned) &TXSTA1)*8) + 0;

extern volatile __bit TXABRT @ (((unsigned) &ESTAT)*8) + 1;

extern volatile __bit TXB0IE @ (((unsigned) &PIE3)*8) + 2;

extern volatile __bit TXB1IE @ (((unsigned) &PIE3)*8) + 3;

extern volatile __bit TXCKP @ (((unsigned) &BAUDCON1)*8) + 4;

extern volatile __bit TXCKP1 @ (((unsigned) &BAUDCON1)*8) + 4;

extern volatile __bit TXCRCEN @ (((unsigned) &MACON3)*8) + 4;

extern volatile __bit TXD8 @ (((unsigned) &TXSTA1)*8) + 0;

extern volatile __bit TXEN @ (((unsigned) &TXSTA1)*8) + 5;

extern volatile __bit TXEN1 @ (((unsigned) &TXSTA1)*8) + 5;

extern volatile __bit TXERIE @ (((unsigned) &EIE)*8) + 1;

extern volatile __bit TXERIF @ (((unsigned) &EIR)*8) + 1;

extern volatile __bit TXIP @ (((unsigned) &IPR1)*8) + 4;

extern volatile __bit TXPAUS @ (((unsigned) &MACON1)*8) + 3;

extern volatile __bit TXRST @ (((unsigned) &ECON1)*8) + 7;

extern volatile __bit TXRTS @ (((unsigned) &ECON1)*8) + 3;

extern volatile __bit UA @ (((unsigned) &SSP1STAT)*8) + 1;

extern volatile __bit UA1 @ (((unsigned) &SSP1STAT)*8) + 1;

extern volatile __bit UCEN @ (((unsigned) &ERXFCON)*8) + 7;

extern volatile __bit ULPWUIN @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;

extern volatile __bit VCFG01 @ (((unsigned) &ADCON1)*8) + 4;

extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;

extern volatile __bit VCFG11 @ (((unsigned) &ADCON1)*8) + 5;

extern volatile __bit VREFM @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit VREFP @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit W4E @ (((unsigned) &BAUDCON1)*8) + 1;

extern volatile __bit WAIT0 @ (((unsigned) &PR2)*8) + 4;

extern volatile __bit WAIT1 @ (((unsigned) &PR2)*8) + 5;

extern volatile __bit WCOL @ (((unsigned) &SSP1CON1)*8) + 7;

extern volatile __bit WCOL1 @ (((unsigned) &SSP1CON1)*8) + 7;

extern volatile __bit WM0 @ (((unsigned) &PR2)*8) + 0;

extern volatile __bit WM1 @ (((unsigned) &PR2)*8) + 1;

extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;

extern volatile __bit WRE @ (((unsigned) &PORTE)*8) + 1;

extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;

extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;

extern volatile __bit WUE @ (((unsigned) &BAUDCON1)*8) + 1;

extern volatile __bit WUE1 @ (((unsigned) &BAUDCON1)*8) + 1;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nA @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit nADDRESS @ (((unsigned) &SSP1STAT)*8) + 5;

extern volatile __bit nBOR @ (((unsigned) &RCON)*8) + 0;

extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit nPD @ (((unsigned) &RCON)*8) + 2;

extern volatile __bit nPOR @ (((unsigned) &RCON)*8) + 1;

extern volatile __bit nRBPU @ (((unsigned) &INTCON2)*8) + 7;

extern volatile __bit nRC8 @ (((unsigned) &RCSTA1)*8) + 6;

extern volatile __bit nRI @ (((unsigned) &RCON)*8) + 4;

extern volatile __bit nSS @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit nSS1 @ (((unsigned) &PORTF)*8) + 7;

extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit nT3SYNC @ (((unsigned) &T3CON)*8) + 2;

extern volatile __bit nTO @ (((unsigned) &RCON)*8) + 3;

extern volatile __bit nTX8 @ (((unsigned) &TXSTA1)*8) + 6;

extern volatile __bit nW @ (((unsigned) &SSP1STAT)*8) + 2;

extern volatile __bit nWRITE @ (((unsigned) &SSP1STAT)*8) + 2;

# 2008 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\adc.h"
union ADCResult
{
int lr;
char br[2];
};

char BusyADC (void);

void ConvertADC (void);

void CloseADC(void);

# 2026
int ReadADC(void);

# 2040
void OpenADC ( unsigned char ,
unsigned char ,
unsigned char );

# 2084
void SetChanADC(unsigned char );

# 2100
void SelChanConvADC( unsigned char );

# 38 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\ancomp.h"
void Close_ancomp( void );
void Open_ancomp(unsigned char config);

# 236 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\spi.h"
void OpenSPI1( unsigned char sync_mode,
unsigned char bus_mode,
unsigned char smp_phase );

signed char WriteSPI1( unsigned char data_out );

void getsSPI1( unsigned char *rdptr, unsigned char length );

void putsSPI1( unsigned char *wrptr );

unsigned char ReadSPI1( void );

# 414 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\can2510.h"
void CAN2510Initialize(  unsigned int configuration,
 unsigned char brp,
 unsigned char interruptFlags,
 unsigned char SPI_syncMode,
 unsigned char SPI_busMode,
 unsigned char SPI_smpPhase );

signed char CAN2510Init(  unsigned long BufferConfig,
 unsigned long BitTimeConfig,
 unsigned char interruptEnables,
 unsigned char SPI_syncMode,
 unsigned char SPI_busMode,
 unsigned char SPI_smpPhase );

void CAN2510Enable( void );

void CAN2510Disable( void );

void CAN2510Reset( void );

void CAN2510SetMode(  unsigned char mode );

unsigned char CAN2510ReadMode( void );

unsigned char CAN2510ReadStatus( void );

unsigned char CAN2510ErrorState( void );

unsigned char CAN2510InterruptStatus( void );

void CAN2510InterruptEnable( unsigned char interruptFlags );

unsigned char CAN2510ByteRead(  unsigned char addr );

void CAN2510ByteWrite(  unsigned char addr,  unsigned char value );

void CAN2510SequentialRead(  unsigned char *DataArray,
 unsigned char CAN2510addr,
 unsigned char numbytes );

void CAN2510SequentialWrite(  unsigned char *DataArray,
 unsigned char CAN2510addr,
 unsigned char numbytes );

void CAN2510BitModify(  unsigned char address,
 unsigned char mask,
 unsigned char data );

void CAN2510SetSingleMaskStd(  unsigned char maskNum,  unsigned int mask );

void CAN2510SetSingleMaskXtd(  unsigned char maskNum,  unsigned long mask );

void CAN2510SetSingleFilterStd(  unsigned char filterNum,  unsigned int filter );

void CAN2510SetSingleFilterXtd(  unsigned char filterNum,  unsigned long filter );

signed char CAN2510SetMsgFilterStd(  unsigned char bufferNum,
 unsigned int mask,
 unsigned int *filters );

signed char CAN2510SetMsgFilterXtd(  unsigned char bufferNum,
 unsigned long mask,
 unsigned long *filters );

signed char CAN2510WriteStd(  unsigned int msgId,
 unsigned char msgPriority,
 unsigned char numBytes,
 unsigned char *data );

signed char CAN2510WriteXtd(  unsigned long msgId,
 unsigned char msgPriority,
 unsigned char numBytes,
 unsigned char *data );

void CAN2510LoadBufferStd(  unsigned char bufferNum,
 unsigned int msgId,
 unsigned char numBytes,
 unsigned char *data );

void CAN2510LoadBufferXtd(  unsigned char bufferNum,
 unsigned long msgId,
 unsigned char numBytes,
 unsigned char *data );

void CAN2510LoadRTRStd(  unsigned char bufferNum,
 unsigned int msgId,
 unsigned char numBytes );

void CAN2510LoadRTRXtd(  unsigned char bufferNum,
 unsigned long msgId,
 unsigned char numBytes );

void CAN2510SetBufferPriority(  unsigned char bufferNum,
 unsigned char bufferPriority );

void CAN2510SendBuffer(  unsigned char bufferNumber );

signed char CAN2510WriteBuffer(  unsigned char bufferNum );

unsigned char CAN2510DataReady(  unsigned char bufferNum );

unsigned char CAN2510DataRead(  unsigned char bufferNum,
 unsigned long *msgId,
 unsigned char *numBytes,
 unsigned char *data );

# 64 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\capture.h"
union capstatus
{

# 73
struct
{

# 77
unsigned Cap1OVF:1;

# 82
unsigned Cap2OVF:1;



unsigned Cap3OVF:1;

# 91
unsigned Cap4OVF:1;
unsigned Cap5OVF:1;

# 115
};

unsigned :8;

};

extern union capstatus CapStatus;

union CapResult
{
unsigned int lc;
char bc[2];
};

# 474
void OpenCapture1 ( unsigned char config);
unsigned int ReadCapture1 (void);
void CloseCapture1 (void);

# 484
void OpenCapture2 ( unsigned char config);
unsigned int ReadCapture2 (void);
void CloseCapture2 (void);

# 495
void OpenCapture3 ( unsigned char config);
unsigned int ReadCapture3 (void);
void CloseCapture3 (void);

# 507
void OpenCapture4 ( unsigned char config);
unsigned int ReadCapture4 (void);
void CloseCapture4 (void);

void OpenCapture5 ( unsigned char config);
unsigned int ReadCapture5 (void);
void CloseCapture5 (void);

# 385 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\compare.h"
void OpenCompare1(unsigned char config,unsigned int period);
void CloseCompare1(void);

# 392
void OpenCompare2(unsigned char config, unsigned int period);
void CloseCompare2(void);



void OpenCompare3(unsigned char config,unsigned int period);
void CloseCompare3(void);

# 403
void OpenCompare4(unsigned char config,unsigned int period);
void CloseCompare4(void);

void OpenCompare5(unsigned char config,unsigned int period);
void CloseCompare5(void);

# 13 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stddef.h"
extern int errno;

# 65 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\GenericTypeDefs.h"
typedef enum _BOOL { FALSE = 0, TRUE } BOOL;


typedef enum _BIT { CLEAR = 0, SET } BIT;

# 75
typedef signed int INT;
typedef signed char INT8;
typedef signed short int INT16;
typedef signed long int INT32;



 typedef signed long long INT64;



typedef unsigned int UINT;
typedef unsigned char UINT8;
typedef unsigned short int UINT16;

# 93
typedef unsigned long int UINT32;


 typedef unsigned long long UINT64;


typedef union
{
UINT8 Val;
struct
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
} bits;
} UINT8_VAL, UINT8_BITS;

typedef union
{
UINT16 Val;
UINT8 v[2] ;
struct 
{
UINT8 LB;
UINT8 HB;
} byte;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
} bits;
} UINT16_VAL, UINT16_BITS;

# 187
typedef union
{
UINT32 Val;
UINT16 w[2] ;
UINT8 v[4] ;
struct 
{
UINT16 LW;
UINT16 HW;
} word;
struct 
{
UINT8 LB;
UINT8 HB;
UINT8 UB;
UINT8 MB;
} byte;
struct 
{
UINT16_VAL low;
UINT16_VAL high;
}wordUnion;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
 UINT8 b16:1;
 UINT8 b17:1;
 UINT8 b18:1;
 UINT8 b19:1;
 UINT8 b20:1;
 UINT8 b21:1;
 UINT8 b22:1;
 UINT8 b23:1;
 UINT8 b24:1;
 UINT8 b25:1;
 UINT8 b26:1;
 UINT8 b27:1;
 UINT8 b28:1;
 UINT8 b29:1;
 UINT8 b30:1;
 UINT8 b31:1;
} bits;
} UINT32_VAL;



typedef union
{
UINT64 Val;
UINT32 d[2] ;
UINT16 w[4] ;
UINT8 v[8] ;
struct 
{
UINT32 LD;
UINT32 HD;
} dword;
struct 
{
UINT16 LW;
UINT16 HW;
UINT16 UW;
UINT16 MW;
} word;
struct 
{
 UINT8 b0:1;
 UINT8 b1:1;
 UINT8 b2:1;
 UINT8 b3:1;
 UINT8 b4:1;
 UINT8 b5:1;
 UINT8 b6:1;
 UINT8 b7:1;
 UINT8 b8:1;
 UINT8 b9:1;
 UINT8 b10:1;
 UINT8 b11:1;
 UINT8 b12:1;
 UINT8 b13:1;
 UINT8 b14:1;
 UINT8 b15:1;
 UINT8 b16:1;
 UINT8 b17:1;
 UINT8 b18:1;
 UINT8 b19:1;
 UINT8 b20:1;
 UINT8 b21:1;
 UINT8 b22:1;
 UINT8 b23:1;
 UINT8 b24:1;
 UINT8 b25:1;
 UINT8 b26:1;
 UINT8 b27:1;
 UINT8 b28:1;
 UINT8 b29:1;
 UINT8 b30:1;
 UINT8 b31:1;
 UINT8 b32:1;
 UINT8 b33:1;
 UINT8 b34:1;
 UINT8 b35:1;
 UINT8 b36:1;
 UINT8 b37:1;
 UINT8 b38:1;
 UINT8 b39:1;
 UINT8 b40:1;
 UINT8 b41:1;
 UINT8 b42:1;
 UINT8 b43:1;
 UINT8 b44:1;
 UINT8 b45:1;
 UINT8 b46:1;
 UINT8 b47:1;
 UINT8 b48:1;
 UINT8 b49:1;
 UINT8 b50:1;
 UINT8 b51:1;
 UINT8 b52:1;
 UINT8 b53:1;
 UINT8 b54:1;
 UINT8 b55:1;
 UINT8 b56:1;
 UINT8 b57:1;
 UINT8 b58:1;
 UINT8 b59:1;
 UINT8 b60:1;
 UINT8 b61:1;
 UINT8 b62:1;
 UINT8 b63:1;
} bits;
} UINT64_VAL;

# 339
typedef void VOID;

typedef char CHAR8;
typedef unsigned char UCHAR8;

typedef unsigned char BYTE;
typedef unsigned short int WORD;
typedef unsigned long DWORD;


typedef unsigned long long QWORD;
typedef signed char CHAR;
typedef signed short int SHORT;
typedef signed long LONG;


typedef signed long long LONGLONG;
typedef union
{
BYTE Val;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
} bits;
} BYTE_VAL, BYTE_BITS;

typedef union
{
WORD Val;
BYTE v[2] ;
struct 
{
BYTE LB;
BYTE HB;
} byte;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
} bits;
} WORD_VAL, WORD_BITS;

typedef union
{
DWORD Val;
WORD w[2] ;
BYTE v[4] ;
struct 
{
WORD LW;
WORD HW;
} word;
struct 
{
BYTE LB;
BYTE HB;
BYTE UB;
BYTE MB;
} byte;
struct 
{
WORD_VAL low;
WORD_VAL high;
}wordUnion;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
 BYTE b16:1;
 BYTE b17:1;
 BYTE b18:1;
 BYTE b19:1;
 BYTE b20:1;
 BYTE b21:1;
 BYTE b22:1;
 BYTE b23:1;
 BYTE b24:1;
 BYTE b25:1;
 BYTE b26:1;
 BYTE b27:1;
 BYTE b28:1;
 BYTE b29:1;
 BYTE b30:1;
 BYTE b31:1;
} bits;
} DWORD_VAL;


typedef union
{
QWORD Val;
DWORD d[2] ;
WORD w[4] ;
BYTE v[8] ;
struct 
{
DWORD LD;
DWORD HD;
} dword;
struct 
{
WORD LW;
WORD HW;
WORD UW;
WORD MW;
} word;
struct 
{
 BYTE b0:1;
 BYTE b1:1;
 BYTE b2:1;
 BYTE b3:1;
 BYTE b4:1;
 BYTE b5:1;
 BYTE b6:1;
 BYTE b7:1;
 BYTE b8:1;
 BYTE b9:1;
 BYTE b10:1;
 BYTE b11:1;
 BYTE b12:1;
 BYTE b13:1;
 BYTE b14:1;
 BYTE b15:1;
 BYTE b16:1;
 BYTE b17:1;
 BYTE b18:1;
 BYTE b19:1;
 BYTE b20:1;
 BYTE b21:1;
 BYTE b22:1;
 BYTE b23:1;
 BYTE b24:1;
 BYTE b25:1;
 BYTE b26:1;
 BYTE b27:1;
 BYTE b28:1;
 BYTE b29:1;
 BYTE b30:1;
 BYTE b31:1;
 BYTE b32:1;
 BYTE b33:1;
 BYTE b34:1;
 BYTE b35:1;
 BYTE b36:1;
 BYTE b37:1;
 BYTE b38:1;
 BYTE b39:1;
 BYTE b40:1;
 BYTE b41:1;
 BYTE b42:1;
 BYTE b43:1;
 BYTE b44:1;
 BYTE b45:1;
 BYTE b46:1;
 BYTE b47:1;
 BYTE b48:1;
 BYTE b49:1;
 BYTE b50:1;
 BYTE b51:1;
 BYTE b52:1;
 BYTE b53:1;
 BYTE b54:1;
 BYTE b55:1;
 BYTE b56:1;
 BYTE b57:1;
 BYTE b58:1;
 BYTE b59:1;
 BYTE b60:1;
 BYTE b61:1;
 BYTE b62:1;
 BYTE b63:1;
} bits;
} QWORD_VAL;

# 113 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\flash.h"
extern void ReadFlash(unsigned long startaddr, unsigned int num_bytes, unsigned char *flash_array);

# 120
extern void EraseFlash(unsigned long startaddr, unsigned long endaddr);

extern void WriteBlockFlash(unsigned long startaddr, unsigned char num_blocks, unsigned char *flash_array);

extern void WriteBytesFlash(unsigned long startaddr, unsigned int num_bytes, unsigned char *flash_array);

# 244 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\i2c.h"
void OpenI2C1( unsigned char sync_mode, unsigned char slew );

# 264
unsigned char ReadI2C1( void );

# 279
signed char WriteI2C1( unsigned char data_out );

# 294
signed char getsI2C1( unsigned char *rdptr, unsigned char length );


signed char putsI2C1( unsigned char *wrptr );

# 305
signed char EEAckPolling1( unsigned char control );


signed char EEByteWrite1( unsigned char control,
unsigned char address,
unsigned char data );


signed int EECurrentAddRead1( unsigned char control );


signed char EEPageWrite1( unsigned char control,
unsigned char address,
unsigned char *wrptr );


signed int EERandomRead1( unsigned char control, unsigned char address );


signed char EESequentialRead1( unsigned char control,
unsigned char address,
unsigned char *rdptr,
unsigned char length );

# 200 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\mwire.h"
void OpenMwire1( unsigned char sync_mode );


unsigned char ReadMwire1( unsigned char high_byte,
unsigned char low_byte );

# 219
signed char WriteMwire1( unsigned char data_out );

# 234
void getsMwire1( unsigned char *rdptr, unsigned char length );

# 126 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\portb.h"
void OpenPORTB( unsigned char config);

# 176
void OpenRB0INT( unsigned char config);

# 194
void OpenRB1INT( unsigned char config);

# 211
void OpenRB2INT( unsigned char config);

# 230
void OpenRB3INT( unsigned char config);

# 85 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\pwm.h"
union PWMDC
{
unsigned int lpwm;
char bpwm[2];
};

# 467
void OpenPWM1 ( char period);
void SetDCPWM1 ( unsigned int duty_cycle);

# 474
void SetOutputPWM1 ( unsigned char output_config,
unsigned char pwm_mode);

void ClosePWM1 (void);

# 485
void OpenPWM2 ( char period);
void SetDCPWM2( unsigned int duty_cycle);


void SetOutputPWM2 ( unsigned char output_config,
unsigned char pwm_mode);

void ClosePWM2 (void);

# 500
void OpenPWM3 ( char period);
void SetDCPWM3 ( unsigned int duty_cycle);

void SetOutputPWM3 ( unsigned char output_config,
unsigned char pwm_mode);

void ClosePWM3 (void);

# 514
void OpenPWM4 ( char period);
void SetDCPWM4 ( unsigned int duty_cycle);
void ClosePWM4 (void);

void OpenPWM5 ( char period);
void SetDCPWM5 ( unsigned int duty_cycle);
void ClosePWM5 (void);

# 16 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\reset.h"
char isMCLR(void);
void StatusReset(void);
char isPOR(void);
char isWU(void);


char isBOR(void);



char isWDTTO(void);
char isWDTWU(void);

# 687 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\rtcc.h"
void Open_RTCC(void);
void Close_RTCC(void);
unsigned char update_RTCC(void);

# 97 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\sw_i2c.h"
void SWStopI2C ( void );
void SWStartI2C ( void );
void SWRestartI2C ( void );
void SWStopI2C ( void );

signed char SWAckI2C( void );
signed char Clock_test( void );
signed int SWReadI2C( void );
signed char SWWriteI2C(  unsigned char data_out );
signed char SWGetsI2C(  unsigned char *rdptr,  unsigned char length );
signed char SWPutsI2C(  unsigned char *wrptr );

# 84 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\sw_spi.h"
void OpenSWSPI(void);


char WriteSWSPI( char output);


void SetCSSWSPI(void);


void ClearCSSWSPI(void);

# 47 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\sw_uart.h"
void OpenUART(void);

unsigned char ReadUART(void);

void WriteUART( unsigned char);

void getsUART( char *, unsigned char);

void putsUART( char *);

# 79
extern void DelayRXBitUART (void);
extern void DelayRXHalfBitUART(void);
extern void DelayTXBitUART (void);

# 36 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\timers.h"
union Timers
{
unsigned int lt;
char bt[2];
};

# 118
void OpenTimer0 ( unsigned char config);
void CloseTimer0 (void);
unsigned int ReadTimer0 (void);
void WriteTimer0 ( unsigned int timer0);

# 236
void OpenTimer1 ( unsigned char config);
void CloseTimer1 (void);
unsigned int ReadTimer1 (void);
void WriteTimer1 ( unsigned int timer1);

# 325
void OpenTimer2 ( unsigned char config);
void CloseTimer2 (void);

# 391
void OpenTimer3 ( unsigned char config);
void CloseTimer3 (void);
unsigned int ReadTimer3 (void);
void WriteTimer3 ( unsigned int timer3);

# 541
void OpenTimer4 ( unsigned char config);
void CloseTimer4 (void);

# 1179
void SetTmrCCPSrc( unsigned char );

# 200 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\usart.h"
union USART1
{
unsigned char val;
struct
{
unsigned RX_NINE:1;
unsigned TX_NINE:1;
unsigned FRAME_ERROR:1;
unsigned OVERRUN_ERROR:1;
unsigned fill:4;
};
};
extern union USART1 USART1_Status;

void Open1USART ( unsigned char config, unsigned int spbrg);

# 244
char Read1USART (void);
void Write1USART ( char data);
void gets1USART ( char *buffer, unsigned char len);
void puts1USART ( char *data);
void putrs1USART ( const  char *data);

# 660
void baud1USART ( unsigned char baudconfig);

# 87 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\xlcd.h"
void OpenXLCD( unsigned char);

# 92
void SetCGRamAddr( unsigned char);

# 97
void SetDDRamAddr( unsigned char);

# 102
unsigned char BusyXLCD(void);

# 107
unsigned char ReadAddrXLCD(void);

# 112
char ReadDataXLCD(void);

# 117
void WriteCmdXLCD( unsigned char);

# 122
void WriteDataXLCD( char);

# 132
void putsXLCD( char *);

# 137
void putrsXLCD(const char *);


extern void DelayFor18TCY(void);
extern void DelayPORXLCD(void);
extern void DelayXLCD(void);

# 13 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\plib\delays.h"
void Delay1TCYx(unsigned char);

# 19
void Delay10TCYx(unsigned char);

# 25
void Delay100TCYx(unsigned char);

# 31
void Delay1KTCYx(unsigned char);

# 37
void Delay10KTCYx(unsigned char);

# 18 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\pic18.h"
__attribute__((__unsupported__("The flash_write routine is no longer supported. Please use the peripheral library functions: WriteBytesFlash, WriteBlockFlash or WriteWordFlash"))) void flash_write(const unsigned char *, unsigned int, __far unsigned char *);


# 41
#pragma intrinsic(__nop)
extern void __nop(void);


# 146
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);
#pragma intrinsic(_delaywdt)
extern __nonreentrant void _delaywdt(unsigned long);
#pragma intrinsic(_delay3)
extern __nonreentrant void _delay3(unsigned char);

# 95 "SLCD/slcd.h"
void OpenSLCD( unsigned char);

# 100
void SetCGRamAddr( unsigned char);

# 105
inline void SLCDSetDDRamAddr( unsigned char);

# 110
unsigned char BusySLCD(void);

# 115
unsigned char ReadAddrSLCD(void);

# 120
char ReadDataSLCD(void);

# 125
void WriteCmdSLCD( unsigned char);

# 130
void WriteDataSLCD( char);

# 140
void PutsSLCD( const char *);

# 145
void PutrsSLCD(const char *);


extern void DelayFor18TCY(void);
extern void DelayPORSLCD(void);
extern void DelaySLCD(void);

# 26 "LCD.h"
extern char dispbuf1[17];
extern char dispbuf2[17];


inline void RefreshLine1(void);

inline void RefreshLine1Ex(const char *line);

inline void RefreshLine2(void);

inline void RefreshLine2Ex(const char *line);

# 22 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\string.h"
extern void * memcpy(void *, const void *, size_t);
extern void * memmove(void *, const void *, size_t);
extern void * memset(void *, int, size_t);

# 42
extern char * strcat(char *, const char *);
extern char * strcpy(char *, const char *);
extern char * strncat(char *, const char *, size_t);
extern char * strncpy(char *, const char *, size_t);
extern char * strdup(const char *);
extern char * strtok(char *, const char *);


extern int memcmp(const void *, const void *, size_t);
extern int strcmp(const char *, const char *);
extern int stricmp(const char *, const char *);
extern int strncmp(const char *, const char *, size_t);
extern int strnicmp(const char *, const char *, size_t);
extern void * memchr(const void *, int, size_t);
extern size_t strcspn(const char *, const char *);
extern char * strpbrk(const char *, const char *);
extern size_t strspn(const char *, const char *);
extern char * strstr(const char *, const char *);
extern char * stristr(const char *, const char *);
extern char * strerror(int);
extern size_t strlen(const char *);
extern char * strchr(const char *, int);
extern char * strichr(const char *, int);
extern char * strrchr(const char *, int);
extern char * strrichr(const char *, int);

# 13 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stddef.h"
extern int errno;

# 12 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdbool.h"
typedef unsigned char bool;

# 50 "../tcpip\tcpip_types.h"
typedef union
{
uint8_t Val;
struct 
{
uint8_t b0:1;
uint8_t b1:1;
uint8_t b2:1;
uint8_t b3:1;
uint8_t b4:1;
uint8_t b5:1;
uint8_t b6:1;
uint8_t b7:1;
} bits;
} TCPIP_UINT8_VAL, TCPIP_UINT8_BITS;

typedef union
{
uint16_t Val;
uint8_t v[2];
struct 
{
uint8_t LB;
uint8_t HB;
} byte;
struct 
{
uint8_t b0:1;
uint8_t b1:1;
uint8_t b2:1;
uint8_t b3:1;
uint8_t b4:1;
uint8_t b5:1;
uint8_t b6:1;
uint8_t b7:1;
uint8_t b8:1;
uint8_t b9:1;
uint8_t b10:1;
uint8_t b11:1;
uint8_t b12:1;
uint8_t b13:1;
uint8_t b14:1;
uint8_t b15:1;
} bits;
} TCPIP_UINT16_VAL, TCPIP_UINT16_BITS;


typedef union
{
uint32_t Val;
uint16_t w[2] ;
uint8_t v[4];
struct 
{
uint16_t LW;
uint16_t HW;
} word;
struct 
{
uint8_t LB;
uint8_t HB;
uint8_t UB;
uint8_t MB;
} byte;
struct 
{
TCPIP_UINT16_VAL low;
TCPIP_UINT16_VAL high;
}wordUnion;
struct 
{
uint8_t b0:1;
uint8_t b1:1;
uint8_t b2:1;
uint8_t b3:1;
uint8_t b4:1;
uint8_t b5:1;
uint8_t b6:1;
uint8_t b7:1;
uint8_t b8:1;
uint8_t b9:1;
uint8_t b10:1;
uint8_t b11:1;
uint8_t b12:1;
uint8_t b13:1;
uint8_t b14:1;
uint8_t b15:1;
uint8_t b16:1;
uint8_t b17:1;
uint8_t b18:1;
uint8_t b19:1;
uint8_t b20:1;
uint8_t b21:1;
uint8_t b22:1;
uint8_t b23:1;
uint8_t b24:1;
uint8_t b25:1;
uint8_t b26:1;
uint8_t b27:1;
uint8_t b28:1;
uint8_t b29:1;
uint8_t b30:1;
uint8_t b31:1;
} bits;
} TCPIP_UINT32_VAL;

# 61 "../tcpip\stack_task.h"
typedef struct 
{
uint8_t v[6];
} MAC_ADDR;

# 70
typedef struct 
{
TCPIP_UINT32_VAL IPAddr;
MAC_ADDR MACAddr;
} NODE_INFO;


typedef struct  appConfigStruct
{
TCPIP_UINT32_VAL MyIPAddr;
TCPIP_UINT32_VAL MyMask;
TCPIP_UINT32_VAL MyGateway;
TCPIP_UINT32_VAL PrimaryDNSServer;
TCPIP_UINT32_VAL SecondaryDNSServer;
TCPIP_UINT32_VAL DefaultIPAddr;
TCPIP_UINT32_VAL DefaultMask;
uint8_t NetBIOSName[16];
struct
{
unsigned char : 6;
unsigned char bIsDHCPEnabled : 1;
unsigned char bInConfigMode : 1;
} Flags;
MAC_ADDR MyMACAddr;

# 114
} APP_CONFIG;


extern APP_CONFIG AppConfig;


void StackInit(void);
void StackTask(void);
void StackApplications(void);

# 44 "../tcpip\helpers.h"
char *strupr(char* s);

# 103 "D:\Program Files (x86)\Microchip\xc8\v1.33\include\stdlib.h"
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 65 "../tcpip\helpers.h"
uint32_t LFSRSeedRand(uint32_t dwSeed);
uint16_t LFSRRand(void);
uint32_t GenerateRandomDWORD(void);
void uitoa(uint16_t Value, uint8_t* Buffer);
void UnencodeURL(uint8_t* URL);
uint16_t Base64Decode(uint8_t* cSourceData, uint16_t wSourceLen, uint8_t* cDestData, uint16_t wDestLen);
uint16_t Base64Encode(uint8_t* cSourceData, uint16_t wSourceLen, uint8_t* cDestData, uint16_t wDestLen);
bool StringToIPAddress(uint8_t* str, TCPIP_UINT32_VAL* IPAddress);
uint8_t ReadStringUART(uint8_t* Dest, uint8_t BufferLen);
uint8_t hexatob(TCPIP_UINT16_VAL AsciiChars);
uint8_t btohexa_high(uint8_t b);
uint8_t btohexa_low(uint8_t b);
signed char stricmppgm2ram(uint8_t* a, const uint8_t* b);
char * strnchr(const char *searchString, size_t count, char c);
size_t strncpy_m(char* destStr, size_t destSize, int nStrings, ...);


bool ROMStringToIPAddress(const uint8_t* str, TCPIP_UINT32_VAL* IPAddress);

# 88
uint16_t swaps(uint16_t v);




uint32_t swapl(uint32_t v);


uint16_t CalcIPChecksum(uint8_t* buffer, uint16_t len);


uint32_t leftRotateDWORD(uint32_t val, uint8_t bits);

# 105
void FormatNetBIOSName(uint8_t Name[16]);




typedef enum
{
PROTOCOL_HTTP = 0u,
PROTOCOL_HTTPS,
PROTOCOL_MMS,
PROTOCOL_RTSP
} PROTOCOLS;

uint8_t ExtractURLFields(uint8_t *vURL, PROTOCOLS *protocol, uint8_t *vUsername, uint16_t *wUsernameLen, uint8_t *vPassword, uint16_t *wPasswordLen, uint8_t *vHostname, uint16_t *wHostnameLen, uint16_t *wPort, uint8_t *vFilePath, uint16_t *wFilePathLen);
int16_t Replace(uint8_t *vExpression, const uint8_t *vFind, const uint8_t *vReplacement, uint16_t wMaxLen, bool bSearchCaseInsensitive);

# 59 "../tcpip\delay.h"
void DelayMs(uint16_t ms);

# 49 "../tcpip\tick.h"
typedef  uint32_t TICK;

# 74
void TickInit(void);
uint32_t TickGet(void);
uint32_t TickGetDiv256(void);
uint32_t TickGetDiv64K(void);
uint32_t TickConvertToMilliseconds(uint32_t dwTickValue);
void TickUpdate(void);

# 58 "../tcpip\eth97j60.h"
typedef union {
BYTE v[7];
struct {
WORD ByteCount;
unsigned CollisionCount:4;
unsigned CRCError:1;
unsigned LengthCheckError:1;
unsigned LengthOutOfRange:1;
unsigned Done:1;
unsigned Multicast:1;
unsigned Broadcast:1;
unsigned PacketDefer:1;
unsigned ExcessiveDefer:1;
unsigned MaximumCollisions:1;
unsigned LateCollision:1;
unsigned Giant:1;
unsigned Underrun:1;
WORD BytesTransmittedOnWire;
unsigned ControlFrame:1;
unsigned PAUSEControlFrame:1;
unsigned BackpressureApplied:1;
unsigned VLANTaggedFrame:1;
unsigned Zeros:4;
} bits;
} TXSTATUS;

typedef union {
BYTE v[4];
struct {
WORD ByteCount;
unsigned PreviouslyIgnored:1;
unsigned RXDCPreviouslySeen:1;
unsigned CarrierPreviouslySeen:1;
unsigned CodeViolation:1;
unsigned CRCError:1;
unsigned LengthCheckError:1;
unsigned LengthOutOfRange:1;
unsigned ReceiveOk:1;
unsigned Multicast:1;
unsigned Broadcast:1;
unsigned DribbleNibble:1;
unsigned ControlFrame:1;
unsigned PauseControlFrame:1;
unsigned UnsupportedOpcode:1;
unsigned VLANType:1;
unsigned Zero:1;
} bits;
} RXSTATUS;

# 121
typedef union {
WORD Val;
WORD_VAL VAL;


struct {
unsigned :8;
unsigned PDPXMD:1;
unsigned :7;
} PHCON1bits;


struct {
unsigned :2;
unsigned LLSTAT:1;
unsigned :5;
unsigned :8;
} PHSTAT1bits;


struct {
unsigned :4;
unsigned RXAPDIS:1;
unsigned :3;
unsigned HDLDIS:1;
unsigned :5;
unsigned FRCLNK:1;
unsigned :1;
} PHCON2bits;


struct {
unsigned :8;
unsigned :2;
unsigned LSTAT:1;
unsigned COLSTAT:1;
unsigned RXSTAT:1;
unsigned TXSTAT:1;
unsigned :2;
} PHSTAT2bits;


struct {
unsigned :1;
unsigned PGEIE:1;
unsigned :2;
unsigned PLNKIE:1;
unsigned :3;
unsigned :8;
} PHIEbits;


struct {
unsigned :2;
unsigned PGIF:1;
unsigned :1;
unsigned PLNKIF:1;
unsigned :3;
unsigned :8;
} PHIRbits;


struct {
unsigned :1;
unsigned STRCH:1;
unsigned LFRQ0:1;
unsigned LFRQ1:1;
unsigned LBCFG0:1;
unsigned LBCFG1:1;
unsigned LBCFG2:1;
unsigned LBCFG3:1;
unsigned LACFG0:1;
unsigned LACFG1:1;
unsigned LACFG2:1;
unsigned LACFG3:1;
unsigned :4;
} PHLCONbits;
struct {
unsigned :1;
unsigned STRCH:1;
unsigned LFRQ:2;
unsigned LBCFG:4;
unsigned LACFG:4;
unsigned :4;
} PHLCONbits2;
} PHYREG;

# 82 "../tcpip\mac.h"
typedef struct 
{
MAC_ADDR DestMACAddr;
MAC_ADDR SourceMACAddr;
TCPIP_UINT16_VAL Type;
} ETHER_HEADER;

# 153
uint16_t MACCalcRxChecksum(uint16_t offset, uint16_t len);
uint16_t CalcIPBufferChecksum(uint16_t len);

void MACPowerDown(void);
void MACEDPowerDown(void);
void MACPowerUp(void);

# 162
void WritePHYReg(uint8_t Register, uint16_t Data);
PHYREG ReadPHYReg(uint8_t Register);

void SetRXHashTableEntry(MAC_ADDR DestMACAddr);


void SetCLKOUT(uint8_t NewConfig);
uint8_t GetCLKOUT(void);

# 271
void MACInit(void);
void MACProcess(void);
bool MACIsLinked(void);

bool MACGetHeader(MAC_ADDR *remote, uint8_t* type);
void MACSetReadPtrInRx(uint16_t offset);
unsigned short MACSetWritePtr(unsigned short address);
unsigned short MACSetReadPtr(unsigned short address);
uint8_t MACGet(void);
uint16_t MACGetArray(uint8_t *val, uint16_t len);
void MACDiscardRx(void);
uint16_t MACGetFreeRxSize(void);
void MACMemCopyAsync(unsigned short destAddr, unsigned short sourceAddr, uint16_t len);
bool MACIsMemCopyDone(void);

void MACPutHeader(MAC_ADDR *remote, uint8_t type, uint16_t dataLen);
bool MACIsTxReady(void);
void MACPut(uint8_t val);
void MACPutArray(uint8_t *val, uint16_t len);
void MACFlush(void);




void MACPutROMArray(const uint8_t *val, uint16_t len);

# 51 "../tcpip\ip.h"
typedef struct _IP_HEADER
{
uint8_t VersionIHL;
uint8_t TypeOfService;
uint16_t TotalLength;
uint16_t Identification;
uint16_t FragmentInfo;
uint8_t TimeToLive;
uint8_t Protocol;
uint16_t HeaderChecksum;
TCPIP_UINT32_VAL SourceAddress;
TCPIP_UINT32_VAL DestAddress;
} IP_HEADER;




typedef struct _PSEUDO_HEADER
{
TCPIP_UINT32_VAL SourceAddress;
TCPIP_UINT32_VAL DestAddress;
uint8_t Zero;
uint8_t Protocol;
uint16_t Length;
} PSEUDO_HEADER;

# 141
uint16_t IPPutHeader(NODE_INFO *remote,
uint8_t protocol,
uint16_t len);

# 172
bool IPGetHeader(TCPIP_UINT32_VAL *localIP,
NODE_INFO *remote,
uint8_t *protocol,
uint16_t *len);

# 230
void IPSetRxBuffer(uint16_t Offset);

# 45 "../tcpip\arp.h"
void ARPInit(void);

# 57
typedef struct 
{
uint16_t HardwareType;
uint16_t Protocol;
uint8_t MACAddrLen;
uint8_t ProtocolLen;
uint16_t Operation;
MAC_ADDR SenderMACAddr;
TCPIP_UINT32_VAL SenderIPAddr;
MAC_ADDR TargetMACAddr;
TCPIP_UINT32_VAL TargetIPAddr;
} ARP_PACKET;

bool ARPProcess(void);
void ARPResolve(TCPIP_UINT32_VAL* IPAddr);
bool ARPIsResolved(TCPIP_UINT32_VAL* IPAddr, MAC_ADDR* MACAddr);
void SwapARPPacket(ARP_PACKET* p);

# 88
bool ARPSendPkt(uint32_t SrcIPAddr, uint32_t DestIPAddr, uint8_t op_req );

# 44 "../tcpip\spi_eeprom.h"
typedef bool XEE_RESULT;

# 50 "../tcpip\tcp.h"
typedef uint8_t TCP_SOCKET;

# 61
typedef enum
{
TCP_GET_DNS_MODULE,
TCP_DNS_RESOLVE,
TCP_GATEWAY_SEND_ARP,
TCP_GATEWAY_GET_ARP,

TCP_LISTEN,
TCP_SYN_SENT,
TCP_SYN_RECEIVED,
TCP_ESTABLISHED,
TCP_FIN_WAIT_1,
TCP_FIN_WAIT_2,
TCP_CLOSING,

TCP_CLOSE_WAIT,
TCP_LAST_ACK,
TCP_CLOSED,

TCP_CLOSED_BUT_RESERVED
} TCP_STATE;

typedef enum
{
SSL_NONE = 0,
SSL_HANDSHAKING,
SSL_ESTABLISHED,
SSL_CLOSED
} SSL_STATE;

# 98
typedef struct
{
unsigned short bufferTxStart;
unsigned short bufferRxStart;
unsigned short bufferEnd;
unsigned short txHead;
unsigned short txTail;
unsigned short rxHead;
unsigned short rxTail;
uint32_t eventTime;
uint16_t eventTime2;
union
{
uint16_t delayedACKTime;
uint16_t closeWaitTime;
} OverlappedTimers;
TCP_STATE smState;
struct
{
unsigned char vUnackedKeepalives : 3;
unsigned char bServer : 1;
unsigned char bTimerEnabled : 1;
unsigned char bTimer2Enabled : 1;
unsigned char bDelayedACKTimerEnabled : 1;
unsigned char bOneSegmentReceived : 1;
unsigned char bHalfFullFlush : 1;
unsigned char bTXASAP : 1;
unsigned char bTXASAPWithoutTimerReset : 1;
unsigned char bTXFIN : 1;
unsigned char bSocketReset : 1;
unsigned char bSSLHandshaking : 1;
unsigned char filler : 2;
} Flags;
TCPIP_UINT16_VAL remoteHash;

# 141
uint8_t vMemoryMedium;

} TCB_STUB;




typedef struct
{
uint32_t retryInterval;
uint32_t MySEQ;
uint32_t RemoteSEQ;
unsigned short txUnackedTail;
TCPIP_UINT16_VAL remotePort;
TCPIP_UINT16_VAL localPort;
uint16_t remoteWindow;
uint16_t wFutureDataSize;
union
{
NODE_INFO niRemoteMACIP;
uint32_t dwRemoteHost;
} remote;
int16_t sHoleSize;
struct
{
unsigned char bFINSent : 1;
unsigned char bSYNSent : 1;
unsigned char bRemoteHostIsROM : 1;
unsigned char bRXNoneACKed1 : 1;
unsigned char bRXNoneACKed2 : 1;
unsigned char filler : 3;
} flags;
uint16_t wRemoteMSS;

# 177
uint8_t retryCount;
uint8_t vSocketPurpose;
} TCB;


typedef struct
{
NODE_INFO remote;
TCPIP_UINT16_VAL remotePort;
} SOCKET_INFO;

# 193
void TCPInit(void);
SOCKET_INFO* TCPGetRemoteInfo(TCP_SOCKET hTCP);
bool TCPWasReset(TCP_SOCKET hTCP);
bool TCPIsConnected(TCP_SOCKET hTCP);
void TCPDisconnect(TCP_SOCKET hTCP);
void TCPClose(TCP_SOCKET hTCP);
uint16_t TCPIsPutReady(TCP_SOCKET hTCP);
bool TCPPut(TCP_SOCKET hTCP, uint8_t byte);
uint16_t TCPPutArray(TCP_SOCKET hTCP, uint8_t* Data, uint16_t Len);
uint8_t* TCPPutString(TCP_SOCKET hTCP, uint8_t* Data);
uint16_t TCPIsGetReady(TCP_SOCKET hTCP);
uint16_t TCPGetRxFIFOFree(TCP_SOCKET hTCP);
bool TCPGet(TCP_SOCKET hTCP, uint8_t* byte);
uint16_t TCPGetArray(TCP_SOCKET hTCP, uint8_t* buffer, uint16_t count);
uint8_t TCPPeek(TCP_SOCKET hTCP, uint16_t wStart);
uint16_t TCPPeekArray(TCP_SOCKET hTCP, uint8_t *vBuffer, uint16_t wLen, uint16_t wStart);
uint16_t TCPFindEx(TCP_SOCKET hTCP, uint8_t cFind, uint16_t wStart, uint16_t wSearchLen, bool bTextCompare);
uint16_t TCPFindArrayEx(TCP_SOCKET hTCP, uint8_t* cFindArray, uint16_t wLen, uint16_t wStart, uint16_t wSearchLen, bool bTextCompare);
void TCPDiscard(TCP_SOCKET hTCP);
bool TCPProcess(NODE_INFO* remote, TCPIP_UINT32_VAL* localIP, uint16_t len);
void TCPTick(void);
void TCPFlush(TCP_SOCKET hTCP);

# 244
TCP_SOCKET TCPOpen(uint32_t dwRemoteHost, uint8_t vRemoteHostType, uint16_t wPort, uint8_t vSocketPurpose);


uint16_t TCPFindROMArrayEx(TCP_SOCKET hTCP, const uint8_t* cFindArray, uint16_t wLen, uint16_t wStart, uint16_t wSearchLen, bool bTextCompare);

# 259
uint16_t TCPPutROMArray(TCP_SOCKET hTCP, const uint8_t* Data, uint16_t Len);
const uint8_t* TCPPutROMString(TCP_SOCKET hTCP, const uint8_t* Data);

# 268
uint16_t TCPGetTxFIFOFull(TCP_SOCKET hTCP);

# 278
bool TCPAdjustFIFOSize(TCP_SOCKET hTCP, uint16_t wMinRXSize, uint16_t wMinTXSize, uint8_t vFlags);

# 24 "Persistence.h"
struct DAC_SETTINGS
{
uint8_t Sequence;
uint8_t SampleRate;

# 34
uint8_t Volume;
uint8_t ChannelScaling[16];
uint8_t CheckSum;

};

extern struct DAC_SETTINGS __persistent s_dacSettings;

uint8_t GetCheckSum( uint8_t * data, uint8_t dataLen );

void SaveToFlash(void);

void RestoreFromFlash(void);

# 52 "Device.h"
inline void UpdateMasterVolume(void);
void ChangeMasterVolume(signed char d);
void UpdateSampleRate(void);
void SendVolumeToDevice(void);
void SendDataToDeviceCh(uint8_t offset);
inline void IRTimerInt();
void PowerOn(void);
void PowerOff(void);

# 24 "IR.h"
extern volatile uint8_t s_irLearn;
extern volatile uint8_t s_irCodeBitIdx;
extern volatile uint8_t s_irCodeByteIdx;
extern volatile uint8_t s_irCode[16];
extern uint8_t s_numTicksDiff[256];
extern uint16_t s_numTicksDiffIdx;
extern uint8_t s_prevIRPort;

inline void InitrIR(void);
void ProcessIRInt(void);


# 55 "main.c"
#pragma config DEBUG = ON
#pragma config WDT = OFF
#pragma config STVR = ON
#pragma config XINST = OFF


#pragma config CP0 = OFF


#pragma config FOSC = HS
#pragma config FOSC2 = ON
#pragma config FCMEN = OFF
#pragma config IESO = OFF


#pragma config WDTPS = 32768


#pragma config ETHLED = ON




static const BYTE SerializedMACAddress[6] = {(0x00), (0x04), (0xA3), (0x00), (0x00), (0x00)};

APP_CONFIG AppConfig;

static void InitAppConfig(void)
{
AppConfig.Flags.bIsDHCPEnabled = FALSE;
AppConfig.Flags.bInConfigMode = TRUE;
memcpy((void*)&AppConfig.MyMACAddr,(const void*)SerializedMACAddress,sizeof(AppConfig.MyMACAddr));

# 92
AppConfig.MyIPAddr.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (97ul)<<24ul;
AppConfig.DefaultIPAddr.Val = AppConfig.MyIPAddr.Val;
AppConfig.MyMask.Val = (255ul) | (255ul)<<8ul | (255ul)<<16ul | (0ul)<<24ul;
AppConfig.DefaultMask.Val = AppConfig.MyMask.Val;
AppConfig.MyGateway.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (1ul)<<24ul;
AppConfig.PrimaryDNSServer.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (1ul)<<24ul;
AppConfig.SecondaryDNSServer.Val = (0ul) | (0ul)<<8ul | (0ul)<<16ul | (0ul)<<24ul;


memcpy(AppConfig.NetBIOSName,(const void*)"TheDAC",16);
FormatNetBIOSName(AppConfig.NetBIOSName);
}

void Configure(void)
{
OSCTUNE = 0;
OSCCONbits.IDLEN = 1;
OSCCONbits.SCS1 = 1;
OSCCONbits.SCS0 = 0;

RCONbits.IPEN = 0;

ADCON1 = 0x0F;
CMCON = 0x0F;

LATDbits.LD2 = 1;
PowerOff();


TRISA = 0b00000100;
TRISB = 0b11011111;
TRISC = 0x00;
TRISD = 0x00;
TRISE = 0x00;
TRISF = 0x00;

TRISG = 0x00;

LATA = 0;
LATB = 0;
LATC = 0;
LATD = 0;
LATE = 0;

INTCON2 = 0;
INTCON3 = 0x10 | 0x8 | 0x20;

TickInit();
InitAppConfig();
StackInit();
InitrIR();

INTCON = 0x40 | 0x8 | 0x10;
}



uint32_t s_encoderLastUpdate = 0;

void __interrupt ISRLP(void)
{
TickUpdate();

if (INTCON3bits.INT2F)
{
s_dacSettings.SampleRate ++;
if (s_dacSettings.SampleRate > 5) s_dacSettings.SampleRate = 0;
UpdateSampleRate();
INTCON3bits.INT2F = 0;
}

if (INTCON3bits.INT1F)
{

if (!PORTBbits.RB1)
{
uint32_t currentTS = TickGet();
uint32_t diff = currentTS - s_encoderLastUpdate;


signed char d;

if (diff < 600)
{
d = -2;
}
else
{
d = -1;
}
s_encoderLastUpdate = currentTS;
if (PORTAbits.RA2)
{
d = -d;
}

ChangeMasterVolume(d);
}
INTCON3bits.INT1F = 0;
}
if (INTCON3bits.INT3F)
{

SaveToFlash();
INTCON3bits.INT3F = 0;
}

if (INTCONbits.INT0F)
{

if (LATDbits.LD0)
{
PowerOff();
Delay1KTCYx(1);
}
else
{
PowerOn();
}
INTCONbits.INT0F = 0;
}

if (INTCONbits.RBIF)
{
ProcessIRInt();
INTCONbits.RBIF = 0;
}
if (PIR1bits.TMR1IF)
{
IRTimerInt();
PIR1bits.TMR1IF = 0;
}
(INTCONbits.GIE = 1);
}

uint8_t resOK[3] = {0x00, 0x10, 0xFF};
uint8_t badChecksum[2] = {0xFF, 0x00};
uint8_t invalidCommand[2] = {0xFF, 0x01};

void TCPServer(void)
{
uint16_t wMaxGet, wMaxPut;
static TCP_SOCKET srvSocket;
static enum _TCPServerState
{
SM_HOME = 0,
SM_LISTENING,
SM_CLOSING,
} tcpServerState = SM_HOME;




switch(tcpServerState)
{
case SM_HOME:

srvSocket = TCPOpen(0, 0u, 89, 1);
if(srvSocket == (0xFE))
return;

tcpServerState = SM_LISTENING;
break;

case SM_LISTENING:

if(!TCPIsConnected(srvSocket))
return;


wMaxGet = TCPIsGetReady(srvSocket);
wMaxPut = TCPIsPutReady(srvSocket);

# 273
uint8_t cmdBytes[sizeof(s_dacSettings.ChannelScaling) + 2];
memset(&cmdBytes, 0, sizeof(cmdBytes));
TCPGetArray(srvSocket, cmdBytes, sizeof(cmdBytes));
uint8_t checksum = GetCheckSum(cmdBytes, sizeof(cmdBytes) - 1);
if (checksum != cmdBytes[sizeof(cmdBytes) - 1])
{
memset(&cmdBytes, 0, sizeof(cmdBytes));
cmdBytes[0] = 0xFF;
cmdBytes[1] = 0x00;
}
else
{
switch(*cmdBytes)
{
case 0:
memset(&cmdBytes, 0, sizeof(cmdBytes));
cmdBytes[0] = 0x01;
cmdBytes[1] = s_dacSettings.Volume;
cmdBytes[2] = s_dacSettings.SampleRate;
cmdBytes[3] = LATDbits.LD0;
break;
case 1:
s_dacSettings.Volume = cmdBytes[1];
(INTCONbits.GIE = 0);
UpdateMasterVolume();
(INTCONbits.GIE = 1);
memset(&cmdBytes, 0, sizeof(cmdBytes));
break;
case 2:
cmdBytes[0] = 0x02;
memcpy(&cmdBytes[1], &s_dacSettings.ChannelScaling, sizeof(s_dacSettings.ChannelScaling));
break;
case 3:
memcpy(&s_dacSettings.ChannelScaling, &cmdBytes[1], sizeof(s_dacSettings.ChannelScaling));
(INTCONbits.GIE = 0);
SendVolumeToDevice();
(INTCONbits.GIE = 1);
memset(&cmdBytes, 0, sizeof(cmdBytes));
break;
case 4:
memset(&cmdBytes, 0, sizeof(cmdBytes));
cmdBytes[0] = 0x01;
cmdBytes[1] = s_dacSettings.SampleRate;
break;
case 5:
s_dacSettings.SampleRate = cmdBytes[1];
(INTCONbits.GIE = 0);
UpdateSampleRate();
(INTCONbits.GIE = 1);
memset(&cmdBytes, 0, sizeof(cmdBytes));
break;
case 7:
(INTCONbits.GIE = 0);
SaveToFlash();
(INTCONbits.GIE = 1);
memset(&cmdBytes, 0, sizeof(cmdBytes));
break;
case 9:
if (cmdBytes[1])
{
PowerOn();
}
else
{
PowerOff();
}
memset(&cmdBytes, 0, sizeof(cmdBytes));
break;
case 10:

# 353
s_irLearn = 0xFF;
if (cmdBytes[1] < 16)
{
memcpy(&cmdBytes[1], &s_irCode, sizeof(cmdBytes) - 2);
memset(&s_irCode, 0, sizeof(s_irCode));
s_irCodeBitIdx = 1;
s_irCodeByteIdx = 0;
}
else
{
cmdBytes[1] = s_irCodeBitIdx;
cmdBytes[2] = s_irCodeByteIdx;
cmdBytes[3] = s_prevIRPort;
cmdBytes[4] = s_irLearn;
}

cmdBytes[0] = 0x02;
break;
case 11:
s_irLearn = cmdBytes[1];
memset(&cmdBytes, 0, sizeof(cmdBytes));
break;
default:
memset(&cmdBytes, 0, sizeof(cmdBytes));
cmdBytes[0] = 0xFF;
cmdBytes[1] = 0x01;
}
}

cmdBytes[sizeof(cmdBytes) - 1] = GetCheckSum(cmdBytes, sizeof(cmdBytes) - 1);
TCPPutArray(srvSocket, cmdBytes, sizeof(cmdBytes));

tcpServerState = SM_CLOSING;
break;

case SM_CLOSING:

TCPClose(srvSocket);

tcpServerState = SM_HOME;
break;
}
}


int main(void) {

Configure();



OpenSLCD(0b00111100 & 0b00111000);
while(BusySLCD());
WriteCmdSLCD(0b00001111&0b00001101&0b00001110);

RestoreFromFlash();
PowerOn();

(INTCONbits.GIE = 1);
while (1)
{
StackTask();
TCPServer();
}

return (0);
}

