

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Mar 11 21:03:42 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	_reserveSettingsArr_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   196                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   197                           	dabs	1,0xE7E,1,_errataTempL
   198                           	dabs	1,0xE7F,1,_errataTempH
   199  0000                     
   200                           ;	pragma psect bigdata=TCB_uRAM_BIG
   201                           ;	pragma psect data=TCB_uRAM
   202                           ;	pragma psect data=ordinary_data_sect
   203                           ;	pragma psect bigdata=ordinary_data_sect_big
   204  0000                     
   205                           	psect	idataBANK0
   206  01BA5C                     __pidataBANK0:
   207                           	opt stack 0
   208                           
   209                           ;initializer for _dwLFSRRandSeed
   210  01BA5C  9F9E               	dw	40862
   211  01BA5E  41FE               	dw	16894
   212                           
   213                           ;initializer for _resOK
   214  01BA60  00                 	db	0
   215  01BA61  10                 	db	16
   216  01BA62  FF                 	db	255
   217                           
   218                           ;initializer for _badChecksum
   219  01BA63  FF                 	db	255
   220  01BA64  00                 	db	0
   221                           
   222                           ;initializer for _invalidCommand
   223  01BA65  FF                 	db	255
   224  01BA66  01                 	db	1
   225                           
   226                           	psect	idataBANK1
   227  01BA7A                     __pidataBANK1:
   228                           	opt stack 0
   229                           
   230                           ;initializer for SyncTCB@hLastTCB
   231  01BA7A  FE                 	db	254
   232                           
   233                           ;initializer for _hCurrentTCP
   234  01BA7B  FE                 	db	254
   235                           
   236                           ;initializer for _s_irCodeBitIdx
   237  01BA7C  01                 	db	1
   238                           
   239                           ;initializer for _s_prevIRPort
   240  01BA7D  01                 	db	1
   241  0000                     _reserveSettingsArr_absconstaddr	set	118784
   242                           
   243                           	psect	mediumconst
   244  00FE34                     __pmediumconst:
   245                           	opt stack 0
   246  00FE34  00                 	db	0
   247  00FE35                     _LOGS:
   248                           	opt stack 0
   249  00FE35  0FFF               	dw	4095
   250  00FE37  0FC4               	dw	4036
   251  00FE39  0F8B               	dw	3979
   252  00FE3B  0F52               	dw	3922
   253  00FE3D  0F1A               	dw	3866
   254  00FE3F  0EE3               	dw	3811
   255  00FE41  0EAC               	dw	3756
   256  00FE43  0E77               	dw	3703
   257  00FE45  0E42               	dw	3650
   258  00FE47  0E0E               	dw	3598
   259  00FE49  0DDA               	dw	3546
   260  00FE4B  0DA7               	dw	3495
   261  00FE4D  0D76               	dw	3446
   262  00FE4F  0D44               	dw	3396
   263  00FE51  0D14               	dw	3348
   264  00FE53  0CE4               	dw	3300
   265  00FE55  0CB5               	dw	3253
   266  00FE57  0C86               	dw	3206
   267  00FE59  0C58               	dw	3160
   268  00FE5B  0C2B               	dw	3115
   269  00FE5D  0BFF               	dw	3071
   270  00FE5F  0BD3               	dw	3027
   271  00FE61  0BA8               	dw	2984
   272  00FE63  0B7D               	dw	2941
   273  00FE65  0B53               	dw	2899
   274  00FE67  0B2A               	dw	2858
   275  00FE69  0B01               	dw	2817
   276  00FE6B  0AD9               	dw	2777
   277  00FE6D  0AB1               	dw	2737
   278  00FE6F  0A8A               	dw	2698
   279  00FE71  0A63               	dw	2659
   280  00FE73  0A3D               	dw	2621
   281  00FE75  0A18               	dw	2584
   282  00FE77  09F3               	dw	2547
   283  00FE79  09CE               	dw	2510
   284  00FE7B  09AB               	dw	2475
   285  00FE7D  0987               	dw	2439
   286  00FE7F  0964               	dw	2404
   287  00FE81  0942               	dw	2370
   288  00FE83  0920               	dw	2336
   289  00FE85  08FF               	dw	2303
   290  00FE87  08DE               	dw	2270
   291  00FE89  08BD               	dw	2237
   292  00FE8B  089D               	dw	2205
   293  00FE8D  087E               	dw	2174
   294  00FE8F  085F               	dw	2143
   295  00FE91  0840               	dw	2112
   296  00FE93  0822               	dw	2082
   297  00FE95                     __end_of_LOGS:
   298                           	opt stack 0
   299  00FE95                     _dpowers:
   300                           	opt stack 0
   301  00FE95  0001               	dw	1
   302  00FE97  0000               	dw	0
   303  00FE99  000A               	dw	10
   304  00FE9B  0000               	dw	0
   305  00FE9D  0064               	dw	100
   306  00FE9F  0000               	dw	0
   307  00FEA1  03E8               	dw	1000
   308  00FEA3  0000               	dw	0
   309  00FEA5  2710               	dw	10000
   310  00FEA7  0000               	dw	0
   311  00FEA9  86A0               	dw	34464
   312  00FEAB  0001               	dw	1
   313  00FEAD  4240               	dw	16960
   314  00FEAF  000F               	dw	15
   315  00FEB1  9680               	dw	38528
   316  00FEB3  0098               	dw	152
   317  00FEB5  E100               	dw	57600
   318  00FEB7  05F5               	dw	1525
   319  00FEB9  CA00               	dw	51712
   320  00FEBB  3B9A               	dw	15258
   321  00FEBD                     __end_of_dpowers:
   322                           	opt stack 0
   323  00FEBD                     __npowers_:
   324                           	opt stack 0
   325  00FEBD  00                 	db	0
   326  00FEBE  80                 	db	128
   327  00FEBF  3F                 	db	63
   328  00FEC0  CD                 	db	205
   329  00FEC1  CC                 	db	204
   330  00FEC2  3D                 	db	61
   331  00FEC3  D7                 	db	215
   332  00FEC4  23                 	db	35
   333  00FEC5  3C                 	db	60
   334  00FEC6  12                 	db	18
   335  00FEC7  83                 	db	131
   336  00FEC8  3A                 	db	58
   337  00FEC9  B7                 	db	183
   338  00FECA  D1                 	db	209
   339  00FECB  38                 	db	56
   340  00FECC  C6                 	db	198
   341  00FECD  27                 	db	39
   342  00FECE  37                 	db	55
   343  00FECF  38                 	db	56
   344  00FED0  86                 	db	134
   345  00FED1  35                 	db	53
   346  00FED2  C0                 	db	192
   347  00FED3  D6                 	db	214
   348  00FED4  33                 	db	51
   349  00FED5  CC                 	db	204
   350  00FED6  2B                 	db	43
   351  00FED7  32                 	db	50
   352  00FED8  70                 	db	112
   353  00FED9  89                 	db	137
   354  00FEDA  30                 	db	48
   355  00FEDB  E7                 	db	231
   356  00FEDC  DB                 	db	219
   357  00FEDD  2E                 	db	46
   358  00FEDE  E5                 	db	229
   359  00FEDF  3C                 	db	60
   360  00FEE0  1E                 	db	30
   361  00FEE1  42                 	db	66
   362  00FEE2  A2                 	db	162
   363  00FEE3  0D                 	db	13
   364  00FEE4                     __end_of__npowers_:
   365                           	opt stack 0
   366  00FEE4                     __powers_:
   367                           	opt stack 0
   368  00FEE4  00                 	db	0
   369  00FEE5  80                 	db	128
   370  00FEE6  3F                 	db	63
   371  00FEE7  00                 	db	0
   372  00FEE8  20                 	db	32
   373  00FEE9  41                 	db	65
   374  00FEEA  00                 	db	0
   375  00FEEB  C8                 	db	200
   376  00FEEC  42                 	db	66
   377  00FEED  00                 	db	0
   378  00FEEE  7A                 	db	122
   379  00FEEF  44                 	db	68
   380  00FEF0  40                 	db	64
   381  00FEF1  1C                 	db	28
   382  00FEF2  46                 	db	70
   383  00FEF3  50                 	db	80
   384  00FEF4  C3                 	db	195
   385  00FEF5  47                 	db	71
   386  00FEF6  24                 	db	36
   387  00FEF7  74                 	db	116
   388  00FEF8  49                 	db	73
   389  00FEF9  97                 	db	151
   390  00FEFA  18                 	db	24
   391  00FEFB  4B                 	db	75
   392  00FEFC  BC                 	db	188
   393  00FEFD  BE                 	db	190
   394  00FEFE  4C                 	db	76
   395  00FEFF  6B                 	db	107
   396  00FF00  6E                 	db	110
   397  00FF01  4E                 	db	78
   398  00FF02  03                 	db	3
   399  00FF03  15                 	db	21
   400  00FF04  50                 	db	80
   401  00FF05  79                 	db	121
   402  00FF06  AD                 	db	173
   403  00FF07  60                 	db	96
   404  00FF08  F3                 	db	243
   405  00FF09  49                 	db	73
   406  00FF0A  71                 	db	113
   407  00FF0B                     __end_of__powers_:
   408                           	opt stack 0
   409  00FF0B                     _TCPSocketInitializer:
   410                           	opt stack 0
   411  00FF0B  01                 	db	1
   412  00FF0C  00                 	db	0
   413  00FF0D  0014               	dw	20
   414  00FF0F  0014               	dw	20
   415  00FF11                     __end_of_TCPSocketInitializer:
   416                           	opt stack 0
   417  00FF11                     _SETTINGS_ADDR:
   418                           	opt stack 0
   419  00FF11  D000               	dw	53248
   420  00FF13  0001               	dw	1
   421  00FF15                     __end_of_SETTINGS_ADDR:
   422                           	opt stack 0
   423  00FF15                     _SETTINGS_LEN:
   424                           	opt stack 0
   425  00FF15  2000               	dw	8192
   426  00FF17  0000               	dw	0
   427  00FF19                     __end_of_SETTINGS_LEN:
   428                           	opt stack 0
   429  00FF19                     _SerializedMACAddress:
   430                           	opt stack 0
   431  00FF19  00                 	db	0
   432  00FF1A  04                 	db	4
   433  00FF1B  A3                 	db	163
   434  00FF1C  00                 	db	0
   435  00FF1D  00                 	db	0
   436  00FF1E  00                 	db	0
   437  00FF1F                     __end_of_SerializedMACAddress:
   438                           	opt stack 0
   439  00FF1F                     _IR_VOLUME_DOWN:
   440                           	opt stack 0
   441  00FF1F  11                 	db	17
   442  00FF20  40                 	db	64
   443  00FF21  50                 	db	80
   444  00FF22  05                 	db	5
   445  00FF23                     __end_of_IR_VOLUME_DOWN:
   446                           	opt stack 0
   447  00FF23                     _IR_VOLUME_UP:
   448                           	opt stack 0
   449  00FF23  11                 	db	17
   450  00FF24  10                 	db	16
   451  00FF25  50                 	db	80
   452  00FF26  05                 	db	5
   453  00FF27                     __end_of_IR_VOLUME_UP:
   454                           	opt stack 0
   455  00FF27                     _IR_POWER_OFF:
   456                           	opt stack 0
   457  00FF27  83                 	db	131
   458  00FF28  08                 	db	8
   459  00FF29  02                 	db	2
   460  00FF2A                     __end_of_IR_POWER_OFF:
   461                           	opt stack 0
   462  00FF2A                     _IR_POWER_ON:
   463                           	opt stack 0
   464  00FF2A  8B                 	db	139
   465  00FF2B  08                 	db	8
   466  00FF2C  02                 	db	2
   467  00FF2D                     __end_of_IR_POWER_ON:
   468                           	opt stack 0
   469  0000                     _reserveSettingsArr_absconstaddr	set	118784
   470  00FF2D                     __stringdata:
   471                           	opt stack 0
   472  00FF2D                     STR_12:
   473  00FF2D  53                 	db	83	;'S'
   474  00FF2E  2F                 	db	47
   475  00FF2F  52                 	db	82	;'R'
   476  00FF30  3A                 	db	58	;':'
   477  00FF31  20                 	db	32
   478  00FF32  31                 	db	49	;'1'
   479  00FF33  39                 	db	57	;'9'
   480  00FF34  32                 	db	50	;'2'
   481  00FF35  2E                 	db	46
   482  00FF36  30                 	db	48	;'0'
   483  00FF37  6B                 	db	107	;'k'
   484  00FF38  48                 	db	72	;'H'
   485  00FF39  7A                 	db	122	;'z'
   486  00FF3A  20                 	db	32
   487  00FF3B  20                 	db	32
   488  00FF3C  20                 	db	32
   489  00FF3D  00                 	db	0
   490  00FF3E                     STR_11:
   491  00FF3E  53                 	db	83	;'S'
   492  00FF3F  2F                 	db	47
   493  00FF40  52                 	db	82	;'R'
   494  00FF41  3A                 	db	58	;':'
   495  00FF42  20                 	db	32
   496  00FF43  20                 	db	32
   497  00FF44  39                 	db	57	;'9'
   498  00FF45  36                 	db	54	;'6'
   499  00FF46  2E                 	db	46
   500  00FF47  30                 	db	48	;'0'
   501  00FF48  6B                 	db	107	;'k'
   502  00FF49  48                 	db	72	;'H'
   503  00FF4A  7A                 	db	122	;'z'
   504  00FF4B  20                 	db	32
   505  00FF4C  20                 	db	32
   506  00FF4D  20                 	db	32
   507  00FF4E  00                 	db	0
   508  00FF4F                     STR_9:
   509  00FF4F  53                 	db	83	;'S'
   510  00FF50  2F                 	db	47
   511  00FF51  52                 	db	82	;'R'
   512  00FF52  3A                 	db	58	;':'
   513  00FF53  20                 	db	32
   514  00FF54  20                 	db	32
   515  00FF55  34                 	db	52	;'4'
   516  00FF56  38                 	db	56	;'8'
   517  00FF57  2E                 	db	46
   518  00FF58  30                 	db	48	;'0'
   519  00FF59  6B                 	db	107	;'k'
   520  00FF5A  48                 	db	72	;'H'
   521  00FF5B  7A                 	db	122	;'z'
   522  00FF5C  20                 	db	32
   523  00FF5D  20                 	db	32
   524  00FF5E  20                 	db	32
   525  00FF5F  00                 	db	0
   526  00FF60                     STR_8:
   527  00FF60  53                 	db	83	;'S'
   528  00FF61  2F                 	db	47
   529  00FF62  52                 	db	82	;'R'
   530  00FF63  3A                 	db	58	;':'
   531  00FF64  20                 	db	32
   532  00FF65  20                 	db	32
   533  00FF66  34                 	db	52	;'4'
   534  00FF67  34                 	db	52	;'4'
   535  00FF68  2E                 	db	46
   536  00FF69  31                 	db	49	;'1'
   537  00FF6A  6B                 	db	107	;'k'
   538  00FF6B  48                 	db	72	;'H'
   539  00FF6C  7A                 	db	122	;'z'
   540  00FF6D  20                 	db	32
   541  00FF6E  20                 	db	32
   542  00FF6F  20                 	db	32
   543  00FF70  00                 	db	0
   544  00FF71                     STR_10:
   545  00FF71  53                 	db	83	;'S'
   546  00FF72  2F                 	db	47
   547  00FF73  52                 	db	82	;'R'
   548  00FF74  3A                 	db	58	;':'
   549  00FF75  20                 	db	32
   550  00FF76  20                 	db	32
   551  00FF77  38                 	db	56	;'8'
   552  00FF78  38                 	db	56	;'8'
   553  00FF79  2E                 	db	46
   554  00FF7A  32                 	db	50	;'2'
   555  00FF7B  6B                 	db	107	;'k'
   556  00FF7C  48                 	db	72	;'H'
   557  00FF7D  7A                 	db	122	;'z'
   558  00FF7E  20                 	db	32
   559  00FF7F  20                 	db	32
   560  00FF80  20                 	db	32
   561  00FF81  00                 	db	0
   562  00FF82                     STR_13:
   563  00FF82  53                 	db	83	;'S'
   564  00FF83  2F                 	db	47
   565  00FF84  52                 	db	82	;'R'
   566  00FF85  3A                 	db	58	;':'
   567  00FF86  20                 	db	32
   568  00FF87  31                 	db	49	;'1'
   569  00FF88  37                 	db	55	;'7'
   570  00FF89  36                 	db	54	;'6'
   571  00FF8A  2E                 	db	46
   572  00FF8B  34                 	db	52	;'4'
   573  00FF8C  6B                 	db	107	;'k'
   574  00FF8D  48                 	db	72	;'H'
   575  00FF8E  7A                 	db	122	;'z'
   576  00FF8F  20                 	db	32
   577  00FF90  20                 	db	32
   578  00FF91  20                 	db	32
   579  00FF92  00                 	db	0
   580  00FF93                     STR_5:
   581  00FF93  53                 	db	83	;'S'
   582  00FF94  74                 	db	116	;'t'
   583  00FF95  6F                 	db	111	;'o'
   584  00FF96  72                 	db	114	;'r'
   585  00FF97  65                 	db	101	;'e'
   586  00FF98  64                 	db	100	;'d'
   587  00FF99  20                 	db	32
   588  00FF9A  20                 	db	32
   589  00FF9B  20                 	db	32
   590  00FF9C  20                 	db	32
   591  00FF9D  20                 	db	32
   592  00FF9E  20                 	db	32
   593  00FF9F  20                 	db	32
   594  00FFA0  20                 	db	32
   595  00FFA1  20                 	db	32
   596  00FFA2  20                 	db	32
   597  00FFA3  00                 	db	0
   598  00FFA4                     STR_6:
   599  00FFA4  4E                 	db	78	;'N'
   600  00FFA5  6F                 	db	111	;'o'
   601  00FFA6  20                 	db	32
   602  00FFA7  63                 	db	99	;'c'
   603  00FFA8  68                 	db	104	;'h'
   604  00FFA9  61                 	db	97	;'a'
   605  00FFAA  6E                 	db	110	;'n'
   606  00FFAB  67                 	db	103	;'g'
   607  00FFAC  65                 	db	101	;'e'
   608  00FFAD  20                 	db	32
   609  00FFAE  20                 	db	32
   610  00FFAF  20                 	db	32
   611  00FFB0  20                 	db	32
   612  00FFB1  20                 	db	32
   613  00FFB2  20                 	db	32
   614  00FFB3  20                 	db	32
   615  00FFB4  00                 	db	0
   616  00FFB5                     STR_4:
   617  00FFB5  45                 	db	69	;'E'
   618  00FFB6  72                 	db	114	;'r'
   619  00FFB7  61                 	db	97	;'a'
   620  00FFB8  73                 	db	115	;'s'
   621  00FFB9  69                 	db	105	;'i'
   622  00FFBA  6E                 	db	110	;'n'
   623  00FFBB  67                 	db	103	;'g'
   624  00FFBC  2E                 	db	46
   625  00FFBD  2E                 	db	46
   626  00FFBE  2E                 	db	46
   627  00FFBF  20                 	db	32
   628  00FFC0  20                 	db	32
   629  00FFC1  20                 	db	32
   630  00FFC2  20                 	db	32
   631  00FFC3  20                 	db	32
   632  00FFC4  20                 	db	32
   633  00FFC5  00                 	db	0
   634  00FFC6                     STR_3:
   635  00FFC6  57                 	db	87	;'W'
   636  00FFC7  72                 	db	114	;'r'
   637  00FFC8  69                 	db	105	;'i'
   638  00FFC9  74                 	db	116	;'t'
   639  00FFCA  69                 	db	105	;'i'
   640  00FFCB  6E                 	db	110	;'n'
   641  00FFCC  67                 	db	103	;'g'
   642  00FFCD  2E                 	db	46
   643  00FFCE  2E                 	db	46
   644  00FFCF  2E                 	db	46
   645  00FFD0  20                 	db	32
   646  00FFD1  20                 	db	32
   647  00FFD2  20                 	db	32
   648  00FFD3  20                 	db	32
   649  00FFD4  20                 	db	32
   650  00FFD5  20                 	db	32
   651  00FFD6  00                 	db	0
   652  00FFD7                     STR_2:
   653  00FFD7  50                 	db	80	;'P'
   654  00FFD8  72                 	db	114	;'r'
   655  00FFD9  65                 	db	101	;'e'
   656  00FFDA  70                 	db	112	;'p'
   657  00FFDB  61                 	db	97	;'a'
   658  00FFDC  72                 	db	114	;'r'
   659  00FFDD  69                 	db	105	;'i'
   660  00FFDE  6E                 	db	110	;'n'
   661  00FFDF  67                 	db	103	;'g'
   662  00FFE0  2E                 	db	46
   663  00FFE1  2E                 	db	46
   664  00FFE2  2E                 	db	46
   665  00FFE3  20                 	db	32
   666  00FFE4  20                 	db	32
   667  00FFE5  20                 	db	32
   668  00FFE6  20                 	db	32
   669  00FFE7  00                 	db	0
   670  00FFE8                     STR_7:
   671  00FFE8  56                 	db	86	;'V'
   672  00FFE9  6F                 	db	111	;'o'
   673  00FFEA  6C                 	db	108	;'l'
   674  00FFEB  75                 	db	117	;'u'
   675  00FFEC  6D                 	db	109	;'m'
   676  00FFED  65                 	db	101	;'e'
   677  00FFEE  20                 	db	32
   678  00FFEF  25                 	db	37
   679  00FFF0  37                 	db	55	;'7'
   680  00FFF1  2E                 	db	46
   681  00FFF2  33                 	db	51	;'3'
   682  00FFF3  66                 	db	102	;'f'
   683  00FFF4  64                 	db	100	;'d'
   684  00FFF5  42                 	db	66	;'B'
   685  00FFF6  00                 	db	0
   686  00FFF7                     STR_1:
   687  00FFF7  54                 	db	84	;'T'
   688  00FFF8  68                 	db	104	;'h'
   689  00FFF9  65                 	db	101	;'e'
   690  00FFFA  44                 	db	68	;'D'
   691  00FFFB  41                 	db	65	;'A'
   692  00FFFC  43                 	db	67	;'C'
   693  00FFFD  00                 	db	0
   694  00FFFE                     __end_of__stringdata:
   695                           	opt stack 0
   696                           
   697                           ; #config settings
   698  00FFFE  00                 	db	0	; dummy byte at the end
   699  0000                     
   700                           	psect	_reserveSettingsArr_const
   701  01D000                     __p_reserveSettingsArr_const:
   702                           	opt stack 0
   703  01D000                     _reserveSettingsArr:
   704                           	opt stack 0
   705  01D000  00                 	db	0
   706  01D001  00                 	db	0
   707  01D002  00                 	db	0
   708  01D003  00                 	db	0
   709  01D004  00                 	db	0
   710  01D005  00                 	db	0
   711  01D006  00                 	db	0
   712  01D007  00                 	db	0
   713  01D008  00                 	db	0
   714  01D009  00                 	db	0
   715  01D00A  00                 	db	0
   716  01D00B  00                 	db	0
   717  01D00C  00                 	db	0
   718  01D00D  00                 	db	0
   719  01D00E  00                 	db	0
   720  01D00F  00                 	db	0
   721  01D010  00                 	db	0
   722  01D011  00                 	db	0
   723  01D012  00                 	db	0
   724  01D013  00                 	db	0
   725  01D014  00                 	db	0
   726  01D015  00                 	db	0
   727  01D016  00                 	db	0
   728  01D017  00                 	db	0
   729  01D018  00                 	db	0
   730  01D019  00                 	db	0
   731  01D01A  00                 	db	0
   732  01D01B  00                 	db	0
   733  01D01C  00                 	db	0
   734  01D01D  00                 	db	0
   735  01D01E  00                 	db	0
   736  01D01F  00                 	db	0
   737  01D020  00                 	db	0
   738  01D021  00                 	db	0
   739  01D022  00                 	db	0
   740  01D023  00                 	db	0
   741  01D024  00                 	db	0
   742  01D025  00                 	db	0
   743  01D026  00                 	db	0
   744  01D027  00                 	db	0
   745  01D028  00                 	db	0
   746  01D029  00                 	db	0
   747  01D02A  00                 	db	0
   748  01D02B  00                 	db	0
   749  01D02C  00                 	db	0
   750  01D02D  00                 	db	0
   751  01D02E  00                 	db	0
   752  01D02F  00                 	db	0
   753  01D030  00                 	db	0
   754  01D031  00                 	db	0
   755  01D032  00                 	db	0
   756  01D033  00                 	db	0
   757  01D034  00                 	db	0
   758  01D035  00                 	db	0
   759  01D036  00                 	db	0
   760  01D037  00                 	db	0
   761  01D038  00                 	db	0
   762  01D039  00                 	db	0
   763  01D03A  00                 	db	0
   764  01D03B  00                 	db	0
   765  01D03C  00                 	db	0
   766  01D03D  00                 	db	0
   767  01D03E  00                 	db	0
   768  01D03F  00                 	db	0
   769  01D040  00                 	db	0
   770  01D041  00                 	db	0
   771  01D042  00                 	db	0
   772  01D043  00                 	db	0
   773  01D044  00                 	db	0
   774  01D045  00                 	db	0
   775  01D046  00                 	db	0
   776  01D047  00                 	db	0
   777  01D048  00                 	db	0
   778  01D049  00                 	db	0
   779  01D04A  00                 	db	0
   780  01D04B  00                 	db	0
   781  01D04C  00                 	db	0
   782  01D04D  00                 	db	0
   783  01D04E  00                 	db	0
   784  01D04F  00                 	db	0
   785  01D050  00                 	db	0
   786  01D051  00                 	db	0
   787  01D052  00                 	db	0
   788  01D053  00                 	db	0
   789  01D054  00                 	db	0
   790  01D055  00                 	db	0
   791  01D056  00                 	db	0
   792  01D057  00                 	db	0
   793  01D058  00                 	db	0
   794  01D059  00                 	db	0
   795  01D05A  00                 	db	0
   796  01D05B  00                 	db	0
   797  01D05C  00                 	db	0
   798  01D05D  00                 	db	0
   799  01D05E  00                 	db	0
   800  01D05F  00                 	db	0
   801  01D060  00                 	db	0
   802  01D061  00                 	db	0
   803  01D062  00                 	db	0
   804  01D063  00                 	db	0
   805  01D064  00                 	db	0
   806  01D065  00                 	db	0
   807  01D066  00                 	db	0
   808  01D067  00                 	db	0
   809  01D068  00                 	db	0
   810  01D069  00                 	db	0
   811  01D06A  00                 	db	0
   812  01D06B  00                 	db	0
   813  01D06C  00                 	db	0
   814  01D06D  00                 	db	0
   815  01D06E  00                 	db	0
   816  01D06F  00                 	db	0
   817  01D070  00                 	db	0
   818  01D071  00                 	db	0
   819  01D072  00                 	db	0
   820  01D073  00                 	db	0
   821  01D074  00                 	db	0
   822  01D075  00                 	db	0
   823  01D076  00                 	db	0
   824  01D077  00                 	db	0
   825  01D078  00                 	db	0
   826  01D079  00                 	db	0
   827  01D07A  00                 	db	0
   828  01D07B  00                 	db	0
   829  01D07C  00                 	db	0
   830  01D07D  00                 	db	0
   831  01D07E  00                 	db	0
   832  01D07F  00                 	db	0
   833  01D080  00                 	db	0
   834  01D081  00                 	db	0
   835  01D082  00                 	db	0
   836  01D083  00                 	db	0
   837  01D084  00                 	db	0
   838  01D085  00                 	db	0
   839  01D086  00                 	db	0
   840  01D087  00                 	db	0
   841  01D088  00                 	db	0
   842  01D089  00                 	db	0
   843  01D08A  00                 	db	0
   844  01D08B  00                 	db	0
   845  01D08C  00                 	db	0
   846  01D08D  00                 	db	0
   847  01D08E  00                 	db	0
   848  01D08F  00                 	db	0
   849  01D090  00                 	db	0
   850  01D091  00                 	db	0
   851  01D092  00                 	db	0
   852  01D093  00                 	db	0
   853  01D094  00                 	db	0
   854  01D095  00                 	db	0
   855  01D096  00                 	db	0
   856  01D097  00                 	db	0
   857  01D098  00                 	db	0
   858  01D099  00                 	db	0
   859  01D09A  00                 	db	0
   860  01D09B  00                 	db	0
   861  01D09C  00                 	db	0
   862  01D09D  00                 	db	0
   863  01D09E  00                 	db	0
   864  01D09F  00                 	db	0
   865  01D0A0  00                 	db	0
   866  01D0A1  00                 	db	0
   867  01D0A2  00                 	db	0
   868  01D0A3  00                 	db	0
   869  01D0A4  00                 	db	0
   870  01D0A5  00                 	db	0
   871  01D0A6  00                 	db	0
   872  01D0A7  00                 	db	0
   873  01D0A8  00                 	db	0
   874  01D0A9  00                 	db	0
   875  01D0AA  00                 	db	0
   876  01D0AB  00                 	db	0
   877  01D0AC  00                 	db	0
   878  01D0AD  00                 	db	0
   879  01D0AE  00                 	db	0
   880  01D0AF  00                 	db	0
   881  01D0B0  00                 	db	0
   882  01D0B1  00                 	db	0
   883  01D0B2  00                 	db	0
   884  01D0B3  00                 	db	0
   885  01D0B4  00                 	db	0
   886  01D0B5  00                 	db	0
   887  01D0B6  00                 	db	0
   888  01D0B7  00                 	db	0
   889  01D0B8  00                 	db	0
   890  01D0B9  00                 	db	0
   891  01D0BA  00                 	db	0
   892  01D0BB  00                 	db	0
   893  01D0BC  00                 	db	0
   894  01D0BD  00                 	db	0
   895  01D0BE  00                 	db	0
   896  01D0BF  00                 	db	0
   897  01D0C0  00                 	db	0
   898  01D0C1  00                 	db	0
   899  01D0C2  00                 	db	0
   900  01D0C3  00                 	db	0
   901  01D0C4  00                 	db	0
   902  01D0C5  00                 	db	0
   903  01D0C6  00                 	db	0
   904  01D0C7  00                 	db	0
   905  01D0C8  00                 	db	0
   906  01D0C9  00                 	db	0
   907  01D0CA  00                 	db	0
   908  01D0CB  00                 	db	0
   909  01D0CC  00                 	db	0
   910  01D0CD  00                 	db	0
   911  01D0CE  00                 	db	0
   912  01D0CF  00                 	db	0
   913  01D0D0  00                 	db	0
   914  01D0D1  00                 	db	0
   915  01D0D2  00                 	db	0
   916  01D0D3  00                 	db	0
   917  01D0D4  00                 	db	0
   918  01D0D5  00                 	db	0
   919  01D0D6  00                 	db	0
   920  01D0D7  00                 	db	0
   921  01D0D8  00                 	db	0
   922  01D0D9  00                 	db	0
   923  01D0DA  00                 	db	0
   924  01D0DB  00                 	db	0
   925  01D0DC  00                 	db	0
   926  01D0DD  00                 	db	0
   927  01D0DE  00                 	db	0
   928  01D0DF  00                 	db	0
   929  01D0E0  00                 	db	0
   930  01D0E1  00                 	db	0
   931  01D0E2  00                 	db	0
   932  01D0E3  00                 	db	0
   933  01D0E4  00                 	db	0
   934  01D0E5  00                 	db	0
   935  01D0E6  00                 	db	0
   936  01D0E7  00                 	db	0
   937  01D0E8  00                 	db	0
   938  01D0E9  00                 	db	0
   939  01D0EA  00                 	db	0
   940  01D0EB  00                 	db	0
   941  01D0EC  00                 	db	0
   942  01D0ED  00                 	db	0
   943  01D0EE  00                 	db	0
   944  01D0EF  00                 	db	0
   945  01D0F0  00                 	db	0
   946  01D0F1  00                 	db	0
   947  01D0F2  00                 	db	0
   948  01D0F3  00                 	db	0
   949  01D0F4  00                 	db	0
   950  01D0F5  00                 	db	0
   951  01D0F6  00                 	db	0
   952  01D0F7  00                 	db	0
   953  01D0F8  00                 	db	0
   954  01D0F9  00                 	db	0
   955  01D0FA  00                 	db	0
   956  01D0FB  00                 	db	0
   957  01D0FC  00                 	db	0
   958  01D0FD  00                 	db	0
   959  01D0FE  00                 	db	0
   960  01D0FF  00                 	db	0
   961  01D100  00                 	db	0
   962  01D101  00                 	db	0
   963  01D102  00                 	db	0
   964  01D103  00                 	db	0
   965  01D104  00                 	db	0
   966  01D105  00                 	db	0
   967  01D106  00                 	db	0
   968  01D107  00                 	db	0
   969  01D108  00                 	db	0
   970  01D109  00                 	db	0
   971  01D10A  00                 	db	0
   972  01D10B  00                 	db	0
   973  01D10C  00                 	db	0
   974  01D10D  00                 	db	0
   975  01D10E  00                 	db	0
   976  01D10F  00                 	db	0
   977  01D110  00                 	db	0
   978  01D111  00                 	db	0
   979  01D112  00                 	db	0
   980  01D113  00                 	db	0
   981  01D114  00                 	db	0
   982  01D115  00                 	db	0
   983  01D116  00                 	db	0
   984  01D117  00                 	db	0
   985  01D118  00                 	db	0
   986  01D119  00                 	db	0
   987  01D11A  00                 	db	0
   988  01D11B  00                 	db	0
   989  01D11C  00                 	db	0
   990  01D11D  00                 	db	0
   991  01D11E  00                 	db	0
   992  01D11F  00                 	db	0
   993  01D120  00                 	db	0
   994  01D121  00                 	db	0
   995  01D122  00                 	db	0
   996  01D123  00                 	db	0
   997  01D124  00                 	db	0
   998  01D125  00                 	db	0
   999  01D126  00                 	db	0
  1000  01D127  00                 	db	0
  1001  01D128  00                 	db	0
  1002  01D129  00                 	db	0
  1003  01D12A  00                 	db	0
  1004  01D12B  00                 	db	0
  1005  01D12C  00                 	db	0
  1006  01D12D  00                 	db	0
  1007  01D12E  00                 	db	0
  1008  01D12F  00                 	db	0
  1009  01D130  00                 	db	0
  1010  01D131  00                 	db	0
  1011  01D132  00                 	db	0
  1012  01D133  00                 	db	0
  1013  01D134  00                 	db	0
  1014  01D135  00                 	db	0
  1015  01D136  00                 	db	0
  1016  01D137  00                 	db	0
  1017  01D138  00                 	db	0
  1018  01D139  00                 	db	0
  1019  01D13A  00                 	db	0
  1020  01D13B  00                 	db	0
  1021  01D13C  00                 	db	0
  1022  01D13D  00                 	db	0
  1023  01D13E  00                 	db	0
  1024  01D13F  00                 	db	0
  1025  01D140  00                 	db	0
  1026  01D141  00                 	db	0
  1027  01D142  00                 	db	0
  1028  01D143  00                 	db	0
  1029  01D144  00                 	db	0
  1030  01D145  00                 	db	0
  1031  01D146  00                 	db	0
  1032  01D147  00                 	db	0
  1033  01D148  00                 	db	0
  1034  01D149  00                 	db	0
  1035  01D14A  00                 	db	0
  1036  01D14B  00                 	db	0
  1037  01D14C  00                 	db	0
  1038  01D14D  00                 	db	0
  1039  01D14E  00                 	db	0
  1040  01D14F  00                 	db	0
  1041  01D150  00                 	db	0
  1042  01D151  00                 	db	0
  1043  01D152  00                 	db	0
  1044  01D153  00                 	db	0
  1045  01D154  00                 	db	0
  1046  01D155  00                 	db	0
  1047  01D156  00                 	db	0
  1048  01D157  00                 	db	0
  1049  01D158  00                 	db	0
  1050  01D159  00                 	db	0
  1051  01D15A  00                 	db	0
  1052  01D15B  00                 	db	0
  1053  01D15C  00                 	db	0
  1054  01D15D  00                 	db	0
  1055  01D15E  00                 	db	0
  1056  01D15F  00                 	db	0
  1057  01D160  00                 	db	0
  1058  01D161  00                 	db	0
  1059  01D162  00                 	db	0
  1060  01D163  00                 	db	0
  1061  01D164  00                 	db	0
  1062  01D165  00                 	db	0
  1063  01D166  00                 	db	0
  1064  01D167  00                 	db	0
  1065  01D168  00                 	db	0
  1066  01D169  00                 	db	0
  1067  01D16A  00                 	db	0
  1068  01D16B  00                 	db	0
  1069  01D16C  00                 	db	0
  1070  01D16D  00                 	db	0
  1071  01D16E  00                 	db	0
  1072  01D16F  00                 	db	0
  1073  01D170  00                 	db	0
  1074  01D171  00                 	db	0
  1075  01D172  00                 	db	0
  1076  01D173  00                 	db	0
  1077  01D174  00                 	db	0
  1078  01D175  00                 	db	0
  1079  01D176  00                 	db	0
  1080  01D177  00                 	db	0
  1081  01D178  00                 	db	0
  1082  01D179  00                 	db	0
  1083  01D17A  00                 	db	0
  1084  01D17B  00                 	db	0
  1085  01D17C  00                 	db	0
  1086  01D17D  00                 	db	0
  1087  01D17E  00                 	db	0
  1088  01D17F  00                 	db	0
  1089  01D180  00                 	db	0
  1090  01D181  00                 	db	0
  1091  01D182  00                 	db	0
  1092  01D183  00                 	db	0
  1093  01D184  00                 	db	0
  1094  01D185  00                 	db	0
  1095  01D186  00                 	db	0
  1096  01D187  00                 	db	0
  1097  01D188  00                 	db	0
  1098  01D189  00                 	db	0
  1099  01D18A  00                 	db	0
  1100  01D18B  00                 	db	0
  1101  01D18C  00                 	db	0
  1102  01D18D  00                 	db	0
  1103  01D18E  00                 	db	0
  1104  01D18F  00                 	db	0
  1105  01D190  00                 	db	0
  1106  01D191  00                 	db	0
  1107  01D192  00                 	db	0
  1108  01D193  00                 	db	0
  1109  01D194  00                 	db	0
  1110  01D195  00                 	db	0
  1111  01D196  00                 	db	0
  1112  01D197  00                 	db	0
  1113  01D198  00                 	db	0
  1114  01D199  00                 	db	0
  1115  01D19A  00                 	db	0
  1116  01D19B  00                 	db	0
  1117  01D19C  00                 	db	0
  1118  01D19D  00                 	db	0
  1119  01D19E  00                 	db	0
  1120  01D19F  00                 	db	0
  1121  01D1A0  00                 	db	0
  1122  01D1A1  00                 	db	0
  1123  01D1A2  00                 	db	0
  1124  01D1A3  00                 	db	0
  1125  01D1A4  00                 	db	0
  1126  01D1A5  00                 	db	0
  1127  01D1A6  00                 	db	0
  1128  01D1A7  00                 	db	0
  1129  01D1A8  00                 	db	0
  1130  01D1A9  00                 	db	0
  1131  01D1AA  00                 	db	0
  1132  01D1AB  00                 	db	0
  1133  01D1AC  00                 	db	0
  1134  01D1AD  00                 	db	0
  1135  01D1AE  00                 	db	0
  1136  01D1AF  00                 	db	0
  1137  01D1B0  00                 	db	0
  1138  01D1B1  00                 	db	0
  1139  01D1B2  00                 	db	0
  1140  01D1B3  00                 	db	0
  1141  01D1B4  00                 	db	0
  1142  01D1B5  00                 	db	0
  1143  01D1B6  00                 	db	0
  1144  01D1B7  00                 	db	0
  1145  01D1B8  00                 	db	0
  1146  01D1B9  00                 	db	0
  1147  01D1BA  00                 	db	0
  1148  01D1BB  00                 	db	0
  1149  01D1BC  00                 	db	0
  1150  01D1BD  00                 	db	0
  1151  01D1BE  00                 	db	0
  1152  01D1BF  00                 	db	0
  1153  01D1C0  00                 	db	0
  1154  01D1C1  00                 	db	0
  1155  01D1C2  00                 	db	0
  1156  01D1C3  00                 	db	0
  1157  01D1C4  00                 	db	0
  1158  01D1C5  00                 	db	0
  1159  01D1C6  00                 	db	0
  1160  01D1C7  00                 	db	0
  1161  01D1C8  00                 	db	0
  1162  01D1C9  00                 	db	0
  1163  01D1CA  00                 	db	0
  1164  01D1CB  00                 	db	0
  1165  01D1CC  00                 	db	0
  1166  01D1CD  00                 	db	0
  1167  01D1CE  00                 	db	0
  1168  01D1CF  00                 	db	0
  1169  01D1D0  00                 	db	0
  1170  01D1D1  00                 	db	0
  1171  01D1D2  00                 	db	0
  1172  01D1D3  00                 	db	0
  1173  01D1D4  00                 	db	0
  1174  01D1D5  00                 	db	0
  1175  01D1D6  00                 	db	0
  1176  01D1D7  00                 	db	0
  1177  01D1D8  00                 	db	0
  1178  01D1D9  00                 	db	0
  1179  01D1DA  00                 	db	0
  1180  01D1DB  00                 	db	0
  1181  01D1DC  00                 	db	0
  1182  01D1DD  00                 	db	0
  1183  01D1DE  00                 	db	0
  1184  01D1DF  00                 	db	0
  1185  01D1E0  00                 	db	0
  1186  01D1E1  00                 	db	0
  1187  01D1E2  00                 	db	0
  1188  01D1E3  00                 	db	0
  1189  01D1E4  00                 	db	0
  1190  01D1E5  00                 	db	0
  1191  01D1E6  00                 	db	0
  1192  01D1E7  00                 	db	0
  1193  01D1E8  00                 	db	0
  1194  01D1E9  00                 	db	0
  1195  01D1EA  00                 	db	0
  1196  01D1EB  00                 	db	0
  1197  01D1EC  00                 	db	0
  1198  01D1ED  00                 	db	0
  1199  01D1EE  00                 	db	0
  1200  01D1EF  00                 	db	0
  1201  01D1F0  00                 	db	0
  1202  01D1F1  00                 	db	0
  1203  01D1F2  00                 	db	0
  1204  01D1F3  00                 	db	0
  1205  01D1F4  00                 	db	0
  1206  01D1F5  00                 	db	0
  1207  01D1F6  00                 	db	0
  1208  01D1F7  00                 	db	0
  1209  01D1F8  00                 	db	0
  1210  01D1F9  00                 	db	0
  1211  01D1FA  00                 	db	0
  1212  01D1FB  00                 	db	0
  1213  01D1FC  00                 	db	0
  1214  01D1FD  00                 	db	0
  1215  01D1FE  00                 	db	0
  1216  01D1FF  00                 	db	0
  1217  01D200  00                 	db	0
  1218  01D201  00                 	db	0
  1219  01D202  00                 	db	0
  1220  01D203  00                 	db	0
  1221  01D204  00                 	db	0
  1222  01D205  00                 	db	0
  1223  01D206  00                 	db	0
  1224  01D207  00                 	db	0
  1225  01D208  00                 	db	0
  1226  01D209  00                 	db	0
  1227  01D20A  00                 	db	0
  1228  01D20B  00                 	db	0
  1229  01D20C  00                 	db	0
  1230  01D20D  00                 	db	0
  1231  01D20E  00                 	db	0
  1232  01D20F  00                 	db	0
  1233  01D210  00                 	db	0
  1234  01D211  00                 	db	0
  1235  01D212  00                 	db	0
  1236  01D213  00                 	db	0
  1237  01D214  00                 	db	0
  1238  01D215  00                 	db	0
  1239  01D216  00                 	db	0
  1240  01D217  00                 	db	0
  1241  01D218  00                 	db	0
  1242  01D219  00                 	db	0
  1243  01D21A  00                 	db	0
  1244  01D21B  00                 	db	0
  1245  01D21C  00                 	db	0
  1246  01D21D  00                 	db	0
  1247  01D21E  00                 	db	0
  1248  01D21F  00                 	db	0
  1249  01D220  00                 	db	0
  1250  01D221  00                 	db	0
  1251  01D222  00                 	db	0
  1252  01D223  00                 	db	0
  1253  01D224  00                 	db	0
  1254  01D225  00                 	db	0
  1255  01D226  00                 	db	0
  1256  01D227  00                 	db	0
  1257  01D228  00                 	db	0
  1258  01D229  00                 	db	0
  1259  01D22A  00                 	db	0
  1260  01D22B  00                 	db	0
  1261  01D22C  00                 	db	0
  1262  01D22D  00                 	db	0
  1263  01D22E  00                 	db	0
  1264  01D22F  00                 	db	0
  1265  01D230  00                 	db	0
  1266  01D231  00                 	db	0
  1267  01D232  00                 	db	0
  1268  01D233  00                 	db	0
  1269  01D234  00                 	db	0
  1270  01D235  00                 	db	0
  1271  01D236  00                 	db	0
  1272  01D237  00                 	db	0
  1273  01D238  00                 	db	0
  1274  01D239  00                 	db	0
  1275  01D23A  00                 	db	0
  1276  01D23B  00                 	db	0
  1277  01D23C  00                 	db	0
  1278  01D23D  00                 	db	0
  1279  01D23E  00                 	db	0
  1280  01D23F  00                 	db	0
  1281  01D240  00                 	db	0
  1282  01D241  00                 	db	0
  1283  01D242  00                 	db	0
  1284  01D243  00                 	db	0
  1285  01D244  00                 	db	0
  1286  01D245  00                 	db	0
  1287  01D246  00                 	db	0
  1288  01D247  00                 	db	0
  1289  01D248  00                 	db	0
  1290  01D249  00                 	db	0
  1291  01D24A  00                 	db	0
  1292  01D24B  00                 	db	0
  1293  01D24C  00                 	db	0
  1294  01D24D  00                 	db	0
  1295  01D24E  00                 	db	0
  1296  01D24F  00                 	db	0
  1297  01D250  00                 	db	0
  1298  01D251  00                 	db	0
  1299  01D252  00                 	db	0
  1300  01D253  00                 	db	0
  1301  01D254  00                 	db	0
  1302  01D255  00                 	db	0
  1303  01D256  00                 	db	0
  1304  01D257  00                 	db	0
  1305  01D258  00                 	db	0
  1306  01D259  00                 	db	0
  1307  01D25A  00                 	db	0
  1308  01D25B  00                 	db	0
  1309  01D25C  00                 	db	0
  1310  01D25D  00                 	db	0
  1311  01D25E  00                 	db	0
  1312  01D25F  00                 	db	0
  1313  01D260  00                 	db	0
  1314  01D261  00                 	db	0
  1315  01D262  00                 	db	0
  1316  01D263  00                 	db	0
  1317  01D264  00                 	db	0
  1318  01D265  00                 	db	0
  1319  01D266  00                 	db	0
  1320  01D267  00                 	db	0
  1321  01D268  00                 	db	0
  1322  01D269  00                 	db	0
  1323  01D26A  00                 	db	0
  1324  01D26B  00                 	db	0
  1325  01D26C  00                 	db	0
  1326  01D26D  00                 	db	0
  1327  01D26E  00                 	db	0
  1328  01D26F  00                 	db	0
  1329  01D270  00                 	db	0
  1330  01D271  00                 	db	0
  1331  01D272  00                 	db	0
  1332  01D273  00                 	db	0
  1333  01D274  00                 	db	0
  1334  01D275  00                 	db	0
  1335  01D276  00                 	db	0
  1336  01D277  00                 	db	0
  1337  01D278  00                 	db	0
  1338  01D279  00                 	db	0
  1339  01D27A  00                 	db	0
  1340  01D27B  00                 	db	0
  1341  01D27C  00                 	db	0
  1342  01D27D  00                 	db	0
  1343  01D27E  00                 	db	0
  1344  01D27F  00                 	db	0
  1345  01D280  00                 	db	0
  1346  01D281  00                 	db	0
  1347  01D282  00                 	db	0
  1348  01D283  00                 	db	0
  1349  01D284  00                 	db	0
  1350  01D285  00                 	db	0
  1351  01D286  00                 	db	0
  1352  01D287  00                 	db	0
  1353  01D288  00                 	db	0
  1354  01D289  00                 	db	0
  1355  01D28A  00                 	db	0
  1356  01D28B  00                 	db	0
  1357  01D28C  00                 	db	0
  1358  01D28D  00                 	db	0
  1359  01D28E  00                 	db	0
  1360  01D28F  00                 	db	0
  1361  01D290  00                 	db	0
  1362  01D291  00                 	db	0
  1363  01D292  00                 	db	0
  1364  01D293  00                 	db	0
  1365  01D294  00                 	db	0
  1366  01D295  00                 	db	0
  1367  01D296  00                 	db	0
  1368  01D297  00                 	db	0
  1369  01D298  00                 	db	0
  1370  01D299  00                 	db	0
  1371  01D29A  00                 	db	0
  1372  01D29B  00                 	db	0
  1373  01D29C  00                 	db	0
  1374  01D29D  00                 	db	0
  1375  01D29E  00                 	db	0
  1376  01D29F  00                 	db	0
  1377  01D2A0  00                 	db	0
  1378  01D2A1  00                 	db	0
  1379  01D2A2  00                 	db	0
  1380  01D2A3  00                 	db	0
  1381  01D2A4  00                 	db	0
  1382  01D2A5  00                 	db	0
  1383  01D2A6  00                 	db	0
  1384  01D2A7  00                 	db	0
  1385  01D2A8  00                 	db	0
  1386  01D2A9  00                 	db	0
  1387  01D2AA  00                 	db	0
  1388  01D2AB  00                 	db	0
  1389  01D2AC  00                 	db	0
  1390  01D2AD  00                 	db	0
  1391  01D2AE  00                 	db	0
  1392  01D2AF  00                 	db	0
  1393  01D2B0  00                 	db	0
  1394  01D2B1  00                 	db	0
  1395  01D2B2  00                 	db	0
  1396  01D2B3  00                 	db	0
  1397  01D2B4  00                 	db	0
  1398  01D2B5  00                 	db	0
  1399  01D2B6  00                 	db	0
  1400  01D2B7  00                 	db	0
  1401  01D2B8  00                 	db	0
  1402  01D2B9  00                 	db	0
  1403  01D2BA  00                 	db	0
  1404  01D2BB  00                 	db	0
  1405  01D2BC  00                 	db	0
  1406  01D2BD  00                 	db	0
  1407  01D2BE  00                 	db	0
  1408  01D2BF  00                 	db	0
  1409  01D2C0  00                 	db	0
  1410  01D2C1  00                 	db	0
  1411  01D2C2  00                 	db	0
  1412  01D2C3  00                 	db	0
  1413  01D2C4  00                 	db	0
  1414  01D2C5  00                 	db	0
  1415  01D2C6  00                 	db	0
  1416  01D2C7  00                 	db	0
  1417  01D2C8  00                 	db	0
  1418  01D2C9  00                 	db	0
  1419  01D2CA  00                 	db	0
  1420  01D2CB  00                 	db	0
  1421  01D2CC  00                 	db	0
  1422  01D2CD  00                 	db	0
  1423  01D2CE  00                 	db	0
  1424  01D2CF  00                 	db	0
  1425  01D2D0  00                 	db	0
  1426  01D2D1  00                 	db	0
  1427  01D2D2  00                 	db	0
  1428  01D2D3  00                 	db	0
  1429  01D2D4  00                 	db	0
  1430  01D2D5  00                 	db	0
  1431  01D2D6  00                 	db	0
  1432  01D2D7  00                 	db	0
  1433  01D2D8  00                 	db	0
  1434  01D2D9  00                 	db	0
  1435  01D2DA  00                 	db	0
  1436  01D2DB  00                 	db	0
  1437  01D2DC  00                 	db	0
  1438  01D2DD  00                 	db	0
  1439  01D2DE  00                 	db	0
  1440  01D2DF  00                 	db	0
  1441  01D2E0  00                 	db	0
  1442  01D2E1  00                 	db	0
  1443  01D2E2  00                 	db	0
  1444  01D2E3  00                 	db	0
  1445  01D2E4  00                 	db	0
  1446  01D2E5  00                 	db	0
  1447  01D2E6  00                 	db	0
  1448  01D2E7  00                 	db	0
  1449  01D2E8  00                 	db	0
  1450  01D2E9  00                 	db	0
  1451  01D2EA  00                 	db	0
  1452  01D2EB  00                 	db	0
  1453  01D2EC  00                 	db	0
  1454  01D2ED  00                 	db	0
  1455  01D2EE  00                 	db	0
  1456  01D2EF  00                 	db	0
  1457  01D2F0  00                 	db	0
  1458  01D2F1  00                 	db	0
  1459  01D2F2  00                 	db	0
  1460  01D2F3  00                 	db	0
  1461  01D2F4  00                 	db	0
  1462  01D2F5  00                 	db	0
  1463  01D2F6  00                 	db	0
  1464  01D2F7  00                 	db	0
  1465  01D2F8  00                 	db	0
  1466  01D2F9  00                 	db	0
  1467  01D2FA  00                 	db	0
  1468  01D2FB  00                 	db	0
  1469  01D2FC  00                 	db	0
  1470  01D2FD  00                 	db	0
  1471  01D2FE  00                 	db	0
  1472  01D2FF  00                 	db	0
  1473  01D300  00                 	db	0
  1474  01D301  00                 	db	0
  1475  01D302  00                 	db	0
  1476  01D303  00                 	db	0
  1477  01D304  00                 	db	0
  1478  01D305  00                 	db	0
  1479  01D306  00                 	db	0
  1480  01D307  00                 	db	0
  1481  01D308  00                 	db	0
  1482  01D309  00                 	db	0
  1483  01D30A  00                 	db	0
  1484  01D30B  00                 	db	0
  1485  01D30C  00                 	db	0
  1486  01D30D  00                 	db	0
  1487  01D30E  00                 	db	0
  1488  01D30F  00                 	db	0
  1489  01D310  00                 	db	0
  1490  01D311  00                 	db	0
  1491  01D312  00                 	db	0
  1492  01D313  00                 	db	0
  1493  01D314  00                 	db	0
  1494  01D315  00                 	db	0
  1495  01D316  00                 	db	0
  1496  01D317  00                 	db	0
  1497  01D318  00                 	db	0
  1498  01D319  00                 	db	0
  1499  01D31A  00                 	db	0
  1500  01D31B  00                 	db	0
  1501  01D31C  00                 	db	0
  1502  01D31D  00                 	db	0
  1503  01D31E  00                 	db	0
  1504  01D31F  00                 	db	0
  1505  01D320  00                 	db	0
  1506  01D321  00                 	db	0
  1507  01D322  00                 	db	0
  1508  01D323  00                 	db	0
  1509  01D324  00                 	db	0
  1510  01D325  00                 	db	0
  1511  01D326  00                 	db	0
  1512  01D327  00                 	db	0
  1513  01D328  00                 	db	0
  1514  01D329  00                 	db	0
  1515  01D32A  00                 	db	0
  1516  01D32B  00                 	db	0
  1517  01D32C  00                 	db	0
  1518  01D32D  00                 	db	0
  1519  01D32E  00                 	db	0
  1520  01D32F  00                 	db	0
  1521  01D330  00                 	db	0
  1522  01D331  00                 	db	0
  1523  01D332  00                 	db	0
  1524  01D333  00                 	db	0
  1525  01D334  00                 	db	0
  1526  01D335  00                 	db	0
  1527  01D336  00                 	db	0
  1528  01D337  00                 	db	0
  1529  01D338  00                 	db	0
  1530  01D339  00                 	db	0
  1531  01D33A  00                 	db	0
  1532  01D33B  00                 	db	0
  1533  01D33C  00                 	db	0
  1534  01D33D  00                 	db	0
  1535  01D33E  00                 	db	0
  1536  01D33F  00                 	db	0
  1537  01D340  00                 	db	0
  1538  01D341  00                 	db	0
  1539  01D342  00                 	db	0
  1540  01D343  00                 	db	0
  1541  01D344  00                 	db	0
  1542  01D345  00                 	db	0
  1543  01D346  00                 	db	0
  1544  01D347  00                 	db	0
  1545  01D348  00                 	db	0
  1546  01D349  00                 	db	0
  1547  01D34A  00                 	db	0
  1548  01D34B  00                 	db	0
  1549  01D34C  00                 	db	0
  1550  01D34D  00                 	db	0
  1551  01D34E  00                 	db	0
  1552  01D34F  00                 	db	0
  1553  01D350  00                 	db	0
  1554  01D351  00                 	db	0
  1555  01D352  00                 	db	0
  1556  01D353  00                 	db	0
  1557  01D354  00                 	db	0
  1558  01D355  00                 	db	0
  1559  01D356  00                 	db	0
  1560  01D357  00                 	db	0
  1561  01D358  00                 	db	0
  1562  01D359  00                 	db	0
  1563  01D35A  00                 	db	0
  1564  01D35B  00                 	db	0
  1565  01D35C  00                 	db	0
  1566  01D35D  00                 	db	0
  1567  01D35E  00                 	db	0
  1568  01D35F  00                 	db	0
  1569  01D360  00                 	db	0
  1570  01D361  00                 	db	0
  1571  01D362  00                 	db	0
  1572  01D363  00                 	db	0
  1573  01D364  00                 	db	0
  1574  01D365  00                 	db	0
  1575  01D366  00                 	db	0
  1576  01D367  00                 	db	0
  1577  01D368  00                 	db	0
  1578  01D369  00                 	db	0
  1579  01D36A  00                 	db	0
  1580  01D36B  00                 	db	0
  1581  01D36C  00                 	db	0
  1582  01D36D  00                 	db	0
  1583  01D36E  00                 	db	0
  1584  01D36F  00                 	db	0
  1585  01D370  00                 	db	0
  1586  01D371  00                 	db	0
  1587  01D372  00                 	db	0
  1588  01D373  00                 	db	0
  1589  01D374  00                 	db	0
  1590  01D375  00                 	db	0
  1591  01D376  00                 	db	0
  1592  01D377  00                 	db	0
  1593  01D378  00                 	db	0
  1594  01D379  00                 	db	0
  1595  01D37A  00                 	db	0
  1596  01D37B  00                 	db	0
  1597  01D37C  00                 	db	0
  1598  01D37D  00                 	db	0
  1599  01D37E  00                 	db	0
  1600  01D37F  00                 	db	0
  1601  01D380  00                 	db	0
  1602  01D381  00                 	db	0
  1603  01D382  00                 	db	0
  1604  01D383  00                 	db	0
  1605  01D384  00                 	db	0
  1606  01D385  00                 	db	0
  1607  01D386  00                 	db	0
  1608  01D387  00                 	db	0
  1609  01D388  00                 	db	0
  1610  01D389  00                 	db	0
  1611  01D38A  00                 	db	0
  1612  01D38B  00                 	db	0
  1613  01D38C  00                 	db	0
  1614  01D38D  00                 	db	0
  1615  01D38E  00                 	db	0
  1616  01D38F  00                 	db	0
  1617  01D390  00                 	db	0
  1618  01D391  00                 	db	0
  1619  01D392  00                 	db	0
  1620  01D393  00                 	db	0
  1621  01D394  00                 	db	0
  1622  01D395  00                 	db	0
  1623  01D396  00                 	db	0
  1624  01D397  00                 	db	0
  1625  01D398  00                 	db	0
  1626  01D399  00                 	db	0
  1627  01D39A  00                 	db	0
  1628  01D39B  00                 	db	0
  1629  01D39C  00                 	db	0
  1630  01D39D  00                 	db	0
  1631  01D39E  00                 	db	0
  1632  01D39F  00                 	db	0
  1633  01D3A0  00                 	db	0
  1634  01D3A1  00                 	db	0
  1635  01D3A2  00                 	db	0
  1636  01D3A3  00                 	db	0
  1637  01D3A4  00                 	db	0
  1638  01D3A5  00                 	db	0
  1639  01D3A6  00                 	db	0
  1640  01D3A7  00                 	db	0
  1641  01D3A8  00                 	db	0
  1642  01D3A9  00                 	db	0
  1643  01D3AA  00                 	db	0
  1644  01D3AB  00                 	db	0
  1645  01D3AC  00                 	db	0
  1646  01D3AD  00                 	db	0
  1647  01D3AE  00                 	db	0
  1648  01D3AF  00                 	db	0
  1649  01D3B0  00                 	db	0
  1650  01D3B1  00                 	db	0
  1651  01D3B2  00                 	db	0
  1652  01D3B3  00                 	db	0
  1653  01D3B4  00                 	db	0
  1654  01D3B5  00                 	db	0
  1655  01D3B6  00                 	db	0
  1656  01D3B7  00                 	db	0
  1657  01D3B8  00                 	db	0
  1658  01D3B9  00                 	db	0
  1659  01D3BA  00                 	db	0
  1660  01D3BB  00                 	db	0
  1661  01D3BC  00                 	db	0
  1662  01D3BD  00                 	db	0
  1663  01D3BE  00                 	db	0
  1664  01D3BF  00                 	db	0
  1665  01D3C0  00                 	db	0
  1666  01D3C1  00                 	db	0
  1667  01D3C2  00                 	db	0
  1668  01D3C3  00                 	db	0
  1669  01D3C4  00                 	db	0
  1670  01D3C5  00                 	db	0
  1671  01D3C6  00                 	db	0
  1672  01D3C7  00                 	db	0
  1673  01D3C8  00                 	db	0
  1674  01D3C9  00                 	db	0
  1675  01D3CA  00                 	db	0
  1676  01D3CB  00                 	db	0
  1677  01D3CC  00                 	db	0
  1678  01D3CD  00                 	db	0
  1679  01D3CE  00                 	db	0
  1680  01D3CF  00                 	db	0
  1681  01D3D0  00                 	db	0
  1682  01D3D1  00                 	db	0
  1683  01D3D2  00                 	db	0
  1684  01D3D3  00                 	db	0
  1685  01D3D4  00                 	db	0
  1686  01D3D5  00                 	db	0
  1687  01D3D6  00                 	db	0
  1688  01D3D7  00                 	db	0
  1689  01D3D8  00                 	db	0
  1690  01D3D9  00                 	db	0
  1691  01D3DA  00                 	db	0
  1692  01D3DB  00                 	db	0
  1693  01D3DC  00                 	db	0
  1694  01D3DD  00                 	db	0
  1695  01D3DE  00                 	db	0
  1696  01D3DF  00                 	db	0
  1697  01D3E0  00                 	db	0
  1698  01D3E1  00                 	db	0
  1699  01D3E2  00                 	db	0
  1700  01D3E3  00                 	db	0
  1701  01D3E4  00                 	db	0
  1702  01D3E5  00                 	db	0
  1703  01D3E6  00                 	db	0
  1704  01D3E7  00                 	db	0
  1705  01D3E8  00                 	db	0
  1706  01D3E9  00                 	db	0
  1707  01D3EA  00                 	db	0
  1708  01D3EB  00                 	db	0
  1709  01D3EC  00                 	db	0
  1710  01D3ED  00                 	db	0
  1711  01D3EE  00                 	db	0
  1712  01D3EF  00                 	db	0
  1713  01D3F0  00                 	db	0
  1714  01D3F1  00                 	db	0
  1715  01D3F2  00                 	db	0
  1716  01D3F3  00                 	db	0
  1717  01D3F4  00                 	db	0
  1718  01D3F5  00                 	db	0
  1719  01D3F6  00                 	db	0
  1720  01D3F7  00                 	db	0
  1721  01D3F8  00                 	db	0
  1722  01D3F9  00                 	db	0
  1723  01D3FA  00                 	db	0
  1724  01D3FB  00                 	db	0
  1725  01D3FC  00                 	db	0
  1726  01D3FD  00                 	db	0
  1727  01D3FE  00                 	db	0
  1728  01D3FF  00                 	db	0
  1729  01D400  00                 	db	0
  1730  01D401  00                 	db	0
  1731  01D402  00                 	db	0
  1732  01D403  00                 	db	0
  1733  01D404  00                 	db	0
  1734  01D405  00                 	db	0
  1735  01D406  00                 	db	0
  1736  01D407  00                 	db	0
  1737  01D408  00                 	db	0
  1738  01D409  00                 	db	0
  1739  01D40A  00                 	db	0
  1740  01D40B  00                 	db	0
  1741  01D40C  00                 	db	0
  1742  01D40D  00                 	db	0
  1743  01D40E  00                 	db	0
  1744  01D40F  00                 	db	0
  1745  01D410  00                 	db	0
  1746  01D411  00                 	db	0
  1747  01D412  00                 	db	0
  1748  01D413  00                 	db	0
  1749  01D414  00                 	db	0
  1750  01D415  00                 	db	0
  1751  01D416  00                 	db	0
  1752  01D417  00                 	db	0
  1753  01D418  00                 	db	0
  1754  01D419  00                 	db	0
  1755  01D41A  00                 	db	0
  1756  01D41B  00                 	db	0
  1757  01D41C  00                 	db	0
  1758  01D41D  00                 	db	0
  1759  01D41E  00                 	db	0
  1760  01D41F  00                 	db	0
  1761  01D420  00                 	db	0
  1762  01D421  00                 	db	0
  1763  01D422  00                 	db	0
  1764  01D423  00                 	db	0
  1765  01D424  00                 	db	0
  1766  01D425  00                 	db	0
  1767  01D426  00                 	db	0
  1768  01D427  00                 	db	0
  1769  01D428  00                 	db	0
  1770  01D429  00                 	db	0
  1771  01D42A  00                 	db	0
  1772  01D42B  00                 	db	0
  1773  01D42C  00                 	db	0
  1774  01D42D  00                 	db	0
  1775  01D42E  00                 	db	0
  1776  01D42F  00                 	db	0
  1777  01D430  00                 	db	0
  1778  01D431  00                 	db	0
  1779  01D432  00                 	db	0
  1780  01D433  00                 	db	0
  1781  01D434  00                 	db	0
  1782  01D435  00                 	db	0
  1783  01D436  00                 	db	0
  1784  01D437  00                 	db	0
  1785  01D438  00                 	db	0
  1786  01D439  00                 	db	0
  1787  01D43A  00                 	db	0
  1788  01D43B  00                 	db	0
  1789  01D43C  00                 	db	0
  1790  01D43D  00                 	db	0
  1791  01D43E  00                 	db	0
  1792  01D43F  00                 	db	0
  1793  01D440  00                 	db	0
  1794  01D441  00                 	db	0
  1795  01D442  00                 	db	0
  1796  01D443  00                 	db	0
  1797  01D444  00                 	db	0
  1798  01D445  00                 	db	0
  1799  01D446  00                 	db	0
  1800  01D447  00                 	db	0
  1801  01D448  00                 	db	0
  1802  01D449  00                 	db	0
  1803  01D44A  00                 	db	0
  1804  01D44B  00                 	db	0
  1805  01D44C  00                 	db	0
  1806  01D44D  00                 	db	0
  1807  01D44E  00                 	db	0
  1808  01D44F  00                 	db	0
  1809  01D450  00                 	db	0
  1810  01D451  00                 	db	0
  1811  01D452  00                 	db	0
  1812  01D453  00                 	db	0
  1813  01D454  00                 	db	0
  1814  01D455  00                 	db	0
  1815  01D456  00                 	db	0
  1816  01D457  00                 	db	0
  1817  01D458  00                 	db	0
  1818  01D459  00                 	db	0
  1819  01D45A  00                 	db	0
  1820  01D45B  00                 	db	0
  1821  01D45C  00                 	db	0
  1822  01D45D  00                 	db	0
  1823  01D45E  00                 	db	0
  1824  01D45F  00                 	db	0
  1825  01D460  00                 	db	0
  1826  01D461  00                 	db	0
  1827  01D462  00                 	db	0
  1828  01D463  00                 	db	0
  1829  01D464  00                 	db	0
  1830  01D465  00                 	db	0
  1831  01D466  00                 	db	0
  1832  01D467  00                 	db	0
  1833  01D468  00                 	db	0
  1834  01D469  00                 	db	0
  1835  01D46A  00                 	db	0
  1836  01D46B  00                 	db	0
  1837  01D46C  00                 	db	0
  1838  01D46D  00                 	db	0
  1839  01D46E  00                 	db	0
  1840  01D46F  00                 	db	0
  1841  01D470  00                 	db	0
  1842  01D471  00                 	db	0
  1843  01D472  00                 	db	0
  1844  01D473  00                 	db	0
  1845  01D474  00                 	db	0
  1846  01D475  00                 	db	0
  1847  01D476  00                 	db	0
  1848  01D477  00                 	db	0
  1849  01D478  00                 	db	0
  1850  01D479  00                 	db	0
  1851  01D47A  00                 	db	0
  1852  01D47B  00                 	db	0
  1853  01D47C  00                 	db	0
  1854  01D47D  00                 	db	0
  1855  01D47E  00                 	db	0
  1856  01D47F  00                 	db	0
  1857  01D480  00                 	db	0
  1858  01D481  00                 	db	0
  1859  01D482  00                 	db	0
  1860  01D483  00                 	db	0
  1861  01D484  00                 	db	0
  1862  01D485  00                 	db	0
  1863  01D486  00                 	db	0
  1864  01D487  00                 	db	0
  1865  01D488  00                 	db	0
  1866  01D489  00                 	db	0
  1867  01D48A  00                 	db	0
  1868  01D48B  00                 	db	0
  1869  01D48C  00                 	db	0
  1870  01D48D  00                 	db	0
  1871  01D48E  00                 	db	0
  1872  01D48F  00                 	db	0
  1873  01D490  00                 	db	0
  1874  01D491  00                 	db	0
  1875  01D492  00                 	db	0
  1876  01D493  00                 	db	0
  1877  01D494  00                 	db	0
  1878  01D495  00                 	db	0
  1879  01D496  00                 	db	0
  1880  01D497  00                 	db	0
  1881  01D498  00                 	db	0
  1882  01D499  00                 	db	0
  1883  01D49A  00                 	db	0
  1884  01D49B  00                 	db	0
  1885  01D49C  00                 	db	0
  1886  01D49D  00                 	db	0
  1887  01D49E  00                 	db	0
  1888  01D49F  00                 	db	0
  1889  01D4A0  00                 	db	0
  1890  01D4A1  00                 	db	0
  1891  01D4A2  00                 	db	0
  1892  01D4A3  00                 	db	0
  1893  01D4A4  00                 	db	0
  1894  01D4A5  00                 	db	0
  1895  01D4A6  00                 	db	0
  1896  01D4A7  00                 	db	0
  1897  01D4A8  00                 	db	0
  1898  01D4A9  00                 	db	0
  1899  01D4AA  00                 	db	0
  1900  01D4AB  00                 	db	0
  1901  01D4AC  00                 	db	0
  1902  01D4AD  00                 	db	0
  1903  01D4AE  00                 	db	0
  1904  01D4AF  00                 	db	0
  1905  01D4B0  00                 	db	0
  1906  01D4B1  00                 	db	0
  1907  01D4B2  00                 	db	0
  1908  01D4B3  00                 	db	0
  1909  01D4B4  00                 	db	0
  1910  01D4B5  00                 	db	0
  1911  01D4B6  00                 	db	0
  1912  01D4B7  00                 	db	0
  1913  01D4B8  00                 	db	0
  1914  01D4B9  00                 	db	0
  1915  01D4BA  00                 	db	0
  1916  01D4BB  00                 	db	0
  1917  01D4BC  00                 	db	0
  1918  01D4BD  00                 	db	0
  1919  01D4BE  00                 	db	0
  1920  01D4BF  00                 	db	0
  1921  01D4C0  00                 	db	0
  1922  01D4C1  00                 	db	0
  1923  01D4C2  00                 	db	0
  1924  01D4C3  00                 	db	0
  1925  01D4C4  00                 	db	0
  1926  01D4C5  00                 	db	0
  1927  01D4C6  00                 	db	0
  1928  01D4C7  00                 	db	0
  1929  01D4C8  00                 	db	0
  1930  01D4C9  00                 	db	0
  1931  01D4CA  00                 	db	0
  1932  01D4CB  00                 	db	0
  1933  01D4CC  00                 	db	0
  1934  01D4CD  00                 	db	0
  1935  01D4CE  00                 	db	0
  1936  01D4CF  00                 	db	0
  1937  01D4D0  00                 	db	0
  1938  01D4D1  00                 	db	0
  1939  01D4D2  00                 	db	0
  1940  01D4D3  00                 	db	0
  1941  01D4D4  00                 	db	0
  1942  01D4D5  00                 	db	0
  1943  01D4D6  00                 	db	0
  1944  01D4D7  00                 	db	0
  1945  01D4D8  00                 	db	0
  1946  01D4D9  00                 	db	0
  1947  01D4DA  00                 	db	0
  1948  01D4DB  00                 	db	0
  1949  01D4DC  00                 	db	0
  1950  01D4DD  00                 	db	0
  1951  01D4DE  00                 	db	0
  1952  01D4DF  00                 	db	0
  1953  01D4E0  00                 	db	0
  1954  01D4E1  00                 	db	0
  1955  01D4E2  00                 	db	0
  1956  01D4E3  00                 	db	0
  1957  01D4E4  00                 	db	0
  1958  01D4E5  00                 	db	0
  1959  01D4E6  00                 	db	0
  1960  01D4E7  00                 	db	0
  1961  01D4E8  00                 	db	0
  1962  01D4E9  00                 	db	0
  1963  01D4EA  00                 	db	0
  1964  01D4EB  00                 	db	0
  1965  01D4EC  00                 	db	0
  1966  01D4ED  00                 	db	0
  1967  01D4EE  00                 	db	0
  1968  01D4EF  00                 	db	0
  1969  01D4F0  00                 	db	0
  1970  01D4F1  00                 	db	0
  1971  01D4F2  00                 	db	0
  1972  01D4F3  00                 	db	0
  1973  01D4F4  00                 	db	0
  1974  01D4F5  00                 	db	0
  1975  01D4F6  00                 	db	0
  1976  01D4F7  00                 	db	0
  1977  01D4F8  00                 	db	0
  1978  01D4F9  00                 	db	0
  1979  01D4FA  00                 	db	0
  1980  01D4FB  00                 	db	0
  1981  01D4FC  00                 	db	0
  1982  01D4FD  00                 	db	0
  1983  01D4FE  00                 	db	0
  1984  01D4FF  00                 	db	0
  1985  01D500  00                 	db	0
  1986  01D501  00                 	db	0
  1987  01D502  00                 	db	0
  1988  01D503  00                 	db	0
  1989  01D504  00                 	db	0
  1990  01D505  00                 	db	0
  1991  01D506  00                 	db	0
  1992  01D507  00                 	db	0
  1993  01D508  00                 	db	0
  1994  01D509  00                 	db	0
  1995  01D50A  00                 	db	0
  1996  01D50B  00                 	db	0
  1997  01D50C  00                 	db	0
  1998  01D50D  00                 	db	0
  1999  01D50E  00                 	db	0
  2000  01D50F  00                 	db	0
  2001  01D510  00                 	db	0
  2002  01D511  00                 	db	0
  2003  01D512  00                 	db	0
  2004  01D513  00                 	db	0
  2005  01D514  00                 	db	0
  2006  01D515  00                 	db	0
  2007  01D516  00                 	db	0
  2008  01D517  00                 	db	0
  2009  01D518  00                 	db	0
  2010  01D519  00                 	db	0
  2011  01D51A  00                 	db	0
  2012  01D51B  00                 	db	0
  2013  01D51C  00                 	db	0
  2014  01D51D  00                 	db	0
  2015  01D51E  00                 	db	0
  2016  01D51F  00                 	db	0
  2017  01D520  00                 	db	0
  2018  01D521  00                 	db	0
  2019  01D522  00                 	db	0
  2020  01D523  00                 	db	0
  2021  01D524  00                 	db	0
  2022  01D525  00                 	db	0
  2023  01D526  00                 	db	0
  2024  01D527  00                 	db	0
  2025  01D528  00                 	db	0
  2026  01D529  00                 	db	0
  2027  01D52A  00                 	db	0
  2028  01D52B  00                 	db	0
  2029  01D52C  00                 	db	0
  2030  01D52D  00                 	db	0
  2031  01D52E  00                 	db	0
  2032  01D52F  00                 	db	0
  2033  01D530  00                 	db	0
  2034  01D531  00                 	db	0
  2035  01D532  00                 	db	0
  2036  01D533  00                 	db	0
  2037  01D534  00                 	db	0
  2038  01D535  00                 	db	0
  2039  01D536  00                 	db	0
  2040  01D537  00                 	db	0
  2041  01D538  00                 	db	0
  2042  01D539  00                 	db	0
  2043  01D53A  00                 	db	0
  2044  01D53B  00                 	db	0
  2045  01D53C  00                 	db	0
  2046  01D53D  00                 	db	0
  2047  01D53E  00                 	db	0
  2048  01D53F  00                 	db	0
  2049  01D540  00                 	db	0
  2050  01D541  00                 	db	0
  2051  01D542  00                 	db	0
  2052  01D543  00                 	db	0
  2053  01D544  00                 	db	0
  2054  01D545  00                 	db	0
  2055  01D546  00                 	db	0
  2056  01D547  00                 	db	0
  2057  01D548  00                 	db	0
  2058  01D549  00                 	db	0
  2059  01D54A  00                 	db	0
  2060  01D54B  00                 	db	0
  2061  01D54C  00                 	db	0
  2062  01D54D  00                 	db	0
  2063  01D54E  00                 	db	0
  2064  01D54F  00                 	db	0
  2065  01D550  00                 	db	0
  2066  01D551  00                 	db	0
  2067  01D552  00                 	db	0
  2068  01D553  00                 	db	0
  2069  01D554  00                 	db	0
  2070  01D555  00                 	db	0
  2071  01D556  00                 	db	0
  2072  01D557  00                 	db	0
  2073  01D558  00                 	db	0
  2074  01D559  00                 	db	0
  2075  01D55A  00                 	db	0
  2076  01D55B  00                 	db	0
  2077  01D55C  00                 	db	0
  2078  01D55D  00                 	db	0
  2079  01D55E  00                 	db	0
  2080  01D55F  00                 	db	0
  2081  01D560  00                 	db	0
  2082  01D561  00                 	db	0
  2083  01D562  00                 	db	0
  2084  01D563  00                 	db	0
  2085  01D564  00                 	db	0
  2086  01D565  00                 	db	0
  2087  01D566  00                 	db	0
  2088  01D567  00                 	db	0
  2089  01D568  00                 	db	0
  2090  01D569  00                 	db	0
  2091  01D56A  00                 	db	0
  2092  01D56B  00                 	db	0
  2093  01D56C  00                 	db	0
  2094  01D56D  00                 	db	0
  2095  01D56E  00                 	db	0
  2096  01D56F  00                 	db	0
  2097  01D570  00                 	db	0
  2098  01D571  00                 	db	0
  2099  01D572  00                 	db	0
  2100  01D573  00                 	db	0
  2101  01D574  00                 	db	0
  2102  01D575  00                 	db	0
  2103  01D576  00                 	db	0
  2104  01D577  00                 	db	0
  2105  01D578  00                 	db	0
  2106  01D579  00                 	db	0
  2107  01D57A  00                 	db	0
  2108  01D57B  00                 	db	0
  2109  01D57C  00                 	db	0
  2110  01D57D  00                 	db	0
  2111  01D57E  00                 	db	0
  2112  01D57F  00                 	db	0
  2113  01D580  00                 	db	0
  2114  01D581  00                 	db	0
  2115  01D582  00                 	db	0
  2116  01D583  00                 	db	0
  2117  01D584  00                 	db	0
  2118  01D585  00                 	db	0
  2119  01D586  00                 	db	0
  2120  01D587  00                 	db	0
  2121  01D588  00                 	db	0
  2122  01D589  00                 	db	0
  2123  01D58A  00                 	db	0
  2124  01D58B  00                 	db	0
  2125  01D58C  00                 	db	0
  2126  01D58D  00                 	db	0
  2127  01D58E  00                 	db	0
  2128  01D58F  00                 	db	0
  2129  01D590  00                 	db	0
  2130  01D591  00                 	db	0
  2131  01D592  00                 	db	0
  2132  01D593  00                 	db	0
  2133  01D594  00                 	db	0
  2134  01D595  00                 	db	0
  2135  01D596  00                 	db	0
  2136  01D597  00                 	db	0
  2137  01D598  00                 	db	0
  2138  01D599  00                 	db	0
  2139  01D59A  00                 	db	0
  2140  01D59B  00                 	db	0
  2141  01D59C  00                 	db	0
  2142  01D59D  00                 	db	0
  2143  01D59E  00                 	db	0
  2144  01D59F  00                 	db	0
  2145  01D5A0  00                 	db	0
  2146  01D5A1  00                 	db	0
  2147  01D5A2  00                 	db	0
  2148  01D5A3  00                 	db	0
  2149  01D5A4  00                 	db	0
  2150  01D5A5  00                 	db	0
  2151  01D5A6  00                 	db	0
  2152  01D5A7  00                 	db	0
  2153  01D5A8  00                 	db	0
  2154  01D5A9  00                 	db	0
  2155  01D5AA  00                 	db	0
  2156  01D5AB  00                 	db	0
  2157  01D5AC  00                 	db	0
  2158  01D5AD  00                 	db	0
  2159  01D5AE  00                 	db	0
  2160  01D5AF  00                 	db	0
  2161  01D5B0  00                 	db	0
  2162  01D5B1  00                 	db	0
  2163  01D5B2  00                 	db	0
  2164  01D5B3  00                 	db	0
  2165  01D5B4  00                 	db	0
  2166  01D5B5  00                 	db	0
  2167  01D5B6  00                 	db	0
  2168  01D5B7  00                 	db	0
  2169  01D5B8  00                 	db	0
  2170  01D5B9  00                 	db	0
  2171  01D5BA  00                 	db	0
  2172  01D5BB  00                 	db	0
  2173  01D5BC  00                 	db	0
  2174  01D5BD  00                 	db	0
  2175  01D5BE  00                 	db	0
  2176  01D5BF  00                 	db	0
  2177  01D5C0  00                 	db	0
  2178  01D5C1  00                 	db	0
  2179  01D5C2  00                 	db	0
  2180  01D5C3  00                 	db	0
  2181  01D5C4  00                 	db	0
  2182  01D5C5  00                 	db	0
  2183  01D5C6  00                 	db	0
  2184  01D5C7  00                 	db	0
  2185  01D5C8  00                 	db	0
  2186  01D5C9  00                 	db	0
  2187  01D5CA  00                 	db	0
  2188  01D5CB  00                 	db	0
  2189  01D5CC  00                 	db	0
  2190  01D5CD  00                 	db	0
  2191  01D5CE  00                 	db	0
  2192  01D5CF  00                 	db	0
  2193  01D5D0  00                 	db	0
  2194  01D5D1  00                 	db	0
  2195  01D5D2  00                 	db	0
  2196  01D5D3  00                 	db	0
  2197  01D5D4  00                 	db	0
  2198  01D5D5  00                 	db	0
  2199  01D5D6  00                 	db	0
  2200  01D5D7  00                 	db	0
  2201  01D5D8  00                 	db	0
  2202  01D5D9  00                 	db	0
  2203  01D5DA  00                 	db	0
  2204  01D5DB  00                 	db	0
  2205  01D5DC  00                 	db	0
  2206  01D5DD  00                 	db	0
  2207  01D5DE  00                 	db	0
  2208  01D5DF  00                 	db	0
  2209  01D5E0  00                 	db	0
  2210  01D5E1  00                 	db	0
  2211  01D5E2  00                 	db	0
  2212  01D5E3  00                 	db	0
  2213  01D5E4  00                 	db	0
  2214  01D5E5  00                 	db	0
  2215  01D5E6  00                 	db	0
  2216  01D5E7  00                 	db	0
  2217  01D5E8  00                 	db	0
  2218  01D5E9  00                 	db	0
  2219  01D5EA  00                 	db	0
  2220  01D5EB  00                 	db	0
  2221  01D5EC  00                 	db	0
  2222  01D5ED  00                 	db	0
  2223  01D5EE  00                 	db	0
  2224  01D5EF  00                 	db	0
  2225  01D5F0  00                 	db	0
  2226  01D5F1  00                 	db	0
  2227  01D5F2  00                 	db	0
  2228  01D5F3  00                 	db	0
  2229  01D5F4  00                 	db	0
  2230  01D5F5  00                 	db	0
  2231  01D5F6  00                 	db	0
  2232  01D5F7  00                 	db	0
  2233  01D5F8  00                 	db	0
  2234  01D5F9  00                 	db	0
  2235  01D5FA  00                 	db	0
  2236  01D5FB  00                 	db	0
  2237  01D5FC  00                 	db	0
  2238  01D5FD  00                 	db	0
  2239  01D5FE  00                 	db	0
  2240  01D5FF  00                 	db	0
  2241  01D600  00                 	db	0
  2242  01D601  00                 	db	0
  2243  01D602  00                 	db	0
  2244  01D603  00                 	db	0
  2245  01D604  00                 	db	0
  2246  01D605  00                 	db	0
  2247  01D606  00                 	db	0
  2248  01D607  00                 	db	0
  2249  01D608  00                 	db	0
  2250  01D609  00                 	db	0
  2251  01D60A  00                 	db	0
  2252  01D60B  00                 	db	0
  2253  01D60C  00                 	db	0
  2254  01D60D  00                 	db	0
  2255  01D60E  00                 	db	0
  2256  01D60F  00                 	db	0
  2257  01D610  00                 	db	0
  2258  01D611  00                 	db	0
  2259  01D612  00                 	db	0
  2260  01D613  00                 	db	0
  2261  01D614  00                 	db	0
  2262  01D615  00                 	db	0
  2263  01D616  00                 	db	0
  2264  01D617  00                 	db	0
  2265  01D618  00                 	db	0
  2266  01D619  00                 	db	0
  2267  01D61A  00                 	db	0
  2268  01D61B  00                 	db	0
  2269  01D61C  00                 	db	0
  2270  01D61D  00                 	db	0
  2271  01D61E  00                 	db	0
  2272  01D61F  00                 	db	0
  2273  01D620  00                 	db	0
  2274  01D621  00                 	db	0
  2275  01D622  00                 	db	0
  2276  01D623  00                 	db	0
  2277  01D624  00                 	db	0
  2278  01D625  00                 	db	0
  2279  01D626  00                 	db	0
  2280  01D627  00                 	db	0
  2281  01D628  00                 	db	0
  2282  01D629  00                 	db	0
  2283  01D62A  00                 	db	0
  2284  01D62B  00                 	db	0
  2285  01D62C  00                 	db	0
  2286  01D62D  00                 	db	0
  2287  01D62E  00                 	db	0
  2288  01D62F  00                 	db	0
  2289  01D630  00                 	db	0
  2290  01D631  00                 	db	0
  2291  01D632  00                 	db	0
  2292  01D633  00                 	db	0
  2293  01D634  00                 	db	0
  2294  01D635  00                 	db	0
  2295  01D636  00                 	db	0
  2296  01D637  00                 	db	0
  2297  01D638  00                 	db	0
  2298  01D639  00                 	db	0
  2299  01D63A  00                 	db	0
  2300  01D63B  00                 	db	0
  2301  01D63C  00                 	db	0
  2302  01D63D  00                 	db	0
  2303  01D63E  00                 	db	0
  2304  01D63F  00                 	db	0
  2305  01D640  00                 	db	0
  2306  01D641  00                 	db	0
  2307  01D642  00                 	db	0
  2308  01D643  00                 	db	0
  2309  01D644  00                 	db	0
  2310  01D645  00                 	db	0
  2311  01D646  00                 	db	0
  2312  01D647  00                 	db	0
  2313  01D648  00                 	db	0
  2314  01D649  00                 	db	0
  2315  01D64A  00                 	db	0
  2316  01D64B  00                 	db	0
  2317  01D64C  00                 	db	0
  2318  01D64D  00                 	db	0
  2319  01D64E  00                 	db	0
  2320  01D64F  00                 	db	0
  2321  01D650  00                 	db	0
  2322  01D651  00                 	db	0
  2323  01D652  00                 	db	0
  2324  01D653  00                 	db	0
  2325  01D654  00                 	db	0
  2326  01D655  00                 	db	0
  2327  01D656  00                 	db	0
  2328  01D657  00                 	db	0
  2329  01D658  00                 	db	0
  2330  01D659  00                 	db	0
  2331  01D65A  00                 	db	0
  2332  01D65B  00                 	db	0
  2333  01D65C  00                 	db	0
  2334  01D65D  00                 	db	0
  2335  01D65E  00                 	db	0
  2336  01D65F  00                 	db	0
  2337  01D660  00                 	db	0
  2338  01D661  00                 	db	0
  2339  01D662  00                 	db	0
  2340  01D663  00                 	db	0
  2341  01D664  00                 	db	0
  2342  01D665  00                 	db	0
  2343  01D666  00                 	db	0
  2344  01D667  00                 	db	0
  2345  01D668  00                 	db	0
  2346  01D669  00                 	db	0
  2347  01D66A  00                 	db	0
  2348  01D66B  00                 	db	0
  2349  01D66C  00                 	db	0
  2350  01D66D  00                 	db	0
  2351  01D66E  00                 	db	0
  2352  01D66F  00                 	db	0
  2353  01D670  00                 	db	0
  2354  01D671  00                 	db	0
  2355  01D672  00                 	db	0
  2356  01D673  00                 	db	0
  2357  01D674  00                 	db	0
  2358  01D675  00                 	db	0
  2359  01D676  00                 	db	0
  2360  01D677  00                 	db	0
  2361  01D678  00                 	db	0
  2362  01D679  00                 	db	0
  2363  01D67A  00                 	db	0
  2364  01D67B  00                 	db	0
  2365  01D67C  00                 	db	0
  2366  01D67D  00                 	db	0
  2367  01D67E  00                 	db	0
  2368  01D67F  00                 	db	0
  2369  01D680  00                 	db	0
  2370  01D681  00                 	db	0
  2371  01D682  00                 	db	0
  2372  01D683  00                 	db	0
  2373  01D684  00                 	db	0
  2374  01D685  00                 	db	0
  2375  01D686  00                 	db	0
  2376  01D687  00                 	db	0
  2377  01D688  00                 	db	0
  2378  01D689  00                 	db	0
  2379  01D68A  00                 	db	0
  2380  01D68B  00                 	db	0
  2381  01D68C  00                 	db	0
  2382  01D68D  00                 	db	0
  2383  01D68E  00                 	db	0
  2384  01D68F  00                 	db	0
  2385  01D690  00                 	db	0
  2386  01D691  00                 	db	0
  2387  01D692  00                 	db	0
  2388  01D693  00                 	db	0
  2389  01D694  00                 	db	0
  2390  01D695  00                 	db	0
  2391  01D696  00                 	db	0
  2392  01D697  00                 	db	0
  2393  01D698  00                 	db	0
  2394  01D699  00                 	db	0
  2395  01D69A  00                 	db	0
  2396  01D69B  00                 	db	0
  2397  01D69C  00                 	db	0
  2398  01D69D  00                 	db	0
  2399  01D69E  00                 	db	0
  2400  01D69F  00                 	db	0
  2401  01D6A0  00                 	db	0
  2402  01D6A1  00                 	db	0
  2403  01D6A2  00                 	db	0
  2404  01D6A3  00                 	db	0
  2405  01D6A4  00                 	db	0
  2406  01D6A5  00                 	db	0
  2407  01D6A6  00                 	db	0
  2408  01D6A7  00                 	db	0
  2409  01D6A8  00                 	db	0
  2410  01D6A9  00                 	db	0
  2411  01D6AA  00                 	db	0
  2412  01D6AB  00                 	db	0
  2413  01D6AC  00                 	db	0
  2414  01D6AD  00                 	db	0
  2415  01D6AE  00                 	db	0
  2416  01D6AF  00                 	db	0
  2417  01D6B0  00                 	db	0
  2418  01D6B1  00                 	db	0
  2419  01D6B2  00                 	db	0
  2420  01D6B3  00                 	db	0
  2421  01D6B4  00                 	db	0
  2422  01D6B5  00                 	db	0
  2423  01D6B6  00                 	db	0
  2424  01D6B7  00                 	db	0
  2425  01D6B8  00                 	db	0
  2426  01D6B9  00                 	db	0
  2427  01D6BA  00                 	db	0
  2428  01D6BB  00                 	db	0
  2429  01D6BC  00                 	db	0
  2430  01D6BD  00                 	db	0
  2431  01D6BE  00                 	db	0
  2432  01D6BF  00                 	db	0
  2433  01D6C0  00                 	db	0
  2434  01D6C1  00                 	db	0
  2435  01D6C2  00                 	db	0
  2436  01D6C3  00                 	db	0
  2437  01D6C4  00                 	db	0
  2438  01D6C5  00                 	db	0
  2439  01D6C6  00                 	db	0
  2440  01D6C7  00                 	db	0
  2441  01D6C8  00                 	db	0
  2442  01D6C9  00                 	db	0
  2443  01D6CA  00                 	db	0
  2444  01D6CB  00                 	db	0
  2445  01D6CC  00                 	db	0
  2446  01D6CD  00                 	db	0
  2447  01D6CE  00                 	db	0
  2448  01D6CF  00                 	db	0
  2449  01D6D0  00                 	db	0
  2450  01D6D1  00                 	db	0
  2451  01D6D2  00                 	db	0
  2452  01D6D3  00                 	db	0
  2453  01D6D4  00                 	db	0
  2454  01D6D5  00                 	db	0
  2455  01D6D6  00                 	db	0
  2456  01D6D7  00                 	db	0
  2457  01D6D8  00                 	db	0
  2458  01D6D9  00                 	db	0
  2459  01D6DA  00                 	db	0
  2460  01D6DB  00                 	db	0
  2461  01D6DC  00                 	db	0
  2462  01D6DD  00                 	db	0
  2463  01D6DE  00                 	db	0
  2464  01D6DF  00                 	db	0
  2465  01D6E0  00                 	db	0
  2466  01D6E1  00                 	db	0
  2467  01D6E2  00                 	db	0
  2468  01D6E3  00                 	db	0
  2469  01D6E4  00                 	db	0
  2470  01D6E5  00                 	db	0
  2471  01D6E6  00                 	db	0
  2472  01D6E7  00                 	db	0
  2473  01D6E8  00                 	db	0
  2474  01D6E9  00                 	db	0
  2475  01D6EA  00                 	db	0
  2476  01D6EB  00                 	db	0
  2477  01D6EC  00                 	db	0
  2478  01D6ED  00                 	db	0
  2479  01D6EE  00                 	db	0
  2480  01D6EF  00                 	db	0
  2481  01D6F0  00                 	db	0
  2482  01D6F1  00                 	db	0
  2483  01D6F2  00                 	db	0
  2484  01D6F3  00                 	db	0
  2485  01D6F4  00                 	db	0
  2486  01D6F5  00                 	db	0
  2487  01D6F6  00                 	db	0
  2488  01D6F7  00                 	db	0
  2489  01D6F8  00                 	db	0
  2490  01D6F9  00                 	db	0
  2491  01D6FA  00                 	db	0
  2492  01D6FB  00                 	db	0
  2493  01D6FC  00                 	db	0
  2494  01D6FD  00                 	db	0
  2495  01D6FE  00                 	db	0
  2496  01D6FF  00                 	db	0
  2497  01D700  00                 	db	0
  2498  01D701  00                 	db	0
  2499  01D702  00                 	db	0
  2500  01D703  00                 	db	0
  2501  01D704  00                 	db	0
  2502  01D705  00                 	db	0
  2503  01D706  00                 	db	0
  2504  01D707  00                 	db	0
  2505  01D708  00                 	db	0
  2506  01D709  00                 	db	0
  2507  01D70A  00                 	db	0
  2508  01D70B  00                 	db	0
  2509  01D70C  00                 	db	0
  2510  01D70D  00                 	db	0
  2511  01D70E  00                 	db	0
  2512  01D70F  00                 	db	0
  2513  01D710  00                 	db	0
  2514  01D711  00                 	db	0
  2515  01D712  00                 	db	0
  2516  01D713  00                 	db	0
  2517  01D714  00                 	db	0
  2518  01D715  00                 	db	0
  2519  01D716  00                 	db	0
  2520  01D717  00                 	db	0
  2521  01D718  00                 	db	0
  2522  01D719  00                 	db	0
  2523  01D71A  00                 	db	0
  2524  01D71B  00                 	db	0
  2525  01D71C  00                 	db	0
  2526  01D71D  00                 	db	0
  2527  01D71E  00                 	db	0
  2528  01D71F  00                 	db	0
  2529  01D720  00                 	db	0
  2530  01D721  00                 	db	0
  2531  01D722  00                 	db	0
  2532  01D723  00                 	db	0
  2533  01D724  00                 	db	0
  2534  01D725  00                 	db	0
  2535  01D726  00                 	db	0
  2536  01D727  00                 	db	0
  2537  01D728  00                 	db	0
  2538  01D729  00                 	db	0
  2539  01D72A  00                 	db	0
  2540  01D72B  00                 	db	0
  2541  01D72C  00                 	db	0
  2542  01D72D  00                 	db	0
  2543  01D72E  00                 	db	0
  2544  01D72F  00                 	db	0
  2545  01D730  00                 	db	0
  2546  01D731  00                 	db	0
  2547  01D732  00                 	db	0
  2548  01D733  00                 	db	0
  2549  01D734  00                 	db	0
  2550  01D735  00                 	db	0
  2551  01D736  00                 	db	0
  2552  01D737  00                 	db	0
  2553  01D738  00                 	db	0
  2554  01D739  00                 	db	0
  2555  01D73A  00                 	db	0
  2556  01D73B  00                 	db	0
  2557  01D73C  00                 	db	0
  2558  01D73D  00                 	db	0
  2559  01D73E  00                 	db	0
  2560  01D73F  00                 	db	0
  2561  01D740  00                 	db	0
  2562  01D741  00                 	db	0
  2563  01D742  00                 	db	0
  2564  01D743  00                 	db	0
  2565  01D744  00                 	db	0
  2566  01D745  00                 	db	0
  2567  01D746  00                 	db	0
  2568  01D747  00                 	db	0
  2569  01D748  00                 	db	0
  2570  01D749  00                 	db	0
  2571  01D74A  00                 	db	0
  2572  01D74B  00                 	db	0
  2573  01D74C  00                 	db	0
  2574  01D74D  00                 	db	0
  2575  01D74E  00                 	db	0
  2576  01D74F  00                 	db	0
  2577  01D750  00                 	db	0
  2578  01D751  00                 	db	0
  2579  01D752  00                 	db	0
  2580  01D753  00                 	db	0
  2581  01D754  00                 	db	0
  2582  01D755  00                 	db	0
  2583  01D756  00                 	db	0
  2584  01D757  00                 	db	0
  2585  01D758  00                 	db	0
  2586  01D759  00                 	db	0
  2587  01D75A  00                 	db	0
  2588  01D75B  00                 	db	0
  2589  01D75C  00                 	db	0
  2590  01D75D  00                 	db	0
  2591  01D75E  00                 	db	0
  2592  01D75F  00                 	db	0
  2593  01D760  00                 	db	0
  2594  01D761  00                 	db	0
  2595  01D762  00                 	db	0
  2596  01D763  00                 	db	0
  2597  01D764  00                 	db	0
  2598  01D765  00                 	db	0
  2599  01D766  00                 	db	0
  2600  01D767  00                 	db	0
  2601  01D768  00                 	db	0
  2602  01D769  00                 	db	0
  2603  01D76A  00                 	db	0
  2604  01D76B  00                 	db	0
  2605  01D76C  00                 	db	0
  2606  01D76D  00                 	db	0
  2607  01D76E  00                 	db	0
  2608  01D76F  00                 	db	0
  2609  01D770  00                 	db	0
  2610  01D771  00                 	db	0
  2611  01D772  00                 	db	0
  2612  01D773  00                 	db	0
  2613  01D774  00                 	db	0
  2614  01D775  00                 	db	0
  2615  01D776  00                 	db	0
  2616  01D777  00                 	db	0
  2617  01D778  00                 	db	0
  2618  01D779  00                 	db	0
  2619  01D77A  00                 	db	0
  2620  01D77B  00                 	db	0
  2621  01D77C  00                 	db	0
  2622  01D77D  00                 	db	0
  2623  01D77E  00                 	db	0
  2624  01D77F  00                 	db	0
  2625  01D780  00                 	db	0
  2626  01D781  00                 	db	0
  2627  01D782  00                 	db	0
  2628  01D783  00                 	db	0
  2629  01D784  00                 	db	0
  2630  01D785  00                 	db	0
  2631  01D786  00                 	db	0
  2632  01D787  00                 	db	0
  2633  01D788  00                 	db	0
  2634  01D789  00                 	db	0
  2635  01D78A  00                 	db	0
  2636  01D78B  00                 	db	0
  2637  01D78C  00                 	db	0
  2638  01D78D  00                 	db	0
  2639  01D78E  00                 	db	0
  2640  01D78F  00                 	db	0
  2641  01D790  00                 	db	0
  2642  01D791  00                 	db	0
  2643  01D792  00                 	db	0
  2644  01D793  00                 	db	0
  2645  01D794  00                 	db	0
  2646  01D795  00                 	db	0
  2647  01D796  00                 	db	0
  2648  01D797  00                 	db	0
  2649  01D798  00                 	db	0
  2650  01D799  00                 	db	0
  2651  01D79A  00                 	db	0
  2652  01D79B  00                 	db	0
  2653  01D79C  00                 	db	0
  2654  01D79D  00                 	db	0
  2655  01D79E  00                 	db	0
  2656  01D79F  00                 	db	0
  2657  01D7A0  00                 	db	0
  2658  01D7A1  00                 	db	0
  2659  01D7A2  00                 	db	0
  2660  01D7A3  00                 	db	0
  2661  01D7A4  00                 	db	0
  2662  01D7A5  00                 	db	0
  2663  01D7A6  00                 	db	0
  2664  01D7A7  00                 	db	0
  2665  01D7A8  00                 	db	0
  2666  01D7A9  00                 	db	0
  2667  01D7AA  00                 	db	0
  2668  01D7AB  00                 	db	0
  2669  01D7AC  00                 	db	0
  2670  01D7AD  00                 	db	0
  2671  01D7AE  00                 	db	0
  2672  01D7AF  00                 	db	0
  2673  01D7B0  00                 	db	0
  2674  01D7B1  00                 	db	0
  2675  01D7B2  00                 	db	0
  2676  01D7B3  00                 	db	0
  2677  01D7B4  00                 	db	0
  2678  01D7B5  00                 	db	0
  2679  01D7B6  00                 	db	0
  2680  01D7B7  00                 	db	0
  2681  01D7B8  00                 	db	0
  2682  01D7B9  00                 	db	0
  2683  01D7BA  00                 	db	0
  2684  01D7BB  00                 	db	0
  2685  01D7BC  00                 	db	0
  2686  01D7BD  00                 	db	0
  2687  01D7BE  00                 	db	0
  2688  01D7BF  00                 	db	0
  2689  01D7C0  00                 	db	0
  2690  01D7C1  00                 	db	0
  2691  01D7C2  00                 	db	0
  2692  01D7C3  00                 	db	0
  2693  01D7C4  00                 	db	0
  2694  01D7C5  00                 	db	0
  2695  01D7C6  00                 	db	0
  2696  01D7C7  00                 	db	0
  2697  01D7C8  00                 	db	0
  2698  01D7C9  00                 	db	0
  2699  01D7CA  00                 	db	0
  2700  01D7CB  00                 	db	0
  2701  01D7CC  00                 	db	0
  2702  01D7CD  00                 	db	0
  2703  01D7CE  00                 	db	0
  2704  01D7CF  00                 	db	0
  2705  01D7D0  00                 	db	0
  2706  01D7D1  00                 	db	0
  2707  01D7D2  00                 	db	0
  2708  01D7D3  00                 	db	0
  2709  01D7D4  00                 	db	0
  2710  01D7D5  00                 	db	0
  2711  01D7D6  00                 	db	0
  2712  01D7D7  00                 	db	0
  2713  01D7D8  00                 	db	0
  2714  01D7D9  00                 	db	0
  2715  01D7DA  00                 	db	0
  2716  01D7DB  00                 	db	0
  2717  01D7DC  00                 	db	0
  2718  01D7DD  00                 	db	0
  2719  01D7DE  00                 	db	0
  2720  01D7DF  00                 	db	0
  2721  01D7E0  00                 	db	0
  2722  01D7E1  00                 	db	0
  2723  01D7E2  00                 	db	0
  2724  01D7E3  00                 	db	0
  2725  01D7E4  00                 	db	0
  2726  01D7E5  00                 	db	0
  2727  01D7E6  00                 	db	0
  2728  01D7E7  00                 	db	0
  2729  01D7E8  00                 	db	0
  2730  01D7E9  00                 	db	0
  2731  01D7EA  00                 	db	0
  2732  01D7EB  00                 	db	0
  2733  01D7EC  00                 	db	0
  2734  01D7ED  00                 	db	0
  2735  01D7EE  00                 	db	0
  2736  01D7EF  00                 	db	0
  2737  01D7F0  00                 	db	0
  2738  01D7F1  00                 	db	0
  2739  01D7F2  00                 	db	0
  2740  01D7F3  00                 	db	0
  2741  01D7F4  00                 	db	0
  2742  01D7F5  00                 	db	0
  2743  01D7F6  00                 	db	0
  2744  01D7F7  00                 	db	0
  2745  01D7F8  00                 	db	0
  2746  01D7F9  00                 	db	0
  2747  01D7FA  00                 	db	0
  2748  01D7FB  00                 	db	0
  2749  01D7FC  00                 	db	0
  2750  01D7FD  00                 	db	0
  2751  01D7FE  00                 	db	0
  2752  01D7FF  00                 	db	0
  2753  01D800  00                 	db	0
  2754  01D801  00                 	db	0
  2755  01D802  00                 	db	0
  2756  01D803  00                 	db	0
  2757  01D804  00                 	db	0
  2758  01D805  00                 	db	0
  2759  01D806  00                 	db	0
  2760  01D807  00                 	db	0
  2761  01D808  00                 	db	0
  2762  01D809  00                 	db	0
  2763  01D80A  00                 	db	0
  2764  01D80B  00                 	db	0
  2765  01D80C  00                 	db	0
  2766  01D80D  00                 	db	0
  2767  01D80E  00                 	db	0
  2768  01D80F  00                 	db	0
  2769  01D810  00                 	db	0
  2770  01D811  00                 	db	0
  2771  01D812  00                 	db	0
  2772  01D813  00                 	db	0
  2773  01D814  00                 	db	0
  2774  01D815  00                 	db	0
  2775  01D816  00                 	db	0
  2776  01D817  00                 	db	0
  2777  01D818  00                 	db	0
  2778  01D819  00                 	db	0
  2779  01D81A  00                 	db	0
  2780  01D81B  00                 	db	0
  2781  01D81C  00                 	db	0
  2782  01D81D  00                 	db	0
  2783  01D81E  00                 	db	0
  2784  01D81F  00                 	db	0
  2785  01D820  00                 	db	0
  2786  01D821  00                 	db	0
  2787  01D822  00                 	db	0
  2788  01D823  00                 	db	0
  2789  01D824  00                 	db	0
  2790  01D825  00                 	db	0
  2791  01D826  00                 	db	0
  2792  01D827  00                 	db	0
  2793  01D828  00                 	db	0
  2794  01D829  00                 	db	0
  2795  01D82A  00                 	db	0
  2796  01D82B  00                 	db	0
  2797  01D82C  00                 	db	0
  2798  01D82D  00                 	db	0
  2799  01D82E  00                 	db	0
  2800  01D82F  00                 	db	0
  2801  01D830  00                 	db	0
  2802  01D831  00                 	db	0
  2803  01D832  00                 	db	0
  2804  01D833  00                 	db	0
  2805  01D834  00                 	db	0
  2806  01D835  00                 	db	0
  2807  01D836  00                 	db	0
  2808  01D837  00                 	db	0
  2809  01D838  00                 	db	0
  2810  01D839  00                 	db	0
  2811  01D83A  00                 	db	0
  2812  01D83B  00                 	db	0
  2813  01D83C  00                 	db	0
  2814  01D83D  00                 	db	0
  2815  01D83E  00                 	db	0
  2816  01D83F  00                 	db	0
  2817  01D840  00                 	db	0
  2818  01D841  00                 	db	0
  2819  01D842  00                 	db	0
  2820  01D843  00                 	db	0
  2821  01D844  00                 	db	0
  2822  01D845  00                 	db	0
  2823  01D846  00                 	db	0
  2824  01D847  00                 	db	0
  2825  01D848  00                 	db	0
  2826  01D849  00                 	db	0
  2827  01D84A  00                 	db	0
  2828  01D84B  00                 	db	0
  2829  01D84C  00                 	db	0
  2830  01D84D  00                 	db	0
  2831  01D84E  00                 	db	0
  2832  01D84F  00                 	db	0
  2833  01D850  00                 	db	0
  2834  01D851  00                 	db	0
  2835  01D852  00                 	db	0
  2836  01D853  00                 	db	0
  2837  01D854  00                 	db	0
  2838  01D855  00                 	db	0
  2839  01D856  00                 	db	0
  2840  01D857  00                 	db	0
  2841  01D858  00                 	db	0
  2842  01D859  00                 	db	0
  2843  01D85A  00                 	db	0
  2844  01D85B  00                 	db	0
  2845  01D85C  00                 	db	0
  2846  01D85D  00                 	db	0
  2847  01D85E  00                 	db	0
  2848  01D85F  00                 	db	0
  2849  01D860  00                 	db	0
  2850  01D861  00                 	db	0
  2851  01D862  00                 	db	0
  2852  01D863  00                 	db	0
  2853  01D864  00                 	db	0
  2854  01D865  00                 	db	0
  2855  01D866  00                 	db	0
  2856  01D867  00                 	db	0
  2857  01D868  00                 	db	0
  2858  01D869  00                 	db	0
  2859  01D86A  00                 	db	0
  2860  01D86B  00                 	db	0
  2861  01D86C  00                 	db	0
  2862  01D86D  00                 	db	0
  2863  01D86E  00                 	db	0
  2864  01D86F  00                 	db	0
  2865  01D870  00                 	db	0
  2866  01D871  00                 	db	0
  2867  01D872  00                 	db	0
  2868  01D873  00                 	db	0
  2869  01D874  00                 	db	0
  2870  01D875  00                 	db	0
  2871  01D876  00                 	db	0
  2872  01D877  00                 	db	0
  2873  01D878  00                 	db	0
  2874  01D879  00                 	db	0
  2875  01D87A  00                 	db	0
  2876  01D87B  00                 	db	0
  2877  01D87C  00                 	db	0
  2878  01D87D  00                 	db	0
  2879  01D87E  00                 	db	0
  2880  01D87F  00                 	db	0
  2881  01D880  00                 	db	0
  2882  01D881  00                 	db	0
  2883  01D882  00                 	db	0
  2884  01D883  00                 	db	0
  2885  01D884  00                 	db	0
  2886  01D885  00                 	db	0
  2887  01D886  00                 	db	0
  2888  01D887  00                 	db	0
  2889  01D888  00                 	db	0
  2890  01D889  00                 	db	0
  2891  01D88A  00                 	db	0
  2892  01D88B  00                 	db	0
  2893  01D88C  00                 	db	0
  2894  01D88D  00                 	db	0
  2895  01D88E  00                 	db	0
  2896  01D88F  00                 	db	0
  2897  01D890  00                 	db	0
  2898  01D891  00                 	db	0
  2899  01D892  00                 	db	0
  2900  01D893  00                 	db	0
  2901  01D894  00                 	db	0
  2902  01D895  00                 	db	0
  2903  01D896  00                 	db	0
  2904  01D897  00                 	db	0
  2905  01D898  00                 	db	0
  2906  01D899  00                 	db	0
  2907  01D89A  00                 	db	0
  2908  01D89B  00                 	db	0
  2909  01D89C  00                 	db	0
  2910  01D89D  00                 	db	0
  2911  01D89E  00                 	db	0
  2912  01D89F  00                 	db	0
  2913  01D8A0  00                 	db	0
  2914  01D8A1  00                 	db	0
  2915  01D8A2  00                 	db	0
  2916  01D8A3  00                 	db	0
  2917  01D8A4  00                 	db	0
  2918  01D8A5  00                 	db	0
  2919  01D8A6  00                 	db	0
  2920  01D8A7  00                 	db	0
  2921  01D8A8  00                 	db	0
  2922  01D8A9  00                 	db	0
  2923  01D8AA  00                 	db	0
  2924  01D8AB  00                 	db	0
  2925  01D8AC  00                 	db	0
  2926  01D8AD  00                 	db	0
  2927  01D8AE  00                 	db	0
  2928  01D8AF  00                 	db	0
  2929  01D8B0  00                 	db	0
  2930  01D8B1  00                 	db	0
  2931  01D8B2  00                 	db	0
  2932  01D8B3  00                 	db	0
  2933  01D8B4  00                 	db	0
  2934  01D8B5  00                 	db	0
  2935  01D8B6  00                 	db	0
  2936  01D8B7  00                 	db	0
  2937  01D8B8  00                 	db	0
  2938  01D8B9  00                 	db	0
  2939  01D8BA  00                 	db	0
  2940  01D8BB  00                 	db	0
  2941  01D8BC  00                 	db	0
  2942  01D8BD  00                 	db	0
  2943  01D8BE  00                 	db	0
  2944  01D8BF  00                 	db	0
  2945  01D8C0  00                 	db	0
  2946  01D8C1  00                 	db	0
  2947  01D8C2  00                 	db	0
  2948  01D8C3  00                 	db	0
  2949  01D8C4  00                 	db	0
  2950  01D8C5  00                 	db	0
  2951  01D8C6  00                 	db	0
  2952  01D8C7  00                 	db	0
  2953  01D8C8  00                 	db	0
  2954  01D8C9  00                 	db	0
  2955  01D8CA  00                 	db	0
  2956  01D8CB  00                 	db	0
  2957  01D8CC  00                 	db	0
  2958  01D8CD  00                 	db	0
  2959  01D8CE  00                 	db	0
  2960  01D8CF  00                 	db	0
  2961  01D8D0  00                 	db	0
  2962  01D8D1  00                 	db	0
  2963  01D8D2  00                 	db	0
  2964  01D8D3  00                 	db	0
  2965  01D8D4  00                 	db	0
  2966  01D8D5  00                 	db	0
  2967  01D8D6  00                 	db	0
  2968  01D8D7  00                 	db	0
  2969  01D8D8  00                 	db	0
  2970  01D8D9  00                 	db	0
  2971  01D8DA  00                 	db	0
  2972  01D8DB  00                 	db	0
  2973  01D8DC  00                 	db	0
  2974  01D8DD  00                 	db	0
  2975  01D8DE  00                 	db	0
  2976  01D8DF  00                 	db	0
  2977  01D8E0  00                 	db	0
  2978  01D8E1  00                 	db	0
  2979  01D8E2  00                 	db	0
  2980  01D8E3  00                 	db	0
  2981  01D8E4  00                 	db	0
  2982  01D8E5  00                 	db	0
  2983  01D8E6  00                 	db	0
  2984  01D8E7  00                 	db	0
  2985  01D8E8  00                 	db	0
  2986  01D8E9  00                 	db	0
  2987  01D8EA  00                 	db	0
  2988  01D8EB  00                 	db	0
  2989  01D8EC  00                 	db	0
  2990  01D8ED  00                 	db	0
  2991  01D8EE  00                 	db	0
  2992  01D8EF  00                 	db	0
  2993  01D8F0  00                 	db	0
  2994  01D8F1  00                 	db	0
  2995  01D8F2  00                 	db	0
  2996  01D8F3  00                 	db	0
  2997  01D8F4  00                 	db	0
  2998  01D8F5  00                 	db	0
  2999  01D8F6  00                 	db	0
  3000  01D8F7  00                 	db	0
  3001  01D8F8  00                 	db	0
  3002  01D8F9  00                 	db	0
  3003  01D8FA  00                 	db	0
  3004  01D8FB  00                 	db	0
  3005  01D8FC  00                 	db	0
  3006  01D8FD  00                 	db	0
  3007  01D8FE  00                 	db	0
  3008  01D8FF  00                 	db	0
  3009  01D900  00                 	db	0
  3010  01D901  00                 	db	0
  3011  01D902  00                 	db	0
  3012  01D903  00                 	db	0
  3013  01D904  00                 	db	0
  3014  01D905  00                 	db	0
  3015  01D906  00                 	db	0
  3016  01D907  00                 	db	0
  3017  01D908  00                 	db	0
  3018  01D909  00                 	db	0
  3019  01D90A  00                 	db	0
  3020  01D90B  00                 	db	0
  3021  01D90C  00                 	db	0
  3022  01D90D  00                 	db	0
  3023  01D90E  00                 	db	0
  3024  01D90F  00                 	db	0
  3025  01D910  00                 	db	0
  3026  01D911  00                 	db	0
  3027  01D912  00                 	db	0
  3028  01D913  00                 	db	0
  3029  01D914  00                 	db	0
  3030  01D915  00                 	db	0
  3031  01D916  00                 	db	0
  3032  01D917  00                 	db	0
  3033  01D918  00                 	db	0
  3034  01D919  00                 	db	0
  3035  01D91A  00                 	db	0
  3036  01D91B  00                 	db	0
  3037  01D91C  00                 	db	0
  3038  01D91D  00                 	db	0
  3039  01D91E  00                 	db	0
  3040  01D91F  00                 	db	0
  3041  01D920  00                 	db	0
  3042  01D921  00                 	db	0
  3043  01D922  00                 	db	0
  3044  01D923  00                 	db	0
  3045  01D924  00                 	db	0
  3046  01D925  00                 	db	0
  3047  01D926  00                 	db	0
  3048  01D927  00                 	db	0
  3049  01D928  00                 	db	0
  3050  01D929  00                 	db	0
  3051  01D92A  00                 	db	0
  3052  01D92B  00                 	db	0
  3053  01D92C  00                 	db	0
  3054  01D92D  00                 	db	0
  3055  01D92E  00                 	db	0
  3056  01D92F  00                 	db	0
  3057  01D930  00                 	db	0
  3058  01D931  00                 	db	0
  3059  01D932  00                 	db	0
  3060  01D933  00                 	db	0
  3061  01D934  00                 	db	0
  3062  01D935  00                 	db	0
  3063  01D936  00                 	db	0
  3064  01D937  00                 	db	0
  3065  01D938  00                 	db	0
  3066  01D939  00                 	db	0
  3067  01D93A  00                 	db	0
  3068  01D93B  00                 	db	0
  3069  01D93C  00                 	db	0
  3070  01D93D  00                 	db	0
  3071  01D93E  00                 	db	0
  3072  01D93F  00                 	db	0
  3073  01D940  00                 	db	0
  3074  01D941  00                 	db	0
  3075  01D942  00                 	db	0
  3076  01D943  00                 	db	0
  3077  01D944  00                 	db	0
  3078  01D945  00                 	db	0
  3079  01D946  00                 	db	0
  3080  01D947  00                 	db	0
  3081  01D948  00                 	db	0
  3082  01D949  00                 	db	0
  3083  01D94A  00                 	db	0
  3084  01D94B  00                 	db	0
  3085  01D94C  00                 	db	0
  3086  01D94D  00                 	db	0
  3087  01D94E  00                 	db	0
  3088  01D94F  00                 	db	0
  3089  01D950  00                 	db	0
  3090  01D951  00                 	db	0
  3091  01D952  00                 	db	0
  3092  01D953  00                 	db	0
  3093  01D954  00                 	db	0
  3094  01D955  00                 	db	0
  3095  01D956  00                 	db	0
  3096  01D957  00                 	db	0
  3097  01D958  00                 	db	0
  3098  01D959  00                 	db	0
  3099  01D95A  00                 	db	0
  3100  01D95B  00                 	db	0
  3101  01D95C  00                 	db	0
  3102  01D95D  00                 	db	0
  3103  01D95E  00                 	db	0
  3104  01D95F  00                 	db	0
  3105  01D960  00                 	db	0
  3106  01D961  00                 	db	0
  3107  01D962  00                 	db	0
  3108  01D963  00                 	db	0
  3109  01D964  00                 	db	0
  3110  01D965  00                 	db	0
  3111  01D966  00                 	db	0
  3112  01D967  00                 	db	0
  3113  01D968  00                 	db	0
  3114  01D969  00                 	db	0
  3115  01D96A  00                 	db	0
  3116  01D96B  00                 	db	0
  3117  01D96C  00                 	db	0
  3118  01D96D  00                 	db	0
  3119  01D96E  00                 	db	0
  3120  01D96F  00                 	db	0
  3121  01D970  00                 	db	0
  3122  01D971  00                 	db	0
  3123  01D972  00                 	db	0
  3124  01D973  00                 	db	0
  3125  01D974  00                 	db	0
  3126  01D975  00                 	db	0
  3127  01D976  00                 	db	0
  3128  01D977  00                 	db	0
  3129  01D978  00                 	db	0
  3130  01D979  00                 	db	0
  3131  01D97A  00                 	db	0
  3132  01D97B  00                 	db	0
  3133  01D97C  00                 	db	0
  3134  01D97D  00                 	db	0
  3135  01D97E  00                 	db	0
  3136  01D97F  00                 	db	0
  3137  01D980  00                 	db	0
  3138  01D981  00                 	db	0
  3139  01D982  00                 	db	0
  3140  01D983  00                 	db	0
  3141  01D984  00                 	db	0
  3142  01D985  00                 	db	0
  3143  01D986  00                 	db	0
  3144  01D987  00                 	db	0
  3145  01D988  00                 	db	0
  3146  01D989  00                 	db	0
  3147  01D98A  00                 	db	0
  3148  01D98B  00                 	db	0
  3149  01D98C  00                 	db	0
  3150  01D98D  00                 	db	0
  3151  01D98E  00                 	db	0
  3152  01D98F  00                 	db	0
  3153  01D990  00                 	db	0
  3154  01D991  00                 	db	0
  3155  01D992  00                 	db	0
  3156  01D993  00                 	db	0
  3157  01D994  00                 	db	0
  3158  01D995  00                 	db	0
  3159  01D996  00                 	db	0
  3160  01D997  00                 	db	0
  3161  01D998  00                 	db	0
  3162  01D999  00                 	db	0
  3163  01D99A  00                 	db	0
  3164  01D99B  00                 	db	0
  3165  01D99C  00                 	db	0
  3166  01D99D  00                 	db	0
  3167  01D99E  00                 	db	0
  3168  01D99F  00                 	db	0
  3169  01D9A0  00                 	db	0
  3170  01D9A1  00                 	db	0
  3171  01D9A2  00                 	db	0
  3172  01D9A3  00                 	db	0
  3173  01D9A4  00                 	db	0
  3174  01D9A5  00                 	db	0
  3175  01D9A6  00                 	db	0
  3176  01D9A7  00                 	db	0
  3177  01D9A8  00                 	db	0
  3178  01D9A9  00                 	db	0
  3179  01D9AA  00                 	db	0
  3180  01D9AB  00                 	db	0
  3181  01D9AC  00                 	db	0
  3182  01D9AD  00                 	db	0
  3183  01D9AE  00                 	db	0
  3184  01D9AF  00                 	db	0
  3185  01D9B0  00                 	db	0
  3186  01D9B1  00                 	db	0
  3187  01D9B2  00                 	db	0
  3188  01D9B3  00                 	db	0
  3189  01D9B4  00                 	db	0
  3190  01D9B5  00                 	db	0
  3191  01D9B6  00                 	db	0
  3192  01D9B7  00                 	db	0
  3193  01D9B8  00                 	db	0
  3194  01D9B9  00                 	db	0
  3195  01D9BA  00                 	db	0
  3196  01D9BB  00                 	db	0
  3197  01D9BC  00                 	db	0
  3198  01D9BD  00                 	db	0
  3199  01D9BE  00                 	db	0
  3200  01D9BF  00                 	db	0
  3201  01D9C0  00                 	db	0
  3202  01D9C1  00                 	db	0
  3203  01D9C2  00                 	db	0
  3204  01D9C3  00                 	db	0
  3205  01D9C4  00                 	db	0
  3206  01D9C5  00                 	db	0
  3207  01D9C6  00                 	db	0
  3208  01D9C7  00                 	db	0
  3209  01D9C8  00                 	db	0
  3210  01D9C9  00                 	db	0
  3211  01D9CA  00                 	db	0
  3212  01D9CB  00                 	db	0
  3213  01D9CC  00                 	db	0
  3214  01D9CD  00                 	db	0
  3215  01D9CE  00                 	db	0
  3216  01D9CF  00                 	db	0
  3217  01D9D0  00                 	db	0
  3218  01D9D1  00                 	db	0
  3219  01D9D2  00                 	db	0
  3220  01D9D3  00                 	db	0
  3221  01D9D4  00                 	db	0
  3222  01D9D5  00                 	db	0
  3223  01D9D6  00                 	db	0
  3224  01D9D7  00                 	db	0
  3225  01D9D8  00                 	db	0
  3226  01D9D9  00                 	db	0
  3227  01D9DA  00                 	db	0
  3228  01D9DB  00                 	db	0
  3229  01D9DC  00                 	db	0
  3230  01D9DD  00                 	db	0
  3231  01D9DE  00                 	db	0
  3232  01D9DF  00                 	db	0
  3233  01D9E0  00                 	db	0
  3234  01D9E1  00                 	db	0
  3235  01D9E2  00                 	db	0
  3236  01D9E3  00                 	db	0
  3237  01D9E4  00                 	db	0
  3238  01D9E5  00                 	db	0
  3239  01D9E6  00                 	db	0
  3240  01D9E7  00                 	db	0
  3241  01D9E8  00                 	db	0
  3242  01D9E9  00                 	db	0
  3243  01D9EA  00                 	db	0
  3244  01D9EB  00                 	db	0
  3245  01D9EC  00                 	db	0
  3246  01D9ED  00                 	db	0
  3247  01D9EE  00                 	db	0
  3248  01D9EF  00                 	db	0
  3249  01D9F0  00                 	db	0
  3250  01D9F1  00                 	db	0
  3251  01D9F2  00                 	db	0
  3252  01D9F3  00                 	db	0
  3253  01D9F4  00                 	db	0
  3254  01D9F5  00                 	db	0
  3255  01D9F6  00                 	db	0
  3256  01D9F7  00                 	db	0
  3257  01D9F8  00                 	db	0
  3258  01D9F9  00                 	db	0
  3259  01D9FA  00                 	db	0
  3260  01D9FB  00                 	db	0
  3261  01D9FC  00                 	db	0
  3262  01D9FD  00                 	db	0
  3263  01D9FE  00                 	db	0
  3264  01D9FF  00                 	db	0
  3265  01DA00  00                 	db	0
  3266  01DA01  00                 	db	0
  3267  01DA02  00                 	db	0
  3268  01DA03  00                 	db	0
  3269  01DA04  00                 	db	0
  3270  01DA05  00                 	db	0
  3271  01DA06  00                 	db	0
  3272  01DA07  00                 	db	0
  3273  01DA08  00                 	db	0
  3274  01DA09  00                 	db	0
  3275  01DA0A  00                 	db	0
  3276  01DA0B  00                 	db	0
  3277  01DA0C  00                 	db	0
  3278  01DA0D  00                 	db	0
  3279  01DA0E  00                 	db	0
  3280  01DA0F  00                 	db	0
  3281  01DA10  00                 	db	0
  3282  01DA11  00                 	db	0
  3283  01DA12  00                 	db	0
  3284  01DA13  00                 	db	0
  3285  01DA14  00                 	db	0
  3286  01DA15  00                 	db	0
  3287  01DA16  00                 	db	0
  3288  01DA17  00                 	db	0
  3289  01DA18  00                 	db	0
  3290  01DA19  00                 	db	0
  3291  01DA1A  00                 	db	0
  3292  01DA1B  00                 	db	0
  3293  01DA1C  00                 	db	0
  3294  01DA1D  00                 	db	0
  3295  01DA1E  00                 	db	0
  3296  01DA1F  00                 	db	0
  3297  01DA20  00                 	db	0
  3298  01DA21  00                 	db	0
  3299  01DA22  00                 	db	0
  3300  01DA23  00                 	db	0
  3301  01DA24  00                 	db	0
  3302  01DA25  00                 	db	0
  3303  01DA26  00                 	db	0
  3304  01DA27  00                 	db	0
  3305  01DA28  00                 	db	0
  3306  01DA29  00                 	db	0
  3307  01DA2A  00                 	db	0
  3308  01DA2B  00                 	db	0
  3309  01DA2C  00                 	db	0
  3310  01DA2D  00                 	db	0
  3311  01DA2E  00                 	db	0
  3312  01DA2F  00                 	db	0
  3313  01DA30  00                 	db	0
  3314  01DA31  00                 	db	0
  3315  01DA32  00                 	db	0
  3316  01DA33  00                 	db	0
  3317  01DA34  00                 	db	0
  3318  01DA35  00                 	db	0
  3319  01DA36  00                 	db	0
  3320  01DA37  00                 	db	0
  3321  01DA38  00                 	db	0
  3322  01DA39  00                 	db	0
  3323  01DA3A  00                 	db	0
  3324  01DA3B  00                 	db	0
  3325  01DA3C  00                 	db	0
  3326  01DA3D  00                 	db	0
  3327  01DA3E  00                 	db	0
  3328  01DA3F  00                 	db	0
  3329  01DA40  00                 	db	0
  3330  01DA41  00                 	db	0
  3331  01DA42  00                 	db	0
  3332  01DA43  00                 	db	0
  3333  01DA44  00                 	db	0
  3334  01DA45  00                 	db	0
  3335  01DA46  00                 	db	0
  3336  01DA47  00                 	db	0
  3337  01DA48  00                 	db	0
  3338  01DA49  00                 	db	0
  3339  01DA4A  00                 	db	0
  3340  01DA4B  00                 	db	0
  3341  01DA4C  00                 	db	0
  3342  01DA4D  00                 	db	0
  3343  01DA4E  00                 	db	0
  3344  01DA4F  00                 	db	0
  3345  01DA50  00                 	db	0
  3346  01DA51  00                 	db	0
  3347  01DA52  00                 	db	0
  3348  01DA53  00                 	db	0
  3349  01DA54  00                 	db	0
  3350  01DA55  00                 	db	0
  3351  01DA56  00                 	db	0
  3352  01DA57  00                 	db	0
  3353  01DA58  00                 	db	0
  3354  01DA59  00                 	db	0
  3355  01DA5A  00                 	db	0
  3356  01DA5B  00                 	db	0
  3357  01DA5C  00                 	db	0
  3358  01DA5D  00                 	db	0
  3359  01DA5E  00                 	db	0
  3360  01DA5F  00                 	db	0
  3361  01DA60  00                 	db	0
  3362  01DA61  00                 	db	0
  3363  01DA62  00                 	db	0
  3364  01DA63  00                 	db	0
  3365  01DA64  00                 	db	0
  3366  01DA65  00                 	db	0
  3367  01DA66  00                 	db	0
  3368  01DA67  00                 	db	0
  3369  01DA68  00                 	db	0
  3370  01DA69  00                 	db	0
  3371  01DA6A  00                 	db	0
  3372  01DA6B  00                 	db	0
  3373  01DA6C  00                 	db	0
  3374  01DA6D  00                 	db	0
  3375  01DA6E  00                 	db	0
  3376  01DA6F  00                 	db	0
  3377  01DA70  00                 	db	0
  3378  01DA71  00                 	db	0
  3379  01DA72  00                 	db	0
  3380  01DA73  00                 	db	0
  3381  01DA74  00                 	db	0
  3382  01DA75  00                 	db	0
  3383  01DA76  00                 	db	0
  3384  01DA77  00                 	db	0
  3385  01DA78  00                 	db	0
  3386  01DA79  00                 	db	0
  3387  01DA7A  00                 	db	0
  3388  01DA7B  00                 	db	0
  3389  01DA7C  00                 	db	0
  3390  01DA7D  00                 	db	0
  3391  01DA7E  00                 	db	0
  3392  01DA7F  00                 	db	0
  3393  01DA80  00                 	db	0
  3394  01DA81  00                 	db	0
  3395  01DA82  00                 	db	0
  3396  01DA83  00                 	db	0
  3397  01DA84  00                 	db	0
  3398  01DA85  00                 	db	0
  3399  01DA86  00                 	db	0
  3400  01DA87  00                 	db	0
  3401  01DA88  00                 	db	0
  3402  01DA89  00                 	db	0
  3403  01DA8A  00                 	db	0
  3404  01DA8B  00                 	db	0
  3405  01DA8C  00                 	db	0
  3406  01DA8D  00                 	db	0
  3407  01DA8E  00                 	db	0
  3408  01DA8F  00                 	db	0
  3409  01DA90  00                 	db	0
  3410  01DA91  00                 	db	0
  3411  01DA92  00                 	db	0
  3412  01DA93  00                 	db	0
  3413  01DA94  00                 	db	0
  3414  01DA95  00                 	db	0
  3415  01DA96  00                 	db	0
  3416  01DA97  00                 	db	0
  3417  01DA98  00                 	db	0
  3418  01DA99  00                 	db	0
  3419  01DA9A  00                 	db	0
  3420  01DA9B  00                 	db	0
  3421  01DA9C  00                 	db	0
  3422  01DA9D  00                 	db	0
  3423  01DA9E  00                 	db	0
  3424  01DA9F  00                 	db	0
  3425  01DAA0  00                 	db	0
  3426  01DAA1  00                 	db	0
  3427  01DAA2  00                 	db	0
  3428  01DAA3  00                 	db	0
  3429  01DAA4  00                 	db	0
  3430  01DAA5  00                 	db	0
  3431  01DAA6  00                 	db	0
  3432  01DAA7  00                 	db	0
  3433  01DAA8  00                 	db	0
  3434  01DAA9  00                 	db	0
  3435  01DAAA  00                 	db	0
  3436  01DAAB  00                 	db	0
  3437  01DAAC  00                 	db	0
  3438  01DAAD  00                 	db	0
  3439  01DAAE  00                 	db	0
  3440  01DAAF  00                 	db	0
  3441  01DAB0  00                 	db	0
  3442  01DAB1  00                 	db	0
  3443  01DAB2  00                 	db	0
  3444  01DAB3  00                 	db	0
  3445  01DAB4  00                 	db	0
  3446  01DAB5  00                 	db	0
  3447  01DAB6  00                 	db	0
  3448  01DAB7  00                 	db	0
  3449  01DAB8  00                 	db	0
  3450  01DAB9  00                 	db	0
  3451  01DABA  00                 	db	0
  3452  01DABB  00                 	db	0
  3453  01DABC  00                 	db	0
  3454  01DABD  00                 	db	0
  3455  01DABE  00                 	db	0
  3456  01DABF  00                 	db	0
  3457  01DAC0  00                 	db	0
  3458  01DAC1  00                 	db	0
  3459  01DAC2  00                 	db	0
  3460  01DAC3  00                 	db	0
  3461  01DAC4  00                 	db	0
  3462  01DAC5  00                 	db	0
  3463  01DAC6  00                 	db	0
  3464  01DAC7  00                 	db	0
  3465  01DAC8  00                 	db	0
  3466  01DAC9  00                 	db	0
  3467  01DACA  00                 	db	0
  3468  01DACB  00                 	db	0
  3469  01DACC  00                 	db	0
  3470  01DACD  00                 	db	0
  3471  01DACE  00                 	db	0
  3472  01DACF  00                 	db	0
  3473  01DAD0  00                 	db	0
  3474  01DAD1  00                 	db	0
  3475  01DAD2  00                 	db	0
  3476  01DAD3  00                 	db	0
  3477  01DAD4  00                 	db	0
  3478  01DAD5  00                 	db	0
  3479  01DAD6  00                 	db	0
  3480  01DAD7  00                 	db	0
  3481  01DAD8  00                 	db	0
  3482  01DAD9  00                 	db	0
  3483  01DADA  00                 	db	0
  3484  01DADB  00                 	db	0
  3485  01DADC  00                 	db	0
  3486  01DADD  00                 	db	0
  3487  01DADE  00                 	db	0
  3488  01DADF  00                 	db	0
  3489  01DAE0  00                 	db	0
  3490  01DAE1  00                 	db	0
  3491  01DAE2  00                 	db	0
  3492  01DAE3  00                 	db	0
  3493  01DAE4  00                 	db	0
  3494  01DAE5  00                 	db	0
  3495  01DAE6  00                 	db	0
  3496  01DAE7  00                 	db	0
  3497  01DAE8  00                 	db	0
  3498  01DAE9  00                 	db	0
  3499  01DAEA  00                 	db	0
  3500  01DAEB  00                 	db	0
  3501  01DAEC  00                 	db	0
  3502  01DAED  00                 	db	0
  3503  01DAEE  00                 	db	0
  3504  01DAEF  00                 	db	0
  3505  01DAF0  00                 	db	0
  3506  01DAF1  00                 	db	0
  3507  01DAF2  00                 	db	0
  3508  01DAF3  00                 	db	0
  3509  01DAF4  00                 	db	0
  3510  01DAF5  00                 	db	0
  3511  01DAF6  00                 	db	0
  3512  01DAF7  00                 	db	0
  3513  01DAF8  00                 	db	0
  3514  01DAF9  00                 	db	0
  3515  01DAFA  00                 	db	0
  3516  01DAFB  00                 	db	0
  3517  01DAFC  00                 	db	0
  3518  01DAFD  00                 	db	0
  3519  01DAFE  00                 	db	0
  3520  01DAFF  00                 	db	0
  3521  01DB00  00                 	db	0
  3522  01DB01  00                 	db	0
  3523  01DB02  00                 	db	0
  3524  01DB03  00                 	db	0
  3525  01DB04  00                 	db	0
  3526  01DB05  00                 	db	0
  3527  01DB06  00                 	db	0
  3528  01DB07  00                 	db	0
  3529  01DB08  00                 	db	0
  3530  01DB09  00                 	db	0
  3531  01DB0A  00                 	db	0
  3532  01DB0B  00                 	db	0
  3533  01DB0C  00                 	db	0
  3534  01DB0D  00                 	db	0
  3535  01DB0E  00                 	db	0
  3536  01DB0F  00                 	db	0
  3537  01DB10  00                 	db	0
  3538  01DB11  00                 	db	0
  3539  01DB12  00                 	db	0
  3540  01DB13  00                 	db	0
  3541  01DB14  00                 	db	0
  3542  01DB15  00                 	db	0
  3543  01DB16  00                 	db	0
  3544  01DB17  00                 	db	0
  3545  01DB18  00                 	db	0
  3546  01DB19  00                 	db	0
  3547  01DB1A  00                 	db	0
  3548  01DB1B  00                 	db	0
  3549  01DB1C  00                 	db	0
  3550  01DB1D  00                 	db	0
  3551  01DB1E  00                 	db	0
  3552  01DB1F  00                 	db	0
  3553  01DB20  00                 	db	0
  3554  01DB21  00                 	db	0
  3555  01DB22  00                 	db	0
  3556  01DB23  00                 	db	0
  3557  01DB24  00                 	db	0
  3558  01DB25  00                 	db	0
  3559  01DB26  00                 	db	0
  3560  01DB27  00                 	db	0
  3561  01DB28  00                 	db	0
  3562  01DB29  00                 	db	0
  3563  01DB2A  00                 	db	0
  3564  01DB2B  00                 	db	0
  3565  01DB2C  00                 	db	0
  3566  01DB2D  00                 	db	0
  3567  01DB2E  00                 	db	0
  3568  01DB2F  00                 	db	0
  3569  01DB30  00                 	db	0
  3570  01DB31  00                 	db	0
  3571  01DB32  00                 	db	0
  3572  01DB33  00                 	db	0
  3573  01DB34  00                 	db	0
  3574  01DB35  00                 	db	0
  3575  01DB36  00                 	db	0
  3576  01DB37  00                 	db	0
  3577  01DB38  00                 	db	0
  3578  01DB39  00                 	db	0
  3579  01DB3A  00                 	db	0
  3580  01DB3B  00                 	db	0
  3581  01DB3C  00                 	db	0
  3582  01DB3D  00                 	db	0
  3583  01DB3E  00                 	db	0
  3584  01DB3F  00                 	db	0
  3585  01DB40  00                 	db	0
  3586  01DB41  00                 	db	0
  3587  01DB42  00                 	db	0
  3588  01DB43  00                 	db	0
  3589  01DB44  00                 	db	0
  3590  01DB45  00                 	db	0
  3591  01DB46  00                 	db	0
  3592  01DB47  00                 	db	0
  3593  01DB48  00                 	db	0
  3594  01DB49  00                 	db	0
  3595  01DB4A  00                 	db	0
  3596  01DB4B  00                 	db	0
  3597  01DB4C  00                 	db	0
  3598  01DB4D  00                 	db	0
  3599  01DB4E  00                 	db	0
  3600  01DB4F  00                 	db	0
  3601  01DB50  00                 	db	0
  3602  01DB51  00                 	db	0
  3603  01DB52  00                 	db	0
  3604  01DB53  00                 	db	0
  3605  01DB54  00                 	db	0
  3606  01DB55  00                 	db	0
  3607  01DB56  00                 	db	0
  3608  01DB57  00                 	db	0
  3609  01DB58  00                 	db	0
  3610  01DB59  00                 	db	0
  3611  01DB5A  00                 	db	0
  3612  01DB5B  00                 	db	0
  3613  01DB5C  00                 	db	0
  3614  01DB5D  00                 	db	0
  3615  01DB5E  00                 	db	0
  3616  01DB5F  00                 	db	0
  3617  01DB60  00                 	db	0
  3618  01DB61  00                 	db	0
  3619  01DB62  00                 	db	0
  3620  01DB63  00                 	db	0
  3621  01DB64  00                 	db	0
  3622  01DB65  00                 	db	0
  3623  01DB66  00                 	db	0
  3624  01DB67  00                 	db	0
  3625  01DB68  00                 	db	0
  3626  01DB69  00                 	db	0
  3627  01DB6A  00                 	db	0
  3628  01DB6B  00                 	db	0
  3629  01DB6C  00                 	db	0
  3630  01DB6D  00                 	db	0
  3631  01DB6E  00                 	db	0
  3632  01DB6F  00                 	db	0
  3633  01DB70  00                 	db	0
  3634  01DB71  00                 	db	0
  3635  01DB72  00                 	db	0
  3636  01DB73  00                 	db	0
  3637  01DB74  00                 	db	0
  3638  01DB75  00                 	db	0
  3639  01DB76  00                 	db	0
  3640  01DB77  00                 	db	0
  3641  01DB78  00                 	db	0
  3642  01DB79  00                 	db	0
  3643  01DB7A  00                 	db	0
  3644  01DB7B  00                 	db	0
  3645  01DB7C  00                 	db	0
  3646  01DB7D  00                 	db	0
  3647  01DB7E  00                 	db	0
  3648  01DB7F  00                 	db	0
  3649  01DB80  00                 	db	0
  3650  01DB81  00                 	db	0
  3651  01DB82  00                 	db	0
  3652  01DB83  00                 	db	0
  3653  01DB84  00                 	db	0
  3654  01DB85  00                 	db	0
  3655  01DB86  00                 	db	0
  3656  01DB87  00                 	db	0
  3657  01DB88  00                 	db	0
  3658  01DB89  00                 	db	0
  3659  01DB8A  00                 	db	0
  3660  01DB8B  00                 	db	0
  3661  01DB8C  00                 	db	0
  3662  01DB8D  00                 	db	0
  3663  01DB8E  00                 	db	0
  3664  01DB8F  00                 	db	0
  3665  01DB90  00                 	db	0
  3666  01DB91  00                 	db	0
  3667  01DB92  00                 	db	0
  3668  01DB93  00                 	db	0
  3669  01DB94  00                 	db	0
  3670  01DB95  00                 	db	0
  3671  01DB96  00                 	db	0
  3672  01DB97  00                 	db	0
  3673  01DB98  00                 	db	0
  3674  01DB99  00                 	db	0
  3675  01DB9A  00                 	db	0
  3676  01DB9B  00                 	db	0
  3677  01DB9C  00                 	db	0
  3678  01DB9D  00                 	db	0
  3679  01DB9E  00                 	db	0
  3680  01DB9F  00                 	db	0
  3681  01DBA0  00                 	db	0
  3682  01DBA1  00                 	db	0
  3683  01DBA2  00                 	db	0
  3684  01DBA3  00                 	db	0
  3685  01DBA4  00                 	db	0
  3686  01DBA5  00                 	db	0
  3687  01DBA6  00                 	db	0
  3688  01DBA7  00                 	db	0
  3689  01DBA8  00                 	db	0
  3690  01DBA9  00                 	db	0
  3691  01DBAA  00                 	db	0
  3692  01DBAB  00                 	db	0
  3693  01DBAC  00                 	db	0
  3694  01DBAD  00                 	db	0
  3695  01DBAE  00                 	db	0
  3696  01DBAF  00                 	db	0
  3697  01DBB0  00                 	db	0
  3698  01DBB1  00                 	db	0
  3699  01DBB2  00                 	db	0
  3700  01DBB3  00                 	db	0
  3701  01DBB4  00                 	db	0
  3702  01DBB5  00                 	db	0
  3703  01DBB6  00                 	db	0
  3704  01DBB7  00                 	db	0
  3705  01DBB8  00                 	db	0
  3706  01DBB9  00                 	db	0
  3707  01DBBA  00                 	db	0
  3708  01DBBB  00                 	db	0
  3709  01DBBC  00                 	db	0
  3710  01DBBD  00                 	db	0
  3711  01DBBE  00                 	db	0
  3712  01DBBF  00                 	db	0
  3713  01DBC0  00                 	db	0
  3714  01DBC1  00                 	db	0
  3715  01DBC2  00                 	db	0
  3716  01DBC3  00                 	db	0
  3717  01DBC4  00                 	db	0
  3718  01DBC5  00                 	db	0
  3719  01DBC6  00                 	db	0
  3720  01DBC7  00                 	db	0
  3721  01DBC8  00                 	db	0
  3722  01DBC9  00                 	db	0
  3723  01DBCA  00                 	db	0
  3724  01DBCB  00                 	db	0
  3725  01DBCC  00                 	db	0
  3726  01DBCD  00                 	db	0
  3727  01DBCE  00                 	db	0
  3728  01DBCF  00                 	db	0
  3729  01DBD0  00                 	db	0
  3730  01DBD1  00                 	db	0
  3731  01DBD2  00                 	db	0
  3732  01DBD3  00                 	db	0
  3733  01DBD4  00                 	db	0
  3734  01DBD5  00                 	db	0
  3735  01DBD6  00                 	db	0
  3736  01DBD7  00                 	db	0
  3737  01DBD8  00                 	db	0
  3738  01DBD9  00                 	db	0
  3739  01DBDA  00                 	db	0
  3740  01DBDB  00                 	db	0
  3741  01DBDC  00                 	db	0
  3742  01DBDD  00                 	db	0
  3743  01DBDE  00                 	db	0
  3744  01DBDF  00                 	db	0
  3745  01DBE0  00                 	db	0
  3746  01DBE1  00                 	db	0
  3747  01DBE2  00                 	db	0
  3748  01DBE3  00                 	db	0
  3749  01DBE4  00                 	db	0
  3750  01DBE5  00                 	db	0
  3751  01DBE6  00                 	db	0
  3752  01DBE7  00                 	db	0
  3753  01DBE8  00                 	db	0
  3754  01DBE9  00                 	db	0
  3755  01DBEA  00                 	db	0
  3756  01DBEB  00                 	db	0
  3757  01DBEC  00                 	db	0
  3758  01DBED  00                 	db	0
  3759  01DBEE  00                 	db	0
  3760  01DBEF  00                 	db	0
  3761  01DBF0  00                 	db	0
  3762  01DBF1  00                 	db	0
  3763  01DBF2  00                 	db	0
  3764  01DBF3  00                 	db	0
  3765  01DBF4  00                 	db	0
  3766  01DBF5  00                 	db	0
  3767  01DBF6  00                 	db	0
  3768  01DBF7  00                 	db	0
  3769  01DBF8  00                 	db	0
  3770  01DBF9  00                 	db	0
  3771  01DBFA  00                 	db	0
  3772  01DBFB  00                 	db	0
  3773  01DBFC  00                 	db	0
  3774  01DBFD  00                 	db	0
  3775  01DBFE  00                 	db	0
  3776  01DBFF  00                 	db	0
  3777  01DC00  00                 	db	0
  3778  01DC01  00                 	db	0
  3779  01DC02  00                 	db	0
  3780  01DC03  00                 	db	0
  3781  01DC04  00                 	db	0
  3782  01DC05  00                 	db	0
  3783  01DC06  00                 	db	0
  3784  01DC07  00                 	db	0
  3785  01DC08  00                 	db	0
  3786  01DC09  00                 	db	0
  3787  01DC0A  00                 	db	0
  3788  01DC0B  00                 	db	0
  3789  01DC0C  00                 	db	0
  3790  01DC0D  00                 	db	0
  3791  01DC0E  00                 	db	0
  3792  01DC0F  00                 	db	0
  3793  01DC10  00                 	db	0
  3794  01DC11  00                 	db	0
  3795  01DC12  00                 	db	0
  3796  01DC13  00                 	db	0
  3797  01DC14  00                 	db	0
  3798  01DC15  00                 	db	0
  3799  01DC16  00                 	db	0
  3800  01DC17  00                 	db	0
  3801  01DC18  00                 	db	0
  3802  01DC19  00                 	db	0
  3803  01DC1A  00                 	db	0
  3804  01DC1B  00                 	db	0
  3805  01DC1C  00                 	db	0
  3806  01DC1D  00                 	db	0
  3807  01DC1E  00                 	db	0
  3808  01DC1F  00                 	db	0
  3809  01DC20  00                 	db	0
  3810  01DC21  00                 	db	0
  3811  01DC22  00                 	db	0
  3812  01DC23  00                 	db	0
  3813  01DC24  00                 	db	0
  3814  01DC25  00                 	db	0
  3815  01DC26  00                 	db	0
  3816  01DC27  00                 	db	0
  3817  01DC28  00                 	db	0
  3818  01DC29  00                 	db	0
  3819  01DC2A  00                 	db	0
  3820  01DC2B  00                 	db	0
  3821  01DC2C  00                 	db	0
  3822  01DC2D  00                 	db	0
  3823  01DC2E  00                 	db	0
  3824  01DC2F  00                 	db	0
  3825  01DC30  00                 	db	0
  3826  01DC31  00                 	db	0
  3827  01DC32  00                 	db	0
  3828  01DC33  00                 	db	0
  3829  01DC34  00                 	db	0
  3830  01DC35  00                 	db	0
  3831  01DC36  00                 	db	0
  3832  01DC37  00                 	db	0
  3833  01DC38  00                 	db	0
  3834  01DC39  00                 	db	0
  3835  01DC3A  00                 	db	0
  3836  01DC3B  00                 	db	0
  3837  01DC3C  00                 	db	0
  3838  01DC3D  00                 	db	0
  3839  01DC3E  00                 	db	0
  3840  01DC3F  00                 	db	0
  3841  01DC40  00                 	db	0
  3842  01DC41  00                 	db	0
  3843  01DC42  00                 	db	0
  3844  01DC43  00                 	db	0
  3845  01DC44  00                 	db	0
  3846  01DC45  00                 	db	0
  3847  01DC46  00                 	db	0
  3848  01DC47  00                 	db	0
  3849  01DC48  00                 	db	0
  3850  01DC49  00                 	db	0
  3851  01DC4A  00                 	db	0
  3852  01DC4B  00                 	db	0
  3853  01DC4C  00                 	db	0
  3854  01DC4D  00                 	db	0
  3855  01DC4E  00                 	db	0
  3856  01DC4F  00                 	db	0
  3857  01DC50  00                 	db	0
  3858  01DC51  00                 	db	0
  3859  01DC52  00                 	db	0
  3860  01DC53  00                 	db	0
  3861  01DC54  00                 	db	0
  3862  01DC55  00                 	db	0
  3863  01DC56  00                 	db	0
  3864  01DC57  00                 	db	0
  3865  01DC58  00                 	db	0
  3866  01DC59  00                 	db	0
  3867  01DC5A  00                 	db	0
  3868  01DC5B  00                 	db	0
  3869  01DC5C  00                 	db	0
  3870  01DC5D  00                 	db	0
  3871  01DC5E  00                 	db	0
  3872  01DC5F  00                 	db	0
  3873  01DC60  00                 	db	0
  3874  01DC61  00                 	db	0
  3875  01DC62  00                 	db	0
  3876  01DC63  00                 	db	0
  3877  01DC64  00                 	db	0
  3878  01DC65  00                 	db	0
  3879  01DC66  00                 	db	0
  3880  01DC67  00                 	db	0
  3881  01DC68  00                 	db	0
  3882  01DC69  00                 	db	0
  3883  01DC6A  00                 	db	0
  3884  01DC6B  00                 	db	0
  3885  01DC6C  00                 	db	0
  3886  01DC6D  00                 	db	0
  3887  01DC6E  00                 	db	0
  3888  01DC6F  00                 	db	0
  3889  01DC70  00                 	db	0
  3890  01DC71  00                 	db	0
  3891  01DC72  00                 	db	0
  3892  01DC73  00                 	db	0
  3893  01DC74  00                 	db	0
  3894  01DC75  00                 	db	0
  3895  01DC76  00                 	db	0
  3896  01DC77  00                 	db	0
  3897  01DC78  00                 	db	0
  3898  01DC79  00                 	db	0
  3899  01DC7A  00                 	db	0
  3900  01DC7B  00                 	db	0
  3901  01DC7C  00                 	db	0
  3902  01DC7D  00                 	db	0
  3903  01DC7E  00                 	db	0
  3904  01DC7F  00                 	db	0
  3905  01DC80  00                 	db	0
  3906  01DC81  00                 	db	0
  3907  01DC82  00                 	db	0
  3908  01DC83  00                 	db	0
  3909  01DC84  00                 	db	0
  3910  01DC85  00                 	db	0
  3911  01DC86  00                 	db	0
  3912  01DC87  00                 	db	0
  3913  01DC88  00                 	db	0
  3914  01DC89  00                 	db	0
  3915  01DC8A  00                 	db	0
  3916  01DC8B  00                 	db	0
  3917  01DC8C  00                 	db	0
  3918  01DC8D  00                 	db	0
  3919  01DC8E  00                 	db	0
  3920  01DC8F  00                 	db	0
  3921  01DC90  00                 	db	0
  3922  01DC91  00                 	db	0
  3923  01DC92  00                 	db	0
  3924  01DC93  00                 	db	0
  3925  01DC94  00                 	db	0
  3926  01DC95  00                 	db	0
  3927  01DC96  00                 	db	0
  3928  01DC97  00                 	db	0
  3929  01DC98  00                 	db	0
  3930  01DC99  00                 	db	0
  3931  01DC9A  00                 	db	0
  3932  01DC9B  00                 	db	0
  3933  01DC9C  00                 	db	0
  3934  01DC9D  00                 	db	0
  3935  01DC9E  00                 	db	0
  3936  01DC9F  00                 	db	0
  3937  01DCA0  00                 	db	0
  3938  01DCA1  00                 	db	0
  3939  01DCA2  00                 	db	0
  3940  01DCA3  00                 	db	0
  3941  01DCA4  00                 	db	0
  3942  01DCA5  00                 	db	0
  3943  01DCA6  00                 	db	0
  3944  01DCA7  00                 	db	0
  3945  01DCA8  00                 	db	0
  3946  01DCA9  00                 	db	0
  3947  01DCAA  00                 	db	0
  3948  01DCAB  00                 	db	0
  3949  01DCAC  00                 	db	0
  3950  01DCAD  00                 	db	0
  3951  01DCAE  00                 	db	0
  3952  01DCAF  00                 	db	0
  3953  01DCB0  00                 	db	0
  3954  01DCB1  00                 	db	0
  3955  01DCB2  00                 	db	0
  3956  01DCB3  00                 	db	0
  3957  01DCB4  00                 	db	0
  3958  01DCB5  00                 	db	0
  3959  01DCB6  00                 	db	0
  3960  01DCB7  00                 	db	0
  3961  01DCB8  00                 	db	0
  3962  01DCB9  00                 	db	0
  3963  01DCBA  00                 	db	0
  3964  01DCBB  00                 	db	0
  3965  01DCBC  00                 	db	0
  3966  01DCBD  00                 	db	0
  3967  01DCBE  00                 	db	0
  3968  01DCBF  00                 	db	0
  3969  01DCC0  00                 	db	0
  3970  01DCC1  00                 	db	0
  3971  01DCC2  00                 	db	0
  3972  01DCC3  00                 	db	0
  3973  01DCC4  00                 	db	0
  3974  01DCC5  00                 	db	0
  3975  01DCC6  00                 	db	0
  3976  01DCC7  00                 	db	0
  3977  01DCC8  00                 	db	0
  3978  01DCC9  00                 	db	0
  3979  01DCCA  00                 	db	0
  3980  01DCCB  00                 	db	0
  3981  01DCCC  00                 	db	0
  3982  01DCCD  00                 	db	0
  3983  01DCCE  00                 	db	0
  3984  01DCCF  00                 	db	0
  3985  01DCD0  00                 	db	0
  3986  01DCD1  00                 	db	0
  3987  01DCD2  00                 	db	0
  3988  01DCD3  00                 	db	0
  3989  01DCD4  00                 	db	0
  3990  01DCD5  00                 	db	0
  3991  01DCD6  00                 	db	0
  3992  01DCD7  00                 	db	0
  3993  01DCD8  00                 	db	0
  3994  01DCD9  00                 	db	0
  3995  01DCDA  00                 	db	0
  3996  01DCDB  00                 	db	0
  3997  01DCDC  00                 	db	0
  3998  01DCDD  00                 	db	0
  3999  01DCDE  00                 	db	0
  4000  01DCDF  00                 	db	0
  4001  01DCE0  00                 	db	0
  4002  01DCE1  00                 	db	0
  4003  01DCE2  00                 	db	0
  4004  01DCE3  00                 	db	0
  4005  01DCE4  00                 	db	0
  4006  01DCE5  00                 	db	0
  4007  01DCE6  00                 	db	0
  4008  01DCE7  00                 	db	0
  4009  01DCE8  00                 	db	0
  4010  01DCE9  00                 	db	0
  4011  01DCEA  00                 	db	0
  4012  01DCEB  00                 	db	0
  4013  01DCEC  00                 	db	0
  4014  01DCED  00                 	db	0
  4015  01DCEE  00                 	db	0
  4016  01DCEF  00                 	db	0
  4017  01DCF0  00                 	db	0
  4018  01DCF1  00                 	db	0
  4019  01DCF2  00                 	db	0
  4020  01DCF3  00                 	db	0
  4021  01DCF4  00                 	db	0
  4022  01DCF5  00                 	db	0
  4023  01DCF6  00                 	db	0
  4024  01DCF7  00                 	db	0
  4025  01DCF8  00                 	db	0
  4026  01DCF9  00                 	db	0
  4027  01DCFA  00                 	db	0
  4028  01DCFB  00                 	db	0
  4029  01DCFC  00                 	db	0
  4030  01DCFD  00                 	db	0
  4031  01DCFE  00                 	db	0
  4032  01DCFF  00                 	db	0
  4033  01DD00  00                 	db	0
  4034  01DD01  00                 	db	0
  4035  01DD02  00                 	db	0
  4036  01DD03  00                 	db	0
  4037  01DD04  00                 	db	0
  4038  01DD05  00                 	db	0
  4039  01DD06  00                 	db	0
  4040  01DD07  00                 	db	0
  4041  01DD08  00                 	db	0
  4042  01DD09  00                 	db	0
  4043  01DD0A  00                 	db	0
  4044  01DD0B  00                 	db	0
  4045  01DD0C  00                 	db	0
  4046  01DD0D  00                 	db	0
  4047  01DD0E  00                 	db	0
  4048  01DD0F  00                 	db	0
  4049  01DD10  00                 	db	0
  4050  01DD11  00                 	db	0
  4051  01DD12  00                 	db	0
  4052  01DD13  00                 	db	0
  4053  01DD14  00                 	db	0
  4054  01DD15  00                 	db	0
  4055  01DD16  00                 	db	0
  4056  01DD17  00                 	db	0
  4057  01DD18  00                 	db	0
  4058  01DD19  00                 	db	0
  4059  01DD1A  00                 	db	0
  4060  01DD1B  00                 	db	0
  4061  01DD1C  00                 	db	0
  4062  01DD1D  00                 	db	0
  4063  01DD1E  00                 	db	0
  4064  01DD1F  00                 	db	0
  4065  01DD20  00                 	db	0
  4066  01DD21  00                 	db	0
  4067  01DD22  00                 	db	0
  4068  01DD23  00                 	db	0
  4069  01DD24  00                 	db	0
  4070  01DD25  00                 	db	0
  4071  01DD26  00                 	db	0
  4072  01DD27  00                 	db	0
  4073  01DD28  00                 	db	0
  4074  01DD29  00                 	db	0
  4075  01DD2A  00                 	db	0
  4076  01DD2B  00                 	db	0
  4077  01DD2C  00                 	db	0
  4078  01DD2D  00                 	db	0
  4079  01DD2E  00                 	db	0
  4080  01DD2F  00                 	db	0
  4081  01DD30  00                 	db	0
  4082  01DD31  00                 	db	0
  4083  01DD32  00                 	db	0
  4084  01DD33  00                 	db	0
  4085  01DD34  00                 	db	0
  4086  01DD35  00                 	db	0
  4087  01DD36  00                 	db	0
  4088  01DD37  00                 	db	0
  4089  01DD38  00                 	db	0
  4090  01DD39  00                 	db	0
  4091  01DD3A  00                 	db	0
  4092  01DD3B  00                 	db	0
  4093  01DD3C  00                 	db	0
  4094  01DD3D  00                 	db	0
  4095  01DD3E  00                 	db	0
  4096  01DD3F  00                 	db	0
  4097  01DD40  00                 	db	0
  4098  01DD41  00                 	db	0
  4099  01DD42  00                 	db	0
  4100  01DD43  00                 	db	0
  4101  01DD44  00                 	db	0
  4102  01DD45  00                 	db	0
  4103  01DD46  00                 	db	0
  4104  01DD47  00                 	db	0
  4105  01DD48  00                 	db	0
  4106  01DD49  00                 	db	0
  4107  01DD4A  00                 	db	0
  4108  01DD4B  00                 	db	0
  4109  01DD4C  00                 	db	0
  4110  01DD4D  00                 	db	0
  4111  01DD4E  00                 	db	0
  4112  01DD4F  00                 	db	0
  4113  01DD50  00                 	db	0
  4114  01DD51  00                 	db	0
  4115  01DD52  00                 	db	0
  4116  01DD53  00                 	db	0
  4117  01DD54  00                 	db	0
  4118  01DD55  00                 	db	0
  4119  01DD56  00                 	db	0
  4120  01DD57  00                 	db	0
  4121  01DD58  00                 	db	0
  4122  01DD59  00                 	db	0
  4123  01DD5A  00                 	db	0
  4124  01DD5B  00                 	db	0
  4125  01DD5C  00                 	db	0
  4126  01DD5D  00                 	db	0
  4127  01DD5E  00                 	db	0
  4128  01DD5F  00                 	db	0
  4129  01DD60  00                 	db	0
  4130  01DD61  00                 	db	0
  4131  01DD62  00                 	db	0
  4132  01DD63  00                 	db	0
  4133  01DD64  00                 	db	0
  4134  01DD65  00                 	db	0
  4135  01DD66  00                 	db	0
  4136  01DD67  00                 	db	0
  4137  01DD68  00                 	db	0
  4138  01DD69  00                 	db	0
  4139  01DD6A  00                 	db	0
  4140  01DD6B  00                 	db	0
  4141  01DD6C  00                 	db	0
  4142  01DD6D  00                 	db	0
  4143  01DD6E  00                 	db	0
  4144  01DD6F  00                 	db	0
  4145  01DD70  00                 	db	0
  4146  01DD71  00                 	db	0
  4147  01DD72  00                 	db	0
  4148  01DD73  00                 	db	0
  4149  01DD74  00                 	db	0
  4150  01DD75  00                 	db	0
  4151  01DD76  00                 	db	0
  4152  01DD77  00                 	db	0
  4153  01DD78  00                 	db	0
  4154  01DD79  00                 	db	0
  4155  01DD7A  00                 	db	0
  4156  01DD7B  00                 	db	0
  4157  01DD7C  00                 	db	0
  4158  01DD7D  00                 	db	0
  4159  01DD7E  00                 	db	0
  4160  01DD7F  00                 	db	0
  4161  01DD80  00                 	db	0
  4162  01DD81  00                 	db	0
  4163  01DD82  00                 	db	0
  4164  01DD83  00                 	db	0
  4165  01DD84  00                 	db	0
  4166  01DD85  00                 	db	0
  4167  01DD86  00                 	db	0
  4168  01DD87  00                 	db	0
  4169  01DD88  00                 	db	0
  4170  01DD89  00                 	db	0
  4171  01DD8A  00                 	db	0
  4172  01DD8B  00                 	db	0
  4173  01DD8C  00                 	db	0
  4174  01DD8D  00                 	db	0
  4175  01DD8E  00                 	db	0
  4176  01DD8F  00                 	db	0
  4177  01DD90  00                 	db	0
  4178  01DD91  00                 	db	0
  4179  01DD92  00                 	db	0
  4180  01DD93  00                 	db	0
  4181  01DD94  00                 	db	0
  4182  01DD95  00                 	db	0
  4183  01DD96  00                 	db	0
  4184  01DD97  00                 	db	0
  4185  01DD98  00                 	db	0
  4186  01DD99  00                 	db	0
  4187  01DD9A  00                 	db	0
  4188  01DD9B  00                 	db	0
  4189  01DD9C  00                 	db	0
  4190  01DD9D  00                 	db	0
  4191  01DD9E  00                 	db	0
  4192  01DD9F  00                 	db	0
  4193  01DDA0  00                 	db	0
  4194  01DDA1  00                 	db	0
  4195  01DDA2  00                 	db	0
  4196  01DDA3  00                 	db	0
  4197  01DDA4  00                 	db	0
  4198  01DDA5  00                 	db	0
  4199  01DDA6  00                 	db	0
  4200  01DDA7  00                 	db	0
  4201  01DDA8  00                 	db	0
  4202  01DDA9  00                 	db	0
  4203  01DDAA  00                 	db	0
  4204  01DDAB  00                 	db	0
  4205  01DDAC  00                 	db	0
  4206  01DDAD  00                 	db	0
  4207  01DDAE  00                 	db	0
  4208  01DDAF  00                 	db	0
  4209  01DDB0  00                 	db	0
  4210  01DDB1  00                 	db	0
  4211  01DDB2  00                 	db	0
  4212  01DDB3  00                 	db	0
  4213  01DDB4  00                 	db	0
  4214  01DDB5  00                 	db	0
  4215  01DDB6  00                 	db	0
  4216  01DDB7  00                 	db	0
  4217  01DDB8  00                 	db	0
  4218  01DDB9  00                 	db	0
  4219  01DDBA  00                 	db	0
  4220  01DDBB  00                 	db	0
  4221  01DDBC  00                 	db	0
  4222  01DDBD  00                 	db	0
  4223  01DDBE  00                 	db	0
  4224  01DDBF  00                 	db	0
  4225  01DDC0  00                 	db	0
  4226  01DDC1  00                 	db	0
  4227  01DDC2  00                 	db	0
  4228  01DDC3  00                 	db	0
  4229  01DDC4  00                 	db	0
  4230  01DDC5  00                 	db	0
  4231  01DDC6  00                 	db	0
  4232  01DDC7  00                 	db	0
  4233  01DDC8  00                 	db	0
  4234  01DDC9  00                 	db	0
  4235  01DDCA  00                 	db	0
  4236  01DDCB  00                 	db	0
  4237  01DDCC  00                 	db	0
  4238  01DDCD  00                 	db	0
  4239  01DDCE  00                 	db	0
  4240  01DDCF  00                 	db	0
  4241  01DDD0  00                 	db	0
  4242  01DDD1  00                 	db	0
  4243  01DDD2  00                 	db	0
  4244  01DDD3  00                 	db	0
  4245  01DDD4  00                 	db	0
  4246  01DDD5  00                 	db	0
  4247  01DDD6  00                 	db	0
  4248  01DDD7  00                 	db	0
  4249  01DDD8  00                 	db	0
  4250  01DDD9  00                 	db	0
  4251  01DDDA  00                 	db	0
  4252  01DDDB  00                 	db	0
  4253  01DDDC  00                 	db	0
  4254  01DDDD  00                 	db	0
  4255  01DDDE  00                 	db	0
  4256  01DDDF  00                 	db	0
  4257  01DDE0  00                 	db	0
  4258  01DDE1  00                 	db	0
  4259  01DDE2  00                 	db	0
  4260  01DDE3  00                 	db	0
  4261  01DDE4  00                 	db	0
  4262  01DDE5  00                 	db	0
  4263  01DDE6  00                 	db	0
  4264  01DDE7  00                 	db	0
  4265  01DDE8  00                 	db	0
  4266  01DDE9  00                 	db	0
  4267  01DDEA  00                 	db	0
  4268  01DDEB  00                 	db	0
  4269  01DDEC  00                 	db	0
  4270  01DDED  00                 	db	0
  4271  01DDEE  00                 	db	0
  4272  01DDEF  00                 	db	0
  4273  01DDF0  00                 	db	0
  4274  01DDF1  00                 	db	0
  4275  01DDF2  00                 	db	0
  4276  01DDF3  00                 	db	0
  4277  01DDF4  00                 	db	0
  4278  01DDF5  00                 	db	0
  4279  01DDF6  00                 	db	0
  4280  01DDF7  00                 	db	0
  4281  01DDF8  00                 	db	0
  4282  01DDF9  00                 	db	0
  4283  01DDFA  00                 	db	0
  4284  01DDFB  00                 	db	0
  4285  01DDFC  00                 	db	0
  4286  01DDFD  00                 	db	0
  4287  01DDFE  00                 	db	0
  4288  01DDFF  00                 	db	0
  4289  01DE00  00                 	db	0
  4290  01DE01  00                 	db	0
  4291  01DE02  00                 	db	0
  4292  01DE03  00                 	db	0
  4293  01DE04  00                 	db	0
  4294  01DE05  00                 	db	0
  4295  01DE06  00                 	db	0
  4296  01DE07  00                 	db	0
  4297  01DE08  00                 	db	0
  4298  01DE09  00                 	db	0
  4299  01DE0A  00                 	db	0
  4300  01DE0B  00                 	db	0
  4301  01DE0C  00                 	db	0
  4302  01DE0D  00                 	db	0
  4303  01DE0E  00                 	db	0
  4304  01DE0F  00                 	db	0
  4305  01DE10  00                 	db	0
  4306  01DE11  00                 	db	0
  4307  01DE12  00                 	db	0
  4308  01DE13  00                 	db	0
  4309  01DE14  00                 	db	0
  4310  01DE15  00                 	db	0
  4311  01DE16  00                 	db	0
  4312  01DE17  00                 	db	0
  4313  01DE18  00                 	db	0
  4314  01DE19  00                 	db	0
  4315  01DE1A  00                 	db	0
  4316  01DE1B  00                 	db	0
  4317  01DE1C  00                 	db	0
  4318  01DE1D  00                 	db	0
  4319  01DE1E  00                 	db	0
  4320  01DE1F  00                 	db	0
  4321  01DE20  00                 	db	0
  4322  01DE21  00                 	db	0
  4323  01DE22  00                 	db	0
  4324  01DE23  00                 	db	0
  4325  01DE24  00                 	db	0
  4326  01DE25  00                 	db	0
  4327  01DE26  00                 	db	0
  4328  01DE27  00                 	db	0
  4329  01DE28  00                 	db	0
  4330  01DE29  00                 	db	0
  4331  01DE2A  00                 	db	0
  4332  01DE2B  00                 	db	0
  4333  01DE2C  00                 	db	0
  4334  01DE2D  00                 	db	0
  4335  01DE2E  00                 	db	0
  4336  01DE2F  00                 	db	0
  4337  01DE30  00                 	db	0
  4338  01DE31  00                 	db	0
  4339  01DE32  00                 	db	0
  4340  01DE33  00                 	db	0
  4341  01DE34  00                 	db	0
  4342  01DE35  00                 	db	0
  4343  01DE36  00                 	db	0
  4344  01DE37  00                 	db	0
  4345  01DE38  00                 	db	0
  4346  01DE39  00                 	db	0
  4347  01DE3A  00                 	db	0
  4348  01DE3B  00                 	db	0
  4349  01DE3C  00                 	db	0
  4350  01DE3D  00                 	db	0
  4351  01DE3E  00                 	db	0
  4352  01DE3F  00                 	db	0
  4353  01DE40  00                 	db	0
  4354  01DE41  00                 	db	0
  4355  01DE42  00                 	db	0
  4356  01DE43  00                 	db	0
  4357  01DE44  00                 	db	0
  4358  01DE45  00                 	db	0
  4359  01DE46  00                 	db	0
  4360  01DE47  00                 	db	0
  4361  01DE48  00                 	db	0
  4362  01DE49  00                 	db	0
  4363  01DE4A  00                 	db	0
  4364  01DE4B  00                 	db	0
  4365  01DE4C  00                 	db	0
  4366  01DE4D  00                 	db	0
  4367  01DE4E  00                 	db	0
  4368  01DE4F  00                 	db	0
  4369  01DE50  00                 	db	0
  4370  01DE51  00                 	db	0
  4371  01DE52  00                 	db	0
  4372  01DE53  00                 	db	0
  4373  01DE54  00                 	db	0
  4374  01DE55  00                 	db	0
  4375  01DE56  00                 	db	0
  4376  01DE57  00                 	db	0
  4377  01DE58  00                 	db	0
  4378  01DE59  00                 	db	0
  4379  01DE5A  00                 	db	0
  4380  01DE5B  00                 	db	0
  4381  01DE5C  00                 	db	0
  4382  01DE5D  00                 	db	0
  4383  01DE5E  00                 	db	0
  4384  01DE5F  00                 	db	0
  4385  01DE60  00                 	db	0
  4386  01DE61  00                 	db	0
  4387  01DE62  00                 	db	0
  4388  01DE63  00                 	db	0
  4389  01DE64  00                 	db	0
  4390  01DE65  00                 	db	0
  4391  01DE66  00                 	db	0
  4392  01DE67  00                 	db	0
  4393  01DE68  00                 	db	0
  4394  01DE69  00                 	db	0
  4395  01DE6A  00                 	db	0
  4396  01DE6B  00                 	db	0
  4397  01DE6C  00                 	db	0
  4398  01DE6D  00                 	db	0
  4399  01DE6E  00                 	db	0
  4400  01DE6F  00                 	db	0
  4401  01DE70  00                 	db	0
  4402  01DE71  00                 	db	0
  4403  01DE72  00                 	db	0
  4404  01DE73  00                 	db	0
  4405  01DE74  00                 	db	0
  4406  01DE75  00                 	db	0
  4407  01DE76  00                 	db	0
  4408  01DE77  00                 	db	0
  4409  01DE78  00                 	db	0
  4410  01DE79  00                 	db	0
  4411  01DE7A  00                 	db	0
  4412  01DE7B  00                 	db	0
  4413  01DE7C  00                 	db	0
  4414  01DE7D  00                 	db	0
  4415  01DE7E  00                 	db	0
  4416  01DE7F  00                 	db	0
  4417  01DE80  00                 	db	0
  4418  01DE81  00                 	db	0
  4419  01DE82  00                 	db	0
  4420  01DE83  00                 	db	0
  4421  01DE84  00                 	db	0
  4422  01DE85  00                 	db	0
  4423  01DE86  00                 	db	0
  4424  01DE87  00                 	db	0
  4425  01DE88  00                 	db	0
  4426  01DE89  00                 	db	0
  4427  01DE8A  00                 	db	0
  4428  01DE8B  00                 	db	0
  4429  01DE8C  00                 	db	0
  4430  01DE8D  00                 	db	0
  4431  01DE8E  00                 	db	0
  4432  01DE8F  00                 	db	0
  4433  01DE90  00                 	db	0
  4434  01DE91  00                 	db	0
  4435  01DE92  00                 	db	0
  4436  01DE93  00                 	db	0
  4437  01DE94  00                 	db	0
  4438  01DE95  00                 	db	0
  4439  01DE96  00                 	db	0
  4440  01DE97  00                 	db	0
  4441  01DE98  00                 	db	0
  4442  01DE99  00                 	db	0
  4443  01DE9A  00                 	db	0
  4444  01DE9B  00                 	db	0
  4445  01DE9C  00                 	db	0
  4446  01DE9D  00                 	db	0
  4447  01DE9E  00                 	db	0
  4448  01DE9F  00                 	db	0
  4449  01DEA0  00                 	db	0
  4450  01DEA1  00                 	db	0
  4451  01DEA2  00                 	db	0
  4452  01DEA3  00                 	db	0
  4453  01DEA4  00                 	db	0
  4454  01DEA5  00                 	db	0
  4455  01DEA6  00                 	db	0
  4456  01DEA7  00                 	db	0
  4457  01DEA8  00                 	db	0
  4458  01DEA9  00                 	db	0
  4459  01DEAA  00                 	db	0
  4460  01DEAB  00                 	db	0
  4461  01DEAC  00                 	db	0
  4462  01DEAD  00                 	db	0
  4463  01DEAE  00                 	db	0
  4464  01DEAF  00                 	db	0
  4465  01DEB0  00                 	db	0
  4466  01DEB1  00                 	db	0
  4467  01DEB2  00                 	db	0
  4468  01DEB3  00                 	db	0
  4469  01DEB4  00                 	db	0
  4470  01DEB5  00                 	db	0
  4471  01DEB6  00                 	db	0
  4472  01DEB7  00                 	db	0
  4473  01DEB8  00                 	db	0
  4474  01DEB9  00                 	db	0
  4475  01DEBA  00                 	db	0
  4476  01DEBB  00                 	db	0
  4477  01DEBC  00                 	db	0
  4478  01DEBD  00                 	db	0
  4479  01DEBE  00                 	db	0
  4480  01DEBF  00                 	db	0
  4481  01DEC0  00                 	db	0
  4482  01DEC1  00                 	db	0
  4483  01DEC2  00                 	db	0
  4484  01DEC3  00                 	db	0
  4485  01DEC4  00                 	db	0
  4486  01DEC5  00                 	db	0
  4487  01DEC6  00                 	db	0
  4488  01DEC7  00                 	db	0
  4489  01DEC8  00                 	db	0
  4490  01DEC9  00                 	db	0
  4491  01DECA  00                 	db	0
  4492  01DECB  00                 	db	0
  4493  01DECC  00                 	db	0
  4494  01DECD  00                 	db	0
  4495  01DECE  00                 	db	0
  4496  01DECF  00                 	db	0
  4497  01DED0  00                 	db	0
  4498  01DED1  00                 	db	0
  4499  01DED2  00                 	db	0
  4500  01DED3  00                 	db	0
  4501  01DED4  00                 	db	0
  4502  01DED5  00                 	db	0
  4503  01DED6  00                 	db	0
  4504  01DED7  00                 	db	0
  4505  01DED8  00                 	db	0
  4506  01DED9  00                 	db	0
  4507  01DEDA  00                 	db	0
  4508  01DEDB  00                 	db	0
  4509  01DEDC  00                 	db	0
  4510  01DEDD  00                 	db	0
  4511  01DEDE  00                 	db	0
  4512  01DEDF  00                 	db	0
  4513  01DEE0  00                 	db	0
  4514  01DEE1  00                 	db	0
  4515  01DEE2  00                 	db	0
  4516  01DEE3  00                 	db	0
  4517  01DEE4  00                 	db	0
  4518  01DEE5  00                 	db	0
  4519  01DEE6  00                 	db	0
  4520  01DEE7  00                 	db	0
  4521  01DEE8  00                 	db	0
  4522  01DEE9  00                 	db	0
  4523  01DEEA  00                 	db	0
  4524  01DEEB  00                 	db	0
  4525  01DEEC  00                 	db	0
  4526  01DEED  00                 	db	0
  4527  01DEEE  00                 	db	0
  4528  01DEEF  00                 	db	0
  4529  01DEF0  00                 	db	0
  4530  01DEF1  00                 	db	0
  4531  01DEF2  00                 	db	0
  4532  01DEF3  00                 	db	0
  4533  01DEF4  00                 	db	0
  4534  01DEF5  00                 	db	0
  4535  01DEF6  00                 	db	0
  4536  01DEF7  00                 	db	0
  4537  01DEF8  00                 	db	0
  4538  01DEF9  00                 	db	0
  4539  01DEFA  00                 	db	0
  4540  01DEFB  00                 	db	0
  4541  01DEFC  00                 	db	0
  4542  01DEFD  00                 	db	0
  4543  01DEFE  00                 	db	0
  4544  01DEFF  00                 	db	0
  4545  01DF00  00                 	db	0
  4546  01DF01  00                 	db	0
  4547  01DF02  00                 	db	0
  4548  01DF03  00                 	db	0
  4549  01DF04  00                 	db	0
  4550  01DF05  00                 	db	0
  4551  01DF06  00                 	db	0
  4552  01DF07  00                 	db	0
  4553  01DF08  00                 	db	0
  4554  01DF09  00                 	db	0
  4555  01DF0A  00                 	db	0
  4556  01DF0B  00                 	db	0
  4557  01DF0C  00                 	db	0
  4558  01DF0D  00                 	db	0
  4559  01DF0E  00                 	db	0
  4560  01DF0F  00                 	db	0
  4561  01DF10  00                 	db	0
  4562  01DF11  00                 	db	0
  4563  01DF12  00                 	db	0
  4564  01DF13  00                 	db	0
  4565  01DF14  00                 	db	0
  4566  01DF15  00                 	db	0
  4567  01DF16  00                 	db	0
  4568  01DF17  00                 	db	0
  4569  01DF18  00                 	db	0
  4570  01DF19  00                 	db	0
  4571  01DF1A  00                 	db	0
  4572  01DF1B  00                 	db	0
  4573  01DF1C  00                 	db	0
  4574  01DF1D  00                 	db	0
  4575  01DF1E  00                 	db	0
  4576  01DF1F  00                 	db	0
  4577  01DF20  00                 	db	0
  4578  01DF21  00                 	db	0
  4579  01DF22  00                 	db	0
  4580  01DF23  00                 	db	0
  4581  01DF24  00                 	db	0
  4582  01DF25  00                 	db	0
  4583  01DF26  00                 	db	0
  4584  01DF27  00                 	db	0
  4585  01DF28  00                 	db	0
  4586  01DF29  00                 	db	0
  4587  01DF2A  00                 	db	0
  4588  01DF2B  00                 	db	0
  4589  01DF2C  00                 	db	0
  4590  01DF2D  00                 	db	0
  4591  01DF2E  00                 	db	0
  4592  01DF2F  00                 	db	0
  4593  01DF30  00                 	db	0
  4594  01DF31  00                 	db	0
  4595  01DF32  00                 	db	0
  4596  01DF33  00                 	db	0
  4597  01DF34  00                 	db	0
  4598  01DF35  00                 	db	0
  4599  01DF36  00                 	db	0
  4600  01DF37  00                 	db	0
  4601  01DF38  00                 	db	0
  4602  01DF39  00                 	db	0
  4603  01DF3A  00                 	db	0
  4604  01DF3B  00                 	db	0
  4605  01DF3C  00                 	db	0
  4606  01DF3D  00                 	db	0
  4607  01DF3E  00                 	db	0
  4608  01DF3F  00                 	db	0
  4609  01DF40  00                 	db	0
  4610  01DF41  00                 	db	0
  4611  01DF42  00                 	db	0
  4612  01DF43  00                 	db	0
  4613  01DF44  00                 	db	0
  4614  01DF45  00                 	db	0
  4615  01DF46  00                 	db	0
  4616  01DF47  00                 	db	0
  4617  01DF48  00                 	db	0
  4618  01DF49  00                 	db	0
  4619  01DF4A  00                 	db	0
  4620  01DF4B  00                 	db	0
  4621  01DF4C  00                 	db	0
  4622  01DF4D  00                 	db	0
  4623  01DF4E  00                 	db	0
  4624  01DF4F  00                 	db	0
  4625  01DF50  00                 	db	0
  4626  01DF51  00                 	db	0
  4627  01DF52  00                 	db	0
  4628  01DF53  00                 	db	0
  4629  01DF54  00                 	db	0
  4630  01DF55  00                 	db	0
  4631  01DF56  00                 	db	0
  4632  01DF57  00                 	db	0
  4633  01DF58  00                 	db	0
  4634  01DF59  00                 	db	0
  4635  01DF5A  00                 	db	0
  4636  01DF5B  00                 	db	0
  4637  01DF5C  00                 	db	0
  4638  01DF5D  00                 	db	0
  4639  01DF5E  00                 	db	0
  4640  01DF5F  00                 	db	0
  4641  01DF60  00                 	db	0
  4642  01DF61  00                 	db	0
  4643  01DF62  00                 	db	0
  4644  01DF63  00                 	db	0
  4645  01DF64  00                 	db	0
  4646  01DF65  00                 	db	0
  4647  01DF66  00                 	db	0
  4648  01DF67  00                 	db	0
  4649  01DF68  00                 	db	0
  4650  01DF69  00                 	db	0
  4651  01DF6A  00                 	db	0
  4652  01DF6B  00                 	db	0
  4653  01DF6C  00                 	db	0
  4654  01DF6D  00                 	db	0
  4655  01DF6E  00                 	db	0
  4656  01DF6F  00                 	db	0
  4657  01DF70  00                 	db	0
  4658  01DF71  00                 	db	0
  4659  01DF72  00                 	db	0
  4660  01DF73  00                 	db	0
  4661  01DF74  00                 	db	0
  4662  01DF75  00                 	db	0
  4663  01DF76  00                 	db	0
  4664  01DF77  00                 	db	0
  4665  01DF78  00                 	db	0
  4666  01DF79  00                 	db	0
  4667  01DF7A  00                 	db	0
  4668  01DF7B  00                 	db	0
  4669  01DF7C  00                 	db	0
  4670  01DF7D  00                 	db	0
  4671  01DF7E  00                 	db	0
  4672  01DF7F  00                 	db	0
  4673  01DF80  00                 	db	0
  4674  01DF81  00                 	db	0
  4675  01DF82  00                 	db	0
  4676  01DF83  00                 	db	0
  4677  01DF84  00                 	db	0
  4678  01DF85  00                 	db	0
  4679  01DF86  00                 	db	0
  4680  01DF87  00                 	db	0
  4681  01DF88  00                 	db	0
  4682  01DF89  00                 	db	0
  4683  01DF8A  00                 	db	0
  4684  01DF8B  00                 	db	0
  4685  01DF8C  00                 	db	0
  4686  01DF8D  00                 	db	0
  4687  01DF8E  00                 	db	0
  4688  01DF8F  00                 	db	0
  4689  01DF90  00                 	db	0
  4690  01DF91  00                 	db	0
  4691  01DF92  00                 	db	0
  4692  01DF93  00                 	db	0
  4693  01DF94  00                 	db	0
  4694  01DF95  00                 	db	0
  4695  01DF96  00                 	db	0
  4696  01DF97  00                 	db	0
  4697  01DF98  00                 	db	0
  4698  01DF99  00                 	db	0
  4699  01DF9A  00                 	db	0
  4700  01DF9B  00                 	db	0
  4701  01DF9C  00                 	db	0
  4702  01DF9D  00                 	db	0
  4703  01DF9E  00                 	db	0
  4704  01DF9F  00                 	db	0
  4705  01DFA0  00                 	db	0
  4706  01DFA1  00                 	db	0
  4707  01DFA2  00                 	db	0
  4708  01DFA3  00                 	db	0
  4709  01DFA4  00                 	db	0
  4710  01DFA5  00                 	db	0
  4711  01DFA6  00                 	db	0
  4712  01DFA7  00                 	db	0
  4713  01DFA8  00                 	db	0
  4714  01DFA9  00                 	db	0
  4715  01DFAA  00                 	db	0
  4716  01DFAB  00                 	db	0
  4717  01DFAC  00                 	db	0
  4718  01DFAD  00                 	db	0
  4719  01DFAE  00                 	db	0
  4720  01DFAF  00                 	db	0
  4721  01DFB0  00                 	db	0
  4722  01DFB1  00                 	db	0
  4723  01DFB2  00                 	db	0
  4724  01DFB3  00                 	db	0
  4725  01DFB4  00                 	db	0
  4726  01DFB5  00                 	db	0
  4727  01DFB6  00                 	db	0
  4728  01DFB7  00                 	db	0
  4729  01DFB8  00                 	db	0
  4730  01DFB9  00                 	db	0
  4731  01DFBA  00                 	db	0
  4732  01DFBB  00                 	db	0
  4733  01DFBC  00                 	db	0
  4734  01DFBD  00                 	db	0
  4735  01DFBE  00                 	db	0
  4736  01DFBF  00                 	db	0
  4737  01DFC0  00                 	db	0
  4738  01DFC1  00                 	db	0
  4739  01DFC2  00                 	db	0
  4740  01DFC3  00                 	db	0
  4741  01DFC4  00                 	db	0
  4742  01DFC5  00                 	db	0
  4743  01DFC6  00                 	db	0
  4744  01DFC7  00                 	db	0
  4745  01DFC8  00                 	db	0
  4746  01DFC9  00                 	db	0
  4747  01DFCA  00                 	db	0
  4748  01DFCB  00                 	db	0
  4749  01DFCC  00                 	db	0
  4750  01DFCD  00                 	db	0
  4751  01DFCE  00                 	db	0
  4752  01DFCF  00                 	db	0
  4753  01DFD0  00                 	db	0
  4754  01DFD1  00                 	db	0
  4755  01DFD2  00                 	db	0
  4756  01DFD3  00                 	db	0
  4757  01DFD4  00                 	db	0
  4758  01DFD5  00                 	db	0
  4759  01DFD6  00                 	db	0
  4760  01DFD7  00                 	db	0
  4761  01DFD8  00                 	db	0
  4762  01DFD9  00                 	db	0
  4763  01DFDA  00                 	db	0
  4764  01DFDB  00                 	db	0
  4765  01DFDC  00                 	db	0
  4766  01DFDD  00                 	db	0
  4767  01DFDE  00                 	db	0
  4768  01DFDF  00                 	db	0
  4769  01DFE0  00                 	db	0
  4770  01DFE1  00                 	db	0
  4771  01DFE2  00                 	db	0
  4772  01DFE3  00                 	db	0
  4773  01DFE4  00                 	db	0
  4774  01DFE5  00                 	db	0
  4775  01DFE6  00                 	db	0
  4776  01DFE7  00                 	db	0
  4777  01DFE8  00                 	db	0
  4778  01DFE9  00                 	db	0
  4779  01DFEA  00                 	db	0
  4780  01DFEB  00                 	db	0
  4781  01DFEC  00                 	db	0
  4782  01DFED  00                 	db	0
  4783  01DFEE  00                 	db	0
  4784  01DFEF  00                 	db	0
  4785  01DFF0  00                 	db	0
  4786  01DFF1  00                 	db	0
  4787  01DFF2  00                 	db	0
  4788  01DFF3  00                 	db	0
  4789  01DFF4  00                 	db	0
  4790  01DFF5  00                 	db	0
  4791  01DFF6  00                 	db	0
  4792  01DFF7  00                 	db	0
  4793  01DFF8  00                 	db	0
  4794  01DFF9  00                 	db	0
  4795  01DFFA  00                 	db	0
  4796  01DFFB  00                 	db	0
  4797  01DFFC  00                 	db	0
  4798  01DFFD  00                 	db	0
  4799  01DFFE  00                 	db	0
  4800  01DFFF  00                 	db	0
  4801  01E000  00                 	db	0
  4802  01E001  00                 	db	0
  4803  01E002  00                 	db	0
  4804  01E003  00                 	db	0
  4805  01E004  00                 	db	0
  4806  01E005  00                 	db	0
  4807  01E006  00                 	db	0
  4808  01E007  00                 	db	0
  4809  01E008  00                 	db	0
  4810  01E009  00                 	db	0
  4811  01E00A  00                 	db	0
  4812  01E00B  00                 	db	0
  4813  01E00C  00                 	db	0
  4814  01E00D  00                 	db	0
  4815  01E00E  00                 	db	0
  4816  01E00F  00                 	db	0
  4817  01E010  00                 	db	0
  4818  01E011  00                 	db	0
  4819  01E012  00                 	db	0
  4820  01E013  00                 	db	0
  4821  01E014  00                 	db	0
  4822  01E015  00                 	db	0
  4823  01E016  00                 	db	0
  4824  01E017  00                 	db	0
  4825  01E018  00                 	db	0
  4826  01E019  00                 	db	0
  4827  01E01A  00                 	db	0
  4828  01E01B  00                 	db	0
  4829  01E01C  00                 	db	0
  4830  01E01D  00                 	db	0
  4831  01E01E  00                 	db	0
  4832  01E01F  00                 	db	0
  4833  01E020  00                 	db	0
  4834  01E021  00                 	db	0
  4835  01E022  00                 	db	0
  4836  01E023  00                 	db	0
  4837  01E024  00                 	db	0
  4838  01E025  00                 	db	0
  4839  01E026  00                 	db	0
  4840  01E027  00                 	db	0
  4841  01E028  00                 	db	0
  4842  01E029  00                 	db	0
  4843  01E02A  00                 	db	0
  4844  01E02B  00                 	db	0
  4845  01E02C  00                 	db	0
  4846  01E02D  00                 	db	0
  4847  01E02E  00                 	db	0
  4848  01E02F  00                 	db	0
  4849  01E030  00                 	db	0
  4850  01E031  00                 	db	0
  4851  01E032  00                 	db	0
  4852  01E033  00                 	db	0
  4853  01E034  00                 	db	0
  4854  01E035  00                 	db	0
  4855  01E036  00                 	db	0
  4856  01E037  00                 	db	0
  4857  01E038  00                 	db	0
  4858  01E039  00                 	db	0
  4859  01E03A  00                 	db	0
  4860  01E03B  00                 	db	0
  4861  01E03C  00                 	db	0
  4862  01E03D  00                 	db	0
  4863  01E03E  00                 	db	0
  4864  01E03F  00                 	db	0
  4865  01E040  00                 	db	0
  4866  01E041  00                 	db	0
  4867  01E042  00                 	db	0
  4868  01E043  00                 	db	0
  4869  01E044  00                 	db	0
  4870  01E045  00                 	db	0
  4871  01E046  00                 	db	0
  4872  01E047  00                 	db	0
  4873  01E048  00                 	db	0
  4874  01E049  00                 	db	0
  4875  01E04A  00                 	db	0
  4876  01E04B  00                 	db	0
  4877  01E04C  00                 	db	0
  4878  01E04D  00                 	db	0
  4879  01E04E  00                 	db	0
  4880  01E04F  00                 	db	0
  4881  01E050  00                 	db	0
  4882  01E051  00                 	db	0
  4883  01E052  00                 	db	0
  4884  01E053  00                 	db	0
  4885  01E054  00                 	db	0
  4886  01E055  00                 	db	0
  4887  01E056  00                 	db	0
  4888  01E057  00                 	db	0
  4889  01E058  00                 	db	0
  4890  01E059  00                 	db	0
  4891  01E05A  00                 	db	0
  4892  01E05B  00                 	db	0
  4893  01E05C  00                 	db	0
  4894  01E05D  00                 	db	0
  4895  01E05E  00                 	db	0
  4896  01E05F  00                 	db	0
  4897  01E060  00                 	db	0
  4898  01E061  00                 	db	0
  4899  01E062  00                 	db	0
  4900  01E063  00                 	db	0
  4901  01E064  00                 	db	0
  4902  01E065  00                 	db	0
  4903  01E066  00                 	db	0
  4904  01E067  00                 	db	0
  4905  01E068  00                 	db	0
  4906  01E069  00                 	db	0
  4907  01E06A  00                 	db	0
  4908  01E06B  00                 	db	0
  4909  01E06C  00                 	db	0
  4910  01E06D  00                 	db	0
  4911  01E06E  00                 	db	0
  4912  01E06F  00                 	db	0
  4913  01E070  00                 	db	0
  4914  01E071  00                 	db	0
  4915  01E072  00                 	db	0
  4916  01E073  00                 	db	0
  4917  01E074  00                 	db	0
  4918  01E075  00                 	db	0
  4919  01E076  00                 	db	0
  4920  01E077  00                 	db	0
  4921  01E078  00                 	db	0
  4922  01E079  00                 	db	0
  4923  01E07A  00                 	db	0
  4924  01E07B  00                 	db	0
  4925  01E07C  00                 	db	0
  4926  01E07D  00                 	db	0
  4927  01E07E  00                 	db	0
  4928  01E07F  00                 	db	0
  4929  01E080  00                 	db	0
  4930  01E081  00                 	db	0
  4931  01E082  00                 	db	0
  4932  01E083  00                 	db	0
  4933  01E084  00                 	db	0
  4934  01E085  00                 	db	0
  4935  01E086  00                 	db	0
  4936  01E087  00                 	db	0
  4937  01E088  00                 	db	0
  4938  01E089  00                 	db	0
  4939  01E08A  00                 	db	0
  4940  01E08B  00                 	db	0
  4941  01E08C  00                 	db	0
  4942  01E08D  00                 	db	0
  4943  01E08E  00                 	db	0
  4944  01E08F  00                 	db	0
  4945  01E090  00                 	db	0
  4946  01E091  00                 	db	0
  4947  01E092  00                 	db	0
  4948  01E093  00                 	db	0
  4949  01E094  00                 	db	0
  4950  01E095  00                 	db	0
  4951  01E096  00                 	db	0
  4952  01E097  00                 	db	0
  4953  01E098  00                 	db	0
  4954  01E099  00                 	db	0
  4955  01E09A  00                 	db	0
  4956  01E09B  00                 	db	0
  4957  01E09C  00                 	db	0
  4958  01E09D  00                 	db	0
  4959  01E09E  00                 	db	0
  4960  01E09F  00                 	db	0
  4961  01E0A0  00                 	db	0
  4962  01E0A1  00                 	db	0
  4963  01E0A2  00                 	db	0
  4964  01E0A3  00                 	db	0
  4965  01E0A4  00                 	db	0
  4966  01E0A5  00                 	db	0
  4967  01E0A6  00                 	db	0
  4968  01E0A7  00                 	db	0
  4969  01E0A8  00                 	db	0
  4970  01E0A9  00                 	db	0
  4971  01E0AA  00                 	db	0
  4972  01E0AB  00                 	db	0
  4973  01E0AC  00                 	db	0
  4974  01E0AD  00                 	db	0
  4975  01E0AE  00                 	db	0
  4976  01E0AF  00                 	db	0
  4977  01E0B0  00                 	db	0
  4978  01E0B1  00                 	db	0
  4979  01E0B2  00                 	db	0
  4980  01E0B3  00                 	db	0
  4981  01E0B4  00                 	db	0
  4982  01E0B5  00                 	db	0
  4983  01E0B6  00                 	db	0
  4984  01E0B7  00                 	db	0
  4985  01E0B8  00                 	db	0
  4986  01E0B9  00                 	db	0
  4987  01E0BA  00                 	db	0
  4988  01E0BB  00                 	db	0
  4989  01E0BC  00                 	db	0
  4990  01E0BD  00                 	db	0
  4991  01E0BE  00                 	db	0
  4992  01E0BF  00                 	db	0
  4993  01E0C0  00                 	db	0
  4994  01E0C1  00                 	db	0
  4995  01E0C2  00                 	db	0
  4996  01E0C3  00                 	db	0
  4997  01E0C4  00                 	db	0
  4998  01E0C5  00                 	db	0
  4999  01E0C6  00                 	db	0
  5000  01E0C7  00                 	db	0
  5001  01E0C8  00                 	db	0
  5002  01E0C9  00                 	db	0
  5003  01E0CA  00                 	db	0
  5004  01E0CB  00                 	db	0
  5005  01E0CC  00                 	db	0
  5006  01E0CD  00                 	db	0
  5007  01E0CE  00                 	db	0
  5008  01E0CF  00                 	db	0
  5009  01E0D0  00                 	db	0
  5010  01E0D1  00                 	db	0
  5011  01E0D2  00                 	db	0
  5012  01E0D3  00                 	db	0
  5013  01E0D4  00                 	db	0
  5014  01E0D5  00                 	db	0
  5015  01E0D6  00                 	db	0
  5016  01E0D7  00                 	db	0
  5017  01E0D8  00                 	db	0
  5018  01E0D9  00                 	db	0
  5019  01E0DA  00                 	db	0
  5020  01E0DB  00                 	db	0
  5021  01E0DC  00                 	db	0
  5022  01E0DD  00                 	db	0
  5023  01E0DE  00                 	db	0
  5024  01E0DF  00                 	db	0
  5025  01E0E0  00                 	db	0
  5026  01E0E1  00                 	db	0
  5027  01E0E2  00                 	db	0
  5028  01E0E3  00                 	db	0
  5029  01E0E4  00                 	db	0
  5030  01E0E5  00                 	db	0
  5031  01E0E6  00                 	db	0
  5032  01E0E7  00                 	db	0
  5033  01E0E8  00                 	db	0
  5034  01E0E9  00                 	db	0
  5035  01E0EA  00                 	db	0
  5036  01E0EB  00                 	db	0
  5037  01E0EC  00                 	db	0
  5038  01E0ED  00                 	db	0
  5039  01E0EE  00                 	db	0
  5040  01E0EF  00                 	db	0
  5041  01E0F0  00                 	db	0
  5042  01E0F1  00                 	db	0
  5043  01E0F2  00                 	db	0
  5044  01E0F3  00                 	db	0
  5045  01E0F4  00                 	db	0
  5046  01E0F5  00                 	db	0
  5047  01E0F6  00                 	db	0
  5048  01E0F7  00                 	db	0
  5049  01E0F8  00                 	db	0
  5050  01E0F9  00                 	db	0
  5051  01E0FA  00                 	db	0
  5052  01E0FB  00                 	db	0
  5053  01E0FC  00                 	db	0
  5054  01E0FD  00                 	db	0
  5055  01E0FE  00                 	db	0
  5056  01E0FF  00                 	db	0
  5057  01E100  00                 	db	0
  5058  01E101  00                 	db	0
  5059  01E102  00                 	db	0
  5060  01E103  00                 	db	0
  5061  01E104  00                 	db	0
  5062  01E105  00                 	db	0
  5063  01E106  00                 	db	0
  5064  01E107  00                 	db	0
  5065  01E108  00                 	db	0
  5066  01E109  00                 	db	0
  5067  01E10A  00                 	db	0
  5068  01E10B  00                 	db	0
  5069  01E10C  00                 	db	0
  5070  01E10D  00                 	db	0
  5071  01E10E  00                 	db	0
  5072  01E10F  00                 	db	0
  5073  01E110  00                 	db	0
  5074  01E111  00                 	db	0
  5075  01E112  00                 	db	0
  5076  01E113  00                 	db	0
  5077  01E114  00                 	db	0
  5078  01E115  00                 	db	0
  5079  01E116  00                 	db	0
  5080  01E117  00                 	db	0
  5081  01E118  00                 	db	0
  5082  01E119  00                 	db	0
  5083  01E11A  00                 	db	0
  5084  01E11B  00                 	db	0
  5085  01E11C  00                 	db	0
  5086  01E11D  00                 	db	0
  5087  01E11E  00                 	db	0
  5088  01E11F  00                 	db	0
  5089  01E120  00                 	db	0
  5090  01E121  00                 	db	0
  5091  01E122  00                 	db	0
  5092  01E123  00                 	db	0
  5093  01E124  00                 	db	0
  5094  01E125  00                 	db	0
  5095  01E126  00                 	db	0
  5096  01E127  00                 	db	0
  5097  01E128  00                 	db	0
  5098  01E129  00                 	db	0
  5099  01E12A  00                 	db	0
  5100  01E12B  00                 	db	0
  5101  01E12C  00                 	db	0
  5102  01E12D  00                 	db	0
  5103  01E12E  00                 	db	0
  5104  01E12F  00                 	db	0
  5105  01E130  00                 	db	0
  5106  01E131  00                 	db	0
  5107  01E132  00                 	db	0
  5108  01E133  00                 	db	0
  5109  01E134  00                 	db	0
  5110  01E135  00                 	db	0
  5111  01E136  00                 	db	0
  5112  01E137  00                 	db	0
  5113  01E138  00                 	db	0
  5114  01E139  00                 	db	0
  5115  01E13A  00                 	db	0
  5116  01E13B  00                 	db	0
  5117  01E13C  00                 	db	0
  5118  01E13D  00                 	db	0
  5119  01E13E  00                 	db	0
  5120  01E13F  00                 	db	0
  5121  01E140  00                 	db	0
  5122  01E141  00                 	db	0
  5123  01E142  00                 	db	0
  5124  01E143  00                 	db	0
  5125  01E144  00                 	db	0
  5126  01E145  00                 	db	0
  5127  01E146  00                 	db	0
  5128  01E147  00                 	db	0
  5129  01E148  00                 	db	0
  5130  01E149  00                 	db	0
  5131  01E14A  00                 	db	0
  5132  01E14B  00                 	db	0
  5133  01E14C  00                 	db	0
  5134  01E14D  00                 	db	0
  5135  01E14E  00                 	db	0
  5136  01E14F  00                 	db	0
  5137  01E150  00                 	db	0
  5138  01E151  00                 	db	0
  5139  01E152  00                 	db	0
  5140  01E153  00                 	db	0
  5141  01E154  00                 	db	0
  5142  01E155  00                 	db	0
  5143  01E156  00                 	db	0
  5144  01E157  00                 	db	0
  5145  01E158  00                 	db	0
  5146  01E159  00                 	db	0
  5147  01E15A  00                 	db	0
  5148  01E15B  00                 	db	0
  5149  01E15C  00                 	db	0
  5150  01E15D  00                 	db	0
  5151  01E15E  00                 	db	0
  5152  01E15F  00                 	db	0
  5153  01E160  00                 	db	0
  5154  01E161  00                 	db	0
  5155  01E162  00                 	db	0
  5156  01E163  00                 	db	0
  5157  01E164  00                 	db	0
  5158  01E165  00                 	db	0
  5159  01E166  00                 	db	0
  5160  01E167  00                 	db	0
  5161  01E168  00                 	db	0
  5162  01E169  00                 	db	0
  5163  01E16A  00                 	db	0
  5164  01E16B  00                 	db	0
  5165  01E16C  00                 	db	0
  5166  01E16D  00                 	db	0
  5167  01E16E  00                 	db	0
  5168  01E16F  00                 	db	0
  5169  01E170  00                 	db	0
  5170  01E171  00                 	db	0
  5171  01E172  00                 	db	0
  5172  01E173  00                 	db	0
  5173  01E174  00                 	db	0
  5174  01E175  00                 	db	0
  5175  01E176  00                 	db	0
  5176  01E177  00                 	db	0
  5177  01E178  00                 	db	0
  5178  01E179  00                 	db	0
  5179  01E17A  00                 	db	0
  5180  01E17B  00                 	db	0
  5181  01E17C  00                 	db	0
  5182  01E17D  00                 	db	0
  5183  01E17E  00                 	db	0
  5184  01E17F  00                 	db	0
  5185  01E180  00                 	db	0
  5186  01E181  00                 	db	0
  5187  01E182  00                 	db	0
  5188  01E183  00                 	db	0
  5189  01E184  00                 	db	0
  5190  01E185  00                 	db	0
  5191  01E186  00                 	db	0
  5192  01E187  00                 	db	0
  5193  01E188  00                 	db	0
  5194  01E189  00                 	db	0
  5195  01E18A  00                 	db	0
  5196  01E18B  00                 	db	0
  5197  01E18C  00                 	db	0
  5198  01E18D  00                 	db	0
  5199  01E18E  00                 	db	0
  5200  01E18F  00                 	db	0
  5201  01E190  00                 	db	0
  5202  01E191  00                 	db	0
  5203  01E192  00                 	db	0
  5204  01E193  00                 	db	0
  5205  01E194  00                 	db	0
  5206  01E195  00                 	db	0
  5207  01E196  00                 	db	0
  5208  01E197  00                 	db	0
  5209  01E198  00                 	db	0
  5210  01E199  00                 	db	0
  5211  01E19A  00                 	db	0
  5212  01E19B  00                 	db	0
  5213  01E19C  00                 	db	0
  5214  01E19D  00                 	db	0
  5215  01E19E  00                 	db	0
  5216  01E19F  00                 	db	0
  5217  01E1A0  00                 	db	0
  5218  01E1A1  00                 	db	0
  5219  01E1A2  00                 	db	0
  5220  01E1A3  00                 	db	0
  5221  01E1A4  00                 	db	0
  5222  01E1A5  00                 	db	0
  5223  01E1A6  00                 	db	0
  5224  01E1A7  00                 	db	0
  5225  01E1A8  00                 	db	0
  5226  01E1A9  00                 	db	0
  5227  01E1AA  00                 	db	0
  5228  01E1AB  00                 	db	0
  5229  01E1AC  00                 	db	0
  5230  01E1AD  00                 	db	0
  5231  01E1AE  00                 	db	0
  5232  01E1AF  00                 	db	0
  5233  01E1B0  00                 	db	0
  5234  01E1B1  00                 	db	0
  5235  01E1B2  00                 	db	0
  5236  01E1B3  00                 	db	0
  5237  01E1B4  00                 	db	0
  5238  01E1B5  00                 	db	0
  5239  01E1B6  00                 	db	0
  5240  01E1B7  00                 	db	0
  5241  01E1B8  00                 	db	0
  5242  01E1B9  00                 	db	0
  5243  01E1BA  00                 	db	0
  5244  01E1BB  00                 	db	0
  5245  01E1BC  00                 	db	0
  5246  01E1BD  00                 	db	0
  5247  01E1BE  00                 	db	0
  5248  01E1BF  00                 	db	0
  5249  01E1C0  00                 	db	0
  5250  01E1C1  00                 	db	0
  5251  01E1C2  00                 	db	0
  5252  01E1C3  00                 	db	0
  5253  01E1C4  00                 	db	0
  5254  01E1C5  00                 	db	0
  5255  01E1C6  00                 	db	0
  5256  01E1C7  00                 	db	0
  5257  01E1C8  00                 	db	0
  5258  01E1C9  00                 	db	0
  5259  01E1CA  00                 	db	0
  5260  01E1CB  00                 	db	0
  5261  01E1CC  00                 	db	0
  5262  01E1CD  00                 	db	0
  5263  01E1CE  00                 	db	0
  5264  01E1CF  00                 	db	0
  5265  01E1D0  00                 	db	0
  5266  01E1D1  00                 	db	0
  5267  01E1D2  00                 	db	0
  5268  01E1D3  00                 	db	0
  5269  01E1D4  00                 	db	0
  5270  01E1D5  00                 	db	0
  5271  01E1D6  00                 	db	0
  5272  01E1D7  00                 	db	0
  5273  01E1D8  00                 	db	0
  5274  01E1D9  00                 	db	0
  5275  01E1DA  00                 	db	0
  5276  01E1DB  00                 	db	0
  5277  01E1DC  00                 	db	0
  5278  01E1DD  00                 	db	0
  5279  01E1DE  00                 	db	0
  5280  01E1DF  00                 	db	0
  5281  01E1E0  00                 	db	0
  5282  01E1E1  00                 	db	0
  5283  01E1E2  00                 	db	0
  5284  01E1E3  00                 	db	0
  5285  01E1E4  00                 	db	0
  5286  01E1E5  00                 	db	0
  5287  01E1E6  00                 	db	0
  5288  01E1E7  00                 	db	0
  5289  01E1E8  00                 	db	0
  5290  01E1E9  00                 	db	0
  5291  01E1EA  00                 	db	0
  5292  01E1EB  00                 	db	0
  5293  01E1EC  00                 	db	0
  5294  01E1ED  00                 	db	0
  5295  01E1EE  00                 	db	0
  5296  01E1EF  00                 	db	0
  5297  01E1F0  00                 	db	0
  5298  01E1F1  00                 	db	0
  5299  01E1F2  00                 	db	0
  5300  01E1F3  00                 	db	0
  5301  01E1F4  00                 	db	0
  5302  01E1F5  00                 	db	0
  5303  01E1F6  00                 	db	0
  5304  01E1F7  00                 	db	0
  5305  01E1F8  00                 	db	0
  5306  01E1F9  00                 	db	0
  5307  01E1FA  00                 	db	0
  5308  01E1FB  00                 	db	0
  5309  01E1FC  00                 	db	0
  5310  01E1FD  00                 	db	0
  5311  01E1FE  00                 	db	0
  5312  01E1FF  00                 	db	0
  5313  01E200  00                 	db	0
  5314  01E201  00                 	db	0
  5315  01E202  00                 	db	0
  5316  01E203  00                 	db	0
  5317  01E204  00                 	db	0
  5318  01E205  00                 	db	0
  5319  01E206  00                 	db	0
  5320  01E207  00                 	db	0
  5321  01E208  00                 	db	0
  5322  01E209  00                 	db	0
  5323  01E20A  00                 	db	0
  5324  01E20B  00                 	db	0
  5325  01E20C  00                 	db	0
  5326  01E20D  00                 	db	0
  5327  01E20E  00                 	db	0
  5328  01E20F  00                 	db	0
  5329  01E210  00                 	db	0
  5330  01E211  00                 	db	0
  5331  01E212  00                 	db	0
  5332  01E213  00                 	db	0
  5333  01E214  00                 	db	0
  5334  01E215  00                 	db	0
  5335  01E216  00                 	db	0
  5336  01E217  00                 	db	0
  5337  01E218  00                 	db	0
  5338  01E219  00                 	db	0
  5339  01E21A  00                 	db	0
  5340  01E21B  00                 	db	0
  5341  01E21C  00                 	db	0
  5342  01E21D  00                 	db	0
  5343  01E21E  00                 	db	0
  5344  01E21F  00                 	db	0
  5345  01E220  00                 	db	0
  5346  01E221  00                 	db	0
  5347  01E222  00                 	db	0
  5348  01E223  00                 	db	0
  5349  01E224  00                 	db	0
  5350  01E225  00                 	db	0
  5351  01E226  00                 	db	0
  5352  01E227  00                 	db	0
  5353  01E228  00                 	db	0
  5354  01E229  00                 	db	0
  5355  01E22A  00                 	db	0
  5356  01E22B  00                 	db	0
  5357  01E22C  00                 	db	0
  5358  01E22D  00                 	db	0
  5359  01E22E  00                 	db	0
  5360  01E22F  00                 	db	0
  5361  01E230  00                 	db	0
  5362  01E231  00                 	db	0
  5363  01E232  00                 	db	0
  5364  01E233  00                 	db	0
  5365  01E234  00                 	db	0
  5366  01E235  00                 	db	0
  5367  01E236  00                 	db	0
  5368  01E237  00                 	db	0
  5369  01E238  00                 	db	0
  5370  01E239  00                 	db	0
  5371  01E23A  00                 	db	0
  5372  01E23B  00                 	db	0
  5373  01E23C  00                 	db	0
  5374  01E23D  00                 	db	0
  5375  01E23E  00                 	db	0
  5376  01E23F  00                 	db	0
  5377  01E240  00                 	db	0
  5378  01E241  00                 	db	0
  5379  01E242  00                 	db	0
  5380  01E243  00                 	db	0
  5381  01E244  00                 	db	0
  5382  01E245  00                 	db	0
  5383  01E246  00                 	db	0
  5384  01E247  00                 	db	0
  5385  01E248  00                 	db	0
  5386  01E249  00                 	db	0
  5387  01E24A  00                 	db	0
  5388  01E24B  00                 	db	0
  5389  01E24C  00                 	db	0
  5390  01E24D  00                 	db	0
  5391  01E24E  00                 	db	0
  5392  01E24F  00                 	db	0
  5393  01E250  00                 	db	0
  5394  01E251  00                 	db	0
  5395  01E252  00                 	db	0
  5396  01E253  00                 	db	0
  5397  01E254  00                 	db	0
  5398  01E255  00                 	db	0
  5399  01E256  00                 	db	0
  5400  01E257  00                 	db	0
  5401  01E258  00                 	db	0
  5402  01E259  00                 	db	0
  5403  01E25A  00                 	db	0
  5404  01E25B  00                 	db	0
  5405  01E25C  00                 	db	0
  5406  01E25D  00                 	db	0
  5407  01E25E  00                 	db	0
  5408  01E25F  00                 	db	0
  5409  01E260  00                 	db	0
  5410  01E261  00                 	db	0
  5411  01E262  00                 	db	0
  5412  01E263  00                 	db	0
  5413  01E264  00                 	db	0
  5414  01E265  00                 	db	0
  5415  01E266  00                 	db	0
  5416  01E267  00                 	db	0
  5417  01E268  00                 	db	0
  5418  01E269  00                 	db	0
  5419  01E26A  00                 	db	0
  5420  01E26B  00                 	db	0
  5421  01E26C  00                 	db	0
  5422  01E26D  00                 	db	0
  5423  01E26E  00                 	db	0
  5424  01E26F  00                 	db	0
  5425  01E270  00                 	db	0
  5426  01E271  00                 	db	0
  5427  01E272  00                 	db	0
  5428  01E273  00                 	db	0
  5429  01E274  00                 	db	0
  5430  01E275  00                 	db	0
  5431  01E276  00                 	db	0
  5432  01E277  00                 	db	0
  5433  01E278  00                 	db	0
  5434  01E279  00                 	db	0
  5435  01E27A  00                 	db	0
  5436  01E27B  00                 	db	0
  5437  01E27C  00                 	db	0
  5438  01E27D  00                 	db	0
  5439  01E27E  00                 	db	0
  5440  01E27F  00                 	db	0
  5441  01E280  00                 	db	0
  5442  01E281  00                 	db	0
  5443  01E282  00                 	db	0
  5444  01E283  00                 	db	0
  5445  01E284  00                 	db	0
  5446  01E285  00                 	db	0
  5447  01E286  00                 	db	0
  5448  01E287  00                 	db	0
  5449  01E288  00                 	db	0
  5450  01E289  00                 	db	0
  5451  01E28A  00                 	db	0
  5452  01E28B  00                 	db	0
  5453  01E28C  00                 	db	0
  5454  01E28D  00                 	db	0
  5455  01E28E  00                 	db	0
  5456  01E28F  00                 	db	0
  5457  01E290  00                 	db	0
  5458  01E291  00                 	db	0
  5459  01E292  00                 	db	0
  5460  01E293  00                 	db	0
  5461  01E294  00                 	db	0
  5462  01E295  00                 	db	0
  5463  01E296  00                 	db	0
  5464  01E297  00                 	db	0
  5465  01E298  00                 	db	0
  5466  01E299  00                 	db	0
  5467  01E29A  00                 	db	0
  5468  01E29B  00                 	db	0
  5469  01E29C  00                 	db	0
  5470  01E29D  00                 	db	0
  5471  01E29E  00                 	db	0
  5472  01E29F  00                 	db	0
  5473  01E2A0  00                 	db	0
  5474  01E2A1  00                 	db	0
  5475  01E2A2  00                 	db	0
  5476  01E2A3  00                 	db	0
  5477  01E2A4  00                 	db	0
  5478  01E2A5  00                 	db	0
  5479  01E2A6  00                 	db	0
  5480  01E2A7  00                 	db	0
  5481  01E2A8  00                 	db	0
  5482  01E2A9  00                 	db	0
  5483  01E2AA  00                 	db	0
  5484  01E2AB  00                 	db	0
  5485  01E2AC  00                 	db	0
  5486  01E2AD  00                 	db	0
  5487  01E2AE  00                 	db	0
  5488  01E2AF  00                 	db	0
  5489  01E2B0  00                 	db	0
  5490  01E2B1  00                 	db	0
  5491  01E2B2  00                 	db	0
  5492  01E2B3  00                 	db	0
  5493  01E2B4  00                 	db	0
  5494  01E2B5  00                 	db	0
  5495  01E2B6  00                 	db	0
  5496  01E2B7  00                 	db	0
  5497  01E2B8  00                 	db	0
  5498  01E2B9  00                 	db	0
  5499  01E2BA  00                 	db	0
  5500  01E2BB  00                 	db	0
  5501  01E2BC  00                 	db	0
  5502  01E2BD  00                 	db	0
  5503  01E2BE  00                 	db	0
  5504  01E2BF  00                 	db	0
  5505  01E2C0  00                 	db	0
  5506  01E2C1  00                 	db	0
  5507  01E2C2  00                 	db	0
  5508  01E2C3  00                 	db	0
  5509  01E2C4  00                 	db	0
  5510  01E2C5  00                 	db	0
  5511  01E2C6  00                 	db	0
  5512  01E2C7  00                 	db	0
  5513  01E2C8  00                 	db	0
  5514  01E2C9  00                 	db	0
  5515  01E2CA  00                 	db	0
  5516  01E2CB  00                 	db	0
  5517  01E2CC  00                 	db	0
  5518  01E2CD  00                 	db	0
  5519  01E2CE  00                 	db	0
  5520  01E2CF  00                 	db	0
  5521  01E2D0  00                 	db	0
  5522  01E2D1  00                 	db	0
  5523  01E2D2  00                 	db	0
  5524  01E2D3  00                 	db	0
  5525  01E2D4  00                 	db	0
  5526  01E2D5  00                 	db	0
  5527  01E2D6  00                 	db	0
  5528  01E2D7  00                 	db	0
  5529  01E2D8  00                 	db	0
  5530  01E2D9  00                 	db	0
  5531  01E2DA  00                 	db	0
  5532  01E2DB  00                 	db	0
  5533  01E2DC  00                 	db	0
  5534  01E2DD  00                 	db	0
  5535  01E2DE  00                 	db	0
  5536  01E2DF  00                 	db	0
  5537  01E2E0  00                 	db	0
  5538  01E2E1  00                 	db	0
  5539  01E2E2  00                 	db	0
  5540  01E2E3  00                 	db	0
  5541  01E2E4  00                 	db	0
  5542  01E2E5  00                 	db	0
  5543  01E2E6  00                 	db	0
  5544  01E2E7  00                 	db	0
  5545  01E2E8  00                 	db	0
  5546  01E2E9  00                 	db	0
  5547  01E2EA  00                 	db	0
  5548  01E2EB  00                 	db	0
  5549  01E2EC  00                 	db	0
  5550  01E2ED  00                 	db	0
  5551  01E2EE  00                 	db	0
  5552  01E2EF  00                 	db	0
  5553  01E2F0  00                 	db	0
  5554  01E2F1  00                 	db	0
  5555  01E2F2  00                 	db	0
  5556  01E2F3  00                 	db	0
  5557  01E2F4  00                 	db	0
  5558  01E2F5  00                 	db	0
  5559  01E2F6  00                 	db	0
  5560  01E2F7  00                 	db	0
  5561  01E2F8  00                 	db	0
  5562  01E2F9  00                 	db	0
  5563  01E2FA  00                 	db	0
  5564  01E2FB  00                 	db	0
  5565  01E2FC  00                 	db	0
  5566  01E2FD  00                 	db	0
  5567  01E2FE  00                 	db	0
  5568  01E2FF  00                 	db	0
  5569  01E300  00                 	db	0
  5570  01E301  00                 	db	0
  5571  01E302  00                 	db	0
  5572  01E303  00                 	db	0
  5573  01E304  00                 	db	0
  5574  01E305  00                 	db	0
  5575  01E306  00                 	db	0
  5576  01E307  00                 	db	0
  5577  01E308  00                 	db	0
  5578  01E309  00                 	db	0
  5579  01E30A  00                 	db	0
  5580  01E30B  00                 	db	0
  5581  01E30C  00                 	db	0
  5582  01E30D  00                 	db	0
  5583  01E30E  00                 	db	0
  5584  01E30F  00                 	db	0
  5585  01E310  00                 	db	0
  5586  01E311  00                 	db	0
  5587  01E312  00                 	db	0
  5588  01E313  00                 	db	0
  5589  01E314  00                 	db	0
  5590  01E315  00                 	db	0
  5591  01E316  00                 	db	0
  5592  01E317  00                 	db	0
  5593  01E318  00                 	db	0
  5594  01E319  00                 	db	0
  5595  01E31A  00                 	db	0
  5596  01E31B  00                 	db	0
  5597  01E31C  00                 	db	0
  5598  01E31D  00                 	db	0
  5599  01E31E  00                 	db	0
  5600  01E31F  00                 	db	0
  5601  01E320  00                 	db	0
  5602  01E321  00                 	db	0
  5603  01E322  00                 	db	0
  5604  01E323  00                 	db	0
  5605  01E324  00                 	db	0
  5606  01E325  00                 	db	0
  5607  01E326  00                 	db	0
  5608  01E327  00                 	db	0
  5609  01E328  00                 	db	0
  5610  01E329  00                 	db	0
  5611  01E32A  00                 	db	0
  5612  01E32B  00                 	db	0
  5613  01E32C  00                 	db	0
  5614  01E32D  00                 	db	0
  5615  01E32E  00                 	db	0
  5616  01E32F  00                 	db	0
  5617  01E330  00                 	db	0
  5618  01E331  00                 	db	0
  5619  01E332  00                 	db	0
  5620  01E333  00                 	db	0
  5621  01E334  00                 	db	0
  5622  01E335  00                 	db	0
  5623  01E336  00                 	db	0
  5624  01E337  00                 	db	0
  5625  01E338  00                 	db	0
  5626  01E339  00                 	db	0
  5627  01E33A  00                 	db	0
  5628  01E33B  00                 	db	0
  5629  01E33C  00                 	db	0
  5630  01E33D  00                 	db	0
  5631  01E33E  00                 	db	0
  5632  01E33F  00                 	db	0
  5633  01E340  00                 	db	0
  5634  01E341  00                 	db	0
  5635  01E342  00                 	db	0
  5636  01E343  00                 	db	0
  5637  01E344  00                 	db	0
  5638  01E345  00                 	db	0
  5639  01E346  00                 	db	0
  5640  01E347  00                 	db	0
  5641  01E348  00                 	db	0
  5642  01E349  00                 	db	0
  5643  01E34A  00                 	db	0
  5644  01E34B  00                 	db	0
  5645  01E34C  00                 	db	0
  5646  01E34D  00                 	db	0
  5647  01E34E  00                 	db	0
  5648  01E34F  00                 	db	0
  5649  01E350  00                 	db	0
  5650  01E351  00                 	db	0
  5651  01E352  00                 	db	0
  5652  01E353  00                 	db	0
  5653  01E354  00                 	db	0
  5654  01E355  00                 	db	0
  5655  01E356  00                 	db	0
  5656  01E357  00                 	db	0
  5657  01E358  00                 	db	0
  5658  01E359  00                 	db	0
  5659  01E35A  00                 	db	0
  5660  01E35B  00                 	db	0
  5661  01E35C  00                 	db	0
  5662  01E35D  00                 	db	0
  5663  01E35E  00                 	db	0
  5664  01E35F  00                 	db	0
  5665  01E360  00                 	db	0
  5666  01E361  00                 	db	0
  5667  01E362  00                 	db	0
  5668  01E363  00                 	db	0
  5669  01E364  00                 	db	0
  5670  01E365  00                 	db	0
  5671  01E366  00                 	db	0
  5672  01E367  00                 	db	0
  5673  01E368  00                 	db	0
  5674  01E369  00                 	db	0
  5675  01E36A  00                 	db	0
  5676  01E36B  00                 	db	0
  5677  01E36C  00                 	db	0
  5678  01E36D  00                 	db	0
  5679  01E36E  00                 	db	0
  5680  01E36F  00                 	db	0
  5681  01E370  00                 	db	0
  5682  01E371  00                 	db	0
  5683  01E372  00                 	db	0
  5684  01E373  00                 	db	0
  5685  01E374  00                 	db	0
  5686  01E375  00                 	db	0
  5687  01E376  00                 	db	0
  5688  01E377  00                 	db	0
  5689  01E378  00                 	db	0
  5690  01E379  00                 	db	0
  5691  01E37A  00                 	db	0
  5692  01E37B  00                 	db	0
  5693  01E37C  00                 	db	0
  5694  01E37D  00                 	db	0
  5695  01E37E  00                 	db	0
  5696  01E37F  00                 	db	0
  5697  01E380  00                 	db	0
  5698  01E381  00                 	db	0
  5699  01E382  00                 	db	0
  5700  01E383  00                 	db	0
  5701  01E384  00                 	db	0
  5702  01E385  00                 	db	0
  5703  01E386  00                 	db	0
  5704  01E387  00                 	db	0
  5705  01E388  00                 	db	0
  5706  01E389  00                 	db	0
  5707  01E38A  00                 	db	0
  5708  01E38B  00                 	db	0
  5709  01E38C  00                 	db	0
  5710  01E38D  00                 	db	0
  5711  01E38E  00                 	db	0
  5712  01E38F  00                 	db	0
  5713  01E390  00                 	db	0
  5714  01E391  00                 	db	0
  5715  01E392  00                 	db	0
  5716  01E393  00                 	db	0
  5717  01E394  00                 	db	0
  5718  01E395  00                 	db	0
  5719  01E396  00                 	db	0
  5720  01E397  00                 	db	0
  5721  01E398  00                 	db	0
  5722  01E399  00                 	db	0
  5723  01E39A  00                 	db	0
  5724  01E39B  00                 	db	0
  5725  01E39C  00                 	db	0
  5726  01E39D  00                 	db	0
  5727  01E39E  00                 	db	0
  5728  01E39F  00                 	db	0
  5729  01E3A0  00                 	db	0
  5730  01E3A1  00                 	db	0
  5731  01E3A2  00                 	db	0
  5732  01E3A3  00                 	db	0
  5733  01E3A4  00                 	db	0
  5734  01E3A5  00                 	db	0
  5735  01E3A6  00                 	db	0
  5736  01E3A7  00                 	db	0
  5737  01E3A8  00                 	db	0
  5738  01E3A9  00                 	db	0
  5739  01E3AA  00                 	db	0
  5740  01E3AB  00                 	db	0
  5741  01E3AC  00                 	db	0
  5742  01E3AD  00                 	db	0
  5743  01E3AE  00                 	db	0
  5744  01E3AF  00                 	db	0
  5745  01E3B0  00                 	db	0
  5746  01E3B1  00                 	db	0
  5747  01E3B2  00                 	db	0
  5748  01E3B3  00                 	db	0
  5749  01E3B4  00                 	db	0
  5750  01E3B5  00                 	db	0
  5751  01E3B6  00                 	db	0
  5752  01E3B7  00                 	db	0
  5753  01E3B8  00                 	db	0
  5754  01E3B9  00                 	db	0
  5755  01E3BA  00                 	db	0
  5756  01E3BB  00                 	db	0
  5757  01E3BC  00                 	db	0
  5758  01E3BD  00                 	db	0
  5759  01E3BE  00                 	db	0
  5760  01E3BF  00                 	db	0
  5761  01E3C0  00                 	db	0
  5762  01E3C1  00                 	db	0
  5763  01E3C2  00                 	db	0
  5764  01E3C3  00                 	db	0
  5765  01E3C4  00                 	db	0
  5766  01E3C5  00                 	db	0
  5767  01E3C6  00                 	db	0
  5768  01E3C7  00                 	db	0
  5769  01E3C8  00                 	db	0
  5770  01E3C9  00                 	db	0
  5771  01E3CA  00                 	db	0
  5772  01E3CB  00                 	db	0
  5773  01E3CC  00                 	db	0
  5774  01E3CD  00                 	db	0
  5775  01E3CE  00                 	db	0
  5776  01E3CF  00                 	db	0
  5777  01E3D0  00                 	db	0
  5778  01E3D1  00                 	db	0
  5779  01E3D2  00                 	db	0
  5780  01E3D3  00                 	db	0
  5781  01E3D4  00                 	db	0
  5782  01E3D5  00                 	db	0
  5783  01E3D6  00                 	db	0
  5784  01E3D7  00                 	db	0
  5785  01E3D8  00                 	db	0
  5786  01E3D9  00                 	db	0
  5787  01E3DA  00                 	db	0
  5788  01E3DB  00                 	db	0
  5789  01E3DC  00                 	db	0
  5790  01E3DD  00                 	db	0
  5791  01E3DE  00                 	db	0
  5792  01E3DF  00                 	db	0
  5793  01E3E0  00                 	db	0
  5794  01E3E1  00                 	db	0
  5795  01E3E2  00                 	db	0
  5796  01E3E3  00                 	db	0
  5797  01E3E4  00                 	db	0
  5798  01E3E5  00                 	db	0
  5799  01E3E6  00                 	db	0
  5800  01E3E7  00                 	db	0
  5801  01E3E8  00                 	db	0
  5802  01E3E9  00                 	db	0
  5803  01E3EA  00                 	db	0
  5804  01E3EB  00                 	db	0
  5805  01E3EC  00                 	db	0
  5806  01E3ED  00                 	db	0
  5807  01E3EE  00                 	db	0
  5808  01E3EF  00                 	db	0
  5809  01E3F0  00                 	db	0
  5810  01E3F1  00                 	db	0
  5811  01E3F2  00                 	db	0
  5812  01E3F3  00                 	db	0
  5813  01E3F4  00                 	db	0
  5814  01E3F5  00                 	db	0
  5815  01E3F6  00                 	db	0
  5816  01E3F7  00                 	db	0
  5817  01E3F8  00                 	db	0
  5818  01E3F9  00                 	db	0
  5819  01E3FA  00                 	db	0
  5820  01E3FB  00                 	db	0
  5821  01E3FC  00                 	db	0
  5822  01E3FD  00                 	db	0
  5823  01E3FE  00                 	db	0
  5824  01E3FF  00                 	db	0
  5825  01E400  00                 	db	0
  5826  01E401  00                 	db	0
  5827  01E402  00                 	db	0
  5828  01E403  00                 	db	0
  5829  01E404  00                 	db	0
  5830  01E405  00                 	db	0
  5831  01E406  00                 	db	0
  5832  01E407  00                 	db	0
  5833  01E408  00                 	db	0
  5834  01E409  00                 	db	0
  5835  01E40A  00                 	db	0
  5836  01E40B  00                 	db	0
  5837  01E40C  00                 	db	0
  5838  01E40D  00                 	db	0
  5839  01E40E  00                 	db	0
  5840  01E40F  00                 	db	0
  5841  01E410  00                 	db	0
  5842  01E411  00                 	db	0
  5843  01E412  00                 	db	0
  5844  01E413  00                 	db	0
  5845  01E414  00                 	db	0
  5846  01E415  00                 	db	0
  5847  01E416  00                 	db	0
  5848  01E417  00                 	db	0
  5849  01E418  00                 	db	0
  5850  01E419  00                 	db	0
  5851  01E41A  00                 	db	0
  5852  01E41B  00                 	db	0
  5853  01E41C  00                 	db	0
  5854  01E41D  00                 	db	0
  5855  01E41E  00                 	db	0
  5856  01E41F  00                 	db	0
  5857  01E420  00                 	db	0
  5858  01E421  00                 	db	0
  5859  01E422  00                 	db	0
  5860  01E423  00                 	db	0
  5861  01E424  00                 	db	0
  5862  01E425  00                 	db	0
  5863  01E426  00                 	db	0
  5864  01E427  00                 	db	0
  5865  01E428  00                 	db	0
  5866  01E429  00                 	db	0
  5867  01E42A  00                 	db	0
  5868  01E42B  00                 	db	0
  5869  01E42C  00                 	db	0
  5870  01E42D  00                 	db	0
  5871  01E42E  00                 	db	0
  5872  01E42F  00                 	db	0
  5873  01E430  00                 	db	0
  5874  01E431  00                 	db	0
  5875  01E432  00                 	db	0
  5876  01E433  00                 	db	0
  5877  01E434  00                 	db	0
  5878  01E435  00                 	db	0
  5879  01E436  00                 	db	0
  5880  01E437  00                 	db	0
  5881  01E438  00                 	db	0
  5882  01E439  00                 	db	0
  5883  01E43A  00                 	db	0
  5884  01E43B  00                 	db	0
  5885  01E43C  00                 	db	0
  5886  01E43D  00                 	db	0
  5887  01E43E  00                 	db	0
  5888  01E43F  00                 	db	0
  5889  01E440  00                 	db	0
  5890  01E441  00                 	db	0
  5891  01E442  00                 	db	0
  5892  01E443  00                 	db	0
  5893  01E444  00                 	db	0
  5894  01E445  00                 	db	0
  5895  01E446  00                 	db	0
  5896  01E447  00                 	db	0
  5897  01E448  00                 	db	0
  5898  01E449  00                 	db	0
  5899  01E44A  00                 	db	0
  5900  01E44B  00                 	db	0
  5901  01E44C  00                 	db	0
  5902  01E44D  00                 	db	0
  5903  01E44E  00                 	db	0
  5904  01E44F  00                 	db	0
  5905  01E450  00                 	db	0
  5906  01E451  00                 	db	0
  5907  01E452  00                 	db	0
  5908  01E453  00                 	db	0
  5909  01E454  00                 	db	0
  5910  01E455  00                 	db	0
  5911  01E456  00                 	db	0
  5912  01E457  00                 	db	0
  5913  01E458  00                 	db	0
  5914  01E459  00                 	db	0
  5915  01E45A  00                 	db	0
  5916  01E45B  00                 	db	0
  5917  01E45C  00                 	db	0
  5918  01E45D  00                 	db	0
  5919  01E45E  00                 	db	0
  5920  01E45F  00                 	db	0
  5921  01E460  00                 	db	0
  5922  01E461  00                 	db	0
  5923  01E462  00                 	db	0
  5924  01E463  00                 	db	0
  5925  01E464  00                 	db	0
  5926  01E465  00                 	db	0
  5927  01E466  00                 	db	0
  5928  01E467  00                 	db	0
  5929  01E468  00                 	db	0
  5930  01E469  00                 	db	0
  5931  01E46A  00                 	db	0
  5932  01E46B  00                 	db	0
  5933  01E46C  00                 	db	0
  5934  01E46D  00                 	db	0
  5935  01E46E  00                 	db	0
  5936  01E46F  00                 	db	0
  5937  01E470  00                 	db	0
  5938  01E471  00                 	db	0
  5939  01E472  00                 	db	0
  5940  01E473  00                 	db	0
  5941  01E474  00                 	db	0
  5942  01E475  00                 	db	0
  5943  01E476  00                 	db	0
  5944  01E477  00                 	db	0
  5945  01E478  00                 	db	0
  5946  01E479  00                 	db	0
  5947  01E47A  00                 	db	0
  5948  01E47B  00                 	db	0
  5949  01E47C  00                 	db	0
  5950  01E47D  00                 	db	0
  5951  01E47E  00                 	db	0
  5952  01E47F  00                 	db	0
  5953  01E480  00                 	db	0
  5954  01E481  00                 	db	0
  5955  01E482  00                 	db	0
  5956  01E483  00                 	db	0
  5957  01E484  00                 	db	0
  5958  01E485  00                 	db	0
  5959  01E486  00                 	db	0
  5960  01E487  00                 	db	0
  5961  01E488  00                 	db	0
  5962  01E489  00                 	db	0
  5963  01E48A  00                 	db	0
  5964  01E48B  00                 	db	0
  5965  01E48C  00                 	db	0
  5966  01E48D  00                 	db	0
  5967  01E48E  00                 	db	0
  5968  01E48F  00                 	db	0
  5969  01E490  00                 	db	0
  5970  01E491  00                 	db	0
  5971  01E492  00                 	db	0
  5972  01E493  00                 	db	0
  5973  01E494  00                 	db	0
  5974  01E495  00                 	db	0
  5975  01E496  00                 	db	0
  5976  01E497  00                 	db	0
  5977  01E498  00                 	db	0
  5978  01E499  00                 	db	0
  5979  01E49A  00                 	db	0
  5980  01E49B  00                 	db	0
  5981  01E49C  00                 	db	0
  5982  01E49D  00                 	db	0
  5983  01E49E  00                 	db	0
  5984  01E49F  00                 	db	0
  5985  01E4A0  00                 	db	0
  5986  01E4A1  00                 	db	0
  5987  01E4A2  00                 	db	0
  5988  01E4A3  00                 	db	0
  5989  01E4A4  00                 	db	0
  5990  01E4A5  00                 	db	0
  5991  01E4A6  00                 	db	0
  5992  01E4A7  00                 	db	0
  5993  01E4A8  00                 	db	0
  5994  01E4A9  00                 	db	0
  5995  01E4AA  00                 	db	0
  5996  01E4AB  00                 	db	0
  5997  01E4AC  00                 	db	0
  5998  01E4AD  00                 	db	0
  5999  01E4AE  00                 	db	0
  6000  01E4AF  00                 	db	0
  6001  01E4B0  00                 	db	0
  6002  01E4B1  00                 	db	0
  6003  01E4B2  00                 	db	0
  6004  01E4B3  00                 	db	0
  6005  01E4B4  00                 	db	0
  6006  01E4B5  00                 	db	0
  6007  01E4B6  00                 	db	0
  6008  01E4B7  00                 	db	0
  6009  01E4B8  00                 	db	0
  6010  01E4B9  00                 	db	0
  6011  01E4BA  00                 	db	0
  6012  01E4BB  00                 	db	0
  6013  01E4BC  00                 	db	0
  6014  01E4BD  00                 	db	0
  6015  01E4BE  00                 	db	0
  6016  01E4BF  00                 	db	0
  6017  01E4C0  00                 	db	0
  6018  01E4C1  00                 	db	0
  6019  01E4C2  00                 	db	0
  6020  01E4C3  00                 	db	0
  6021  01E4C4  00                 	db	0
  6022  01E4C5  00                 	db	0
  6023  01E4C6  00                 	db	0
  6024  01E4C7  00                 	db	0
  6025  01E4C8  00                 	db	0
  6026  01E4C9  00                 	db	0
  6027  01E4CA  00                 	db	0
  6028  01E4CB  00                 	db	0
  6029  01E4CC  00                 	db	0
  6030  01E4CD  00                 	db	0
  6031  01E4CE  00                 	db	0
  6032  01E4CF  00                 	db	0
  6033  01E4D0  00                 	db	0
  6034  01E4D1  00                 	db	0
  6035  01E4D2  00                 	db	0
  6036  01E4D3  00                 	db	0
  6037  01E4D4  00                 	db	0
  6038  01E4D5  00                 	db	0
  6039  01E4D6  00                 	db	0
  6040  01E4D7  00                 	db	0
  6041  01E4D8  00                 	db	0
  6042  01E4D9  00                 	db	0
  6043  01E4DA  00                 	db	0
  6044  01E4DB  00                 	db	0
  6045  01E4DC  00                 	db	0
  6046  01E4DD  00                 	db	0
  6047  01E4DE  00                 	db	0
  6048  01E4DF  00                 	db	0
  6049  01E4E0  00                 	db	0
  6050  01E4E1  00                 	db	0
  6051  01E4E2  00                 	db	0
  6052  01E4E3  00                 	db	0
  6053  01E4E4  00                 	db	0
  6054  01E4E5  00                 	db	0
  6055  01E4E6  00                 	db	0
  6056  01E4E7  00                 	db	0
  6057  01E4E8  00                 	db	0
  6058  01E4E9  00                 	db	0
  6059  01E4EA  00                 	db	0
  6060  01E4EB  00                 	db	0
  6061  01E4EC  00                 	db	0
  6062  01E4ED  00                 	db	0
  6063  01E4EE  00                 	db	0
  6064  01E4EF  00                 	db	0
  6065  01E4F0  00                 	db	0
  6066  01E4F1  00                 	db	0
  6067  01E4F2  00                 	db	0
  6068  01E4F3  00                 	db	0
  6069  01E4F4  00                 	db	0
  6070  01E4F5  00                 	db	0
  6071  01E4F6  00                 	db	0
  6072  01E4F7  00                 	db	0
  6073  01E4F8  00                 	db	0
  6074  01E4F9  00                 	db	0
  6075  01E4FA  00                 	db	0
  6076  01E4FB  00                 	db	0
  6077  01E4FC  00                 	db	0
  6078  01E4FD  00                 	db	0
  6079  01E4FE  00                 	db	0
  6080  01E4FF  00                 	db	0
  6081  01E500  00                 	db	0
  6082  01E501  00                 	db	0
  6083  01E502  00                 	db	0
  6084  01E503  00                 	db	0
  6085  01E504  00                 	db	0
  6086  01E505  00                 	db	0
  6087  01E506  00                 	db	0
  6088  01E507  00                 	db	0
  6089  01E508  00                 	db	0
  6090  01E509  00                 	db	0
  6091  01E50A  00                 	db	0
  6092  01E50B  00                 	db	0
  6093  01E50C  00                 	db	0
  6094  01E50D  00                 	db	0
  6095  01E50E  00                 	db	0
  6096  01E50F  00                 	db	0
  6097  01E510  00                 	db	0
  6098  01E511  00                 	db	0
  6099  01E512  00                 	db	0
  6100  01E513  00                 	db	0
  6101  01E514  00                 	db	0
  6102  01E515  00                 	db	0
  6103  01E516  00                 	db	0
  6104  01E517  00                 	db	0
  6105  01E518  00                 	db	0
  6106  01E519  00                 	db	0
  6107  01E51A  00                 	db	0
  6108  01E51B  00                 	db	0
  6109  01E51C  00                 	db	0
  6110  01E51D  00                 	db	0
  6111  01E51E  00                 	db	0
  6112  01E51F  00                 	db	0
  6113  01E520  00                 	db	0
  6114  01E521  00                 	db	0
  6115  01E522  00                 	db	0
  6116  01E523  00                 	db	0
  6117  01E524  00                 	db	0
  6118  01E525  00                 	db	0
  6119  01E526  00                 	db	0
  6120  01E527  00                 	db	0
  6121  01E528  00                 	db	0
  6122  01E529  00                 	db	0
  6123  01E52A  00                 	db	0
  6124  01E52B  00                 	db	0
  6125  01E52C  00                 	db	0
  6126  01E52D  00                 	db	0
  6127  01E52E  00                 	db	0
  6128  01E52F  00                 	db	0
  6129  01E530  00                 	db	0
  6130  01E531  00                 	db	0
  6131  01E532  00                 	db	0
  6132  01E533  00                 	db	0
  6133  01E534  00                 	db	0
  6134  01E535  00                 	db	0
  6135  01E536  00                 	db	0
  6136  01E537  00                 	db	0
  6137  01E538  00                 	db	0
  6138  01E539  00                 	db	0
  6139  01E53A  00                 	db	0
  6140  01E53B  00                 	db	0
  6141  01E53C  00                 	db	0
  6142  01E53D  00                 	db	0
  6143  01E53E  00                 	db	0
  6144  01E53F  00                 	db	0
  6145  01E540  00                 	db	0
  6146  01E541  00                 	db	0
  6147  01E542  00                 	db	0
  6148  01E543  00                 	db	0
  6149  01E544  00                 	db	0
  6150  01E545  00                 	db	0
  6151  01E546  00                 	db	0
  6152  01E547  00                 	db	0
  6153  01E548  00                 	db	0
  6154  01E549  00                 	db	0
  6155  01E54A  00                 	db	0
  6156  01E54B  00                 	db	0
  6157  01E54C  00                 	db	0
  6158  01E54D  00                 	db	0
  6159  01E54E  00                 	db	0
  6160  01E54F  00                 	db	0
  6161  01E550  00                 	db	0
  6162  01E551  00                 	db	0
  6163  01E552  00                 	db	0
  6164  01E553  00                 	db	0
  6165  01E554  00                 	db	0
  6166  01E555  00                 	db	0
  6167  01E556  00                 	db	0
  6168  01E557  00                 	db	0
  6169  01E558  00                 	db	0
  6170  01E559  00                 	db	0
  6171  01E55A  00                 	db	0
  6172  01E55B  00                 	db	0
  6173  01E55C  00                 	db	0
  6174  01E55D  00                 	db	0
  6175  01E55E  00                 	db	0
  6176  01E55F  00                 	db	0
  6177  01E560  00                 	db	0
  6178  01E561  00                 	db	0
  6179  01E562  00                 	db	0
  6180  01E563  00                 	db	0
  6181  01E564  00                 	db	0
  6182  01E565  00                 	db	0
  6183  01E566  00                 	db	0
  6184  01E567  00                 	db	0
  6185  01E568  00                 	db	0
  6186  01E569  00                 	db	0
  6187  01E56A  00                 	db	0
  6188  01E56B  00                 	db	0
  6189  01E56C  00                 	db	0
  6190  01E56D  00                 	db	0
  6191  01E56E  00                 	db	0
  6192  01E56F  00                 	db	0
  6193  01E570  00                 	db	0
  6194  01E571  00                 	db	0
  6195  01E572  00                 	db	0
  6196  01E573  00                 	db	0
  6197  01E574  00                 	db	0
  6198  01E575  00                 	db	0
  6199  01E576  00                 	db	0
  6200  01E577  00                 	db	0
  6201  01E578  00                 	db	0
  6202  01E579  00                 	db	0
  6203  01E57A  00                 	db	0
  6204  01E57B  00                 	db	0
  6205  01E57C  00                 	db	0
  6206  01E57D  00                 	db	0
  6207  01E57E  00                 	db	0
  6208  01E57F  00                 	db	0
  6209  01E580  00                 	db	0
  6210  01E581  00                 	db	0
  6211  01E582  00                 	db	0
  6212  01E583  00                 	db	0
  6213  01E584  00                 	db	0
  6214  01E585  00                 	db	0
  6215  01E586  00                 	db	0
  6216  01E587  00                 	db	0
  6217  01E588  00                 	db	0
  6218  01E589  00                 	db	0
  6219  01E58A  00                 	db	0
  6220  01E58B  00                 	db	0
  6221  01E58C  00                 	db	0
  6222  01E58D  00                 	db	0
  6223  01E58E  00                 	db	0
  6224  01E58F  00                 	db	0
  6225  01E590  00                 	db	0
  6226  01E591  00                 	db	0
  6227  01E592  00                 	db	0
  6228  01E593  00                 	db	0
  6229  01E594  00                 	db	0
  6230  01E595  00                 	db	0
  6231  01E596  00                 	db	0
  6232  01E597  00                 	db	0
  6233  01E598  00                 	db	0
  6234  01E599  00                 	db	0
  6235  01E59A  00                 	db	0
  6236  01E59B  00                 	db	0
  6237  01E59C  00                 	db	0
  6238  01E59D  00                 	db	0
  6239  01E59E  00                 	db	0
  6240  01E59F  00                 	db	0
  6241  01E5A0  00                 	db	0
  6242  01E5A1  00                 	db	0
  6243  01E5A2  00                 	db	0
  6244  01E5A3  00                 	db	0
  6245  01E5A4  00                 	db	0
  6246  01E5A5  00                 	db	0
  6247  01E5A6  00                 	db	0
  6248  01E5A7  00                 	db	0
  6249  01E5A8  00                 	db	0
  6250  01E5A9  00                 	db	0
  6251  01E5AA  00                 	db	0
  6252  01E5AB  00                 	db	0
  6253  01E5AC  00                 	db	0
  6254  01E5AD  00                 	db	0
  6255  01E5AE  00                 	db	0
  6256  01E5AF  00                 	db	0
  6257  01E5B0  00                 	db	0
  6258  01E5B1  00                 	db	0
  6259  01E5B2  00                 	db	0
  6260  01E5B3  00                 	db	0
  6261  01E5B4  00                 	db	0
  6262  01E5B5  00                 	db	0
  6263  01E5B6  00                 	db	0
  6264  01E5B7  00                 	db	0
  6265  01E5B8  00                 	db	0
  6266  01E5B9  00                 	db	0
  6267  01E5BA  00                 	db	0
  6268  01E5BB  00                 	db	0
  6269  01E5BC  00                 	db	0
  6270  01E5BD  00                 	db	0
  6271  01E5BE  00                 	db	0
  6272  01E5BF  00                 	db	0
  6273  01E5C0  00                 	db	0
  6274  01E5C1  00                 	db	0
  6275  01E5C2  00                 	db	0
  6276  01E5C3  00                 	db	0
  6277  01E5C4  00                 	db	0
  6278  01E5C5  00                 	db	0
  6279  01E5C6  00                 	db	0
  6280  01E5C7  00                 	db	0
  6281  01E5C8  00                 	db	0
  6282  01E5C9  00                 	db	0
  6283  01E5CA  00                 	db	0
  6284  01E5CB  00                 	db	0
  6285  01E5CC  00                 	db	0
  6286  01E5CD  00                 	db	0
  6287  01E5CE  00                 	db	0
  6288  01E5CF  00                 	db	0
  6289  01E5D0  00                 	db	0
  6290  01E5D1  00                 	db	0
  6291  01E5D2  00                 	db	0
  6292  01E5D3  00                 	db	0
  6293  01E5D4  00                 	db	0
  6294  01E5D5  00                 	db	0
  6295  01E5D6  00                 	db	0
  6296  01E5D7  00                 	db	0
  6297  01E5D8  00                 	db	0
  6298  01E5D9  00                 	db	0
  6299  01E5DA  00                 	db	0
  6300  01E5DB  00                 	db	0
  6301  01E5DC  00                 	db	0
  6302  01E5DD  00                 	db	0
  6303  01E5DE  00                 	db	0
  6304  01E5DF  00                 	db	0
  6305  01E5E0  00                 	db	0
  6306  01E5E1  00                 	db	0
  6307  01E5E2  00                 	db	0
  6308  01E5E3  00                 	db	0
  6309  01E5E4  00                 	db	0
  6310  01E5E5  00                 	db	0
  6311  01E5E6  00                 	db	0
  6312  01E5E7  00                 	db	0
  6313  01E5E8  00                 	db	0
  6314  01E5E9  00                 	db	0
  6315  01E5EA  00                 	db	0
  6316  01E5EB  00                 	db	0
  6317  01E5EC  00                 	db	0
  6318  01E5ED  00                 	db	0
  6319  01E5EE  00                 	db	0
  6320  01E5EF  00                 	db	0
  6321  01E5F0  00                 	db	0
  6322  01E5F1  00                 	db	0
  6323  01E5F2  00                 	db	0
  6324  01E5F3  00                 	db	0
  6325  01E5F4  00                 	db	0
  6326  01E5F5  00                 	db	0
  6327  01E5F6  00                 	db	0
  6328  01E5F7  00                 	db	0
  6329  01E5F8  00                 	db	0
  6330  01E5F9  00                 	db	0
  6331  01E5FA  00                 	db	0
  6332  01E5FB  00                 	db	0
  6333  01E5FC  00                 	db	0
  6334  01E5FD  00                 	db	0
  6335  01E5FE  00                 	db	0
  6336  01E5FF  00                 	db	0
  6337  01E600  00                 	db	0
  6338  01E601  00                 	db	0
  6339  01E602  00                 	db	0
  6340  01E603  00                 	db	0
  6341  01E604  00                 	db	0
  6342  01E605  00                 	db	0
  6343  01E606  00                 	db	0
  6344  01E607  00                 	db	0
  6345  01E608  00                 	db	0
  6346  01E609  00                 	db	0
  6347  01E60A  00                 	db	0
  6348  01E60B  00                 	db	0
  6349  01E60C  00                 	db	0
  6350  01E60D  00                 	db	0
  6351  01E60E  00                 	db	0
  6352  01E60F  00                 	db	0
  6353  01E610  00                 	db	0
  6354  01E611  00                 	db	0
  6355  01E612  00                 	db	0
  6356  01E613  00                 	db	0
  6357  01E614  00                 	db	0
  6358  01E615  00                 	db	0
  6359  01E616  00                 	db	0
  6360  01E617  00                 	db	0
  6361  01E618  00                 	db	0
  6362  01E619  00                 	db	0
  6363  01E61A  00                 	db	0
  6364  01E61B  00                 	db	0
  6365  01E61C  00                 	db	0
  6366  01E61D  00                 	db	0
  6367  01E61E  00                 	db	0
  6368  01E61F  00                 	db	0
  6369  01E620  00                 	db	0
  6370  01E621  00                 	db	0
  6371  01E622  00                 	db	0
  6372  01E623  00                 	db	0
  6373  01E624  00                 	db	0
  6374  01E625  00                 	db	0
  6375  01E626  00                 	db	0
  6376  01E627  00                 	db	0
  6377  01E628  00                 	db	0
  6378  01E629  00                 	db	0
  6379  01E62A  00                 	db	0
  6380  01E62B  00                 	db	0
  6381  01E62C  00                 	db	0
  6382  01E62D  00                 	db	0
  6383  01E62E  00                 	db	0
  6384  01E62F  00                 	db	0
  6385  01E630  00                 	db	0
  6386  01E631  00                 	db	0
  6387  01E632  00                 	db	0
  6388  01E633  00                 	db	0
  6389  01E634  00                 	db	0
  6390  01E635  00                 	db	0
  6391  01E636  00                 	db	0
  6392  01E637  00                 	db	0
  6393  01E638  00                 	db	0
  6394  01E639  00                 	db	0
  6395  01E63A  00                 	db	0
  6396  01E63B  00                 	db	0
  6397  01E63C  00                 	db	0
  6398  01E63D  00                 	db	0
  6399  01E63E  00                 	db	0
  6400  01E63F  00                 	db	0
  6401  01E640  00                 	db	0
  6402  01E641  00                 	db	0
  6403  01E642  00                 	db	0
  6404  01E643  00                 	db	0
  6405  01E644  00                 	db	0
  6406  01E645  00                 	db	0
  6407  01E646  00                 	db	0
  6408  01E647  00                 	db	0
  6409  01E648  00                 	db	0
  6410  01E649  00                 	db	0
  6411  01E64A  00                 	db	0
  6412  01E64B  00                 	db	0
  6413  01E64C  00                 	db	0
  6414  01E64D  00                 	db	0
  6415  01E64E  00                 	db	0
  6416  01E64F  00                 	db	0
  6417  01E650  00                 	db	0
  6418  01E651  00                 	db	0
  6419  01E652  00                 	db	0
  6420  01E653  00                 	db	0
  6421  01E654  00                 	db	0
  6422  01E655  00                 	db	0
  6423  01E656  00                 	db	0
  6424  01E657  00                 	db	0
  6425  01E658  00                 	db	0
  6426  01E659  00                 	db	0
  6427  01E65A  00                 	db	0
  6428  01E65B  00                 	db	0
  6429  01E65C  00                 	db	0
  6430  01E65D  00                 	db	0
  6431  01E65E  00                 	db	0
  6432  01E65F  00                 	db	0
  6433  01E660  00                 	db	0
  6434  01E661  00                 	db	0
  6435  01E662  00                 	db	0
  6436  01E663  00                 	db	0
  6437  01E664  00                 	db	0
  6438  01E665  00                 	db	0
  6439  01E666  00                 	db	0
  6440  01E667  00                 	db	0
  6441  01E668  00                 	db	0
  6442  01E669  00                 	db	0
  6443  01E66A  00                 	db	0
  6444  01E66B  00                 	db	0
  6445  01E66C  00                 	db	0
  6446  01E66D  00                 	db	0
  6447  01E66E  00                 	db	0
  6448  01E66F  00                 	db	0
  6449  01E670  00                 	db	0
  6450  01E671  00                 	db	0
  6451  01E672  00                 	db	0
  6452  01E673  00                 	db	0
  6453  01E674  00                 	db	0
  6454  01E675  00                 	db	0
  6455  01E676  00                 	db	0
  6456  01E677  00                 	db	0
  6457  01E678  00                 	db	0
  6458  01E679  00                 	db	0
  6459  01E67A  00                 	db	0
  6460  01E67B  00                 	db	0
  6461  01E67C  00                 	db	0
  6462  01E67D  00                 	db	0
  6463  01E67E  00                 	db	0
  6464  01E67F  00                 	db	0
  6465  01E680  00                 	db	0
  6466  01E681  00                 	db	0
  6467  01E682  00                 	db	0
  6468  01E683  00                 	db	0
  6469  01E684  00                 	db	0
  6470  01E685  00                 	db	0
  6471  01E686  00                 	db	0
  6472  01E687  00                 	db	0
  6473  01E688  00                 	db	0
  6474  01E689  00                 	db	0
  6475  01E68A  00                 	db	0
  6476  01E68B  00                 	db	0
  6477  01E68C  00                 	db	0
  6478  01E68D  00                 	db	0
  6479  01E68E  00                 	db	0
  6480  01E68F  00                 	db	0
  6481  01E690  00                 	db	0
  6482  01E691  00                 	db	0
  6483  01E692  00                 	db	0
  6484  01E693  00                 	db	0
  6485  01E694  00                 	db	0
  6486  01E695  00                 	db	0
  6487  01E696  00                 	db	0
  6488  01E697  00                 	db	0
  6489  01E698  00                 	db	0
  6490  01E699  00                 	db	0
  6491  01E69A  00                 	db	0
  6492  01E69B  00                 	db	0
  6493  01E69C  00                 	db	0
  6494  01E69D  00                 	db	0
  6495  01E69E  00                 	db	0
  6496  01E69F  00                 	db	0
  6497  01E6A0  00                 	db	0
  6498  01E6A1  00                 	db	0
  6499  01E6A2  00                 	db	0
  6500  01E6A3  00                 	db	0
  6501  01E6A4  00                 	db	0
  6502  01E6A5  00                 	db	0
  6503  01E6A6  00                 	db	0
  6504  01E6A7  00                 	db	0
  6505  01E6A8  00                 	db	0
  6506  01E6A9  00                 	db	0
  6507  01E6AA  00                 	db	0
  6508  01E6AB  00                 	db	0
  6509  01E6AC  00                 	db	0
  6510  01E6AD  00                 	db	0
  6511  01E6AE  00                 	db	0
  6512  01E6AF  00                 	db	0
  6513  01E6B0  00                 	db	0
  6514  01E6B1  00                 	db	0
  6515  01E6B2  00                 	db	0
  6516  01E6B3  00                 	db	0
  6517  01E6B4  00                 	db	0
  6518  01E6B5  00                 	db	0
  6519  01E6B6  00                 	db	0
  6520  01E6B7  00                 	db	0
  6521  01E6B8  00                 	db	0
  6522  01E6B9  00                 	db	0
  6523  01E6BA  00                 	db	0
  6524  01E6BB  00                 	db	0
  6525  01E6BC  00                 	db	0
  6526  01E6BD  00                 	db	0
  6527  01E6BE  00                 	db	0
  6528  01E6BF  00                 	db	0
  6529  01E6C0  00                 	db	0
  6530  01E6C1  00                 	db	0
  6531  01E6C2  00                 	db	0
  6532  01E6C3  00                 	db	0
  6533  01E6C4  00                 	db	0
  6534  01E6C5  00                 	db	0
  6535  01E6C6  00                 	db	0
  6536  01E6C7  00                 	db	0
  6537  01E6C8  00                 	db	0
  6538  01E6C9  00                 	db	0
  6539  01E6CA  00                 	db	0
  6540  01E6CB  00                 	db	0
  6541  01E6CC  00                 	db	0
  6542  01E6CD  00                 	db	0
  6543  01E6CE  00                 	db	0
  6544  01E6CF  00                 	db	0
  6545  01E6D0  00                 	db	0
  6546  01E6D1  00                 	db	0
  6547  01E6D2  00                 	db	0
  6548  01E6D3  00                 	db	0
  6549  01E6D4  00                 	db	0
  6550  01E6D5  00                 	db	0
  6551  01E6D6  00                 	db	0
  6552  01E6D7  00                 	db	0
  6553  01E6D8  00                 	db	0
  6554  01E6D9  00                 	db	0
  6555  01E6DA  00                 	db	0
  6556  01E6DB  00                 	db	0
  6557  01E6DC  00                 	db	0
  6558  01E6DD  00                 	db	0
  6559  01E6DE  00                 	db	0
  6560  01E6DF  00                 	db	0
  6561  01E6E0  00                 	db	0
  6562  01E6E1  00                 	db	0
  6563  01E6E2  00                 	db	0
  6564  01E6E3  00                 	db	0
  6565  01E6E4  00                 	db	0
  6566  01E6E5  00                 	db	0
  6567  01E6E6  00                 	db	0
  6568  01E6E7  00                 	db	0
  6569  01E6E8  00                 	db	0
  6570  01E6E9  00                 	db	0
  6571  01E6EA  00                 	db	0
  6572  01E6EB  00                 	db	0
  6573  01E6EC  00                 	db	0
  6574  01E6ED  00                 	db	0
  6575  01E6EE  00                 	db	0
  6576  01E6EF  00                 	db	0
  6577  01E6F0  00                 	db	0
  6578  01E6F1  00                 	db	0
  6579  01E6F2  00                 	db	0
  6580  01E6F3  00                 	db	0
  6581  01E6F4  00                 	db	0
  6582  01E6F5  00                 	db	0
  6583  01E6F6  00                 	db	0
  6584  01E6F7  00                 	db	0
  6585  01E6F8  00                 	db	0
  6586  01E6F9  00                 	db	0
  6587  01E6FA  00                 	db	0
  6588  01E6FB  00                 	db	0
  6589  01E6FC  00                 	db	0
  6590  01E6FD  00                 	db	0
  6591  01E6FE  00                 	db	0
  6592  01E6FF  00                 	db	0
  6593  01E700  00                 	db	0
  6594  01E701  00                 	db	0
  6595  01E702  00                 	db	0
  6596  01E703  00                 	db	0
  6597  01E704  00                 	db	0
  6598  01E705  00                 	db	0
  6599  01E706  00                 	db	0
  6600  01E707  00                 	db	0
  6601  01E708  00                 	db	0
  6602  01E709  00                 	db	0
  6603  01E70A  00                 	db	0
  6604  01E70B  00                 	db	0
  6605  01E70C  00                 	db	0
  6606  01E70D  00                 	db	0
  6607  01E70E  00                 	db	0
  6608  01E70F  00                 	db	0
  6609  01E710  00                 	db	0
  6610  01E711  00                 	db	0
  6611  01E712  00                 	db	0
  6612  01E713  00                 	db	0
  6613  01E714  00                 	db	0
  6614  01E715  00                 	db	0
  6615  01E716  00                 	db	0
  6616  01E717  00                 	db	0
  6617  01E718  00                 	db	0
  6618  01E719  00                 	db	0
  6619  01E71A  00                 	db	0
  6620  01E71B  00                 	db	0
  6621  01E71C  00                 	db	0
  6622  01E71D  00                 	db	0
  6623  01E71E  00                 	db	0
  6624  01E71F  00                 	db	0
  6625  01E720  00                 	db	0
  6626  01E721  00                 	db	0
  6627  01E722  00                 	db	0
  6628  01E723  00                 	db	0
  6629  01E724  00                 	db	0
  6630  01E725  00                 	db	0
  6631  01E726  00                 	db	0
  6632  01E727  00                 	db	0
  6633  01E728  00                 	db	0
  6634  01E729  00                 	db	0
  6635  01E72A  00                 	db	0
  6636  01E72B  00                 	db	0
  6637  01E72C  00                 	db	0
  6638  01E72D  00                 	db	0
  6639  01E72E  00                 	db	0
  6640  01E72F  00                 	db	0
  6641  01E730  00                 	db	0
  6642  01E731  00                 	db	0
  6643  01E732  00                 	db	0
  6644  01E733  00                 	db	0
  6645  01E734  00                 	db	0
  6646  01E735  00                 	db	0
  6647  01E736  00                 	db	0
  6648  01E737  00                 	db	0
  6649  01E738  00                 	db	0
  6650  01E739  00                 	db	0
  6651  01E73A  00                 	db	0
  6652  01E73B  00                 	db	0
  6653  01E73C  00                 	db	0
  6654  01E73D  00                 	db	0
  6655  01E73E  00                 	db	0
  6656  01E73F  00                 	db	0
  6657  01E740  00                 	db	0
  6658  01E741  00                 	db	0
  6659  01E742  00                 	db	0
  6660  01E743  00                 	db	0
  6661  01E744  00                 	db	0
  6662  01E745  00                 	db	0
  6663  01E746  00                 	db	0
  6664  01E747  00                 	db	0
  6665  01E748  00                 	db	0
  6666  01E749  00                 	db	0
  6667  01E74A  00                 	db	0
  6668  01E74B  00                 	db	0
  6669  01E74C  00                 	db	0
  6670  01E74D  00                 	db	0
  6671  01E74E  00                 	db	0
  6672  01E74F  00                 	db	0
  6673  01E750  00                 	db	0
  6674  01E751  00                 	db	0
  6675  01E752  00                 	db	0
  6676  01E753  00                 	db	0
  6677  01E754  00                 	db	0
  6678  01E755  00                 	db	0
  6679  01E756  00                 	db	0
  6680  01E757  00                 	db	0
  6681  01E758  00                 	db	0
  6682  01E759  00                 	db	0
  6683  01E75A  00                 	db	0
  6684  01E75B  00                 	db	0
  6685  01E75C  00                 	db	0
  6686  01E75D  00                 	db	0
  6687  01E75E  00                 	db	0
  6688  01E75F  00                 	db	0
  6689  01E760  00                 	db	0
  6690  01E761  00                 	db	0
  6691  01E762  00                 	db	0
  6692  01E763  00                 	db	0
  6693  01E764  00                 	db	0
  6694  01E765  00                 	db	0
  6695  01E766  00                 	db	0
  6696  01E767  00                 	db	0
  6697  01E768  00                 	db	0
  6698  01E769  00                 	db	0
  6699  01E76A  00                 	db	0
  6700  01E76B  00                 	db	0
  6701  01E76C  00                 	db	0
  6702  01E76D  00                 	db	0
  6703  01E76E  00                 	db	0
  6704  01E76F  00                 	db	0
  6705  01E770  00                 	db	0
  6706  01E771  00                 	db	0
  6707  01E772  00                 	db	0
  6708  01E773  00                 	db	0
  6709  01E774  00                 	db	0
  6710  01E775  00                 	db	0
  6711  01E776  00                 	db	0
  6712  01E777  00                 	db	0
  6713  01E778  00                 	db	0
  6714  01E779  00                 	db	0
  6715  01E77A  00                 	db	0
  6716  01E77B  00                 	db	0
  6717  01E77C  00                 	db	0
  6718  01E77D  00                 	db	0
  6719  01E77E  00                 	db	0
  6720  01E77F  00                 	db	0
  6721  01E780  00                 	db	0
  6722  01E781  00                 	db	0
  6723  01E782  00                 	db	0
  6724  01E783  00                 	db	0
  6725  01E784  00                 	db	0
  6726  01E785  00                 	db	0
  6727  01E786  00                 	db	0
  6728  01E787  00                 	db	0
  6729  01E788  00                 	db	0
  6730  01E789  00                 	db	0
  6731  01E78A  00                 	db	0
  6732  01E78B  00                 	db	0
  6733  01E78C  00                 	db	0
  6734  01E78D  00                 	db	0
  6735  01E78E  00                 	db	0
  6736  01E78F  00                 	db	0
  6737  01E790  00                 	db	0
  6738  01E791  00                 	db	0
  6739  01E792  00                 	db	0
  6740  01E793  00                 	db	0
  6741  01E794  00                 	db	0
  6742  01E795  00                 	db	0
  6743  01E796  00                 	db	0
  6744  01E797  00                 	db	0
  6745  01E798  00                 	db	0
  6746  01E799  00                 	db	0
  6747  01E79A  00                 	db	0
  6748  01E79B  00                 	db	0
  6749  01E79C  00                 	db	0
  6750  01E79D  00                 	db	0
  6751  01E79E  00                 	db	0
  6752  01E79F  00                 	db	0
  6753  01E7A0  00                 	db	0
  6754  01E7A1  00                 	db	0
  6755  01E7A2  00                 	db	0
  6756  01E7A3  00                 	db	0
  6757  01E7A4  00                 	db	0
  6758  01E7A5  00                 	db	0
  6759  01E7A6  00                 	db	0
  6760  01E7A7  00                 	db	0
  6761  01E7A8  00                 	db	0
  6762  01E7A9  00                 	db	0
  6763  01E7AA  00                 	db	0
  6764  01E7AB  00                 	db	0
  6765  01E7AC  00                 	db	0
  6766  01E7AD  00                 	db	0
  6767  01E7AE  00                 	db	0
  6768  01E7AF  00                 	db	0
  6769  01E7B0  00                 	db	0
  6770  01E7B1  00                 	db	0
  6771  01E7B2  00                 	db	0
  6772  01E7B3  00                 	db	0
  6773  01E7B4  00                 	db	0
  6774  01E7B5  00                 	db	0
  6775  01E7B6  00                 	db	0
  6776  01E7B7  00                 	db	0
  6777  01E7B8  00                 	db	0
  6778  01E7B9  00                 	db	0
  6779  01E7BA  00                 	db	0
  6780  01E7BB  00                 	db	0
  6781  01E7BC  00                 	db	0
  6782  01E7BD  00                 	db	0
  6783  01E7BE  00                 	db	0
  6784  01E7BF  00                 	db	0
  6785  01E7C0  00                 	db	0
  6786  01E7C1  00                 	db	0
  6787  01E7C2  00                 	db	0
  6788  01E7C3  00                 	db	0
  6789  01E7C4  00                 	db	0
  6790  01E7C5  00                 	db	0
  6791  01E7C6  00                 	db	0
  6792  01E7C7  00                 	db	0
  6793  01E7C8  00                 	db	0
  6794  01E7C9  00                 	db	0
  6795  01E7CA  00                 	db	0
  6796  01E7CB  00                 	db	0
  6797  01E7CC  00                 	db	0
  6798  01E7CD  00                 	db	0
  6799  01E7CE  00                 	db	0
  6800  01E7CF  00                 	db	0
  6801  01E7D0  00                 	db	0
  6802  01E7D1  00                 	db	0
  6803  01E7D2  00                 	db	0
  6804  01E7D3  00                 	db	0
  6805  01E7D4  00                 	db	0
  6806  01E7D5  00                 	db	0
  6807  01E7D6  00                 	db	0
  6808  01E7D7  00                 	db	0
  6809  01E7D8  00                 	db	0
  6810  01E7D9  00                 	db	0
  6811  01E7DA  00                 	db	0
  6812  01E7DB  00                 	db	0
  6813  01E7DC  00                 	db	0
  6814  01E7DD  00                 	db	0
  6815  01E7DE  00                 	db	0
  6816  01E7DF  00                 	db	0
  6817  01E7E0  00                 	db	0
  6818  01E7E1  00                 	db	0
  6819  01E7E2  00                 	db	0
  6820  01E7E3  00                 	db	0
  6821  01E7E4  00                 	db	0
  6822  01E7E5  00                 	db	0
  6823  01E7E6  00                 	db	0
  6824  01E7E7  00                 	db	0
  6825  01E7E8  00                 	db	0
  6826  01E7E9  00                 	db	0
  6827  01E7EA  00                 	db	0
  6828  01E7EB  00                 	db	0
  6829  01E7EC  00                 	db	0
  6830  01E7ED  00                 	db	0
  6831  01E7EE  00                 	db	0
  6832  01E7EF  00                 	db	0
  6833  01E7F0  00                 	db	0
  6834  01E7F1  00                 	db	0
  6835  01E7F2  00                 	db	0
  6836  01E7F3  00                 	db	0
  6837  01E7F4  00                 	db	0
  6838  01E7F5  00                 	db	0
  6839  01E7F6  00                 	db	0
  6840  01E7F7  00                 	db	0
  6841  01E7F8  00                 	db	0
  6842  01E7F9  00                 	db	0
  6843  01E7FA  00                 	db	0
  6844  01E7FB  00                 	db	0
  6845  01E7FC  00                 	db	0
  6846  01E7FD  00                 	db	0
  6847  01E7FE  00                 	db	0
  6848  01E7FF  00                 	db	0
  6849  01E800  00                 	db	0
  6850  01E801  00                 	db	0
  6851  01E802  00                 	db	0
  6852  01E803  00                 	db	0
  6853  01E804  00                 	db	0
  6854  01E805  00                 	db	0
  6855  01E806  00                 	db	0
  6856  01E807  00                 	db	0
  6857  01E808  00                 	db	0
  6858  01E809  00                 	db	0
  6859  01E80A  00                 	db	0
  6860  01E80B  00                 	db	0
  6861  01E80C  00                 	db	0
  6862  01E80D  00                 	db	0
  6863  01E80E  00                 	db	0
  6864  01E80F  00                 	db	0
  6865  01E810  00                 	db	0
  6866  01E811  00                 	db	0
  6867  01E812  00                 	db	0
  6868  01E813  00                 	db	0
  6869  01E814  00                 	db	0
  6870  01E815  00                 	db	0
  6871  01E816  00                 	db	0
  6872  01E817  00                 	db	0
  6873  01E818  00                 	db	0
  6874  01E819  00                 	db	0
  6875  01E81A  00                 	db	0
  6876  01E81B  00                 	db	0
  6877  01E81C  00                 	db	0
  6878  01E81D  00                 	db	0
  6879  01E81E  00                 	db	0
  6880  01E81F  00                 	db	0
  6881  01E820  00                 	db	0
  6882  01E821  00                 	db	0
  6883  01E822  00                 	db	0
  6884  01E823  00                 	db	0
  6885  01E824  00                 	db	0
  6886  01E825  00                 	db	0
  6887  01E826  00                 	db	0
  6888  01E827  00                 	db	0
  6889  01E828  00                 	db	0
  6890  01E829  00                 	db	0
  6891  01E82A  00                 	db	0
  6892  01E82B  00                 	db	0
  6893  01E82C  00                 	db	0
  6894  01E82D  00                 	db	0
  6895  01E82E  00                 	db	0
  6896  01E82F  00                 	db	0
  6897  01E830  00                 	db	0
  6898  01E831  00                 	db	0
  6899  01E832  00                 	db	0
  6900  01E833  00                 	db	0
  6901  01E834  00                 	db	0
  6902  01E835  00                 	db	0
  6903  01E836  00                 	db	0
  6904  01E837  00                 	db	0
  6905  01E838  00                 	db	0
  6906  01E839  00                 	db	0
  6907  01E83A  00                 	db	0
  6908  01E83B  00                 	db	0
  6909  01E83C  00                 	db	0
  6910  01E83D  00                 	db	0
  6911  01E83E  00                 	db	0
  6912  01E83F  00                 	db	0
  6913  01E840  00                 	db	0
  6914  01E841  00                 	db	0
  6915  01E842  00                 	db	0
  6916  01E843  00                 	db	0
  6917  01E844  00                 	db	0
  6918  01E845  00                 	db	0
  6919  01E846  00                 	db	0
  6920  01E847  00                 	db	0
  6921  01E848  00                 	db	0
  6922  01E849  00                 	db	0
  6923  01E84A  00                 	db	0
  6924  01E84B  00                 	db	0
  6925  01E84C  00                 	db	0
  6926  01E84D  00                 	db	0
  6927  01E84E  00                 	db	0
  6928  01E84F  00                 	db	0
  6929  01E850  00                 	db	0
  6930  01E851  00                 	db	0
  6931  01E852  00                 	db	0
  6932  01E853  00                 	db	0
  6933  01E854  00                 	db	0
  6934  01E855  00                 	db	0
  6935  01E856  00                 	db	0
  6936  01E857  00                 	db	0
  6937  01E858  00                 	db	0
  6938  01E859  00                 	db	0
  6939  01E85A  00                 	db	0
  6940  01E85B  00                 	db	0
  6941  01E85C  00                 	db	0
  6942  01E85D  00                 	db	0
  6943  01E85E  00                 	db	0
  6944  01E85F  00                 	db	0
  6945  01E860  00                 	db	0
  6946  01E861  00                 	db	0
  6947  01E862  00                 	db	0
  6948  01E863  00                 	db	0
  6949  01E864  00                 	db	0
  6950  01E865  00                 	db	0
  6951  01E866  00                 	db	0
  6952  01E867  00                 	db	0
  6953  01E868  00                 	db	0
  6954  01E869  00                 	db	0
  6955  01E86A  00                 	db	0
  6956  01E86B  00                 	db	0
  6957  01E86C  00                 	db	0
  6958  01E86D  00                 	db	0
  6959  01E86E  00                 	db	0
  6960  01E86F  00                 	db	0
  6961  01E870  00                 	db	0
  6962  01E871  00                 	db	0
  6963  01E872  00                 	db	0
  6964  01E873  00                 	db	0
  6965  01E874  00                 	db	0
  6966  01E875  00                 	db	0
  6967  01E876  00                 	db	0
  6968  01E877  00                 	db	0
  6969  01E878  00                 	db	0
  6970  01E879  00                 	db	0
  6971  01E87A  00                 	db	0
  6972  01E87B  00                 	db	0
  6973  01E87C  00                 	db	0
  6974  01E87D  00                 	db	0
  6975  01E87E  00                 	db	0
  6976  01E87F  00                 	db	0
  6977  01E880  00                 	db	0
  6978  01E881  00                 	db	0
  6979  01E882  00                 	db	0
  6980  01E883  00                 	db	0
  6981  01E884  00                 	db	0
  6982  01E885  00                 	db	0
  6983  01E886  00                 	db	0
  6984  01E887  00                 	db	0
  6985  01E888  00                 	db	0
  6986  01E889  00                 	db	0
  6987  01E88A  00                 	db	0
  6988  01E88B  00                 	db	0
  6989  01E88C  00                 	db	0
  6990  01E88D  00                 	db	0
  6991  01E88E  00                 	db	0
  6992  01E88F  00                 	db	0
  6993  01E890  00                 	db	0
  6994  01E891  00                 	db	0
  6995  01E892  00                 	db	0
  6996  01E893  00                 	db	0
  6997  01E894  00                 	db	0
  6998  01E895  00                 	db	0
  6999  01E896  00                 	db	0
  7000  01E897  00                 	db	0
  7001  01E898  00                 	db	0
  7002  01E899  00                 	db	0
  7003  01E89A  00                 	db	0
  7004  01E89B  00                 	db	0
  7005  01E89C  00                 	db	0
  7006  01E89D  00                 	db	0
  7007  01E89E  00                 	db	0
  7008  01E89F  00                 	db	0
  7009  01E8A0  00                 	db	0
  7010  01E8A1  00                 	db	0
  7011  01E8A2  00                 	db	0
  7012  01E8A3  00                 	db	0
  7013  01E8A4  00                 	db	0
  7014  01E8A5  00                 	db	0
  7015  01E8A6  00                 	db	0
  7016  01E8A7  00                 	db	0
  7017  01E8A8  00                 	db	0
  7018  01E8A9  00                 	db	0
  7019  01E8AA  00                 	db	0
  7020  01E8AB  00                 	db	0
  7021  01E8AC  00                 	db	0
  7022  01E8AD  00                 	db	0
  7023  01E8AE  00                 	db	0
  7024  01E8AF  00                 	db	0
  7025  01E8B0  00                 	db	0
  7026  01E8B1  00                 	db	0
  7027  01E8B2  00                 	db	0
  7028  01E8B3  00                 	db	0
  7029  01E8B4  00                 	db	0
  7030  01E8B5  00                 	db	0
  7031  01E8B6  00                 	db	0
  7032  01E8B7  00                 	db	0
  7033  01E8B8  00                 	db	0
  7034  01E8B9  00                 	db	0
  7035  01E8BA  00                 	db	0
  7036  01E8BB  00                 	db	0
  7037  01E8BC  00                 	db	0
  7038  01E8BD  00                 	db	0
  7039  01E8BE  00                 	db	0
  7040  01E8BF  00                 	db	0
  7041  01E8C0  00                 	db	0
  7042  01E8C1  00                 	db	0
  7043  01E8C2  00                 	db	0
  7044  01E8C3  00                 	db	0
  7045  01E8C4  00                 	db	0
  7046  01E8C5  00                 	db	0
  7047  01E8C6  00                 	db	0
  7048  01E8C7  00                 	db	0
  7049  01E8C8  00                 	db	0
  7050  01E8C9  00                 	db	0
  7051  01E8CA  00                 	db	0
  7052  01E8CB  00                 	db	0
  7053  01E8CC  00                 	db	0
  7054  01E8CD  00                 	db	0
  7055  01E8CE  00                 	db	0
  7056  01E8CF  00                 	db	0
  7057  01E8D0  00                 	db	0
  7058  01E8D1  00                 	db	0
  7059  01E8D2  00                 	db	0
  7060  01E8D3  00                 	db	0
  7061  01E8D4  00                 	db	0
  7062  01E8D5  00                 	db	0
  7063  01E8D6  00                 	db	0
  7064  01E8D7  00                 	db	0
  7065  01E8D8  00                 	db	0
  7066  01E8D9  00                 	db	0
  7067  01E8DA  00                 	db	0
  7068  01E8DB  00                 	db	0
  7069  01E8DC  00                 	db	0
  7070  01E8DD  00                 	db	0
  7071  01E8DE  00                 	db	0
  7072  01E8DF  00                 	db	0
  7073  01E8E0  00                 	db	0
  7074  01E8E1  00                 	db	0
  7075  01E8E2  00                 	db	0
  7076  01E8E3  00                 	db	0
  7077  01E8E4  00                 	db	0
  7078  01E8E5  00                 	db	0
  7079  01E8E6  00                 	db	0
  7080  01E8E7  00                 	db	0
  7081  01E8E8  00                 	db	0
  7082  01E8E9  00                 	db	0
  7083  01E8EA  00                 	db	0
  7084  01E8EB  00                 	db	0
  7085  01E8EC  00                 	db	0
  7086  01E8ED  00                 	db	0
  7087  01E8EE  00                 	db	0
  7088  01E8EF  00                 	db	0
  7089  01E8F0  00                 	db	0
  7090  01E8F1  00                 	db	0
  7091  01E8F2  00                 	db	0
  7092  01E8F3  00                 	db	0
  7093  01E8F4  00                 	db	0
  7094  01E8F5  00                 	db	0
  7095  01E8F6  00                 	db	0
  7096  01E8F7  00                 	db	0
  7097  01E8F8  00                 	db	0
  7098  01E8F9  00                 	db	0
  7099  01E8FA  00                 	db	0
  7100  01E8FB  00                 	db	0
  7101  01E8FC  00                 	db	0
  7102  01E8FD  00                 	db	0
  7103  01E8FE  00                 	db	0
  7104  01E8FF  00                 	db	0
  7105  01E900  00                 	db	0
  7106  01E901  00                 	db	0
  7107  01E902  00                 	db	0
  7108  01E903  00                 	db	0
  7109  01E904  00                 	db	0
  7110  01E905  00                 	db	0
  7111  01E906  00                 	db	0
  7112  01E907  00                 	db	0
  7113  01E908  00                 	db	0
  7114  01E909  00                 	db	0
  7115  01E90A  00                 	db	0
  7116  01E90B  00                 	db	0
  7117  01E90C  00                 	db	0
  7118  01E90D  00                 	db	0
  7119  01E90E  00                 	db	0
  7120  01E90F  00                 	db	0
  7121  01E910  00                 	db	0
  7122  01E911  00                 	db	0
  7123  01E912  00                 	db	0
  7124  01E913  00                 	db	0
  7125  01E914  00                 	db	0
  7126  01E915  00                 	db	0
  7127  01E916  00                 	db	0
  7128  01E917  00                 	db	0
  7129  01E918  00                 	db	0
  7130  01E919  00                 	db	0
  7131  01E91A  00                 	db	0
  7132  01E91B  00                 	db	0
  7133  01E91C  00                 	db	0
  7134  01E91D  00                 	db	0
  7135  01E91E  00                 	db	0
  7136  01E91F  00                 	db	0
  7137  01E920  00                 	db	0
  7138  01E921  00                 	db	0
  7139  01E922  00                 	db	0
  7140  01E923  00                 	db	0
  7141  01E924  00                 	db	0
  7142  01E925  00                 	db	0
  7143  01E926  00                 	db	0
  7144  01E927  00                 	db	0
  7145  01E928  00                 	db	0
  7146  01E929  00                 	db	0
  7147  01E92A  00                 	db	0
  7148  01E92B  00                 	db	0
  7149  01E92C  00                 	db	0
  7150  01E92D  00                 	db	0
  7151  01E92E  00                 	db	0
  7152  01E92F  00                 	db	0
  7153  01E930  00                 	db	0
  7154  01E931  00                 	db	0
  7155  01E932  00                 	db	0
  7156  01E933  00                 	db	0
  7157  01E934  00                 	db	0
  7158  01E935  00                 	db	0
  7159  01E936  00                 	db	0
  7160  01E937  00                 	db	0
  7161  01E938  00                 	db	0
  7162  01E939  00                 	db	0
  7163  01E93A  00                 	db	0
  7164  01E93B  00                 	db	0
  7165  01E93C  00                 	db	0
  7166  01E93D  00                 	db	0
  7167  01E93E  00                 	db	0
  7168  01E93F  00                 	db	0
  7169  01E940  00                 	db	0
  7170  01E941  00                 	db	0
  7171  01E942  00                 	db	0
  7172  01E943  00                 	db	0
  7173  01E944  00                 	db	0
  7174  01E945  00                 	db	0
  7175  01E946  00                 	db	0
  7176  01E947  00                 	db	0
  7177  01E948  00                 	db	0
  7178  01E949  00                 	db	0
  7179  01E94A  00                 	db	0
  7180  01E94B  00                 	db	0
  7181  01E94C  00                 	db	0
  7182  01E94D  00                 	db	0
  7183  01E94E  00                 	db	0
  7184  01E94F  00                 	db	0
  7185  01E950  00                 	db	0
  7186  01E951  00                 	db	0
  7187  01E952  00                 	db	0
  7188  01E953  00                 	db	0
  7189  01E954  00                 	db	0
  7190  01E955  00                 	db	0
  7191  01E956  00                 	db	0
  7192  01E957  00                 	db	0
  7193  01E958  00                 	db	0
  7194  01E959  00                 	db	0
  7195  01E95A  00                 	db	0
  7196  01E95B  00                 	db	0
  7197  01E95C  00                 	db	0
  7198  01E95D  00                 	db	0
  7199  01E95E  00                 	db	0
  7200  01E95F  00                 	db	0
  7201  01E960  00                 	db	0
  7202  01E961  00                 	db	0
  7203  01E962  00                 	db	0
  7204  01E963  00                 	db	0
  7205  01E964  00                 	db	0
  7206  01E965  00                 	db	0
  7207  01E966  00                 	db	0
  7208  01E967  00                 	db	0
  7209  01E968  00                 	db	0
  7210  01E969  00                 	db	0
  7211  01E96A  00                 	db	0
  7212  01E96B  00                 	db	0
  7213  01E96C  00                 	db	0
  7214  01E96D  00                 	db	0
  7215  01E96E  00                 	db	0
  7216  01E96F  00                 	db	0
  7217  01E970  00                 	db	0
  7218  01E971  00                 	db	0
  7219  01E972  00                 	db	0
  7220  01E973  00                 	db	0
  7221  01E974  00                 	db	0
  7222  01E975  00                 	db	0
  7223  01E976  00                 	db	0
  7224  01E977  00                 	db	0
  7225  01E978  00                 	db	0
  7226  01E979  00                 	db	0
  7227  01E97A  00                 	db	0
  7228  01E97B  00                 	db	0
  7229  01E97C  00                 	db	0
  7230  01E97D  00                 	db	0
  7231  01E97E  00                 	db	0
  7232  01E97F  00                 	db	0
  7233  01E980  00                 	db	0
  7234  01E981  00                 	db	0
  7235  01E982  00                 	db	0
  7236  01E983  00                 	db	0
  7237  01E984  00                 	db	0
  7238  01E985  00                 	db	0
  7239  01E986  00                 	db	0
  7240  01E987  00                 	db	0
  7241  01E988  00                 	db	0
  7242  01E989  00                 	db	0
  7243  01E98A  00                 	db	0
  7244  01E98B  00                 	db	0
  7245  01E98C  00                 	db	0
  7246  01E98D  00                 	db	0
  7247  01E98E  00                 	db	0
  7248  01E98F  00                 	db	0
  7249  01E990  00                 	db	0
  7250  01E991  00                 	db	0
  7251  01E992  00                 	db	0
  7252  01E993  00                 	db	0
  7253  01E994  00                 	db	0
  7254  01E995  00                 	db	0
  7255  01E996  00                 	db	0
  7256  01E997  00                 	db	0
  7257  01E998  00                 	db	0
  7258  01E999  00                 	db	0
  7259  01E99A  00                 	db	0
  7260  01E99B  00                 	db	0
  7261  01E99C  00                 	db	0
  7262  01E99D  00                 	db	0
  7263  01E99E  00                 	db	0
  7264  01E99F  00                 	db	0
  7265  01E9A0  00                 	db	0
  7266  01E9A1  00                 	db	0
  7267  01E9A2  00                 	db	0
  7268  01E9A3  00                 	db	0
  7269  01E9A4  00                 	db	0
  7270  01E9A5  00                 	db	0
  7271  01E9A6  00                 	db	0
  7272  01E9A7  00                 	db	0
  7273  01E9A8  00                 	db	0
  7274  01E9A9  00                 	db	0
  7275  01E9AA  00                 	db	0
  7276  01E9AB  00                 	db	0
  7277  01E9AC  00                 	db	0
  7278  01E9AD  00                 	db	0
  7279  01E9AE  00                 	db	0
  7280  01E9AF  00                 	db	0
  7281  01E9B0  00                 	db	0
  7282  01E9B1  00                 	db	0
  7283  01E9B2  00                 	db	0
  7284  01E9B3  00                 	db	0
  7285  01E9B4  00                 	db	0
  7286  01E9B5  00                 	db	0
  7287  01E9B6  00                 	db	0
  7288  01E9B7  00                 	db	0
  7289  01E9B8  00                 	db	0
  7290  01E9B9  00                 	db	0
  7291  01E9BA  00                 	db	0
  7292  01E9BB  00                 	db	0
  7293  01E9BC  00                 	db	0
  7294  01E9BD  00                 	db	0
  7295  01E9BE  00                 	db	0
  7296  01E9BF  00                 	db	0
  7297  01E9C0  00                 	db	0
  7298  01E9C1  00                 	db	0
  7299  01E9C2  00                 	db	0
  7300  01E9C3  00                 	db	0
  7301  01E9C4  00                 	db	0
  7302  01E9C5  00                 	db	0
  7303  01E9C6  00                 	db	0
  7304  01E9C7  00                 	db	0
  7305  01E9C8  00                 	db	0
  7306  01E9C9  00                 	db	0
  7307  01E9CA  00                 	db	0
  7308  01E9CB  00                 	db	0
  7309  01E9CC  00                 	db	0
  7310  01E9CD  00                 	db	0
  7311  01E9CE  00                 	db	0
  7312  01E9CF  00                 	db	0
  7313  01E9D0  00                 	db	0
  7314  01E9D1  00                 	db	0
  7315  01E9D2  00                 	db	0
  7316  01E9D3  00                 	db	0
  7317  01E9D4  00                 	db	0
  7318  01E9D5  00                 	db	0
  7319  01E9D6  00                 	db	0
  7320  01E9D7  00                 	db	0
  7321  01E9D8  00                 	db	0
  7322  01E9D9  00                 	db	0
  7323  01E9DA  00                 	db	0
  7324  01E9DB  00                 	db	0
  7325  01E9DC  00                 	db	0
  7326  01E9DD  00                 	db	0
  7327  01E9DE  00                 	db	0
  7328  01E9DF  00                 	db	0
  7329  01E9E0  00                 	db	0
  7330  01E9E1  00                 	db	0
  7331  01E9E2  00                 	db	0
  7332  01E9E3  00                 	db	0
  7333  01E9E4  00                 	db	0
  7334  01E9E5  00                 	db	0
  7335  01E9E6  00                 	db	0
  7336  01E9E7  00                 	db	0
  7337  01E9E8  00                 	db	0
  7338  01E9E9  00                 	db	0
  7339  01E9EA  00                 	db	0
  7340  01E9EB  00                 	db	0
  7341  01E9EC  00                 	db	0
  7342  01E9ED  00                 	db	0
  7343  01E9EE  00                 	db	0
  7344  01E9EF  00                 	db	0
  7345  01E9F0  00                 	db	0
  7346  01E9F1  00                 	db	0
  7347  01E9F2  00                 	db	0
  7348  01E9F3  00                 	db	0
  7349  01E9F4  00                 	db	0
  7350  01E9F5  00                 	db	0
  7351  01E9F6  00                 	db	0
  7352  01E9F7  00                 	db	0
  7353  01E9F8  00                 	db	0
  7354  01E9F9  00                 	db	0
  7355  01E9FA  00                 	db	0
  7356  01E9FB  00                 	db	0
  7357  01E9FC  00                 	db	0
  7358  01E9FD  00                 	db	0
  7359  01E9FE  00                 	db	0
  7360  01E9FF  00                 	db	0
  7361  01EA00  00                 	db	0
  7362  01EA01  00                 	db	0
  7363  01EA02  00                 	db	0
  7364  01EA03  00                 	db	0
  7365  01EA04  00                 	db	0
  7366  01EA05  00                 	db	0
  7367  01EA06  00                 	db	0
  7368  01EA07  00                 	db	0
  7369  01EA08  00                 	db	0
  7370  01EA09  00                 	db	0
  7371  01EA0A  00                 	db	0
  7372  01EA0B  00                 	db	0
  7373  01EA0C  00                 	db	0
  7374  01EA0D  00                 	db	0
  7375  01EA0E  00                 	db	0
  7376  01EA0F  00                 	db	0
  7377  01EA10  00                 	db	0
  7378  01EA11  00                 	db	0
  7379  01EA12  00                 	db	0
  7380  01EA13  00                 	db	0
  7381  01EA14  00                 	db	0
  7382  01EA15  00                 	db	0
  7383  01EA16  00                 	db	0
  7384  01EA17  00                 	db	0
  7385  01EA18  00                 	db	0
  7386  01EA19  00                 	db	0
  7387  01EA1A  00                 	db	0
  7388  01EA1B  00                 	db	0
  7389  01EA1C  00                 	db	0
  7390  01EA1D  00                 	db	0
  7391  01EA1E  00                 	db	0
  7392  01EA1F  00                 	db	0
  7393  01EA20  00                 	db	0
  7394  01EA21  00                 	db	0
  7395  01EA22  00                 	db	0
  7396  01EA23  00                 	db	0
  7397  01EA24  00                 	db	0
  7398  01EA25  00                 	db	0
  7399  01EA26  00                 	db	0
  7400  01EA27  00                 	db	0
  7401  01EA28  00                 	db	0
  7402  01EA29  00                 	db	0
  7403  01EA2A  00                 	db	0
  7404  01EA2B  00                 	db	0
  7405  01EA2C  00                 	db	0
  7406  01EA2D  00                 	db	0
  7407  01EA2E  00                 	db	0
  7408  01EA2F  00                 	db	0
  7409  01EA30  00                 	db	0
  7410  01EA31  00                 	db	0
  7411  01EA32  00                 	db	0
  7412  01EA33  00                 	db	0
  7413  01EA34  00                 	db	0
  7414  01EA35  00                 	db	0
  7415  01EA36  00                 	db	0
  7416  01EA37  00                 	db	0
  7417  01EA38  00                 	db	0
  7418  01EA39  00                 	db	0
  7419  01EA3A  00                 	db	0
  7420  01EA3B  00                 	db	0
  7421  01EA3C  00                 	db	0
  7422  01EA3D  00                 	db	0
  7423  01EA3E  00                 	db	0
  7424  01EA3F  00                 	db	0
  7425  01EA40  00                 	db	0
  7426  01EA41  00                 	db	0
  7427  01EA42  00                 	db	0
  7428  01EA43  00                 	db	0
  7429  01EA44  00                 	db	0
  7430  01EA45  00                 	db	0
  7431  01EA46  00                 	db	0
  7432  01EA47  00                 	db	0
  7433  01EA48  00                 	db	0
  7434  01EA49  00                 	db	0
  7435  01EA4A  00                 	db	0
  7436  01EA4B  00                 	db	0
  7437  01EA4C  00                 	db	0
  7438  01EA4D  00                 	db	0
  7439  01EA4E  00                 	db	0
  7440  01EA4F  00                 	db	0
  7441  01EA50  00                 	db	0
  7442  01EA51  00                 	db	0
  7443  01EA52  00                 	db	0
  7444  01EA53  00                 	db	0
  7445  01EA54  00                 	db	0
  7446  01EA55  00                 	db	0
  7447  01EA56  00                 	db	0
  7448  01EA57  00                 	db	0
  7449  01EA58  00                 	db	0
  7450  01EA59  00                 	db	0
  7451  01EA5A  00                 	db	0
  7452  01EA5B  00                 	db	0
  7453  01EA5C  00                 	db	0
  7454  01EA5D  00                 	db	0
  7455  01EA5E  00                 	db	0
  7456  01EA5F  00                 	db	0
  7457  01EA60  00                 	db	0
  7458  01EA61  00                 	db	0
  7459  01EA62  00                 	db	0
  7460  01EA63  00                 	db	0
  7461  01EA64  00                 	db	0
  7462  01EA65  00                 	db	0
  7463  01EA66  00                 	db	0
  7464  01EA67  00                 	db	0
  7465  01EA68  00                 	db	0
  7466  01EA69  00                 	db	0
  7467  01EA6A  00                 	db	0
  7468  01EA6B  00                 	db	0
  7469  01EA6C  00                 	db	0
  7470  01EA6D  00                 	db	0
  7471  01EA6E  00                 	db	0
  7472  01EA6F  00                 	db	0
  7473  01EA70  00                 	db	0
  7474  01EA71  00                 	db	0
  7475  01EA72  00                 	db	0
  7476  01EA73  00                 	db	0
  7477  01EA74  00                 	db	0
  7478  01EA75  00                 	db	0
  7479  01EA76  00                 	db	0
  7480  01EA77  00                 	db	0
  7481  01EA78  00                 	db	0
  7482  01EA79  00                 	db	0
  7483  01EA7A  00                 	db	0
  7484  01EA7B  00                 	db	0
  7485  01EA7C  00                 	db	0
  7486  01EA7D  00                 	db	0
  7487  01EA7E  00                 	db	0
  7488  01EA7F  00                 	db	0
  7489  01EA80  00                 	db	0
  7490  01EA81  00                 	db	0
  7491  01EA82  00                 	db	0
  7492  01EA83  00                 	db	0
  7493  01EA84  00                 	db	0
  7494  01EA85  00                 	db	0
  7495  01EA86  00                 	db	0
  7496  01EA87  00                 	db	0
  7497  01EA88  00                 	db	0
  7498  01EA89  00                 	db	0
  7499  01EA8A  00                 	db	0
  7500  01EA8B  00                 	db	0
  7501  01EA8C  00                 	db	0
  7502  01EA8D  00                 	db	0
  7503  01EA8E  00                 	db	0
  7504  01EA8F  00                 	db	0
  7505  01EA90  00                 	db	0
  7506  01EA91  00                 	db	0
  7507  01EA92  00                 	db	0
  7508  01EA93  00                 	db	0
  7509  01EA94  00                 	db	0
  7510  01EA95  00                 	db	0
  7511  01EA96  00                 	db	0
  7512  01EA97  00                 	db	0
  7513  01EA98  00                 	db	0
  7514  01EA99  00                 	db	0
  7515  01EA9A  00                 	db	0
  7516  01EA9B  00                 	db	0
  7517  01EA9C  00                 	db	0
  7518  01EA9D  00                 	db	0
  7519  01EA9E  00                 	db	0
  7520  01EA9F  00                 	db	0
  7521  01EAA0  00                 	db	0
  7522  01EAA1  00                 	db	0
  7523  01EAA2  00                 	db	0
  7524  01EAA3  00                 	db	0
  7525  01EAA4  00                 	db	0
  7526  01EAA5  00                 	db	0
  7527  01EAA6  00                 	db	0
  7528  01EAA7  00                 	db	0
  7529  01EAA8  00                 	db	0
  7530  01EAA9  00                 	db	0
  7531  01EAAA  00                 	db	0
  7532  01EAAB  00                 	db	0
  7533  01EAAC  00                 	db	0
  7534  01EAAD  00                 	db	0
  7535  01EAAE  00                 	db	0
  7536  01EAAF  00                 	db	0
  7537  01EAB0  00                 	db	0
  7538  01EAB1  00                 	db	0
  7539  01EAB2  00                 	db	0
  7540  01EAB3  00                 	db	0
  7541  01EAB4  00                 	db	0
  7542  01EAB5  00                 	db	0
  7543  01EAB6  00                 	db	0
  7544  01EAB7  00                 	db	0
  7545  01EAB8  00                 	db	0
  7546  01EAB9  00                 	db	0
  7547  01EABA  00                 	db	0
  7548  01EABB  00                 	db	0
  7549  01EABC  00                 	db	0
  7550  01EABD  00                 	db	0
  7551  01EABE  00                 	db	0
  7552  01EABF  00                 	db	0
  7553  01EAC0  00                 	db	0
  7554  01EAC1  00                 	db	0
  7555  01EAC2  00                 	db	0
  7556  01EAC3  00                 	db	0
  7557  01EAC4  00                 	db	0
  7558  01EAC5  00                 	db	0
  7559  01EAC6  00                 	db	0
  7560  01EAC7  00                 	db	0
  7561  01EAC8  00                 	db	0
  7562  01EAC9  00                 	db	0
  7563  01EACA  00                 	db	0
  7564  01EACB  00                 	db	0
  7565  01EACC  00                 	db	0
  7566  01EACD  00                 	db	0
  7567  01EACE  00                 	db	0
  7568  01EACF  00                 	db	0
  7569  01EAD0  00                 	db	0
  7570  01EAD1  00                 	db	0
  7571  01EAD2  00                 	db	0
  7572  01EAD3  00                 	db	0
  7573  01EAD4  00                 	db	0
  7574  01EAD5  00                 	db	0
  7575  01EAD6  00                 	db	0
  7576  01EAD7  00                 	db	0
  7577  01EAD8  00                 	db	0
  7578  01EAD9  00                 	db	0
  7579  01EADA  00                 	db	0
  7580  01EADB  00                 	db	0
  7581  01EADC  00                 	db	0
  7582  01EADD  00                 	db	0
  7583  01EADE  00                 	db	0
  7584  01EADF  00                 	db	0
  7585  01EAE0  00                 	db	0
  7586  01EAE1  00                 	db	0
  7587  01EAE2  00                 	db	0
  7588  01EAE3  00                 	db	0
  7589  01EAE4  00                 	db	0
  7590  01EAE5  00                 	db	0
  7591  01EAE6  00                 	db	0
  7592  01EAE7  00                 	db	0
  7593  01EAE8  00                 	db	0
  7594  01EAE9  00                 	db	0
  7595  01EAEA  00                 	db	0
  7596  01EAEB  00                 	db	0
  7597  01EAEC  00                 	db	0
  7598  01EAED  00                 	db	0
  7599  01EAEE  00                 	db	0
  7600  01EAEF  00                 	db	0
  7601  01EAF0  00                 	db	0
  7602  01EAF1  00                 	db	0
  7603  01EAF2  00                 	db	0
  7604  01EAF3  00                 	db	0
  7605  01EAF4  00                 	db	0
  7606  01EAF5  00                 	db	0
  7607  01EAF6  00                 	db	0
  7608  01EAF7  00                 	db	0
  7609  01EAF8  00                 	db	0
  7610  01EAF9  00                 	db	0
  7611  01EAFA  00                 	db	0
  7612  01EAFB  00                 	db	0
  7613  01EAFC  00                 	db	0
  7614  01EAFD  00                 	db	0
  7615  01EAFE  00                 	db	0
  7616  01EAFF  00                 	db	0
  7617  01EB00  00                 	db	0
  7618  01EB01  00                 	db	0
  7619  01EB02  00                 	db	0
  7620  01EB03  00                 	db	0
  7621  01EB04  00                 	db	0
  7622  01EB05  00                 	db	0
  7623  01EB06  00                 	db	0
  7624  01EB07  00                 	db	0
  7625  01EB08  00                 	db	0
  7626  01EB09  00                 	db	0
  7627  01EB0A  00                 	db	0
  7628  01EB0B  00                 	db	0
  7629  01EB0C  00                 	db	0
  7630  01EB0D  00                 	db	0
  7631  01EB0E  00                 	db	0
  7632  01EB0F  00                 	db	0
  7633  01EB10  00                 	db	0
  7634  01EB11  00                 	db	0
  7635  01EB12  00                 	db	0
  7636  01EB13  00                 	db	0
  7637  01EB14  00                 	db	0
  7638  01EB15  00                 	db	0
  7639  01EB16  00                 	db	0
  7640  01EB17  00                 	db	0
  7641  01EB18  00                 	db	0
  7642  01EB19  00                 	db	0
  7643  01EB1A  00                 	db	0
  7644  01EB1B  00                 	db	0
  7645  01EB1C  00                 	db	0
  7646  01EB1D  00                 	db	0
  7647  01EB1E  00                 	db	0
  7648  01EB1F  00                 	db	0
  7649  01EB20  00                 	db	0
  7650  01EB21  00                 	db	0
  7651  01EB22  00                 	db	0
  7652  01EB23  00                 	db	0
  7653  01EB24  00                 	db	0
  7654  01EB25  00                 	db	0
  7655  01EB26  00                 	db	0
  7656  01EB27  00                 	db	0
  7657  01EB28  00                 	db	0
  7658  01EB29  00                 	db	0
  7659  01EB2A  00                 	db	0
  7660  01EB2B  00                 	db	0
  7661  01EB2C  00                 	db	0
  7662  01EB2D  00                 	db	0
  7663  01EB2E  00                 	db	0
  7664  01EB2F  00                 	db	0
  7665  01EB30  00                 	db	0
  7666  01EB31  00                 	db	0
  7667  01EB32  00                 	db	0
  7668  01EB33  00                 	db	0
  7669  01EB34  00                 	db	0
  7670  01EB35  00                 	db	0
  7671  01EB36  00                 	db	0
  7672  01EB37  00                 	db	0
  7673  01EB38  00                 	db	0
  7674  01EB39  00                 	db	0
  7675  01EB3A  00                 	db	0
  7676  01EB3B  00                 	db	0
  7677  01EB3C  00                 	db	0
  7678  01EB3D  00                 	db	0
  7679  01EB3E  00                 	db	0
  7680  01EB3F  00                 	db	0
  7681  01EB40  00                 	db	0
  7682  01EB41  00                 	db	0
  7683  01EB42  00                 	db	0
  7684  01EB43  00                 	db	0
  7685  01EB44  00                 	db	0
  7686  01EB45  00                 	db	0
  7687  01EB46  00                 	db	0
  7688  01EB47  00                 	db	0
  7689  01EB48  00                 	db	0
  7690  01EB49  00                 	db	0
  7691  01EB4A  00                 	db	0
  7692  01EB4B  00                 	db	0
  7693  01EB4C  00                 	db	0
  7694  01EB4D  00                 	db	0
  7695  01EB4E  00                 	db	0
  7696  01EB4F  00                 	db	0
  7697  01EB50  00                 	db	0
  7698  01EB51  00                 	db	0
  7699  01EB52  00                 	db	0
  7700  01EB53  00                 	db	0
  7701  01EB54  00                 	db	0
  7702  01EB55  00                 	db	0
  7703  01EB56  00                 	db	0
  7704  01EB57  00                 	db	0
  7705  01EB58  00                 	db	0
  7706  01EB59  00                 	db	0
  7707  01EB5A  00                 	db	0
  7708  01EB5B  00                 	db	0
  7709  01EB5C  00                 	db	0
  7710  01EB5D  00                 	db	0
  7711  01EB5E  00                 	db	0
  7712  01EB5F  00                 	db	0
  7713  01EB60  00                 	db	0
  7714  01EB61  00                 	db	0
  7715  01EB62  00                 	db	0
  7716  01EB63  00                 	db	0
  7717  01EB64  00                 	db	0
  7718  01EB65  00                 	db	0
  7719  01EB66  00                 	db	0
  7720  01EB67  00                 	db	0
  7721  01EB68  00                 	db	0
  7722  01EB69  00                 	db	0
  7723  01EB6A  00                 	db	0
  7724  01EB6B  00                 	db	0
  7725  01EB6C  00                 	db	0
  7726  01EB6D  00                 	db	0
  7727  01EB6E  00                 	db	0
  7728  01EB6F  00                 	db	0
  7729  01EB70  00                 	db	0
  7730  01EB71  00                 	db	0
  7731  01EB72  00                 	db	0
  7732  01EB73  00                 	db	0
  7733  01EB74  00                 	db	0
  7734  01EB75  00                 	db	0
  7735  01EB76  00                 	db	0
  7736  01EB77  00                 	db	0
  7737  01EB78  00                 	db	0
  7738  01EB79  00                 	db	0
  7739  01EB7A  00                 	db	0
  7740  01EB7B  00                 	db	0
  7741  01EB7C  00                 	db	0
  7742  01EB7D  00                 	db	0
  7743  01EB7E  00                 	db	0
  7744  01EB7F  00                 	db	0
  7745  01EB80  00                 	db	0
  7746  01EB81  00                 	db	0
  7747  01EB82  00                 	db	0
  7748  01EB83  00                 	db	0
  7749  01EB84  00                 	db	0
  7750  01EB85  00                 	db	0
  7751  01EB86  00                 	db	0
  7752  01EB87  00                 	db	0
  7753  01EB88  00                 	db	0
  7754  01EB89  00                 	db	0
  7755  01EB8A  00                 	db	0
  7756  01EB8B  00                 	db	0
  7757  01EB8C  00                 	db	0
  7758  01EB8D  00                 	db	0
  7759  01EB8E  00                 	db	0
  7760  01EB8F  00                 	db	0
  7761  01EB90  00                 	db	0
  7762  01EB91  00                 	db	0
  7763  01EB92  00                 	db	0
  7764  01EB93  00                 	db	0
  7765  01EB94  00                 	db	0
  7766  01EB95  00                 	db	0
  7767  01EB96  00                 	db	0
  7768  01EB97  00                 	db	0
  7769  01EB98  00                 	db	0
  7770  01EB99  00                 	db	0
  7771  01EB9A  00                 	db	0
  7772  01EB9B  00                 	db	0
  7773  01EB9C  00                 	db	0
  7774  01EB9D  00                 	db	0
  7775  01EB9E  00                 	db	0
  7776  01EB9F  00                 	db	0
  7777  01EBA0  00                 	db	0
  7778  01EBA1  00                 	db	0
  7779  01EBA2  00                 	db	0
  7780  01EBA3  00                 	db	0
  7781  01EBA4  00                 	db	0
  7782  01EBA5  00                 	db	0
  7783  01EBA6  00                 	db	0
  7784  01EBA7  00                 	db	0
  7785  01EBA8  00                 	db	0
  7786  01EBA9  00                 	db	0
  7787  01EBAA  00                 	db	0
  7788  01EBAB  00                 	db	0
  7789  01EBAC  00                 	db	0
  7790  01EBAD  00                 	db	0
  7791  01EBAE  00                 	db	0
  7792  01EBAF  00                 	db	0
  7793  01EBB0  00                 	db	0
  7794  01EBB1  00                 	db	0
  7795  01EBB2  00                 	db	0
  7796  01EBB3  00                 	db	0
  7797  01EBB4  00                 	db	0
  7798  01EBB5  00                 	db	0
  7799  01EBB6  00                 	db	0
  7800  01EBB7  00                 	db	0
  7801  01EBB8  00                 	db	0
  7802  01EBB9  00                 	db	0
  7803  01EBBA  00                 	db	0
  7804  01EBBB  00                 	db	0
  7805  01EBBC  00                 	db	0
  7806  01EBBD  00                 	db	0
  7807  01EBBE  00                 	db	0
  7808  01EBBF  00                 	db	0
  7809  01EBC0  00                 	db	0
  7810  01EBC1  00                 	db	0
  7811  01EBC2  00                 	db	0
  7812  01EBC3  00                 	db	0
  7813  01EBC4  00                 	db	0
  7814  01EBC5  00                 	db	0
  7815  01EBC6  00                 	db	0
  7816  01EBC7  00                 	db	0
  7817  01EBC8  00                 	db	0
  7818  01EBC9  00                 	db	0
  7819  01EBCA  00                 	db	0
  7820  01EBCB  00                 	db	0
  7821  01EBCC  00                 	db	0
  7822  01EBCD  00                 	db	0
  7823  01EBCE  00                 	db	0
  7824  01EBCF  00                 	db	0
  7825  01EBD0  00                 	db	0
  7826  01EBD1  00                 	db	0
  7827  01EBD2  00                 	db	0
  7828  01EBD3  00                 	db	0
  7829  01EBD4  00                 	db	0
  7830  01EBD5  00                 	db	0
  7831  01EBD6  00                 	db	0
  7832  01EBD7  00                 	db	0
  7833  01EBD8  00                 	db	0
  7834  01EBD9  00                 	db	0
  7835  01EBDA  00                 	db	0
  7836  01EBDB  00                 	db	0
  7837  01EBDC  00                 	db	0
  7838  01EBDD  00                 	db	0
  7839  01EBDE  00                 	db	0
  7840  01EBDF  00                 	db	0
  7841  01EBE0  00                 	db	0
  7842  01EBE1  00                 	db	0
  7843  01EBE2  00                 	db	0
  7844  01EBE3  00                 	db	0
  7845  01EBE4  00                 	db	0
  7846  01EBE5  00                 	db	0
  7847  01EBE6  00                 	db	0
  7848  01EBE7  00                 	db	0
  7849  01EBE8  00                 	db	0
  7850  01EBE9  00                 	db	0
  7851  01EBEA  00                 	db	0
  7852  01EBEB  00                 	db	0
  7853  01EBEC  00                 	db	0
  7854  01EBED  00                 	db	0
  7855  01EBEE  00                 	db	0
  7856  01EBEF  00                 	db	0
  7857  01EBF0  00                 	db	0
  7858  01EBF1  00                 	db	0
  7859  01EBF2  00                 	db	0
  7860  01EBF3  00                 	db	0
  7861  01EBF4  00                 	db	0
  7862  01EBF5  00                 	db	0
  7863  01EBF6  00                 	db	0
  7864  01EBF7  00                 	db	0
  7865  01EBF8  00                 	db	0
  7866  01EBF9  00                 	db	0
  7867  01EBFA  00                 	db	0
  7868  01EBFB  00                 	db	0
  7869  01EBFC  00                 	db	0
  7870  01EBFD  00                 	db	0
  7871  01EBFE  00                 	db	0
  7872  01EBFF  00                 	db	0
  7873  01EC00  00                 	db	0
  7874  01EC01  00                 	db	0
  7875  01EC02  00                 	db	0
  7876  01EC03  00                 	db	0
  7877  01EC04  00                 	db	0
  7878  01EC05  00                 	db	0
  7879  01EC06  00                 	db	0
  7880  01EC07  00                 	db	0
  7881  01EC08  00                 	db	0
  7882  01EC09  00                 	db	0
  7883  01EC0A  00                 	db	0
  7884  01EC0B  00                 	db	0
  7885  01EC0C  00                 	db	0
  7886  01EC0D  00                 	db	0
  7887  01EC0E  00                 	db	0
  7888  01EC0F  00                 	db	0
  7889  01EC10  00                 	db	0
  7890  01EC11  00                 	db	0
  7891  01EC12  00                 	db	0
  7892  01EC13  00                 	db	0
  7893  01EC14  00                 	db	0
  7894  01EC15  00                 	db	0
  7895  01EC16  00                 	db	0
  7896  01EC17  00                 	db	0
  7897  01EC18  00                 	db	0
  7898  01EC19  00                 	db	0
  7899  01EC1A  00                 	db	0
  7900  01EC1B  00                 	db	0
  7901  01EC1C  00                 	db	0
  7902  01EC1D  00                 	db	0
  7903  01EC1E  00                 	db	0
  7904  01EC1F  00                 	db	0
  7905  01EC20  00                 	db	0
  7906  01EC21  00                 	db	0
  7907  01EC22  00                 	db	0
  7908  01EC23  00                 	db	0
  7909  01EC24  00                 	db	0
  7910  01EC25  00                 	db	0
  7911  01EC26  00                 	db	0
  7912  01EC27  00                 	db	0
  7913  01EC28  00                 	db	0
  7914  01EC29  00                 	db	0
  7915  01EC2A  00                 	db	0
  7916  01EC2B  00                 	db	0
  7917  01EC2C  00                 	db	0
  7918  01EC2D  00                 	db	0
  7919  01EC2E  00                 	db	0
  7920  01EC2F  00                 	db	0
  7921  01EC30  00                 	db	0
  7922  01EC31  00                 	db	0
  7923  01EC32  00                 	db	0
  7924  01EC33  00                 	db	0
  7925  01EC34  00                 	db	0
  7926  01EC35  00                 	db	0
  7927  01EC36  00                 	db	0
  7928  01EC37  00                 	db	0
  7929  01EC38  00                 	db	0
  7930  01EC39  00                 	db	0
  7931  01EC3A  00                 	db	0
  7932  01EC3B  00                 	db	0
  7933  01EC3C  00                 	db	0
  7934  01EC3D  00                 	db	0
  7935  01EC3E  00                 	db	0
  7936  01EC3F  00                 	db	0
  7937  01EC40  00                 	db	0
  7938  01EC41  00                 	db	0
  7939  01EC42  00                 	db	0
  7940  01EC43  00                 	db	0
  7941  01EC44  00                 	db	0
  7942  01EC45  00                 	db	0
  7943  01EC46  00                 	db	0
  7944  01EC47  00                 	db	0
  7945  01EC48  00                 	db	0
  7946  01EC49  00                 	db	0
  7947  01EC4A  00                 	db	0
  7948  01EC4B  00                 	db	0
  7949  01EC4C  00                 	db	0
  7950  01EC4D  00                 	db	0
  7951  01EC4E  00                 	db	0
  7952  01EC4F  00                 	db	0
  7953  01EC50  00                 	db	0
  7954  01EC51  00                 	db	0
  7955  01EC52  00                 	db	0
  7956  01EC53  00                 	db	0
  7957  01EC54  00                 	db	0
  7958  01EC55  00                 	db	0
  7959  01EC56  00                 	db	0
  7960  01EC57  00                 	db	0
  7961  01EC58  00                 	db	0
  7962  01EC59  00                 	db	0
  7963  01EC5A  00                 	db	0
  7964  01EC5B  00                 	db	0
  7965  01EC5C  00                 	db	0
  7966  01EC5D  00                 	db	0
  7967  01EC5E  00                 	db	0
  7968  01EC5F  00                 	db	0
  7969  01EC60  00                 	db	0
  7970  01EC61  00                 	db	0
  7971  01EC62  00                 	db	0
  7972  01EC63  00                 	db	0
  7973  01EC64  00                 	db	0
  7974  01EC65  00                 	db	0
  7975  01EC66  00                 	db	0
  7976  01EC67  00                 	db	0
  7977  01EC68  00                 	db	0
  7978  01EC69  00                 	db	0
  7979  01EC6A  00                 	db	0
  7980  01EC6B  00                 	db	0
  7981  01EC6C  00                 	db	0
  7982  01EC6D  00                 	db	0
  7983  01EC6E  00                 	db	0
  7984  01EC6F  00                 	db	0
  7985  01EC70  00                 	db	0
  7986  01EC71  00                 	db	0
  7987  01EC72  00                 	db	0
  7988  01EC73  00                 	db	0
  7989  01EC74  00                 	db	0
  7990  01EC75  00                 	db	0
  7991  01EC76  00                 	db	0
  7992  01EC77  00                 	db	0
  7993  01EC78  00                 	db	0
  7994  01EC79  00                 	db	0
  7995  01EC7A  00                 	db	0
  7996  01EC7B  00                 	db	0
  7997  01EC7C  00                 	db	0
  7998  01EC7D  00                 	db	0
  7999  01EC7E  00                 	db	0
  8000  01EC7F  00                 	db	0
  8001  01EC80  00                 	db	0
  8002  01EC81  00                 	db	0
  8003  01EC82  00                 	db	0
  8004  01EC83  00                 	db	0
  8005  01EC84  00                 	db	0
  8006  01EC85  00                 	db	0
  8007  01EC86  00                 	db	0
  8008  01EC87  00                 	db	0
  8009  01EC88  00                 	db	0
  8010  01EC89  00                 	db	0
  8011  01EC8A  00                 	db	0
  8012  01EC8B  00                 	db	0
  8013  01EC8C  00                 	db	0
  8014  01EC8D  00                 	db	0
  8015  01EC8E  00                 	db	0
  8016  01EC8F  00                 	db	0
  8017  01EC90  00                 	db	0
  8018  01EC91  00                 	db	0
  8019  01EC92  00                 	db	0
  8020  01EC93  00                 	db	0
  8021  01EC94  00                 	db	0
  8022  01EC95  00                 	db	0
  8023  01EC96  00                 	db	0
  8024  01EC97  00                 	db	0
  8025  01EC98  00                 	db	0
  8026  01EC99  00                 	db	0
  8027  01EC9A  00                 	db	0
  8028  01EC9B  00                 	db	0
  8029  01EC9C  00                 	db	0
  8030  01EC9D  00                 	db	0
  8031  01EC9E  00                 	db	0
  8032  01EC9F  00                 	db	0
  8033  01ECA0  00                 	db	0
  8034  01ECA1  00                 	db	0
  8035  01ECA2  00                 	db	0
  8036  01ECA3  00                 	db	0
  8037  01ECA4  00                 	db	0
  8038  01ECA5  00                 	db	0
  8039  01ECA6  00                 	db	0
  8040  01ECA7  00                 	db	0
  8041  01ECA8  00                 	db	0
  8042  01ECA9  00                 	db	0
  8043  01ECAA  00                 	db	0
  8044  01ECAB  00                 	db	0
  8045  01ECAC  00                 	db	0
  8046  01ECAD  00                 	db	0
  8047  01ECAE  00                 	db	0
  8048  01ECAF  00                 	db	0
  8049  01ECB0  00                 	db	0
  8050  01ECB1  00                 	db	0
  8051  01ECB2  00                 	db	0
  8052  01ECB3  00                 	db	0
  8053  01ECB4  00                 	db	0
  8054  01ECB5  00                 	db	0
  8055  01ECB6  00                 	db	0
  8056  01ECB7  00                 	db	0
  8057  01ECB8  00                 	db	0
  8058  01ECB9  00                 	db	0
  8059  01ECBA  00                 	db	0
  8060  01ECBB  00                 	db	0
  8061  01ECBC  00                 	db	0
  8062  01ECBD  00                 	db	0
  8063  01ECBE  00                 	db	0
  8064  01ECBF  00                 	db	0
  8065  01ECC0  00                 	db	0
  8066  01ECC1  00                 	db	0
  8067  01ECC2  00                 	db	0
  8068  01ECC3  00                 	db	0
  8069  01ECC4  00                 	db	0
  8070  01ECC5  00                 	db	0
  8071  01ECC6  00                 	db	0
  8072  01ECC7  00                 	db	0
  8073  01ECC8  00                 	db	0
  8074  01ECC9  00                 	db	0
  8075  01ECCA  00                 	db	0
  8076  01ECCB  00                 	db	0
  8077  01ECCC  00                 	db	0
  8078  01ECCD  00                 	db	0
  8079  01ECCE  00                 	db	0
  8080  01ECCF  00                 	db	0
  8081  01ECD0  00                 	db	0
  8082  01ECD1  00                 	db	0
  8083  01ECD2  00                 	db	0
  8084  01ECD3  00                 	db	0
  8085  01ECD4  00                 	db	0
  8086  01ECD5  00                 	db	0
  8087  01ECD6  00                 	db	0
  8088  01ECD7  00                 	db	0
  8089  01ECD8  00                 	db	0
  8090  01ECD9  00                 	db	0
  8091  01ECDA  00                 	db	0
  8092  01ECDB  00                 	db	0
  8093  01ECDC  00                 	db	0
  8094  01ECDD  00                 	db	0
  8095  01ECDE  00                 	db	0
  8096  01ECDF  00                 	db	0
  8097  01ECE0  00                 	db	0
  8098  01ECE1  00                 	db	0
  8099  01ECE2  00                 	db	0
  8100  01ECE3  00                 	db	0
  8101  01ECE4  00                 	db	0
  8102  01ECE5  00                 	db	0
  8103  01ECE6  00                 	db	0
  8104  01ECE7  00                 	db	0
  8105  01ECE8  00                 	db	0
  8106  01ECE9  00                 	db	0
  8107  01ECEA  00                 	db	0
  8108  01ECEB  00                 	db	0
  8109  01ECEC  00                 	db	0
  8110  01ECED  00                 	db	0
  8111  01ECEE  00                 	db	0
  8112  01ECEF  00                 	db	0
  8113  01ECF0  00                 	db	0
  8114  01ECF1  00                 	db	0
  8115  01ECF2  00                 	db	0
  8116  01ECF3  00                 	db	0
  8117  01ECF4  00                 	db	0
  8118  01ECF5  00                 	db	0
  8119  01ECF6  00                 	db	0
  8120  01ECF7  00                 	db	0
  8121  01ECF8  00                 	db	0
  8122  01ECF9  00                 	db	0
  8123  01ECFA  00                 	db	0
  8124  01ECFB  00                 	db	0
  8125  01ECFC  00                 	db	0
  8126  01ECFD  00                 	db	0
  8127  01ECFE  00                 	db	0
  8128  01ECFF  00                 	db	0
  8129  01ED00  00                 	db	0
  8130  01ED01  00                 	db	0
  8131  01ED02  00                 	db	0
  8132  01ED03  00                 	db	0
  8133  01ED04  00                 	db	0
  8134  01ED05  00                 	db	0
  8135  01ED06  00                 	db	0
  8136  01ED07  00                 	db	0
  8137  01ED08  00                 	db	0
  8138  01ED09  00                 	db	0
  8139  01ED0A  00                 	db	0
  8140  01ED0B  00                 	db	0
  8141  01ED0C  00                 	db	0
  8142  01ED0D  00                 	db	0
  8143  01ED0E  00                 	db	0
  8144  01ED0F  00                 	db	0
  8145  01ED10  00                 	db	0
  8146  01ED11  00                 	db	0
  8147  01ED12  00                 	db	0
  8148  01ED13  00                 	db	0
  8149  01ED14  00                 	db	0
  8150  01ED15  00                 	db	0
  8151  01ED16  00                 	db	0
  8152  01ED17  00                 	db	0
  8153  01ED18  00                 	db	0
  8154  01ED19  00                 	db	0
  8155  01ED1A  00                 	db	0
  8156  01ED1B  00                 	db	0
  8157  01ED1C  00                 	db	0
  8158  01ED1D  00                 	db	0
  8159  01ED1E  00                 	db	0
  8160  01ED1F  00                 	db	0
  8161  01ED20  00                 	db	0
  8162  01ED21  00                 	db	0
  8163  01ED22  00                 	db	0
  8164  01ED23  00                 	db	0
  8165  01ED24  00                 	db	0
  8166  01ED25  00                 	db	0
  8167  01ED26  00                 	db	0
  8168  01ED27  00                 	db	0
  8169  01ED28  00                 	db	0
  8170  01ED29  00                 	db	0
  8171  01ED2A  00                 	db	0
  8172  01ED2B  00                 	db	0
  8173  01ED2C  00                 	db	0
  8174  01ED2D  00                 	db	0
  8175  01ED2E  00                 	db	0
  8176  01ED2F  00                 	db	0
  8177  01ED30  00                 	db	0
  8178  01ED31  00                 	db	0
  8179  01ED32  00                 	db	0
  8180  01ED33  00                 	db	0
  8181  01ED34  00                 	db	0
  8182  01ED35  00                 	db	0
  8183  01ED36  00                 	db	0
  8184  01ED37  00                 	db	0
  8185  01ED38  00                 	db	0
  8186  01ED39  00                 	db	0
  8187  01ED3A  00                 	db	0
  8188  01ED3B  00                 	db	0
  8189  01ED3C  00                 	db	0
  8190  01ED3D  00                 	db	0
  8191  01ED3E  00                 	db	0
  8192  01ED3F  00                 	db	0
  8193  01ED40  00                 	db	0
  8194  01ED41  00                 	db	0
  8195  01ED42  00                 	db	0
  8196  01ED43  00                 	db	0
  8197  01ED44  00                 	db	0
  8198  01ED45  00                 	db	0
  8199  01ED46  00                 	db	0
  8200  01ED47  00                 	db	0
  8201  01ED48  00                 	db	0
  8202  01ED49  00                 	db	0
  8203  01ED4A  00                 	db	0
  8204  01ED4B  00                 	db	0
  8205  01ED4C  00                 	db	0
  8206  01ED4D  00                 	db	0
  8207  01ED4E  00                 	db	0
  8208  01ED4F  00                 	db	0
  8209  01ED50  00                 	db	0
  8210  01ED51  00                 	db	0
  8211  01ED52  00                 	db	0
  8212  01ED53  00                 	db	0
  8213  01ED54  00                 	db	0
  8214  01ED55  00                 	db	0
  8215  01ED56  00                 	db	0
  8216  01ED57  00                 	db	0
  8217  01ED58  00                 	db	0
  8218  01ED59  00                 	db	0
  8219  01ED5A  00                 	db	0
  8220  01ED5B  00                 	db	0
  8221  01ED5C  00                 	db	0
  8222  01ED5D  00                 	db	0
  8223  01ED5E  00                 	db	0
  8224  01ED5F  00                 	db	0
  8225  01ED60  00                 	db	0
  8226  01ED61  00                 	db	0
  8227  01ED62  00                 	db	0
  8228  01ED63  00                 	db	0
  8229  01ED64  00                 	db	0
  8230  01ED65  00                 	db	0
  8231  01ED66  00                 	db	0
  8232  01ED67  00                 	db	0
  8233  01ED68  00                 	db	0
  8234  01ED69  00                 	db	0
  8235  01ED6A  00                 	db	0
  8236  01ED6B  00                 	db	0
  8237  01ED6C  00                 	db	0
  8238  01ED6D  00                 	db	0
  8239  01ED6E  00                 	db	0
  8240  01ED6F  00                 	db	0
  8241  01ED70  00                 	db	0
  8242  01ED71  00                 	db	0
  8243  01ED72  00                 	db	0
  8244  01ED73  00                 	db	0
  8245  01ED74  00                 	db	0
  8246  01ED75  00                 	db	0
  8247  01ED76  00                 	db	0
  8248  01ED77  00                 	db	0
  8249  01ED78  00                 	db	0
  8250  01ED79  00                 	db	0
  8251  01ED7A  00                 	db	0
  8252  01ED7B  00                 	db	0
  8253  01ED7C  00                 	db	0
  8254  01ED7D  00                 	db	0
  8255  01ED7E  00                 	db	0
  8256  01ED7F  00                 	db	0
  8257  01ED80  00                 	db	0
  8258  01ED81  00                 	db	0
  8259  01ED82  00                 	db	0
  8260  01ED83  00                 	db	0
  8261  01ED84  00                 	db	0
  8262  01ED85  00                 	db	0
  8263  01ED86  00                 	db	0
  8264  01ED87  00                 	db	0
  8265  01ED88  00                 	db	0
  8266  01ED89  00                 	db	0
  8267  01ED8A  00                 	db	0
  8268  01ED8B  00                 	db	0
  8269  01ED8C  00                 	db	0
  8270  01ED8D  00                 	db	0
  8271  01ED8E  00                 	db	0
  8272  01ED8F  00                 	db	0
  8273  01ED90  00                 	db	0
  8274  01ED91  00                 	db	0
  8275  01ED92  00                 	db	0
  8276  01ED93  00                 	db	0
  8277  01ED94  00                 	db	0
  8278  01ED95  00                 	db	0
  8279  01ED96  00                 	db	0
  8280  01ED97  00                 	db	0
  8281  01ED98  00                 	db	0
  8282  01ED99  00                 	db	0
  8283  01ED9A  00                 	db	0
  8284  01ED9B  00                 	db	0
  8285  01ED9C  00                 	db	0
  8286  01ED9D  00                 	db	0
  8287  01ED9E  00                 	db	0
  8288  01ED9F  00                 	db	0
  8289  01EDA0  00                 	db	0
  8290  01EDA1  00                 	db	0
  8291  01EDA2  00                 	db	0
  8292  01EDA3  00                 	db	0
  8293  01EDA4  00                 	db	0
  8294  01EDA5  00                 	db	0
  8295  01EDA6  00                 	db	0
  8296  01EDA7  00                 	db	0
  8297  01EDA8  00                 	db	0
  8298  01EDA9  00                 	db	0
  8299  01EDAA  00                 	db	0
  8300  01EDAB  00                 	db	0
  8301  01EDAC  00                 	db	0
  8302  01EDAD  00                 	db	0
  8303  01EDAE  00                 	db	0
  8304  01EDAF  00                 	db	0
  8305  01EDB0  00                 	db	0
  8306  01EDB1  00                 	db	0
  8307  01EDB2  00                 	db	0
  8308  01EDB3  00                 	db	0
  8309  01EDB4  00                 	db	0
  8310  01EDB5  00                 	db	0
  8311  01EDB6  00                 	db	0
  8312  01EDB7  00                 	db	0
  8313  01EDB8  00                 	db	0
  8314  01EDB9  00                 	db	0
  8315  01EDBA  00                 	db	0
  8316  01EDBB  00                 	db	0
  8317  01EDBC  00                 	db	0
  8318  01EDBD  00                 	db	0
  8319  01EDBE  00                 	db	0
  8320  01EDBF  00                 	db	0
  8321  01EDC0  00                 	db	0
  8322  01EDC1  00                 	db	0
  8323  01EDC2  00                 	db	0
  8324  01EDC3  00                 	db	0
  8325  01EDC4  00                 	db	0
  8326  01EDC5  00                 	db	0
  8327  01EDC6  00                 	db	0
  8328  01EDC7  00                 	db	0
  8329  01EDC8  00                 	db	0
  8330  01EDC9  00                 	db	0
  8331  01EDCA  00                 	db	0
  8332  01EDCB  00                 	db	0
  8333  01EDCC  00                 	db	0
  8334  01EDCD  00                 	db	0
  8335  01EDCE  00                 	db	0
  8336  01EDCF  00                 	db	0
  8337  01EDD0  00                 	db	0
  8338  01EDD1  00                 	db	0
  8339  01EDD2  00                 	db	0
  8340  01EDD3  00                 	db	0
  8341  01EDD4  00                 	db	0
  8342  01EDD5  00                 	db	0
  8343  01EDD6  00                 	db	0
  8344  01EDD7  00                 	db	0
  8345  01EDD8  00                 	db	0
  8346  01EDD9  00                 	db	0
  8347  01EDDA  00                 	db	0
  8348  01EDDB  00                 	db	0
  8349  01EDDC  00                 	db	0
  8350  01EDDD  00                 	db	0
  8351  01EDDE  00                 	db	0
  8352  01EDDF  00                 	db	0
  8353  01EDE0  00                 	db	0
  8354  01EDE1  00                 	db	0
  8355  01EDE2  00                 	db	0
  8356  01EDE3  00                 	db	0
  8357  01EDE4  00                 	db	0
  8358  01EDE5  00                 	db	0
  8359  01EDE6  00                 	db	0
  8360  01EDE7  00                 	db	0
  8361  01EDE8  00                 	db	0
  8362  01EDE9  00                 	db	0
  8363  01EDEA  00                 	db	0
  8364  01EDEB  00                 	db	0
  8365  01EDEC  00                 	db	0
  8366  01EDED  00                 	db	0
  8367  01EDEE  00                 	db	0
  8368  01EDEF  00                 	db	0
  8369  01EDF0  00                 	db	0
  8370  01EDF1  00                 	db	0
  8371  01EDF2  00                 	db	0
  8372  01EDF3  00                 	db	0
  8373  01EDF4  00                 	db	0
  8374  01EDF5  00                 	db	0
  8375  01EDF6  00                 	db	0
  8376  01EDF7  00                 	db	0
  8377  01EDF8  00                 	db	0
  8378  01EDF9  00                 	db	0
  8379  01EDFA  00                 	db	0
  8380  01EDFB  00                 	db	0
  8381  01EDFC  00                 	db	0
  8382  01EDFD  00                 	db	0
  8383  01EDFE  00                 	db	0
  8384  01EDFF  00                 	db	0
  8385  01EE00  00                 	db	0
  8386  01EE01  00                 	db	0
  8387  01EE02  00                 	db	0
  8388  01EE03  00                 	db	0
  8389  01EE04  00                 	db	0
  8390  01EE05  00                 	db	0
  8391  01EE06  00                 	db	0
  8392  01EE07  00                 	db	0
  8393  01EE08  00                 	db	0
  8394  01EE09  00                 	db	0
  8395  01EE0A  00                 	db	0
  8396  01EE0B  00                 	db	0
  8397  01EE0C  00                 	db	0
  8398  01EE0D  00                 	db	0
  8399  01EE0E  00                 	db	0
  8400  01EE0F  00                 	db	0
  8401  01EE10  00                 	db	0
  8402  01EE11  00                 	db	0
  8403  01EE12  00                 	db	0
  8404  01EE13  00                 	db	0
  8405  01EE14  00                 	db	0
  8406  01EE15  00                 	db	0
  8407  01EE16  00                 	db	0
  8408  01EE17  00                 	db	0
  8409  01EE18  00                 	db	0
  8410  01EE19  00                 	db	0
  8411  01EE1A  00                 	db	0
  8412  01EE1B  00                 	db	0
  8413  01EE1C  00                 	db	0
  8414  01EE1D  00                 	db	0
  8415  01EE1E  00                 	db	0
  8416  01EE1F  00                 	db	0
  8417  01EE20  00                 	db	0
  8418  01EE21  00                 	db	0
  8419  01EE22  00                 	db	0
  8420  01EE23  00                 	db	0
  8421  01EE24  00                 	db	0
  8422  01EE25  00                 	db	0
  8423  01EE26  00                 	db	0
  8424  01EE27  00                 	db	0
  8425  01EE28  00                 	db	0
  8426  01EE29  00                 	db	0
  8427  01EE2A  00                 	db	0
  8428  01EE2B  00                 	db	0
  8429  01EE2C  00                 	db	0
  8430  01EE2D  00                 	db	0
  8431  01EE2E  00                 	db	0
  8432  01EE2F  00                 	db	0
  8433  01EE30  00                 	db	0
  8434  01EE31  00                 	db	0
  8435  01EE32  00                 	db	0
  8436  01EE33  00                 	db	0
  8437  01EE34  00                 	db	0
  8438  01EE35  00                 	db	0
  8439  01EE36  00                 	db	0
  8440  01EE37  00                 	db	0
  8441  01EE38  00                 	db	0
  8442  01EE39  00                 	db	0
  8443  01EE3A  00                 	db	0
  8444  01EE3B  00                 	db	0
  8445  01EE3C  00                 	db	0
  8446  01EE3D  00                 	db	0
  8447  01EE3E  00                 	db	0
  8448  01EE3F  00                 	db	0
  8449  01EE40  00                 	db	0
  8450  01EE41  00                 	db	0
  8451  01EE42  00                 	db	0
  8452  01EE43  00                 	db	0
  8453  01EE44  00                 	db	0
  8454  01EE45  00                 	db	0
  8455  01EE46  00                 	db	0
  8456  01EE47  00                 	db	0
  8457  01EE48  00                 	db	0
  8458  01EE49  00                 	db	0
  8459  01EE4A  00                 	db	0
  8460  01EE4B  00                 	db	0
  8461  01EE4C  00                 	db	0
  8462  01EE4D  00                 	db	0
  8463  01EE4E  00                 	db	0
  8464  01EE4F  00                 	db	0
  8465  01EE50  00                 	db	0
  8466  01EE51  00                 	db	0
  8467  01EE52  00                 	db	0
  8468  01EE53  00                 	db	0
  8469  01EE54  00                 	db	0
  8470  01EE55  00                 	db	0
  8471  01EE56  00                 	db	0
  8472  01EE57  00                 	db	0
  8473  01EE58  00                 	db	0
  8474  01EE59  00                 	db	0
  8475  01EE5A  00                 	db	0
  8476  01EE5B  00                 	db	0
  8477  01EE5C  00                 	db	0
  8478  01EE5D  00                 	db	0
  8479  01EE5E  00                 	db	0
  8480  01EE5F  00                 	db	0
  8481  01EE60  00                 	db	0
  8482  01EE61  00                 	db	0
  8483  01EE62  00                 	db	0
  8484  01EE63  00                 	db	0
  8485  01EE64  00                 	db	0
  8486  01EE65  00                 	db	0
  8487  01EE66  00                 	db	0
  8488  01EE67  00                 	db	0
  8489  01EE68  00                 	db	0
  8490  01EE69  00                 	db	0
  8491  01EE6A  00                 	db	0
  8492  01EE6B  00                 	db	0
  8493  01EE6C  00                 	db	0
  8494  01EE6D  00                 	db	0
  8495  01EE6E  00                 	db	0
  8496  01EE6F  00                 	db	0
  8497  01EE70  00                 	db	0
  8498  01EE71  00                 	db	0
  8499  01EE72  00                 	db	0
  8500  01EE73  00                 	db	0
  8501  01EE74  00                 	db	0
  8502  01EE75  00                 	db	0
  8503  01EE76  00                 	db	0
  8504  01EE77  00                 	db	0
  8505  01EE78  00                 	db	0
  8506  01EE79  00                 	db	0
  8507  01EE7A  00                 	db	0
  8508  01EE7B  00                 	db	0
  8509  01EE7C  00                 	db	0
  8510  01EE7D  00                 	db	0
  8511  01EE7E  00                 	db	0
  8512  01EE7F  00                 	db	0
  8513  01EE80  00                 	db	0
  8514  01EE81  00                 	db	0
  8515  01EE82  00                 	db	0
  8516  01EE83  00                 	db	0
  8517  01EE84  00                 	db	0
  8518  01EE85  00                 	db	0
  8519  01EE86  00                 	db	0
  8520  01EE87  00                 	db	0
  8521  01EE88  00                 	db	0
  8522  01EE89  00                 	db	0
  8523  01EE8A  00                 	db	0
  8524  01EE8B  00                 	db	0
  8525  01EE8C  00                 	db	0
  8526  01EE8D  00                 	db	0
  8527  01EE8E  00                 	db	0
  8528  01EE8F  00                 	db	0
  8529  01EE90  00                 	db	0
  8530  01EE91  00                 	db	0
  8531  01EE92  00                 	db	0
  8532  01EE93  00                 	db	0
  8533  01EE94  00                 	db	0
  8534  01EE95  00                 	db	0
  8535  01EE96  00                 	db	0
  8536  01EE97  00                 	db	0
  8537  01EE98  00                 	db	0
  8538  01EE99  00                 	db	0
  8539  01EE9A  00                 	db	0
  8540  01EE9B  00                 	db	0
  8541  01EE9C  00                 	db	0
  8542  01EE9D  00                 	db	0
  8543  01EE9E  00                 	db	0
  8544  01EE9F  00                 	db	0
  8545  01EEA0  00                 	db	0
  8546  01EEA1  00                 	db	0
  8547  01EEA2  00                 	db	0
  8548  01EEA3  00                 	db	0
  8549  01EEA4  00                 	db	0
  8550  01EEA5  00                 	db	0
  8551  01EEA6  00                 	db	0
  8552  01EEA7  00                 	db	0
  8553  01EEA8  00                 	db	0
  8554  01EEA9  00                 	db	0
  8555  01EEAA  00                 	db	0
  8556  01EEAB  00                 	db	0
  8557  01EEAC  00                 	db	0
  8558  01EEAD  00                 	db	0
  8559  01EEAE  00                 	db	0
  8560  01EEAF  00                 	db	0
  8561  01EEB0  00                 	db	0
  8562  01EEB1  00                 	db	0
  8563  01EEB2  00                 	db	0
  8564  01EEB3  00                 	db	0
  8565  01EEB4  00                 	db	0
  8566  01EEB5  00                 	db	0
  8567  01EEB6  00                 	db	0
  8568  01EEB7  00                 	db	0
  8569  01EEB8  00                 	db	0
  8570  01EEB9  00                 	db	0
  8571  01EEBA  00                 	db	0
  8572  01EEBB  00                 	db	0
  8573  01EEBC  00                 	db	0
  8574  01EEBD  00                 	db	0
  8575  01EEBE  00                 	db	0
  8576  01EEBF  00                 	db	0
  8577  01EEC0  00                 	db	0
  8578  01EEC1  00                 	db	0
  8579  01EEC2  00                 	db	0
  8580  01EEC3  00                 	db	0
  8581  01EEC4  00                 	db	0
  8582  01EEC5  00                 	db	0
  8583  01EEC6  00                 	db	0
  8584  01EEC7  00                 	db	0
  8585  01EEC8  00                 	db	0
  8586  01EEC9  00                 	db	0
  8587  01EECA  00                 	db	0
  8588  01EECB  00                 	db	0
  8589  01EECC  00                 	db	0
  8590  01EECD  00                 	db	0
  8591  01EECE  00                 	db	0
  8592  01EECF  00                 	db	0
  8593  01EED0  00                 	db	0
  8594  01EED1  00                 	db	0
  8595  01EED2  00                 	db	0
  8596  01EED3  00                 	db	0
  8597  01EED4  00                 	db	0
  8598  01EED5  00                 	db	0
  8599  01EED6  00                 	db	0
  8600  01EED7  00                 	db	0
  8601  01EED8  00                 	db	0
  8602  01EED9  00                 	db	0
  8603  01EEDA  00                 	db	0
  8604  01EEDB  00                 	db	0
  8605  01EEDC  00                 	db	0
  8606  01EEDD  00                 	db	0
  8607  01EEDE  00                 	db	0
  8608  01EEDF  00                 	db	0
  8609  01EEE0  00                 	db	0
  8610  01EEE1  00                 	db	0
  8611  01EEE2  00                 	db	0
  8612  01EEE3  00                 	db	0
  8613  01EEE4  00                 	db	0
  8614  01EEE5  00                 	db	0
  8615  01EEE6  00                 	db	0
  8616  01EEE7  00                 	db	0
  8617  01EEE8  00                 	db	0
  8618  01EEE9  00                 	db	0
  8619  01EEEA  00                 	db	0
  8620  01EEEB  00                 	db	0
  8621  01EEEC  00                 	db	0
  8622  01EEED  00                 	db	0
  8623  01EEEE  00                 	db	0
  8624  01EEEF  00                 	db	0
  8625  01EEF0  00                 	db	0
  8626  01EEF1  00                 	db	0
  8627  01EEF2  00                 	db	0
  8628  01EEF3  00                 	db	0
  8629  01EEF4  00                 	db	0
  8630  01EEF5  00                 	db	0
  8631  01EEF6  00                 	db	0
  8632  01EEF7  00                 	db	0
  8633  01EEF8  00                 	db	0
  8634  01EEF9  00                 	db	0
  8635  01EEFA  00                 	db	0
  8636  01EEFB  00                 	db	0
  8637  01EEFC  00                 	db	0
  8638  01EEFD  00                 	db	0
  8639  01EEFE  00                 	db	0
  8640  01EEFF  00                 	db	0
  8641  01EF00  00                 	db	0
  8642  01EF01  00                 	db	0
  8643  01EF02  00                 	db	0
  8644  01EF03  00                 	db	0
  8645  01EF04  00                 	db	0
  8646  01EF05  00                 	db	0
  8647  01EF06  00                 	db	0
  8648  01EF07  00                 	db	0
  8649  01EF08  00                 	db	0
  8650  01EF09  00                 	db	0
  8651  01EF0A  00                 	db	0
  8652  01EF0B  00                 	db	0
  8653  01EF0C  00                 	db	0
  8654  01EF0D  00                 	db	0
  8655  01EF0E  00                 	db	0
  8656  01EF0F  00                 	db	0
  8657  01EF10  00                 	db	0
  8658  01EF11  00                 	db	0
  8659  01EF12  00                 	db	0
  8660  01EF13  00                 	db	0
  8661  01EF14  00                 	db	0
  8662  01EF15  00                 	db	0
  8663  01EF16  00                 	db	0
  8664  01EF17  00                 	db	0
  8665  01EF18  00                 	db	0
  8666  01EF19  00                 	db	0
  8667  01EF1A  00                 	db	0
  8668  01EF1B  00                 	db	0
  8669  01EF1C  00                 	db	0
  8670  01EF1D  00                 	db	0
  8671  01EF1E  00                 	db	0
  8672  01EF1F  00                 	db	0
  8673  01EF20  00                 	db	0
  8674  01EF21  00                 	db	0
  8675  01EF22  00                 	db	0
  8676  01EF23  00                 	db	0
  8677  01EF24  00                 	db	0
  8678  01EF25  00                 	db	0
  8679  01EF26  00                 	db	0
  8680  01EF27  00                 	db	0
  8681  01EF28  00                 	db	0
  8682  01EF29  00                 	db	0
  8683  01EF2A  00                 	db	0
  8684  01EF2B  00                 	db	0
  8685  01EF2C  00                 	db	0
  8686  01EF2D  00                 	db	0
  8687  01EF2E  00                 	db	0
  8688  01EF2F  00                 	db	0
  8689  01EF30  00                 	db	0
  8690  01EF31  00                 	db	0
  8691  01EF32  00                 	db	0
  8692  01EF33  00                 	db	0
  8693  01EF34  00                 	db	0
  8694  01EF35  00                 	db	0
  8695  01EF36  00                 	db	0
  8696  01EF37  00                 	db	0
  8697  01EF38  00                 	db	0
  8698  01EF39  00                 	db	0
  8699  01EF3A  00                 	db	0
  8700  01EF3B  00                 	db	0
  8701  01EF3C  00                 	db	0
  8702  01EF3D  00                 	db	0
  8703  01EF3E  00                 	db	0
  8704  01EF3F  00                 	db	0
  8705  01EF40  00                 	db	0
  8706  01EF41  00                 	db	0
  8707  01EF42  00                 	db	0
  8708  01EF43  00                 	db	0
  8709  01EF44  00                 	db	0
  8710  01EF45  00                 	db	0
  8711  01EF46  00                 	db	0
  8712  01EF47  00                 	db	0
  8713  01EF48  00                 	db	0
  8714  01EF49  00                 	db	0
  8715  01EF4A  00                 	db	0
  8716  01EF4B  00                 	db	0
  8717  01EF4C  00                 	db	0
  8718  01EF4D  00                 	db	0
  8719  01EF4E  00                 	db	0
  8720  01EF4F  00                 	db	0
  8721  01EF50  00                 	db	0
  8722  01EF51  00                 	db	0
  8723  01EF52  00                 	db	0
  8724  01EF53  00                 	db	0
  8725  01EF54  00                 	db	0
  8726  01EF55  00                 	db	0
  8727  01EF56  00                 	db	0
  8728  01EF57  00                 	db	0
  8729  01EF58  00                 	db	0
  8730  01EF59  00                 	db	0
  8731  01EF5A  00                 	db	0
  8732  01EF5B  00                 	db	0
  8733  01EF5C  00                 	db	0
  8734  01EF5D  00                 	db	0
  8735  01EF5E  00                 	db	0
  8736  01EF5F  00                 	db	0
  8737  01EF60  00                 	db	0
  8738  01EF61  00                 	db	0
  8739  01EF62  00                 	db	0
  8740  01EF63  00                 	db	0
  8741  01EF64  00                 	db	0
  8742  01EF65  00                 	db	0
  8743  01EF66  00                 	db	0
  8744  01EF67  00                 	db	0
  8745  01EF68  00                 	db	0
  8746  01EF69  00                 	db	0
  8747  01EF6A  00                 	db	0
  8748  01EF6B  00                 	db	0
  8749  01EF6C  00                 	db	0
  8750  01EF6D  00                 	db	0
  8751  01EF6E  00                 	db	0
  8752  01EF6F  00                 	db	0
  8753  01EF70  00                 	db	0
  8754  01EF71  00                 	db	0
  8755  01EF72  00                 	db	0
  8756  01EF73  00                 	db	0
  8757  01EF74  00                 	db	0
  8758  01EF75  00                 	db	0
  8759  01EF76  00                 	db	0
  8760  01EF77  00                 	db	0
  8761  01EF78  00                 	db	0
  8762  01EF79  00                 	db	0
  8763  01EF7A  00                 	db	0
  8764  01EF7B  00                 	db	0
  8765  01EF7C  00                 	db	0
  8766  01EF7D  00                 	db	0
  8767  01EF7E  00                 	db	0
  8768  01EF7F  00                 	db	0
  8769  01EF80  00                 	db	0
  8770  01EF81  00                 	db	0
  8771  01EF82  00                 	db	0
  8772  01EF83  00                 	db	0
  8773  01EF84  00                 	db	0
  8774  01EF85  00                 	db	0
  8775  01EF86  00                 	db	0
  8776  01EF87  00                 	db	0
  8777  01EF88  00                 	db	0
  8778  01EF89  00                 	db	0
  8779  01EF8A  00                 	db	0
  8780  01EF8B  00                 	db	0
  8781  01EF8C  00                 	db	0
  8782  01EF8D  00                 	db	0
  8783  01EF8E  00                 	db	0
  8784  01EF8F  00                 	db	0
  8785  01EF90  00                 	db	0
  8786  01EF91  00                 	db	0
  8787  01EF92  00                 	db	0
  8788  01EF93  00                 	db	0
  8789  01EF94  00                 	db	0
  8790  01EF95  00                 	db	0
  8791  01EF96  00                 	db	0
  8792  01EF97  00                 	db	0
  8793  01EF98  00                 	db	0
  8794  01EF99  00                 	db	0
  8795  01EF9A  00                 	db	0
  8796  01EF9B  00                 	db	0
  8797  01EF9C  00                 	db	0
  8798  01EF9D  00                 	db	0
  8799  01EF9E  00                 	db	0
  8800  01EF9F  00                 	db	0
  8801  01EFA0  00                 	db	0
  8802  01EFA1  00                 	db	0
  8803  01EFA2  00                 	db	0
  8804  01EFA3  00                 	db	0
  8805  01EFA4  00                 	db	0
  8806  01EFA5  00                 	db	0
  8807  01EFA6  00                 	db	0
  8808  01EFA7  00                 	db	0
  8809  01EFA8  00                 	db	0
  8810  01EFA9  00                 	db	0
  8811  01EFAA  00                 	db	0
  8812  01EFAB  00                 	db	0
  8813  01EFAC  00                 	db	0
  8814  01EFAD  00                 	db	0
  8815  01EFAE  00                 	db	0
  8816  01EFAF  00                 	db	0
  8817  01EFB0  00                 	db	0
  8818  01EFB1  00                 	db	0
  8819  01EFB2  00                 	db	0
  8820  01EFB3  00                 	db	0
  8821  01EFB4  00                 	db	0
  8822  01EFB5  00                 	db	0
  8823  01EFB6  00                 	db	0
  8824  01EFB7  00                 	db	0
  8825  01EFB8  00                 	db	0
  8826  01EFB9  00                 	db	0
  8827  01EFBA  00                 	db	0
  8828  01EFBB  00                 	db	0
  8829  01EFBC  00                 	db	0
  8830  01EFBD  00                 	db	0
  8831  01EFBE  00                 	db	0
  8832  01EFBF  00                 	db	0
  8833  01EFC0  00                 	db	0
  8834  01EFC1  00                 	db	0
  8835  01EFC2  00                 	db	0
  8836  01EFC3  00                 	db	0
  8837  01EFC4  00                 	db	0
  8838  01EFC5  00                 	db	0
  8839  01EFC6  00                 	db	0
  8840  01EFC7  00                 	db	0
  8841  01EFC8  00                 	db	0
  8842  01EFC9  00                 	db	0
  8843  01EFCA  00                 	db	0
  8844  01EFCB  00                 	db	0
  8845  01EFCC  00                 	db	0
  8846  01EFCD  00                 	db	0
  8847  01EFCE  00                 	db	0
  8848  01EFCF  00                 	db	0
  8849  01EFD0  00                 	db	0
  8850  01EFD1  00                 	db	0
  8851  01EFD2  00                 	db	0
  8852  01EFD3  00                 	db	0
  8853  01EFD4  00                 	db	0
  8854  01EFD5  00                 	db	0
  8855  01EFD6  00                 	db	0
  8856  01EFD7  00                 	db	0
  8857  01EFD8  00                 	db	0
  8858  01EFD9  00                 	db	0
  8859  01EFDA  00                 	db	0
  8860  01EFDB  00                 	db	0
  8861  01EFDC  00                 	db	0
  8862  01EFDD  00                 	db	0
  8863  01EFDE  00                 	db	0
  8864  01EFDF  00                 	db	0
  8865  01EFE0  00                 	db	0
  8866  01EFE1  00                 	db	0
  8867  01EFE2  00                 	db	0
  8868  01EFE3  00                 	db	0
  8869  01EFE4  00                 	db	0
  8870  01EFE5  00                 	db	0
  8871  01EFE6  00                 	db	0
  8872  01EFE7  00                 	db	0
  8873  01EFE8  00                 	db	0
  8874  01EFE9  00                 	db	0
  8875  01EFEA  00                 	db	0
  8876  01EFEB  00                 	db	0
  8877  01EFEC  00                 	db	0
  8878  01EFED  00                 	db	0
  8879  01EFEE  00                 	db	0
  8880  01EFEF  00                 	db	0
  8881  01EFF0  00                 	db	0
  8882  01EFF1  00                 	db	0
  8883  01EFF2  00                 	db	0
  8884  01EFF3  00                 	db	0
  8885  01EFF4  00                 	db	0
  8886  01EFF5  00                 	db	0
  8887  01EFF6  00                 	db	0
  8888  01EFF7  00                 	db	0
  8889  01EFF8  00                 	db	0
  8890  01EFF9  00                 	db	0
  8891  01EFFA  00                 	db	0
  8892  01EFFB  00                 	db	0
  8893  01EFFC  00                 	db	0
  8894  01EFFD  00                 	db	0
  8895  01EFFE  00                 	db	0
  8896  01EFFF  00                 	db	0
  8897  01F000                     __end_of_reserveSettingsArr:
  8898                           	opt stack 0
  8899  0000                     _EDMADST	set	3828
  8900  0000                     _EDMAND	set	3826
  8901  0000                     _EDMAST	set	3824
  8902  0000                     _ERDPT	set	3962
  8903  0000                     _ERXND	set	3818
  8904  0000                     _ERXRDPT	set	3820
  8905  0000                     _ERXST	set	3816
  8906  0000                     _ERXWRPT	set	3822
  8907  0000                     _ETXND	set	3814
  8908  0000                     _ETXST	set	3812
  8909  0000                     _EWRPT	set	3810
  8910  0000                     _ADCON0	set	4034
  8911  0000                     _ADCON0bits	set	4034
  8912  0000                     _ADCON1	set	4033
  8913  0000                     _ADCON2	set	4032
  8914  0000                     _CMCON	set	4020
  8915  0000                     _ECON1bits	set	4050
  8916  0000                     _ECON2bits	set	3838
  8917  0000                     _EECON1bits	set	4006
  8918  0000                     _EECON2	set	4007
  8919  0000                     _EIRbits	set	3936
  8920  0000                     _EPKTCNT	set	3801
  8921  0000                     _ERDPTH	set	3963
  8922  0000                     _ERDPTL	set	3962
  8923  0000                     _ERXRDPTH	set	3821
  8924  0000                     _ERXRDPTL	set	3820
  8925  0000                     _ESTATbits	set	3837
  8926  0000                     _INTCON	set	4082
  8927  0000                     _INTCON2	set	4081
  8928  0000                     _INTCON2bits	set	4081
  8929  0000                     _INTCON3	set	4080
  8930  0000                     _INTCON3bits	set	4080
  8931  0000                     _INTCONbits	set	4082
  8932  0000                     _LATA	set	3977
  8933  0000                     _LATAbits	set	3977
  8934  0000                     _LATB	set	3978
  8935  0000                     _LATBbits	set	3978
  8936  0000                     _LATC	set	3979
  8937  0000                     _LATD	set	3980
  8938  0000                     _LATDbits	set	3980
  8939  0000                     _LATE	set	3981
  8940  0000                     _LATEbits	set	3981
  8941  0000                     _LATFbits	set	3982
  8942  0000                     _LATGbits	set	3983
  8943  0000                     _MAADR1	set	3716
  8944  0000                     _MAADR2	set	3717
  8945  0000                     _MAADR3	set	3714
  8946  0000                     _MAADR4	set	3715
  8947  0000                     _MAADR5	set	3712
  8948  0000                     _MAADR6	set	3713
  8949  0000                     _MABBIPG	set	3748
  8950  0000                     _MACON1	set	3744
  8951  0000                     _MACON3	set	3746
  8952  0000                     _MACON4	set	3747
  8953  0000                     _MAIPGH	set	3751
  8954  0000                     _MAIPGL	set	3750
  8955  0000                     _MAMXFLH	set	3755
  8956  0000                     _MAMXFLL	set	3754
  8957  0000                     _MICMD	set	3762
  8958  0000                     _MIRDH	set	3769
  8959  0000                     _MIRDL	set	3768
  8960  0000                     _MIREGADR	set	3764
  8961  0000                     _MISTATbits	set	3722
  8962  0000                     _OSCCONbits	set	4051
  8963  0000                     _OSCTUNE	set	3995
  8964  0000                     _PIE1bits	set	3997
  8965  0000                     _PIR1bits	set	3998
  8966  0000                     _PORTAbits	set	3968
  8967  0000                     _PORTBbits	set	3969
  8968  0000                     _PORTC	set	3970
  8969  0000                     _RCONbits	set	4048
  8970  0000                     _T0CON	set	4053
  8971  0000                     _T1CONbits	set	4045
  8972  0000                     _TABLAT	set	4085
  8973  0000                     _TBLPTRH	set	4087
  8974  0000                     _TBLPTRL	set	4086
  8975  0000                     _TBLPTRU	set	4088
  8976  0000                     _TMR0H	set	4055
  8977  0000                     _TMR0L	set	4054
  8978  0000                     _TMR1L	set	4046
  8979  0000                     _TRISA	set	3986
  8980  0000                     _TRISAbits	set	3986
  8981  0000                     _TRISB	set	3987
  8982  0000                     _TRISC	set	3988
  8983  0000                     _TRISD	set	3989
  8984  0000                     _TRISE	set	3990
  8985  0000                     _TRISF	set	3991
  8986  0000                     _TRISG	set	3992
  8987  0000                     
  8988                           	psect	nvBANK2
  8989  0002D3                     __pnvBANK2:
  8990                           	opt stack 0
  8991  0002D3                     _s_dacSettings:
  8992                           	opt stack 0
  8993  0002D3                     	ds	20
  8994  0002E7                     _s_dacSettingsTmp:
  8995                           	opt stack 0
  8996  0002E7                     	ds	20
  8997                           
  8998                           	psect	nvBANK3
  8999  000300                     __pnvBANK3:
  9000                           	opt stack 0
  9001  000300                     _s_dacSettingsOriginal:
  9002                           	opt stack 0
  9003  000300                     	ds	20
  9004  0000                     
  9005                           	psect	cinit
  9006  01A9DC                     __pcinit:
  9007                           	opt stack 0
  9008  01A9DC                     start_initialization:
  9009                           	opt stack 0
  9010  01A9DC                     __initialization:
  9011                           	opt stack 0
  9012                           
  9013                           ; Clear objects allocated to BANK4 (256 bytes)
  9014  01A9DC  EE04  F000         	lfsr	0,__pbssBANK4
  9015  01A9E0  EE11 F000          	lfsr	1,256
  9016  01A9E4                     clear_0:
  9017  01A9E4  6AEE               	clrf	postinc0,c
  9018  01A9E6  50E5               	movf	postdec1,w,c
  9019  01A9E8  50E1               	movf	fsr1l,w,c
  9020  01A9EA  E1FC               	bnz	clear_0
  9021  01A9EC  50E2               	movf	fsr1h,w,c
  9022  01A9EE  E1FA               	bnz	clear_0
  9023                           
  9024                           ; Clear objects allocated to BANK2 (211 bytes)
  9025  01A9F0  EE02  F000         	lfsr	0,__pbssBANK2
  9026  01A9F4  0ED3               	movlw	211
  9027  01A9F6                     clear_1:
  9028  01A9F6  6AEE               	clrf	postinc0,c
  9029  01A9F8  06E8               	decf	wreg,f,c
  9030  01A9FA  E1FD               	bnz	clear_1
  9031                           
  9032                           ; Clear objects allocated to BANK1 (73 bytes)
  9033  01A9FC  EE01  F0B3         	lfsr	0,__pbssBANK1
  9034  01AA00  0E49               	movlw	73
  9035  01AA02                     clear_2:
  9036  01AA02  6AEE               	clrf	postinc0,c
  9037  01AA04  06E8               	decf	wreg,f,c
  9038  01AA06  E1FD               	bnz	clear_2
  9039                           
  9040                           ; Clear objects allocated to BANK0 (64 bytes)
  9041  01AA08  EE00  F0B3         	lfsr	0,__pbssBANK0
  9042  01AA0C  0E40               	movlw	64
  9043  01AA0E                     clear_3:
  9044  01AA0E  6AEE               	clrf	postinc0,c
  9045  01AA10  06E8               	decf	wreg,f,c
  9046  01AA12  E1FD               	bnz	clear_3
  9047                           
  9048                           ; Clear objects allocated to COMRAM (1 bytes)
  9049  01AA14  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  9050                           
  9051                           ; Initialize objects allocated to BANK1 (4 bytes)
  9052                           ; load TBLPTR registers with __pidataBANK1
  9053  01AA16  0E7A               	movlw	low __pidataBANK1
  9054  01AA18  6EF6               	movwf	tblptrl,c
  9055  01AA1A  0EBA               	movlw	high __pidataBANK1
  9056  01AA1C  6EF7               	movwf	tblptrh,c
  9057  01AA1E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  9058  01AA20  6EF8               	movwf	tblptru,c
  9059  01AA22  EE01  F0FC         	lfsr	0,__pdataBANK1
  9060  01AA26  EE10 F004          	lfsr	1,4
  9061  01AA2A                     copy_data0:
  9062  01AA2A  0009               	tblrd		*+
  9063  01AA2C  CFF5 FFEE          	movff	tablat,postinc0
  9064  01AA30  50E5               	movf	postdec1,w,c
  9065  01AA32  50E1               	movf	fsr1l,w,c
  9066  01AA34  E1FA               	bnz	copy_data0
  9067                           
  9068                           ; Initialize objects allocated to BANK0 (11 bytes)
  9069                           ; load TBLPTR registers with __pidataBANK0
  9070  01AA36  0E5C               	movlw	low __pidataBANK0
  9071  01AA38  6EF6               	movwf	tblptrl,c
  9072  01AA3A  0EBA               	movlw	high __pidataBANK0
  9073  01AA3C  6EF7               	movwf	tblptrh,c
  9074  01AA3E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  9075  01AA40  6EF8               	movwf	tblptru,c
  9076  01AA42  EE00  F0F3         	lfsr	0,__pdataBANK0
  9077  01AA46  EE10 F00B          	lfsr	1,11
  9078  01AA4A                     copy_data1:
  9079  01AA4A  0009               	tblrd		*+
  9080  01AA4C  CFF5 FFEE          	movff	tablat,postinc0
  9081  01AA50  50E5               	movf	postdec1,w,c
  9082  01AA52  50E1               	movf	fsr1l,w,c
  9083  01AA54  E1FA               	bnz	copy_data1
  9084  01AA56                     end_of_initialization:
  9085                           	opt stack 0
  9086  01AA56                     __end_of__initialization:
  9087                           	opt stack 0
  9088  01AA56  0100               	movlb	0
  9089  01AA58  EFA0  F0D9         	goto	_main	;jump to C main() function
  9090                           tblptru	equ	0xFF8
  9091                           tblptrh	equ	0xFF7
  9092                           tblptrl	equ	0xFF6
  9093                           tablat	equ	0xFF5
  9094                           postinc0	equ	0xFEE
  9095                           wreg	equ	0xFE8
  9096                           postdec1	equ	0xFE5
  9097                           fsr1h	equ	0xFE2
  9098                           fsr1l	equ	0xFE1
  9099                           
  9100                           	psect	bssCOMRAM
  9101  00005F                     __pbssCOMRAM:
  9102                           	opt stack 0
  9103  00005F                     StackInit@once:
  9104                           	opt stack 0
  9105  00005F                     	ds	1
  9106                           tblptru	equ	0xFF8
  9107                           tblptrh	equ	0xFF7
  9108                           tblptrl	equ	0xFF6
  9109                           tablat	equ	0xFF5
  9110                           postinc0	equ	0xFEE
  9111                           wreg	equ	0xFE8
  9112                           postdec1	equ	0xFE5
  9113                           fsr1h	equ	0xFE2
  9114                           fsr1l	equ	0xFE1
  9115                           
  9116                           	psect	bssBANK0
  9117  0000B3                     __pbssBANK0:
  9118                           	opt stack 0
  9119  0000B3                     ARPProcess@Target:
  9120                           	opt stack 0
  9121  0000B3                     	ds	10
  9122  0000BD                     _Cache:
  9123                           	opt stack 0
  9124  0000BD                     	ds	10
  9125  0000C7                     _vTickReading:
  9126                           	opt stack 0
  9127  0000C7                     	ds	6
  9128  0000CD                     CalcIPBufferChecksum@F7102:
  9129                           	opt stack 0
  9130  0000CD                     	ds	4
  9131  0000D1                     _dwInternalTicks:
  9132                           	opt stack 0
  9133  0000D1                     	ds	4
  9134  0000D5                     _s_encoderLastUpdate:
  9135                           	opt stack 0
  9136  0000D5                     	ds	4
  9137  0000D9                     _s_lastIRCodeReceived:
  9138                           	opt stack 0
  9139  0000D9                     	ds	4
  9140  0000DD                     _s_numTicksPrev:
  9141                           	opt stack 0
  9142  0000DD                     	ds	4
  9143  0000E1                     _CurrentPacketLocation:
  9144                           	opt stack 0
  9145  0000E1                     	ds	2
  9146  0000E3                     _NextPacketLocation:
  9147                           	opt stack 0
  9148  0000E3                     	ds	2
  9149  0000E5                     _NextPort:
  9150                           	opt stack 0
  9151  0000E5                     	ds	2
  9152  0000E7                     __Identifier:
  9153                           	opt stack 0
  9154  0000E7                     	ds	2
  9155  0000E9                     _s_numTicksDiffIdx:
  9156                           	opt stack 0
  9157  0000E9                     	ds	2
  9158  0000EB                     _wTXWatchdog:
  9159                           	opt stack 0
  9160  0000EB                     	ds	2
  9161  0000ED                     TCPServer@tcpServerState:
  9162                           	opt stack 0
  9163  0000ED                     	ds	1
  9164  0000EE                     _smStack:
  9165                           	opt stack 0
  9166  0000EE                     	ds	1
  9167  0000EF                     _toRotate:
  9168                           	opt stack 0
  9169  0000EF                     	ds	4
  9170                           tblptru	equ	0xFF8
  9171                           tblptrh	equ	0xFF7
  9172                           tblptrl	equ	0xFF6
  9173                           tablat	equ	0xFF5
  9174                           postinc0	equ	0xFEE
  9175                           wreg	equ	0xFE8
  9176                           postdec1	equ	0xFE5
  9177                           fsr1h	equ	0xFE2
  9178                           fsr1l	equ	0xFE1
  9179                           
  9180                           	psect	dataBANK0
  9181  0000F3                     __pdataBANK0:
  9182                           	opt stack 0
  9183  0000F3                     _dwLFSRRandSeed:
  9184                           	opt stack 0
  9185  0000F3                     	ds	4
  9186  0000F7                     _resOK:
  9187                           	opt stack 0
  9188  0000F7                     	ds	3
  9189  0000FA                     _badChecksum:
  9190                           	opt stack 0
  9191  0000FA                     	ds	2
  9192  0000FC                     _invalidCommand:
  9193                           	opt stack 0
  9194  0000FC                     	ds	2
  9195                           tblptru	equ	0xFF8
  9196                           tblptrh	equ	0xFF7
  9197                           tblptrl	equ	0xFF6
  9198                           tablat	equ	0xFF5
  9199                           postinc0	equ	0xFEE
  9200                           wreg	equ	0xFE8
  9201                           postdec1	equ	0xFE5
  9202                           fsr1h	equ	0xFE2
  9203                           fsr1l	equ	0xFE1
  9204                           
  9205                           	psect	bssBANK1
  9206  0001B3                     __pbssBANK1:
  9207                           	opt stack 0
  9208  0001B3                     ARPProcess@smARP:
  9209                           	opt stack 0
  9210  0001B3                     	ds	1
  9211  0001B4                     TCPServer@srvSocket:
  9212                           	opt stack 0
  9213  0001B4                     	ds	1
  9214  0001B5                     _IPHeaderLen:
  9215                           	opt stack 0
  9216  0001B5                     	ds	1
  9217  0001B6                     _flags:
  9218                           	opt stack 0
  9219  0001B6                     	ds	1
  9220  0001B7                     _s_irCodeByteIdx:
  9221                           	opt stack 0
  9222  0001B7                     	ds	1
  9223  0001B8                     _s_irLearn:
  9224                           	opt stack 0
  9225  0001B8                     	ds	1
  9226  0001B9                     _MyTCB:
  9227                           	opt stack 0
  9228  0001B9                     	ds	39
  9229  0001E0                     _MyTCBStub:
  9230                           	opt stack 0
  9231  0001E0                     	ds	28
  9232                           tblptru	equ	0xFF8
  9233                           tblptrh	equ	0xFF7
  9234                           tblptrl	equ	0xFF6
  9235                           tablat	equ	0xFF5
  9236                           postinc0	equ	0xFEE
  9237                           wreg	equ	0xFE8
  9238                           postdec1	equ	0xFE5
  9239                           fsr1h	equ	0xFE2
  9240                           fsr1l	equ	0xFE1
  9241                           
  9242                           	psect	dataBANK1
  9243  0001FC                     __pdataBANK1:
  9244                           	opt stack 0
  9245  0001FC                     SyncTCB@hLastTCB:
  9246                           	opt stack 0
  9247  0001FC                     	ds	1
  9248  0001FD                     _hCurrentTCP:
  9249                           	opt stack 0
  9250  0001FD                     	ds	1
  9251  0001FE                     _s_irCodeBitIdx:
  9252                           	opt stack 0
  9253  0001FE                     	ds	1
  9254  0001FF                     _s_prevIRPort:
  9255                           	opt stack 0
  9256  0001FF                     	ds	1
  9257                           tblptru	equ	0xFF8
  9258                           tblptrh	equ	0xFF7
  9259                           tblptrl	equ	0xFF6
  9260                           tablat	equ	0xFF5
  9261                           postinc0	equ	0xFEE
  9262                           wreg	equ	0xFE8
  9263                           postdec1	equ	0xFE5
  9264                           fsr1h	equ	0xFE2
  9265                           fsr1l	equ	0xFE1
  9266                           
  9267                           	psect	bssBANK2
  9268  000200                     __pbssBANK2:
  9269                           	opt stack 0
  9270  000200                     _SYNQueue:
  9271                           	opt stack 0
  9272  000200                     	ds	60
  9273  00023C                     _AppConfig:
  9274                           	opt stack 0
  9275  00023C                     	ds	51
  9276  00026F                     _TCBStubs:
  9277                           	opt stack 0
  9278  00026F                     	ds	28
  9279  00028B                     _dispbuf1:
  9280                           	opt stack 0
  9281  00028B                     	ds	17
  9282  00029C                     _dispbuf2:
  9283                           	opt stack 0
  9284  00029C                     	ds	17
  9285  0002AD                     _s_irCode:
  9286                           	opt stack 0
  9287  0002AD                     	ds	16
  9288  0002BD                     TCPGetRemoteInfo@RemoteInfo:
  9289                           	opt stack 0
  9290  0002BD                     	ds	12
  9291  0002C9                     _remoteNode:
  9292                           	opt stack 0
  9293  0002C9                     	ds	10
  9294                           tblptru	equ	0xFF8
  9295                           tblptrh	equ	0xFF7
  9296                           tblptrl	equ	0xFF6
  9297                           tablat	equ	0xFF5
  9298                           postinc0	equ	0xFEE
  9299                           wreg	equ	0xFE8
  9300                           postdec1	equ	0xFE5
  9301                           fsr1h	equ	0xFE2
  9302                           fsr1l	equ	0xFE1
  9303                           
  9304                           	psect	bssBANK4
  9305  000400                     __pbssBANK4:
  9306                           	opt stack 0
  9307  000400                     _s_numTicksDiff:
  9308                           	opt stack 0
  9309  000400                     	ds	256
  9310                           tblptru	equ	0xFF8
  9311                           tblptrh	equ	0xFF7
  9312                           tblptrl	equ	0xFF6
  9313                           tablat	equ	0xFF5
  9314                           postinc0	equ	0xFEE
  9315                           wreg	equ	0xFE8
  9316                           postdec1	equ	0xFE5
  9317                           fsr1h	equ	0xFE2
  9318                           fsr1l	equ	0xFE1
  9319                           
  9320                           	psect	cstackBANK1
  9321  000100                     __pcstackBANK1:
  9322                           	opt stack 0
  9323  000100                     ??_Delay10KTCYx:
  9324  000100                     ??_isdigit:
  9325  000100                     ?_swaps:
  9326                           	opt stack 0
  9327  000100                     ?_LFSRRand:
  9328                           	opt stack 0
  9329  000100                     ?_memcmp:
  9330                           	opt stack 0
  9331  000100                     ?_MACGetFreeRxSize:
  9332                           	opt stack 0
  9333  000100                     ?_CalcIPChecksum:
  9334                           	opt stack 0
  9335  000100                     ?___awmod:
  9336                           	opt stack 0
  9337  000100                     ?___ftpack:
  9338                           	opt stack 0
  9339  000100                     ?___ftneg:
  9340                           	opt stack 0
  9341  000100                     ?_TickGet:
  9342                           	opt stack 0
  9343  000100                     ?_TickGetDiv256:
  9344                           	opt stack 0
  9345  000100                     ?__tdiv_to_l_:
  9346                           	opt stack 0
  9347  000100                     ?__div_to_l_:
  9348                           	opt stack 0
  9349  000100                     ?_swapl:
  9350                           	opt stack 0
  9351  000100                     ?___lldiv:
  9352                           	opt stack 0
  9353  000100                     ?___llmod:
  9354                           	opt stack 0
  9355  000100                     WriteDataSLCD@data:
  9356                           	opt stack 0
  9357  000100                     WriteCmdSLCD@cmd:
  9358                           	opt stack 0
  9359  000100                     MACPut@val:
  9360                           	opt stack 0
  9361  000100                     Delay1KTCYx@unit:
  9362                           	opt stack 0
  9363  000100                     MACDiscardRx@NewRXRDLocation:
  9364                           	opt stack 0
  9365  000100                     MACSetReadPtrInRx@offset:
  9366                           	opt stack 0
  9367  000100                     MACSetWritePtr@address:
  9368                           	opt stack 0
  9369  000100                     MACSetReadPtr@address:
  9370                           	opt stack 0
  9371  000100                     MACGetArray@val:
  9372                           	opt stack 0
  9373  000100                     MACPutArray@val:
  9374                           	opt stack 0
  9375  000100                     WritePHYReg@Data:
  9376                           	opt stack 0
  9377  000100                     ARPIsResolved@IPAddr:
  9378                           	opt stack 0
  9379  000100                     swaps@v:
  9380                           	opt stack 0
  9381  000100                     CalcIPChecksum@buffer:
  9382                           	opt stack 0
  9383  000100                     strupr@s:
  9384                           	opt stack 0
  9385  000100                     GetCheckSum@data:
  9386                           	opt stack 0
  9387  000100                     ___awmod@dividend:
  9388                           	opt stack 0
  9389  000100                     memcmp@s1:
  9390                           	opt stack 0
  9391  000100                     memset@p1:
  9392                           	opt stack 0
  9393  000100                     __div_to_l_@f1:
  9394                           	opt stack 0
  9395  000100                     ___ftpack@arg:
  9396                           	opt stack 0
  9397  000100                     __tdiv_to_l_@f1:
  9398                           	opt stack 0
  9399  000100                     ___ftge@ff1:
  9400                           	opt stack 0
  9401  000100                     ___ftneg@f1:
  9402                           	opt stack 0
  9403  000100                     swapl@v:
  9404                           	opt stack 0
  9405  000100                     EraseFlash@startaddr:
  9406                           	opt stack 0
  9407  000100                     ReadFlash@startaddr:
  9408                           	opt stack 0
  9409  000100                     WriteBlockFlash@startaddr:
  9410                           	opt stack 0
  9411  000100                     ___lldiv@dividend:
  9412                           	opt stack 0
  9413  000100                     ___llmod@dividend:
  9414                           	opt stack 0
  9415                           
  9416                           ; 4 bytes @ 0x0
  9417  000100                     	ds	1
  9418  000101                     SLCDSetDDRamAddr@DDaddr:
  9419                           	opt stack 0
  9420  000101                     Delay10KTCYx@unit:
  9421                           	opt stack 0
  9422  000101                     _isdigit$10234:
  9423                           	opt stack 0
  9424  000101                     PutsSLCD@buffer:
  9425                           	opt stack 0
  9426  000101                     MACMemCopyAsync@destAddr:
  9427                           	opt stack 0
  9428                           
  9429                           ; 2 bytes @ 0x1
  9430  000101                     	ds	1
  9431  000102                     ??_LFSRRand:
  9432  000102                     ??_MACGetFreeRxSize:
  9433  000102                     ??_MACSetReadPtrInRx:
  9434  000102                     OpenSLCD@lcdtype:
  9435                           	opt stack 0
  9436  000102                     WritePHYReg@Register:
  9437                           	opt stack 0
  9438  000102                     swaps@b:
  9439                           	opt stack 0
  9440  000102                     GetCheckSum@dataLen:
  9441                           	opt stack 0
  9442  000102                     isdigit@c:
  9443                           	opt stack 0
  9444  000102                     MACSetWritePtr@oldVal:
  9445                           	opt stack 0
  9446  000102                     MACSetReadPtr@oldVal:
  9447                           	opt stack 0
  9448  000102                     MACGetArray@len:
  9449                           	opt stack 0
  9450  000102                     MACPutArray@len:
  9451                           	opt stack 0
  9452  000102                     ARPIsResolved@MACAddr:
  9453                           	opt stack 0
  9454  000102                     CalcIPChecksum@count:
  9455                           	opt stack 0
  9456  000102                     strupr@t:
  9457                           	opt stack 0
  9458  000102                     ___awmod@divisor:
  9459                           	opt stack 0
  9460  000102                     memcmp@s2:
  9461                           	opt stack 0
  9462  000102                     memset@c:
  9463                           	opt stack 0
  9464                           
  9465                           ; 2 bytes @ 0x2
  9466  000102                     	ds	1
  9467  000103                     WritePHYReg@GIESave:
  9468                           	opt stack 0
  9469  000103                     GetCheckSum@res:
  9470                           	opt stack 0
  9471  000103                     ___ftpack@exp:
  9472                           	opt stack 0
  9473  000103                     MACMemCopyAsync@sourceAddr:
  9474                           	opt stack 0
  9475  000103                     swaps@t:
  9476                           	opt stack 0
  9477  000103                     RefreshLine1Ex@line:
  9478                           	opt stack 0
  9479  000103                     RefreshLine2Ex@line:
  9480                           	opt stack 0
  9481  000103                     __div_to_l_@f2:
  9482                           	opt stack 0
  9483  000103                     __tdiv_to_l_@f2:
  9484                           	opt stack 0
  9485  000103                     ___ftge@ff2:
  9486                           	opt stack 0
  9487                           
  9488                           ; 3 bytes @ 0x3
  9489  000103                     	ds	1
  9490  000104                     ??_ARPIsResolved:
  9491  000104                     ??_CalcIPChecksum:
  9492  000104                     strupr@c:
  9493                           	opt stack 0
  9494  000104                     GetCheckSum@i:
  9495                           	opt stack 0
  9496  000104                     WriteBlockFlash@num_blocks:
  9497                           	opt stack 0
  9498  000104                     ___awmod@counter:
  9499                           	opt stack 0
  9500  000104                     ___ftpack@sign:
  9501                           	opt stack 0
  9502  000104                     MACGetFreeRxSize@WritePT:
  9503                           	opt stack 0
  9504  000104                     MACPutHeader@remote:
  9505                           	opt stack 0
  9506  000104                     MACSetReadPtrInRx@ReadPT:
  9507                           	opt stack 0
  9508  000104                     MACGetArray@w:
  9509                           	opt stack 0
  9510  000104                     ReadFlash@num_bytes:
  9511                           	opt stack 0
  9512  000104                     memcmp@n:
  9513                           	opt stack 0
  9514  000104                     memset@n:
  9515                           	opt stack 0
  9516  000104                     TickGet@dw:
  9517                           	opt stack 0
  9518  000104                     TickGetDiv256@dw:
  9519                           	opt stack 0
  9520  000104                     EraseFlash@endaddr:
  9521                           	opt stack 0
  9522  000104                     ___lldiv@divisor:
  9523                           	opt stack 0
  9524  000104                     ___llmod@divisor:
  9525                           	opt stack 0
  9526                           
  9527                           ; 4 bytes @ 0x4
  9528  000104                     	ds	1
  9529  000105                     ??___ftpack:
  9530  000105                     ___awmod@sign:
  9531                           	opt stack 0
  9532  000105                     MACMemCopyAsync@len:
  9533                           	opt stack 0
  9534  000105                     SwapARPPacket@p:
  9535                           	opt stack 0
  9536  000105                     FormatNetBIOSName@Name:
  9537                           	opt stack 0
  9538  000105                     SwapIPHeader@h:
  9539                           	opt stack 0
  9540  000105                     SwapTCPHeader@header:
  9541                           	opt stack 0
  9542  000105                     UpdateSampleRate@srStr:
  9543                           	opt stack 0
  9544  000105                     WriteBlockFlash@flash_array:
  9545                           	opt stack 0
  9546                           
  9547                           ; 2 bytes @ 0x5
  9548  000105                     	ds	1
  9549  000106                     ??_memcmp:
  9550  000106                     ??__tdiv_to_l_:
  9551  000106                     ??__div_to_l_:
  9552  000106                     ??___ftge:
  9553  000106                     ?_CalcIPBufferChecksum:
  9554                           	opt stack 0
  9555  000106                     ?___awdiv:
  9556                           	opt stack 0
  9557  000106                     MACPutHeader@type:
  9558                           	opt stack 0
  9559  000106                     MACGetFreeRxSize@ReadPT:
  9560                           	opt stack 0
  9561  000106                     CalcIPBufferChecksum@len:
  9562                           	opt stack 0
  9563  000106                     CalcIPChecksum@i:
  9564                           	opt stack 0
  9565  000106                     IPSetRxBuffer@Offset:
  9566                           	opt stack 0
  9567  000106                     ReadFlash@flash_array:
  9568                           	opt stack 0
  9569  000106                     ___awdiv@dividend:
  9570                           	opt stack 0
  9571  000106                     memset@p:
  9572                           	opt stack 0
  9573                           
  9574                           ; 2 bytes @ 0x6
  9575  000106                     	ds	1
  9576  000107                     ??_SwapTCPHeader:
  9577  000107                     ??_WriteBlockFlash:
  9578  000107                     ??_MACMemCopyAsync:
  9579  000107                     FormatNetBIOSName@i:
  9580                           	opt stack 0
  9581  000107                     MACPutHeader@dataLen:
  9582                           	opt stack 0
  9583                           
  9584                           ; 2 bytes @ 0x7
  9585  000107                     	ds	1
  9586  000108                     ??_MACFlush:
  9587  000108                     ??_CalcIPBufferChecksum:
  9588  000108                     ?_GetMaxSegSizeOption:
  9589                           	opt stack 0
  9590  000108                     ?___awtoft:
  9591                           	opt stack 0
  9592  000108                     ?___lltoft:
  9593                           	opt stack 0
  9594  000108                     ?___lwtoft:
  9595                           	opt stack 0
  9596  000108                     EraseFlash@flag:
  9597                           	opt stack 0
  9598  000108                     ___llmod@counter:
  9599                           	opt stack 0
  9600  000108                     CalcIPChecksum@val:
  9601                           	opt stack 0
  9602  000108                     ___awdiv@divisor:
  9603                           	opt stack 0
  9604  000108                     ___awtoft@c:
  9605                           	opt stack 0
  9606  000108                     ___lwtoft@c:
  9607                           	opt stack 0
  9608  000108                     WriteBlockFlash@startptr:
  9609                           	opt stack 0
  9610  000108                     ReadFlash@flash_addr:
  9611                           	opt stack 0
  9612  000108                     ___lldiv@quotient:
  9613                           	opt stack 0
  9614  000108                     ___lltoft@c:
  9615                           	opt stack 0
  9616                           
  9617                           ; 4 bytes @ 0x8
  9618  000108                     	ds	1
  9619  000109                     _MACPutHeader$1874:
  9620                           	opt stack 0
  9621  000109                     EraseFlash@flash_addr:
  9622                           	opt stack 0
  9623  000109                     __tdiv_to_l_@quot:
  9624                           	opt stack 0
  9625                           
  9626                           ; 4 bytes @ 0x9
  9627  000109                     	ds	1
  9628  00010A                     ___awdiv@counter:
  9629                           	opt stack 0
  9630  00010A                     GetMaxSegSizeOption@wMSS:
  9631                           	opt stack 0
  9632  00010A                     CalcIPChecksum@sum:
  9633                           	opt stack 0
  9634  00010A                     __div_to_l_@quot:
  9635                           	opt stack 0
  9636  00010A                     CalcIPBufferChecksum@DataBuffer:
  9637                           	opt stack 0
  9638                           
  9639                           ; 20 bytes @ 0xA
  9640  00010A                     	ds	1
  9641  00010B                     WriteBlockFlash@write_byte:
  9642                           	opt stack 0
  9643  00010B                     ___awdiv@sign:
  9644                           	opt stack 0
  9645  00010B                     ___awtoft@sign:
  9646                           	opt stack 0
  9647  00010B                     MACMemCopyAsync@ReadSave:
  9648                           	opt stack 0
  9649                           
  9650                           ; 2 bytes @ 0xB
  9651  00010B                     	ds	1
  9652  00010C                     ??___lltoft:
  9653  00010C                     ?___ftdiv:
  9654                           	opt stack 0
  9655  00010C                     MACFlush@i:
  9656                           	opt stack 0
  9657  00010C                     GetMaxSegSizeOption@vOptionsBytes:
  9658                           	opt stack 0
  9659  00010C                     WriteBlockFlash@flag:
  9660                           	opt stack 0
  9661  00010C                     ___lldiv@counter:
  9662                           	opt stack 0
  9663  00010C                     ___awdiv@quotient:
  9664                           	opt stack 0
  9665  00010C                     ___ftdiv@f1:
  9666                           	opt stack 0
  9667  00010C                     ReadFlash@tblptr_save:
  9668                           	opt stack 0
  9669                           
  9670                           ; 4 bytes @ 0xC
  9671  00010C                     	ds	1
  9672  00010D                     ??_MACIsTxReady:
  9673  00010D                     GetMaxSegSizeOption@vOption:
  9674                           	opt stack 0
  9675  00010D                     __tdiv_to_l_@cntr:
  9676                           	opt stack 0
  9677  00010D                     MACMemCopyAsync@WriteSave:
  9678                           	opt stack 0
  9679  00010D                     WriteBlockFlash@saddress:
  9680                           	opt stack 0
  9681                           
  9682                           ; 4 bytes @ 0xD
  9683  00010D                     	ds	1
  9684  00010E                     ?___wmul:
  9685                           	opt stack 0
  9686  00010E                     LFSRRand@i:
  9687                           	opt stack 0
  9688  00010E                     __div_to_l_@cntr:
  9689                           	opt stack 0
  9690  00010E                     __tdiv_to_l_@exp1:
  9691                           	opt stack 0
  9692  00010E                     IPPutHeader@remote:
  9693                           	opt stack 0
  9694  00010E                     ___wmul@multiplier:
  9695                           	opt stack 0
  9696                           
  9697                           ; 2 bytes @ 0xE
  9698  00010E                     	ds	1
  9699  00010F                     MACMemCopyAsync@UpdateWritePointer:
  9700                           	opt stack 0
  9701  00010F                     __div_to_l_@exp1:
  9702                           	opt stack 0
  9703  00010F                     ___ftdiv@f2:
  9704                           	opt stack 0
  9705  00010F                     LFSRSeedRand@dwSeed:
  9706                           	opt stack 0
  9707                           
  9708                           ; 4 bytes @ 0xF
  9709  00010F                     	ds	1
  9710  000110                     ??_RestoreFromFlash:
  9711  000110                     ?_FindEmpty:
  9712                           	opt stack 0
  9713  000110                     MACMemCopyAsync@UpdateReadPointer:
  9714                           	opt stack 0
  9715  000110                     IPPutHeader@protocol:
  9716                           	opt stack 0
  9717  000110                     ___lltoft@exp:
  9718                           	opt stack 0
  9719  000110                     ___wmul@multiplicand:
  9720                           	opt stack 0
  9721  000110                     FindEmpty@startAddr:
  9722                           	opt stack 0
  9723                           
  9724                           ; 4 bytes @ 0x10
  9725  000110                     	ds	1
  9726  000111                     IPPutHeader@len:
  9727                           	opt stack 0
  9728                           
  9729                           ; 2 bytes @ 0x11
  9730  000111                     	ds	1
  9731  000112                     ??___ftdiv:
  9732  000112                     ___wmul@product:
  9733                           	opt stack 0
  9734                           
  9735                           ; 2 bytes @ 0x12
  9736  000112                     	ds	1
  9737  000113                     LFSRSeedRand@dwOldSeed:
  9738                           	opt stack 0
  9739  000113                     IPPutHeader@header:
  9740                           	opt stack 0
  9741                           
  9742                           ; 20 bytes @ 0x13
  9743  000113                     	ds	1
  9744  000114                     ??_FindEmpty:
  9745  000114                     ?___ftmul:
  9746                           	opt stack 0
  9747  000114                     memcpy@d1:
  9748                           	opt stack 0
  9749  000114                     ___ftmul@f1:
  9750                           	opt stack 0
  9751                           
  9752                           ; 3 bytes @ 0x14
  9753  000114                     	ds	1
  9754  000115                     ___ftdiv@cntr:
  9755                           	opt stack 0
  9756                           
  9757                           ; 1 bytes @ 0x15
  9758  000115                     	ds	1
  9759  000116                     memcpy@s1:
  9760                           	opt stack 0
  9761  000116                     ___ftdiv@f3:
  9762                           	opt stack 0
  9763                           
  9764                           ; 3 bytes @ 0x16
  9765  000116                     	ds	1
  9766  000117                     LFSRSeedRand@i:
  9767                           	opt stack 0
  9768  000117                     ___ftmul@f2:
  9769                           	opt stack 0
  9770                           
  9771                           ; 3 bytes @ 0x17
  9772  000117                     	ds	1
  9773  000118                     ?_GenerateRandomDWORD:
  9774                           	opt stack 0
  9775  000118                     memcpy@n:
  9776                           	opt stack 0
  9777  000118                     RestoreFromFlash@addrStop:
  9778                           	opt stack 0
  9779                           
  9780                           ; 4 bytes @ 0x18
  9781  000118                     	ds	1
  9782  000119                     ___ftdiv@exp:
  9783                           	opt stack 0
  9784                           
  9785                           ; 1 bytes @ 0x19
  9786  000119                     	ds	1
  9787  00011A                     ??___ftmul:
  9788  00011A                     ___ftdiv@sign:
  9789                           	opt stack 0
  9790  00011A                     memcpy@d:
  9791                           	opt stack 0
  9792                           
  9793                           ; 2 bytes @ 0x1A
  9794  00011A                     	ds	2
  9795  00011C                     ??_GenerateRandomDWORD:
  9796  00011C                     RestoreFromFlash@chSum:
  9797                           	opt stack 0
  9798  00011C                     memcpy@s:
  9799                           	opt stack 0
  9800  00011C                     FindEmpty@addrStop:
  9801                           	opt stack 0
  9802                           
  9803                           ; 4 bytes @ 0x1C
  9804  00011C                     	ds	1
  9805  00011D                     ___ftmul@exp:
  9806                           	opt stack 0
  9807  00011D                     RestoreFromFlash@addr:
  9808                           	opt stack 0
  9809                           
  9810                           ; 4 bytes @ 0x1D
  9811  00011D                     	ds	1
  9812  00011E                     ??_SyncTCBStub:
  9813  00011E                     MACGetHeader@remote:
  9814                           	opt stack 0
  9815  00011E                     CalcIPBufferChecksum@Start:
  9816                           	opt stack 0
  9817  00011E                     ARPPut@packet:
  9818                           	opt stack 0
  9819  00011E                     GenerateRandomDWORD@w:
  9820                           	opt stack 0
  9821  00011E                     TCPRAMCopy@ptrDest:
  9822                           	opt stack 0
  9823  00011E                     ___ftmul@f3_as_product:
  9824                           	opt stack 0
  9825                           
  9826                           ; 3 bytes @ 0x1E
  9827  00011E                     	ds	2
  9828  000120                     SyncTCBStub@hTCP:
  9829                           	opt stack 0
  9830  000120                     TCPRAMCopy@vDestType:
  9831                           	opt stack 0
  9832  000120                     MACGetHeader@type:
  9833                           	opt stack 0
  9834  000120                     CalcIPBufferChecksum@DataPtr:
  9835                           	opt stack 0
  9836  000120                     ARPResolve@IPAddr:
  9837                           	opt stack 0
  9838  000120                     FindEmpty@blockEnd:
  9839                           	opt stack 0
  9840  000120                     GenerateRandomDWORD@dwTotalTime:
  9841                           	opt stack 0
  9842  000120                     ARPProcess@packet:
  9843                           	opt stack 0
  9844                           
  9845                           ; 28 bytes @ 0x20
  9846  000120                     	ds	1
  9847  000121                     ?_TCPIsGetReady:
  9848                           	opt stack 0
  9849  000121                     ?_TCPIsPutReady:
  9850                           	opt stack 0
  9851  000121                     TCPIsConnected@hTCP:
  9852                           	opt stack 0
  9853  000121                     ___ftmul@cntr:
  9854                           	opt stack 0
  9855  000121                     TCPRAMCopy@ptrSource:
  9856                           	opt stack 0
  9857                           
  9858                           ; 2 bytes @ 0x21
  9859  000121                     	ds	1
  9860  000122                     ??_MACGetHeader:
  9861  000122                     ??_ARPResolve:
  9862  000122                     ___ftmul@sign:
  9863                           	opt stack 0
  9864  000122                     CalcIPBufferChecksum@Checksum:
  9865                           	opt stack 0
  9866  000122                     FindEmpty@addr:
  9867                           	opt stack 0
  9868                           
  9869                           ; 4 bytes @ 0x22
  9870  000122                     	ds	1
  9871  000123                     ??_TCPIsGetReady:
  9872  000123                     ??_TCPIsPutReady:
  9873  000123                     ?_fround:
  9874                           	opt stack 0
  9875  000123                     ?_scale:
  9876                           	opt stack 0
  9877  000123                     TCPRAMCopy@vSourceType:
  9878                           	opt stack 0
  9879                           
  9880                           ; 1 bytes @ 0x23
  9881  000123                     	ds	1
  9882  000124                     GenerateRandomDWORD@vBitCount:
  9883                           	opt stack 0
  9884  000124                     TCPRAMCopy@wLength:
  9885                           	opt stack 0
  9886  000124                     MACGetHeader@header:
  9887                           	opt stack 0
  9888                           
  9889                           ; 20 bytes @ 0x24
  9890  000124                     	ds	1
  9891  000125                     GenerateRandomDWORD@ADCON0Save:
  9892                           	opt stack 0
  9893  000125                     TCPIsPutReady@hTCP:
  9894                           	opt stack 0
  9895  000125                     TCPIsGetReady@hTCP:
  9896                           	opt stack 0
  9897                           
  9898                           ; 1 bytes @ 0x25
  9899  000125                     	ds	1
  9900  000126                     ??_SyncTCB:
  9901  000126                     GenerateRandomDWORD@ADCON2Save:
  9902                           	opt stack 0
  9903  000126                     TCPIsPutReady@i:
  9904                           	opt stack 0
  9905  000126                     CalcIPBufferChecksum@ChunkLen:
  9906                           	opt stack 0
  9907  000126                     TCPGetArray@buffer:
  9908                           	opt stack 0
  9909  000126                     FindEmpty@tmpAddr:
  9910                           	opt stack 0
  9911  000126                     _fround$10825:
  9912                           	opt stack 0
  9913  000126                     _scale$10826:
  9914                           	opt stack 0
  9915                           
  9916                           ; 3 bytes @ 0x26
  9917  000126                     	ds	1
  9918  000127                     GenerateRandomDWORD@T0CONSave:
  9919                           	opt stack 0
  9920                           
  9921                           ; 1 bytes @ 0x27
  9922  000127                     	ds	1
  9923  000128                     ??_SaveToFlash:
  9924  000128                     ?_MACCalcRxChecksum:
  9925                           	opt stack 0
  9926  000128                     GenerateRandomDWORD@TMR0HSave:
  9927                           	opt stack 0
  9928  000128                     SendTCP@vSendFlags:
  9929                           	opt stack 0
  9930  000128                     MACCalcRxChecksum@offset:
  9931                           	opt stack 0
  9932  000128                     TCPGetArray@len:
  9933                           	opt stack 0
  9934  000128                     FindMatchingSocket@h:
  9935                           	opt stack 0
  9936  000128                     _CloseSocket$7622:
  9937                           	opt stack 0
  9938                           
  9939                           ; 2 bytes @ 0x28
  9940  000128                     	ds	1
  9941  000129                     ??_SendTCP:
  9942  000129                     GenerateRandomDWORD@TMR0LSave:
  9943                           	opt stack 0
  9944  000129                     scale@scl:
  9945                           	opt stack 0
  9946  000129                     _fround$10824:
  9947                           	opt stack 0
  9948                           
  9949                           ; 3 bytes @ 0x29
  9950  000129                     	ds	1
  9951  00012A                     ??_TCPGetArray:
  9952  00012A                     MACCalcRxChecksum@len:
  9953                           	opt stack 0
  9954  00012A                     GenerateRandomDWORD@wLastValue:
  9955                           	opt stack 0
  9956  00012A                     FindMatchingSocket@remote:
  9957                           	opt stack 0
  9958                           
  9959                           ; 2 bytes @ 0x2A
  9960  00012A                     	ds	2
  9961  00012C                     ??_FindMatchingSocket:
  9962  00012C                     ??_MACCalcRxChecksum:
  9963  00012C                     fround@prec:
  9964                           	opt stack 0
  9965  00012C                     GenerateRandomDWORD@randomResult:
  9966                           	opt stack 0
  9967                           
  9968                           ; 4 bytes @ 0x2C
  9969  00012C                     	ds	1
  9970  00012D                     ?___ftadd:
  9971                           	opt stack 0
  9972  00012D                     ___ftadd@f1:
  9973                           	opt stack 0
  9974  00012D                     SendTCP@options:
  9975                           	opt stack 0
  9976                           
  9977                           ; 4 bytes @ 0x2D
  9978  00012D                     	ds	1
  9979  00012E                     TCPGetArray@hTCP:
  9980                           	opt stack 0
  9981  00012E                     MACCalcRxChecksum@RDSave:
  9982                           	opt stack 0
  9983  00012E                     _ARPResolve$3399:
  9984                           	opt stack 0
  9985                           
  9986                           ; 4 bytes @ 0x2E
  9987  00012E                     	ds	1
  9988  00012F                     TCPGetArray@wGetReadyCount:
  9989                           	opt stack 0
  9990                           
  9991                           ; 2 bytes @ 0x2F
  9992  00012F                     	ds	1
  9993  000130                     MACCalcRxChecksum@temp:
  9994                           	opt stack 0
  9995  000130                     GenerateRandomDWORD@wTime:
  9996                           	opt stack 0
  9997  000130                     ___ftadd@f2:
  9998                           	opt stack 0
  9999                           
 10000                           ; 3 bytes @ 0x30
 10001  000130                     	ds	1
 10002  000131                     TCPGetArray@RightLen:
 10003                           	opt stack 0
 10004  000131                     SendTCP@wVal:
 10005                           	opt stack 0
 10006                           
 10007                           ; 2 bytes @ 0x31
 10008  000131                     	ds	1
 10009  000132                     ??_TCPInit:
 10010  000132                     IPGetHeader@localIP:
 10011                           	opt stack 0
 10012  000132                     ARPResolve@packet:
 10013                           	opt stack 0
 10014                           
 10015                           ; 28 bytes @ 0x32
 10016  000132                     	ds	1
 10017  000133                     ??___ftadd:
 10018  000133                     SendTCP@vTCPFlags:
 10019                           	opt stack 0
 10020                           
 10021                           ; 1 bytes @ 0x33
 10022  000133                     	ds	1
 10023  000134                     IPGetHeader@remote:
 10024                           	opt stack 0
 10025  000134                     SendTCP@len:
 10026                           	opt stack 0
 10027  000134                     FindMatchingSocket@hash:
 10028                           	opt stack 0
 10029  000134                     SaveToFlash@addr:
 10030                           	opt stack 0
 10031                           
 10032                           ; 4 bytes @ 0x34
 10033  000134                     	ds	2
 10034  000136                     FindMatchingSocket@partialMatch:
 10035                           	opt stack 0
 10036  000136                     ___ftadd@sign:
 10037                           	opt stack 0
 10038  000136                     IPGetHeader@protocol:
 10039                           	opt stack 0
 10040  000136                     SendTCP@pseudoHeader:
 10041                           	opt stack 0
 10042                           
 10043                           ; 12 bytes @ 0x36
 10044  000136                     	ds	1
 10045  000137                     FindMatchingSocket@hTCP:
 10046                           	opt stack 0
 10047  000137                     ___ftadd@exp2:
 10048                           	opt stack 0
 10049                           
 10050                           ; 1 bytes @ 0x37
 10051  000137                     	ds	1
 10052  000138                     TCPInit@vSocketsAllocated:
 10053                           	opt stack 0
 10054  000138                     ___ftadd@exp1:
 10055                           	opt stack 0
 10056  000138                     IPGetHeader@len:
 10057                           	opt stack 0
 10058  000138                     FindMatchingSocket@wQueueInsertPos:
 10059                           	opt stack 0
 10060  000138                     SaveToFlash@cmp:
 10061                           	opt stack 0
 10062                           
 10063                           ; 2 bytes @ 0x38
 10064  000138                     	ds	1
 10065  000139                     ?___ftsub:
 10066                           	opt stack 0
 10067  000139                     ?___fttol:
 10068                           	opt stack 0
 10069  000139                     TCPInit@ptrBaseAddress:
 10070                           	opt stack 0
 10071  000139                     ___ftsub@f1:
 10072                           	opt stack 0
 10073  000139                     ___fttol@f1:
 10074                           	opt stack 0
 10075                           
 10076                           ; 3 bytes @ 0x39
 10077  000139                     	ds	1
 10078  00013A                     ??_IPGetHeader:
 10079  00013A                     SaveToFlash@success:
 10080                           	opt stack 0
 10081                           
 10082                           ; 1 bytes @ 0x3A
 10083  00013A                     	ds	1
 10084  00013B                     TCPInit@wTXSize:
 10085                           	opt stack 0
 10086  00013B                     SaveToFlash@emptyAddr:
 10087                           	opt stack 0
 10088                           
 10089                           ; 4 bytes @ 0x3B
 10090  00013B                     	ds	1
 10091  00013C                     ___ftsub@f2:
 10092                           	opt stack 0
 10093                           
 10094                           ; 3 bytes @ 0x3C
 10095  00013C                     	ds	1
 10096  00013D                     ??___fttol:
 10097  00013D                     TCPInit@wRXSize:
 10098                           	opt stack 0
 10099                           
 10100                           ; 2 bytes @ 0x3D
 10101  00013D                     	ds	1
 10102  00013E                     IPGetHeader@CalcChecksum:
 10103                           	opt stack 0
 10104                           
 10105                           ; 2 bytes @ 0x3E
 10106  00013E                     	ds	1
 10107  00013F                     TCPInit@wCurrentETHAddress:
 10108                           	opt stack 0
 10109                           
 10110                           ; 2 bytes @ 0x3F
 10111  00013F                     	ds	1
 10112  000140                     IPGetHeader@header:
 10113                           	opt stack 0
 10114                           
 10115                           ; 20 bytes @ 0x40
 10116  000140                     	ds	1
 10117  000141                     TCPInit@vMedium:
 10118                           	opt stack 0
 10119                           
 10120                           ; 1 bytes @ 0x41
 10121  000141                     	ds	1
 10122  000142                     TCPInit@i:
 10123                           	opt stack 0
 10124  000142                     ___fttol@sign1:
 10125                           	opt stack 0
 10126  000142                     SendTCP@header:
 10127                           	opt stack 0
 10128                           
 10129                           ; 20 bytes @ 0x42
 10130  000142                     	ds	1
 10131  000143                     ___fttol@lval:
 10132                           	opt stack 0
 10133  000143                     _StackInit$10823:
 10134                           	opt stack 0
 10135                           
 10136                           ; 4 bytes @ 0x43
 10137  000143                     	ds	4
 10138  000147                     ___fttol@exp1:
 10139                           	opt stack 0
 10140                           
 10141                           ; 1 bytes @ 0x47
 10142  000147                     	ds	1
 10143  000148                     ?_sprintf:
 10144                           	opt stack 0
 10145  000148                     ?_DbToCode:
 10146                           	opt stack 0
 10147  000148                     DbToCode@volume:
 10148                           	opt stack 0
 10149  000148                     sprintf@sp:
 10150                           	opt stack 0
 10151                           
 10152                           ; 2 bytes @ 0x48
 10153  000148                     	ds	2
 10154  00014A                     ??_DbToCode:
 10155  00014A                     sprintf@f:
 10156                           	opt stack 0
 10157                           
 10158                           ; 2 bytes @ 0x4A
 10159  00014A                     	ds	5
 10160  00014F                     ??_sprintf:
 10161                           
 10162                           ; 0 bytes @ 0x4F
 10163  00014F                     	ds	1
 10164  000150                     DbToCode@k:
 10165                           	opt stack 0
 10166                           
 10167                           ; 3 bytes @ 0x50
 10168  000150                     	ds	3
 10169  000153                     ??_SendDataToDeviceCh:
 10170                           
 10171                           ; 0 bytes @ 0x53
 10172  000153                     	ds	2
 10173  000155                     _sprintf$10827:
 10174                           	opt stack 0
 10175                           
 10176                           ; 3 bytes @ 0x55
 10177  000155                     	ds	1
 10178  000156                     TCPDisconnect@hTCP:
 10179                           	opt stack 0
 10180  000156                     TCPFlush@hTCP:
 10181                           	opt stack 0
 10182  000156                     HandleTCPSeg@h:
 10183                           	opt stack 0
 10184  000156                     SendDataToDeviceCh@v:
 10185                           	opt stack 0
 10186  000156                     TCPOpen@dwRemoteHost:
 10187                           	opt stack 0
 10188                           
 10189                           ; 4 bytes @ 0x56
 10190  000156                     	ds	1
 10191  000157                     ??_TCPTick:
 10192  000157                     ?_TCPPutArray:
 10193                           	opt stack 0
 10194  000157                     TCPClose@hTCP:
 10195                           	opt stack 0
 10196  000157                     TCPPutArray@data:
 10197                           	opt stack 0
 10198                           
 10199                           ; 2 bytes @ 0x57
 10200  000157                     	ds	1
 10201  000158                     SendDataToDeviceCh@offset:
 10202                           	opt stack 0
 10203  000158                     HandleTCPSeg@len:
 10204                           	opt stack 0
 10205  000158                     _sprintf$9349:
 10206                           	opt stack 0
 10207                           
 10208                           ; 4 bytes @ 0x58
 10209  000158                     	ds	1
 10210  000159                     TCPPutArray@len:
 10211                           	opt stack 0
 10212  000159                     SendDataToDeviceCh@values:
 10213                           	opt stack 0
 10214                           
 10215                           ; 16 bytes @ 0x59
 10216  000159                     	ds	1
 10217  00015A                     ??_HandleTCPSeg:
 10218  00015A                     TCPOpen@vRemoteHostType:
 10219                           	opt stack 0
 10220                           
 10221                           ; 1 bytes @ 0x5A
 10222  00015A                     	ds	1
 10223  00015B                     ??_TCPPutArray:
 10224  00015B                     TCPOpen@wPort:
 10225                           	opt stack 0
 10226                           
 10227                           ; 2 bytes @ 0x5B
 10228  00015B                     	ds	1
 10229  00015C                     sprintf@ap:
 10230                           	opt stack 0
 10231                           
 10232                           ; 2 bytes @ 0x5C
 10233  00015C                     	ds	1
 10234  00015D                     TCPOpen@vSocketPurpose:
 10235                           	opt stack 0
 10236                           
 10237                           ; 1 bytes @ 0x5D
 10238  00015D                     	ds	1
 10239  00015E                     ??_TCPOpen:
 10240  00015E                     sprintf@vd:
 10241                           	opt stack 0
 10242                           
 10243                           ; 4 bytes @ 0x5E
 10244  00015E                     	ds	1
 10245  00015F                     TCPPutArray@wRightLen:
 10246                           	opt stack 0
 10247                           
 10248                           ; 2 bytes @ 0x5F
 10249  00015F                     	ds	2
 10250  000161                     TCPPutArray@wActualLen:
 10251                           	opt stack 0
 10252                           
 10253                           ; 2 bytes @ 0x61
 10254  000161                     	ds	1
 10255  000162                     TCPOpen@hTCP:
 10256                           	opt stack 0
 10257  000162                     HandleTCPSeg@wNewWindow:
 10258                           	opt stack 0
 10259  000162                     sprintf@vd_9351:
 10260                           	opt stack 0
 10261                           
 10262                           ; 4 bytes @ 0x62
 10263  000162                     	ds	1
 10264  000163                     TCPTick@bCloseSocket:
 10265                           	opt stack 0
 10266  000163                     TCPPutArray@wFreeTXSpace:
 10267                           	opt stack 0
 10268                           
 10269                           ; 2 bytes @ 0x63
 10270  000163                     	ds	1
 10271  000164                     TCPTick@bRetransmit:
 10272                           	opt stack 0
 10273  000164                     HandleTCPSeg@bSegmentAcceptable:
 10274                           	opt stack 0
 10275                           
 10276                           ; 1 bytes @ 0x64
 10277  000164                     	ds	1
 10278  000165                     TCPPutArray@hTCP:
 10279                           	opt stack 0
 10280  000165                     TCPTick@hTCP:
 10281                           	opt stack 0
 10282  000165                     HandleTCPSeg@localSeqNumber:
 10283                           	opt stack 0
 10284                           
 10285                           ; 4 bytes @ 0x65
 10286  000165                     	ds	1
 10287  000166                     TCPTick@vFlags:
 10288                           	opt stack 0
 10289  000166                     sprintf@ccnt:
 10290                           	opt stack 0
 10291                           
 10292                           ; 2 bytes @ 0x66
 10293  000166                     	ds	1
 10294  000167                     TCPTick@w:
 10295                           	opt stack 0
 10296                           
 10297                           ; 2 bytes @ 0x67
 10298  000167                     	ds	1
 10299  000168                     sprintf@integ:
 10300                           	opt stack 0
 10301                           
 10302                           ; 3 bytes @ 0x68
 10303  000168                     	ds	1
 10304  000169                     SendDataToDeviceCh@i:
 10305                           	opt stack 0
 10306  000169                     HandleTCPSeg@wSegmentLength:
 10307                           	opt stack 0
 10308                           
 10309                           ; 2 bytes @ 0x69
 10310  000169                     	ds	1
 10311  00016A                     SendDataToDeviceCh@mask:
 10312                           	opt stack 0
 10313                           
 10314                           ; 2 bytes @ 0x6A
 10315  00016A                     	ds	1
 10316  00016B                     HandleTCPSeg@dwTemp:
 10317                           	opt stack 0
 10318  00016B                     sprintf@_val:
 10319                           	opt stack 0
 10320                           
 10321                           ; 5 bytes @ 0x6B
 10322  00016B                     	ds	1
 10323  00016C                     
 10324                           ; 0 bytes @ 0x6C
 10325  00016C                     	ds	3
 10326  00016F                     HandleTCPSeg@lMissingBytes:
 10327                           	opt stack 0
 10328                           
 10329                           ; 4 bytes @ 0x6F
 10330  00016F                     	ds	1
 10331  000170                     sprintf@flag:
 10332                           	opt stack 0
 10333                           
 10334                           ; 2 bytes @ 0x70
 10335  000170                     	ds	2
 10336  000172                     sprintf@width:
 10337                           	opt stack 0
 10338                           
 10339                           ; 2 bytes @ 0x72
 10340  000172                     	ds	1
 10341  000173                     HandleTCPSeg@wFreeSpace:
 10342                           	opt stack 0
 10343                           
 10344                           ; 2 bytes @ 0x73
 10345  000173                     	ds	1
 10346  000174                     sprintf@exp:
 10347                           	opt stack 0
 10348                           
 10349                           ; 2 bytes @ 0x74
 10350  000174                     	ds	1
 10351  000175                     HandleTCPSeg@localAckNumber:
 10352                           	opt stack 0
 10353                           
 10354                           ; 4 bytes @ 0x75
 10355  000175                     	ds	1
 10356  000176                     sprintf@fval:
 10357                           	opt stack 0
 10358                           
 10359                           ; 3 bytes @ 0x76
 10360  000176                     	ds	3
 10361  000179                     HandleTCPSeg@localHeaderFlags:
 10362                           	opt stack 0
 10363  000179                     sprintf@prec:
 10364                           	opt stack 0
 10365                           
 10366                           ; 2 bytes @ 0x79
 10367  000179                     	ds	1
 10368  00017A                     HandleTCPSeg@wTemp:
 10369                           	opt stack 0
 10370                           
 10371                           ; 2 bytes @ 0x7A
 10372  00017A                     	ds	1
 10373  00017B                     sprintf@c:
 10374                           	opt stack 0
 10375                           
 10376                           ; 1 bytes @ 0x7B
 10377  00017B                     	ds	1
 10378  00017C                     ??_UpdateMasterVolume:
 10379  00017C                     HandleTCPSeg@wMissingBytes:
 10380                           	opt stack 0
 10381                           
 10382                           ; 2 bytes @ 0x7C
 10383  00017C                     	ds	2
 10384  00017E                     TCPProcess@remote:
 10385                           	opt stack 0
 10386  00017E                     UpdateMasterVolume@dvol:
 10387                           	opt stack 0
 10388                           
 10389                           ; 3 bytes @ 0x7E
 10390  00017E                     	ds	2
 10391  000180                     TCPProcess@localIP:
 10392                           	opt stack 0
 10393                           
 10394                           ; 2 bytes @ 0x80
 10395  000180                     	ds	1
 10396  000181                     UpdateMasterVolume@i:
 10397                           	opt stack 0
 10398                           
 10399                           ; 1 bytes @ 0x81
 10400  000181                     	ds	1
 10401  000182                     ??_TCPServer:
 10402  000182                     TCPProcess@len:
 10403                           	opt stack 0
 10404                           
 10405                           ; 2 bytes @ 0x82
 10406  000182                     	ds	1
 10407  000183                     TCPServer@wMaxGet:
 10408                           	opt stack 0
 10409                           
 10410                           ; 2 bytes @ 0x83
 10411  000183                     	ds	1
 10412  000184                     ??_TCPProcess:
 10413                           
 10414                           ; 0 bytes @ 0x84
 10415  000184                     	ds	1
 10416  000185                     TCPServer@wMaxPut:
 10417                           	opt stack 0
 10418                           
 10419                           ; 2 bytes @ 0x85
 10420  000185                     	ds	1
 10421  000186                     TCPProcess@checksum1:
 10422                           	opt stack 0
 10423                           
 10424                           ; 2 bytes @ 0x86
 10425  000186                     	ds	1
 10426  000187                     TCPServer@checksum:
 10427                           	opt stack 0
 10428                           
 10429                           ; 1 bytes @ 0x87
 10430  000187                     	ds	1
 10431  000188                     TCPProcess@checksum2:
 10432                           	opt stack 0
 10433  000188                     TCPServer@cmdBytes:
 10434                           	opt stack 0
 10435                           
 10436                           ; 18 bytes @ 0x88
 10437  000188                     	ds	2
 10438  00018A                     TCPProcess@optionsSize:
 10439                           	opt stack 0
 10440                           
 10441                           ; 1 bytes @ 0x8A
 10442  00018A                     	ds	1
 10443  00018B                     TCPProcess@pseudoHeader:
 10444                           	opt stack 0
 10445                           
 10446                           ; 12 bytes @ 0x8B
 10447  00018B                     	ds	12
 10448  000197                     TCPProcess@TCPHeader:
 10449                           	opt stack 0
 10450                           
 10451                           ; 20 bytes @ 0x97
 10452  000197                     	ds	20
 10453  0001AB                     StackTask@dataCount:
 10454                           	opt stack 0
 10455                           
 10456                           ; 2 bytes @ 0xAB
 10457  0001AB                     	ds	2
 10458  0001AD                     StackTask@tempLocalIP:
 10459                           	opt stack 0
 10460                           
 10461                           ; 4 bytes @ 0xAD
 10462  0001AD                     	ds	4
 10463  0001B1                     StackTask@cIPFrameType:
 10464                           	opt stack 0
 10465                           
 10466                           ; 1 bytes @ 0xB1
 10467  0001B1                     	ds	1
 10468  0001B2                     StackTask@cFrameType:
 10469                           	opt stack 0
 10470                           
 10471                           ; 1 bytes @ 0xB2
 10472  0001B2                     	ds	1
 10473  0001B3                     tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           postinc0	equ	0xFEE
 10478                           wreg	equ	0xFE8
 10479                           postdec1	equ	0xFE5
 10480                           fsr1h	equ	0xFE2
 10481                           fsr1l	equ	0xFE1
 10482                           
 10483                           ; 0 bytes @ 0xB3
 10484                           
 10485                           	psect	cstackBANK0
 10486  000060                     __pcstackBANK0:
 10487                           	opt stack 0
 10488  000060                     i2_sprintf$11268:
 10489                           	opt stack 0
 10490  000060                     i2SendDataToDeviceCh@values:
 10491                           	opt stack 0
 10492                           
 10493                           ; 16 bytes @ 0x0
 10494  000060                     	ds	3
 10495  000063                     i2_sprintf$9349:
 10496                           	opt stack 0
 10497                           
 10498                           ; 4 bytes @ 0x3
 10499  000063                     	ds	4
 10500  000067                     i2sprintf@ap:
 10501                           	opt stack 0
 10502                           
 10503                           ; 2 bytes @ 0x7
 10504  000067                     	ds	2
 10505  000069                     i2sprintf@vd:
 10506                           	opt stack 0
 10507                           
 10508                           ; 4 bytes @ 0x9
 10509  000069                     	ds	4
 10510  00006D                     i2sprintf@vd_9351:
 10511                           	opt stack 0
 10512                           
 10513                           ; 4 bytes @ 0xD
 10514  00006D                     	ds	3
 10515  000070                     i2SendDataToDeviceCh@v:
 10516                           	opt stack 0
 10517                           
 10518                           ; 2 bytes @ 0x10
 10519  000070                     	ds	1
 10520  000071                     i2sprintf@ccnt:
 10521                           	opt stack 0
 10522                           
 10523                           ; 2 bytes @ 0x11
 10524  000071                     	ds	1
 10525  000072                     i2SendDataToDeviceCh@offset:
 10526                           	opt stack 0
 10527                           
 10528                           ; 1 bytes @ 0x12
 10529  000072                     	ds	1
 10530  000073                     i2SendDataToDeviceCh@i:
 10531                           	opt stack 0
 10532  000073                     i2sprintf@integ:
 10533                           	opt stack 0
 10534                           
 10535                           ; 3 bytes @ 0x13
 10536  000073                     	ds	1
 10537  000074                     i2SendDataToDeviceCh@mask:
 10538                           	opt stack 0
 10539                           
 10540                           ; 2 bytes @ 0x14
 10541  000074                     	ds	2
 10542  000076                     i2sprintf@_val:
 10543                           	opt stack 0
 10544                           
 10545                           ; 5 bytes @ 0x16
 10546  000076                     	ds	5
 10547  00007B                     i2sprintf@flag:
 10548                           	opt stack 0
 10549                           
 10550                           ; 2 bytes @ 0x1B
 10551  00007B                     	ds	2
 10552  00007D                     i2sprintf@width:
 10553                           	opt stack 0
 10554                           
 10555                           ; 2 bytes @ 0x1D
 10556  00007D                     	ds	2
 10557  00007F                     i2sprintf@exp:
 10558                           	opt stack 0
 10559                           
 10560                           ; 2 bytes @ 0x1F
 10561  00007F                     	ds	2
 10562  000081                     i2sprintf@fval:
 10563                           	opt stack 0
 10564                           
 10565                           ; 3 bytes @ 0x21
 10566  000081                     	ds	3
 10567  000084                     i2sprintf@prec:
 10568                           	opt stack 0
 10569                           
 10570                           ; 2 bytes @ 0x24
 10571  000084                     	ds	2
 10572  000086                     i2sprintf@c:
 10573                           	opt stack 0
 10574                           
 10575                           ; 1 bytes @ 0x26
 10576  000086                     	ds	1
 10577  000087                     ??_ProcessIRCode:
 10578                           
 10579                           ; 0 bytes @ 0x27
 10580  000087                     	ds	12
 10581  000093                     ProcessIRCode@numTick:
 10582                           	opt stack 0
 10583                           
 10584                           ; 4 bytes @ 0x33
 10585  000093                     	ds	4
 10586  000097                     ProcessIRCode@delta:
 10587                           	opt stack 0
 10588                           
 10589                           ; 1 bytes @ 0x37
 10590  000097                     	ds	1
 10591  000098                     ??_ISRLP:
 10592                           
 10593                           ; 0 bytes @ 0x38
 10594  000098                     	ds	18
 10595  0000AA                     ISRLP@diff:
 10596                           	opt stack 0
 10597                           
 10598                           ; 4 bytes @ 0x4A
 10599  0000AA                     	ds	4
 10600  0000AE                     ISRLP@currentTS:
 10601                           	opt stack 0
 10602                           
 10603                           ; 4 bytes @ 0x4E
 10604  0000AE                     	ds	4
 10605  0000B2                     ISRLP@d:
 10606                           	opt stack 0
 10607                           
 10608                           ; 1 bytes @ 0x52
 10609  0000B2                     	ds	1
 10610                           tblptru	equ	0xFF8
 10611                           tblptrh	equ	0xFF7
 10612                           tblptrl	equ	0xFF6
 10613                           tablat	equ	0xFF5
 10614                           postinc0	equ	0xFEE
 10615                           wreg	equ	0xFE8
 10616                           postdec1	equ	0xFE5
 10617                           fsr1h	equ	0xFE2
 10618                           fsr1l	equ	0xFE1
 10619                           
 10620                           	psect	cstackCOMRAM
 10621  000001                     __pcstackCOMRAM:
 10622                           	opt stack 0
 10623  000001                     ??i2_isdigit:
 10624  000001                     ?i2___awmod:
 10625                           	opt stack 0
 10626  000001                     ?i2_memcmp:
 10627                           	opt stack 0
 10628  000001                     ?i2___ftpack:
 10629                           	opt stack 0
 10630  000001                     ?i2___ftneg:
 10631                           	opt stack 0
 10632  000001                     ?i2_TickGet:
 10633                           	opt stack 0
 10634  000001                     ?i2__div_to_l_:
 10635                           	opt stack 0
 10636  000001                     ?i2__tdiv_to_l_:
 10637                           	opt stack 0
 10638  000001                     ?i2___lldiv:
 10639                           	opt stack 0
 10640  000001                     ?i2___llmod:
 10641                           	opt stack 0
 10642  000001                     i2WriteDataSLCD@data:
 10643                           	opt stack 0
 10644  000001                     i2WriteCmdSLCD@cmd:
 10645                           	opt stack 0
 10646  000001                     i2Delay1KTCYx@unit:
 10647                           	opt stack 0
 10648  000001                     i2GetCheckSum@data:
 10649                           	opt stack 0
 10650  000001                     i2___awmod@dividend:
 10651                           	opt stack 0
 10652  000001                     i2memcmp@s1:
 10653                           	opt stack 0
 10654  000001                     i2memset@p1:
 10655                           	opt stack 0
 10656  000001                     i2__div_to_l_@f1:
 10657                           	opt stack 0
 10658  000001                     i2___ftpack@arg:
 10659                           	opt stack 0
 10660  000001                     i2__tdiv_to_l_@f1:
 10661                           	opt stack 0
 10662  000001                     i2___ftge@ff1:
 10663                           	opt stack 0
 10664  000001                     i2___ftneg@f1:
 10665                           	opt stack 0
 10666  000001                     i2EraseFlash@startaddr:
 10667                           	opt stack 0
 10668  000001                     i2ReadFlash@startaddr:
 10669                           	opt stack 0
 10670  000001                     i2WriteBlockFlash@startaddr:
 10671                           	opt stack 0
 10672  000001                     i2___lldiv@dividend:
 10673                           	opt stack 0
 10674  000001                     i2___llmod@dividend:
 10675                           	opt stack 0
 10676                           
 10677                           ; 4 bytes @ 0x0
 10678  000001                     	ds	1
 10679  000002                     i2SLCDSetDDRamAddr@DDaddr:
 10680                           	opt stack 0
 10681  000002                     i2_isdigit$10234:
 10682                           	opt stack 0
 10683  000002                     i2PutsSLCD@buffer:
 10684                           	opt stack 0
 10685                           
 10686                           ; 2 bytes @ 0x1
 10687  000002                     	ds	1
 10688  000003                     i2GetCheckSum@dataLen:
 10689                           	opt stack 0
 10690  000003                     i2isdigit@c:
 10691                           	opt stack 0
 10692  000003                     i2___awmod@divisor:
 10693                           	opt stack 0
 10694  000003                     i2memcmp@s2:
 10695                           	opt stack 0
 10696  000003                     i2memset@c:
 10697                           	opt stack 0
 10698                           
 10699                           ; 2 bytes @ 0x2
 10700  000003                     	ds	1
 10701  000004                     i2GetCheckSum@res:
 10702                           	opt stack 0
 10703  000004                     i2___ftpack@exp:
 10704                           	opt stack 0
 10705  000004                     i2RefreshLine1Ex@line:
 10706                           	opt stack 0
 10707  000004                     i2RefreshLine2Ex@line:
 10708                           	opt stack 0
 10709  000004                     i2__div_to_l_@f2:
 10710                           	opt stack 0
 10711  000004                     i2__tdiv_to_l_@f2:
 10712                           	opt stack 0
 10713  000004                     i2___ftge@ff2:
 10714                           	opt stack 0
 10715                           
 10716                           ; 3 bytes @ 0x3
 10717  000004                     	ds	1
 10718  000005                     i2GetCheckSum@i:
 10719                           	opt stack 0
 10720  000005                     i2WriteBlockFlash@num_blocks:
 10721                           	opt stack 0
 10722  000005                     i2___awmod@counter:
 10723                           	opt stack 0
 10724  000005                     i2___ftpack@sign:
 10725                           	opt stack 0
 10726  000005                     i2ReadFlash@num_bytes:
 10727                           	opt stack 0
 10728  000005                     i2memcmp@n:
 10729                           	opt stack 0
 10730  000005                     i2memset@n:
 10731                           	opt stack 0
 10732  000005                     i2TickGet@dw:
 10733                           	opt stack 0
 10734  000005                     i2EraseFlash@endaddr:
 10735                           	opt stack 0
 10736  000005                     i2___lldiv@divisor:
 10737                           	opt stack 0
 10738  000005                     i2___llmod@divisor:
 10739                           	opt stack 0
 10740                           
 10741                           ; 4 bytes @ 0x4
 10742  000005                     	ds	1
 10743  000006                     ??i2___ftpack:
 10744  000006                     i2___awmod@sign:
 10745                           	opt stack 0
 10746  000006                     i2UpdateSampleRate@srStr:
 10747                           	opt stack 0
 10748  000006                     i2WriteBlockFlash@flash_array:
 10749                           	opt stack 0
 10750                           
 10751                           ; 2 bytes @ 0x5
 10752  000006                     	ds	1
 10753  000007                     ??i2__div_to_l_:
 10754  000007                     ??i2__tdiv_to_l_:
 10755  000007                     ??i2___ftge:
 10756  000007                     ??i2_memcmp:
 10757  000007                     ?i2___awdiv:
 10758                           	opt stack 0
 10759  000007                     i2ReadFlash@flash_array:
 10760                           	opt stack 0
 10761  000007                     i2___awdiv@dividend:
 10762                           	opt stack 0
 10763  000007                     i2memset@p:
 10764                           	opt stack 0
 10765                           
 10766                           ; 2 bytes @ 0x6
 10767  000007                     	ds	1
 10768  000008                     ??i2_WriteBlockFlash:
 10769                           
 10770                           ; 0 bytes @ 0x7
 10771  000008                     	ds	1
 10772  000009                     ??_ProcessIRInt:
 10773  000009                     ?i2___awtoft:
 10774                           	opt stack 0
 10775  000009                     ?i2___lltoft:
 10776                           	opt stack 0
 10777  000009                     ?i2___lwtoft:
 10778                           	opt stack 0
 10779  000009                     i2EraseFlash@flag:
 10780                           	opt stack 0
 10781  000009                     i2___llmod@counter:
 10782                           	opt stack 0
 10783  000009                     i2___awdiv@divisor:
 10784                           	opt stack 0
 10785  000009                     i2___awtoft@c:
 10786                           	opt stack 0
 10787  000009                     i2___lwtoft@c:
 10788                           	opt stack 0
 10789  000009                     i2WriteBlockFlash@startptr:
 10790                           	opt stack 0
 10791  000009                     i2ReadFlash@flash_addr:
 10792                           	opt stack 0
 10793  000009                     i2___lldiv@quotient:
 10794                           	opt stack 0
 10795  000009                     i2___lltoft@c:
 10796                           	opt stack 0
 10797                           
 10798                           ; 4 bytes @ 0x8
 10799  000009                     	ds	1
 10800  00000A                     i2EraseFlash@flash_addr:
 10801                           	opt stack 0
 10802  00000A                     i2__tdiv_to_l_@quot:
 10803                           	opt stack 0
 10804                           
 10805                           ; 4 bytes @ 0x9
 10806  00000A                     	ds	1
 10807  00000B                     i2___awdiv@counter:
 10808                           	opt stack 0
 10809  00000B                     i2__div_to_l_@quot:
 10810                           	opt stack 0
 10811                           
 10812                           ; 4 bytes @ 0xA
 10813  00000B                     	ds	1
 10814  00000C                     i2WriteBlockFlash@write_byte:
 10815                           	opt stack 0
 10816  00000C                     i2___awdiv@sign:
 10817                           	opt stack 0
 10818  00000C                     i2___awtoft@sign:
 10819                           	opt stack 0
 10820                           
 10821                           ; 1 bytes @ 0xB
 10822  00000C                     	ds	1
 10823  00000D                     ??i2___lltoft:
 10824  00000D                     ?i2___ftdiv:
 10825                           	opt stack 0
 10826  00000D                     i2WriteBlockFlash@flag:
 10827                           	opt stack 0
 10828  00000D                     i2___lldiv@counter:
 10829                           	opt stack 0
 10830  00000D                     i2___awdiv@quotient:
 10831                           	opt stack 0
 10832  00000D                     i2___ftdiv@f1:
 10833                           	opt stack 0
 10834  00000D                     ProcessIRInt@diff:
 10835                           	opt stack 0
 10836  00000D                     i2ReadFlash@tblptr_save:
 10837                           	opt stack 0
 10838                           
 10839                           ; 4 bytes @ 0xC
 10840  00000D                     	ds	1
 10841  00000E                     i2__tdiv_to_l_@cntr:
 10842                           	opt stack 0
 10843  00000E                     i2WriteBlockFlash@saddress:
 10844                           	opt stack 0
 10845                           
 10846                           ; 4 bytes @ 0xD
 10847  00000E                     	ds	1
 10848  00000F                     ?i2___wmul:
 10849                           	opt stack 0
 10850  00000F                     i2__div_to_l_@cntr:
 10851                           	opt stack 0
 10852  00000F                     i2__tdiv_to_l_@exp1:
 10853                           	opt stack 0
 10854  00000F                     i2___wmul@multiplier:
 10855                           	opt stack 0
 10856                           
 10857                           ; 2 bytes @ 0xE
 10858  00000F                     	ds	1
 10859  000010                     i2__div_to_l_@exp1:
 10860                           	opt stack 0
 10861  000010                     i2___ftdiv@f2:
 10862                           	opt stack 0
 10863                           
 10864                           ; 3 bytes @ 0xF
 10865  000010                     	ds	1
 10866  000011                     ?i2_FindEmpty:
 10867                           	opt stack 0
 10868  000011                     i2___lltoft@exp:
 10869                           	opt stack 0
 10870  000011                     i2___wmul@multiplicand:
 10871                           	opt stack 0
 10872  000011                     ProcessIRInt@numTicks:
 10873                           	opt stack 0
 10874  000011                     i2FindEmpty@startAddr:
 10875                           	opt stack 0
 10876                           
 10877                           ; 4 bytes @ 0x10
 10878  000011                     	ds	2
 10879  000013                     ??i2___ftdiv:
 10880  000013                     i2___wmul@product:
 10881                           	opt stack 0
 10882                           
 10883                           ; 2 bytes @ 0x12
 10884  000013                     	ds	2
 10885  000015                     ??i2_FindEmpty:
 10886  000015                     ?i2___ftmul:
 10887                           	opt stack 0
 10888  000015                     i2___ftmul@f1:
 10889                           	opt stack 0
 10890                           
 10891                           ; 3 bytes @ 0x14
 10892  000015                     	ds	1
 10893  000016                     i2___ftdiv@cntr:
 10894                           	opt stack 0
 10895                           
 10896                           ; 1 bytes @ 0x15
 10897  000016                     	ds	1
 10898  000017                     i2___ftdiv@f3:
 10899                           	opt stack 0
 10900                           
 10901                           ; 3 bytes @ 0x16
 10902  000017                     	ds	1
 10903  000018                     i2___ftmul@f2:
 10904                           	opt stack 0
 10905                           
 10906                           ; 3 bytes @ 0x17
 10907  000018                     	ds	2
 10908  00001A                     i2___ftdiv@exp:
 10909                           	opt stack 0
 10910                           
 10911                           ; 1 bytes @ 0x19
 10912  00001A                     	ds	1
 10913  00001B                     ??i2___ftmul:
 10914  00001B                     i2___ftdiv@sign:
 10915                           	opt stack 0
 10916                           
 10917                           ; 1 bytes @ 0x1A
 10918  00001B                     	ds	2
 10919  00001D                     i2FindEmpty@addrStop:
 10920                           	opt stack 0
 10921                           
 10922                           ; 4 bytes @ 0x1C
 10923  00001D                     	ds	1
 10924  00001E                     i2___ftmul@exp:
 10925                           	opt stack 0
 10926                           
 10927                           ; 1 bytes @ 0x1D
 10928  00001E                     	ds	1
 10929  00001F                     i2___ftmul@f3_as_product:
 10930                           	opt stack 0
 10931                           
 10932                           ; 3 bytes @ 0x1E
 10933  00001F                     	ds	2
 10934  000021                     i2FindEmpty@blockEnd:
 10935                           	opt stack 0
 10936                           
 10937                           ; 2 bytes @ 0x20
 10938  000021                     	ds	1
 10939  000022                     i2___ftmul@cntr:
 10940                           	opt stack 0
 10941                           
 10942                           ; 1 bytes @ 0x21
 10943  000022                     	ds	1
 10944  000023                     i2___ftmul@sign:
 10945                           	opt stack 0
 10946  000023                     i2FindEmpty@addr:
 10947                           	opt stack 0
 10948                           
 10949                           ; 4 bytes @ 0x22
 10950  000023                     	ds	1
 10951  000024                     ?i2_fround:
 10952                           	opt stack 0
 10953  000024                     ?i2_scale:
 10954                           	opt stack 0
 10955                           
 10956                           ; 3 bytes @ 0x23
 10957  000024                     	ds	3
 10958  000027                     i2FindEmpty@tmpAddr:
 10959                           	opt stack 0
 10960  000027                     i2_fround$11266:
 10961                           	opt stack 0
 10962  000027                     i2_scale$11267:
 10963                           	opt stack 0
 10964                           
 10965                           ; 3 bytes @ 0x26
 10966  000027                     	ds	2
 10967  000029                     ??i2_SaveToFlash:
 10968                           
 10969                           ; 0 bytes @ 0x28
 10970  000029                     	ds	1
 10971  00002A                     i2scale@scl:
 10972                           	opt stack 0
 10973  00002A                     i2_fround$11265:
 10974                           	opt stack 0
 10975                           
 10976                           ; 3 bytes @ 0x29
 10977  00002A                     	ds	3
 10978  00002D                     i2fround@prec:
 10979                           	opt stack 0
 10980                           
 10981                           ; 1 bytes @ 0x2C
 10982  00002D                     	ds	1
 10983  00002E                     ?i2___ftadd:
 10984                           	opt stack 0
 10985  00002E                     i2___ftadd@f1:
 10986                           	opt stack 0
 10987                           
 10988                           ; 3 bytes @ 0x2D
 10989  00002E                     	ds	3
 10990  000031                     i2___ftadd@f2:
 10991                           	opt stack 0
 10992                           
 10993                           ; 3 bytes @ 0x30
 10994  000031                     	ds	3
 10995  000034                     ??i2___ftadd:
 10996                           
 10997                           ; 0 bytes @ 0x33
 10998  000034                     	ds	1
 10999  000035                     i2SaveToFlash@addr:
 11000                           	opt stack 0
 11001                           
 11002                           ; 4 bytes @ 0x34
 11003  000035                     	ds	2
 11004  000037                     i2___ftadd@sign:
 11005                           	opt stack 0
 11006                           
 11007                           ; 1 bytes @ 0x36
 11008  000037                     	ds	1
 11009  000038                     i2___ftadd@exp2:
 11010                           	opt stack 0
 11011                           
 11012                           ; 1 bytes @ 0x37
 11013  000038                     	ds	1
 11014  000039                     i2___ftadd@exp1:
 11015                           	opt stack 0
 11016  000039                     i2SaveToFlash@cmp:
 11017                           	opt stack 0
 11018                           
 11019                           ; 2 bytes @ 0x38
 11020  000039                     	ds	1
 11021  00003A                     ?i2___ftsub:
 11022                           	opt stack 0
 11023  00003A                     ?i2___fttol:
 11024                           	opt stack 0
 11025  00003A                     i2___ftsub@f1:
 11026                           	opt stack 0
 11027  00003A                     i2___fttol@f1:
 11028                           	opt stack 0
 11029                           
 11030                           ; 3 bytes @ 0x39
 11031  00003A                     	ds	1
 11032  00003B                     i2SaveToFlash@success:
 11033                           	opt stack 0
 11034                           
 11035                           ; 1 bytes @ 0x3A
 11036  00003B                     	ds	1
 11037  00003C                     i2SaveToFlash@emptyAddr:
 11038                           	opt stack 0
 11039                           
 11040                           ; 4 bytes @ 0x3B
 11041  00003C                     	ds	1
 11042  00003D                     i2___ftsub@f2:
 11043                           	opt stack 0
 11044                           
 11045                           ; 3 bytes @ 0x3C
 11046  00003D                     	ds	1
 11047  00003E                     ??i2___fttol:
 11048                           
 11049                           ; 0 bytes @ 0x3D
 11050  00003E                     	ds	2
 11051  000040                     
 11052                           ; 0 bytes @ 0x3F
 11053  000040                     	ds	3
 11054  000043                     i2___fttol@sign1:
 11055                           	opt stack 0
 11056                           
 11057                           ; 1 bytes @ 0x42
 11058  000043                     	ds	1
 11059  000044                     i2___fttol@lval:
 11060                           	opt stack 0
 11061                           
 11062                           ; 4 bytes @ 0x43
 11063  000044                     	ds	4
 11064  000048                     i2___fttol@exp1:
 11065                           	opt stack 0
 11066                           
 11067                           ; 1 bytes @ 0x47
 11068  000048                     	ds	1
 11069  000049                     ?i2_DbToCode:
 11070                           	opt stack 0
 11071  000049                     ?i2_sprintf:
 11072                           	opt stack 0
 11073  000049                     i2DbToCode@volume:
 11074                           	opt stack 0
 11075  000049                     i2sprintf@sp:
 11076                           	opt stack 0
 11077                           
 11078                           ; 2 bytes @ 0x48
 11079  000049                     	ds	2
 11080  00004B                     ??i2_DbToCode:
 11081  00004B                     i2sprintf@f:
 11082                           	opt stack 0
 11083                           
 11084                           ; 2 bytes @ 0x4A
 11085  00004B                     	ds	5
 11086  000050                     ??i2_sprintf:
 11087                           
 11088                           ; 0 bytes @ 0x4F
 11089  000050                     	ds	1
 11090  000051                     i2DbToCode@k:
 11091                           	opt stack 0
 11092                           
 11093                           ; 3 bytes @ 0x50
 11094  000051                     	ds	3
 11095  000054                     ??i2_SendDataToDeviceCh:
 11096                           
 11097                           ; 0 bytes @ 0x53
 11098  000054                     	ds	3
 11099  000057                     ??i2_UpdateMasterVolume:
 11100  000057                     
 11101                           ; 0 bytes @ 0x56
 11102  000057                     	ds	2
 11103  000059                     i2UpdateMasterVolume@dvol:
 11104                           	opt stack 0
 11105                           
 11106                           ; 3 bytes @ 0x58
 11107  000059                     	ds	3
 11108  00005C                     i2UpdateMasterVolume@i:
 11109                           	opt stack 0
 11110                           
 11111                           ; 1 bytes @ 0x5B
 11112  00005C                     	ds	1
 11113  00005D                     ChangeMasterVolume@prev:
 11114                           	opt stack 0
 11115                           
 11116                           ; 1 bytes @ 0x5C
 11117  00005D                     	ds	1
 11118  00005E                     ChangeMasterVolume@d:
 11119                           	opt stack 0
 11120                           
 11121                           ; 1 bytes @ 0x5D
 11122  00005E                     	ds	1
 11123  00005F                     tblptru	equ	0xFF8
 11124                           tblptrh	equ	0xFF7
 11125                           tblptrl	equ	0xFF6
 11126                           tablat	equ	0xFF5
 11127                           postinc0	equ	0xFEE
 11128                           wreg	equ	0xFE8
 11129                           postdec1	equ	0xFE5
 11130                           fsr1h	equ	0xFE2
 11131                           fsr1l	equ	0xFE1
 11132                           
 11133                           ; 0 bytes @ 0x5E
 11134 ;;
 11135 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 11136 ;;
 11137 ;; *************** function _main *****************
 11138 ;; Defined at:
 11139 ;;		line 387 in file "main.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;		None
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;		None
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  2  1713[COMRAM] int 
 11146 ;; Registers used:
 11147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 11153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;Total ram usage:        0 bytes
 11158 ;; Hardware stack levels required when called:   18
 11159 ;; This function calls:
 11160 ;;		_BusySLCD
 11161 ;;		_Configure
 11162 ;;		_OpenSLCD
 11163 ;;		_RestoreFromFlash
 11164 ;;		_StackTask
 11165 ;;		_TCPServer
 11166 ;;		_UpdateMasterVolume
 11167 ;;		_UpdateSampleRate
 11168 ;;		_WriteCmdSLCD
 11169 ;; This function is called by:
 11170 ;;		Startup code after reset
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           	psect	text0
 11175  01B340                     __ptext0:
 11176                           	opt stack 0
 11177  01B340                     _main:
 11178                           	opt stack 12
 11179                           
 11180                           ;main.c: 389: Configure();
 11181                           
 11182                           ;incstack = 0
 11183  01B340  EC47  F0D6         	call	_Configure	;wreg free
 11184                           
 11185                           ;main.c: 391: LATBbits.LATB5 = 0;
 11186  01B344  9A8A               	bcf	3978,5,c	;volatile
 11187                           
 11188                           ;main.c: 392: LATDbits.LD0 = 1;
 11189  01B346  808C               	bsf	3980,0,c	;volatile
 11190                           
 11191                           ;main.c: 396: OpenSLCD(0b00111100 & 0b00111000);
 11192  01B348  0E38               	movlw	56
 11193  01B34A  ECC4  F0D2         	call	_OpenSLCD
 11194  01B34E                     l15884:
 11195  01B34E  ECEF  F0DB         	call	_BusySLCD	;wreg free
 11196  01B352  0900               	iorlw	0
 11197  01B354  A4D8               	btfss	status,2,c
 11198  01B356  D7FB               	goto	l15884
 11199                           
 11200                           ;main.c: 398: WriteCmdSLCD(0b00001111&0b00001101&0b00001110);
 11201  01B358  0E0C               	movlw	12
 11202  01B35A  ECA9  F0DB         	call	_WriteCmdSLCD
 11203                           
 11204                           ;main.c: 400: RestoreFromFlash();
 11205  01B35E  ECF1  F0B6         	call	_RestoreFromFlash	;wreg free
 11206                           
 11207                           ;main.c: 402: UpdateMasterVolume();
 11208  01B362  EC89  F0CF         	call	_UpdateMasterVolume	;wreg free
 11209                           
 11210                           ;main.c: 403: UpdateSampleRate();
 11211  01B366  ECE5  F0D0         	call	_UpdateSampleRate	;wreg free
 11212                           
 11213                           ;main.c: 405: LATDbits.LD2 = 0;
 11214  01B36A  948C               	bcf	3980,2,c	;volatile
 11215                           
 11216                           ;main.c: 406: LATDbits.LD2 = 1;
 11217  01B36C  848C               	bsf	3980,2,c	;volatile
 11218                           
 11219                           ;main.c: 408: (INTCONbits.GIE = 1);
 11220  01B36E  8EF2               	bsf	intcon,7,c	;volatile
 11221  01B370                     l15900:
 11222                           
 11223                           ;main.c: 410: {
 11224                           ;main.c: 411: StackTask();
 11225  01B370  EC98  F0CD         	call	_StackTask	;wreg free
 11226                           
 11227                           ;main.c: 412: TCPServer();
 11228  01B374  EC10  F0A1         	call	_TCPServer	;wreg free
 11229  01B378  D7FB               	goto	l15900
 11230  01B37A                     __end_of_main:
 11231                           	opt stack 0
 11232                           tblptru	equ	0xFF8
 11233                           tblptrh	equ	0xFF7
 11234                           tblptrl	equ	0xFF6
 11235                           tablat	equ	0xFF5
 11236                           intcon	equ	0xFF2
 11237                           postinc0	equ	0xFEE
 11238                           wreg	equ	0xFE8
 11239                           postdec1	equ	0xFE5
 11240                           fsr1h	equ	0xFE2
 11241                           fsr1l	equ	0xFE1
 11242                           status	equ	0xFD8
 11243                           
 11244 ;; *************** function _TCPServer *****************
 11245 ;; Defined at:
 11246 ;;		line 226 in file "main.c"
 11247 ;; Parameters:    Size  Location     Type
 11248 ;;		None
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;  cmdBytes       18  136[BANK1 ] unsigned char [18]
 11251 ;;  checksum        1  135[BANK1 ] unsigned char 
 11252 ;;  wMaxPut         2  133[BANK1 ] unsigned int 
 11253 ;;  wMaxGet         2  131[BANK1 ] unsigned int 
 11254 ;; Return value:  Size  Location     Type
 11255 ;;		None               void
 11256 ;; Registers used:
 11257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 11263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11267 ;;Total ram usage:       24 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:   17
 11270 ;; This function calls:
 11271 ;;		_GetCheckSum
 11272 ;;		_SaveToFlash
 11273 ;;		_SendVolumeToDevice
 11274 ;;		_TCPClose
 11275 ;;		_TCPGetArray
 11276 ;;		_TCPIsConnected
 11277 ;;		_TCPIsGetReady
 11278 ;;		_TCPIsPutReady
 11279 ;;		_TCPOpen
 11280 ;;		_TCPPutArray
 11281 ;;		_UpdateMasterVolume
 11282 ;;		_UpdateSampleRate
 11283 ;;		_memcpy
 11284 ;;		_memset
 11285 ;; This function is called by:
 11286 ;;		_main
 11287 ;; This function uses a non-reentrant model
 11288 ;;
 11289                           
 11290                           	psect	text1
 11291  014220                     __ptext1:
 11292                           	opt stack 0
 11293  014220                     _TCPServer:
 11294                           	opt stack 12
 11295                           
 11296                           ;main.c: 228: uint16_t wMaxGet, wMaxPut;
 11297                           ;main.c: 229: static TCP_SOCKET srvSocket;
 11298                           ;main.c: 230: static enum _TCPServerState
 11299                           ;main.c: 231: {
 11300                           ;main.c: 232: SM_HOME = 0,
 11301                           ;main.c: 233: SM_LISTENING,
 11302                           ;main.c: 234: SM_CLOSING,
 11303                           ;main.c: 235: } tcpServerState = SM_HOME;
 11304                           ;main.c: 240: switch(tcpServerState)
 11305                           
 11306                           ;incstack = 0
 11307  014220  D272               	goto	l15156
 11308  014222                     l15044:
 11309                           
 11310                           ;main.c: 244: srvSocket = TCPOpen(0, 0u, 89, 1);
 11311  014222  0E00               	movlw	0
 11312  014224  0101               	movlb	1	; () banked
 11313  014226  6F56               	movwf	TCPOpen@dwRemoteHost& (0+255),b
 11314  014228  0E00               	movlw	0
 11315  01422A  0101               	movlb	1	; () banked
 11316  01422C  6F57               	movwf	(TCPOpen@dwRemoteHost+1)& (0+255),b
 11317  01422E  0E00               	movlw	0
 11318  014230  0101               	movlb	1	; () banked
 11319  014232  6F58               	movwf	(TCPOpen@dwRemoteHost+2)& (0+255),b
 11320  014234  0E00               	movlw	0
 11321  014236  0101               	movlb	1	; () banked
 11322  014238  6F59               	movwf	(TCPOpen@dwRemoteHost+3)& (0+255),b
 11323  01423A  0E00               	movlw	0
 11324  01423C  0101               	movlb	1	; () banked
 11325  01423E  6F5A               	movwf	TCPOpen@vRemoteHostType& (0+255),b
 11326  014240  0E00               	movlw	0
 11327  014242  0101               	movlb	1	; () banked
 11328  014244  6F5C               	movwf	(TCPOpen@wPort+1)& (0+255),b
 11329  014246  0E59               	movlw	89
 11330  014248  0101               	movlb	1	; () banked
 11331  01424A  6F5B               	movwf	TCPOpen@wPort& (0+255),b
 11332  01424C  0E01               	movlw	1
 11333  01424E  0101               	movlb	1	; () banked
 11334  014250  6F5D               	movwf	TCPOpen@vSocketPurpose& (0+255),b
 11335  014252  EC96  F0AF         	call	_TCPOpen	;wreg free
 11336  014256  0101               	movlb	1	; () banked
 11337  014258  6FB4               	movwf	TCPServer@srvSocket& (0+255),b
 11338                           
 11339                           ; BSR set to: 1
 11340                           ;main.c: 245: if(srvSocket == (0xFE))
 11341  01425A  0101               	movlb	1	; () banked
 11342  01425C  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11343  01425E  0AFE               	xorlw	254
 11344  014260  B4D8               	btfsc	status,2,c
 11345  014262  0012               	return	
 11346                           
 11347                           ; BSR set to: 1
 11348                           ;main.c: 248: tcpServerState = SM_LISTENING;
 11349                           
 11350                           ; BSR set to: 1
 11351                           
 11352                           ; BSR set to: 1
 11353                           ;main.c: 246: return;
 11354  014264  0E01               	movlw	1
 11355  014266  0100               	movlb	0	; () banked
 11356  014268  6FED               	movwf	TCPServer@tcpServerState& (0+255),b
 11357                           
 11358                           ;main.c: 249: break;
 11359  01426A  0012               	return	
 11360  01426C                     l15052:
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;main.c: 253: if(!TCPIsConnected(srvSocket))
 11364  01426C  0101               	movlb	1	; () banked
 11365  01426E  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11366  014270  EC20  F0DB         	call	_TCPIsConnected
 11367  014274  0900               	iorlw	0
 11368  014276  B4D8               	btfsc	status,2,c
 11369  014278  0012               	return	
 11370                           
 11371                           ;main.c: 257: wMaxGet = TCPIsGetReady(srvSocket);
 11372                           
 11373                           ;main.c: 254: return;
 11374  01427A  0101               	movlb	1	; () banked
 11375  01427C  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11376  01427E  EC30  F0CD         	call	_TCPIsGetReady
 11377  014282  0101               	movlb	1	; () banked
 11378  014284  C121  F183         	movff	?_TCPIsGetReady,TCPServer@wMaxGet
 11379  014288  0101               	movlb	1	; () banked
 11380  01428A  C122  F184         	movff	?_TCPIsGetReady+1,TCPServer@wMaxGet+1
 11381                           
 11382                           ;main.c: 258: wMaxPut = TCPIsPutReady(srvSocket);
 11383  01428E  0101               	movlb	1	; () banked
 11384  014290  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11385  014292  ECE8  F0C4         	call	_TCPIsPutReady
 11386  014296  0101               	movlb	1	; () banked
 11387  014298  C121  F185         	movff	?_TCPIsPutReady,TCPServer@wMaxPut
 11388  01429C  0101               	movlb	1	; () banked
 11389  01429E  C122  F186         	movff	?_TCPIsPutReady+1,TCPServer@wMaxPut+1
 11390                           
 11391                           ; BSR set to: 1
 11392                           ;main.c: 268: uint8_t cmdBytes[sizeof(s_dacSettings.ChannelScaling) + 2];
 11393                           ;main.c: 269: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11394  0142A2  0101               	movlb	1	; () banked
 11395  0142A4  0E01               	movlw	high TCPServer@cmdBytes
 11396  0142A6  0101               	movlb	1	; () banked
 11397  0142A8  6F01               	movwf	(memset@p1+1)& (0+255),b
 11398  0142AA  0101               	movlb	1	; () banked
 11399  0142AC  0E88               	movlw	low TCPServer@cmdBytes
 11400  0142AE  0101               	movlb	1	; () banked
 11401  0142B0  6F00               	movwf	memset@p1& (0+255),b
 11402  0142B2  0E00               	movlw	0
 11403  0142B4  0101               	movlb	1	; () banked
 11404  0142B6  6F03               	movwf	(memset@c+1)& (0+255),b
 11405  0142B8  0E00               	movlw	0
 11406  0142BA  0101               	movlb	1	; () banked
 11407  0142BC  6F02               	movwf	memset@c& (0+255),b
 11408  0142BE  0E00               	movlw	0
 11409  0142C0  0101               	movlb	1	; () banked
 11410  0142C2  6F05               	movwf	(memset@n+1)& (0+255),b
 11411  0142C4  0E12               	movlw	18
 11412  0142C6  0101               	movlb	1	; () banked
 11413  0142C8  6F04               	movwf	memset@n& (0+255),b
 11414  0142CA  ECD9  F0D9         	call	_memset	;wreg free
 11415                           
 11416                           ;main.c: 270: TCPGetArray(srvSocket, cmdBytes, sizeof(cmdBytes));
 11417  0142CE  0101               	movlb	1	; () banked
 11418  0142D0  0E01               	movlw	high TCPServer@cmdBytes
 11419  0142D2  0101               	movlb	1	; () banked
 11420  0142D4  6F27               	movwf	(TCPGetArray@buffer+1)& (0+255),b
 11421  0142D6  0101               	movlb	1	; () banked
 11422  0142D8  0E88               	movlw	low TCPServer@cmdBytes
 11423  0142DA  0101               	movlb	1	; () banked
 11424  0142DC  6F26               	movwf	TCPGetArray@buffer& (0+255),b
 11425  0142DE  0E00               	movlw	0
 11426  0142E0  0101               	movlb	1	; () banked
 11427  0142E2  6F29               	movwf	(TCPGetArray@len+1)& (0+255),b
 11428  0142E4  0E12               	movlw	18
 11429  0142E6  0101               	movlb	1	; () banked
 11430  0142E8  6F28               	movwf	TCPGetArray@len& (0+255),b
 11431  0142EA  0101               	movlb	1	; () banked
 11432  0142EC  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11433  0142EE  EC6C  F0B3         	call	_TCPGetArray
 11434                           
 11435                           ;main.c: 271: uint8_t checksum = GetCheckSum(cmdBytes, sizeof(cmdBytes) - 1);
 11436  0142F2  0101               	movlb	1	; () banked
 11437  0142F4  0E01               	movlw	high TCPServer@cmdBytes
 11438  0142F6  0101               	movlb	1	; () banked
 11439  0142F8  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 11440  0142FA  0101               	movlb	1	; () banked
 11441  0142FC  0E88               	movlw	low TCPServer@cmdBytes
 11442  0142FE  0101               	movlb	1	; () banked
 11443  014300  6F00               	movwf	GetCheckSum@data& (0+255),b
 11444  014302  0E11               	movlw	17
 11445  014304  0101               	movlb	1	; () banked
 11446  014306  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 11447  014308  EC23  F0D9         	call	_GetCheckSum	;wreg free
 11448  01430C  0101               	movlb	1	; () banked
 11449  01430E  6F87               	movwf	TCPServer@checksum& (0+255),b
 11450                           
 11451                           ; BSR set to: 1
 11452                           ;main.c: 272: if (checksum != cmdBytes[sizeof(cmdBytes) - 1])
 11453  014310  0101               	movlb	1	; () banked
 11454  014312  5199               	movf	(TCPServer@cmdBytes+17)& (0+255),w,b
 11455  014314  0101               	movlb	1	; () banked
 11456  014316  1987               	xorwf	TCPServer@checksum& (0+255),w,b
 11457  014318  B4D8               	btfsc	status,2,c
 11458  01431A  D1A7               	goto	l15142
 11459                           
 11460                           ; BSR set to: 1
 11461                           ;main.c: 273: {
 11462                           ;main.c: 274: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11463  01431C  0101               	movlb	1	; () banked
 11464  01431E  0E01               	movlw	high TCPServer@cmdBytes
 11465  014320  0101               	movlb	1	; () banked
 11466  014322  6F01               	movwf	(memset@p1+1)& (0+255),b
 11467  014324  0101               	movlb	1	; () banked
 11468  014326  0E88               	movlw	low TCPServer@cmdBytes
 11469  014328  0101               	movlb	1	; () banked
 11470  01432A  6F00               	movwf	memset@p1& (0+255),b
 11471  01432C  0E00               	movlw	0
 11472  01432E  0101               	movlb	1	; () banked
 11473  014330  6F03               	movwf	(memset@c+1)& (0+255),b
 11474  014332  0E00               	movlw	0
 11475  014334  0101               	movlb	1	; () banked
 11476  014336  6F02               	movwf	memset@c& (0+255),b
 11477  014338  0E00               	movlw	0
 11478  01433A  0101               	movlb	1	; () banked
 11479  01433C  6F05               	movwf	(memset@n+1)& (0+255),b
 11480  01433E  0E12               	movlw	18
 11481  014340  0101               	movlb	1	; () banked
 11482  014342  6F04               	movwf	memset@n& (0+255),b
 11483  014344  ECD9  F0D9         	call	_memset	;wreg free
 11484                           
 11485                           ;main.c: 275: cmdBytes[0] = 0xFF;
 11486  014348  0101               	movlb	1	; () banked
 11487  01434A  6988               	setf	TCPServer@cmdBytes& (0+255),b
 11488                           
 11489                           ; BSR set to: 1
 11490                           ;main.c: 276: cmdBytes[1] = 0x00;
 11491  01434C  0E00               	movlw	0
 11492  01434E  D18A               	goto	L1
 11493  014350                     l15070:
 11494                           
 11495                           ; BSR set to: 1
 11496                           ;main.c: 283: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11497  014350  0101               	movlb	1	; () banked
 11498  014352  0E01               	movlw	high TCPServer@cmdBytes
 11499  014354  0101               	movlb	1	; () banked
 11500  014356  6F01               	movwf	(memset@p1+1)& (0+255),b
 11501  014358  0101               	movlb	1	; () banked
 11502  01435A  0E88               	movlw	low TCPServer@cmdBytes
 11503  01435C  0101               	movlb	1	; () banked
 11504  01435E  6F00               	movwf	memset@p1& (0+255),b
 11505  014360  0E00               	movlw	0
 11506  014362  0101               	movlb	1	; () banked
 11507  014364  6F03               	movwf	(memset@c+1)& (0+255),b
 11508  014366  0E00               	movlw	0
 11509  014368  0101               	movlb	1	; () banked
 11510  01436A  6F02               	movwf	memset@c& (0+255),b
 11511  01436C  0E00               	movlw	0
 11512  01436E  0101               	movlb	1	; () banked
 11513  014370  6F05               	movwf	(memset@n+1)& (0+255),b
 11514  014372  0E12               	movlw	18
 11515  014374  0101               	movlb	1	; () banked
 11516  014376  6F04               	movwf	memset@n& (0+255),b
 11517  014378  ECD9  F0D9         	call	_memset	;wreg free
 11518                           
 11519                           ;main.c: 284: cmdBytes[0] = 0x01;
 11520  01437C  0E01               	movlw	1
 11521  01437E  0101               	movlb	1	; () banked
 11522  014380  6F88               	movwf	TCPServer@cmdBytes& (0+255),b
 11523                           
 11524                           ; BSR set to: 1
 11525                           ;main.c: 285: cmdBytes[1] = s_dacSettings.Volume;
 11526  014382  C2D5  F189         	movff	_s_dacSettings+2,TCPServer@cmdBytes+1
 11527                           
 11528                           ; BSR set to: 1
 11529                           ;main.c: 286: cmdBytes[2] = s_dacSettings.SampleRate;
 11530  014386  C2D4  F18A         	movff	_s_dacSettings+1,TCPServer@cmdBytes+2
 11531                           
 11532                           ; BSR set to: 1
 11533                           ;main.c: 287: cmdBytes[3] = LATDbits.LD0;
 11534  01438A  0E00               	movlw	0
 11535  01438C  B08C               	btfsc	3980,0,c	;volatile
 11536  01438E  0E01               	movlw	1
 11537  014390  0101               	movlb	1	; () banked
 11538  014392  6F8B               	movwf	(TCPServer@cmdBytes+3)& (0+255),b
 11539                           
 11540                           ;main.c: 288: break;
 11541  014394  D18B               	goto	l15144
 11542  014396                     l1699:
 11543                           
 11544                           ; BSR set to: 1
 11545                           ;main.c: 290: s_dacSettings.Volume = cmdBytes[1];
 11546  014396  C189  F2D5         	movff	TCPServer@cmdBytes+1,_s_dacSettings+2
 11547                           
 11548                           ;main.c: 291: (INTCONbits.GIE = 0);
 11549  01439A  9EF2               	bcf	intcon,7,c	;volatile
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;main.c: 292: UpdateMasterVolume();
 11553  01439C  EC89  F0CF         	call	_UpdateMasterVolume	;wreg free
 11554                           
 11555                           ;main.c: 293: (INTCONbits.GIE = 1);
 11556  0143A0  8EF2               	bsf	intcon,7,c	;volatile
 11557                           
 11558                           ;main.c: 294: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11559  0143A2  0101               	movlb	1	; () banked
 11560  0143A4  0E01               	movlw	high TCPServer@cmdBytes
 11561  0143A6  0101               	movlb	1	; () banked
 11562  0143A8  6F01               	movwf	(memset@p1+1)& (0+255),b
 11563  0143AA  0101               	movlb	1	; () banked
 11564  0143AC  0E88               	movlw	low TCPServer@cmdBytes
 11565  0143AE  0101               	movlb	1	; () banked
 11566  0143B0  6F00               	movwf	memset@p1& (0+255),b
 11567  0143B2  0E00               	movlw	0
 11568  0143B4  0101               	movlb	1	; () banked
 11569  0143B6  6F03               	movwf	(memset@c+1)& (0+255),b
 11570  0143B8  0E00               	movlw	0
 11571  0143BA  0101               	movlb	1	; () banked
 11572  0143BC  6F02               	movwf	memset@c& (0+255),b
 11573  0143BE  0E00               	movlw	0
 11574  0143C0  0101               	movlb	1	; () banked
 11575  0143C2  6F05               	movwf	(memset@n+1)& (0+255),b
 11576  0143C4  0E12               	movlw	18
 11577  0143C6  0101               	movlb	1	; () banked
 11578  0143C8  6F04               	movwf	memset@n& (0+255),b
 11579  0143CA  ECD9  F0D9         	call	_memset	;wreg free
 11580                           
 11581                           ;main.c: 295: break;
 11582  0143CE  D16E               	goto	l15144
 11583  0143D0                     l15086:
 11584                           
 11585                           ;main.c: 297: cmdBytes[0] = 0x02;
 11586  0143D0  0E02               	movlw	2
 11587  0143D2  0101               	movlb	1	; () banked
 11588  0143D4  6F88               	movwf	TCPServer@cmdBytes& (0+255),b
 11589                           
 11590                           ; BSR set to: 1
 11591                           ;main.c: 298: memcpy(&cmdBytes[1], &s_dacSettings.ChannelScaling, sizeof(s_dacSettings.C
      +                          hannelScaling));
 11592  0143D6  0101               	movlb	1	; () banked
 11593  0143D8  0E01               	movlw	high (TCPServer@cmdBytes+1)
 11594  0143DA  0101               	movlb	1	; () banked
 11595  0143DC  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 11596  0143DE  0101               	movlb	1	; () banked
 11597  0143E0  0E89               	movlw	low (TCPServer@cmdBytes+1)
 11598  0143E2  0101               	movlb	1	; () banked
 11599  0143E4  6F14               	movwf	memcpy@d1& (0+255),b
 11600  0143E6  0102               	movlb	2	; () banked
 11601  0143E8  0E02               	movlw	high (_s_dacSettings+3)
 11602  0143EA  0101               	movlb	1	; () banked
 11603  0143EC  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 11604  0143EE  0102               	movlb	2	; () banked
 11605  0143F0  0ED6               	movlw	low (_s_dacSettings+3)
 11606  0143F2  0101               	movlb	1	; () banked
 11607  0143F4  6F16               	movwf	memcpy@s1& (0+255),b
 11608  0143F6  0E00               	movlw	0
 11609  0143F8  0101               	movlb	1	; () banked
 11610  0143FA  6F19               	movwf	(memcpy@n+1)& (0+255),b
 11611  0143FC  0E10               	movlw	16
 11612  0143FE  0101               	movlb	1	; () banked
 11613  014400  6F18               	movwf	memcpy@n& (0+255),b
 11614  014402  ECDC  F0D5         	call	_memcpy	;wreg free
 11615                           
 11616                           ;main.c: 299: break;
 11617  014406  D152               	goto	l15144
 11618  014408                     l15090:
 11619                           
 11620                           ;main.c: 301: memcpy(&s_dacSettings.ChannelScaling, &cmdBytes[1], sizeof(s_dacSettings.C
      +                          hannelScaling));
 11621  014408  0102               	movlb	2	; () banked
 11622  01440A  0E02               	movlw	high (_s_dacSettings+3)
 11623  01440C  0101               	movlb	1	; () banked
 11624  01440E  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 11625  014410  0102               	movlb	2	; () banked
 11626  014412  0ED6               	movlw	low (_s_dacSettings+3)
 11627  014414  0101               	movlb	1	; () banked
 11628  014416  6F14               	movwf	memcpy@d1& (0+255),b
 11629  014418  0101               	movlb	1	; () banked
 11630  01441A  0E01               	movlw	high (TCPServer@cmdBytes+1)
 11631  01441C  0101               	movlb	1	; () banked
 11632  01441E  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 11633  014420  0101               	movlb	1	; () banked
 11634  014422  0E89               	movlw	low (TCPServer@cmdBytes+1)
 11635  014424  0101               	movlb	1	; () banked
 11636  014426  6F16               	movwf	memcpy@s1& (0+255),b
 11637  014428  0E00               	movlw	0
 11638  01442A  0101               	movlb	1	; () banked
 11639  01442C  6F19               	movwf	(memcpy@n+1)& (0+255),b
 11640  01442E  0E10               	movlw	16
 11641  014430  0101               	movlb	1	; () banked
 11642  014432  6F18               	movwf	memcpy@n& (0+255),b
 11643  014434  ECDC  F0D5         	call	_memcpy	;wreg free
 11644                           
 11645                           ;main.c: 302: (INTCONbits.GIE = 0);
 11646  014438  9EF2               	bcf	intcon,7,c	;volatile
 11647                           
 11648                           ;main.c: 303: SendVolumeToDevice();
 11649  01443A  ECA0  F0DC         	call	_SendVolumeToDevice	;wreg free
 11650                           
 11651                           ;main.c: 304: (INTCONbits.GIE = 1);
 11652  01443E  8EF2               	bsf	intcon,7,c	;volatile
 11653                           
 11654                           ;main.c: 305: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11655  014440  0101               	movlb	1	; () banked
 11656  014442  0E01               	movlw	high TCPServer@cmdBytes
 11657  014444  0101               	movlb	1	; () banked
 11658  014446  6F01               	movwf	(memset@p1+1)& (0+255),b
 11659  014448  0101               	movlb	1	; () banked
 11660  01444A  0E88               	movlw	low TCPServer@cmdBytes
 11661  01444C  0101               	movlb	1	; () banked
 11662  01444E  6F00               	movwf	memset@p1& (0+255),b
 11663  014450  0E00               	movlw	0
 11664  014452  0101               	movlb	1	; () banked
 11665  014454  6F03               	movwf	(memset@c+1)& (0+255),b
 11666  014456  0E00               	movlw	0
 11667  014458  0101               	movlb	1	; () banked
 11668  01445A  6F02               	movwf	memset@c& (0+255),b
 11669  01445C  0E00               	movlw	0
 11670  01445E  0101               	movlb	1	; () banked
 11671  014460  6F05               	movwf	(memset@n+1)& (0+255),b
 11672  014462  0E12               	movlw	18
 11673  014464  0101               	movlb	1	; () banked
 11674  014466  6F04               	movwf	memset@n& (0+255),b
 11675  014468  ECD9  F0D9         	call	_memset	;wreg free
 11676                           
 11677                           ;main.c: 306: break;
 11678  01446C  D11F               	goto	l15144
 11679  01446E                     l15100:
 11680                           
 11681                           ;main.c: 308: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11682  01446E  0101               	movlb	1	; () banked
 11683  014470  0E01               	movlw	high TCPServer@cmdBytes
 11684  014472  0101               	movlb	1	; () banked
 11685  014474  6F01               	movwf	(memset@p1+1)& (0+255),b
 11686  014476  0101               	movlb	1	; () banked
 11687  014478  0E88               	movlw	low TCPServer@cmdBytes
 11688  01447A  0101               	movlb	1	; () banked
 11689  01447C  6F00               	movwf	memset@p1& (0+255),b
 11690  01447E  0E00               	movlw	0
 11691  014480  0101               	movlb	1	; () banked
 11692  014482  6F03               	movwf	(memset@c+1)& (0+255),b
 11693  014484  0E00               	movlw	0
 11694  014486  0101               	movlb	1	; () banked
 11695  014488  6F02               	movwf	memset@c& (0+255),b
 11696  01448A  0E00               	movlw	0
 11697  01448C  0101               	movlb	1	; () banked
 11698  01448E  6F05               	movwf	(memset@n+1)& (0+255),b
 11699  014490  0E12               	movlw	18
 11700  014492  0101               	movlb	1	; () banked
 11701  014494  6F04               	movwf	memset@n& (0+255),b
 11702  014496  ECD9  F0D9         	call	_memset	;wreg free
 11703                           
 11704                           ;main.c: 309: cmdBytes[0] = 0x01;
 11705  01449A  0E01               	movlw	1
 11706  01449C  0101               	movlb	1	; () banked
 11707  01449E  6F88               	movwf	TCPServer@cmdBytes& (0+255),b
 11708                           
 11709                           ; BSR set to: 1
 11710                           ;main.c: 310: cmdBytes[1] = s_dacSettings.SampleRate;
 11711  0144A0  C2D4  F189         	movff	_s_dacSettings+1,TCPServer@cmdBytes+1
 11712                           
 11713                           ;main.c: 311: break;
 11714  0144A4  D103               	goto	l15144
 11715  0144A6                     l1703:
 11716                           
 11717                           ; BSR set to: 1
 11718                           ;main.c: 313: s_dacSettings.SampleRate = cmdBytes[1];
 11719  0144A6  C189  F2D4         	movff	TCPServer@cmdBytes+1,_s_dacSettings+1
 11720                           
 11721                           ;main.c: 314: (INTCONbits.GIE = 0);
 11722  0144AA  9EF2               	bcf	intcon,7,c	;volatile
 11723                           
 11724                           ; BSR set to: 1
 11725                           ;main.c: 315: UpdateSampleRate();
 11726  0144AC  ECE5  F0D0         	call	_UpdateSampleRate	;wreg free
 11727                           
 11728                           ;main.c: 316: (INTCONbits.GIE = 1);
 11729  0144B0  8EF2               	bsf	intcon,7,c	;volatile
 11730                           
 11731                           ;main.c: 317: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11732  0144B2  0101               	movlb	1	; () banked
 11733  0144B4  0E01               	movlw	high TCPServer@cmdBytes
 11734  0144B6  0101               	movlb	1	; () banked
 11735  0144B8  6F01               	movwf	(memset@p1+1)& (0+255),b
 11736  0144BA  0101               	movlb	1	; () banked
 11737  0144BC  0E88               	movlw	low TCPServer@cmdBytes
 11738  0144BE  0101               	movlb	1	; () banked
 11739  0144C0  6F00               	movwf	memset@p1& (0+255),b
 11740  0144C2  0E00               	movlw	0
 11741  0144C4  0101               	movlb	1	; () banked
 11742  0144C6  6F03               	movwf	(memset@c+1)& (0+255),b
 11743  0144C8  0E00               	movlw	0
 11744  0144CA  0101               	movlb	1	; () banked
 11745  0144CC  6F02               	movwf	memset@c& (0+255),b
 11746  0144CE  0E00               	movlw	0
 11747  0144D0  0101               	movlb	1	; () banked
 11748  0144D2  6F05               	movwf	(memset@n+1)& (0+255),b
 11749  0144D4  0E12               	movlw	18
 11750  0144D6  0101               	movlb	1	; () banked
 11751  0144D8  6F04               	movwf	memset@n& (0+255),b
 11752  0144DA  ECD9  F0D9         	call	_memset	;wreg free
 11753                           
 11754                           ;main.c: 318: break;
 11755  0144DE  D0E6               	goto	l15144
 11756  0144E0                     l1704:
 11757                           
 11758                           ; BSR set to: 1
 11759                           ;main.c: 320: (INTCONbits.GIE = 0);
 11760  0144E0  9EF2               	bcf	intcon,7,c	;volatile
 11761                           
 11762                           ; BSR set to: 1
 11763                           ;main.c: 321: SaveToFlash();
 11764  0144E2  EC25  F0A5         	call	_SaveToFlash	;wreg free
 11765                           
 11766                           ;main.c: 322: (INTCONbits.GIE = 1);
 11767  0144E6  8EF2               	bsf	intcon,7,c	;volatile
 11768                           
 11769                           ;main.c: 323: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11770  0144E8  0101               	movlb	1	; () banked
 11771  0144EA  0E01               	movlw	high TCPServer@cmdBytes
 11772  0144EC  0101               	movlb	1	; () banked
 11773  0144EE  6F01               	movwf	(memset@p1+1)& (0+255),b
 11774  0144F0  0101               	movlb	1	; () banked
 11775  0144F2  0E88               	movlw	low TCPServer@cmdBytes
 11776  0144F4  0101               	movlb	1	; () banked
 11777  0144F6  6F00               	movwf	memset@p1& (0+255),b
 11778  0144F8  0E00               	movlw	0
 11779  0144FA  0101               	movlb	1	; () banked
 11780  0144FC  6F03               	movwf	(memset@c+1)& (0+255),b
 11781  0144FE  0E00               	movlw	0
 11782  014500  0101               	movlb	1	; () banked
 11783  014502  6F02               	movwf	memset@c& (0+255),b
 11784  014504  0E00               	movlw	0
 11785  014506  0101               	movlb	1	; () banked
 11786  014508  6F05               	movwf	(memset@n+1)& (0+255),b
 11787  01450A  0E12               	movlw	18
 11788  01450C  0101               	movlb	1	; () banked
 11789  01450E  6F04               	movwf	memset@n& (0+255),b
 11790  014510  ECD9  F0D9         	call	_memset	;wreg free
 11791                           
 11792                           ;main.c: 324: break;
 11793  014514  D0CB               	goto	l15144
 11794  014516                     l1705:
 11795                           
 11796                           ; BSR set to: 1
 11797                           ;main.c: 326: LATDbits.LD0 = cmdBytes[1];
 11798  014516  0101               	movlb	1	; () banked
 11799  014518  B189               	btfsc	(TCPServer@cmdBytes+1)& (0+255),0,b
 11800  01451A  D002               	bra	u17635
 11801  01451C  908C               	bcf	3980,0,c	;volatile
 11802  01451E  D001               	bra	u17636
 11803  014520                     u17635:
 11804  014520  808C               	bsf	3980,0,c	;volatile
 11805  014522                     u17636:
 11806                           
 11807                           ;main.c: 327: LATBbits.LATB5 = !LATDbits.LD0;
 11808  014522  B08C               	btfsc	3980,0,c	;volatile
 11809  014524  D002               	goto	u17640
 11810  014526  0E01               	movlw	1
 11811  014528  D001               	goto	u17646
 11812  01452A                     u17640:
 11813  01452A  0E00               	movlw	0
 11814  01452C                     u17646:
 11815  01452C  0101               	movlb	1	; () banked
 11816  01452E  6F82               	movwf	??_TCPServer& (0+255),b
 11817  014530  0101               	movlb	1	; () banked
 11818  014532  3B82               	swapf	??_TCPServer& (0+255),f,b
 11819  014534  4782               	rlncf	??_TCPServer& (0+255),f,b
 11820  014536  508A               	movf	3978,w,c	;volatile
 11821  014538  0101               	movlb	1	; () banked
 11822  01453A  1982               	xorwf	??_TCPServer& (0+255),w,b
 11823  01453C  0BDF               	andlw	-33
 11824  01453E  1982               	xorwf	??_TCPServer& (0+255),w,b
 11825  014540  6E8A               	movwf	3978,c	;volatile
 11826                           
 11827                           ; BSR set to: 1
 11828                           ;main.c: 328: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11829  014542  0101               	movlb	1	; () banked
 11830  014544  0E01               	movlw	high TCPServer@cmdBytes
 11831  014546  0101               	movlb	1	; () banked
 11832  014548  6F01               	movwf	(memset@p1+1)& (0+255),b
 11833  01454A  0101               	movlb	1	; () banked
 11834  01454C  0E88               	movlw	low TCPServer@cmdBytes
 11835  01454E  0101               	movlb	1	; () banked
 11836  014550  6F00               	movwf	memset@p1& (0+255),b
 11837  014552  0E00               	movlw	0
 11838  014554  0101               	movlb	1	; () banked
 11839  014556  6F03               	movwf	(memset@c+1)& (0+255),b
 11840  014558  0E00               	movlw	0
 11841  01455A  0101               	movlb	1	; () banked
 11842  01455C  6F02               	movwf	memset@c& (0+255),b
 11843  01455E  0E00               	movlw	0
 11844  014560  0101               	movlb	1	; () banked
 11845  014562  6F05               	movwf	(memset@n+1)& (0+255),b
 11846  014564  0E12               	movlw	18
 11847  014566  0101               	movlb	1	; () banked
 11848  014568  6F04               	movwf	memset@n& (0+255),b
 11849  01456A  ECD9  F0D9         	call	_memset	;wreg free
 11850                           
 11851                           ;main.c: 329: break;
 11852  01456E  D09E               	goto	l15144
 11853  014570                     l1706:
 11854                           
 11855                           ; BSR set to: 1
 11856                           ;main.c: 342: s_irLearn = 0xFF;
 11857  014570  0101               	movlb	1	; () banked
 11858  014572  69B8               	setf	_s_irLearn& (0+255),b	;volatile
 11859                           
 11860                           ; BSR set to: 1
 11861                           ;main.c: 343: if (cmdBytes[1] < 16)
 11862  014574  0E10               	movlw	16
 11863  014576  0101               	movlb	1	; () banked
 11864  014578  5D89               	subwf	(TCPServer@cmdBytes+1)& (0+255),w,b
 11865  01457A  B0D8               	btfsc	status,0,c
 11866  01457C  D035               	goto	l1707
 11867                           
 11868                           ; BSR set to: 1
 11869                           ;main.c: 344: {
 11870                           ;main.c: 345: memcpy(&cmdBytes[1], &s_irCode, sizeof(cmdBytes) - 2);
 11871  01457E  0101               	movlb	1	; () banked
 11872  014580  0E01               	movlw	high (TCPServer@cmdBytes+1)
 11873  014582  0101               	movlb	1	; () banked
 11874  014584  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 11875  014586  0101               	movlb	1	; () banked
 11876  014588  0E89               	movlw	low (TCPServer@cmdBytes+1)
 11877  01458A  0101               	movlb	1	; () banked
 11878  01458C  6F14               	movwf	memcpy@d1& (0+255),b
 11879  01458E  0102               	movlb	2	; () banked
 11880  014590  0E02               	movlw	high _s_irCode	;volatile
 11881  014592  0101               	movlb	1	; () banked
 11882  014594  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 11883  014596  0102               	movlb	2	; () banked
 11884  014598  0EAD               	movlw	low _s_irCode	;volatile
 11885  01459A  0101               	movlb	1	; () banked
 11886  01459C  6F16               	movwf	memcpy@s1& (0+255),b
 11887  01459E  0E00               	movlw	0
 11888  0145A0  0101               	movlb	1	; () banked
 11889  0145A2  6F19               	movwf	(memcpy@n+1)& (0+255),b
 11890  0145A4  0E10               	movlw	16
 11891  0145A6  0101               	movlb	1	; () banked
 11892  0145A8  6F18               	movwf	memcpy@n& (0+255),b
 11893  0145AA  ECDC  F0D5         	call	_memcpy	;wreg free
 11894                           
 11895                           ;main.c: 346: memset(&s_irCode, 0, sizeof(s_irCode));
 11896  0145AE  0102               	movlb	2	; () banked
 11897  0145B0  0E02               	movlw	high _s_irCode	;volatile
 11898  0145B2  0101               	movlb	1	; () banked
 11899  0145B4  6F01               	movwf	(memset@p1+1)& (0+255),b
 11900  0145B6  0102               	movlb	2	; () banked
 11901  0145B8  0EAD               	movlw	low _s_irCode	;volatile
 11902  0145BA  0101               	movlb	1	; () banked
 11903  0145BC  6F00               	movwf	memset@p1& (0+255),b
 11904  0145BE  0E00               	movlw	0
 11905  0145C0  0101               	movlb	1	; () banked
 11906  0145C2  6F03               	movwf	(memset@c+1)& (0+255),b
 11907  0145C4  0E00               	movlw	0
 11908  0145C6  0101               	movlb	1	; () banked
 11909  0145C8  6F02               	movwf	memset@c& (0+255),b
 11910  0145CA  0E00               	movlw	0
 11911  0145CC  0101               	movlb	1	; () banked
 11912  0145CE  6F05               	movwf	(memset@n+1)& (0+255),b
 11913  0145D0  0E10               	movlw	16
 11914  0145D2  0101               	movlb	1	; () banked
 11915  0145D4  6F04               	movwf	memset@n& (0+255),b
 11916  0145D6  ECD9  F0D9         	call	_memset	;wreg free
 11917                           
 11918                           ;main.c: 347: s_irCodeBitIdx = 1;
 11919  0145DA  0E01               	movlw	1
 11920  0145DC  0101               	movlb	1	; () banked
 11921  0145DE  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;main.c: 348: s_irCodeByteIdx = 0;
 11925  0145E0  0E00               	movlw	0
 11926  0145E2  0101               	movlb	1	; () banked
 11927  0145E4  6FB7               	movwf	_s_irCodeByteIdx& (0+255),b	;volatile
 11928                           
 11929                           ;main.c: 349: }
 11930  0145E6  D008               	goto	l15132
 11931  0145E8                     l1707:
 11932                           
 11933                           ; BSR set to: 1
 11934                           ;main.c: 350: else
 11935                           ;main.c: 351: {
 11936                           ;main.c: 352: cmdBytes[1] = s_irCodeBitIdx;
 11937  0145E8  C1FE  F189         	movff	_s_irCodeBitIdx,TCPServer@cmdBytes+1	;volatile
 11938                           
 11939                           ;main.c: 353: cmdBytes[2] = s_irCodeByteIdx;
 11940  0145EC  C1B7  F18A         	movff	_s_irCodeByteIdx,TCPServer@cmdBytes+2	;volatile
 11941                           
 11942                           ;main.c: 354: cmdBytes[3] = s_prevIRPort;
 11943  0145F0  C1FF  F18B         	movff	_s_prevIRPort,TCPServer@cmdBytes+3
 11944                           
 11945                           ;main.c: 355: cmdBytes[4] = s_irLearn;
 11946  0145F4  C1B8  F18C         	movff	_s_irLearn,TCPServer@cmdBytes+4	;volatile
 11947  0145F8                     l15132:
 11948                           
 11949                           ; BSR set to: 1
 11950                           ;main.c: 356: }
 11951                           ;main.c: 358: cmdBytes[0] = 0x02;
 11952  0145F8  0E02               	movlw	2
 11953  0145FA  0101               	movlb	1	; () banked
 11954  0145FC  6F88               	movwf	TCPServer@cmdBytes& (0+255),b
 11955                           
 11956                           ;main.c: 359: break;
 11957  0145FE  D056               	goto	l15144
 11958  014600                     l1709:
 11959                           
 11960                           ; BSR set to: 1
 11961                           ;main.c: 361: s_irLearn = cmdBytes[1];
 11962  014600  C189  F1B8         	movff	TCPServer@cmdBytes+1,_s_irLearn	;volatile
 11963                           
 11964                           ; BSR set to: 1
 11965                           ;main.c: 362: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11966  014604  0101               	movlb	1	; () banked
 11967  014606  0E01               	movlw	high TCPServer@cmdBytes
 11968  014608  0101               	movlb	1	; () banked
 11969  01460A  6F01               	movwf	(memset@p1+1)& (0+255),b
 11970  01460C  0101               	movlb	1	; () banked
 11971  01460E  0E88               	movlw	low TCPServer@cmdBytes
 11972  014610  0101               	movlb	1	; () banked
 11973  014612  6F00               	movwf	memset@p1& (0+255),b
 11974  014614  0E00               	movlw	0
 11975  014616  0101               	movlb	1	; () banked
 11976  014618  6F03               	movwf	(memset@c+1)& (0+255),b
 11977  01461A  0E00               	movlw	0
 11978  01461C  0101               	movlb	1	; () banked
 11979  01461E  6F02               	movwf	memset@c& (0+255),b
 11980  014620  0E00               	movlw	0
 11981  014622  0101               	movlb	1	; () banked
 11982  014624  6F05               	movwf	(memset@n+1)& (0+255),b
 11983  014626  0E12               	movlw	18
 11984  014628  0101               	movlb	1	; () banked
 11985  01462A  6F04               	movwf	memset@n& (0+255),b
 11986  01462C  ECD9  F0D9         	call	_memset	;wreg free
 11987                           
 11988                           ;main.c: 363: break;
 11989  014630  D03D               	goto	l15144
 11990  014632                     l15136:
 11991                           
 11992                           ;main.c: 365: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11993  014632  0101               	movlb	1	; () banked
 11994  014634  0E01               	movlw	high TCPServer@cmdBytes
 11995  014636  0101               	movlb	1	; () banked
 11996  014638  6F01               	movwf	(memset@p1+1)& (0+255),b
 11997  01463A  0101               	movlb	1	; () banked
 11998  01463C  0E88               	movlw	low TCPServer@cmdBytes
 11999  01463E  0101               	movlb	1	; () banked
 12000  014640  6F00               	movwf	memset@p1& (0+255),b
 12001  014642  0E00               	movlw	0
 12002  014644  0101               	movlb	1	; () banked
 12003  014646  6F03               	movwf	(memset@c+1)& (0+255),b
 12004  014648  0E00               	movlw	0
 12005  01464A  0101               	movlb	1	; () banked
 12006  01464C  6F02               	movwf	memset@c& (0+255),b
 12007  01464E  0E00               	movlw	0
 12008  014650  0101               	movlb	1	; () banked
 12009  014652  6F05               	movwf	(memset@n+1)& (0+255),b
 12010  014654  0E12               	movlw	18
 12011  014656  0101               	movlb	1	; () banked
 12012  014658  6F04               	movwf	memset@n& (0+255),b
 12013  01465A  ECD9  F0D9         	call	_memset	;wreg free
 12014                           
 12015                           ;main.c: 366: cmdBytes[0] = 0xFF;
 12016  01465E  0101               	movlb	1	; () banked
 12017  014660  6988               	setf	TCPServer@cmdBytes& (0+255),b
 12018                           
 12019                           ; BSR set to: 1
 12020                           ;main.c: 367: cmdBytes[1] = 0x01;
 12021  014662  0E01               	movlw	1
 12022  014664                     L1:
 12023  014664  0101               	movlb	1	; () banked
 12024  014666  6F89               	movwf	(TCPServer@cmdBytes+1)& (0+255),b
 12025                           
 12026                           ;main.c: 368: }
 12027  014668  D021               	goto	l15144
 12028  01466A                     l15142:
 12029                           
 12030                           ; BSR set to: 1
 12031  01466A  0101               	movlb	1	; () banked
 12032  01466C  5188               	movf	TCPServer@cmdBytes& (0+255),w,b
 12033                           
 12034                           ; Switch size 1, requested type "space"
 12035                           ; Number of cases is 10, Range of values is 0 to 11
 12036                           ; switch strategies available:
 12037                           ; Name         Instructions Cycles
 12038                           ; simple_byte           31    16 (average)
 12039                           ;	Chosen strategy is simple_byte
 12040  01466E  0A00               	xorlw	0	; case 0
 12041  014670  B4D8               	btfsc	status,2,c
 12042  014672  D66E               	goto	l15070
 12043  014674  0A01               	xorlw	1	; case 1
 12044  014676  B4D8               	btfsc	status,2,c
 12045  014678  D68E               	goto	l1699
 12046  01467A  0A03               	xorlw	3	; case 2
 12047  01467C  B4D8               	btfsc	status,2,c
 12048  01467E  D6A8               	goto	l15086
 12049  014680  0A01               	xorlw	1	; case 3
 12050  014682  B4D8               	btfsc	status,2,c
 12051  014684  D6C1               	goto	l15090
 12052  014686  0A07               	xorlw	7	; case 4
 12053  014688  B4D8               	btfsc	status,2,c
 12054  01468A  D6F1               	goto	l15100
 12055  01468C  0A01               	xorlw	1	; case 5
 12056  01468E  B4D8               	btfsc	status,2,c
 12057  014690  D70A               	goto	l1703
 12058  014692  0A02               	xorlw	2	; case 7
 12059  014694  B4D8               	btfsc	status,2,c
 12060  014696  D724               	goto	l1704
 12061  014698  0A0E               	xorlw	14	; case 9
 12062  01469A  B4D8               	btfsc	status,2,c
 12063  01469C  D73C               	goto	l1705
 12064  01469E  0A03               	xorlw	3	; case 10
 12065  0146A0  B4D8               	btfsc	status,2,c
 12066  0146A2  D766               	goto	l1706
 12067  0146A4  0A01               	xorlw	1	; case 11
 12068  0146A6  B4D8               	btfsc	status,2,c
 12069  0146A8  D7AB               	goto	l1709
 12070  0146AA  D7C3               	goto	l15136
 12071  0146AC                     l15144:
 12072                           
 12073                           ;main.c: 369: }
 12074                           ;main.c: 371: cmdBytes[sizeof(cmdBytes) - 1] = GetCheckSum(cmdBytes, sizeof(cmdBytes) - 
      +                          1);
 12075  0146AC  0101               	movlb	1	; () banked
 12076  0146AE  0E01               	movlw	high TCPServer@cmdBytes
 12077  0146B0  0101               	movlb	1	; () banked
 12078  0146B2  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 12079  0146B4  0101               	movlb	1	; () banked
 12080  0146B6  0E88               	movlw	low TCPServer@cmdBytes
 12081  0146B8  0101               	movlb	1	; () banked
 12082  0146BA  6F00               	movwf	GetCheckSum@data& (0+255),b
 12083  0146BC  0E11               	movlw	17
 12084  0146BE  0101               	movlb	1	; () banked
 12085  0146C0  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 12086  0146C2  EC23  F0D9         	call	_GetCheckSum	;wreg free
 12087  0146C6  0101               	movlb	1	; () banked
 12088  0146C8  6F99               	movwf	(TCPServer@cmdBytes+17)& (0+255),b
 12089                           
 12090                           ; BSR set to: 1
 12091                           ;main.c: 372: TCPPutArray(srvSocket, cmdBytes, sizeof(cmdBytes));
 12092  0146CA  0101               	movlb	1	; () banked
 12093  0146CC  0E01               	movlw	high TCPServer@cmdBytes
 12094  0146CE  0101               	movlb	1	; () banked
 12095  0146D0  6F58               	movwf	(TCPPutArray@data+1)& (0+255),b
 12096  0146D2  0101               	movlb	1	; () banked
 12097  0146D4  0E88               	movlw	low TCPServer@cmdBytes
 12098  0146D6  0101               	movlb	1	; () banked
 12099  0146D8  6F57               	movwf	TCPPutArray@data& (0+255),b
 12100  0146DA  0E00               	movlw	0
 12101  0146DC  0101               	movlb	1	; () banked
 12102  0146DE  6F5A               	movwf	(TCPPutArray@len+1)& (0+255),b
 12103  0146E0  0E12               	movlw	18
 12104  0146E2  0101               	movlb	1	; () banked
 12105  0146E4  6F59               	movwf	TCPPutArray@len& (0+255),b
 12106  0146E6  0101               	movlb	1	; () banked
 12107  0146E8  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 12108  0146EA  EC31  F0AA         	call	_TCPPutArray
 12109                           
 12110                           ;main.c: 374: tcpServerState = SM_CLOSING;
 12111  0146EE  0E02               	movlw	2
 12112  0146F0  0100               	movlb	0	; () banked
 12113  0146F2  6FED               	movwf	TCPServer@tcpServerState& (0+255),b
 12114                           
 12115                           ;main.c: 375: break;
 12116  0146F4  0012               	return	
 12117  0146F6                     l15150:
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;main.c: 379: TCPClose(srvSocket);
 12121  0146F6  0101               	movlb	1	; () banked
 12122  0146F8  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 12123  0146FA  ECCD  F0DB         	call	_TCPClose
 12124                           
 12125                           ;main.c: 381: tcpServerState = SM_HOME;
 12126  0146FE  0E00               	movlw	0
 12127  014700  0100               	movlb	0	; () banked
 12128  014702  6FED               	movwf	TCPServer@tcpServerState& (0+255),b
 12129                           
 12130                           ;main.c: 382: break;
 12131  014704  0012               	return	
 12132  014706                     l15156:
 12133  014706  0100               	movlb	0	; () banked
 12134  014708  51ED               	movf	TCPServer@tcpServerState& (0+255),w,b
 12135                           
 12136                           ; Switch size 1, requested type "space"
 12137                           ; Number of cases is 3, Range of values is 0 to 2
 12138                           ; switch strategies available:
 12139                           ; Name         Instructions Cycles
 12140                           ; simple_byte           10     6 (average)
 12141                           ;	Chosen strategy is simple_byte
 12142  01470A  0A00               	xorlw	0	; case 0
 12143  01470C  B4D8               	btfsc	status,2,c
 12144  01470E  D589               	goto	l15044
 12145  014710  0A01               	xorlw	1	; case 1
 12146  014712  B4D8               	btfsc	status,2,c
 12147  014714  D5AB               	goto	l15052
 12148  014716  0A03               	xorlw	3	; case 2
 12149  014718  A4D8               	btfss	status,2,c
 12150  01471A  0012               	return	
 12151  01471C  D7EC               	goto	l15150
 12152  01471E                     __end_of_TCPServer:
 12153                           	opt stack 0
 12154                           tblptru	equ	0xFF8
 12155                           tblptrh	equ	0xFF7
 12156                           tblptrl	equ	0xFF6
 12157                           tablat	equ	0xFF5
 12158                           intcon	equ	0xFF2
 12159                           postinc0	equ	0xFEE
 12160                           wreg	equ	0xFE8
 12161                           postdec1	equ	0xFE5
 12162                           fsr1h	equ	0xFE2
 12163                           fsr1l	equ	0xFE1
 12164                           status	equ	0xFD8
 12165                           
 12166 ;; *************** function _UpdateSampleRate *****************
 12167 ;; Defined at:
 12168 ;;		line 234 in file "Device.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;  srStr           2    5[BANK1 ] PTR const unsigned char 
 12173 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 12174 ;;		 -> STR_9(17), STR_8(17), 
 12175 ;; Return value:  Size  Location     Type
 12176 ;;		None               void
 12177 ;; Registers used:
 12178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12179 ;; Tracked objects:
 12180 ;;		On entry : 0/0
 12181 ;;		On exit  : 0/0
 12182 ;;		Unchanged: 0/0
 12183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12185 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12187 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12188 ;;Total ram usage:        2 bytes
 12189 ;; Hardware stack levels used:    1
 12190 ;; Hardware stack levels required when called:   14
 12191 ;; This function calls:
 12192 ;;		_RefreshLine2Ex
 12193 ;; This function is called by:
 12194 ;;		_TCPServer
 12195 ;;		_main
 12196 ;; This function uses a non-reentrant model
 12197 ;;
 12198                           
 12199                           	psect	text2
 12200  01A1CA                     __ptext2:
 12201                           	opt stack 0
 12202  01A1CA                     _UpdateSampleRate:
 12203                           	opt stack 15
 12204                           
 12205                           ;Device.c: 246: const char * srStr;
 12206                           ;Device.c: 247: switch(s_dacSettings.SampleRate)
 12207                           
 12208                           ;incstack = 0
 12209  01A1CA  D036               	goto	l14446
 12210  01A1CC                     l14396:
 12211  01A1CC  0EFF               	movlw	high STR_8
 12212  01A1CE  0101               	movlb	1	; () banked
 12213  01A1D0  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 12214  01A1D2  0E60               	movlw	low STR_8
 12215  01A1D4  0101               	movlb	1	; () banked
 12216  01A1D6  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 12217                           
 12218                           ; BSR set to: 1
 12219                           ;Device.c: 250: LATEbits.LE2 = 0;
 12220  01A1D8  948D               	bcf	3981,2,c	;volatile
 12221  01A1DA  D007               	goto	L2
 12222  01A1DC                     l14404:
 12223  01A1DC  0EFF               	movlw	high STR_9
 12224  01A1DE  0101               	movlb	1	; () banked
 12225  01A1E0  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 12226  01A1E2  0E4F               	movlw	low STR_9
 12227  01A1E4  0101               	movlb	1	; () banked
 12228  01A1E6  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 12229                           
 12230                           ; BSR set to: 1
 12231                           ;Device.c: 255: LATEbits.LE2 = 1;
 12232  01A1E8  848D               	bsf	3981,2,c	;volatile
 12233  01A1EA                     L2:
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;Device.c: 256: LATEbits.LE1 = 0;
 12237  01A1EA  928D               	bcf	3981,1,c	;volatile
 12238  01A1EC  D008               	goto	L3
 12239  01A1EE                     l14412:
 12240  01A1EE  0EFF               	movlw	high STR_10
 12241  01A1F0  0101               	movlb	1	; () banked
 12242  01A1F2  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 12243  01A1F4  0E71               	movlw	low STR_10
 12244  01A1F6  0101               	movlb	1	; () banked
 12245  01A1F8  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 12246                           
 12247                           ; BSR set to: 1
 12248                           ;Device.c: 260: LATEbits.LE2 = 0;
 12249  01A1FA  948D               	bcf	3981,2,c	;volatile
 12250  01A1FC  D009               	goto	L4
 12251  01A1FE                     L3:
 12252                           
 12253                           ; BSR set to: 1
 12254                           ;Device.c: 262: LATEbits.LE0 = 0;
 12255  01A1FE  908D               	bcf	3981,0,c	;volatile
 12256                           
 12257                           ;Device.c: 263: break;
 12258  01A200  D02D               	goto	l14448
 12259  01A202                     l14420:
 12260  01A202  0EFF               	movlw	high STR_11
 12261  01A204  0101               	movlb	1	; () banked
 12262  01A206  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 12263  01A208  0E3E               	movlw	low STR_11
 12264  01A20A  0101               	movlb	1	; () banked
 12265  01A20C  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 12266                           
 12267                           ; BSR set to: 1
 12268                           ;Device.c: 265: LATEbits.LE2 = 1;
 12269  01A20E  848D               	bsf	3981,2,c	;volatile
 12270  01A210                     L4:
 12271                           
 12272                           ; BSR set to: 1
 12273                           ;Device.c: 266: LATEbits.LE1 = 1;
 12274  01A210  828D               	bsf	3981,1,c	;volatile
 12275  01A212  D7F5               	goto	L3
 12276  01A214                     l14428:
 12277  01A214  0EFF               	movlw	high STR_12
 12278  01A216  0101               	movlb	1	; () banked
 12279  01A218  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 12280  01A21A  0E2D               	movlw	low STR_12
 12281  01A21C  0101               	movlb	1	; () banked
 12282  01A21E  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 12283                           
 12284                           ; BSR set to: 1
 12285                           ;Device.c: 270: LATEbits.LE2 = 1;
 12286  01A220  848D               	bsf	3981,2,c	;volatile
 12287  01A222  D007               	goto	L5
 12288  01A224                     l14436:
 12289  01A224  0EFF               	movlw	high STR_13
 12290  01A226  0101               	movlb	1	; () banked
 12291  01A228  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 12292  01A22A  0E82               	movlw	low STR_13
 12293  01A22C  0101               	movlb	1	; () banked
 12294  01A22E  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 12295                           
 12296                           ; BSR set to: 1
 12297                           ;Device.c: 275: LATEbits.LE2 = 0;
 12298  01A230  948D               	bcf	3981,2,c	;volatile
 12299  01A232                     L5:
 12300                           
 12301                           ; BSR set to: 1
 12302                           ;Device.c: 276: LATEbits.LE1 = 0;
 12303  01A232  928D               	bcf	3981,1,c	;volatile
 12304                           
 12305                           ; BSR set to: 1
 12306                           ;Device.c: 277: LATEbits.LE0 = 1;
 12307  01A234  808D               	bsf	3981,0,c	;volatile
 12308                           
 12309                           ;Device.c: 278: break;
 12310  01A236  D012               	goto	l14448
 12311  01A238                     l14446:
 12312  01A238  0102               	movlb	2	; () banked
 12313  01A23A  51D4               	movf	(_s_dacSettings+1)& (0+255),w,b
 12314                           
 12315                           ; Switch size 1, requested type "space"
 12316                           ; Number of cases is 5, Range of values is 0 to 5
 12317                           ; switch strategies available:
 12318                           ; Name         Instructions Cycles
 12319                           ; simple_byte           16     9 (average)
 12320                           ;	Chosen strategy is simple_byte
 12321  01A23C  0A00               	xorlw	0	; case 0
 12322  01A23E  B4D8               	btfsc	status,2,c
 12323  01A240  D7C5               	goto	l14396
 12324  01A242  0A01               	xorlw	1	; case 1
 12325  01A244  B4D8               	btfsc	status,2,c
 12326  01A246  D7CA               	goto	l14404
 12327  01A248  0A03               	xorlw	3	; case 2
 12328  01A24A  B4D8               	btfsc	status,2,c
 12329  01A24C  D7D0               	goto	l14412
 12330  01A24E  0A01               	xorlw	1	; case 3
 12331  01A250  B4D8               	btfsc	status,2,c
 12332  01A252  D7D7               	goto	l14420
 12333  01A254  0A06               	xorlw	6	; case 5
 12334  01A256  B4D8               	btfsc	status,2,c
 12335  01A258  D7DD               	goto	l14428
 12336  01A25A  D7E4               	goto	l14436
 12337  01A25C                     l14448:
 12338                           
 12339                           ;Device.c: 280: RefreshLine2Ex(srStr);
 12340  01A25C  0101               	movlb	1	; () banked
 12341  01A25E  C106  F104         	movff	UpdateSampleRate@srStr+1,RefreshLine2Ex@line+1
 12342  01A262  0101               	movlb	1	; () banked
 12343  01A264  C105  F103         	movff	UpdateSampleRate@srStr,RefreshLine2Ex@line
 12344  01A268  EC88  F0DC         	call	_RefreshLine2Ex	;wreg free
 12345  01A26C  0012               	return	
 12346  01A26E                     __end_of_UpdateSampleRate:
 12347                           	opt stack 0
 12348                           tblptru	equ	0xFF8
 12349                           tblptrh	equ	0xFF7
 12350                           tblptrl	equ	0xFF6
 12351                           tablat	equ	0xFF5
 12352                           intcon	equ	0xFF2
 12353                           postinc0	equ	0xFEE
 12354                           wreg	equ	0xFE8
 12355                           postdec1	equ	0xFE5
 12356                           fsr1h	equ	0xFE2
 12357                           fsr1l	equ	0xFE1
 12358                           status	equ	0xFD8
 12359                           
 12360 ;; *************** function _RefreshLine2Ex *****************
 12361 ;; Defined at:
 12362 ;;		line 25 in file "LCD.c"
 12363 ;; Parameters:    Size  Location     Type
 12364 ;;  line            2    3[BANK1 ] PTR const unsigned char 
 12365 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 12366 ;;		 -> STR_9(17), STR_8(17), dispbuf2(17), 
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;		None
 12369 ;; Return value:  Size  Location     Type
 12370 ;;		None               void
 12371 ;; Registers used:
 12372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12378 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12381 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12382 ;;Total ram usage:        2 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:   13
 12385 ;; This function calls:
 12386 ;;		_PutsSLCD
 12387 ;;		_SLCDSetDDRamAddr
 12388 ;; This function is called by:
 12389 ;;		_UpdateSampleRate
 12390 ;;		_RefreshLine2
 12391 ;; This function uses a non-reentrant model
 12392 ;;
 12393                           
 12394                           	psect	text3
 12395  01B910                     __ptext3:
 12396                           	opt stack 0
 12397  01B910                     _RefreshLine2Ex:
 12398                           	opt stack 15
 12399                           
 12400                           ;LCD.c: 27: SLCDSetDDRamAddr(0x40);
 12401                           
 12402                           ;incstack = 0
 12403  01B910  0E40               	movlw	64
 12404  01B912  EC7B  F0DC         	call	_SLCDSetDDRamAddr
 12405                           
 12406                           ;LCD.c: 28: PutsSLCD(line);
 12407  01B916  0101               	movlb	1	; () banked
 12408  01B918  C104  F102         	movff	RefreshLine2Ex@line+1,PutsSLCD@buffer+1
 12409  01B91C  0101               	movlb	1	; () banked
 12410  01B91E  C103  F101         	movff	RefreshLine2Ex@line,PutsSLCD@buffer
 12411  01B922  EC12  F0D6         	call	_PutsSLCD	;wreg free
 12412  01B926  0012               	return	
 12413  01B928                     __end_of_RefreshLine2Ex:
 12414                           	opt stack 0
 12415                           tblptru	equ	0xFF8
 12416                           tblptrh	equ	0xFF7
 12417                           tblptrl	equ	0xFF6
 12418                           tablat	equ	0xFF5
 12419                           intcon	equ	0xFF2
 12420                           postinc0	equ	0xFEE
 12421                           wreg	equ	0xFE8
 12422                           postdec1	equ	0xFE5
 12423                           fsr1h	equ	0xFE2
 12424                           fsr1l	equ	0xFE1
 12425                           status	equ	0xFD8
 12426                           
 12427 ;; *************** function _UpdateMasterVolume *****************
 12428 ;; Defined at:
 12429 ;;		line 161 in file "Device.c"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;		None
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  dvol            3  126[BANK1 ] PTR const unsigned char 
 12434 ;;  i               1  129[BANK1 ] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;		None               void
 12437 ;; Registers used:
 12438 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12445 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12446 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12447 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12448 ;;Total ram usage:        6 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:   15
 12451 ;; This function calls:
 12452 ;;		_RefreshLine1
 12453 ;;		_SendVolumeToDevice
 12454 ;;		___awtoft
 12455 ;;		___ftdiv
 12456 ;;		_sprintf
 12457 ;; This function is called by:
 12458 ;;		_TCPServer
 12459 ;;		_main
 12460 ;; This function uses a non-reentrant model
 12461 ;;
 12462                           
 12463                           	psect	text4
 12464  019F12                     __ptext4:
 12465                           	opt stack 0
 12466  019F12                     _UpdateMasterVolume:
 12467                           	opt stack 14
 12468                           
 12469                           ;Device.c: 163: double dvol = -s_dacSettings.Volume / 8.0;
 12470                           
 12471                           ;incstack = 0
 12472  019F12  0102               	movlb	2	; () banked
 12473  019F14  51D5               	movf	(_s_dacSettings+2)& (0+255),w,b
 12474  019F16  0101               	movlb	1	; () banked
 12475  019F18  6F7C               	movwf	??_UpdateMasterVolume& (0+255),b
 12476  019F1A  6B7D               	clrf	(??_UpdateMasterVolume+1)& (0+255),b
 12477  019F1C  0101               	movlb	1	; () banked
 12478  019F1E  1F7C               	comf	??_UpdateMasterVolume& (0+255),f,b
 12479  019F20  1F7D               	comf	(??_UpdateMasterVolume+1)& (0+255),f,b
 12480  019F22  4B7C               	infsnz	??_UpdateMasterVolume& (0+255),f,b
 12481  019F24  2B7D               	incf	(??_UpdateMasterVolume+1)& (0+255),f,b
 12482  019F26  C17C  F108         	movff	??_UpdateMasterVolume,___awtoft@c
 12483  019F2A  C17D  F109         	movff	??_UpdateMasterVolume+1,___awtoft@c+1
 12484  019F2E  EC9E  F0D7         	call	___awtoft	;wreg free
 12485  019F32  C108  F10C         	movff	?___awtoft,___ftdiv@f1
 12486  019F36  C109  F10D         	movff	?___awtoft+1,___ftdiv@f1+1
 12487  019F3A  C10A  F10E         	movff	?___awtoft+2,___ftdiv@f1+2
 12488  019F3E  0E00               	movlw	0
 12489  019F40  0101               	movlb	1	; () banked
 12490  019F42  6F0F               	movwf	___ftdiv@f2& (0+255),b
 12491  019F44  0E00               	movlw	0
 12492  019F46  0101               	movlb	1	; () banked
 12493  019F48  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
 12494  019F4A  0E41               	movlw	65
 12495  019F4C  0101               	movlb	1	; () banked
 12496  019F4E  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
 12497  019F50  ECD5  F0BD         	call	___ftdiv	;wreg free
 12498  019F54  C10C  F17E         	movff	?___ftdiv,UpdateMasterVolume@dvol
 12499  019F58  C10D  F17F         	movff	?___ftdiv+1,UpdateMasterVolume@dvol+1
 12500  019F5C  C10E  F180         	movff	?___ftdiv+2,UpdateMasterVolume@dvol+2
 12501                           
 12502                           ;Device.c: 165: uint8_t i = sprintf( &dispbuf1, "Volume %7.3fdB", dvol);
 12503  019F60  0102               	movlb	2	; () banked
 12504  019F62  0E02               	movlw	high _dispbuf1
 12505  019F64  0101               	movlb	1	; () banked
 12506  019F66  6F49               	movwf	(sprintf@sp+1)& (0+255),b
 12507  019F68  0102               	movlb	2	; () banked
 12508  019F6A  0E8B               	movlw	low _dispbuf1
 12509  019F6C  0101               	movlb	1	; () banked
 12510  019F6E  6F48               	movwf	sprintf@sp& (0+255),b
 12511  019F70  0EFF               	movlw	high STR_7
 12512  019F72  0101               	movlb	1	; () banked
 12513  019F74  6F4B               	movwf	(sprintf@f+1)& (0+255),b
 12514  019F76  0EE8               	movlw	low STR_7
 12515  019F78  0101               	movlb	1	; () banked
 12516  019F7A  6F4A               	movwf	sprintf@f& (0+255),b
 12517  019F7C  C17E  F14C         	movff	UpdateMasterVolume@dvol,?_sprintf+4
 12518  019F80  C17F  F14D         	movff	UpdateMasterVolume@dvol+1,?_sprintf+5
 12519  019F84  C180  F14E         	movff	UpdateMasterVolume@dvol+2,?_sprintf+6
 12520  019F88  EC00  F0F8         	call	_sprintf	;wreg free
 12521  019F8C  0101               	movlb	1	; () banked
 12522  019F8E  5148               	movf	?_sprintf& (0+255),w,b
 12523  019F90  0101               	movlb	1	; () banked
 12524  019F92  6F81               	movwf	UpdateMasterVolume@i& (0+255),b
 12525  019F94  D00F               	goto	L6
 12526  019F96                     l14502:
 12527                           
 12528                           ; BSR set to: 1
 12529  019F96  0101               	movlb	1	; () banked
 12530  019F98  5181               	movf	UpdateMasterVolume@i& (0+255),w,b
 12531  019F9A  0D01               	mullw	1
 12532  019F9C  0102               	movlb	2	; () banked
 12533  019F9E  0E8B               	movlw	low _dispbuf1
 12534  019FA0  24F3               	addwf	prodl,w,c
 12535  019FA2  6ED9               	movwf	fsr2l,c
 12536  019FA4  0102               	movlb	2	; () banked
 12537  019FA6  0E02               	movlw	high _dispbuf1
 12538  019FA8  20F4               	addwfc	prodh,w,c
 12539  019FAA  6EDA               	movwf	fsr2h,c
 12540  019FAC  0E20               	movlw	32
 12541  019FAE  6EDF               	movwf	indf2,c
 12542                           
 12543                           ; BSR set to: 2
 12544  019FB0  0101               	movlb	1	; () banked
 12545  019FB2  2B81               	incf	UpdateMasterVolume@i& (0+255),f,b
 12546  019FB4                     L6:
 12547                           
 12548                           ; BSR set to: 1
 12549  019FB4  0E0F               	movlw	15
 12550  019FB6  0101               	movlb	1	; () banked
 12551  019FB8  6581               	cpfsgt	UpdateMasterVolume@i& (0+255),b
 12552  019FBA  D7ED               	goto	l14502
 12553                           
 12554                           ; BSR set to: 1
 12555                           ;Device.c: 167: dispbuf1[16] = 0;
 12556                           
 12557                           ; BSR set to: 1
 12558  019FBC  0E00               	movlw	0
 12559  019FBE  0102               	movlb	2	; () banked
 12560  019FC0  6F9B               	movwf	(_dispbuf1+16)& (0+255),b
 12561                           
 12562                           ; BSR set to: 2
 12563                           ;Device.c: 168: RefreshLine1();
 12564  019FC2  ECAB  F0DC         	call	_RefreshLine1	;wreg free
 12565                           
 12566                           ;Device.c: 170: SendVolumeToDevice();
 12567  019FC6  ECA0  F0DC         	call	_SendVolumeToDevice	;wreg free
 12568  019FCA  0012               	return	
 12569  019FCC                     __end_of_UpdateMasterVolume:
 12570                           	opt stack 0
 12571                           tblptru	equ	0xFF8
 12572                           tblptrh	equ	0xFF7
 12573                           tblptrl	equ	0xFF6
 12574                           tablat	equ	0xFF5
 12575                           prodh	equ	0xFF4
 12576                           prodl	equ	0xFF3
 12577                           intcon	equ	0xFF2
 12578                           postinc0	equ	0xFEE
 12579                           wreg	equ	0xFE8
 12580                           postdec1	equ	0xFE5
 12581                           fsr1h	equ	0xFE2
 12582                           fsr1l	equ	0xFE1
 12583                           indf2	equ	0xFDF
 12584                           fsr2h	equ	0xFDA
 12585                           fsr2l	equ	0xFD9
 12586                           status	equ	0xFD8
 12587                           
 12588 ;; *************** function _sprintf *****************
 12589 ;; Defined at:
 12590 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;  sp              2   72[BANK1 ] PTR unsigned char 
 12593 ;;		 -> dispbuf1(17), 
 12594 ;;  f               2   74[BANK1 ] PTR const unsigned char 
 12595 ;;		 -> STR_7(15), 
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;  vd              4   94[BANK1 ] unsigned long 
 12598 ;;  vd              4   98[BANK1 ] unsigned long 
 12599 ;;  _val            5  107[BANK1 ] struct .
 12600 ;;  fval            3  118[BANK1 ] struct .
 12601 ;;  integ           3  104[BANK1 ] struct .
 12602 ;;  ival            3    0        struct .
 12603 ;;  prec            2  121[BANK1 ] int 
 12604 ;;  exp             2  116[BANK1 ] int 
 12605 ;;  width           2  114[BANK1 ] int 
 12606 ;;  flag            2  112[BANK1 ] unsigned short 
 12607 ;;  ccnt            2  102[BANK1 ] int 
 12608 ;;  ap              2   92[BANK1 ] PTR void [1]
 12609 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 12610 ;;  c               1  123[BANK1 ] char 
 12611 ;;  d               1    0        unsigned char 
 12612 ;; Return value:  Size  Location     Type
 12613 ;;                  2   72[BANK1 ] int 
 12614 ;; Registers used:
 12615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12616 ;; Tracked objects:
 12617 ;;		On entry : 0/0
 12618 ;;		On exit  : 0/0
 12619 ;;		Unchanged: 0/0
 12620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12621 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12622 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Totals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;Total ram usage:       52 bytes
 12626 ;; Hardware stack levels used:    1
 12627 ;; Hardware stack levels required when called:   13
 12628 ;; This function calls:
 12629 ;;		___awdiv
 12630 ;;		___ftadd
 12631 ;;		___ftge
 12632 ;;		___ftmul
 12633 ;;		___ftneg
 12634 ;;		___ftsub
 12635 ;;		___fttol
 12636 ;;		___lldiv
 12637 ;;		___llmod
 12638 ;;		___lltoft
 12639 ;;		___wmul
 12640 ;;		__div_to_l_
 12641 ;;		__tdiv_to_l_
 12642 ;;		_fround
 12643 ;;		_isdigit
 12644 ;;		_scale
 12645 ;; This function is called by:
 12646 ;;		_UpdateMasterVolume
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           	psect	text5
 12651  01F000                     __ptext5:
 12652                           	opt stack 0
 12653  01F000                     _sprintf:
 12654                           	opt stack 15
 12655                           
 12656                           ;doprnt.c: 494: va_list ap;
 12657                           ;doprnt.c: 499: signed char c;
 12658                           ;doprnt.c: 501: int width;
 12659                           ;doprnt.c: 504: int prec;
 12660                           ;doprnt.c: 508: unsigned short flag;
 12661                           ;doprnt.c: 510: int ccnt = 0;
 12662                           
 12663                           ;incstack = 0
 12664  01F000  0E00               	movlw	0
 12665  01F002  0101               	movlb	1	; () banked
 12666  01F004  6F67               	movwf	(sprintf@ccnt+1)& (0+255),b
 12667  01F006  0E00               	movlw	0
 12668  01F008  0101               	movlb	1	; () banked
 12669  01F00A  6F66               	movwf	sprintf@ccnt& (0+255),b
 12670                           
 12671                           ; BSR set to: 1
 12672                           ;doprnt.c: 515: char d;
 12673                           ;doprnt.c: 516: double fval, integ;
 12674                           ;doprnt.c: 517: int exp;
 12675                           ;doprnt.c: 518: double ival;
 12676                           ;doprnt.c: 519: union {
 12677                           ;doprnt.c: 520: unsigned long _val;
 12678                           ;doprnt.c: 521: struct {
 12679                           ;doprnt.c: 522: const char * _cp;
 12680                           ;doprnt.c: 523: unsigned _len;
 12681                           ;doprnt.c: 524: } _str;
 12682                           ;doprnt.c: 525: } _val;
 12683                           ;doprnt.c: 542: *ap = __va_start();
 12684  01F00C  0101               	movlb	1	; () banked
 12685  01F00E  0E01               	movlw	high (?_sprintf+4)
 12686  01F010  0101               	movlb	1	; () banked
 12687  01F012  6F5D               	movwf	(sprintf@ap+1)& (0+255),b
 12688  01F014  0101               	movlb	1	; () banked
 12689  01F016  0E4C               	movlw	low (?_sprintf+4)
 12690  01F018  0101               	movlb	1	; () banked
 12691  01F01A  6F5C               	movwf	sprintf@ap& (0+255),b
 12692                           
 12693                           ;doprnt.c: 545: while(c = *f++) {
 12694  01F01C  EF9E  F0FD         	goto	l13640
 12695  01F020                     l13364:
 12696                           
 12697                           ; BSR set to: 1
 12698                           ;doprnt.c: 547: if(c != '%')
 12699  01F020  0101               	movlb	1	; () banked
 12700  01F022  517B               	movf	sprintf@c& (0+255),w,b
 12701  01F024  0A25               	xorlw	37
 12702  01F026  B4D8               	btfsc	status,2,c
 12703  01F028  D009               	goto	l13372
 12704                           
 12705                           ; BSR set to: 1
 12706                           ;doprnt.c: 549: {
 12707                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
 12708  01F02A  C148  FFD9         	movff	sprintf@sp,fsr2l
 12709  01F02E  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 12710  01F032  0101               	movlb	1	; () banked
 12711  01F034  C17B  FFDF         	movff	sprintf@c,indf2
 12712  01F038  EF98  F0FD         	goto	L7
 12713  01F03C                     l13372:
 12714                           
 12715                           ; BSR set to: 1
 12716                           ;doprnt.c: 552: }
 12717                           ;doprnt.c: 555: width = 0;
 12718  01F03C  0E00               	movlw	0
 12719  01F03E  0101               	movlb	1	; () banked
 12720  01F040  6F73               	movwf	(sprintf@width+1)& (0+255),b
 12721  01F042  0E00               	movlw	0
 12722  01F044  0101               	movlb	1	; () banked
 12723  01F046  6F72               	movwf	sprintf@width& (0+255),b
 12724                           
 12725                           ;doprnt.c: 557: flag = 0;
 12726  01F048  0E00               	movlw	0
 12727  01F04A  0101               	movlb	1	; () banked
 12728  01F04C  6F71               	movwf	(sprintf@flag+1)& (0+255),b
 12729  01F04E  0E00               	movlw	0
 12730  01F050  0101               	movlb	1	; () banked
 12731  01F052  6F70               	movwf	sprintf@flag& (0+255),b
 12732                           
 12733                           ; BSR set to: 1
 12734                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 12735  01F054  0101               	movlb	1	; () banked
 12736  01F056  C14A  FFF6         	movff	sprintf@f,tblptrl
 12737  01F05A  0101               	movlb	1	; () banked
 12738  01F05C  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12739  01F060                     	if	0	;tblptru may be non-zero
 12740  01F060                     	endif
 12741  01F060                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12742  01F060  0E00               	movlw	low (__mediumconst shr (0+16))
 12743  01F062  6EF8               	movwf	tblptru,c
 12744  01F064                     	endif
 12745  01F064  0008               	tblrd		*
 12746  01F066  50F5               	movf	tablat,w,c
 12747  01F068  ECF4  F0DA         	call	_isdigit
 12748  01F06C  A0D8               	btfss	status,0,c
 12749  01F06E  D04B               	goto	l13386
 12750                           
 12751                           ;doprnt.c: 607: width = 0;
 12752  01F070  0E00               	movlw	0
 12753  01F072  0101               	movlb	1	; () banked
 12754  01F074  6F73               	movwf	(sprintf@width+1)& (0+255),b
 12755  01F076  0E00               	movlw	0
 12756  01F078  0101               	movlb	1	; () banked
 12757  01F07A  6F72               	movwf	sprintf@width& (0+255),b
 12758  01F07C                     l13378:
 12759                           
 12760                           ;doprnt.c: 609: width *= 10;
 12761  01F07C  C172  F10E         	movff	sprintf@width,___wmul@multiplier
 12762  01F080  C173  F10F         	movff	sprintf@width+1,___wmul@multiplier+1
 12763  01F084  0E00               	movlw	0
 12764  01F086  0101               	movlb	1	; () banked
 12765  01F088  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12766  01F08A  0E0A               	movlw	10
 12767  01F08C  0101               	movlb	1	; () banked
 12768  01F08E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 12769  01F090  ECF5  F0D9         	call	___wmul	;wreg free
 12770  01F094  0101               	movlb	1	; () banked
 12771  01F096  C10E  F172         	movff	?___wmul,sprintf@width
 12772  01F09A  0101               	movlb	1	; () banked
 12773  01F09C  C10F  F173         	movff	?___wmul+1,sprintf@width+1
 12774                           
 12775                           ; BSR set to: 1
 12776                           ;doprnt.c: 610: width += *f++ - '0';
 12777  01F0A0  0ED0               	movlw	208
 12778  01F0A2  0101               	movlb	1	; () banked
 12779  01F0A4  6F4F               	movwf	??_sprintf& (0+255),b
 12780  01F0A6  0EFF               	movlw	255
 12781  01F0A8  6F50               	movwf	(??_sprintf+1)& (0+255),b
 12782  01F0AA  0101               	movlb	1	; () banked
 12783  01F0AC  C14A  FFF6         	movff	sprintf@f,tblptrl
 12784  01F0B0  0101               	movlb	1	; () banked
 12785  01F0B2  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12786  01F0B6                     	if	0	;tblptru may be non-zero
 12787  01F0B6                     	endif
 12788  01F0B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12789  01F0B6  0E00               	movlw	low (__mediumconst shr (0+16))
 12790  01F0B8  6EF8               	movwf	tblptru,c
 12791  01F0BA                     	endif
 12792  01F0BA  0008               	tblrd		*
 12793  01F0BC  50F5               	movf	tablat,w,c
 12794  01F0BE  0101               	movlb	1	; () banked
 12795  01F0C0  6F51               	movwf	(??_sprintf+2)& (0+255),b
 12796  01F0C2  6B52               	clrf	(??_sprintf+3)& (0+255),b
 12797  01F0C4  0101               	movlb	1	; () banked
 12798  01F0C6  514F               	movf	??_sprintf& (0+255),w,b
 12799  01F0C8  0101               	movlb	1	; () banked
 12800  01F0CA  2751               	addwf	(??_sprintf+2)& (0+255),f,b
 12801  01F0CC  0101               	movlb	1	; () banked
 12802  01F0CE  5150               	movf	(??_sprintf+1)& (0+255),w,b
 12803  01F0D0  0101               	movlb	1	; () banked
 12804  01F0D2  2352               	addwfc	(??_sprintf+3)& (0+255),f,b
 12805  01F0D4  0101               	movlb	1	; () banked
 12806  01F0D6  5151               	movf	(??_sprintf+2)& (0+255),w,b
 12807  01F0D8  0101               	movlb	1	; () banked
 12808  01F0DA  2772               	addwf	sprintf@width& (0+255),f,b
 12809  01F0DC  0101               	movlb	1	; () banked
 12810  01F0DE  5152               	movf	(??_sprintf+3)& (0+255),w,b
 12811  01F0E0  0101               	movlb	1	; () banked
 12812  01F0E2  2373               	addwfc	(sprintf@width+1)& (0+255),f,b
 12813                           
 12814                           ; BSR set to: 1
 12815  01F0E4  0101               	movlb	1	; () banked
 12816  01F0E6  4B4A               	infsnz	sprintf@f& (0+255),f,b
 12817  01F0E8  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 12818                           
 12819                           ; BSR set to: 1
 12820                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 12821  01F0EA  0101               	movlb	1	; () banked
 12822  01F0EC  C14A  FFF6         	movff	sprintf@f,tblptrl
 12823  01F0F0  0101               	movlb	1	; () banked
 12824  01F0F2  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12825  01F0F6                     	if	0	;tblptru may be non-zero
 12826  01F0F6                     	endif
 12827  01F0F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12828  01F0F6  0E00               	movlw	low (__mediumconst shr (0+16))
 12829  01F0F8  6EF8               	movwf	tblptru,c
 12830  01F0FA                     	endif
 12831  01F0FA  0008               	tblrd		*
 12832  01F0FC  50F5               	movf	tablat,w,c
 12833  01F0FE  ECF4  F0DA         	call	_isdigit
 12834  01F102  B0D8               	btfsc	status,0,c
 12835  01F104  D7BB               	goto	l13378
 12836  01F106                     l13386:
 12837                           
 12838                           ;doprnt.c: 617: }
 12839                           ;doprnt.c: 620: if(*f == '.') {
 12840  01F106  0101               	movlb	1	; () banked
 12841  01F108  C14A  FFF6         	movff	sprintf@f,tblptrl
 12842  01F10C  0101               	movlb	1	; () banked
 12843  01F10E  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12844  01F112                     	if	0	;tblptru may be non-zero
 12845  01F112                     	endif
 12846  01F112                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12847  01F112  0E00               	movlw	low (__mediumconst shr (0+16))
 12848  01F114  6EF8               	movwf	tblptru,c
 12849  01F116                     	endif
 12850  01F116  0008               	tblrd		*
 12851  01F118  50F5               	movf	tablat,w,c
 12852  01F11A  0A2E               	xorlw	46
 12853  01F11C  A4D8               	btfss	status,2,c
 12854  01F11E  D043               	goto	l13398
 12855                           
 12856                           ; BSR set to: 1
 12857                           ;doprnt.c: 621: flag |= 0x4000;
 12858  01F120  0101               	movlb	1	; () banked
 12859  01F122  8D71               	bsf	(sprintf@flag+1)& (0+255),6,b
 12860                           
 12861                           ;doprnt.c: 622: f++;
 12862  01F124  0101               	movlb	1	; () banked
 12863  01F126  4B4A               	infsnz	sprintf@f& (0+255),f,b
 12864  01F128  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 12865                           
 12866                           ; BSR set to: 1
 12867                           ;doprnt.c: 629: {
 12868                           ;doprnt.c: 630: prec = 0;
 12869  01F12A  0E00               	movlw	0
 12870  01F12C  0101               	movlb	1	; () banked
 12871  01F12E  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 12872  01F130  0E00               	movlw	0
 12873  01F132  0101               	movlb	1	; () banked
 12874  01F134  6F79               	movwf	sprintf@prec& (0+255),b
 12875                           
 12876                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 12877  01F136  D028               	goto	l13396
 12878  01F138                     l13392:
 12879                           
 12880                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 12881  01F138  C179  F10E         	movff	sprintf@prec,___wmul@multiplier
 12882  01F13C  C17A  F10F         	movff	sprintf@prec+1,___wmul@multiplier+1
 12883  01F140  0E00               	movlw	0
 12884  01F142  0101               	movlb	1	; () banked
 12885  01F144  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12886  01F146  0E0A               	movlw	10
 12887  01F148  0101               	movlb	1	; () banked
 12888  01F14A  6F10               	movwf	___wmul@multiplicand& (0+255),b
 12889  01F14C  ECF5  F0D9         	call	___wmul	;wreg free
 12890  01F150  0101               	movlb	1	; () banked
 12891  01F152  C14A  FFF6         	movff	sprintf@f,tblptrl
 12892  01F156  0101               	movlb	1	; () banked
 12893  01F158  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12894  01F15C                     	if	0	;tblptru may be non-zero
 12895  01F15C                     	endif
 12896  01F15C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12897  01F15C  0E00               	movlw	low (__mediumconst shr (0+16))
 12898  01F15E  6EF8               	movwf	tblptru,c
 12899  01F160                     	endif
 12900  01F160  0008               	tblrd		*
 12901  01F162  50F5               	movf	tablat,w,c
 12902  01F164  0101               	movlb	1	; () banked
 12903  01F166  270E               	addwf	?___wmul& (0+255),f,b
 12904  01F168  0E00               	movlw	0
 12905  01F16A  0101               	movlb	1	; () banked
 12906  01F16C  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 12907  01F16E  0ED0               	movlw	208
 12908  01F170  0101               	movlb	1	; () banked
 12909  01F172  250E               	addwf	?___wmul& (0+255),w,b
 12910  01F174  0101               	movlb	1	; () banked
 12911  01F176  6F79               	movwf	sprintf@prec& (0+255),b
 12912  01F178  0EFF               	movlw	255
 12913  01F17A  0101               	movlb	1	; () banked
 12914  01F17C  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 12915  01F17E  0101               	movlb	1	; () banked
 12916  01F180  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 12917                           
 12918                           ; BSR set to: 1
 12919  01F182  0101               	movlb	1	; () banked
 12920  01F184  4B4A               	infsnz	sprintf@f& (0+255),f,b
 12921  01F186  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 12922  01F188                     l13396:
 12923                           
 12924                           ; BSR set to: 1
 12925  01F188  0101               	movlb	1	; () banked
 12926  01F18A  C14A  FFF6         	movff	sprintf@f,tblptrl
 12927  01F18E  0101               	movlb	1	; () banked
 12928  01F190  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12929  01F194                     	if	0	;tblptru may be non-zero
 12930  01F194                     	endif
 12931  01F194                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12932  01F194  0E00               	movlw	low (__mediumconst shr (0+16))
 12933  01F196  6EF8               	movwf	tblptru,c
 12934  01F198                     	endif
 12935  01F198  0008               	tblrd		*
 12936  01F19A  50F5               	movf	tablat,w,c
 12937  01F19C  ECF4  F0DA         	call	_isdigit
 12938  01F1A0  A0D8               	btfss	status,0,c
 12939  01F1A2  D00D               	goto	l13406
 12940  01F1A4  D7C9               	goto	l13392
 12941  01F1A6                     l13398:
 12942                           
 12943                           ;doprnt.c: 635: prec = 0;
 12944  01F1A6  0E00               	movlw	0
 12945  01F1A8  0101               	movlb	1	; () banked
 12946  01F1AA  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 12947  01F1AC  0E00               	movlw	0
 12948  01F1AE  0101               	movlb	1	; () banked
 12949  01F1B0  6F79               	movwf	sprintf@prec& (0+255),b
 12950                           
 12951                           ; BSR set to: 1
 12952                           ;doprnt.c: 637: flag |= 0x1000;
 12953  01F1B2  0101               	movlb	1	; () banked
 12954  01F1B4  8971               	bsf	(sprintf@flag+1)& (0+255),4,b
 12955  01F1B6  D003               	goto	l13406
 12956  01F1B8                     l13402:
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;doprnt.c: 672: flag |= 0x400;
 12960  01F1B8  0101               	movlb	1	; () banked
 12961  01F1BA  8571               	bsf	(sprintf@flag+1)& (0+255),2,b
 12962                           
 12963                           ;doprnt.c: 673: break;
 12964  01F1BC  D01A               	goto	l13408
 12965  01F1BE                     l13406:
 12966  01F1BE  0101               	movlb	1	; () banked
 12967  01F1C0  C14A  FFF6         	movff	sprintf@f,tblptrl
 12968  01F1C4  0101               	movlb	1	; () banked
 12969  01F1C6  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 12970  01F1CA  0101               	movlb	1	; () banked
 12971  01F1CC  4B4A               	infsnz	sprintf@f& (0+255),f,b
 12972  01F1CE  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 12973  01F1D0                     	if	0	;tblptru may be non-zero
 12974  01F1D0                     	endif
 12975  01F1D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12976  01F1D0  0E00               	movlw	low (__mediumconst shr (0+16))
 12977  01F1D2  6EF8               	movwf	tblptru,c
 12978  01F1D4                     	endif
 12979  01F1D4  0008               	tblrd		*
 12980  01F1D6  0101               	movlb	1	; () banked
 12981  01F1D8  CFF5 F17B          	movff	tablat,sprintf@c
 12982  01F1DC  0101               	movlb	1	; () banked
 12983  01F1DE  517B               	movf	sprintf@c& (0+255),w,b
 12984                           
 12985                           ; Switch size 1, requested type "space"
 12986                           ; Number of cases is 2, Range of values is 0 to 102
 12987                           ; switch strategies available:
 12988                           ; Name         Instructions Cycles
 12989                           ; simple_byte            7     4 (average)
 12990                           ;	Chosen strategy is simple_byte
 12991  01F1E0  0A00               	xorlw	0	; case 0
 12992  01F1E2  B4D8               	btfsc	status,2,c
 12993  01F1E4  EFB1  F0FD         	goto	l13642
 12994  01F1E8  0A66               	xorlw	102	; case 102
 12995  01F1EA  B4D8               	btfsc	status,2,c
 12996  01F1EC  D7E5               	goto	l13402
 12997  01F1EE  EF9E  F0FD         	goto	l13640
 12998  01F1F2                     l13408:
 12999                           
 13000                           ; BSR set to: 1
 13001                           ;doprnt.c: 834: if(flag & (0x700)) {
 13002  01F1F2  0E07               	movlw	7
 13003  01F1F4  0101               	movlb	1	; () banked
 13004  01F1F6  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 13005  01F1F8  B4D8               	btfsc	status,2,c
 13006  01F1FA  D3D2               	goto	l13588
 13007                           
 13008                           ; BSR set to: 1
 13009                           ;doprnt.c: 836: if(flag & 0x1000)
 13010  01F1FC  0101               	movlb	1	; () banked
 13011  01F1FE  A971               	btfss	(sprintf@flag+1)& (0+255),4,b
 13012  01F200  D006               	goto	l13414
 13013                           
 13014                           ; BSR set to: 1
 13015                           ;doprnt.c: 838: prec = 6;
 13016  01F202  0E00               	movlw	0
 13017  01F204  0101               	movlb	1	; () banked
 13018  01F206  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 13019  01F208  0E06               	movlw	6
 13020  01F20A  0101               	movlb	1	; () banked
 13021  01F20C  6F79               	movwf	sprintf@prec& (0+255),b
 13022  01F20E                     l13414:
 13023                           
 13024                           ; BSR set to: 1
 13025                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 13026  01F20E  C15C  FFD9         	movff	sprintf@ap,fsr2l
 13027  01F212  C15D  FFDA         	movff	sprintf@ap+1,fsr2h
 13028  01F216  0101               	movlb	1	; () banked
 13029  01F218  CFDE F176          	movff	postinc2,sprintf@fval
 13030  01F21C  0101               	movlb	1	; () banked
 13031  01F21E  CFDE F177          	movff	postinc2,sprintf@fval+1
 13032  01F222  0101               	movlb	1	; () banked
 13033  01F224  CFDD F178          	movff	postdec2,sprintf@fval+2
 13034                           
 13035                           ; BSR set to: 1
 13036  01F228  0E03               	movlw	3
 13037  01F22A  0101               	movlb	1	; () banked
 13038  01F22C  275C               	addwf	sprintf@ap& (0+255),f,b
 13039  01F22E  0E00               	movlw	0
 13040  01F230  0101               	movlb	1	; () banked
 13041  01F232  235D               	addwfc	(sprintf@ap+1)& (0+255),f,b
 13042                           
 13043                           ; BSR set to: 1
 13044                           ;doprnt.c: 840: if(fval < 0.0) {
 13045  01F234  0101               	movlb	1	; () banked
 13046  01F236  5178               	movf	(sprintf@fval+2)& (0+255),w,b
 13047  01F238  0A80               	xorlw	128
 13048  01F23A  0F80               	addlw	128
 13049  01F23C  E107               	bnz	u15325
 13050  01F23E  0E00               	movlw	0
 13051  01F240  0101               	movlb	1	; () banked
 13052  01F242  5D77               	subwf	(sprintf@fval+1)& (0+255),w,b
 13053  01F244  E103               	bnz	u15325
 13054  01F246  0E00               	movlw	0
 13055  01F248  0101               	movlb	1	; () banked
 13056  01F24A  5D76               	subwf	sprintf@fval& (0+255),w,b
 13057  01F24C                     u15325:
 13058  01F24C  B0D8               	btfsc	status,0,c
 13059  01F24E  D011               	goto	l13424
 13060                           
 13061                           ; BSR set to: 1
 13062                           ;doprnt.c: 841: fval = -fval;
 13063  01F250  C176  F100         	movff	sprintf@fval,___ftneg@f1
 13064  01F254  C177  F101         	movff	sprintf@fval+1,___ftneg@f1+1
 13065  01F258  C178  F102         	movff	sprintf@fval+2,___ftneg@f1+2
 13066  01F25C  EC79  F0DA         	call	___ftneg	;wreg free
 13067  01F260  C100  F176         	movff	?___ftneg,sprintf@fval
 13068  01F264  C101  F177         	movff	?___ftneg+1,sprintf@fval+1
 13069  01F268  C102  F178         	movff	?___ftneg+2,sprintf@fval+2
 13070                           
 13071                           ;doprnt.c: 842: flag |= 0x03;
 13072  01F26C  0E03               	movlw	3
 13073  01F26E  0101               	movlb	1	; () banked
 13074  01F270  1370               	iorwf	sprintf@flag& (0+255),f,b
 13075  01F272                     l13424:
 13076                           
 13077                           ; BSR set to: 1
 13078                           ;doprnt.c: 843: }
 13079                           ;doprnt.c: 844: exp = 0;
 13080  01F272  0E00               	movlw	0
 13081  01F274  0101               	movlb	1	; () banked
 13082  01F276  6F75               	movwf	(sprintf@exp+1)& (0+255),b
 13083  01F278  0E00               	movlw	0
 13084  01F27A  0101               	movlb	1	; () banked
 13085  01F27C  6F74               	movwf	sprintf@exp& (0+255),b
 13086                           
 13087                           ; BSR set to: 1
 13088                           ;doprnt.c: 845: if( fval!=0) {
 13089  01F27E  0E7F               	movlw	127
 13090  01F280  0101               	movlb	1	; () banked
 13091  01F282  1578               	andwf	(sprintf@fval+2)& (0+255),w,b
 13092  01F284  0101               	movlb	1	; () banked
 13093  01F286  1177               	iorwf	(sprintf@fval+1)& (0+255),w,b
 13094  01F288  0101               	movlb	1	; () banked
 13095  01F28A  1176               	iorwf	sprintf@fval& (0+255),w,b
 13096  01F28C  B4D8               	btfsc	status,2,c
 13097  01F28E  D0AA               	goto	l13452
 13098                           
 13099                           ; BSR set to: 1
 13100                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 13101  01F290  0E82               	movlw	130
 13102  01F292  0101               	movlb	1	; () banked
 13103  01F294  6F4F               	movwf	??_sprintf& (0+255),b
 13104  01F296  0EFF               	movlw	255
 13105  01F298  6F50               	movwf	(??_sprintf+1)& (0+255),b
 13106  01F29A  0101               	movlb	1	; () banked
 13107  01F29C  C176  F151         	movff	sprintf@fval,??_sprintf+2
 13108  01F2A0  0101               	movlb	1	; () banked
 13109  01F2A2  C177  F152         	movff	sprintf@fval+1,??_sprintf+3
 13110  01F2A6  0101               	movlb	1	; () banked
 13111  01F2A8  C178  F153         	movff	sprintf@fval+2,??_sprintf+4
 13112  01F2AC  0101               	movlb	1	; () banked
 13113  01F2AE  C179  F154         	movff	sprintf@fval+3,??_sprintf+5
 13114  01F2B2  0E10               	movlw	16
 13115  01F2B4  D006               	goto	u15340
 13116  01F2B6                     u15345:
 13117  01F2B6  0101               	movlb	1	; () banked
 13118  01F2B8  90D8               	bcf	status,0,c
 13119  01F2BA  3354               	rrcf	(??_sprintf+5)& (0+255),f,b
 13120  01F2BC  3353               	rrcf	(??_sprintf+4)& (0+255),f,b
 13121  01F2BE  3352               	rrcf	(??_sprintf+3)& (0+255),f,b
 13122  01F2C0  3351               	rrcf	(??_sprintf+2)& (0+255),f,b
 13123  01F2C2                     u15340:
 13124  01F2C2  2EE8               	decfsz	wreg,f,c
 13125  01F2C4  D7F8               	goto	u15345
 13126  01F2C6  0101               	movlb	1	; () banked
 13127  01F2C8  5151               	movf	(??_sprintf+2)& (0+255),w,b
 13128  01F2CA  0101               	movlb	1	; () banked
 13129  01F2CC  254F               	addwf	??_sprintf& (0+255),w,b
 13130  01F2CE  0101               	movlb	1	; () banked
 13131  01F2D0  6F74               	movwf	sprintf@exp& (0+255),b
 13132  01F2D2  0E00               	movlw	0
 13133  01F2D4  0101               	movlb	1	; () banked
 13134  01F2D6  2150               	addwfc	(??_sprintf+1)& (0+255),w,b
 13135  01F2D8  0101               	movlb	1	; () banked
 13136  01F2DA  6F75               	movwf	(sprintf@exp+1)& (0+255),b
 13137                           
 13138                           ; BSR set to: 1
 13139                           ;doprnt.c: 847: exp--;
 13140  01F2DC  0101               	movlb	1	; () banked
 13141  01F2DE  0774               	decf	sprintf@exp& (0+255),f,b
 13142  01F2E0  A0D8               	btfss	status,0,c
 13143  01F2E2  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;doprnt.c: 848: exp *= 3;
 13147  01F2E4  C174  F10E         	movff	sprintf@exp,___wmul@multiplier
 13148  01F2E8  C175  F10F         	movff	sprintf@exp+1,___wmul@multiplier+1
 13149  01F2EC  0E00               	movlw	0
 13150  01F2EE  0101               	movlb	1	; () banked
 13151  01F2F0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13152  01F2F2  0E03               	movlw	3
 13153  01F2F4  0101               	movlb	1	; () banked
 13154  01F2F6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 13155  01F2F8  ECF5  F0D9         	call	___wmul	;wreg free
 13156  01F2FC  0101               	movlb	1	; () banked
 13157  01F2FE  C10E  F174         	movff	?___wmul,sprintf@exp
 13158  01F302  0101               	movlb	1	; () banked
 13159  01F304  C10F  F175         	movff	?___wmul+1,sprintf@exp+1
 13160                           
 13161                           ; BSR set to: 1
 13162                           ;doprnt.c: 849: exp /= 10;
 13163  01F308  C174  F106         	movff	sprintf@exp,___awdiv@dividend
 13164  01F30C  C175  F107         	movff	sprintf@exp+1,___awdiv@dividend+1
 13165  01F310  0E00               	movlw	0
 13166  01F312  0101               	movlb	1	; () banked
 13167  01F314  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 13168  01F316  0E0A               	movlw	10
 13169  01F318  0101               	movlb	1	; () banked
 13170  01F31A  6F08               	movwf	___awdiv@divisor& (0+255),b
 13171  01F31C  ECCF  F0C9         	call	___awdiv	;wreg free
 13172  01F320  0101               	movlb	1	; () banked
 13173  01F322  C106  F174         	movff	?___awdiv,sprintf@exp
 13174  01F326  0101               	movlb	1	; () banked
 13175  01F328  C107  F175         	movff	?___awdiv+1,sprintf@exp+1
 13176                           
 13177                           ; BSR set to: 1
 13178                           ;doprnt.c: 850: if(exp < 0)
 13179  01F32C  0101               	movlb	1	; () banked
 13180  01F32E  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 13181  01F330  0A80               	xorlw	128
 13182  01F332  6EF3               	movwf	prodl,c
 13183  01F334  0E80               	movlw	128
 13184  01F336  5CF3               	subwf	prodl,w,c
 13185  01F338  0E00               	movlw	0
 13186  01F33A  B4D8               	btfsc	status,2,c
 13187  01F33C  5D74               	subwf	sprintf@exp& (0+255),w,b
 13188  01F33E  B0D8               	btfsc	status,0,c
 13189  01F340  D004               	goto	l13440
 13190                           
 13191                           ; BSR set to: 1
 13192                           ;doprnt.c: 851: exp--;
 13193  01F342  0101               	movlb	1	; () banked
 13194  01F344  0774               	decf	sprintf@exp& (0+255),f,b
 13195  01F346  A0D8               	btfss	status,0,c
 13196  01F348  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 13197  01F34A                     l13440:
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;doprnt.c: 855: integ = scale(-exp);
 13201  01F34A  0101               	movlb	1	; () banked
 13202  01F34C  5174               	movf	sprintf@exp& (0+255),w,b
 13203  01F34E  0800               	sublw	0
 13204  01F350  EC2F  F09E         	call	_scale
 13205  01F354  C123  F168         	movff	?_scale,sprintf@integ
 13206  01F358  C124  F169         	movff	?_scale+1,sprintf@integ+1
 13207  01F35C  C125  F16A         	movff	?_scale+2,sprintf@integ+2
 13208                           
 13209                           ;doprnt.c: 856: integ *= fval;
 13210  01F360  C168  F114         	movff	sprintf@integ,___ftmul@f1
 13211  01F364  C169  F115         	movff	sprintf@integ+1,___ftmul@f1+1
 13212  01F368  C16A  F116         	movff	sprintf@integ+2,___ftmul@f1+2
 13213  01F36C  C176  F117         	movff	sprintf@fval,___ftmul@f2
 13214  01F370  C177  F118         	movff	sprintf@fval+1,___ftmul@f2+1
 13215  01F374  C178  F119         	movff	sprintf@fval+2,___ftmul@f2+2
 13216  01F378  ECAF  F0BB         	call	___ftmul	;wreg free
 13217  01F37C  C114  F168         	movff	?___ftmul,sprintf@integ
 13218  01F380  C115  F169         	movff	?___ftmul+1,sprintf@integ+1
 13219  01F384  C116  F16A         	movff	?___ftmul+2,sprintf@integ+2
 13220                           
 13221                           ;doprnt.c: 857: if(integ < 1.0)
 13222  01F388  C168  F100         	movff	sprintf@integ,___ftge@ff1
 13223  01F38C  C169  F101         	movff	sprintf@integ+1,___ftge@ff1+1
 13224  01F390  C16A  F102         	movff	sprintf@integ+2,___ftge@ff1+2
 13225  01F394  0E00               	movlw	0
 13226  01F396  0101               	movlb	1	; () banked
 13227  01F398  6F03               	movwf	___ftge@ff2& (0+255),b
 13228  01F39A  0E80               	movlw	128
 13229  01F39C  0101               	movlb	1	; () banked
 13230  01F39E  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 13231  01F3A0  0E3F               	movlw	63
 13232  01F3A2  0101               	movlb	1	; () banked
 13233  01F3A4  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 13234  01F3A6  EC5D  F0CC         	call	___ftge	;wreg free
 13235  01F3AA  B0D8               	btfsc	status,0,c
 13236  01F3AC  D005               	goto	l13448
 13237                           
 13238                           ;doprnt.c: 858: exp--;
 13239  01F3AE  0101               	movlb	1	; () banked
 13240  01F3B0  0774               	decf	sprintf@exp& (0+255),f,b
 13241  01F3B2  A0D8               	btfss	status,0,c
 13242  01F3B4  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 13243  01F3B6  D016               	goto	l13452
 13244  01F3B8                     l13448:
 13245                           
 13246                           ;doprnt.c: 859: else if(integ >= 10.0)
 13247  01F3B8  C168  F100         	movff	sprintf@integ,___ftge@ff1
 13248  01F3BC  C169  F101         	movff	sprintf@integ+1,___ftge@ff1+1
 13249  01F3C0  C16A  F102         	movff	sprintf@integ+2,___ftge@ff1+2
 13250  01F3C4  0E00               	movlw	0
 13251  01F3C6  0101               	movlb	1	; () banked
 13252  01F3C8  6F03               	movwf	___ftge@ff2& (0+255),b
 13253  01F3CA  0E20               	movlw	32
 13254  01F3CC  0101               	movlb	1	; () banked
 13255  01F3CE  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 13256  01F3D0  0E41               	movlw	65
 13257  01F3D2  0101               	movlb	1	; () banked
 13258  01F3D4  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 13259  01F3D6  EC5D  F0CC         	call	___ftge	;wreg free
 13260  01F3DA  A0D8               	btfss	status,0,c
 13261  01F3DC  D003               	goto	l13452
 13262                           
 13263                           ;doprnt.c: 860: exp++;
 13264  01F3DE  0101               	movlb	1	; () banked
 13265  01F3E0  4B74               	infsnz	sprintf@exp& (0+255),f,b
 13266  01F3E2  2B75               	incf	(sprintf@exp+1)& (0+255),f,b
 13267  01F3E4                     l13452:
 13268                           
 13269                           ;doprnt.c: 861: }
 13270                           ;doprnt.c: 1121: if(prec <= 12)
 13271  01F3E4  0101               	movlb	1	; () banked
 13272  01F3E6  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 13273  01F3E8  0A80               	xorlw	128
 13274  01F3EA  6EF3               	movwf	prodl,c
 13275  01F3EC  0E80               	movlw	128
 13276  01F3EE  5CF3               	subwf	prodl,w,c
 13277  01F3F0  0E0D               	movlw	13
 13278  01F3F2  B4D8               	btfsc	status,2,c
 13279  01F3F4  5D79               	subwf	sprintf@prec& (0+255),w,b
 13280  01F3F6  B0D8               	btfsc	status,0,c
 13281  01F3F8  D018               	goto	l13456
 13282                           
 13283                           ; BSR set to: 1
 13284                           ;doprnt.c: 1122: fval += fround(prec);
 13285  01F3FA  C176  F12D         	movff	sprintf@fval,___ftadd@f1
 13286  01F3FE  C177  F12E         	movff	sprintf@fval+1,___ftadd@f1+1
 13287  01F402  C178  F12F         	movff	sprintf@fval+2,___ftadd@f1+2
 13288  01F406  0101               	movlb	1	; () banked
 13289  01F408  5179               	movf	sprintf@prec& (0+255),w,b
 13290  01F40A  EC8F  F0A3         	call	_fround
 13291  01F40E  C123  F130         	movff	?_fround,___ftadd@f2
 13292  01F412  C124  F131         	movff	?_fround+1,___ftadd@f2+1
 13293  01F416  C125  F132         	movff	?_fround+2,___ftadd@f2+2
 13294  01F41A  EC82  F0A6         	call	___ftadd	;wreg free
 13295  01F41E  C12D  F176         	movff	?___ftadd,sprintf@fval
 13296  01F422  C12E  F177         	movff	?___ftadd+1,sprintf@fval+1
 13297  01F426  C12F  F178         	movff	?___ftadd+2,sprintf@fval+2
 13298  01F42A                     l13456:
 13299                           
 13300                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 13301  01F42A  0101               	movlb	1	; () banked
 13302  01F42C  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 13303  01F42E  0A80               	xorlw	128
 13304  01F430  6EF3               	movwf	prodl,c
 13305  01F432  0E80               	movlw	128
 13306  01F434  5CF3               	subwf	prodl,w,c
 13307  01F436  0E0A               	movlw	10
 13308  01F438  B4D8               	btfsc	status,2,c
 13309  01F43A  5D74               	subwf	sprintf@exp& (0+255),w,b
 13310  01F43C  B0D8               	btfsc	status,0,c
 13311  01F43E  D029               	goto	l13464
 13312                           
 13313                           ; BSR set to: 1
 13314  01F440  0E7F               	movlw	127
 13315  01F442  0101               	movlb	1	; () banked
 13316  01F444  1578               	andwf	(sprintf@fval+2)& (0+255),w,b
 13317  01F446  0101               	movlb	1	; () banked
 13318  01F448  1177               	iorwf	(sprintf@fval+1)& (0+255),w,b
 13319  01F44A  0101               	movlb	1	; () banked
 13320  01F44C  1176               	iorwf	sprintf@fval& (0+255),w,b
 13321  01F44E  B4D8               	btfsc	status,2,c
 13322  01F450  D06F               	goto	l13480
 13323                           
 13324                           ; BSR set to: 1
 13325  01F452  C176  F139         	movff	sprintf@fval,___fttol@f1
 13326  01F456  C177  F13A         	movff	sprintf@fval+1,___fttol@f1+1
 13327  01F45A  C178  F13B         	movff	sprintf@fval+2,___fttol@f1+2
 13328  01F45E  ECF1  F0BA         	call	___fttol	;wreg free
 13329  01F462  C139  F14F         	movff	?___fttol,??_sprintf
 13330  01F466  C13A  F150         	movff	?___fttol+1,??_sprintf+1
 13331  01F46A  C13B  F151         	movff	?___fttol+2,??_sprintf+2
 13332  01F46E  C13C  F152         	movff	?___fttol+3,??_sprintf+3
 13333  01F472  0101               	movlb	1	; () banked
 13334  01F474  5152               	movf	(??_sprintf+3)& (0+255),w,b
 13335  01F476  114F               	iorwf	??_sprintf& (0+255),w,b
 13336  01F478  1150               	iorwf	(??_sprintf+1)& (0+255),w,b
 13337  01F47A  1151               	iorwf	(??_sprintf+2)& (0+255),w,b
 13338  01F47C  A4D8               	btfss	status,2,c
 13339  01F47E  D058               	goto	l13480
 13340                           
 13341                           ; BSR set to: 1
 13342  01F480  0101               	movlb	1	; () banked
 13343  01F482  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 13344  01F484  0A80               	xorlw	128
 13345  01F486  0F80               	addlw	-128
 13346  01F488  0E02               	movlw	2
 13347  01F48A  B4D8               	btfsc	status,2,c
 13348  01F48C  5D74               	subwf	sprintf@exp& (0+255),w,b
 13349  01F48E  A0D8               	btfss	status,0,c
 13350  01F490  D04F               	goto	l13480
 13351  01F492                     l13464:
 13352                           
 13353                           ; BSR set to: 1
 13354                           ;doprnt.c: 1129: if(integ < 4.294967296){
 13355  01F492  C168  F100         	movff	sprintf@integ,___ftge@ff1
 13356  01F496  C169  F101         	movff	sprintf@integ+1,___ftge@ff1+1
 13357  01F49A  C16A  F102         	movff	sprintf@integ+2,___ftge@ff1+2
 13358  01F49E  0E70               	movlw	112
 13359  01F4A0  0101               	movlb	1	; () banked
 13360  01F4A2  6F03               	movwf	___ftge@ff2& (0+255),b
 13361  01F4A4  0E89               	movlw	137
 13362  01F4A6  0101               	movlb	1	; () banked
 13363  01F4A8  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 13364  01F4AA  0E40               	movlw	64
 13365  01F4AC  0101               	movlb	1	; () banked
 13366  01F4AE  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 13367  01F4B0  EC5D  F0CC         	call	___ftge	;wreg free
 13368  01F4B4  B0D8               	btfsc	status,0,c
 13369  01F4B6  D003               	goto	l13468
 13370                           
 13371                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 13372  01F4B8  0101               	movlb	1	; () banked
 13373  01F4BA  0EF7               	movlw	247
 13374  01F4BC  D002               	goto	L8
 13375  01F4BE                     l13468:
 13376                           
 13377                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 13378  01F4BE  0101               	movlb	1	; () banked
 13379  01F4C0  0EF8               	movlw	248
 13380  01F4C2                     L8:
 13381  01F4C2  0101               	movlb	1	; () banked
 13382  01F4C4  2774               	addwf	sprintf@exp& (0+255),f,b
 13383  01F4C6  0EFF               	movlw	255
 13384  01F4C8  0101               	movlb	1	; () banked
 13385  01F4CA  2375               	addwfc	(sprintf@exp+1)& (0+255),f,b
 13386                           
 13387                           ; BSR set to: 1
 13388                           ;doprnt.c: 1133: }
 13389                           ;doprnt.c: 1134: integ = scale(exp);
 13390                           
 13391                           ; BSR set to: 1
 13392  01F4CC  0101               	movlb	1	; () banked
 13393  01F4CE  5174               	movf	sprintf@exp& (0+255),w,b
 13394  01F4D0  EC2F  F09E         	call	_scale
 13395  01F4D4  C123  F168         	movff	?_scale,sprintf@integ
 13396  01F4D8  C124  F169         	movff	?_scale+1,sprintf@integ+1
 13397  01F4DC  C125  F16A         	movff	?_scale+2,sprintf@integ+2
 13398                           
 13399                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 13400  01F4E0  C176  F100         	movff	sprintf@fval,__tdiv_to_l_@f1
 13401  01F4E4  C177  F101         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 13402  01F4E8  C178  F102         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 13403  01F4EC  C168  F103         	movff	sprintf@integ,__tdiv_to_l_@f2
 13404  01F4F0  C169  F104         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
 13405  01F4F4  C16A  F105         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
 13406  01F4F8  EC8D  F0B1         	call	__tdiv_to_l_	;wreg free
 13407  01F4FC  C100  F158         	movff	?__tdiv_to_l_,_sprintf$9349
 13408  01F500  C101  F159         	movff	?__tdiv_to_l_+1,_sprintf$9349+1
 13409  01F504  C102  F15A         	movff	?__tdiv_to_l_+2,_sprintf$9349+2
 13410  01F508  C103  F15B         	movff	?__tdiv_to_l_+3,_sprintf$9349+3
 13411  01F50C  C158  F16B         	movff	_sprintf$9349,sprintf@_val
 13412  01F510  C159  F16C         	movff	_sprintf$9349+1,sprintf@_val+1
 13413  01F514  C15A  F16D         	movff	_sprintf$9349+2,sprintf@_val+2
 13414  01F518  C15B  F16E         	movff	_sprintf$9349+3,sprintf@_val+3
 13415                           
 13416                           ;doprnt.c: 1138: fval = 0.0;
 13417  01F51C  0E00               	movlw	0
 13418  01F51E  0101               	movlb	1	; () banked
 13419  01F520  6F76               	movwf	sprintf@fval& (0+255),b
 13420  01F522  0E00               	movlw	0
 13421  01F524  0101               	movlb	1	; () banked
 13422  01F526  6F77               	movwf	(sprintf@fval+1)& (0+255),b
 13423  01F528  0E00               	movlw	0
 13424  01F52A  0101               	movlb	1	; () banked
 13425  01F52C  6F78               	movwf	(sprintf@fval+2)& (0+255),b
 13426                           
 13427                           ;doprnt.c: 1139: } else {
 13428  01F52E  D034               	goto	l13484
 13429  01F530                     l13480:
 13430                           
 13431                           ; BSR set to: 1
 13432                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 13433  01F530  C176  F139         	movff	sprintf@fval,___fttol@f1
 13434  01F534  C177  F13A         	movff	sprintf@fval+1,___fttol@f1+1
 13435  01F538  C178  F13B         	movff	sprintf@fval+2,___fttol@f1+2
 13436  01F53C  ECF1  F0BA         	call	___fttol	;wreg free
 13437  01F540  C139  F16B         	movff	?___fttol,sprintf@_val
 13438  01F544  C13A  F16C         	movff	?___fttol+1,sprintf@_val+1
 13439  01F548  C13B  F16D         	movff	?___fttol+2,sprintf@_val+2
 13440  01F54C  C13C  F16E         	movff	?___fttol+3,sprintf@_val+3
 13441                           
 13442                           ;doprnt.c: 1141: fval -= (double)_val._val;
 13443  01F550  C176  F139         	movff	sprintf@fval,___ftsub@f1
 13444  01F554  C177  F13A         	movff	sprintf@fval+1,___ftsub@f1+1
 13445  01F558  C178  F13B         	movff	sprintf@fval+2,___ftsub@f1+2
 13446  01F55C  C16B  F108         	movff	sprintf@_val,___lltoft@c
 13447  01F560  C16C  F109         	movff	sprintf@_val+1,___lltoft@c+1
 13448  01F564  C16D  F10A         	movff	sprintf@_val+2,___lltoft@c+2
 13449  01F568  C16E  F10B         	movff	sprintf@_val+3,___lltoft@c+3
 13450  01F56C  EC2E  F0D5         	call	___lltoft	;wreg free
 13451  01F570  C108  F13C         	movff	?___lltoft,___ftsub@f2
 13452  01F574  C109  F13D         	movff	?___lltoft+1,___ftsub@f2+1
 13453  01F578  C10A  F13E         	movff	?___lltoft+2,___ftsub@f2+2
 13454  01F57C  EC82  F0D9         	call	___ftsub	;wreg free
 13455  01F580  C139  F176         	movff	?___ftsub,sprintf@fval
 13456  01F584  C13A  F177         	movff	?___ftsub+1,sprintf@fval+1
 13457  01F588  C13B  F178         	movff	?___ftsub+2,sprintf@fval+2
 13458                           
 13459                           ;doprnt.c: 1142: exp = 0;
 13460  01F58C  0E00               	movlw	0
 13461  01F58E  0101               	movlb	1	; () banked
 13462  01F590  6F75               	movwf	(sprintf@exp+1)& (0+255),b
 13463  01F592  0E00               	movlw	0
 13464  01F594  0101               	movlb	1	; () banked
 13465  01F596  6F74               	movwf	sprintf@exp& (0+255),b
 13466  01F598                     l13484:
 13467                           
 13468                           ; BSR set to: 1
 13469                           ;doprnt.c: 1143: }
 13470                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 13471  01F598  0E01               	movlw	1
 13472  01F59A  0101               	movlb	1	; () banked
 13473  01F59C  6F7B               	movwf	sprintf@c& (0+255),b
 13474  01F59E                     
 13475                           ; BSR set to: 1
 13476  01F59E  0101               	movlb	1	; () banked
 13477  01F5A0  517B               	movf	sprintf@c& (0+255),w,b
 13478  01F5A2  0A0A               	xorlw	10
 13479  01F5A4  B4D8               	btfsc	status,2,c
 13480  01F5A6  D021               	goto	l13498
 13481                           
 13482                           ; BSR set to: 1
 13483                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 13484                           
 13485                           ; BSR set to: 1
 13486                           
 13487                           ; BSR set to: 1
 13488  01F5A8  0101               	movlb	1	; () banked
 13489  01F5AA  517B               	movf	sprintf@c& (0+255),w,b
 13490  01F5AC  0D04               	mullw	4
 13491  01F5AE  0E95               	movlw	low _dpowers
 13492  01F5B0  24F3               	addwf	prodl,w,c
 13493  01F5B2  6EF6               	movwf	tblptrl,c
 13494  01F5B4  0EFE               	movlw	high _dpowers
 13495  01F5B6  20F4               	addwfc	prodh,w,c
 13496  01F5B8  6EF7               	movwf	tblptrh,c
 13497  01F5BA                     	if	1	;There are 3 active tblptr bytes
 13498  01F5BA  6AF8               	clrf	tblptru,c
 13499  01F5BC  0E00               	movlw	low (__mediumconst shr (0+16))
 13500  01F5BE  22F8               	addwfc	tblptru,f,c
 13501  01F5C0                     	endif
 13502  01F5C0  0009               	tblrd		*+
 13503  01F5C2  50F5               	movf	tablat,w,c
 13504  01F5C4  0101               	movlb	1	; () banked
 13505  01F5C6  5D6B               	subwf	sprintf@_val& (0+255),w,b
 13506  01F5C8  0009               	tblrd		*+
 13507  01F5CA  50F5               	movf	tablat,w,c
 13508  01F5CC  0101               	movlb	1	; () banked
 13509  01F5CE  596C               	subwfb	(sprintf@_val+1)& (0+255),w,b
 13510  01F5D0  0009               	tblrd		*+
 13511  01F5D2  50F5               	movf	tablat,w,c
 13512  01F5D4  0101               	movlb	1	; () banked
 13513  01F5D6  596D               	subwfb	(sprintf@_val+2)& (0+255),w,b
 13514  01F5D8  0009               	tblrd		*+
 13515  01F5DA  50F5               	movf	tablat,w,c
 13516  01F5DC  0101               	movlb	1	; () banked
 13517  01F5DE  596E               	subwfb	(sprintf@_val+3)& (0+255),w,b
 13518  01F5E0  A0D8               	btfss	status,0,c
 13519  01F5E2  D003               	goto	l13498
 13520                           
 13521                           ; BSR set to: 1
 13522                           
 13523                           ; BSR set to: 1
 13524                           
 13525                           ; BSR set to: 1
 13526                           ;doprnt.c: 1147: break;
 13527  01F5E4  0101               	movlb	1	; () banked
 13528  01F5E6  2B7B               	incf	sprintf@c& (0+255),f,b
 13529  01F5E8  D7DA               	goto	L9
 13530  01F5EA                     l13498:
 13531                           
 13532                           ; BSR set to: 1
 13533                           ;doprnt.c: 1151: width -= prec + c + exp;
 13534  01F5EA  0101               	movlb	1	; () banked
 13535  01F5EC  C17B  F14F         	movff	sprintf@c,??_sprintf
 13536  01F5F0  0101               	movlb	1	; () banked
 13537  01F5F2  6B50               	clrf	(??_sprintf+1)& (0+255),b
 13538  01F5F4  BF4F               	btfsc	??_sprintf& (0+255),7,b
 13539  01F5F6  0750               	decf	(??_sprintf+1)& (0+255),f,b
 13540  01F5F8  0101               	movlb	1	; () banked
 13541  01F5FA  5179               	movf	sprintf@prec& (0+255),w,b
 13542  01F5FC  0101               	movlb	1	; () banked
 13543  01F5FE  274F               	addwf	??_sprintf& (0+255),f,b
 13544  01F600  0101               	movlb	1	; () banked
 13545  01F602  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 13546  01F604  0101               	movlb	1	; () banked
 13547  01F606  2350               	addwfc	(??_sprintf+1)& (0+255),f,b
 13548  01F608  0101               	movlb	1	; () banked
 13549  01F60A  5174               	movf	sprintf@exp& (0+255),w,b
 13550  01F60C  0101               	movlb	1	; () banked
 13551  01F60E  274F               	addwf	??_sprintf& (0+255),f,b
 13552  01F610  0101               	movlb	1	; () banked
 13553  01F612  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 13554  01F614  0101               	movlb	1	; () banked
 13555  01F616  2350               	addwfc	(??_sprintf+1)& (0+255),f,b
 13556  01F618  0101               	movlb	1	; () banked
 13557  01F61A  514F               	movf	??_sprintf& (0+255),w,b
 13558  01F61C  0101               	movlb	1	; () banked
 13559  01F61E  5F72               	subwf	sprintf@width& (0+255),f,b
 13560  01F620  0101               	movlb	1	; () banked
 13561  01F622  5150               	movf	(??_sprintf+1)& (0+255),w,b
 13562  01F624  0101               	movlb	1	; () banked
 13563  01F626  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
 13564                           
 13565                           ;doprnt.c: 1152: if(
 13566                           ;doprnt.c: 1156: prec)
 13567  01F628  0101               	movlb	1	; () banked
 13568  01F62A  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 13569  01F62C  1179               	iorwf	sprintf@prec& (0+255),w,b
 13570  01F62E  B4D8               	btfsc	status,2,c
 13571  01F630  D004               	goto	l13502
 13572                           
 13573                           ; BSR set to: 1
 13574                           ;doprnt.c: 1157: width--;
 13575  01F632  0101               	movlb	1	; () banked
 13576  01F634  0772               	decf	sprintf@width& (0+255),f,b
 13577  01F636  A0D8               	btfss	status,0,c
 13578  01F638  0773               	decf	(sprintf@width+1)& (0+255),f,b
 13579  01F63A                     l13502:
 13580                           
 13581                           ; BSR set to: 1
 13582                           ;doprnt.c: 1158: if(flag & 0x03)
 13583  01F63A  0E03               	movlw	3
 13584  01F63C  0101               	movlb	1	; () banked
 13585  01F63E  1570               	andwf	sprintf@flag& (0+255),w,b
 13586  01F640  0101               	movlb	1	; () banked
 13587  01F642  6F4F               	movwf	??_sprintf& (0+255),b
 13588  01F644  0E00               	movlw	0
 13589  01F646  0101               	movlb	1	; () banked
 13590  01F648  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 13591  01F64A  0101               	movlb	1	; () banked
 13592  01F64C  6F50               	movwf	(??_sprintf+1)& (0+255),b
 13593  01F64E  0101               	movlb	1	; () banked
 13594  01F650  5150               	movf	(??_sprintf+1)& (0+255),w,b
 13595  01F652  114F               	iorwf	??_sprintf& (0+255),w,b
 13596  01F654  B4D8               	btfsc	status,2,c
 13597  01F656  D011               	goto	l13514
 13598  01F658  D00C               	goto	L10
 13599  01F65A                     l13506:
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;doprnt.c: 1190: ((*sp++ = (' ')),(++ccnt));
 13603  01F65A  C148  FFD9         	movff	sprintf@sp,fsr2l
 13604  01F65E  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 13605  01F662  0E20               	movlw	32
 13606  01F664  6EDF               	movwf	indf2,c
 13607                           
 13608                           ; BSR set to: 1
 13609  01F666  0101               	movlb	1	; () banked
 13610  01F668  4B48               	infsnz	sprintf@sp& (0+255),f,b
 13611  01F66A  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 13612                           
 13613                           ; BSR set to: 1
 13614  01F66C  0101               	movlb	1	; () banked
 13615  01F66E  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 13616  01F670  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 13617  01F672                     L10:
 13618                           
 13619                           ; BSR set to: 1
 13620                           ;doprnt.c: 1191: width--;
 13621  01F672  0101               	movlb	1	; () banked
 13622  01F674  0772               	decf	sprintf@width& (0+255),f,b
 13623  01F676  A0D8               	btfss	status,0,c
 13624  01F678  0773               	decf	(sprintf@width+1)& (0+255),f,b
 13625  01F67A                     l13514:
 13626                           
 13627                           ; BSR set to: 1
 13628  01F67A  0101               	movlb	1	; () banked
 13629  01F67C  5173               	movf	(sprintf@width+1)& (0+255),w,b
 13630  01F67E  0A80               	xorlw	128
 13631  01F680  6EF3               	movwf	prodl,c
 13632  01F682  0E80               	movlw	128
 13633  01F684  5CF3               	subwf	prodl,w,c
 13634  01F686  0E01               	movlw	1
 13635  01F688  B4D8               	btfsc	status,2,c
 13636  01F68A  5D72               	subwf	sprintf@width& (0+255),w,b
 13637  01F68C  B0D8               	btfsc	status,0,c
 13638  01F68E  D7E5               	goto	l13506
 13639                           
 13640                           ; BSR set to: 1
 13641                           ;doprnt.c: 1192: }
 13642                           ;doprnt.c: 1197: if(flag & 0x03)
 13643                           
 13644                           ; BSR set to: 1
 13645  01F690  0E03               	movlw	3
 13646  01F692  0101               	movlb	1	; () banked
 13647  01F694  1570               	andwf	sprintf@flag& (0+255),w,b
 13648  01F696  0101               	movlb	1	; () banked
 13649  01F698  6F4F               	movwf	??_sprintf& (0+255),b
 13650  01F69A  0E00               	movlw	0
 13651  01F69C  0101               	movlb	1	; () banked
 13652  01F69E  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 13653  01F6A0  0101               	movlb	1	; () banked
 13654  01F6A2  6F50               	movwf	(??_sprintf+1)& (0+255),b
 13655  01F6A4  0101               	movlb	1	; () banked
 13656  01F6A6  5150               	movf	(??_sprintf+1)& (0+255),w,b
 13657  01F6A8  114F               	iorwf	??_sprintf& (0+255),w,b
 13658  01F6AA  B4D8               	btfsc	status,2,c
 13659  01F6AC  D060               	goto	l13534
 13660                           
 13661                           ; BSR set to: 1
 13662                           ;doprnt.c: 1199: ((*sp++ = ('-')),(++ccnt));
 13663  01F6AE  C148  FFD9         	movff	sprintf@sp,fsr2l
 13664  01F6B2  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 13665  01F6B6  0E2D               	movlw	45
 13666  01F6B8  D053               	goto	L11
 13667  01F6BA                     l13524:
 13668                           
 13669                           ; BSR set to: 1
 13670                           ;doprnt.c: 1209: {
 13671                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
 13672  01F6BA  C16B  F100         	movff	sprintf@_val,___lldiv@dividend
 13673  01F6BE  C16C  F101         	movff	sprintf@_val+1,___lldiv@dividend+1
 13674  01F6C2  C16D  F102         	movff	sprintf@_val+2,___lldiv@dividend+2
 13675  01F6C6  C16E  F103         	movff	sprintf@_val+3,___lldiv@dividend+3
 13676  01F6CA  0101               	movlb	1	; () banked
 13677  01F6CC  517B               	movf	sprintf@c& (0+255),w,b
 13678  01F6CE  0D04               	mullw	4
 13679  01F6D0  0E95               	movlw	low _dpowers
 13680  01F6D2  24F3               	addwf	prodl,w,c
 13681  01F6D4  6EF6               	movwf	tblptrl,c
 13682  01F6D6  0EFE               	movlw	high _dpowers
 13683  01F6D8  20F4               	addwfc	prodh,w,c
 13684  01F6DA  6EF7               	movwf	tblptrh,c
 13685  01F6DC                     	if	1	;There are 3 active tblptr bytes
 13686  01F6DC  6AF8               	clrf	tblptru,c
 13687  01F6DE  0E00               	movlw	low (__mediumconst shr (0+16))
 13688  01F6E0  22F8               	addwfc	tblptru,f,c
 13689  01F6E2                     	endif
 13690  01F6E2  0009               	tblrd		*+
 13691  01F6E4  0101               	movlb	1	; () banked
 13692  01F6E6  CFF5 F104          	movff	tablat,___lldiv@divisor
 13693  01F6EA  0009               	tblrd		*+
 13694  01F6EC  0101               	movlb	1	; () banked
 13695  01F6EE  CFF5 F105          	movff	tablat,___lldiv@divisor+1
 13696  01F6F2  0009               	tblrd		*+
 13697  01F6F4  0101               	movlb	1	; () banked
 13698  01F6F6  CFF5 F106          	movff	tablat,___lldiv@divisor+2
 13699  01F6FA  000A               	tblrd		*-
 13700  01F6FC  0101               	movlb	1	; () banked
 13701  01F6FE  CFF5 F107          	movff	tablat,___lldiv@divisor+3
 13702  01F702  ECF3  F0CB         	call	___lldiv	;wreg free
 13703  01F706  C100  F15E         	movff	?___lldiv,sprintf@vd
 13704  01F70A  C101  F15F         	movff	?___lldiv+1,sprintf@vd+1
 13705  01F70E  C102  F160         	movff	?___lldiv+2,sprintf@vd+2
 13706  01F712  C103  F161         	movff	?___lldiv+3,sprintf@vd+3
 13707                           
 13708                           ;doprnt.c: 1211: vd %= 10;
 13709  01F716  C15E  F100         	movff	sprintf@vd,___llmod@dividend
 13710  01F71A  C15F  F101         	movff	sprintf@vd+1,___llmod@dividend+1
 13711  01F71E  C160  F102         	movff	sprintf@vd+2,___llmod@dividend+2
 13712  01F722  C161  F103         	movff	sprintf@vd+3,___llmod@dividend+3
 13713  01F726  0E0A               	movlw	10
 13714  01F728  0101               	movlb	1	; () banked
 13715  01F72A  6F04               	movwf	___llmod@divisor& (0+255),b
 13716  01F72C  0E00               	movlw	0
 13717  01F72E  0101               	movlb	1	; () banked
 13718  01F730  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 13719  01F732  0E00               	movlw	0
 13720  01F734  0101               	movlb	1	; () banked
 13721  01F736  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 13722  01F738  0E00               	movlw	0
 13723  01F73A  0101               	movlb	1	; () banked
 13724  01F73C  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 13725  01F73E  EC37  F0D1         	call	___llmod	;wreg free
 13726  01F742  C100  F15E         	movff	?___llmod,sprintf@vd
 13727  01F746  C101  F15F         	movff	?___llmod+1,sprintf@vd+1
 13728  01F74A  C102  F160         	movff	?___llmod+2,sprintf@vd+2
 13729  01F74E  C103  F161         	movff	?___llmod+3,sprintf@vd+3
 13730                           
 13731                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)),(++ccnt));
 13732  01F752  0101               	movlb	1	; () banked
 13733  01F754  515E               	movf	sprintf@vd& (0+255),w,b
 13734  01F756  0F30               	addlw	48
 13735  01F758  C148  FFD9         	movff	sprintf@sp,fsr2l
 13736  01F75C  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 13737  01F760                     L11:
 13738  01F760  6EDF               	movwf	indf2,c
 13739                           
 13740                           ; BSR set to: 1
 13741  01F762  0101               	movlb	1	; () banked
 13742  01F764  4B48               	infsnz	sprintf@sp& (0+255),f,b
 13743  01F766  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 13744                           
 13745                           ; BSR set to: 1
 13746  01F768  0101               	movlb	1	; () banked
 13747  01F76A  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 13748  01F76C  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 13749  01F76E                     l13534:
 13750                           
 13751                           ; BSR set to: 1
 13752  01F76E  0101               	movlb	1	; () banked
 13753  01F770  077B               	decf	sprintf@c& (0+255),f,b
 13754  01F772  0101               	movlb	1	; () banked
 13755  01F774  297B               	incf	sprintf@c& (0+255),w,b
 13756  01F776  B4D8               	btfsc	status,2,c
 13757  01F778  D011               	goto	l13544
 13758  01F77A  D79F               	goto	l13524
 13759  01F77C                     l13536:
 13760                           
 13761                           ; BSR set to: 1
 13762                           ;doprnt.c: 1217: ((*sp++ = ('0')),(++ccnt));
 13763  01F77C  C148  FFD9         	movff	sprintf@sp,fsr2l
 13764  01F780  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 13765  01F784  0E30               	movlw	48
 13766  01F786  6EDF               	movwf	indf2,c
 13767                           
 13768                           ; BSR set to: 1
 13769  01F788  0101               	movlb	1	; () banked
 13770  01F78A  4B48               	infsnz	sprintf@sp& (0+255),f,b
 13771  01F78C  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 13772                           
 13773                           ; BSR set to: 1
 13774  01F78E  0101               	movlb	1	; () banked
 13775  01F790  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 13776  01F792  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 13777                           
 13778                           ; BSR set to: 1
 13779                           ;doprnt.c: 1218: exp--;
 13780  01F794  0101               	movlb	1	; () banked
 13781  01F796  0774               	decf	sprintf@exp& (0+255),f,b
 13782  01F798  A0D8               	btfss	status,0,c
 13783  01F79A  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 13784  01F79C                     l13544:
 13785                           
 13786                           ; BSR set to: 1
 13787  01F79C  0101               	movlb	1	; () banked
 13788  01F79E  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 13789  01F7A0  0A80               	xorlw	128
 13790  01F7A2  6EF3               	movwf	prodl,c
 13791  01F7A4  0E80               	movlw	128
 13792  01F7A6  5CF3               	subwf	prodl,w,c
 13793  01F7A8  0E01               	movlw	1
 13794  01F7AA  B4D8               	btfsc	status,2,c
 13795  01F7AC  5D74               	subwf	sprintf@exp& (0+255),w,b
 13796  01F7AE  B0D8               	btfsc	status,0,c
 13797  01F7B0  D7E5               	goto	l13536
 13798                           
 13799                           ; BSR set to: 1
 13800                           ;doprnt.c: 1219: }
 13801                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 13802                           
 13803                           ; BSR set to: 1
 13804  01F7B2  0101               	movlb	1	; () banked
 13805  01F7B4  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 13806  01F7B6  0A80               	xorlw	128
 13807  01F7B8  0F80               	addlw	-128
 13808  01F7BA  0E09               	movlw	9
 13809  01F7BC  B4D8               	btfsc	status,2,c
 13810  01F7BE  5D79               	subwf	sprintf@prec& (0+255),w,b
 13811  01F7C0  A0D8               	btfss	status,0,c
 13812  01F7C2  D004               	goto	l2073
 13813                           
 13814                           ; BSR set to: 1
 13815                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
 13816  01F7C4  0E08               	movlw	8
 13817  01F7C6  0101               	movlb	1	; () banked
 13818  01F7C8  6F7B               	movwf	sprintf@c& (0+255),b
 13819  01F7CA  D002               	goto	l13550
 13820  01F7CC                     l2073:
 13821                           
 13822                           ; BSR set to: 1
 13823                           ;doprnt.c: 1222: else
 13824                           ;doprnt.c: 1223: c = prec;
 13825  01F7CC  C179  F17B         	movff	sprintf@prec,sprintf@c
 13826  01F7D0                     l13550:
 13827                           
 13828                           ; BSR set to: 1
 13829                           ;doprnt.c: 1224: prec -= c;
 13830  01F7D0  0101               	movlb	1	; () banked
 13831  01F7D2  517B               	movf	sprintf@c& (0+255),w,b
 13832  01F7D4  0101               	movlb	1	; () banked
 13833  01F7D6  5F79               	subwf	sprintf@prec& (0+255),f,b
 13834  01F7D8  0E00               	movlw	0
 13835  01F7DA  0101               	movlb	1	; () banked
 13836  01F7DC  BF7B               	btfsc	sprintf@c& (0+255),7,b
 13837  01F7DE  0EFF               	movlw	255
 13838  01F7E0  0101               	movlb	1	; () banked
 13839  01F7E2  5B7A               	subwfb	(sprintf@prec+1)& (0+255),f,b
 13840                           
 13841                           ; BSR set to: 1
 13842                           ;doprnt.c: 1228: if(c)
 13843  01F7E4  0101               	movlb	1	; () banked
 13844  01F7E6  517B               	movf	sprintf@c& (0+255),w,b
 13845  01F7E8  B4D8               	btfsc	status,2,c
 13846  01F7EA  D00C               	goto	l13560
 13847                           
 13848                           ; BSR set to: 1
 13849                           ;doprnt.c: 1230: ((*sp++ = ('.')),(++ccnt));
 13850  01F7EC  C148  FFD9         	movff	sprintf@sp,fsr2l
 13851  01F7F0  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 13852  01F7F4  0E2E               	movlw	46
 13853  01F7F6  6EDF               	movwf	indf2,c
 13854                           
 13855                           ; BSR set to: 1
 13856  01F7F8  0101               	movlb	1	; () banked
 13857  01F7FA  4B48               	infsnz	sprintf@sp& (0+255),f,b
 13858  01F7FC  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 13859                           
 13860                           ; BSR set to: 1
 13861  01F7FE  0101               	movlb	1	; () banked
 13862  01F800  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 13863  01F802  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 13864  01F804                     l13560:
 13865                           
 13866                           ; BSR set to: 1
 13867                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 13868  01F804  0101               	movlb	1	; () banked
 13869  01F806  517B               	movf	sprintf@c& (0+255),w,b
 13870  01F808  EC2F  F09E         	call	_scale
 13871  01F80C  C123  F155         	movff	?_scale,_sprintf$10827
 13872  01F810  C124  F156         	movff	?_scale+1,_sprintf$10827+1
 13873  01F814  C125  F157         	movff	?_scale+2,_sprintf$10827+2
 13874                           
 13875                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 13876  01F818  C176  F117         	movff	sprintf@fval,___ftmul@f2
 13877  01F81C  C177  F118         	movff	sprintf@fval+1,___ftmul@f2+1
 13878  01F820  C178  F119         	movff	sprintf@fval+2,___ftmul@f2+2
 13879  01F824  C155  F114         	movff	_sprintf$10827,___ftmul@f1
 13880  01F828  C156  F115         	movff	_sprintf$10827+1,___ftmul@f1+1
 13881  01F82C  C157  F116         	movff	_sprintf$10827+2,___ftmul@f1+2
 13882  01F830  ECAF  F0BB         	call	___ftmul	;wreg free
 13883  01F834  C114  F139         	movff	?___ftmul,___fttol@f1
 13884  01F838  C115  F13A         	movff	?___ftmul+1,___fttol@f1+1
 13885  01F83C  C116  F13B         	movff	?___ftmul+2,___fttol@f1+2
 13886  01F840  ECF1  F0BA         	call	___fttol	;wreg free
 13887  01F844  C139  F16B         	movff	?___fttol,sprintf@_val
 13888  01F848  C13A  F16C         	movff	?___fttol+1,sprintf@_val+1
 13889  01F84C  C13B  F16D         	movff	?___fttol+2,sprintf@_val+2
 13890  01F850  C13C  F16E         	movff	?___fttol+3,sprintf@_val+3
 13891                           
 13892                           ;doprnt.c: 1237: while(c--) {
 13893  01F854  D088               	goto	l13576
 13894  01F856                     l13564:
 13895                           
 13896                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
 13897  01F856  C16B  F100         	movff	sprintf@_val,___lldiv@dividend
 13898  01F85A  C16C  F101         	movff	sprintf@_val+1,___lldiv@dividend+1
 13899  01F85E  C16D  F102         	movff	sprintf@_val+2,___lldiv@dividend+2
 13900  01F862  C16E  F103         	movff	sprintf@_val+3,___lldiv@dividend+3
 13901  01F866  0101               	movlb	1	; () banked
 13902  01F868  517B               	movf	sprintf@c& (0+255),w,b
 13903  01F86A  0D04               	mullw	4
 13904  01F86C  0E95               	movlw	low _dpowers
 13905  01F86E  24F3               	addwf	prodl,w,c
 13906  01F870  6EF6               	movwf	tblptrl,c
 13907  01F872  0EFE               	movlw	high _dpowers
 13908  01F874  20F4               	addwfc	prodh,w,c
 13909  01F876  6EF7               	movwf	tblptrh,c
 13910  01F878                     	if	1	;There are 3 active tblptr bytes
 13911  01F878  6AF8               	clrf	tblptru,c
 13912  01F87A  0E00               	movlw	low (__mediumconst shr (0+16))
 13913  01F87C  22F8               	addwfc	tblptru,f,c
 13914  01F87E                     	endif
 13915  01F87E  0009               	tblrd		*+
 13916  01F880  0101               	movlb	1	; () banked
 13917  01F882  CFF5 F104          	movff	tablat,___lldiv@divisor
 13918  01F886  0009               	tblrd		*+
 13919  01F888  0101               	movlb	1	; () banked
 13920  01F88A  CFF5 F105          	movff	tablat,___lldiv@divisor+1
 13921  01F88E  0009               	tblrd		*+
 13922  01F890  0101               	movlb	1	; () banked
 13923  01F892  CFF5 F106          	movff	tablat,___lldiv@divisor+2
 13924  01F896  000A               	tblrd		*-
 13925  01F898  0101               	movlb	1	; () banked
 13926  01F89A  CFF5 F107          	movff	tablat,___lldiv@divisor+3
 13927  01F89E  ECF3  F0CB         	call	___lldiv	;wreg free
 13928  01F8A2  C100  F162         	movff	?___lldiv,sprintf@vd_9351
 13929  01F8A6  C101  F163         	movff	?___lldiv+1,sprintf@vd_9351+1
 13930  01F8AA  C102  F164         	movff	?___lldiv+2,sprintf@vd_9351+2
 13931  01F8AE  C103  F165         	movff	?___lldiv+3,sprintf@vd_9351+3
 13932                           
 13933                           ;doprnt.c: 1239: vd %= 10;
 13934  01F8B2  C162  F100         	movff	sprintf@vd_9351,___llmod@dividend
 13935  01F8B6  C163  F101         	movff	sprintf@vd_9351+1,___llmod@dividend+1
 13936  01F8BA  C164  F102         	movff	sprintf@vd_9351+2,___llmod@dividend+2
 13937  01F8BE  C165  F103         	movff	sprintf@vd_9351+3,___llmod@dividend+3
 13938  01F8C2  0E0A               	movlw	10
 13939  01F8C4  0101               	movlb	1	; () banked
 13940  01F8C6  6F04               	movwf	___llmod@divisor& (0+255),b
 13941  01F8C8  0E00               	movlw	0
 13942  01F8CA  0101               	movlb	1	; () banked
 13943  01F8CC  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 13944  01F8CE  0E00               	movlw	0
 13945  01F8D0  0101               	movlb	1	; () banked
 13946  01F8D2  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 13947  01F8D4  0E00               	movlw	0
 13948  01F8D6  0101               	movlb	1	; () banked
 13949  01F8D8  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 13950  01F8DA  EC37  F0D1         	call	___llmod	;wreg free
 13951  01F8DE  C100  F162         	movff	?___llmod,sprintf@vd_9351
 13952  01F8E2  C101  F163         	movff	?___llmod+1,sprintf@vd_9351+1
 13953  01F8E6  C102  F164         	movff	?___llmod+2,sprintf@vd_9351+2
 13954  01F8EA  C103  F165         	movff	?___llmod+3,sprintf@vd_9351+3
 13955                           
 13956                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)),(++ccnt));
 13957  01F8EE  0101               	movlb	1	; () banked
 13958  01F8F0  5162               	movf	sprintf@vd_9351& (0+255),w,b
 13959  01F8F2  0F30               	addlw	48
 13960  01F8F4  C148  FFD9         	movff	sprintf@sp,fsr2l
 13961  01F8F8  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 13962  01F8FC  6EDF               	movwf	indf2,c
 13963                           
 13964                           ; BSR set to: 1
 13965  01F8FE  0101               	movlb	1	; () banked
 13966  01F900  4B48               	infsnz	sprintf@sp& (0+255),f,b
 13967  01F902  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 13968                           
 13969                           ; BSR set to: 1
 13970  01F904  0101               	movlb	1	; () banked
 13971  01F906  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 13972  01F908  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 13973                           
 13974                           ; BSR set to: 1
 13975                           ;doprnt.c: 1241: _val._val %= dpowers[c];
 13976  01F90A  C16B  F100         	movff	sprintf@_val,___llmod@dividend
 13977  01F90E  C16C  F101         	movff	sprintf@_val+1,___llmod@dividend+1
 13978  01F912  C16D  F102         	movff	sprintf@_val+2,___llmod@dividend+2
 13979  01F916  C16E  F103         	movff	sprintf@_val+3,___llmod@dividend+3
 13980  01F91A  0101               	movlb	1	; () banked
 13981  01F91C  517B               	movf	sprintf@c& (0+255),w,b
 13982  01F91E  0D04               	mullw	4
 13983  01F920  0E95               	movlw	low _dpowers
 13984  01F922  24F3               	addwf	prodl,w,c
 13985  01F924  6EF6               	movwf	tblptrl,c
 13986  01F926  0EFE               	movlw	high _dpowers
 13987  01F928  20F4               	addwfc	prodh,w,c
 13988  01F92A  6EF7               	movwf	tblptrh,c
 13989  01F92C                     	if	1	;There are 3 active tblptr bytes
 13990  01F92C  6AF8               	clrf	tblptru,c
 13991  01F92E  0E00               	movlw	low (__mediumconst shr (0+16))
 13992  01F930  22F8               	addwfc	tblptru,f,c
 13993  01F932                     	endif
 13994  01F932  0009               	tblrd		*+
 13995  01F934  0101               	movlb	1	; () banked
 13996  01F936  CFF5 F104          	movff	tablat,___llmod@divisor
 13997  01F93A  0009               	tblrd		*+
 13998  01F93C  0101               	movlb	1	; () banked
 13999  01F93E  CFF5 F105          	movff	tablat,___llmod@divisor+1
 14000  01F942  0009               	tblrd		*+
 14001  01F944  0101               	movlb	1	; () banked
 14002  01F946  CFF5 F106          	movff	tablat,___llmod@divisor+2
 14003  01F94A  000A               	tblrd		*-
 14004  01F94C  0101               	movlb	1	; () banked
 14005  01F94E  CFF5 F107          	movff	tablat,___llmod@divisor+3
 14006  01F952  EC37  F0D1         	call	___llmod	;wreg free
 14007  01F956  C100  F16B         	movff	?___llmod,sprintf@_val
 14008  01F95A  C101  F16C         	movff	?___llmod+1,sprintf@_val+1
 14009  01F95E  C102  F16D         	movff	?___llmod+2,sprintf@_val+2
 14010  01F962  C103  F16E         	movff	?___llmod+3,sprintf@_val+3
 14011  01F966                     l13576:
 14012  01F966  0101               	movlb	1	; () banked
 14013  01F968  077B               	decf	sprintf@c& (0+255),f,b
 14014  01F96A  0101               	movlb	1	; () banked
 14015  01F96C  297B               	incf	sprintf@c& (0+255),w,b
 14016  01F96E  B4D8               	btfsc	status,2,c
 14017  01F970  D011               	goto	l13586
 14018  01F972  D771               	goto	l13564
 14019  01F974                     l13578:
 14020                           
 14021                           ; BSR set to: 1
 14022                           ;doprnt.c: 1245: ((*sp++ = ('0')),(++ccnt));
 14023  01F974  C148  FFD9         	movff	sprintf@sp,fsr2l
 14024  01F978  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 14025  01F97C  0E30               	movlw	48
 14026  01F97E  6EDF               	movwf	indf2,c
 14027                           
 14028                           ; BSR set to: 1
 14029  01F980  0101               	movlb	1	; () banked
 14030  01F982  4B48               	infsnz	sprintf@sp& (0+255),f,b
 14031  01F984  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 14032                           
 14033                           ; BSR set to: 1
 14034  01F986  0101               	movlb	1	; () banked
 14035  01F988  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 14036  01F98A  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 14037                           
 14038                           ; BSR set to: 1
 14039                           ;doprnt.c: 1246: prec--;
 14040  01F98C  0101               	movlb	1	; () banked
 14041  01F98E  0779               	decf	sprintf@prec& (0+255),f,b
 14042  01F990  A0D8               	btfss	status,0,c
 14043  01F992  077A               	decf	(sprintf@prec+1)& (0+255),f,b
 14044  01F994                     l13586:
 14045                           
 14046                           ; BSR set to: 1
 14047  01F994  0101               	movlb	1	; () banked
 14048  01F996  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 14049  01F998  1179               	iorwf	sprintf@prec& (0+255),w,b
 14050  01F99A  B4D8               	btfsc	status,2,c
 14051  01F99C  D0CF               	goto	l13640
 14052  01F99E  D7EA               	goto	l13578
 14053  01F9A0                     l13588:
 14054                           
 14055                           ; BSR set to: 1
 14056                           ;doprnt.c: 1255: }
 14057                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 14058  01F9A0  0101               	movlb	1	; () banked
 14059  01F9A2  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 14060  01F9A4  1179               	iorwf	sprintf@prec& (0+255),w,b
 14061  01F9A6  A4D8               	btfss	status,2,c
 14062  01F9A8  D00A               	goto	l13594
 14063                           
 14064                           ; BSR set to: 1
 14065  01F9AA  0101               	movlb	1	; () banked
 14066  01F9AC  516E               	movf	(sprintf@_val+3)& (0+255),w,b
 14067  01F9AE  116B               	iorwf	sprintf@_val& (0+255),w,b
 14068  01F9B0  116C               	iorwf	(sprintf@_val+1)& (0+255),w,b
 14069  01F9B2  116D               	iorwf	(sprintf@_val+2)& (0+255),w,b
 14070  01F9B4  A4D8               	btfss	status,2,c
 14071  01F9B6  D003               	goto	l13594
 14072                           
 14073                           ; BSR set to: 1
 14074                           ;doprnt.c: 1300: prec++;
 14075  01F9B8  0101               	movlb	1	; () banked
 14076  01F9BA  4B79               	infsnz	sprintf@prec& (0+255),f,b
 14077  01F9BC  2B7A               	incf	(sprintf@prec+1)& (0+255),f,b
 14078  01F9BE                     l13594:
 14079                           
 14080                           ; BSR set to: 1
 14081                           ;doprnt.c: 1348: if(c < prec)
 14082  01F9BE  0E80               	movlw	128
 14083  01F9C0  0101               	movlb	1	; () banked
 14084  01F9C2  BF7B               	btfsc	sprintf@c& (0+255),7,b
 14085  01F9C4  0E7F               	movlw	127
 14086  01F9C6  0101               	movlb	1	; () banked
 14087  01F9C8  6F4F               	movwf	??_sprintf& (0+255),b
 14088  01F9CA  0101               	movlb	1	; () banked
 14089  01F9CC  5179               	movf	sprintf@prec& (0+255),w,b
 14090  01F9CE  0101               	movlb	1	; () banked
 14091  01F9D0  5D7B               	subwf	sprintf@c& (0+255),w,b
 14092  01F9D2  0101               	movlb	1	; () banked
 14093  01F9D4  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 14094  01F9D6  0A80               	xorlw	128
 14095  01F9D8  0101               	movlb	1	; () banked
 14096  01F9DA  594F               	subwfb	??_sprintf& (0+255),w,b
 14097  01F9DC  B0D8               	btfsc	status,0,c
 14098  01F9DE  D003               	goto	l13598
 14099                           
 14100                           ; BSR set to: 1
 14101                           ;doprnt.c: 1349: c = prec;
 14102  01F9E0  C179  F17B         	movff	sprintf@prec,sprintf@c
 14103  01F9E4  D01A               	goto	l13602
 14104  01F9E6                     l13598:
 14105                           
 14106                           ; BSR set to: 1
 14107                           ;doprnt.c: 1350: else if(prec < c)
 14108  01F9E6  0101               	movlb	1	; () banked
 14109  01F9E8  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 14110  01F9EA  0A80               	xorlw	128
 14111  01F9EC  0101               	movlb	1	; () banked
 14112  01F9EE  6F4F               	movwf	??_sprintf& (0+255),b
 14113  01F9F0  0101               	movlb	1	; () banked
 14114  01F9F2  517B               	movf	sprintf@c& (0+255),w,b
 14115  01F9F4  0101               	movlb	1	; () banked
 14116  01F9F6  5D79               	subwf	sprintf@prec& (0+255),w,b
 14117  01F9F8  0E80               	movlw	128
 14118  01F9FA  0101               	movlb	1	; () banked
 14119  01F9FC  BF7B               	btfsc	sprintf@c& (0+255),7,b
 14120  01F9FE  0E7F               	movlw	127
 14121  01FA00  0101               	movlb	1	; () banked
 14122  01FA02  594F               	subwfb	??_sprintf& (0+255),w,b
 14123  01FA04  B0D8               	btfsc	status,0,c
 14124  01FA06  D009               	goto	l13602
 14125                           
 14126                           ; BSR set to: 1
 14127                           ;doprnt.c: 1351: prec = c;
 14128  01FA08  0101               	movlb	1	; () banked
 14129  01FA0A  517B               	movf	sprintf@c& (0+255),w,b
 14130  01FA0C  0101               	movlb	1	; () banked
 14131  01FA0E  6F79               	movwf	sprintf@prec& (0+255),b
 14132  01FA10  0101               	movlb	1	; () banked
 14133  01FA12  6B7A               	clrf	(sprintf@prec+1)& (0+255),b
 14134  01FA14  0101               	movlb	1	; () banked
 14135  01FA16  BF79               	btfsc	sprintf@prec& (0+255),7,b
 14136  01FA18  077A               	decf	(sprintf@prec+1)& (0+255),f,b
 14137  01FA1A                     l13602:
 14138                           
 14139                           ; BSR set to: 1
 14140                           ;doprnt.c: 1354: if(width && flag & 0x03)
 14141  01FA1A  0101               	movlb	1	; () banked
 14142  01FA1C  5173               	movf	(sprintf@width+1)& (0+255),w,b
 14143  01FA1E  1172               	iorwf	sprintf@width& (0+255),w,b
 14144  01FA20  B4D8               	btfsc	status,2,c
 14145  01FA22  D013               	goto	l13608
 14146                           
 14147                           ; BSR set to: 1
 14148  01FA24  0E03               	movlw	3
 14149  01FA26  0101               	movlb	1	; () banked
 14150  01FA28  1570               	andwf	sprintf@flag& (0+255),w,b
 14151  01FA2A  0101               	movlb	1	; () banked
 14152  01FA2C  6F4F               	movwf	??_sprintf& (0+255),b
 14153  01FA2E  0E00               	movlw	0
 14154  01FA30  0101               	movlb	1	; () banked
 14155  01FA32  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 14156  01FA34  0101               	movlb	1	; () banked
 14157  01FA36  6F50               	movwf	(??_sprintf+1)& (0+255),b
 14158  01FA38  0101               	movlb	1	; () banked
 14159  01FA3A  5150               	movf	(??_sprintf+1)& (0+255),w,b
 14160  01FA3C  114F               	iorwf	??_sprintf& (0+255),w,b
 14161  01FA3E  B4D8               	btfsc	status,2,c
 14162  01FA40  D004               	goto	l13608
 14163                           
 14164                           ; BSR set to: 1
 14165                           ;doprnt.c: 1355: width--;
 14166  01FA42  0101               	movlb	1	; () banked
 14167  01FA44  0772               	decf	sprintf@width& (0+255),f,b
 14168  01FA46  A0D8               	btfss	status,0,c
 14169  01FA48  0773               	decf	(sprintf@width+1)& (0+255),f,b
 14170  01FA4A                     l13608:
 14171                           
 14172                           ; BSR set to: 1
 14173                           ;doprnt.c: 1357: if(flag & 0x4000) {
 14174  01FA4A  0101               	movlb	1	; () banked
 14175  01FA4C  AD71               	btfss	(sprintf@flag+1)& (0+255),6,b
 14176  01FA4E  D01F               	goto	l13616
 14177                           
 14178                           ; BSR set to: 1
 14179                           ;doprnt.c: 1358: if(width > prec)
 14180  01FA50  0101               	movlb	1	; () banked
 14181  01FA52  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 14182  01FA54  0A80               	xorlw	128
 14183  01FA56  0101               	movlb	1	; () banked
 14184  01FA58  6F4F               	movwf	??_sprintf& (0+255),b
 14185  01FA5A  0101               	movlb	1	; () banked
 14186  01FA5C  5172               	movf	sprintf@width& (0+255),w,b
 14187  01FA5E  0101               	movlb	1	; () banked
 14188  01FA60  5D79               	subwf	sprintf@prec& (0+255),w,b
 14189  01FA62  0101               	movlb	1	; () banked
 14190  01FA64  5173               	movf	(sprintf@width+1)& (0+255),w,b
 14191  01FA66  0A80               	xorlw	128
 14192  01FA68  0101               	movlb	1	; () banked
 14193  01FA6A  594F               	subwfb	??_sprintf& (0+255),w,b
 14194  01FA6C  B0D8               	btfsc	status,0,c
 14195  01FA6E  D009               	goto	l13614
 14196                           
 14197                           ; BSR set to: 1
 14198                           ;doprnt.c: 1359: width -= prec;
 14199  01FA70  0101               	movlb	1	; () banked
 14200  01FA72  5179               	movf	sprintf@prec& (0+255),w,b
 14201  01FA74  0101               	movlb	1	; () banked
 14202  01FA76  5F72               	subwf	sprintf@width& (0+255),f,b
 14203  01FA78  0101               	movlb	1	; () banked
 14204  01FA7A  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 14205  01FA7C  0101               	movlb	1	; () banked
 14206  01FA7E  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
 14207  01FA80  D006               	goto	l13616
 14208  01FA82                     l13614:
 14209                           
 14210                           ; BSR set to: 1
 14211                           ;doprnt.c: 1360: else
 14212                           ;doprnt.c: 1361: width = 0;
 14213  01FA82  0E00               	movlw	0
 14214  01FA84  0101               	movlb	1	; () banked
 14215  01FA86  6F73               	movwf	(sprintf@width+1)& (0+255),b
 14216  01FA88  0E00               	movlw	0
 14217  01FA8A  0101               	movlb	1	; () banked
 14218  01FA8C  6F72               	movwf	sprintf@width& (0+255),b
 14219  01FA8E                     l13616:
 14220                           
 14221                           ; BSR set to: 1
 14222                           ;doprnt.c: 1362: }
 14223                           ;doprnt.c: 1390: if(width > c)
 14224  01FA8E  0E80               	movlw	128
 14225  01FA90  0101               	movlb	1	; () banked
 14226  01FA92  BF7B               	btfsc	sprintf@c& (0+255),7,b
 14227  01FA94  0E7F               	movlw	127
 14228  01FA96  0101               	movlb	1	; () banked
 14229  01FA98  6F4F               	movwf	??_sprintf& (0+255),b
 14230  01FA9A  0101               	movlb	1	; () banked
 14231  01FA9C  5172               	movf	sprintf@width& (0+255),w,b
 14232  01FA9E  0101               	movlb	1	; () banked
 14233  01FAA0  5D7B               	subwf	sprintf@c& (0+255),w,b
 14234  01FAA2  0101               	movlb	1	; () banked
 14235  01FAA4  5173               	movf	(sprintf@width+1)& (0+255),w,b
 14236  01FAA6  0A80               	xorlw	128
 14237  01FAA8  0101               	movlb	1	; () banked
 14238  01FAAA  594F               	subwfb	??_sprintf& (0+255),w,b
 14239  01FAAC  B0D8               	btfsc	status,0,c
 14240  01FAAE  D00B               	goto	l13620
 14241                           
 14242                           ; BSR set to: 1
 14243                           ;doprnt.c: 1391: width -= c;
 14244  01FAB0  0101               	movlb	1	; () banked
 14245  01FAB2  517B               	movf	sprintf@c& (0+255),w,b
 14246  01FAB4  0101               	movlb	1	; () banked
 14247  01FAB6  5F72               	subwf	sprintf@width& (0+255),f,b
 14248  01FAB8  0E00               	movlw	0
 14249  01FABA  0101               	movlb	1	; () banked
 14250  01FABC  BF7B               	btfsc	sprintf@c& (0+255),7,b
 14251  01FABE  0EFF               	movlw	255
 14252  01FAC0  0101               	movlb	1	; () banked
 14253  01FAC2  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
 14254  01FAC4  D006               	goto	l13622
 14255  01FAC6                     l13620:
 14256                           
 14257                           ; BSR set to: 1
 14258                           ;doprnt.c: 1392: else
 14259                           ;doprnt.c: 1393: width = 0;
 14260  01FAC6  0E00               	movlw	0
 14261  01FAC8  0101               	movlb	1	; () banked
 14262  01FACA  6F73               	movwf	(sprintf@width+1)& (0+255),b
 14263  01FACC  0E00               	movlw	0
 14264  01FACE  0101               	movlb	1	; () banked
 14265  01FAD0  6F72               	movwf	sprintf@width& (0+255),b
 14266  01FAD2                     l13622:
 14267                           
 14268                           ; BSR set to: 1
 14269                           ;doprnt.c: 1431: {
 14270                           ;doprnt.c: 1433: if(width
 14271                           ;doprnt.c: 1437: )
 14272  01FAD2  0101               	movlb	1	; () banked
 14273  01FAD4  5173               	movf	(sprintf@width+1)& (0+255),w,b
 14274  01FAD6  1172               	iorwf	sprintf@width& (0+255),w,b
 14275  01FAD8  B4D8               	btfsc	status,2,c
 14276  01FADA  D015               	goto	l13632
 14277  01FADC                     l13624:
 14278                           
 14279                           ; BSR set to: 1
 14280                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
 14281  01FADC  C148  FFD9         	movff	sprintf@sp,fsr2l
 14282  01FAE0  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 14283  01FAE4  0E20               	movlw	32
 14284  01FAE6  6EDF               	movwf	indf2,c
 14285                           
 14286                           ; BSR set to: 1
 14287  01FAE8  0101               	movlb	1	; () banked
 14288  01FAEA  4B48               	infsnz	sprintf@sp& (0+255),f,b
 14289  01FAEC  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 14290                           
 14291                           ; BSR set to: 1
 14292  01FAEE  0101               	movlb	1	; () banked
 14293  01FAF0  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 14294  01FAF2  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 14295                           
 14296                           ; BSR set to: 1
 14297                           ;doprnt.c: 1440: while(--width);
 14298  01FAF4  0101               	movlb	1	; () banked
 14299  01FAF6  0772               	decf	sprintf@width& (0+255),f,b
 14300  01FAF8  A0D8               	btfss	status,0,c
 14301  01FAFA  0773               	decf	(sprintf@width+1)& (0+255),f,b
 14302  01FAFC  0101               	movlb	1	; () banked
 14303  01FAFE  5173               	movf	(sprintf@width+1)& (0+255),w,b
 14304  01FB00  1172               	iorwf	sprintf@width& (0+255),w,b
 14305  01FB02  A4D8               	btfss	status,2,c
 14306  01FB04  D7EB               	goto	l13624
 14307  01FB06                     l13632:
 14308                           
 14309                           ; BSR set to: 1
 14310                           ;doprnt.c: 1447: if(flag & 0x03)
 14311  01FB06  0E03               	movlw	3
 14312  01FB08  0101               	movlb	1	; () banked
 14313  01FB0A  1570               	andwf	sprintf@flag& (0+255),w,b
 14314  01FB0C  0101               	movlb	1	; () banked
 14315  01FB0E  6F4F               	movwf	??_sprintf& (0+255),b
 14316  01FB10  0E00               	movlw	0
 14317  01FB12  0101               	movlb	1	; () banked
 14318  01FB14  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 14319  01FB16  0101               	movlb	1	; () banked
 14320  01FB18  6F50               	movwf	(??_sprintf+1)& (0+255),b
 14321  01FB1A  0101               	movlb	1	; () banked
 14322  01FB1C  5150               	movf	(??_sprintf+1)& (0+255),w,b
 14323  01FB1E  114F               	iorwf	??_sprintf& (0+255),w,b
 14324  01FB20  B4D8               	btfsc	status,2,c
 14325  01FB22  D00C               	goto	l13640
 14326                           
 14327                           ; BSR set to: 1
 14328                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
 14329  01FB24  C148  FFD9         	movff	sprintf@sp,fsr2l
 14330  01FB28  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 14331  01FB2C  0E2D               	movlw	45
 14332  01FB2E  6EDF               	movwf	indf2,c
 14333  01FB30                     L7:
 14334                           
 14335                           ; BSR set to: 1
 14336  01FB30  0101               	movlb	1	; () banked
 14337  01FB32  4B48               	infsnz	sprintf@sp& (0+255),f,b
 14338  01FB34  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 14339                           
 14340                           ; BSR set to: 1
 14341  01FB36  0101               	movlb	1	; () banked
 14342  01FB38  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 14343  01FB3A  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 14344  01FB3C                     l13640:
 14345                           
 14346                           ; BSR set to: 1
 14347  01FB3C  0101               	movlb	1	; () banked
 14348  01FB3E  C14A  FFF6         	movff	sprintf@f,tblptrl
 14349  01FB42  0101               	movlb	1	; () banked
 14350  01FB44  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 14351  01FB48  0101               	movlb	1	; () banked
 14352  01FB4A  4B4A               	infsnz	sprintf@f& (0+255),f,b
 14353  01FB4C  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 14354  01FB4E                     	if	0	;tblptru may be non-zero
 14355  01FB4E                     	endif
 14356  01FB4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14357  01FB4E  0E00               	movlw	low (__mediumconst shr (0+16))
 14358  01FB50  6EF8               	movwf	tblptru,c
 14359  01FB52                     	endif
 14360  01FB52  0008               	tblrd		*
 14361  01FB54  0101               	movlb	1	; () banked
 14362  01FB56  CFF5 F17B          	movff	tablat,sprintf@c
 14363  01FB5A  0101               	movlb	1	; () banked
 14364  01FB5C  677B               	tstfsz	sprintf@c& (0+255),b
 14365  01FB5E  EF10  F0F8         	goto	l13364
 14366  01FB62                     l13642:
 14367                           
 14368                           ; BSR set to: 1
 14369                           ;doprnt.c: 1547: *sp = 0;
 14370  01FB62  C148  FFD9         	movff	sprintf@sp,fsr2l
 14371  01FB66  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 14372  01FB6A  0E00               	movlw	0
 14373  01FB6C  6EDF               	movwf	indf2,c
 14374                           
 14375                           ; BSR set to: 1
 14376                           ;doprnt.c: 1549: return ccnt;
 14377  01FB6E  C166  F148         	movff	sprintf@ccnt,?_sprintf
 14378  01FB72  C167  F149         	movff	sprintf@ccnt+1,?_sprintf+1
 14379  01FB76  0012               	return	
 14380  01FB78                     __end_of_sprintf:
 14381                           	opt stack 0
 14382                           tblptru	equ	0xFF8
 14383                           tblptrh	equ	0xFF7
 14384                           tblptrl	equ	0xFF6
 14385                           tablat	equ	0xFF5
 14386                           prodh	equ	0xFF4
 14387                           prodl	equ	0xFF3
 14388                           intcon	equ	0xFF2
 14389                           postinc0	equ	0xFEE
 14390                           wreg	equ	0xFE8
 14391                           postdec1	equ	0xFE5
 14392                           fsr1h	equ	0xFE2
 14393                           fsr1l	equ	0xFE1
 14394                           indf2	equ	0xFDF
 14395                           postinc2	equ	0xFDE
 14396                           postdec2	equ	0xFDD
 14397                           fsr2h	equ	0xFDA
 14398                           fsr2l	equ	0xFD9
 14399                           status	equ	0xFD8
 14400                           
 14401 ;; *************** function _scale *****************
 14402 ;; Defined at:
 14403 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;  scl             1    wreg     char 
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  scl             1   41[BANK1 ] char 
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  3   35[BANK1 ] char 
 14410 ;; Registers used:
 14411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 14417 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14418 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14420 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14421 ;;Total ram usage:        7 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:   12
 14424 ;; This function calls:
 14425 ;;		___awdiv
 14426 ;;		___awmod
 14427 ;;		___ftmul
 14428 ;;		___wmul
 14429 ;; This function is called by:
 14430 ;;		_sprintf
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           	psect	text6
 14435  013C5E                     __ptext6:
 14436                           	opt stack 0
 14437  013C5E                     _scale:
 14438                           	opt stack 15
 14439                           
 14440                           ; BSR set to: 1
 14441                           ;incstack = 0
 14442                           ;scale@scl stored from wreg
 14443  013C5E  0101               	movlb	1	; () banked
 14444  013C60  6F29               	movwf	scale@scl& (0+255),b
 14445                           
 14446                           ; BSR set to: 1
 14447                           ;doprnt.c: 428: if(scl < 0) {
 14448  013C62  0101               	movlb	1	; () banked
 14449  013C64  AF29               	btfss	scale@scl& (0+255),7,b
 14450  013C66  D16F               	goto	l12066
 14451                           
 14452                           ; BSR set to: 1
 14453                           ;doprnt.c: 429: scl = -scl;
 14454  013C68  0101               	movlb	1	; () banked
 14455  013C6A  6D29               	negf	scale@scl& (0+255),b
 14456                           
 14457                           ;doprnt.c: 430: if(scl>=110)
 14458  013C6C  0101               	movlb	1	; () banked
 14459  013C6E  5129               	movf	scale@scl& (0+255),w,b
 14460  013C70  0A80               	xorlw	128
 14461  013C72  0F12               	addlw	-238
 14462  013C74  A0D8               	btfss	status,0,c
 14463  013C76  D0CF               	goto	l12056
 14464                           
 14465                           ; BSR set to: 1
 14466                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14467  013C78  0E00               	movlw	0
 14468  013C7A  0101               	movlb	1	; () banked
 14469  013C7C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14470  013C7E  0E03               	movlw	3
 14471  013C80  0101               	movlb	1	; () banked
 14472  013C82  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14473  013C84  0E00               	movlw	0
 14474  013C86  0101               	movlb	1	; () banked
 14475  013C88  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 14476  013C8A  0E0A               	movlw	10
 14477  013C8C  0101               	movlb	1	; () banked
 14478  013C8E  6F08               	movwf	___awdiv@divisor& (0+255),b
 14479  013C90  0E00               	movlw	0
 14480  013C92  0101               	movlb	1	; () banked
 14481  013C94  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 14482  013C96  0E64               	movlw	100
 14483  013C98  0101               	movlb	1	; () banked
 14484  013C9A  6F02               	movwf	___awmod@divisor& (0+255),b
 14485  013C9C  0101               	movlb	1	; () banked
 14486  013C9E  5129               	movf	scale@scl& (0+255),w,b
 14487  013CA0  0101               	movlb	1	; () banked
 14488  013CA2  6F00               	movwf	___awmod@dividend& (0+255),b
 14489  013CA4  0101               	movlb	1	; () banked
 14490  013CA6  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 14491  013CA8  0101               	movlb	1	; () banked
 14492  013CAA  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 14493  013CAC  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 14494  013CAE  ECC6  F0CE         	call	___awmod	;wreg free
 14495  013CB2  0101               	movlb	1	; () banked
 14496  013CB4  C100  F106         	movff	?___awmod,___awdiv@dividend
 14497  013CB8  0101               	movlb	1	; () banked
 14498  013CBA  C101  F107         	movff	?___awmod+1,___awdiv@dividend+1
 14499  013CBE  ECCF  F0C9         	call	___awdiv	;wreg free
 14500  013CC2  0E09               	movlw	9
 14501  013CC4  0101               	movlb	1	; () banked
 14502  013CC6  2506               	addwf	?___awdiv& (0+255),w,b
 14503  013CC8  0101               	movlb	1	; () banked
 14504  013CCA  6F0E               	movwf	___wmul@multiplier& (0+255),b
 14505  013CCC  0E00               	movlw	0
 14506  013CCE  0101               	movlb	1	; () banked
 14507  013CD0  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 14508  013CD2  0101               	movlb	1	; () banked
 14509  013CD4  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 14510  013CD6  ECF5  F0D9         	call	___wmul	;wreg free
 14511  013CDA  0EBD               	movlw	low __npowers_
 14512  013CDC  0101               	movlb	1	; () banked
 14513  013CDE  250E               	addwf	?___wmul& (0+255),w,b
 14514  013CE0  6EF6               	movwf	tblptrl,c
 14515  013CE2  0EFE               	movlw	high __npowers_
 14516  013CE4  0101               	movlb	1	; () banked
 14517  013CE6  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14518  013CE8  6EF7               	movwf	tblptrh,c
 14519  013CEA                     	if	1	;There are 3 active tblptr bytes
 14520  013CEA  6AF8               	clrf	tblptru,c
 14521  013CEC  0E00               	movlw	low (__mediumconst shr (0+16))
 14522  013CEE  22F8               	addwfc	tblptru,f,c
 14523  013CF0                     	endif
 14524  013CF0  0009               	tblrd		*+
 14525  013CF2  0101               	movlb	1	; () banked
 14526  013CF4  CFF5 F117          	movff	tablat,___ftmul@f2
 14527  013CF8  0009               	tblrd		*+
 14528  013CFA  0101               	movlb	1	; () banked
 14529  013CFC  CFF5 F118          	movff	tablat,___ftmul@f2+1
 14530  013D00  000A               	tblrd		*-
 14531  013D02  0101               	movlb	1	; () banked
 14532  013D04  CFF5 F119          	movff	tablat,___ftmul@f2+2
 14533  013D08  0E00               	movlw	0
 14534  013D0A  0101               	movlb	1	; () banked
 14535  013D0C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 14536  013D0E  0E64               	movlw	100
 14537  013D10  0101               	movlb	1	; () banked
 14538  013D12  6F08               	movwf	___awdiv@divisor& (0+255),b
 14539  013D14  0101               	movlb	1	; () banked
 14540  013D16  5129               	movf	scale@scl& (0+255),w,b
 14541  013D18  0101               	movlb	1	; () banked
 14542  013D1A  6F06               	movwf	___awdiv@dividend& (0+255),b
 14543  013D1C  0101               	movlb	1	; () banked
 14544  013D1E  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 14545  013D20  0101               	movlb	1	; () banked
 14546  013D22  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 14547  013D24  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 14548  013D26  ECCF  F0C9         	call	___awdiv	;wreg free
 14549  013D2A  0E12               	movlw	18
 14550  013D2C  0101               	movlb	1	; () banked
 14551  013D2E  2506               	addwf	?___awdiv& (0+255),w,b
 14552  013D30  0101               	movlb	1	; () banked
 14553  013D32  6F0E               	movwf	___wmul@multiplier& (0+255),b
 14554  013D34  0E00               	movlw	0
 14555  013D36  0101               	movlb	1	; () banked
 14556  013D38  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 14557  013D3A  0101               	movlb	1	; () banked
 14558  013D3C  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 14559  013D3E  0E00               	movlw	0
 14560  013D40  0101               	movlb	1	; () banked
 14561  013D42  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14562  013D44  0E03               	movlw	3
 14563  013D46  0101               	movlb	1	; () banked
 14564  013D48  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14565  013D4A  ECF5  F0D9         	call	___wmul	;wreg free
 14566  013D4E  0EBD               	movlw	low __npowers_
 14567  013D50  0101               	movlb	1	; () banked
 14568  013D52  250E               	addwf	?___wmul& (0+255),w,b
 14569  013D54  6EF6               	movwf	tblptrl,c
 14570  013D56  0EFE               	movlw	high __npowers_
 14571  013D58  0101               	movlb	1	; () banked
 14572  013D5A  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14573  013D5C  6EF7               	movwf	tblptrh,c
 14574  013D5E                     	if	1	;There are 3 active tblptr bytes
 14575  013D5E  6AF8               	clrf	tblptru,c
 14576  013D60  0E00               	movlw	low (__mediumconst shr (0+16))
 14577  013D62  22F8               	addwfc	tblptru,f,c
 14578  013D64                     	endif
 14579  013D64  0009               	tblrd		*+
 14580  013D66  0101               	movlb	1	; () banked
 14581  013D68  CFF5 F114          	movff	tablat,___ftmul@f1
 14582  013D6C  0009               	tblrd		*+
 14583  013D6E  0101               	movlb	1	; () banked
 14584  013D70  CFF5 F115          	movff	tablat,___ftmul@f1+1
 14585  013D74  000A               	tblrd		*-
 14586  013D76  0101               	movlb	1	; () banked
 14587  013D78  CFF5 F116          	movff	tablat,___ftmul@f1+2
 14588  013D7C  ECAF  F0BB         	call	___ftmul	;wreg free
 14589  013D80  C114  F126         	movff	?___ftmul,_scale$10826
 14590  013D84  C115  F127         	movff	?___ftmul+1,_scale$10826+1
 14591  013D88  C116  F128         	movff	?___ftmul+2,_scale$10826+2
 14592                           
 14593                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 14594  013D8C  C126  F114         	movff	_scale$10826,___ftmul@f1
 14595  013D90  C127  F115         	movff	_scale$10826+1,___ftmul@f1+1
 14596  013D94  C128  F116         	movff	_scale$10826+2,___ftmul@f1+2
 14597  013D98  0E00               	movlw	0
 14598  013D9A  0101               	movlb	1	; () banked
 14599  013D9C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14600  013D9E  0E03               	movlw	3
 14601  013DA0  0101               	movlb	1	; () banked
 14602  013DA2  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14603  013DA4  0E00               	movlw	0
 14604  013DA6  0101               	movlb	1	; () banked
 14605  013DA8  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 14606  013DAA  0E0A               	movlw	10
 14607  013DAC  0101               	movlb	1	; () banked
 14608  013DAE  6F02               	movwf	___awmod@divisor& (0+255),b
 14609  013DB0  0101               	movlb	1	; () banked
 14610  013DB2  5129               	movf	scale@scl& (0+255),w,b
 14611  013DB4  0101               	movlb	1	; () banked
 14612  013DB6  6F00               	movwf	___awmod@dividend& (0+255),b
 14613  013DB8  0101               	movlb	1	; () banked
 14614  013DBA  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 14615  013DBC  0101               	movlb	1	; () banked
 14616  013DBE  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 14617  013DC0  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 14618  013DC2  ECC6  F0CE         	call	___awmod	;wreg free
 14619  013DC6  0101               	movlb	1	; () banked
 14620  013DC8  C100  F10E         	movff	?___awmod,___wmul@multiplier
 14621  013DCC  0101               	movlb	1	; () banked
 14622  013DCE  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 14623  013DD2  ECF5  F0D9         	call	___wmul	;wreg free
 14624  013DD6  0EBD               	movlw	low __npowers_
 14625  013DD8  0101               	movlb	1	; () banked
 14626  013DDA  250E               	addwf	?___wmul& (0+255),w,b
 14627  013DDC  6EF6               	movwf	tblptrl,c
 14628  013DDE  0EFE               	movlw	high __npowers_
 14629  013DE0  0101               	movlb	1	; () banked
 14630  013DE2  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14631  013DE4  6EF7               	movwf	tblptrh,c
 14632  013DE6                     	if	1	;There are 3 active tblptr bytes
 14633  013DE6  6AF8               	clrf	tblptru,c
 14634  013DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 14635  013DEA  22F8               	addwfc	tblptru,f,c
 14636  013DEC                     	endif
 14637  013DEC  0009               	tblrd		*+
 14638  013DEE  0101               	movlb	1	; () banked
 14639  013DF0  CFF5 F117          	movff	tablat,___ftmul@f2
 14640  013DF4  0009               	tblrd		*+
 14641  013DF6  0101               	movlb	1	; () banked
 14642  013DF8  CFF5 F118          	movff	tablat,___ftmul@f2+1
 14643  013DFC  000A               	tblrd		*-
 14644  013DFE  0101               	movlb	1	; () banked
 14645  013E00  CFF5 F119          	movff	tablat,___ftmul@f2+2
 14646  013E04  ECAF  F0BB         	call	___ftmul	;wreg free
 14647  013E08  C114  F123         	movff	?___ftmul,?_scale
 14648  013E0C  C115  F124         	movff	?___ftmul+1,?_scale+1
 14649  013E10  C116  F125         	movff	?___ftmul+2,?_scale+2
 14650  013E14  0012               	return	
 14651  013E16                     l12056:
 14652                           
 14653                           ;doprnt.c: 432: else if(scl > 10)
 14654  013E16  0101               	movlb	1	; () banked
 14655  013E18  5129               	movf	scale@scl& (0+255),w,b
 14656  013E1A  0A80               	xorlw	128
 14657  013E1C  0F75               	addlw	-139
 14658  013E1E  A0D8               	btfss	status,0,c
 14659  013E20  D079               	goto	l12062
 14660                           
 14661                           ; BSR set to: 1
 14662                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 14663  013E22  0E00               	movlw	0
 14664  013E24  0101               	movlb	1	; () banked
 14665  013E26  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 14666  013E28  0E0A               	movlw	10
 14667  013E2A  0101               	movlb	1	; () banked
 14668  013E2C  6F08               	movwf	___awdiv@divisor& (0+255),b
 14669  013E2E  0101               	movlb	1	; () banked
 14670  013E30  5129               	movf	scale@scl& (0+255),w,b
 14671  013E32  0101               	movlb	1	; () banked
 14672  013E34  6F06               	movwf	___awdiv@dividend& (0+255),b
 14673  013E36  0101               	movlb	1	; () banked
 14674  013E38  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 14675  013E3A  0101               	movlb	1	; () banked
 14676  013E3C  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 14677  013E3E  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 14678  013E40  ECCF  F0C9         	call	___awdiv	;wreg free
 14679  013E44  0E09               	movlw	9
 14680  013E46  0101               	movlb	1	; () banked
 14681  013E48  2506               	addwf	?___awdiv& (0+255),w,b
 14682  013E4A  0101               	movlb	1	; () banked
 14683  013E4C  6F0E               	movwf	___wmul@multiplier& (0+255),b
 14684  013E4E  0E00               	movlw	0
 14685  013E50  0101               	movlb	1	; () banked
 14686  013E52  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 14687  013E54  0101               	movlb	1	; () banked
 14688  013E56  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 14689  013E58  0E00               	movlw	0
 14690  013E5A  0101               	movlb	1	; () banked
 14691  013E5C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14692  013E5E  0E03               	movlw	3
 14693  013E60  0101               	movlb	1	; () banked
 14694  013E62  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14695  013E64  ECF5  F0D9         	call	___wmul	;wreg free
 14696  013E68  0EBD               	movlw	low __npowers_
 14697  013E6A  0101               	movlb	1	; () banked
 14698  013E6C  250E               	addwf	?___wmul& (0+255),w,b
 14699  013E6E  6EF6               	movwf	tblptrl,c
 14700  013E70  0EFE               	movlw	high __npowers_
 14701  013E72  0101               	movlb	1	; () banked
 14702  013E74  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14703  013E76  6EF7               	movwf	tblptrh,c
 14704  013E78                     	if	1	;There are 3 active tblptr bytes
 14705  013E78  6AF8               	clrf	tblptru,c
 14706  013E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 14707  013E7C  22F8               	addwfc	tblptru,f,c
 14708  013E7E                     	endif
 14709  013E7E  0009               	tblrd		*+
 14710  013E80  0101               	movlb	1	; () banked
 14711  013E82  CFF5 F114          	movff	tablat,___ftmul@f1
 14712  013E86  0009               	tblrd		*+
 14713  013E88  0101               	movlb	1	; () banked
 14714  013E8A  CFF5 F115          	movff	tablat,___ftmul@f1+1
 14715  013E8E  000A               	tblrd		*-
 14716  013E90  0101               	movlb	1	; () banked
 14717  013E92  CFF5 F116          	movff	tablat,___ftmul@f1+2
 14718  013E96  0E00               	movlw	0
 14719  013E98  0101               	movlb	1	; () banked
 14720  013E9A  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14721  013E9C  0E03               	movlw	3
 14722  013E9E  0101               	movlb	1	; () banked
 14723  013EA0  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14724  013EA2  0E00               	movlw	0
 14725  013EA4  0101               	movlb	1	; () banked
 14726  013EA6  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 14727  013EA8  0E0A               	movlw	10
 14728  013EAA  0101               	movlb	1	; () banked
 14729  013EAC  6F02               	movwf	___awmod@divisor& (0+255),b
 14730  013EAE  0101               	movlb	1	; () banked
 14731  013EB0  5129               	movf	scale@scl& (0+255),w,b
 14732  013EB2  0101               	movlb	1	; () banked
 14733  013EB4  6F00               	movwf	___awmod@dividend& (0+255),b
 14734  013EB6  0101               	movlb	1	; () banked
 14735  013EB8  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 14736  013EBA  0101               	movlb	1	; () banked
 14737  013EBC  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 14738  013EBE  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 14739  013EC0  ECC6  F0CE         	call	___awmod	;wreg free
 14740  013EC4  0101               	movlb	1	; () banked
 14741  013EC6  C100  F10E         	movff	?___awmod,___wmul@multiplier
 14742  013ECA  0101               	movlb	1	; () banked
 14743  013ECC  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 14744  013ED0  ECF5  F0D9         	call	___wmul	;wreg free
 14745  013ED4  0EBD               	movlw	low __npowers_
 14746  013ED6  0101               	movlb	1	; () banked
 14747  013ED8  250E               	addwf	?___wmul& (0+255),w,b
 14748  013EDA  6EF6               	movwf	tblptrl,c
 14749  013EDC  0EFE               	movlw	high __npowers_
 14750  013EDE  0101               	movlb	1	; () banked
 14751  013EE0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14752  013EE2  6EF7               	movwf	tblptrh,c
 14753  013EE4                     	if	1	;There are 3 active tblptr bytes
 14754  013EE4  6AF8               	clrf	tblptru,c
 14755  013EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 14756  013EE8  22F8               	addwfc	tblptru,f,c
 14757  013EEA                     	endif
 14758  013EEA  0009               	tblrd		*+
 14759  013EEC  0101               	movlb	1	; () banked
 14760  013EEE  CFF5 F117          	movff	tablat,___ftmul@f2
 14761  013EF2  0009               	tblrd		*+
 14762  013EF4  0101               	movlb	1	; () banked
 14763  013EF6  CFF5 F118          	movff	tablat,___ftmul@f2+1
 14764  013EFA  000A               	tblrd		*-
 14765  013EFC  0101               	movlb	1	; () banked
 14766  013EFE  CFF5 F119          	movff	tablat,___ftmul@f2+2
 14767  013F02  ECAF  F0BB         	call	___ftmul	;wreg free
 14768  013F06  C114  F123         	movff	?___ftmul,?_scale
 14769  013F0A  C115  F124         	movff	?___ftmul+1,?_scale+1
 14770  013F0E  C116  F125         	movff	?___ftmul+2,?_scale+2
 14771  013F12  0012               	return	
 14772  013F14                     l12062:
 14773                           
 14774                           ;doprnt.c: 434: return _npowers_[scl];
 14775  013F14  0101               	movlb	1	; () banked
 14776  013F16  5129               	movf	scale@scl& (0+255),w,b
 14777  013F18  0D03               	mullw	3
 14778  013F1A  0EBD               	movlw	low __npowers_
 14779  013F1C  24F3               	addwf	prodl,w,c
 14780  013F1E  6EF6               	movwf	tblptrl,c
 14781  013F20  0EFE               	movlw	high __npowers_
 14782  013F22  20F4               	addwfc	prodh,w,c
 14783  013F24  6EF7               	movwf	tblptrh,c
 14784  013F26                     	if	1	;There are 3 active tblptr bytes
 14785  013F26  6AF8               	clrf	tblptru,c
 14786  013F28  0E00               	movlw	low (__mediumconst shr (0+16))
 14787  013F2A  22F8               	addwfc	tblptru,f,c
 14788  013F2C                     	endif
 14789  013F2C  0009               	tblrd		*+
 14790  013F2E  0101               	movlb	1	; () banked
 14791  013F30  CFF5 F123          	movff	tablat,?_scale
 14792  013F34  0009               	tblrd		*+
 14793  013F36  0101               	movlb	1	; () banked
 14794  013F38  CFF5 F124          	movff	tablat,?_scale+1
 14795  013F3C  000A               	tblrd		*-
 14796  013F3E  0101               	movlb	1	; () banked
 14797  013F40  CFF5 F125          	movff	tablat,?_scale+2
 14798  013F44  0012               	return	
 14799  013F46                     l12066:
 14800                           
 14801                           ; BSR set to: 1
 14802                           ;doprnt.c: 435: }
 14803                           ;doprnt.c: 436: if(scl>=110)
 14804  013F46  0101               	movlb	1	; () banked
 14805  013F48  5129               	movf	scale@scl& (0+255),w,b
 14806  013F4A  0A80               	xorlw	128
 14807  013F4C  0F12               	addlw	-238
 14808  013F4E  A0D8               	btfss	status,0,c
 14809  013F50  D0CF               	goto	l12074
 14810                           
 14811                           ; BSR set to: 1
 14812                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14813  013F52  0E00               	movlw	0
 14814  013F54  0101               	movlb	1	; () banked
 14815  013F56  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14816  013F58  0E03               	movlw	3
 14817  013F5A  0101               	movlb	1	; () banked
 14818  013F5C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14819  013F5E  0E00               	movlw	0
 14820  013F60  0101               	movlb	1	; () banked
 14821  013F62  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 14822  013F64  0E0A               	movlw	10
 14823  013F66  0101               	movlb	1	; () banked
 14824  013F68  6F08               	movwf	___awdiv@divisor& (0+255),b
 14825  013F6A  0E00               	movlw	0
 14826  013F6C  0101               	movlb	1	; () banked
 14827  013F6E  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 14828  013F70  0E64               	movlw	100
 14829  013F72  0101               	movlb	1	; () banked
 14830  013F74  6F02               	movwf	___awmod@divisor& (0+255),b
 14831  013F76  0101               	movlb	1	; () banked
 14832  013F78  5129               	movf	scale@scl& (0+255),w,b
 14833  013F7A  0101               	movlb	1	; () banked
 14834  013F7C  6F00               	movwf	___awmod@dividend& (0+255),b
 14835  013F7E  0101               	movlb	1	; () banked
 14836  013F80  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 14837  013F82  0101               	movlb	1	; () banked
 14838  013F84  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 14839  013F86  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 14840  013F88  ECC6  F0CE         	call	___awmod	;wreg free
 14841  013F8C  0101               	movlb	1	; () banked
 14842  013F8E  C100  F106         	movff	?___awmod,___awdiv@dividend
 14843  013F92  0101               	movlb	1	; () banked
 14844  013F94  C101  F107         	movff	?___awmod+1,___awdiv@dividend+1
 14845  013F98  ECCF  F0C9         	call	___awdiv	;wreg free
 14846  013F9C  0E09               	movlw	9
 14847  013F9E  0101               	movlb	1	; () banked
 14848  013FA0  2506               	addwf	?___awdiv& (0+255),w,b
 14849  013FA2  0101               	movlb	1	; () banked
 14850  013FA4  6F0E               	movwf	___wmul@multiplier& (0+255),b
 14851  013FA6  0E00               	movlw	0
 14852  013FA8  0101               	movlb	1	; () banked
 14853  013FAA  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 14854  013FAC  0101               	movlb	1	; () banked
 14855  013FAE  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 14856  013FB0  ECF5  F0D9         	call	___wmul	;wreg free
 14857  013FB4  0EE4               	movlw	low __powers_
 14858  013FB6  0101               	movlb	1	; () banked
 14859  013FB8  250E               	addwf	?___wmul& (0+255),w,b
 14860  013FBA  6EF6               	movwf	tblptrl,c
 14861  013FBC  0EFE               	movlw	high __powers_
 14862  013FBE  0101               	movlb	1	; () banked
 14863  013FC0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14864  013FC2  6EF7               	movwf	tblptrh,c
 14865  013FC4                     	if	1	;There are 3 active tblptr bytes
 14866  013FC4  6AF8               	clrf	tblptru,c
 14867  013FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 14868  013FC8  22F8               	addwfc	tblptru,f,c
 14869  013FCA                     	endif
 14870  013FCA  0009               	tblrd		*+
 14871  013FCC  0101               	movlb	1	; () banked
 14872  013FCE  CFF5 F117          	movff	tablat,___ftmul@f2
 14873  013FD2  0009               	tblrd		*+
 14874  013FD4  0101               	movlb	1	; () banked
 14875  013FD6  CFF5 F118          	movff	tablat,___ftmul@f2+1
 14876  013FDA  000A               	tblrd		*-
 14877  013FDC  0101               	movlb	1	; () banked
 14878  013FDE  CFF5 F119          	movff	tablat,___ftmul@f2+2
 14879  013FE2  0E00               	movlw	0
 14880  013FE4  0101               	movlb	1	; () banked
 14881  013FE6  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 14882  013FE8  0E64               	movlw	100
 14883  013FEA  0101               	movlb	1	; () banked
 14884  013FEC  6F08               	movwf	___awdiv@divisor& (0+255),b
 14885  013FEE  0101               	movlb	1	; () banked
 14886  013FF0  5129               	movf	scale@scl& (0+255),w,b
 14887  013FF2  0101               	movlb	1	; () banked
 14888  013FF4  6F06               	movwf	___awdiv@dividend& (0+255),b
 14889  013FF6  0101               	movlb	1	; () banked
 14890  013FF8  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 14891  013FFA  0101               	movlb	1	; () banked
 14892  013FFC  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 14893  013FFE  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 14894  014000  ECCF  F0C9         	call	___awdiv	;wreg free
 14895  014004  0E12               	movlw	18
 14896  014006  0101               	movlb	1	; () banked
 14897  014008  2506               	addwf	?___awdiv& (0+255),w,b
 14898  01400A  0101               	movlb	1	; () banked
 14899  01400C  6F0E               	movwf	___wmul@multiplier& (0+255),b
 14900  01400E  0E00               	movlw	0
 14901  014010  0101               	movlb	1	; () banked
 14902  014012  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 14903  014014  0101               	movlb	1	; () banked
 14904  014016  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 14905  014018  0E00               	movlw	0
 14906  01401A  0101               	movlb	1	; () banked
 14907  01401C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14908  01401E  0E03               	movlw	3
 14909  014020  0101               	movlb	1	; () banked
 14910  014022  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14911  014024  ECF5  F0D9         	call	___wmul	;wreg free
 14912  014028  0EE4               	movlw	low __powers_
 14913  01402A  0101               	movlb	1	; () banked
 14914  01402C  250E               	addwf	?___wmul& (0+255),w,b
 14915  01402E  6EF6               	movwf	tblptrl,c
 14916  014030  0EFE               	movlw	high __powers_
 14917  014032  0101               	movlb	1	; () banked
 14918  014034  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14919  014036  6EF7               	movwf	tblptrh,c
 14920  014038                     	if	1	;There are 3 active tblptr bytes
 14921  014038  6AF8               	clrf	tblptru,c
 14922  01403A  0E00               	movlw	low (__mediumconst shr (0+16))
 14923  01403C  22F8               	addwfc	tblptru,f,c
 14924  01403E                     	endif
 14925  01403E  0009               	tblrd		*+
 14926  014040  0101               	movlb	1	; () banked
 14927  014042  CFF5 F114          	movff	tablat,___ftmul@f1
 14928  014046  0009               	tblrd		*+
 14929  014048  0101               	movlb	1	; () banked
 14930  01404A  CFF5 F115          	movff	tablat,___ftmul@f1+1
 14931  01404E  000A               	tblrd		*-
 14932  014050  0101               	movlb	1	; () banked
 14933  014052  CFF5 F116          	movff	tablat,___ftmul@f1+2
 14934  014056  ECAF  F0BB         	call	___ftmul	;wreg free
 14935  01405A  C114  F126         	movff	?___ftmul,_scale$10826
 14936  01405E  C115  F127         	movff	?___ftmul+1,_scale$10826+1
 14937  014062  C116  F128         	movff	?___ftmul+2,_scale$10826+2
 14938                           
 14939                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 14940  014066  C126  F114         	movff	_scale$10826,___ftmul@f1
 14941  01406A  C127  F115         	movff	_scale$10826+1,___ftmul@f1+1
 14942  01406E  C128  F116         	movff	_scale$10826+2,___ftmul@f1+2
 14943  014072  0E00               	movlw	0
 14944  014074  0101               	movlb	1	; () banked
 14945  014076  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14946  014078  0E03               	movlw	3
 14947  01407A  0101               	movlb	1	; () banked
 14948  01407C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 14949  01407E  0E00               	movlw	0
 14950  014080  0101               	movlb	1	; () banked
 14951  014082  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 14952  014084  0E0A               	movlw	10
 14953  014086  0101               	movlb	1	; () banked
 14954  014088  6F02               	movwf	___awmod@divisor& (0+255),b
 14955  01408A  0101               	movlb	1	; () banked
 14956  01408C  5129               	movf	scale@scl& (0+255),w,b
 14957  01408E  0101               	movlb	1	; () banked
 14958  014090  6F00               	movwf	___awmod@dividend& (0+255),b
 14959  014092  0101               	movlb	1	; () banked
 14960  014094  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 14961  014096  0101               	movlb	1	; () banked
 14962  014098  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 14963  01409A  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 14964  01409C  ECC6  F0CE         	call	___awmod	;wreg free
 14965  0140A0  0101               	movlb	1	; () banked
 14966  0140A2  C100  F10E         	movff	?___awmod,___wmul@multiplier
 14967  0140A6  0101               	movlb	1	; () banked
 14968  0140A8  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 14969  0140AC  ECF5  F0D9         	call	___wmul	;wreg free
 14970  0140B0  0EE4               	movlw	low __powers_
 14971  0140B2  0101               	movlb	1	; () banked
 14972  0140B4  250E               	addwf	?___wmul& (0+255),w,b
 14973  0140B6  6EF6               	movwf	tblptrl,c
 14974  0140B8  0EFE               	movlw	high __powers_
 14975  0140BA  0101               	movlb	1	; () banked
 14976  0140BC  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 14977  0140BE  6EF7               	movwf	tblptrh,c
 14978  0140C0                     	if	1	;There are 3 active tblptr bytes
 14979  0140C0  6AF8               	clrf	tblptru,c
 14980  0140C2  0E00               	movlw	low (__mediumconst shr (0+16))
 14981  0140C4  22F8               	addwfc	tblptru,f,c
 14982  0140C6                     	endif
 14983  0140C6  0009               	tblrd		*+
 14984  0140C8  0101               	movlb	1	; () banked
 14985  0140CA  CFF5 F117          	movff	tablat,___ftmul@f2
 14986  0140CE  0009               	tblrd		*+
 14987  0140D0  0101               	movlb	1	; () banked
 14988  0140D2  CFF5 F118          	movff	tablat,___ftmul@f2+1
 14989  0140D6  000A               	tblrd		*-
 14990  0140D8  0101               	movlb	1	; () banked
 14991  0140DA  CFF5 F119          	movff	tablat,___ftmul@f2+2
 14992  0140DE  ECAF  F0BB         	call	___ftmul	;wreg free
 14993  0140E2  C114  F123         	movff	?___ftmul,?_scale
 14994  0140E6  C115  F124         	movff	?___ftmul+1,?_scale+1
 14995  0140EA  C116  F125         	movff	?___ftmul+2,?_scale+2
 14996  0140EE  0012               	return	
 14997  0140F0                     l12074:
 14998                           
 14999                           ;doprnt.c: 438: else if(scl > 10)
 15000  0140F0  0101               	movlb	1	; () banked
 15001  0140F2  5129               	movf	scale@scl& (0+255),w,b
 15002  0140F4  0A80               	xorlw	128
 15003  0140F6  0F75               	addlw	-139
 15004  0140F8  A0D8               	btfss	status,0,c
 15005  0140FA  D079               	goto	l12080
 15006                           
 15007                           ; BSR set to: 1
 15008                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 15009  0140FC  0E00               	movlw	0
 15010  0140FE  0101               	movlb	1	; () banked
 15011  014100  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 15012  014102  0E0A               	movlw	10
 15013  014104  0101               	movlb	1	; () banked
 15014  014106  6F08               	movwf	___awdiv@divisor& (0+255),b
 15015  014108  0101               	movlb	1	; () banked
 15016  01410A  5129               	movf	scale@scl& (0+255),w,b
 15017  01410C  0101               	movlb	1	; () banked
 15018  01410E  6F06               	movwf	___awdiv@dividend& (0+255),b
 15019  014110  0101               	movlb	1	; () banked
 15020  014112  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 15021  014114  0101               	movlb	1	; () banked
 15022  014116  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 15023  014118  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15024  01411A  ECCF  F0C9         	call	___awdiv	;wreg free
 15025  01411E  0E09               	movlw	9
 15026  014120  0101               	movlb	1	; () banked
 15027  014122  2506               	addwf	?___awdiv& (0+255),w,b
 15028  014124  0101               	movlb	1	; () banked
 15029  014126  6F0E               	movwf	___wmul@multiplier& (0+255),b
 15030  014128  0E00               	movlw	0
 15031  01412A  0101               	movlb	1	; () banked
 15032  01412C  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 15033  01412E  0101               	movlb	1	; () banked
 15034  014130  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 15035  014132  0E00               	movlw	0
 15036  014134  0101               	movlb	1	; () banked
 15037  014136  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15038  014138  0E03               	movlw	3
 15039  01413A  0101               	movlb	1	; () banked
 15040  01413C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15041  01413E  ECF5  F0D9         	call	___wmul	;wreg free
 15042  014142  0EE4               	movlw	low __powers_
 15043  014144  0101               	movlb	1	; () banked
 15044  014146  250E               	addwf	?___wmul& (0+255),w,b
 15045  014148  6EF6               	movwf	tblptrl,c
 15046  01414A  0EFE               	movlw	high __powers_
 15047  01414C  0101               	movlb	1	; () banked
 15048  01414E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15049  014150  6EF7               	movwf	tblptrh,c
 15050  014152                     	if	1	;There are 3 active tblptr bytes
 15051  014152  6AF8               	clrf	tblptru,c
 15052  014154  0E00               	movlw	low (__mediumconst shr (0+16))
 15053  014156  22F8               	addwfc	tblptru,f,c
 15054  014158                     	endif
 15055  014158  0009               	tblrd		*+
 15056  01415A  0101               	movlb	1	; () banked
 15057  01415C  CFF5 F114          	movff	tablat,___ftmul@f1
 15058  014160  0009               	tblrd		*+
 15059  014162  0101               	movlb	1	; () banked
 15060  014164  CFF5 F115          	movff	tablat,___ftmul@f1+1
 15061  014168  000A               	tblrd		*-
 15062  01416A  0101               	movlb	1	; () banked
 15063  01416C  CFF5 F116          	movff	tablat,___ftmul@f1+2
 15064  014170  0E00               	movlw	0
 15065  014172  0101               	movlb	1	; () banked
 15066  014174  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15067  014176  0E03               	movlw	3
 15068  014178  0101               	movlb	1	; () banked
 15069  01417A  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15070  01417C  0E00               	movlw	0
 15071  01417E  0101               	movlb	1	; () banked
 15072  014180  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 15073  014182  0E0A               	movlw	10
 15074  014184  0101               	movlb	1	; () banked
 15075  014186  6F02               	movwf	___awmod@divisor& (0+255),b
 15076  014188  0101               	movlb	1	; () banked
 15077  01418A  5129               	movf	scale@scl& (0+255),w,b
 15078  01418C  0101               	movlb	1	; () banked
 15079  01418E  6F00               	movwf	___awmod@dividend& (0+255),b
 15080  014190  0101               	movlb	1	; () banked
 15081  014192  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 15082  014194  0101               	movlb	1	; () banked
 15083  014196  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 15084  014198  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 15085  01419A  ECC6  F0CE         	call	___awmod	;wreg free
 15086  01419E  0101               	movlb	1	; () banked
 15087  0141A0  C100  F10E         	movff	?___awmod,___wmul@multiplier
 15088  0141A4  0101               	movlb	1	; () banked
 15089  0141A6  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 15090  0141AA  ECF5  F0D9         	call	___wmul	;wreg free
 15091  0141AE  0EE4               	movlw	low __powers_
 15092  0141B0  0101               	movlb	1	; () banked
 15093  0141B2  250E               	addwf	?___wmul& (0+255),w,b
 15094  0141B4  6EF6               	movwf	tblptrl,c
 15095  0141B6  0EFE               	movlw	high __powers_
 15096  0141B8  0101               	movlb	1	; () banked
 15097  0141BA  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15098  0141BC  6EF7               	movwf	tblptrh,c
 15099  0141BE                     	if	1	;There are 3 active tblptr bytes
 15100  0141BE  6AF8               	clrf	tblptru,c
 15101  0141C0  0E00               	movlw	low (__mediumconst shr (0+16))
 15102  0141C2  22F8               	addwfc	tblptru,f,c
 15103  0141C4                     	endif
 15104  0141C4  0009               	tblrd		*+
 15105  0141C6  0101               	movlb	1	; () banked
 15106  0141C8  CFF5 F117          	movff	tablat,___ftmul@f2
 15107  0141CC  0009               	tblrd		*+
 15108  0141CE  0101               	movlb	1	; () banked
 15109  0141D0  CFF5 F118          	movff	tablat,___ftmul@f2+1
 15110  0141D4  000A               	tblrd		*-
 15111  0141D6  0101               	movlb	1	; () banked
 15112  0141D8  CFF5 F119          	movff	tablat,___ftmul@f2+2
 15113  0141DC  ECAF  F0BB         	call	___ftmul	;wreg free
 15114  0141E0  C114  F123         	movff	?___ftmul,?_scale
 15115  0141E4  C115  F124         	movff	?___ftmul+1,?_scale+1
 15116  0141E8  C116  F125         	movff	?___ftmul+2,?_scale+2
 15117  0141EC  0012               	return	
 15118  0141EE                     l12080:
 15119                           
 15120                           ;doprnt.c: 440: return _powers_[scl];
 15121  0141EE  0101               	movlb	1	; () banked
 15122  0141F0  5129               	movf	scale@scl& (0+255),w,b
 15123  0141F2  0D03               	mullw	3
 15124  0141F4  0EE4               	movlw	low __powers_
 15125  0141F6  24F3               	addwf	prodl,w,c
 15126  0141F8  6EF6               	movwf	tblptrl,c
 15127  0141FA  0EFE               	movlw	high __powers_
 15128  0141FC  20F4               	addwfc	prodh,w,c
 15129  0141FE  6EF7               	movwf	tblptrh,c
 15130  014200                     	if	1	;There are 3 active tblptr bytes
 15131  014200  6AF8               	clrf	tblptru,c
 15132  014202  0E00               	movlw	low (__mediumconst shr (0+16))
 15133  014204  22F8               	addwfc	tblptru,f,c
 15134  014206                     	endif
 15135  014206  0009               	tblrd		*+
 15136  014208  0101               	movlb	1	; () banked
 15137  01420A  CFF5 F123          	movff	tablat,?_scale
 15138  01420E  0009               	tblrd		*+
 15139  014210  0101               	movlb	1	; () banked
 15140  014212  CFF5 F124          	movff	tablat,?_scale+1
 15141  014216  000A               	tblrd		*-
 15142  014218  0101               	movlb	1	; () banked
 15143  01421A  CFF5 F125          	movff	tablat,?_scale+2
 15144  01421E  0012               	return	
 15145  014220                     __end_of_scale:
 15146                           	opt stack 0
 15147                           tblptru	equ	0xFF8
 15148                           tblptrh	equ	0xFF7
 15149                           tblptrl	equ	0xFF6
 15150                           tablat	equ	0xFF5
 15151                           prodh	equ	0xFF4
 15152                           prodl	equ	0xFF3
 15153                           intcon	equ	0xFF2
 15154                           postinc0	equ	0xFEE
 15155                           wreg	equ	0xFE8
 15156                           postdec1	equ	0xFE5
 15157                           fsr1h	equ	0xFE2
 15158                           fsr1l	equ	0xFE1
 15159                           indf2	equ	0xFDF
 15160                           postinc2	equ	0xFDE
 15161                           postdec2	equ	0xFDD
 15162                           fsr2h	equ	0xFDA
 15163                           fsr2l	equ	0xFD9
 15164                           status	equ	0xFD8
 15165                           
 15166 ;; *************** function _isdigit *****************
 15167 ;; Defined at:
 15168 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;  c               1    wreg     unsigned char 
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;  c               1    2[BANK1 ] unsigned char 
 15173 ;; Return value:  Size  Location     Type
 15174 ;;		None               void
 15175 ;; Registers used:
 15176 ;;		wreg, status,2, status,0
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15183 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15184 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15186 ;;Total ram usage:        3 bytes
 15187 ;; Hardware stack levels used:    1
 15188 ;; Hardware stack levels required when called:   10
 15189 ;; This function calls:
 15190 ;;		Nothing
 15191 ;; This function is called by:
 15192 ;;		_sprintf
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196                           	psect	text7
 15197  01B5E8                     __ptext7:
 15198                           	opt stack 0
 15199  01B5E8                     _isdigit:
 15200                           	opt stack 17
 15201                           
 15202                           ;incstack = 0
 15203                           ;isdigit@c stored from wreg
 15204  01B5E8  0101               	movlb	1	; () banked
 15205  01B5EA  6F02               	movwf	isdigit@c& (0+255),b
 15206                           
 15207                           ; BSR set to: 1
 15208  01B5EC  0E00               	movlw	0
 15209  01B5EE  0101               	movlb	1	; () banked
 15210  01B5F0  6F01               	movwf	_isdigit$10234& (0+255),b
 15211                           
 15212                           ; BSR set to: 1
 15213  01B5F2  0E3A               	movlw	58
 15214  01B5F4  0101               	movlb	1	; () banked
 15215  01B5F6  5D02               	subwf	isdigit@c& (0+255),w,b
 15216  01B5F8  B0D8               	btfsc	status,0,c
 15217  01B5FA  D007               	goto	l12092
 15218                           
 15219                           ; BSR set to: 1
 15220  01B5FC  0E2F               	movlw	47
 15221  01B5FE  0101               	movlb	1	; () banked
 15222  01B600  6502               	cpfsgt	isdigit@c& (0+255),b
 15223  01B602  D003               	goto	l12092
 15224                           
 15225                           ; BSR set to: 1
 15226  01B604  0E01               	movlw	1
 15227  01B606  0101               	movlb	1	; () banked
 15228  01B608  6F01               	movwf	_isdigit$10234& (0+255),b
 15229  01B60A                     l12092:
 15230                           
 15231                           ; BSR set to: 1
 15232  01B60A  C101  F100         	movff	_isdigit$10234,??_isdigit
 15233  01B60E  0101               	movlb	1	; () banked
 15234  01B610  3100               	rrcf	??_isdigit& (0+255),w,b
 15235  01B612  0012               	return	
 15236  01B614                     __end_of_isdigit:
 15237                           	opt stack 0
 15238                           tblptru	equ	0xFF8
 15239                           tblptrh	equ	0xFF7
 15240                           tblptrl	equ	0xFF6
 15241                           tablat	equ	0xFF5
 15242                           prodh	equ	0xFF4
 15243                           prodl	equ	0xFF3
 15244                           intcon	equ	0xFF2
 15245                           postinc0	equ	0xFEE
 15246                           wreg	equ	0xFE8
 15247                           postdec1	equ	0xFE5
 15248                           fsr1h	equ	0xFE2
 15249                           fsr1l	equ	0xFE1
 15250                           indf2	equ	0xFDF
 15251                           postinc2	equ	0xFDE
 15252                           postdec2	equ	0xFDD
 15253                           fsr2h	equ	0xFDA
 15254                           fsr2l	equ	0xFD9
 15255                           status	equ	0xFD8
 15256                           
 15257 ;; *************** function _fround *****************
 15258 ;; Defined at:
 15259 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 15260 ;; Parameters:    Size  Location     Type
 15261 ;;  prec            1    wreg     unsigned char 
 15262 ;; Auto vars:     Size  Location     Type
 15263 ;;  prec            1   44[BANK1 ] unsigned char 
 15264 ;; Return value:  Size  Location     Type
 15265 ;;                  3   35[BANK1 ] unsigned char 
 15266 ;; Registers used:
 15267 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15268 ;; Tracked objects:
 15269 ;;		On entry : 0/0
 15270 ;;		On exit  : 0/0
 15271 ;;		Unchanged: 0/0
 15272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15273 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15274 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15276 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15277 ;;Total ram usage:       10 bytes
 15278 ;; Hardware stack levels used:    1
 15279 ;; Hardware stack levels required when called:   12
 15280 ;; This function calls:
 15281 ;;		___awdiv
 15282 ;;		___awmod
 15283 ;;		___ftmul
 15284 ;;		___wmul
 15285 ;; This function is called by:
 15286 ;;		_sprintf
 15287 ;; This function uses a non-reentrant model
 15288 ;;
 15289                           
 15290                           	psect	text8
 15291  01471E                     __ptext8:
 15292                           	opt stack 0
 15293  01471E                     _fround:
 15294                           	opt stack 15
 15295                           
 15296                           ; BSR set to: 1
 15297                           ;incstack = 0
 15298                           ;fround@prec stored from wreg
 15299  01471E  0101               	movlb	1	; () banked
 15300  014720  6F2C               	movwf	fround@prec& (0+255),b
 15301                           
 15302                           ; BSR set to: 1
 15303                           ;doprnt.c: 413: if(prec>=110)
 15304  014722  0E6D               	movlw	109
 15305  014724  0101               	movlb	1	; () banked
 15306  014726  652C               	cpfsgt	fround@prec& (0+255),b
 15307  014728  D0DA               	goto	l12034
 15308                           
 15309                           ; BSR set to: 1
 15310                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15311  01472A  0E00               	movlw	0
 15312  01472C  0101               	movlb	1	; () banked
 15313  01472E  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15314  014730  0E03               	movlw	3
 15315  014732  0101               	movlb	1	; () banked
 15316  014734  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15317  014736  0E00               	movlw	0
 15318  014738  0101               	movlb	1	; () banked
 15319  01473A  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 15320  01473C  0E0A               	movlw	10
 15321  01473E  0101               	movlb	1	; () banked
 15322  014740  6F08               	movwf	___awdiv@divisor& (0+255),b
 15323  014742  0E00               	movlw	0
 15324  014744  0101               	movlb	1	; () banked
 15325  014746  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 15326  014748  0E64               	movlw	100
 15327  01474A  0101               	movlb	1	; () banked
 15328  01474C  6F02               	movwf	___awmod@divisor& (0+255),b
 15329  01474E  0101               	movlb	1	; () banked
 15330  014750  C12C  F100         	movff	fround@prec,___awmod@dividend
 15331  014754  0101               	movlb	1	; () banked
 15332  014756  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 15333  014758  ECC6  F0CE         	call	___awmod	;wreg free
 15334  01475C  0101               	movlb	1	; () banked
 15335  01475E  C100  F106         	movff	?___awmod,___awdiv@dividend
 15336  014762  0101               	movlb	1	; () banked
 15337  014764  C101  F107         	movff	?___awmod+1,___awdiv@dividend+1
 15338  014768  ECCF  F0C9         	call	___awdiv	;wreg free
 15339  01476C  0E09               	movlw	9
 15340  01476E  0101               	movlb	1	; () banked
 15341  014770  2506               	addwf	?___awdiv& (0+255),w,b
 15342  014772  0101               	movlb	1	; () banked
 15343  014774  6F0E               	movwf	___wmul@multiplier& (0+255),b
 15344  014776  0E00               	movlw	0
 15345  014778  0101               	movlb	1	; () banked
 15346  01477A  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 15347  01477C  0101               	movlb	1	; () banked
 15348  01477E  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 15349  014780  ECF5  F0D9         	call	___wmul	;wreg free
 15350  014784  0EBD               	movlw	low __npowers_
 15351  014786  0101               	movlb	1	; () banked
 15352  014788  250E               	addwf	?___wmul& (0+255),w,b
 15353  01478A  6EF6               	movwf	tblptrl,c
 15354  01478C  0EFE               	movlw	high __npowers_
 15355  01478E  0101               	movlb	1	; () banked
 15356  014790  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15357  014792  6EF7               	movwf	tblptrh,c
 15358  014794                     	if	1	;There are 3 active tblptr bytes
 15359  014794  6AF8               	clrf	tblptru,c
 15360  014796  0E00               	movlw	low (__mediumconst shr (0+16))
 15361  014798  22F8               	addwfc	tblptru,f,c
 15362  01479A                     	endif
 15363  01479A  0009               	tblrd		*+
 15364  01479C  0101               	movlb	1	; () banked
 15365  01479E  CFF5 F117          	movff	tablat,___ftmul@f2
 15366  0147A2  0009               	tblrd		*+
 15367  0147A4  0101               	movlb	1	; () banked
 15368  0147A6  CFF5 F118          	movff	tablat,___ftmul@f2+1
 15369  0147AA  000A               	tblrd		*-
 15370  0147AC  0101               	movlb	1	; () banked
 15371  0147AE  CFF5 F119          	movff	tablat,___ftmul@f2+2
 15372  0147B2  0E00               	movlw	0
 15373  0147B4  0101               	movlb	1	; () banked
 15374  0147B6  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 15375  0147B8  0E64               	movlw	100
 15376  0147BA  0101               	movlb	1	; () banked
 15377  0147BC  6F08               	movwf	___awdiv@divisor& (0+255),b
 15378  0147BE  0101               	movlb	1	; () banked
 15379  0147C0  C12C  F106         	movff	fround@prec,___awdiv@dividend
 15380  0147C4  0101               	movlb	1	; () banked
 15381  0147C6  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 15382  0147C8  ECCF  F0C9         	call	___awdiv	;wreg free
 15383  0147CC  0E12               	movlw	18
 15384  0147CE  0101               	movlb	1	; () banked
 15385  0147D0  2506               	addwf	?___awdiv& (0+255),w,b
 15386  0147D2  0101               	movlb	1	; () banked
 15387  0147D4  6F0E               	movwf	___wmul@multiplier& (0+255),b
 15388  0147D6  0E00               	movlw	0
 15389  0147D8  0101               	movlb	1	; () banked
 15390  0147DA  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 15391  0147DC  0101               	movlb	1	; () banked
 15392  0147DE  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 15393  0147E0  0E00               	movlw	0
 15394  0147E2  0101               	movlb	1	; () banked
 15395  0147E4  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15396  0147E6  0E03               	movlw	3
 15397  0147E8  0101               	movlb	1	; () banked
 15398  0147EA  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15399  0147EC  ECF5  F0D9         	call	___wmul	;wreg free
 15400  0147F0  0EBD               	movlw	low __npowers_
 15401  0147F2  0101               	movlb	1	; () banked
 15402  0147F4  250E               	addwf	?___wmul& (0+255),w,b
 15403  0147F6  6EF6               	movwf	tblptrl,c
 15404  0147F8  0EFE               	movlw	high __npowers_
 15405  0147FA  0101               	movlb	1	; () banked
 15406  0147FC  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15407  0147FE  6EF7               	movwf	tblptrh,c
 15408  014800                     	if	1	;There are 3 active tblptr bytes
 15409  014800  6AF8               	clrf	tblptru,c
 15410  014802  0E00               	movlw	low (__mediumconst shr (0+16))
 15411  014804  22F8               	addwfc	tblptru,f,c
 15412  014806                     	endif
 15413  014806  0009               	tblrd		*+
 15414  014808  0101               	movlb	1	; () banked
 15415  01480A  CFF5 F114          	movff	tablat,___ftmul@f1
 15416  01480E  0009               	tblrd		*+
 15417  014810  0101               	movlb	1	; () banked
 15418  014812  CFF5 F115          	movff	tablat,___ftmul@f1+1
 15419  014816  000A               	tblrd		*-
 15420  014818  0101               	movlb	1	; () banked
 15421  01481A  CFF5 F116          	movff	tablat,___ftmul@f1+2
 15422  01481E  ECAF  F0BB         	call	___ftmul	;wreg free
 15423  014822  C114  F129         	movff	?___ftmul,_fround$10824
 15424  014826  C115  F12A         	movff	?___ftmul+1,_fround$10824+1
 15425  01482A  C116  F12B         	movff	?___ftmul+2,_fround$10824+2
 15426                           
 15427                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15428  01482E  0E00               	movlw	0
 15429  014830  0101               	movlb	1	; () banked
 15430  014832  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15431  014834  0E03               	movlw	3
 15432  014836  0101               	movlb	1	; () banked
 15433  014838  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15434  01483A  0E00               	movlw	0
 15435  01483C  0101               	movlb	1	; () banked
 15436  01483E  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 15437  014840  0E0A               	movlw	10
 15438  014842  0101               	movlb	1	; () banked
 15439  014844  6F02               	movwf	___awmod@divisor& (0+255),b
 15440  014846  0101               	movlb	1	; () banked
 15441  014848  C12C  F100         	movff	fround@prec,___awmod@dividend
 15442  01484C  0101               	movlb	1	; () banked
 15443  01484E  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 15444  014850  ECC6  F0CE         	call	___awmod	;wreg free
 15445  014854  0101               	movlb	1	; () banked
 15446  014856  C100  F10E         	movff	?___awmod,___wmul@multiplier
 15447  01485A  0101               	movlb	1	; () banked
 15448  01485C  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 15449  014860  ECF5  F0D9         	call	___wmul	;wreg free
 15450  014864  0EBD               	movlw	low __npowers_
 15451  014866  0101               	movlb	1	; () banked
 15452  014868  250E               	addwf	?___wmul& (0+255),w,b
 15453  01486A  6EF6               	movwf	tblptrl,c
 15454  01486C  0EFE               	movlw	high __npowers_
 15455  01486E  0101               	movlb	1	; () banked
 15456  014870  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15457  014872  6EF7               	movwf	tblptrh,c
 15458  014874                     	if	1	;There are 3 active tblptr bytes
 15459  014874  6AF8               	clrf	tblptru,c
 15460  014876  0E00               	movlw	low (__mediumconst shr (0+16))
 15461  014878  22F8               	addwfc	tblptru,f,c
 15462  01487A                     	endif
 15463  01487A  0009               	tblrd		*+
 15464  01487C  0101               	movlb	1	; () banked
 15465  01487E  CFF5 F117          	movff	tablat,___ftmul@f2
 15466  014882  0009               	tblrd		*+
 15467  014884  0101               	movlb	1	; () banked
 15468  014886  CFF5 F118          	movff	tablat,___ftmul@f2+1
 15469  01488A  000A               	tblrd		*-
 15470  01488C  0101               	movlb	1	; () banked
 15471  01488E  CFF5 F119          	movff	tablat,___ftmul@f2+2
 15472  014892  C129  F114         	movff	_fround$10824,___ftmul@f1
 15473  014896  C12A  F115         	movff	_fround$10824+1,___ftmul@f1+1
 15474  01489A  C12B  F116         	movff	_fround$10824+2,___ftmul@f1+2
 15475  01489E  ECAF  F0BB         	call	___ftmul	;wreg free
 15476  0148A2  C114  F126         	movff	?___ftmul,_fround$10825
 15477  0148A6  C115  F127         	movff	?___ftmul+1,_fround$10825+1
 15478  0148AA  C116  F128         	movff	?___ftmul+2,_fround$10825+2
 15479                           
 15480                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 15481  0148AE  C126  F114         	movff	_fround$10825,___ftmul@f1
 15482  0148B2  C127  F115         	movff	_fround$10825+1,___ftmul@f1+1
 15483  0148B6  C128  F116         	movff	_fround$10825+2,___ftmul@f1+2
 15484  0148BA  0E00               	movlw	0
 15485  0148BC  0101               	movlb	1	; () banked
 15486  0148BE  6F17               	movwf	___ftmul@f2& (0+255),b
 15487  0148C0  0E00               	movlw	0
 15488  0148C2  0101               	movlb	1	; () banked
 15489  0148C4  6F18               	movwf	(___ftmul@f2+1)& (0+255),b
 15490  0148C6  0E3F               	movlw	63
 15491  0148C8  0101               	movlb	1	; () banked
 15492  0148CA  6F19               	movwf	(___ftmul@f2+2)& (0+255),b
 15493  0148CC  ECAF  F0BB         	call	___ftmul	;wreg free
 15494  0148D0  C114  F123         	movff	?___ftmul,?_fround
 15495  0148D4  C115  F124         	movff	?___ftmul+1,?_fround+1
 15496  0148D8  C116  F125         	movff	?___ftmul+2,?_fround+2
 15497  0148DC  0012               	return	
 15498  0148DE                     l12034:
 15499                           
 15500                           ;doprnt.c: 415: else if(prec > 10)
 15501  0148DE  0E0A               	movlw	10
 15502  0148E0  0101               	movlb	1	; () banked
 15503  0148E2  652C               	cpfsgt	fround@prec& (0+255),b
 15504  0148E4  D088               	goto	l12042
 15505                           
 15506                           ; BSR set to: 1
 15507                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15508  0148E6  0E00               	movlw	0
 15509  0148E8  0101               	movlb	1	; () banked
 15510  0148EA  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15511  0148EC  0E03               	movlw	3
 15512  0148EE  0101               	movlb	1	; () banked
 15513  0148F0  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15514  0148F2  0E00               	movlw	0
 15515  0148F4  0101               	movlb	1	; () banked
 15516  0148F6  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 15517  0148F8  0E0A               	movlw	10
 15518  0148FA  0101               	movlb	1	; () banked
 15519  0148FC  6F02               	movwf	___awmod@divisor& (0+255),b
 15520  0148FE  0101               	movlb	1	; () banked
 15521  014900  C12C  F100         	movff	fround@prec,___awmod@dividend
 15522  014904  0101               	movlb	1	; () banked
 15523  014906  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 15524  014908  ECC6  F0CE         	call	___awmod	;wreg free
 15525  01490C  0101               	movlb	1	; () banked
 15526  01490E  C100  F10E         	movff	?___awmod,___wmul@multiplier
 15527  014912  0101               	movlb	1	; () banked
 15528  014914  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 15529  014918  ECF5  F0D9         	call	___wmul	;wreg free
 15530  01491C  0EBD               	movlw	low __npowers_
 15531  01491E  0101               	movlb	1	; () banked
 15532  014920  250E               	addwf	?___wmul& (0+255),w,b
 15533  014922  6EF6               	movwf	tblptrl,c
 15534  014924  0EFE               	movlw	high __npowers_
 15535  014926  0101               	movlb	1	; () banked
 15536  014928  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15537  01492A  6EF7               	movwf	tblptrh,c
 15538  01492C                     	if	1	;There are 3 active tblptr bytes
 15539  01492C  6AF8               	clrf	tblptru,c
 15540  01492E  0E00               	movlw	low (__mediumconst shr (0+16))
 15541  014930  22F8               	addwfc	tblptru,f,c
 15542  014932                     	endif
 15543  014932  0009               	tblrd		*+
 15544  014934  0101               	movlb	1	; () banked
 15545  014936  CFF5 F117          	movff	tablat,___ftmul@f2
 15546  01493A  0009               	tblrd		*+
 15547  01493C  0101               	movlb	1	; () banked
 15548  01493E  CFF5 F118          	movff	tablat,___ftmul@f2+1
 15549  014942  000A               	tblrd		*-
 15550  014944  0101               	movlb	1	; () banked
 15551  014946  CFF5 F119          	movff	tablat,___ftmul@f2+2
 15552  01494A  0E00               	movlw	0
 15553  01494C  0101               	movlb	1	; () banked
 15554  01494E  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 15555  014950  0E0A               	movlw	10
 15556  014952  0101               	movlb	1	; () banked
 15557  014954  6F08               	movwf	___awdiv@divisor& (0+255),b
 15558  014956  0101               	movlb	1	; () banked
 15559  014958  C12C  F106         	movff	fround@prec,___awdiv@dividend
 15560  01495C  0101               	movlb	1	; () banked
 15561  01495E  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 15562  014960  ECCF  F0C9         	call	___awdiv	;wreg free
 15563  014964  0E09               	movlw	9
 15564  014966  0101               	movlb	1	; () banked
 15565  014968  2506               	addwf	?___awdiv& (0+255),w,b
 15566  01496A  0101               	movlb	1	; () banked
 15567  01496C  6F0E               	movwf	___wmul@multiplier& (0+255),b
 15568  01496E  0E00               	movlw	0
 15569  014970  0101               	movlb	1	; () banked
 15570  014972  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 15571  014974  0101               	movlb	1	; () banked
 15572  014976  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 15573  014978  0E00               	movlw	0
 15574  01497A  0101               	movlb	1	; () banked
 15575  01497C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15576  01497E  0E03               	movlw	3
 15577  014980  0101               	movlb	1	; () banked
 15578  014982  6F10               	movwf	___wmul@multiplicand& (0+255),b
 15579  014984  ECF5  F0D9         	call	___wmul	;wreg free
 15580  014988  0EBD               	movlw	low __npowers_
 15581  01498A  0101               	movlb	1	; () banked
 15582  01498C  250E               	addwf	?___wmul& (0+255),w,b
 15583  01498E  6EF6               	movwf	tblptrl,c
 15584  014990  0EFE               	movlw	high __npowers_
 15585  014992  0101               	movlb	1	; () banked
 15586  014994  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 15587  014996  6EF7               	movwf	tblptrh,c
 15588  014998                     	if	1	;There are 3 active tblptr bytes
 15589  014998  6AF8               	clrf	tblptru,c
 15590  01499A  0E00               	movlw	low (__mediumconst shr (0+16))
 15591  01499C  22F8               	addwfc	tblptru,f,c
 15592  01499E                     	endif
 15593  01499E  0009               	tblrd		*+
 15594  0149A0  0101               	movlb	1	; () banked
 15595  0149A2  CFF5 F114          	movff	tablat,___ftmul@f1
 15596  0149A6  0009               	tblrd		*+
 15597  0149A8  0101               	movlb	1	; () banked
 15598  0149AA  CFF5 F115          	movff	tablat,___ftmul@f1+1
 15599  0149AE  000A               	tblrd		*-
 15600  0149B0  0101               	movlb	1	; () banked
 15601  0149B2  CFF5 F116          	movff	tablat,___ftmul@f1+2
 15602  0149B6  ECAF  F0BB         	call	___ftmul	;wreg free
 15603  0149BA  C114  F129         	movff	?___ftmul,_fround$10824
 15604  0149BE  C115  F12A         	movff	?___ftmul+1,_fround$10824+1
 15605  0149C2  C116  F12B         	movff	?___ftmul+2,_fround$10824+2
 15606                           
 15607                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 15608  0149C6  C129  F114         	movff	_fround$10824,___ftmul@f1
 15609  0149CA  C12A  F115         	movff	_fround$10824+1,___ftmul@f1+1
 15610  0149CE  C12B  F116         	movff	_fround$10824+2,___ftmul@f1+2
 15611  0149D2  0E00               	movlw	0
 15612  0149D4  0101               	movlb	1	; () banked
 15613  0149D6  6F17               	movwf	___ftmul@f2& (0+255),b
 15614  0149D8  0E00               	movlw	0
 15615  0149DA  0101               	movlb	1	; () banked
 15616  0149DC  6F18               	movwf	(___ftmul@f2+1)& (0+255),b
 15617  0149DE  0E3F               	movlw	63
 15618  0149E0  0101               	movlb	1	; () banked
 15619  0149E2  6F19               	movwf	(___ftmul@f2+2)& (0+255),b
 15620  0149E4  ECAF  F0BB         	call	___ftmul	;wreg free
 15621  0149E8  C114  F123         	movff	?___ftmul,?_fround
 15622  0149EC  C115  F124         	movff	?___ftmul+1,?_fround+1
 15623  0149F0  C116  F125         	movff	?___ftmul+2,?_fround+2
 15624  0149F4  0012               	return	
 15625  0149F6                     l12042:
 15626                           
 15627                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 15628  0149F6  0101               	movlb	1	; () banked
 15629  0149F8  512C               	movf	fround@prec& (0+255),w,b
 15630  0149FA  0D03               	mullw	3
 15631  0149FC  0EBD               	movlw	low __npowers_
 15632  0149FE  24F3               	addwf	prodl,w,c
 15633  014A00  6EF6               	movwf	tblptrl,c
 15634  014A02  0EFE               	movlw	high __npowers_
 15635  014A04  20F4               	addwfc	prodh,w,c
 15636  014A06  6EF7               	movwf	tblptrh,c
 15637  014A08                     	if	1	;There are 3 active tblptr bytes
 15638  014A08  6AF8               	clrf	tblptru,c
 15639  014A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 15640  014A0C  22F8               	addwfc	tblptru,f,c
 15641  014A0E                     	endif
 15642  014A0E  0009               	tblrd		*+
 15643  014A10  0101               	movlb	1	; () banked
 15644  014A12  CFF5 F114          	movff	tablat,___ftmul@f1
 15645  014A16  0009               	tblrd		*+
 15646  014A18  0101               	movlb	1	; () banked
 15647  014A1A  CFF5 F115          	movff	tablat,___ftmul@f1+1
 15648  014A1E  000A               	tblrd		*-
 15649  014A20  0101               	movlb	1	; () banked
 15650  014A22  CFF5 F116          	movff	tablat,___ftmul@f1+2
 15651  014A26  0E00               	movlw	0
 15652  014A28  0101               	movlb	1	; () banked
 15653  014A2A  6F17               	movwf	___ftmul@f2& (0+255),b
 15654  014A2C  0E00               	movlw	0
 15655  014A2E  0101               	movlb	1	; () banked
 15656  014A30  6F18               	movwf	(___ftmul@f2+1)& (0+255),b
 15657  014A32  0E3F               	movlw	63
 15658  014A34  0101               	movlb	1	; () banked
 15659  014A36  6F19               	movwf	(___ftmul@f2+2)& (0+255),b
 15660  014A38  ECAF  F0BB         	call	___ftmul	;wreg free
 15661  014A3C  C114  F123         	movff	?___ftmul,?_fround
 15662  014A40  C115  F124         	movff	?___ftmul+1,?_fround+1
 15663  014A44  C116  F125         	movff	?___ftmul+2,?_fround+2
 15664  014A48  0012               	return	
 15665  014A4A                     __end_of_fround:
 15666                           	opt stack 0
 15667                           tblptru	equ	0xFF8
 15668                           tblptrh	equ	0xFF7
 15669                           tblptrl	equ	0xFF6
 15670                           tablat	equ	0xFF5
 15671                           prodh	equ	0xFF4
 15672                           prodl	equ	0xFF3
 15673                           intcon	equ	0xFF2
 15674                           postinc0	equ	0xFEE
 15675                           wreg	equ	0xFE8
 15676                           postdec1	equ	0xFE5
 15677                           fsr1h	equ	0xFE2
 15678                           fsr1l	equ	0xFE1
 15679                           indf2	equ	0xFDF
 15680                           postinc2	equ	0xFDE
 15681                           postdec2	equ	0xFDD
 15682                           fsr2h	equ	0xFDA
 15683                           fsr2l	equ	0xFD9
 15684                           status	equ	0xFD8
 15685                           
 15686 ;; *************** function ___awmod *****************
 15687 ;; Defined at:
 15688 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 15689 ;; Parameters:    Size  Location     Type
 15690 ;;  dividend        2    0[BANK1 ] int 
 15691 ;;  divisor         2    2[BANK1 ] int 
 15692 ;; Auto vars:     Size  Location     Type
 15693 ;;  sign            1    5[BANK1 ] unsigned char 
 15694 ;;  counter         1    4[BANK1 ] unsigned char 
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  2    0[BANK1 ] int 
 15697 ;; Registers used:
 15698 ;;		wreg, status,2, status,0, prodl
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15704 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15705 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15707 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15708 ;;Total ram usage:        6 bytes
 15709 ;; Hardware stack levels used:    1
 15710 ;; Hardware stack levels required when called:   10
 15711 ;; This function calls:
 15712 ;;		Nothing
 15713 ;; This function is called by:
 15714 ;;		_fround
 15715 ;;		_scale
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text9
 15720  019D8C                     __ptext9:
 15721                           	opt stack 0
 15722  019D8C                     ___awmod:
 15723                           	opt stack 16
 15724                           
 15725                           ;incstack = 0
 15726  019D8C  0E00               	movlw	0
 15727  019D8E  0101               	movlb	1	; () banked
 15728  019D90  6F05               	movwf	___awmod@sign& (0+255),b
 15729                           
 15730                           ; BSR set to: 1
 15731  019D92  0101               	movlb	1	; () banked
 15732  019D94  5101               	movf	(___awmod@dividend+1)& (0+255),w,b
 15733  019D96  0A80               	xorlw	128
 15734  019D98  6EF3               	movwf	prodl,c
 15735  019D9A  0E80               	movlw	128
 15736  019D9C  5CF3               	subwf	prodl,w,c
 15737  019D9E  0E00               	movlw	0
 15738  019DA0  B4D8               	btfsc	status,2,c
 15739  019DA2  5D00               	subwf	___awmod@dividend& (0+255),w,b
 15740  019DA4  B0D8               	btfsc	status,0,c
 15741  019DA6  D009               	goto	l11112
 15742                           
 15743                           ; BSR set to: 1
 15744  019DA8  0101               	movlb	1	; () banked
 15745  019DAA  6D00               	negf	___awmod@dividend& (0+255),b
 15746  019DAC  0101               	movlb	1	; () banked
 15747  019DAE  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 15748  019DB0  B0D8               	btfsc	status,0,c
 15749  019DB2  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 15750                           
 15751                           ; BSR set to: 1
 15752  019DB4  0E01               	movlw	1
 15753  019DB6  0101               	movlb	1	; () banked
 15754  019DB8  6F05               	movwf	___awmod@sign& (0+255),b
 15755  019DBA                     l11112:
 15756                           
 15757                           ; BSR set to: 1
 15758  019DBA  0101               	movlb	1	; () banked
 15759  019DBC  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 15760  019DBE  0A80               	xorlw	128
 15761  019DC0  6EF3               	movwf	prodl,c
 15762  019DC2  0E80               	movlw	128
 15763  019DC4  5CF3               	subwf	prodl,w,c
 15764  019DC6  0E00               	movlw	0
 15765  019DC8  B4D8               	btfsc	status,2,c
 15766  019DCA  5D02               	subwf	___awmod@divisor& (0+255),w,b
 15767  019DCC  B0D8               	btfsc	status,0,c
 15768  019DCE  D006               	goto	l11116
 15769                           
 15770                           ; BSR set to: 1
 15771  019DD0  0101               	movlb	1	; () banked
 15772  019DD2  6D02               	negf	___awmod@divisor& (0+255),b
 15773  019DD4  0101               	movlb	1	; () banked
 15774  019DD6  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 15775  019DD8  B0D8               	btfsc	status,0,c
 15776  019DDA  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 15777  019DDC                     l11116:
 15778                           
 15779                           ; BSR set to: 1
 15780  019DDC  0101               	movlb	1	; () banked
 15781  019DDE  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 15782  019DE0  1102               	iorwf	___awmod@divisor& (0+255),w,b
 15783  019DE2  B4D8               	btfsc	status,2,c
 15784  019DE4  D026               	goto	l11132
 15785                           
 15786                           ; BSR set to: 1
 15787  019DE6  0E01               	movlw	1
 15788  019DE8  0101               	movlb	1	; () banked
 15789  019DEA  6F04               	movwf	___awmod@counter& (0+255),b
 15790  019DEC  D006               	goto	l11122
 15791  019DEE                     l11120:
 15792                           
 15793                           ; BSR set to: 1
 15794  019DEE  0101               	movlb	1	; () banked
 15795  019DF0  90D8               	bcf	status,0,c
 15796  019DF2  3702               	rlcf	___awmod@divisor& (0+255),f,b
 15797  019DF4  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 15798  019DF6  0101               	movlb	1	; () banked
 15799  019DF8  2B04               	incf	___awmod@counter& (0+255),f,b
 15800  019DFA                     l11122:
 15801                           
 15802                           ; BSR set to: 1
 15803  019DFA  0101               	movlb	1	; () banked
 15804  019DFC  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 15805  019DFE  D7F7               	goto	l11120
 15806  019E00                     l11124:
 15807                           
 15808                           ; BSR set to: 1
 15809  019E00  0101               	movlb	1	; () banked
 15810  019E02  5102               	movf	___awmod@divisor& (0+255),w,b
 15811  019E04  0101               	movlb	1	; () banked
 15812  019E06  5D00               	subwf	___awmod@dividend& (0+255),w,b
 15813  019E08  0101               	movlb	1	; () banked
 15814  019E0A  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 15815  019E0C  0101               	movlb	1	; () banked
 15816  019E0E  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 15817  019E10  A0D8               	btfss	status,0,c
 15818  019E12  D008               	goto	l11128
 15819                           
 15820                           ; BSR set to: 1
 15821  019E14  0101               	movlb	1	; () banked
 15822  019E16  5102               	movf	___awmod@divisor& (0+255),w,b
 15823  019E18  0101               	movlb	1	; () banked
 15824  019E1A  5F00               	subwf	___awmod@dividend& (0+255),f,b
 15825  019E1C  0101               	movlb	1	; () banked
 15826  019E1E  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 15827  019E20  0101               	movlb	1	; () banked
 15828  019E22  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 15829  019E24                     l11128:
 15830                           
 15831                           ; BSR set to: 1
 15832  019E24  0101               	movlb	1	; () banked
 15833  019E26  90D8               	bcf	status,0,c
 15834  019E28  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 15835  019E2A  3302               	rrcf	___awmod@divisor& (0+255),f,b
 15836                           
 15837                           ; BSR set to: 1
 15838  019E2C  0101               	movlb	1	; () banked
 15839  019E2E  2F04               	decfsz	___awmod@counter& (0+255),f,b
 15840  019E30  D7E7               	goto	l11124
 15841  019E32                     l11132:
 15842                           
 15843                           ; BSR set to: 1
 15844  019E32  0101               	movlb	1	; () banked
 15845  019E34  5105               	movf	___awmod@sign& (0+255),w,b
 15846  019E36  B4D8               	btfsc	status,2,c
 15847  019E38  D006               	goto	l11136
 15848                           
 15849                           ; BSR set to: 1
 15850  019E3A  0101               	movlb	1	; () banked
 15851  019E3C  6D00               	negf	___awmod@dividend& (0+255),b
 15852  019E3E  0101               	movlb	1	; () banked
 15853  019E40  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 15854  019E42  B0D8               	btfsc	status,0,c
 15855  019E44  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 15856  019E46                     l11136:
 15857                           
 15858                           ; BSR set to: 1
 15859  019E46  C100  F100         	movff	___awmod@dividend,?___awmod
 15860  019E4A  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
 15861  019E4E  0012               	return	
 15862  019E50                     __end_of___awmod:
 15863                           	opt stack 0
 15864                           tblptru	equ	0xFF8
 15865                           tblptrh	equ	0xFF7
 15866                           tblptrl	equ	0xFF6
 15867                           tablat	equ	0xFF5
 15868                           prodh	equ	0xFF4
 15869                           prodl	equ	0xFF3
 15870                           intcon	equ	0xFF2
 15871                           postinc0	equ	0xFEE
 15872                           wreg	equ	0xFE8
 15873                           postdec1	equ	0xFE5
 15874                           fsr1h	equ	0xFE2
 15875                           fsr1l	equ	0xFE1
 15876                           indf2	equ	0xFDF
 15877                           postinc2	equ	0xFDE
 15878                           postdec2	equ	0xFDD
 15879                           fsr2h	equ	0xFDA
 15880                           fsr2l	equ	0xFD9
 15881                           status	equ	0xFD8
 15882                           
 15883 ;; *************** function ___awdiv *****************
 15884 ;; Defined at:
 15885 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;  dividend        2    6[BANK1 ] int 
 15888 ;;  divisor         2    8[BANK1 ] int 
 15889 ;; Auto vars:     Size  Location     Type
 15890 ;;  quotient        2   12[BANK1 ] int 
 15891 ;;  sign            1   11[BANK1 ] unsigned char 
 15892 ;;  counter         1   10[BANK1 ] unsigned char 
 15893 ;; Return value:  Size  Location     Type
 15894 ;;                  2    6[BANK1 ] int 
 15895 ;; Registers used:
 15896 ;;		wreg, status,2, status,0, prodl
 15897 ;; Tracked objects:
 15898 ;;		On entry : 0/0
 15899 ;;		On exit  : 0/0
 15900 ;;		Unchanged: 0/0
 15901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15902 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;Total ram usage:        8 bytes
 15907 ;; Hardware stack levels used:    1
 15908 ;; Hardware stack levels required when called:   10
 15909 ;; This function calls:
 15910 ;;		Nothing
 15911 ;; This function is called by:
 15912 ;;		_fround
 15913 ;;		_scale
 15914 ;;		_sprintf
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           	psect	text10
 15919  01939E                     __ptext10:
 15920                           	opt stack 0
 15921  01939E                     ___awdiv:
 15922                           	opt stack 16
 15923                           
 15924                           ; BSR set to: 1
 15925                           ;incstack = 0
 15926  01939E  0E00               	movlw	0
 15927  0193A0  0101               	movlb	1	; () banked
 15928  0193A2  6F0B               	movwf	___awdiv@sign& (0+255),b
 15929                           
 15930                           ; BSR set to: 1
 15931  0193A4  0101               	movlb	1	; () banked
 15932  0193A6  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15933  0193A8  0A80               	xorlw	128
 15934  0193AA  6EF3               	movwf	prodl,c
 15935  0193AC  0E80               	movlw	128
 15936  0193AE  5CF3               	subwf	prodl,w,c
 15937  0193B0  0E00               	movlw	0
 15938  0193B2  B4D8               	btfsc	status,2,c
 15939  0193B4  5D08               	subwf	___awdiv@divisor& (0+255),w,b
 15940  0193B6  B0D8               	btfsc	status,0,c
 15941  0193B8  D009               	goto	l11068
 15942                           
 15943                           ; BSR set to: 1
 15944  0193BA  0101               	movlb	1	; () banked
 15945  0193BC  6D08               	negf	___awdiv@divisor& (0+255),b
 15946  0193BE  0101               	movlb	1	; () banked
 15947  0193C0  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 15948  0193C2  B0D8               	btfsc	status,0,c
 15949  0193C4  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 15950                           
 15951                           ; BSR set to: 1
 15952  0193C6  0E01               	movlw	1
 15953  0193C8  0101               	movlb	1	; () banked
 15954  0193CA  6F0B               	movwf	___awdiv@sign& (0+255),b
 15955  0193CC                     l11068:
 15956                           
 15957                           ; BSR set to: 1
 15958  0193CC  0101               	movlb	1	; () banked
 15959  0193CE  5107               	movf	(___awdiv@dividend+1)& (0+255),w,b
 15960  0193D0  0A80               	xorlw	128
 15961  0193D2  6EF3               	movwf	prodl,c
 15962  0193D4  0E80               	movlw	128
 15963  0193D6  5CF3               	subwf	prodl,w,c
 15964  0193D8  0E00               	movlw	0
 15965  0193DA  B4D8               	btfsc	status,2,c
 15966  0193DC  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 15967  0193DE  B0D8               	btfsc	status,0,c
 15968  0193E0  D009               	goto	l11074
 15969                           
 15970                           ; BSR set to: 1
 15971  0193E2  0101               	movlb	1	; () banked
 15972  0193E4  6D06               	negf	___awdiv@dividend& (0+255),b
 15973  0193E6  0101               	movlb	1	; () banked
 15974  0193E8  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 15975  0193EA  B0D8               	btfsc	status,0,c
 15976  0193EC  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 15977                           
 15978                           ; BSR set to: 1
 15979  0193EE  0E01               	movlw	1
 15980  0193F0  0101               	movlb	1	; () banked
 15981  0193F2  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 15982  0193F4                     l11074:
 15983                           
 15984                           ; BSR set to: 1
 15985  0193F4  0E00               	movlw	0
 15986  0193F6  0101               	movlb	1	; () banked
 15987  0193F8  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 15988  0193FA  0E00               	movlw	0
 15989  0193FC  0101               	movlb	1	; () banked
 15990  0193FE  6F0C               	movwf	___awdiv@quotient& (0+255),b
 15991                           
 15992                           ; BSR set to: 1
 15993  019400  0101               	movlb	1	; () banked
 15994  019402  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 15995  019404  1108               	iorwf	___awdiv@divisor& (0+255),w,b
 15996  019406  B4D8               	btfsc	status,2,c
 15997  019408  D02C               	goto	l11096
 15998                           
 15999                           ; BSR set to: 1
 16000  01940A  0E01               	movlw	1
 16001  01940C  0101               	movlb	1	; () banked
 16002  01940E  6F0A               	movwf	___awdiv@counter& (0+255),b
 16003  019410  D006               	goto	l11082
 16004  019412                     l11080:
 16005                           
 16006                           ; BSR set to: 1
 16007  019412  0101               	movlb	1	; () banked
 16008  019414  90D8               	bcf	status,0,c
 16009  019416  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 16010  019418  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16011  01941A  0101               	movlb	1	; () banked
 16012  01941C  2B0A               	incf	___awdiv@counter& (0+255),f,b
 16013  01941E                     l11082:
 16014                           
 16015                           ; BSR set to: 1
 16016  01941E  0101               	movlb	1	; () banked
 16017  019420  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16018  019422  D7F7               	goto	l11080
 16019  019424                     l11084:
 16020                           
 16021                           ; BSR set to: 1
 16022  019424  0101               	movlb	1	; () banked
 16023  019426  90D8               	bcf	status,0,c
 16024  019428  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 16025  01942A  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16026                           
 16027                           ; BSR set to: 1
 16028  01942C  0101               	movlb	1	; () banked
 16029  01942E  5108               	movf	___awdiv@divisor& (0+255),w,b
 16030  019430  0101               	movlb	1	; () banked
 16031  019432  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 16032  019434  0101               	movlb	1	; () banked
 16033  019436  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16034  019438  0101               	movlb	1	; () banked
 16035  01943A  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16036  01943C  A0D8               	btfss	status,0,c
 16037  01943E  D00A               	goto	l11092
 16038                           
 16039                           ; BSR set to: 1
 16040  019440  0101               	movlb	1	; () banked
 16041  019442  5108               	movf	___awdiv@divisor& (0+255),w,b
 16042  019444  0101               	movlb	1	; () banked
 16043  019446  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 16044  019448  0101               	movlb	1	; () banked
 16045  01944A  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16046  01944C  0101               	movlb	1	; () banked
 16047  01944E  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16048                           
 16049                           ; BSR set to: 1
 16050  019450  0101               	movlb	1	; () banked
 16051  019452  810C               	bsf	___awdiv@quotient& (0+255),0,b
 16052  019454                     l11092:
 16053                           
 16054                           ; BSR set to: 1
 16055  019454  0101               	movlb	1	; () banked
 16056  019456  90D8               	bcf	status,0,c
 16057  019458  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16058  01945A  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 16059                           
 16060                           ; BSR set to: 1
 16061  01945C  0101               	movlb	1	; () banked
 16062  01945E  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 16063  019460  D7E1               	goto	l11084
 16064  019462                     l11096:
 16065                           
 16066                           ; BSR set to: 1
 16067  019462  0101               	movlb	1	; () banked
 16068  019464  510B               	movf	___awdiv@sign& (0+255),w,b
 16069  019466  B4D8               	btfsc	status,2,c
 16070  019468  D006               	goto	l11100
 16071                           
 16072                           ; BSR set to: 1
 16073  01946A  0101               	movlb	1	; () banked
 16074  01946C  6D0C               	negf	___awdiv@quotient& (0+255),b
 16075  01946E  0101               	movlb	1	; () banked
 16076  019470  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 16077  019472  B0D8               	btfsc	status,0,c
 16078  019474  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 16079  019476                     l11100:
 16080                           
 16081                           ; BSR set to: 1
 16082  019476  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 16083  01947A  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 16084  01947E  0012               	return	
 16085  019480                     __end_of___awdiv:
 16086                           	opt stack 0
 16087                           tblptru	equ	0xFF8
 16088                           tblptrh	equ	0xFF7
 16089                           tblptrl	equ	0xFF6
 16090                           tablat	equ	0xFF5
 16091                           prodh	equ	0xFF4
 16092                           prodl	equ	0xFF3
 16093                           intcon	equ	0xFF2
 16094                           postinc0	equ	0xFEE
 16095                           wreg	equ	0xFE8
 16096                           postdec1	equ	0xFE5
 16097                           fsr1h	equ	0xFE2
 16098                           fsr1l	equ	0xFE1
 16099                           indf2	equ	0xFDF
 16100                           postinc2	equ	0xFDE
 16101                           postdec2	equ	0xFDD
 16102                           fsr2h	equ	0xFDA
 16103                           fsr2l	equ	0xFD9
 16104                           status	equ	0xFD8
 16105                           
 16106 ;; *************** function __tdiv_to_l_ *****************
 16107 ;; Defined at:
 16108 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  f1              3    0[BANK1 ] float 
 16111 ;;  f2              3    3[BANK1 ] float 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  quot            4    9[BANK1 ] unsigned long 
 16114 ;;  exp1            1   14[BANK1 ] unsigned char 
 16115 ;;  cntr            1   13[BANK1 ] unsigned char 
 16116 ;; Return value:  Size  Location     Type
 16117 ;;                  4    0[BANK1 ] unsigned long 
 16118 ;; Registers used:
 16119 ;;		wreg, status,2, status,0
 16120 ;; Tracked objects:
 16121 ;;		On entry : 0/0
 16122 ;;		On exit  : 0/0
 16123 ;;		Unchanged: 0/0
 16124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 16125 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16128 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;Total ram usage:       15 bytes
 16130 ;; Hardware stack levels used:    1
 16131 ;; Hardware stack levels required when called:   10
 16132 ;; This function calls:
 16133 ;;		Nothing
 16134 ;; This function is called by:
 16135 ;;		_sprintf
 16136 ;; This function uses a non-reentrant model
 16137 ;;
 16138                           
 16139                           	psect	text11
 16140  01631A                     __ptext11:
 16141                           	opt stack 0
 16142  01631A                     __tdiv_to_l_:
 16143                           	opt stack 17
 16144                           
 16145                           ; BSR set to: 1
 16146                           ;incstack = 0
 16147  01631A  0101               	movlb	1	; () banked
 16148  01631C  C102  F106         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 16149  016320  0101               	movlb	1	; () banked
 16150  016322  6B07               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 16151  016324  6B08               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 16152  016326  0101               	movlb	1	; () banked
 16153  016328  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 16154  01632A  0101               	movlb	1	; () banked
 16155  01632C  3706               	rlcf	??__tdiv_to_l_& (0+255),f,b
 16156  01632E  E301               	bnc	u13311
 16157  016330  8107               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 16158  016332                     u13311:
 16159  016332  0101               	movlb	1	; () banked
 16160  016334  5106               	movf	??__tdiv_to_l_& (0+255),w,b
 16161  016336  0101               	movlb	1	; () banked
 16162  016338  6F0E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 16163  01633A  0101               	movlb	1	; () banked
 16164  01633C  670E               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 16165  01633E  D00D               	goto	l12102
 16166                           
 16167                           ; BSR set to: 1
 16168  016340  0E00               	movlw	0
 16169  016342  0101               	movlb	1	; () banked
 16170  016344  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 16171  016346  0E00               	movlw	0
 16172  016348  0101               	movlb	1	; () banked
 16173  01634A  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 16174  01634C  0E00               	movlw	0
 16175  01634E  0101               	movlb	1	; () banked
 16176  016350  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 16177  016352  0E00               	movlw	0
 16178  016354  0101               	movlb	1	; () banked
 16179  016356  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 16180  016358  0012               	return	
 16181  01635A                     l12102:
 16182                           
 16183                           ; BSR set to: 1
 16184  01635A  0101               	movlb	1	; () banked
 16185  01635C  C105  F106         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 16186  016360  0101               	movlb	1	; () banked
 16187  016362  6B07               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 16188  016364  6B08               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 16189  016366  0101               	movlb	1	; () banked
 16190  016368  3504               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 16191  01636A  0101               	movlb	1	; () banked
 16192  01636C  3706               	rlcf	??__tdiv_to_l_& (0+255),f,b
 16193  01636E  E301               	bnc	u13331
 16194  016370  8107               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 16195  016372                     u13331:
 16196  016372  0101               	movlb	1	; () banked
 16197  016374  5106               	movf	??__tdiv_to_l_& (0+255),w,b
 16198  016376  0101               	movlb	1	; () banked
 16199  016378  6F0D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 16200  01637A  0101               	movlb	1	; () banked
 16201  01637C  670D               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
 16202  01637E  D00D               	goto	l12108
 16203                           
 16204                           ; BSR set to: 1
 16205  016380  0E00               	movlw	0
 16206  016382  0101               	movlb	1	; () banked
 16207  016384  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 16208  016386  0E00               	movlw	0
 16209  016388  0101               	movlb	1	; () banked
 16210  01638A  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 16211  01638C  0E00               	movlw	0
 16212  01638E  0101               	movlb	1	; () banked
 16213  016390  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 16214  016392  0E00               	movlw	0
 16215  016394  0101               	movlb	1	; () banked
 16216  016396  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 16217  016398  0012               	return	
 16218  01639A                     l12108:
 16219                           
 16220                           ; BSR set to: 1
 16221  01639A  0101               	movlb	1	; () banked
 16222  01639C  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 16223                           
 16224                           ; BSR set to: 1
 16225  01639E  0EFF               	movlw	255
 16226  0163A0  0101               	movlb	1	; () banked
 16227  0163A2  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 16228  0163A4  0EFF               	movlw	255
 16229  0163A6  0101               	movlb	1	; () banked
 16230  0163A8  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 16231  0163AA  0E00               	movlw	0
 16232  0163AC  0101               	movlb	1	; () banked
 16233  0163AE  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 16234  0163B0  0101               	movlb	1	; () banked
 16235  0163B2  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 16236                           
 16237                           ; BSR set to: 1
 16238  0163B4  0EFF               	movlw	255
 16239  0163B6  0101               	movlb	1	; () banked
 16240  0163B8  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 16241  0163BA  0EFF               	movlw	255
 16242  0163BC  0101               	movlb	1	; () banked
 16243  0163BE  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 16244  0163C0  0E00               	movlw	0
 16245  0163C2  0101               	movlb	1	; () banked
 16246  0163C4  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 16247                           
 16248                           ; BSR set to: 1
 16249  0163C6  0E00               	movlw	0
 16250  0163C8  0101               	movlb	1	; () banked
 16251  0163CA  6F09               	movwf	__tdiv_to_l_@quot& (0+255),b
 16252  0163CC  0E00               	movlw	0
 16253  0163CE  0101               	movlb	1	; () banked
 16254  0163D0  6F0A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 16255  0163D2  0E00               	movlw	0
 16256  0163D4  0101               	movlb	1	; () banked
 16257  0163D6  6F0B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 16258  0163D8  0E00               	movlw	0
 16259  0163DA  0101               	movlb	1	; () banked
 16260  0163DC  6F0C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 16261                           
 16262                           ; BSR set to: 1
 16263  0163DE  0E7F               	movlw	127
 16264  0163E0  0101               	movlb	1	; () banked
 16265  0163E2  5F0E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 16266                           
 16267                           ; BSR set to: 1
 16268  0163E4  0101               	movlb	1	; () banked
 16269  0163E6  510D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 16270  0163E8  0F98               	addlw	152
 16271  0163EA  0101               	movlb	1	; () banked
 16272  0163EC  5F0E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 16273                           
 16274                           ; BSR set to: 1
 16275  0163EE  0E18               	movlw	24
 16276  0163F0  0101               	movlb	1	; () banked
 16277  0163F2  6F0D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 16278  0163F4                     l2567:
 16279                           
 16280                           ; BSR set to: 1
 16281  0163F4  0101               	movlb	1	; () banked
 16282  0163F6  90D8               	bcf	status,0,c
 16283  0163F8  0101               	movlb	1	; () banked
 16284  0163FA  3709               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 16285  0163FC  0101               	movlb	1	; () banked
 16286  0163FE  370A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 16287  016400  0101               	movlb	1	; () banked
 16288  016402  370B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 16289  016404  0101               	movlb	1	; () banked
 16290  016406  370C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 16291                           
 16292                           ; BSR set to: 1
 16293  016408  0101               	movlb	1	; () banked
 16294  01640A  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
 16295  01640C  0101               	movlb	1	; () banked
 16296  01640E  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 16297  016410  0101               	movlb	1	; () banked
 16298  016412  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 16299  016414  0101               	movlb	1	; () banked
 16300  016416  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 16301  016418  0101               	movlb	1	; () banked
 16302  01641A  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 16303  01641C  0101               	movlb	1	; () banked
 16304  01641E  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 16305  016420  A0D8               	btfss	status,0,c
 16306  016422  D00E               	goto	l2568
 16307                           
 16308                           ; BSR set to: 1
 16309  016424  0101               	movlb	1	; () banked
 16310  016426  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
 16311  016428  0101               	movlb	1	; () banked
 16312  01642A  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 16313  01642C  0101               	movlb	1	; () banked
 16314  01642E  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 16315  016430  0101               	movlb	1	; () banked
 16316  016432  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 16317  016434  0101               	movlb	1	; () banked
 16318  016436  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 16319  016438  0101               	movlb	1	; () banked
 16320  01643A  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 16321                           
 16322                           ; BSR set to: 1
 16323  01643C  0101               	movlb	1	; () banked
 16324  01643E  8109               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 16325  016440                     l2568:
 16326                           
 16327                           ; BSR set to: 1
 16328  016440  0101               	movlb	1	; () banked
 16329  016442  90D8               	bcf	status,0,c
 16330  016444  0101               	movlb	1	; () banked
 16331  016446  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 16332  016448  0101               	movlb	1	; () banked
 16333  01644A  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 16334  01644C  0101               	movlb	1	; () banked
 16335  01644E  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 16336                           
 16337                           ; BSR set to: 1
 16338  016450  0101               	movlb	1	; () banked
 16339  016452  2F0D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 16340  016454  D7CF               	goto	l2567
 16341                           
 16342                           ; BSR set to: 1
 16343  016456  0101               	movlb	1	; () banked
 16344  016458  AF0E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 16345  01645A  D026               	goto	l12140
 16346                           
 16347                           ; BSR set to: 1
 16348  01645C  0101               	movlb	1	; () banked
 16349  01645E  510E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 16350  016460  0A80               	xorlw	128
 16351  016462  0101               	movlb	1	; () banked
 16352  016464  6F06               	movwf	??__tdiv_to_l_& (0+255),b
 16353  016466  0EE9               	movlw	233
 16354  016468  0A80               	xorlw	128
 16355  01646A  0101               	movlb	1	; () banked
 16356  01646C  5D06               	subwf	??__tdiv_to_l_& (0+255),w,b
 16357  01646E  B0D8               	btfsc	status,0,c
 16358  016470  D00D               	goto	l12136
 16359                           
 16360                           ; BSR set to: 1
 16361  016472  0E00               	movlw	0
 16362  016474  0101               	movlb	1	; () banked
 16363  016476  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 16364  016478  0E00               	movlw	0
 16365  01647A  0101               	movlb	1	; () banked
 16366  01647C  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 16367  01647E  0E00               	movlw	0
 16368  016480  0101               	movlb	1	; () banked
 16369  016482  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 16370  016484  0E00               	movlw	0
 16371  016486  0101               	movlb	1	; () banked
 16372  016488  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 16373  01648A  0012               	return	
 16374  01648C                     l12136:
 16375                           
 16376                           ; BSR set to: 1
 16377  01648C  0101               	movlb	1	; () banked
 16378  01648E  90D8               	bcf	status,0,c
 16379  016490  0101               	movlb	1	; () banked
 16380  016492  330C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 16381  016494  0101               	movlb	1	; () banked
 16382  016496  330B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 16383  016498  0101               	movlb	1	; () banked
 16384  01649A  330A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 16385  01649C  0101               	movlb	1	; () banked
 16386  01649E  3309               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 16387                           
 16388                           ; BSR set to: 1
 16389  0164A0  0101               	movlb	1	; () banked
 16390  0164A2  3F0E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 16391  0164A4  D7F3               	goto	l12136
 16392  0164A6  D020               	goto	l2574
 16393  0164A8                     l12140:
 16394                           
 16395                           ; BSR set to: 1
 16396  0164A8  0E17               	movlw	23
 16397  0164AA  0101               	movlb	1	; () banked
 16398  0164AC  650E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 16399  0164AE  D019               	goto	l12148
 16400                           
 16401                           ; BSR set to: 1
 16402  0164B0  0E00               	movlw	0
 16403  0164B2  0101               	movlb	1	; () banked
 16404  0164B4  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 16405  0164B6  0E00               	movlw	0
 16406  0164B8  0101               	movlb	1	; () banked
 16407  0164BA  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 16408  0164BC  0E00               	movlw	0
 16409  0164BE  0101               	movlb	1	; () banked
 16410  0164C0  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 16411  0164C2  0E00               	movlw	0
 16412  0164C4  0101               	movlb	1	; () banked
 16413  0164C6  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 16414  0164C8  0012               	return	
 16415  0164CA                     l12146:
 16416                           
 16417                           ; BSR set to: 1
 16418  0164CA  0101               	movlb	1	; () banked
 16419  0164CC  90D8               	bcf	status,0,c
 16420  0164CE  0101               	movlb	1	; () banked
 16421  0164D0  3709               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 16422  0164D2  0101               	movlb	1	; () banked
 16423  0164D4  370A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 16424  0164D6  0101               	movlb	1	; () banked
 16425  0164D8  370B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 16426  0164DA  0101               	movlb	1	; () banked
 16427  0164DC  370C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 16428  0164DE  0101               	movlb	1	; () banked
 16429  0164E0  070E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 16430  0164E2                     l12148:
 16431                           
 16432                           ; BSR set to: 1
 16433  0164E2  0101               	movlb	1	; () banked
 16434  0164E4  670E               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 16435  0164E6  D7F1               	goto	l12146
 16436  0164E8                     l2574:
 16437                           
 16438                           ; BSR set to: 1
 16439  0164E8  C109  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 16440  0164EC  C10A  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 16441  0164F0  C10B  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 16442  0164F4  C10C  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 16443                           
 16444                           ; BSR set to: 1
 16445  0164F8  0012               	return	
 16446  0164FA                     __end_of__tdiv_to_l_:
 16447                           	opt stack 0
 16448                           tblptru	equ	0xFF8
 16449                           tblptrh	equ	0xFF7
 16450                           tblptrl	equ	0xFF6
 16451                           tablat	equ	0xFF5
 16452                           prodh	equ	0xFF4
 16453                           prodl	equ	0xFF3
 16454                           intcon	equ	0xFF2
 16455                           postinc0	equ	0xFEE
 16456                           wreg	equ	0xFE8
 16457                           postdec1	equ	0xFE5
 16458                           fsr1h	equ	0xFE2
 16459                           fsr1l	equ	0xFE1
 16460                           indf2	equ	0xFDF
 16461                           postinc2	equ	0xFDE
 16462                           postdec2	equ	0xFDD
 16463                           fsr2h	equ	0xFDA
 16464                           fsr2l	equ	0xFD9
 16465                           status	equ	0xFD8
 16466                           
 16467 ;; *************** function __div_to_l_ *****************
 16468 ;; Defined at:
 16469 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
 16470 ;; Parameters:    Size  Location     Type
 16471 ;;  f1              3    0[BANK1 ] unsigned long 
 16472 ;;  f2              3    3[BANK1 ] unsigned long 
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;  quot            4   10[BANK1 ] unsigned long 
 16475 ;;  exp1            1   15[BANK1 ] unsigned char 
 16476 ;;  cntr            1   14[BANK1 ] unsigned char 
 16477 ;; Return value:  Size  Location     Type
 16478 ;;                  4    0[BANK1 ] unsigned long 
 16479 ;; Registers used:
 16480 ;;		wreg, status,2, status,0
 16481 ;; Tracked objects:
 16482 ;;		On entry : 0/0
 16483 ;;		On exit  : 0/0
 16484 ;;		Unchanged: 0/0
 16485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 16486 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16488 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16489 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16490 ;;Total ram usage:       16 bytes
 16491 ;; Hardware stack levels used:    1
 16492 ;; Hardware stack levels required when called:   10
 16493 ;; This function calls:
 16494 ;;		Nothing
 16495 ;; This function is called by:
 16496 ;;		_sprintf
 16497 ;; This function uses a non-reentrant model
 16498 ;;
 16499                           
 16500                           	psect	text12
 16501  0158C6                     __ptext12:
 16502                           	opt stack 0
 16503  0158C6                     __div_to_l_:
 16504                           	opt stack 17
 16505                           
 16506                           ; BSR set to: 1
 16507                           ;incstack = 0
 16508  0158C6  0101               	movlb	1	; () banked
 16509  0158C8  C100  F106         	movff	__div_to_l_@f1,??__div_to_l_
 16510  0158CC  0101               	movlb	1	; () banked
 16511  0158CE  C101  F107         	movff	__div_to_l_@f1+1,??__div_to_l_+1
 16512  0158D2  0101               	movlb	1	; () banked
 16513  0158D4  C102  F108         	movff	__div_to_l_@f1+2,??__div_to_l_+2
 16514  0158D8  0101               	movlb	1	; () banked
 16515  0158DA  C103  F109         	movff	__div_to_l_@f1+3,??__div_to_l_+3
 16516  0158DE  0E18               	movlw	24
 16517  0158E0  D006               	goto	u13400
 16518  0158E2                     u13405:
 16519  0158E2  0101               	movlb	1	; () banked
 16520  0158E4  90D8               	bcf	status,0,c
 16521  0158E6  3309               	rrcf	(??__div_to_l_+3)& (0+255),f,b
 16522  0158E8  3308               	rrcf	(??__div_to_l_+2)& (0+255),f,b
 16523  0158EA  3307               	rrcf	(??__div_to_l_+1)& (0+255),f,b
 16524  0158EC  3306               	rrcf	??__div_to_l_& (0+255),f,b
 16525  0158EE                     u13400:
 16526  0158EE  2EE8               	decfsz	wreg,f,c
 16527  0158F0  D7F8               	goto	u13405
 16528  0158F2  0101               	movlb	1	; () banked
 16529  0158F4  5106               	movf	??__div_to_l_& (0+255),w,b
 16530  0158F6  0101               	movlb	1	; () banked
 16531  0158F8  6F0F               	movwf	__div_to_l_@exp1& (0+255),b
 16532  0158FA  0101               	movlb	1	; () banked
 16533  0158FC  670F               	tstfsz	__div_to_l_@exp1& (0+255),b
 16534  0158FE  D00D               	goto	l12156
 16535                           
 16536                           ; BSR set to: 1
 16537  015900  0E00               	movlw	0
 16538  015902  0101               	movlb	1	; () banked
 16539  015904  6F00               	movwf	?__div_to_l_& (0+255),b
 16540  015906  0E00               	movlw	0
 16541  015908  0101               	movlb	1	; () banked
 16542  01590A  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 16543  01590C  0E00               	movlw	0
 16544  01590E  0101               	movlb	1	; () banked
 16545  015910  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 16546  015912  0E00               	movlw	0
 16547  015914  0101               	movlb	1	; () banked
 16548  015916  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 16549  015918  0012               	return	
 16550  01591A                     l12156:
 16551                           
 16552                           ; BSR set to: 1
 16553  01591A  0101               	movlb	1	; () banked
 16554  01591C  C103  F106         	movff	__div_to_l_@f2,??__div_to_l_
 16555  015920  0101               	movlb	1	; () banked
 16556  015922  C104  F107         	movff	__div_to_l_@f2+1,??__div_to_l_+1
 16557  015926  0101               	movlb	1	; () banked
 16558  015928  C105  F108         	movff	__div_to_l_@f2+2,??__div_to_l_+2
 16559  01592C  0101               	movlb	1	; () banked
 16560  01592E  C106  F109         	movff	__div_to_l_@f2+3,??__div_to_l_+3
 16561  015932  0E18               	movlw	24
 16562  015934  D006               	goto	u13420
 16563  015936                     u13425:
 16564  015936  0101               	movlb	1	; () banked
 16565  015938  90D8               	bcf	status,0,c
 16566  01593A  3309               	rrcf	(??__div_to_l_+3)& (0+255),f,b
 16567  01593C  3308               	rrcf	(??__div_to_l_+2)& (0+255),f,b
 16568  01593E  3307               	rrcf	(??__div_to_l_+1)& (0+255),f,b
 16569  015940  3306               	rrcf	??__div_to_l_& (0+255),f,b
 16570  015942                     u13420:
 16571  015942  2EE8               	decfsz	wreg,f,c
 16572  015944  D7F8               	goto	u13425
 16573  015946  0101               	movlb	1	; () banked
 16574  015948  5106               	movf	??__div_to_l_& (0+255),w,b
 16575  01594A  0101               	movlb	1	; () banked
 16576  01594C  6F0E               	movwf	__div_to_l_@cntr& (0+255),b
 16577  01594E  0101               	movlb	1	; () banked
 16578  015950  670E               	tstfsz	__div_to_l_@cntr& (0+255),b
 16579  015952  D00D               	goto	l12162
 16580                           
 16581                           ; BSR set to: 1
 16582  015954  0E00               	movlw	0
 16583  015956  0101               	movlb	1	; () banked
 16584  015958  6F00               	movwf	?__div_to_l_& (0+255),b
 16585  01595A  0E00               	movlw	0
 16586  01595C  0101               	movlb	1	; () banked
 16587  01595E  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 16588  015960  0E00               	movlw	0
 16589  015962  0101               	movlb	1	; () banked
 16590  015964  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 16591  015966  0E00               	movlw	0
 16592  015968  0101               	movlb	1	; () banked
 16593  01596A  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 16594  01596C  0012               	return	
 16595  01596E                     l12162:
 16596                           
 16597                           ; BSR set to: 1
 16598  01596E  0101               	movlb	1	; () banked
 16599  015970  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 16600                           
 16601                           ; BSR set to: 1
 16602  015972  0EFF               	movlw	255
 16603  015974  0101               	movlb	1	; () banked
 16604  015976  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 16605  015978  0EFF               	movlw	255
 16606  01597A  0101               	movlb	1	; () banked
 16607  01597C  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 16608  01597E  0EFF               	movlw	255
 16609  015980  0101               	movlb	1	; () banked
 16610  015982  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 16611  015984  0E00               	movlw	0
 16612  015986  0101               	movlb	1	; () banked
 16613  015988  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 16614                           
 16615                           ; BSR set to: 1
 16616  01598A  0101               	movlb	1	; () banked
 16617  01598C  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 16618  01598E  0EFF               	movlw	255
 16619  015990  0101               	movlb	1	; () banked
 16620  015992  1703               	andwf	__div_to_l_@f2& (0+255),f,b
 16621  015994  0EFF               	movlw	255
 16622  015996  0101               	movlb	1	; () banked
 16623  015998  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 16624  01599A  0EFF               	movlw	255
 16625  01599C  0101               	movlb	1	; () banked
 16626  01599E  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 16627  0159A0  0E00               	movlw	0
 16628  0159A2  0101               	movlb	1	; () banked
 16629  0159A4  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 16630                           
 16631                           ; BSR set to: 1
 16632  0159A6  0E00               	movlw	0
 16633  0159A8  0101               	movlb	1	; () banked
 16634  0159AA  6F0A               	movwf	__div_to_l_@quot& (0+255),b
 16635  0159AC  0E00               	movlw	0
 16636  0159AE  0101               	movlb	1	; () banked
 16637  0159B0  6F0B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 16638  0159B2  0E00               	movlw	0
 16639  0159B4  0101               	movlb	1	; () banked
 16640  0159B6  6F0C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 16641  0159B8  0E00               	movlw	0
 16642  0159BA  0101               	movlb	1	; () banked
 16643  0159BC  6F0D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 16644                           
 16645                           ; BSR set to: 1
 16646  0159BE  0E7F               	movlw	127
 16647  0159C0  0101               	movlb	1	; () banked
 16648  0159C2  5F0F               	subwf	__div_to_l_@exp1& (0+255),f,b
 16649                           
 16650                           ; BSR set to: 1
 16651  0159C4  0101               	movlb	1	; () banked
 16652  0159C6  510E               	movf	__div_to_l_@cntr& (0+255),w,b
 16653  0159C8  0FA0               	addlw	160
 16654  0159CA  0101               	movlb	1	; () banked
 16655  0159CC  5F0F               	subwf	__div_to_l_@exp1& (0+255),f,b
 16656                           
 16657                           ; BSR set to: 1
 16658  0159CE  0E20               	movlw	32
 16659  0159D0  0101               	movlb	1	; () banked
 16660  0159D2  6F0E               	movwf	__div_to_l_@cntr& (0+255),b
 16661  0159D4                     l12176:
 16662                           
 16663                           ; BSR set to: 1
 16664  0159D4  0101               	movlb	1	; () banked
 16665  0159D6  90D8               	bcf	status,0,c
 16666  0159D8  0101               	movlb	1	; () banked
 16667  0159DA  370A               	rlcf	__div_to_l_@quot& (0+255),f,b
 16668  0159DC  0101               	movlb	1	; () banked
 16669  0159DE  370B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 16670  0159E0  0101               	movlb	1	; () banked
 16671  0159E2  370C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 16672  0159E4  0101               	movlb	1	; () banked
 16673  0159E6  370D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 16674                           
 16675                           ; BSR set to: 1
 16676  0159E8  0101               	movlb	1	; () banked
 16677  0159EA  5103               	movf	__div_to_l_@f2& (0+255),w,b
 16678  0159EC  0101               	movlb	1	; () banked
 16679  0159EE  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 16680  0159F0  0101               	movlb	1	; () banked
 16681  0159F2  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 16682  0159F4  0101               	movlb	1	; () banked
 16683  0159F6  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 16684  0159F8  0101               	movlb	1	; () banked
 16685  0159FA  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 16686  0159FC  0101               	movlb	1	; () banked
 16687  0159FE  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 16688  015A00  0101               	movlb	1	; () banked
 16689  015A02  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 16690  015A04  0101               	movlb	1	; () banked
 16691  015A06  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 16692  015A08  A0D8               	btfss	status,0,c
 16693  015A0A  D012               	goto	l12184
 16694                           
 16695                           ; BSR set to: 1
 16696  015A0C  0101               	movlb	1	; () banked
 16697  015A0E  5103               	movf	__div_to_l_@f2& (0+255),w,b
 16698  015A10  0101               	movlb	1	; () banked
 16699  015A12  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 16700  015A14  0101               	movlb	1	; () banked
 16701  015A16  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 16702  015A18  0101               	movlb	1	; () banked
 16703  015A1A  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 16704  015A1C  0101               	movlb	1	; () banked
 16705  015A1E  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 16706  015A20  0101               	movlb	1	; () banked
 16707  015A22  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 16708  015A24  0101               	movlb	1	; () banked
 16709  015A26  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 16710  015A28  0101               	movlb	1	; () banked
 16711  015A2A  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 16712                           
 16713                           ; BSR set to: 1
 16714  015A2C  0101               	movlb	1	; () banked
 16715  015A2E  810A               	bsf	__div_to_l_@quot& (0+255),0,b
 16716  015A30                     l12184:
 16717                           
 16718                           ; BSR set to: 1
 16719  015A30  0101               	movlb	1	; () banked
 16720  015A32  90D8               	bcf	status,0,c
 16721  015A34  0101               	movlb	1	; () banked
 16722  015A36  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 16723  015A38  0101               	movlb	1	; () banked
 16724  015A3A  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 16725  015A3C  0101               	movlb	1	; () banked
 16726  015A3E  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 16727  015A40  0101               	movlb	1	; () banked
 16728  015A42  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 16729                           
 16730                           ; BSR set to: 1
 16731  015A44  0101               	movlb	1	; () banked
 16732  015A46  2F0E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 16733  015A48  D7C5               	goto	l12176
 16734                           
 16735                           ; BSR set to: 1
 16736  015A4A  0101               	movlb	1	; () banked
 16737  015A4C  AF0F               	btfss	__div_to_l_@exp1& (0+255),7,b
 16738  015A4E  D026               	goto	l12198
 16739                           
 16740                           ; BSR set to: 1
 16741  015A50  0101               	movlb	1	; () banked
 16742  015A52  510F               	movf	__div_to_l_@exp1& (0+255),w,b
 16743  015A54  0A80               	xorlw	128
 16744  015A56  0101               	movlb	1	; () banked
 16745  015A58  6F06               	movwf	??__div_to_l_& (0+255),b
 16746  015A5A  0EE1               	movlw	225
 16747  015A5C  0A80               	xorlw	128
 16748  015A5E  0101               	movlb	1	; () banked
 16749  015A60  5D06               	subwf	??__div_to_l_& (0+255),w,b
 16750  015A62  B0D8               	btfsc	status,0,c
 16751  015A64  D00D               	goto	l12194
 16752                           
 16753                           ; BSR set to: 1
 16754  015A66  0E00               	movlw	0
 16755  015A68  0101               	movlb	1	; () banked
 16756  015A6A  6F00               	movwf	?__div_to_l_& (0+255),b
 16757  015A6C  0E00               	movlw	0
 16758  015A6E  0101               	movlb	1	; () banked
 16759  015A70  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 16760  015A72  0E00               	movlw	0
 16761  015A74  0101               	movlb	1	; () banked
 16762  015A76  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 16763  015A78  0E00               	movlw	0
 16764  015A7A  0101               	movlb	1	; () banked
 16765  015A7C  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 16766  015A7E  0012               	return	
 16767  015A80                     l12194:
 16768                           
 16769                           ; BSR set to: 1
 16770  015A80  0101               	movlb	1	; () banked
 16771  015A82  90D8               	bcf	status,0,c
 16772  015A84  0101               	movlb	1	; () banked
 16773  015A86  330D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 16774  015A88  0101               	movlb	1	; () banked
 16775  015A8A  330C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 16776  015A8C  0101               	movlb	1	; () banked
 16777  015A8E  330B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 16778  015A90  0101               	movlb	1	; () banked
 16779  015A92  330A               	rrcf	__div_to_l_@quot& (0+255),f,b
 16780                           
 16781                           ; BSR set to: 1
 16782  015A94  0101               	movlb	1	; () banked
 16783  015A96  3F0F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 16784  015A98  D7F3               	goto	l12194
 16785  015A9A  D020               	goto	l2456
 16786  015A9C                     l12198:
 16787                           
 16788                           ; BSR set to: 1
 16789  015A9C  0E1F               	movlw	31
 16790  015A9E  0101               	movlb	1	; () banked
 16791  015AA0  650F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 16792  015AA2  D019               	goto	l12206
 16793                           
 16794                           ; BSR set to: 1
 16795  015AA4  0E00               	movlw	0
 16796  015AA6  0101               	movlb	1	; () banked
 16797  015AA8  6F00               	movwf	?__div_to_l_& (0+255),b
 16798  015AAA  0E00               	movlw	0
 16799  015AAC  0101               	movlb	1	; () banked
 16800  015AAE  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 16801  015AB0  0E00               	movlw	0
 16802  015AB2  0101               	movlb	1	; () banked
 16803  015AB4  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 16804  015AB6  0E00               	movlw	0
 16805  015AB8  0101               	movlb	1	; () banked
 16806  015ABA  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 16807  015ABC  0012               	return	
 16808  015ABE                     l12204:
 16809                           
 16810                           ; BSR set to: 1
 16811  015ABE  0101               	movlb	1	; () banked
 16812  015AC0  90D8               	bcf	status,0,c
 16813  015AC2  0101               	movlb	1	; () banked
 16814  015AC4  370A               	rlcf	__div_to_l_@quot& (0+255),f,b
 16815  015AC6  0101               	movlb	1	; () banked
 16816  015AC8  370B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 16817  015ACA  0101               	movlb	1	; () banked
 16818  015ACC  370C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 16819  015ACE  0101               	movlb	1	; () banked
 16820  015AD0  370D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 16821  015AD2  0101               	movlb	1	; () banked
 16822  015AD4  070F               	decf	__div_to_l_@exp1& (0+255),f,b
 16823  015AD6                     l12206:
 16824                           
 16825                           ; BSR set to: 1
 16826  015AD6  0101               	movlb	1	; () banked
 16827  015AD8  670F               	tstfsz	__div_to_l_@exp1& (0+255),b
 16828  015ADA  D7F1               	goto	l12204
 16829  015ADC                     l2456:
 16830                           
 16831                           ; BSR set to: 1
 16832  015ADC  C10A  F100         	movff	__div_to_l_@quot,?__div_to_l_
 16833  015AE0  C10B  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 16834  015AE4  C10C  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 16835  015AE8  C10D  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 16836                           
 16837                           ; BSR set to: 1
 16838  015AEC  0012               	return	
 16839  015AEE                     __end_of__div_to_l_:
 16840                           	opt stack 0
 16841                           tblptru	equ	0xFF8
 16842                           tblptrh	equ	0xFF7
 16843                           tblptrl	equ	0xFF6
 16844                           tablat	equ	0xFF5
 16845                           prodh	equ	0xFF4
 16846                           prodl	equ	0xFF3
 16847                           intcon	equ	0xFF2
 16848                           postinc0	equ	0xFEE
 16849                           wreg	equ	0xFE8
 16850                           postdec1	equ	0xFE5
 16851                           fsr1h	equ	0xFE2
 16852                           fsr1l	equ	0xFE1
 16853                           indf2	equ	0xFDF
 16854                           postinc2	equ	0xFDE
 16855                           postdec2	equ	0xFDD
 16856                           fsr2h	equ	0xFDA
 16857                           fsr2l	equ	0xFD9
 16858                           status	equ	0xFD8
 16859                           
 16860 ;; *************** function ___lltoft *****************
 16861 ;; Defined at:
 16862 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  c               4    8[BANK1 ] unsigned long 
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;  exp             1   16[BANK1 ] unsigned char 
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  3    8[BANK1 ] float 
 16869 ;; Registers used:
 16870 ;;		wreg, status,2, status,0, cstack
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 16876 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16877 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16878 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16880 ;;Total ram usage:        9 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:   11
 16883 ;; This function calls:
 16884 ;;		___ftpack
 16885 ;; This function is called by:
 16886 ;;		_sprintf
 16887 ;; This function uses a non-reentrant model
 16888 ;;
 16889                           
 16890                           	psect	text13
 16891  01AA5C                     __ptext13:
 16892                           	opt stack 0
 16893  01AA5C                     ___lltoft:
 16894                           	opt stack 16
 16895                           
 16896                           ; BSR set to: 1
 16897                           ;incstack = 0
 16898  01AA5C  0E8E               	movlw	142
 16899  01AA5E  0101               	movlb	1	; () banked
 16900  01AA60  6F10               	movwf	___lltoft@exp& (0+255),b
 16901  01AA62  D00C               	goto	l12278
 16902  01AA64                     l12276:
 16903                           
 16904                           ; BSR set to: 1
 16905  01AA64  0101               	movlb	1	; () banked
 16906  01AA66  90D8               	bcf	status,0,c
 16907  01AA68  0101               	movlb	1	; () banked
 16908  01AA6A  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 16909  01AA6C  0101               	movlb	1	; () banked
 16910  01AA6E  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 16911  01AA70  0101               	movlb	1	; () banked
 16912  01AA72  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
 16913  01AA74  0101               	movlb	1	; () banked
 16914  01AA76  3308               	rrcf	___lltoft@c& (0+255),f,b
 16915  01AA78  0101               	movlb	1	; () banked
 16916  01AA7A  2B10               	incf	___lltoft@exp& (0+255),f,b
 16917  01AA7C                     l12278:
 16918                           
 16919                           ; BSR set to: 1
 16920  01AA7C  0E00               	movlw	0
 16921  01AA7E  0101               	movlb	1	; () banked
 16922  01AA80  1508               	andwf	___lltoft@c& (0+255),w,b
 16923  01AA82  0101               	movlb	1	; () banked
 16924  01AA84  6F0C               	movwf	??___lltoft& (0+255),b
 16925  01AA86  0E00               	movlw	0
 16926  01AA88  0101               	movlb	1	; () banked
 16927  01AA8A  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
 16928  01AA8C  0101               	movlb	1	; () banked
 16929  01AA8E  6F0D               	movwf	(??___lltoft+1)& (0+255),b
 16930  01AA90  0E00               	movlw	0
 16931  01AA92  0101               	movlb	1	; () banked
 16932  01AA94  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
 16933  01AA96  0101               	movlb	1	; () banked
 16934  01AA98  6F0E               	movwf	(??___lltoft+2)& (0+255),b
 16935  01AA9A  0EFF               	movlw	255
 16936  01AA9C  0101               	movlb	1	; () banked
 16937  01AA9E  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
 16938  01AAA0  0101               	movlb	1	; () banked
 16939  01AAA2  6F0F               	movwf	(??___lltoft+3)& (0+255),b
 16940  01AAA4  0101               	movlb	1	; () banked
 16941  01AAA6  510F               	movf	(??___lltoft+3)& (0+255),w,b
 16942  01AAA8  110C               	iorwf	??___lltoft& (0+255),w,b
 16943  01AAAA  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
 16944  01AAAC  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
 16945  01AAAE  A4D8               	btfss	status,2,c
 16946  01AAB0  D7D9               	goto	l12276
 16947                           
 16948                           ; BSR set to: 1
 16949                           
 16950                           ; BSR set to: 1
 16951  01AAB2  C108  F100         	movff	___lltoft@c,___ftpack@arg
 16952  01AAB6  C109  F101         	movff	___lltoft@c+1,___ftpack@arg+1
 16953  01AABA  C10A  F102         	movff	___lltoft@c+2,___ftpack@arg+2
 16954  01AABE  C110  F103         	movff	___lltoft@exp,___ftpack@exp
 16955  01AAC2  0E00               	movlw	0
 16956  01AAC4  0101               	movlb	1	; () banked
 16957  01AAC6  6F04               	movwf	___ftpack@sign& (0+255),b
 16958  01AAC8  EC6E  F0C5         	call	___ftpack	;wreg free
 16959  01AACC  C100  F108         	movff	?___ftpack,?___lltoft
 16960  01AAD0  C101  F109         	movff	?___ftpack+1,?___lltoft+1
 16961  01AAD4  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
 16962  01AAD8  0012               	return	
 16963  01AADA                     __end_of___lltoft:
 16964                           	opt stack 0
 16965                           tblptru	equ	0xFF8
 16966                           tblptrh	equ	0xFF7
 16967                           tblptrl	equ	0xFF6
 16968                           tablat	equ	0xFF5
 16969                           prodh	equ	0xFF4
 16970                           prodl	equ	0xFF3
 16971                           intcon	equ	0xFF2
 16972                           postinc0	equ	0xFEE
 16973                           wreg	equ	0xFE8
 16974                           postdec1	equ	0xFE5
 16975                           fsr1h	equ	0xFE2
 16976                           fsr1l	equ	0xFE1
 16977                           indf2	equ	0xFDF
 16978                           postinc2	equ	0xFDE
 16979                           postdec2	equ	0xFDD
 16980                           fsr2h	equ	0xFDA
 16981                           fsr2l	equ	0xFD9
 16982                           status	equ	0xFD8
 16983                           
 16984 ;; *************** function ___llmod *****************
 16985 ;; Defined at:
 16986 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 16987 ;; Parameters:    Size  Location     Type
 16988 ;;  dividend        4    0[BANK1 ] unsigned long 
 16989 ;;  divisor         4    4[BANK1 ] unsigned long 
 16990 ;; Auto vars:     Size  Location     Type
 16991 ;;  counter         1    8[BANK1 ] unsigned char 
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  4    0[BANK1 ] unsigned long 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2, status,0
 16996 ;; Tracked objects:
 16997 ;;		On entry : 0/0
 16998 ;;		On exit  : 0/0
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17001 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17002 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17004 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17005 ;;Total ram usage:        9 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:   10
 17008 ;; This function calls:
 17009 ;;		Nothing
 17010 ;; This function is called by:
 17011 ;;		_sprintf
 17012 ;; This function uses a non-reentrant model
 17013 ;;
 17014                           
 17015                           	psect	text14
 17016  01A26E                     __ptext14:
 17017                           	opt stack 0
 17018  01A26E                     ___llmod:
 17019                           	opt stack 17
 17020                           
 17021                           ;incstack = 0
 17022  01A26E  0101               	movlb	1	; () banked
 17023  01A270  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 17024  01A272  1104               	iorwf	___llmod@divisor& (0+255),w,b
 17025  01A274  1105               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 17026  01A276  1106               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 17027  01A278  B4D8               	btfsc	status,2,c
 17028  01A27A  D042               	goto	l2663
 17029                           
 17030                           ; BSR set to: 1
 17031  01A27C  0E01               	movlw	1
 17032  01A27E  0101               	movlb	1	; () banked
 17033  01A280  6F08               	movwf	___llmod@counter& (0+255),b
 17034  01A282  D00C               	goto	l12264
 17035  01A284                     l12262:
 17036                           
 17037                           ; BSR set to: 1
 17038  01A284  0101               	movlb	1	; () banked
 17039  01A286  90D8               	bcf	status,0,c
 17040  01A288  0101               	movlb	1	; () banked
 17041  01A28A  3704               	rlcf	___llmod@divisor& (0+255),f,b
 17042  01A28C  0101               	movlb	1	; () banked
 17043  01A28E  3705               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 17044  01A290  0101               	movlb	1	; () banked
 17045  01A292  3706               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 17046  01A294  0101               	movlb	1	; () banked
 17047  01A296  3707               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 17048  01A298  0101               	movlb	1	; () banked
 17049  01A29A  2B08               	incf	___llmod@counter& (0+255),f,b
 17050  01A29C                     l12264:
 17051                           
 17052                           ; BSR set to: 1
 17053  01A29C  0101               	movlb	1	; () banked
 17054  01A29E  AF07               	btfss	(___llmod@divisor+3)& (0+255),7,b
 17055  01A2A0  D7F1               	goto	l12262
 17056  01A2A2                     l12266:
 17057                           
 17058                           ; BSR set to: 1
 17059  01A2A2  0101               	movlb	1	; () banked
 17060  01A2A4  5104               	movf	___llmod@divisor& (0+255),w,b
 17061  01A2A6  0101               	movlb	1	; () banked
 17062  01A2A8  5D00               	subwf	___llmod@dividend& (0+255),w,b
 17063  01A2AA  0101               	movlb	1	; () banked
 17064  01A2AC  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 17065  01A2AE  0101               	movlb	1	; () banked
 17066  01A2B0  5901               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 17067  01A2B2  0101               	movlb	1	; () banked
 17068  01A2B4  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 17069  01A2B6  0101               	movlb	1	; () banked
 17070  01A2B8  5902               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 17071  01A2BA  0101               	movlb	1	; () banked
 17072  01A2BC  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 17073  01A2BE  0101               	movlb	1	; () banked
 17074  01A2C0  5903               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 17075  01A2C2  A0D8               	btfss	status,0,c
 17076  01A2C4  D010               	goto	l12270
 17077                           
 17078                           ; BSR set to: 1
 17079  01A2C6  0101               	movlb	1	; () banked
 17080  01A2C8  5104               	movf	___llmod@divisor& (0+255),w,b
 17081  01A2CA  0101               	movlb	1	; () banked
 17082  01A2CC  5F00               	subwf	___llmod@dividend& (0+255),f,b
 17083  01A2CE  0101               	movlb	1	; () banked
 17084  01A2D0  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 17085  01A2D2  0101               	movlb	1	; () banked
 17086  01A2D4  5B01               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 17087  01A2D6  0101               	movlb	1	; () banked
 17088  01A2D8  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 17089  01A2DA  0101               	movlb	1	; () banked
 17090  01A2DC  5B02               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 17091  01A2DE  0101               	movlb	1	; () banked
 17092  01A2E0  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 17093  01A2E2  0101               	movlb	1	; () banked
 17094  01A2E4  5B03               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 17095  01A2E6                     l12270:
 17096                           
 17097                           ; BSR set to: 1
 17098  01A2E6  0101               	movlb	1	; () banked
 17099  01A2E8  90D8               	bcf	status,0,c
 17100  01A2EA  0101               	movlb	1	; () banked
 17101  01A2EC  3307               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 17102  01A2EE  0101               	movlb	1	; () banked
 17103  01A2F0  3306               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 17104  01A2F2  0101               	movlb	1	; () banked
 17105  01A2F4  3305               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 17106  01A2F6  0101               	movlb	1	; () banked
 17107  01A2F8  3304               	rrcf	___llmod@divisor& (0+255),f,b
 17108                           
 17109                           ; BSR set to: 1
 17110  01A2FA  0101               	movlb	1	; () banked
 17111  01A2FC  2F08               	decfsz	___llmod@counter& (0+255),f,b
 17112  01A2FE  D7D1               	goto	l12266
 17113  01A300                     l2663:
 17114                           
 17115                           ; BSR set to: 1
 17116  01A300  C100  F100         	movff	___llmod@dividend,?___llmod
 17117  01A304  C101  F101         	movff	___llmod@dividend+1,?___llmod+1
 17118  01A308  C102  F102         	movff	___llmod@dividend+2,?___llmod+2
 17119  01A30C  C103  F103         	movff	___llmod@dividend+3,?___llmod+3
 17120                           
 17121                           ; BSR set to: 1
 17122  01A310  0012               	return	
 17123  01A312                     __end_of___llmod:
 17124                           	opt stack 0
 17125                           tblptru	equ	0xFF8
 17126                           tblptrh	equ	0xFF7
 17127                           tblptrl	equ	0xFF6
 17128                           tablat	equ	0xFF5
 17129                           prodh	equ	0xFF4
 17130                           prodl	equ	0xFF3
 17131                           intcon	equ	0xFF2
 17132                           postinc0	equ	0xFEE
 17133                           wreg	equ	0xFE8
 17134                           postdec1	equ	0xFE5
 17135                           fsr1h	equ	0xFE2
 17136                           fsr1l	equ	0xFE1
 17137                           indf2	equ	0xFDF
 17138                           postinc2	equ	0xFDE
 17139                           postdec2	equ	0xFDD
 17140                           fsr2h	equ	0xFDA
 17141                           fsr2l	equ	0xFD9
 17142                           status	equ	0xFD8
 17143                           
 17144 ;; *************** function ___lldiv *****************
 17145 ;; Defined at:
 17146 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 17147 ;; Parameters:    Size  Location     Type
 17148 ;;  dividend        4    0[BANK1 ] unsigned long 
 17149 ;;  divisor         4    4[BANK1 ] unsigned long 
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;  quotient        4    8[BANK1 ] unsigned long 
 17152 ;;  counter         1   12[BANK1 ] unsigned char 
 17153 ;; Return value:  Size  Location     Type
 17154 ;;                  4    0[BANK1 ] unsigned long 
 17155 ;; Registers used:
 17156 ;;		wreg, status,2, status,0
 17157 ;; Tracked objects:
 17158 ;;		On entry : 0/0
 17159 ;;		On exit  : 0/0
 17160 ;;		Unchanged: 0/0
 17161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17162 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17163 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17165 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17166 ;;Total ram usage:       13 bytes
 17167 ;; Hardware stack levels used:    1
 17168 ;; Hardware stack levels required when called:   10
 17169 ;; This function calls:
 17170 ;;		Nothing
 17171 ;; This function is called by:
 17172 ;;		_sprintf
 17173 ;;		_TickConvertToMilliseconds
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text15
 17178  0197E6                     __ptext15:
 17179                           	opt stack 0
 17180  0197E6                     ___lldiv:
 17181                           	opt stack 17
 17182                           
 17183                           ; BSR set to: 1
 17184                           ;incstack = 0
 17185  0197E6  0E00               	movlw	0
 17186  0197E8  0101               	movlb	1	; () banked
 17187  0197EA  6F08               	movwf	___lldiv@quotient& (0+255),b
 17188  0197EC  0E00               	movlw	0
 17189  0197EE  0101               	movlb	1	; () banked
 17190  0197F0  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 17191  0197F2  0E00               	movlw	0
 17192  0197F4  0101               	movlb	1	; () banked
 17193  0197F6  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 17194  0197F8  0E00               	movlw	0
 17195  0197FA  0101               	movlb	1	; () banked
 17196  0197FC  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 17197                           
 17198                           ; BSR set to: 1
 17199  0197FE  0101               	movlb	1	; () banked
 17200  019800  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17201  019802  1104               	iorwf	___lldiv@divisor& (0+255),w,b
 17202  019804  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 17203  019806  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 17204  019808  B4D8               	btfsc	status,2,c
 17205  01980A  D04E               	goto	l2653
 17206                           
 17207                           ; BSR set to: 1
 17208  01980C  0E01               	movlw	1
 17209  01980E  0101               	movlb	1	; () banked
 17210  019810  6F0C               	movwf	___lldiv@counter& (0+255),b
 17211  019812  D00C               	goto	l12244
 17212  019814                     l12242:
 17213                           
 17214                           ; BSR set to: 1
 17215  019814  0101               	movlb	1	; () banked
 17216  019816  90D8               	bcf	status,0,c
 17217  019818  0101               	movlb	1	; () banked
 17218  01981A  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 17219  01981C  0101               	movlb	1	; () banked
 17220  01981E  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 17221  019820  0101               	movlb	1	; () banked
 17222  019822  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 17223  019824  0101               	movlb	1	; () banked
 17224  019826  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 17225  019828  0101               	movlb	1	; () banked
 17226  01982A  2B0C               	incf	___lldiv@counter& (0+255),f,b
 17227  01982C                     l12244:
 17228                           
 17229                           ; BSR set to: 1
 17230  01982C  0101               	movlb	1	; () banked
 17231  01982E  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 17232  019830  D7F1               	goto	l12242
 17233  019832                     l12246:
 17234                           
 17235                           ; BSR set to: 1
 17236  019832  0101               	movlb	1	; () banked
 17237  019834  90D8               	bcf	status,0,c
 17238  019836  0101               	movlb	1	; () banked
 17239  019838  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 17240  01983A  0101               	movlb	1	; () banked
 17241  01983C  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 17242  01983E  0101               	movlb	1	; () banked
 17243  019840  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 17244  019842  0101               	movlb	1	; () banked
 17245  019844  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 17246                           
 17247                           ; BSR set to: 1
 17248  019846  0101               	movlb	1	; () banked
 17249  019848  5104               	movf	___lldiv@divisor& (0+255),w,b
 17250  01984A  0101               	movlb	1	; () banked
 17251  01984C  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 17252  01984E  0101               	movlb	1	; () banked
 17253  019850  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17254  019852  0101               	movlb	1	; () banked
 17255  019854  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 17256  019856  0101               	movlb	1	; () banked
 17257  019858  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17258  01985A  0101               	movlb	1	; () banked
 17259  01985C  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 17260  01985E  0101               	movlb	1	; () banked
 17261  019860  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17262  019862  0101               	movlb	1	; () banked
 17263  019864  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 17264  019866  A0D8               	btfss	status,0,c
 17265  019868  D012               	goto	l12254
 17266                           
 17267                           ; BSR set to: 1
 17268  01986A  0101               	movlb	1	; () banked
 17269  01986C  5104               	movf	___lldiv@divisor& (0+255),w,b
 17270  01986E  0101               	movlb	1	; () banked
 17271  019870  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 17272  019872  0101               	movlb	1	; () banked
 17273  019874  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 17274  019876  0101               	movlb	1	; () banked
 17275  019878  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 17276  01987A  0101               	movlb	1	; () banked
 17277  01987C  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 17278  01987E  0101               	movlb	1	; () banked
 17279  019880  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 17280  019882  0101               	movlb	1	; () banked
 17281  019884  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 17282  019886  0101               	movlb	1	; () banked
 17283  019888  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 17284                           
 17285                           ; BSR set to: 1
 17286  01988A  0101               	movlb	1	; () banked
 17287  01988C  8108               	bsf	___lldiv@quotient& (0+255),0,b
 17288  01988E                     l12254:
 17289                           
 17290                           ; BSR set to: 1
 17291  01988E  0101               	movlb	1	; () banked
 17292  019890  90D8               	bcf	status,0,c
 17293  019892  0101               	movlb	1	; () banked
 17294  019894  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 17295  019896  0101               	movlb	1	; () banked
 17296  019898  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 17297  01989A  0101               	movlb	1	; () banked
 17298  01989C  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 17299  01989E  0101               	movlb	1	; () banked
 17300  0198A0  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 17301                           
 17302                           ; BSR set to: 1
 17303  0198A2  0101               	movlb	1	; () banked
 17304  0198A4  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 17305  0198A6  D7C5               	goto	l12246
 17306  0198A8                     l2653:
 17307                           
 17308                           ; BSR set to: 1
 17309  0198A8  C108  F100         	movff	___lldiv@quotient,?___lldiv
 17310  0198AC  C109  F101         	movff	___lldiv@quotient+1,?___lldiv+1
 17311  0198B0  C10A  F102         	movff	___lldiv@quotient+2,?___lldiv+2
 17312  0198B4  C10B  F103         	movff	___lldiv@quotient+3,?___lldiv+3
 17313                           
 17314                           ; BSR set to: 1
 17315  0198B8  0012               	return	
 17316  0198BA                     __end_of___lldiv:
 17317                           	opt stack 0
 17318                           tblptru	equ	0xFF8
 17319                           tblptrh	equ	0xFF7
 17320                           tblptrl	equ	0xFF6
 17321                           tablat	equ	0xFF5
 17322                           prodh	equ	0xFF4
 17323                           prodl	equ	0xFF3
 17324                           intcon	equ	0xFF2
 17325                           postinc0	equ	0xFEE
 17326                           wreg	equ	0xFE8
 17327                           postdec1	equ	0xFE5
 17328                           fsr1h	equ	0xFE2
 17329                           fsr1l	equ	0xFE1
 17330                           indf2	equ	0xFDF
 17331                           postinc2	equ	0xFDE
 17332                           postdec2	equ	0xFDD
 17333                           fsr2h	equ	0xFDA
 17334                           fsr2l	equ	0xFD9
 17335                           status	equ	0xFD8
 17336                           
 17337 ;; *************** function ___ftsub *****************
 17338 ;; Defined at:
 17339 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
 17340 ;; Parameters:    Size  Location     Type
 17341 ;;  f1              3   57[BANK1 ] float 
 17342 ;;  f2              3   60[BANK1 ] float 
 17343 ;; Auto vars:     Size  Location     Type
 17344 ;;		None
 17345 ;; Return value:  Size  Location     Type
 17346 ;;                  3   57[BANK1 ] float 
 17347 ;; Registers used:
 17348 ;;		wreg, status,2, status,0, cstack
 17349 ;; Tracked objects:
 17350 ;;		On entry : 0/0
 17351 ;;		On exit  : 0/0
 17352 ;;		Unchanged: 0/0
 17353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17354 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17357 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17358 ;;Total ram usage:        6 bytes
 17359 ;; Hardware stack levels used:    1
 17360 ;; Hardware stack levels required when called:   12
 17361 ;; This function calls:
 17362 ;;		___ftadd
 17363 ;; This function is called by:
 17364 ;;		_sprintf
 17365 ;; This function uses a non-reentrant model
 17366 ;;
 17367                           
 17368                           	psect	text16
 17369  01B304                     __ptext16:
 17370                           	opt stack 0
 17371  01B304                     ___ftsub:
 17372                           	opt stack 15
 17373                           
 17374                           ; BSR set to: 1
 17375                           ;incstack = 0
 17376  01B304  0E00               	movlw	0
 17377  01B306  0101               	movlb	1	; () banked
 17378  01B308  1B3C               	xorwf	___ftsub@f2& (0+255),f,b
 17379  01B30A  0E00               	movlw	0
 17380  01B30C  0101               	movlb	1	; () banked
 17381  01B30E  1B3D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 17382  01B310  0E80               	movlw	128
 17383  01B312  0101               	movlb	1	; () banked
 17384  01B314  1B3E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 17385                           
 17386                           ; BSR set to: 1
 17387  01B316  C139  F12D         	movff	___ftsub@f1,___ftadd@f1
 17388  01B31A  C13A  F12E         	movff	___ftsub@f1+1,___ftadd@f1+1
 17389  01B31E  C13B  F12F         	movff	___ftsub@f1+2,___ftadd@f1+2
 17390  01B322  C13C  F130         	movff	___ftsub@f2,___ftadd@f2
 17391  01B326  C13D  F131         	movff	___ftsub@f2+1,___ftadd@f2+1
 17392  01B32A  C13E  F132         	movff	___ftsub@f2+2,___ftadd@f2+2
 17393  01B32E  EC82  F0A6         	call	___ftadd	;wreg free
 17394  01B332  C12D  F139         	movff	?___ftadd,?___ftsub
 17395  01B336  C12E  F13A         	movff	?___ftadd+1,?___ftsub+1
 17396  01B33A  C12F  F13B         	movff	?___ftadd+2,?___ftsub+2
 17397  01B33E  0012               	return	
 17398  01B340                     __end_of___ftsub:
 17399                           	opt stack 0
 17400                           tblptru	equ	0xFF8
 17401                           tblptrh	equ	0xFF7
 17402                           tblptrl	equ	0xFF6
 17403                           tablat	equ	0xFF5
 17404                           prodh	equ	0xFF4
 17405                           prodl	equ	0xFF3
 17406                           intcon	equ	0xFF2
 17407                           postinc0	equ	0xFEE
 17408                           wreg	equ	0xFE8
 17409                           postdec1	equ	0xFE5
 17410                           fsr1h	equ	0xFE2
 17411                           fsr1l	equ	0xFE1
 17412                           indf2	equ	0xFDF
 17413                           postinc2	equ	0xFDE
 17414                           postdec2	equ	0xFDD
 17415                           fsr2h	equ	0xFDA
 17416                           fsr2l	equ	0xFD9
 17417                           status	equ	0xFD8
 17418                           
 17419 ;; *************** function ___ftneg *****************
 17420 ;; Defined at:
 17421 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
 17422 ;; Parameters:    Size  Location     Type
 17423 ;;  f1              3    0[BANK1 ] float 
 17424 ;; Auto vars:     Size  Location     Type
 17425 ;;		None
 17426 ;; Return value:  Size  Location     Type
 17427 ;;                  3    0[BANK1 ] float 
 17428 ;; Registers used:
 17429 ;;		wreg, status,2, status,0
 17430 ;; Tracked objects:
 17431 ;;		On entry : 0/0
 17432 ;;		On exit  : 0/0
 17433 ;;		Unchanged: 0/0
 17434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17435 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;Total ram usage:        3 bytes
 17440 ;; Hardware stack levels used:    1
 17441 ;; Hardware stack levels required when called:   10
 17442 ;; This function calls:
 17443 ;;		Nothing
 17444 ;; This function is called by:
 17445 ;;		_sprintf
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text17
 17450  01B4F2                     __ptext17:
 17451                           	opt stack 0
 17452  01B4F2                     ___ftneg:
 17453                           	opt stack 17
 17454                           
 17455                           ;incstack = 0
 17456  01B4F2  0E7F               	movlw	127
 17457  01B4F4  0101               	movlb	1	; () banked
 17458  01B4F6  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
 17459  01B4F8  0101               	movlb	1	; () banked
 17460  01B4FA  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 17461  01B4FC  0101               	movlb	1	; () banked
 17462  01B4FE  1100               	iorwf	___ftneg@f1& (0+255),w,b
 17463  01B500  B4D8               	btfsc	status,2,c
 17464  01B502  D009               	goto	l2599
 17465                           
 17466                           ; BSR set to: 1
 17467  01B504  0E00               	movlw	0
 17468  01B506  0101               	movlb	1	; () banked
 17469  01B508  1B00               	xorwf	___ftneg@f1& (0+255),f,b
 17470  01B50A  0E00               	movlw	0
 17471  01B50C  0101               	movlb	1	; () banked
 17472  01B50E  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 17473  01B510  0E80               	movlw	128
 17474  01B512  0101               	movlb	1	; () banked
 17475  01B514  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 17476  01B516                     l2599:
 17477                           
 17478                           ; BSR set to: 1
 17479  01B516  C100  F100         	movff	___ftneg@f1,?___ftneg
 17480  01B51A  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
 17481  01B51E  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
 17482                           
 17483                           ; BSR set to: 1
 17484  01B522  0012               	return	
 17485  01B524                     __end_of___ftneg:
 17486                           	opt stack 0
 17487                           tblptru	equ	0xFF8
 17488                           tblptrh	equ	0xFF7
 17489                           tblptrl	equ	0xFF6
 17490                           tablat	equ	0xFF5
 17491                           prodh	equ	0xFF4
 17492                           prodl	equ	0xFF3
 17493                           intcon	equ	0xFF2
 17494                           postinc0	equ	0xFEE
 17495                           wreg	equ	0xFE8
 17496                           postdec1	equ	0xFE5
 17497                           fsr1h	equ	0xFE2
 17498                           fsr1l	equ	0xFE1
 17499                           indf2	equ	0xFDF
 17500                           postinc2	equ	0xFDE
 17501                           postdec2	equ	0xFDD
 17502                           fsr2h	equ	0xFDA
 17503                           fsr2l	equ	0xFD9
 17504                           status	equ	0xFD8
 17505                           
 17506 ;; *************** function ___ftge *****************
 17507 ;; Defined at:
 17508 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
 17509 ;; Parameters:    Size  Location     Type
 17510 ;;  ff1             3    0[BANK1 ] float 
 17511 ;;  ff2             3    3[BANK1 ] float 
 17512 ;; Auto vars:     Size  Location     Type
 17513 ;;		None
 17514 ;; Return value:  Size  Location     Type
 17515 ;;		None               void
 17516 ;; Registers used:
 17517 ;;		wreg, status,2, status,0
 17518 ;; Tracked objects:
 17519 ;;		On entry : 0/0
 17520 ;;		On exit  : 0/0
 17521 ;;		Unchanged: 0/0
 17522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17523 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17525 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17526 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17527 ;;Total ram usage:        9 bytes
 17528 ;; Hardware stack levels used:    1
 17529 ;; Hardware stack levels required when called:   10
 17530 ;; This function calls:
 17531 ;;		Nothing
 17532 ;; This function is called by:
 17533 ;;		_sprintf
 17534 ;; This function uses a non-reentrant model
 17535 ;;
 17536                           
 17537                           	psect	text18
 17538  0198BA                     __ptext18:
 17539                           	opt stack 0
 17540  0198BA                     ___ftge:
 17541                           	opt stack 17
 17542                           
 17543                           ; BSR set to: 1
 17544                           ;incstack = 0
 17545  0198BA  0101               	movlb	1	; () banked
 17546  0198BC  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
 17547  0198BE  D020               	goto	l12218
 17548                           
 17549                           ; BSR set to: 1
 17550  0198C0  0101               	movlb	1	; () banked
 17551  0198C2  C100  F106         	movff	___ftge@ff1,??___ftge
 17552  0198C6  0101               	movlb	1	; () banked
 17553  0198C8  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
 17554  0198CC  0101               	movlb	1	; () banked
 17555  0198CE  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
 17556  0198D2  0101               	movlb	1	; () banked
 17557  0198D4  1F06               	comf	??___ftge& (0+255),f,b
 17558  0198D6  1F07               	comf	(??___ftge+1)& (0+255),f,b
 17559  0198D8  1F08               	comf	(??___ftge+2)& (0+255),f,b
 17560  0198DA  2B06               	incf	??___ftge& (0+255),f,b
 17561  0198DC  0E00               	movlw	0
 17562  0198DE  2307               	addwfc	(??___ftge+1)& (0+255),f,b
 17563  0198E0  2308               	addwfc	(??___ftge+2)& (0+255),f,b
 17564  0198E2  0E00               	movlw	0
 17565  0198E4  0101               	movlb	1	; () banked
 17566  0198E6  2506               	addwf	??___ftge& (0+255),w,b
 17567  0198E8  0101               	movlb	1	; () banked
 17568  0198EA  6F00               	movwf	___ftge@ff1& (0+255),b
 17569  0198EC  0E00               	movlw	0
 17570  0198EE  0101               	movlb	1	; () banked
 17571  0198F0  2107               	addwfc	(??___ftge+1)& (0+255),w,b
 17572  0198F2  0101               	movlb	1	; () banked
 17573  0198F4  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
 17574  0198F6  0E80               	movlw	128
 17575  0198F8  0101               	movlb	1	; () banked
 17576  0198FA  2108               	addwfc	(??___ftge+2)& (0+255),w,b
 17577  0198FC  0101               	movlb	1	; () banked
 17578  0198FE  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
 17579  019900                     l12218:
 17580                           
 17581                           ; BSR set to: 1
 17582  019900  0101               	movlb	1	; () banked
 17583  019902  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
 17584  019904  D020               	goto	l12222
 17585                           
 17586                           ; BSR set to: 1
 17587  019906  0101               	movlb	1	; () banked
 17588  019908  C103  F106         	movff	___ftge@ff2,??___ftge
 17589  01990C  0101               	movlb	1	; () banked
 17590  01990E  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
 17591  019912  0101               	movlb	1	; () banked
 17592  019914  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
 17593  019918  0101               	movlb	1	; () banked
 17594  01991A  1F06               	comf	??___ftge& (0+255),f,b
 17595  01991C  1F07               	comf	(??___ftge+1)& (0+255),f,b
 17596  01991E  1F08               	comf	(??___ftge+2)& (0+255),f,b
 17597  019920  2B06               	incf	??___ftge& (0+255),f,b
 17598  019922  0E00               	movlw	0
 17599  019924  2307               	addwfc	(??___ftge+1)& (0+255),f,b
 17600  019926  2308               	addwfc	(??___ftge+2)& (0+255),f,b
 17601  019928  0E00               	movlw	0
 17602  01992A  0101               	movlb	1	; () banked
 17603  01992C  2506               	addwf	??___ftge& (0+255),w,b
 17604  01992E  0101               	movlb	1	; () banked
 17605  019930  6F03               	movwf	___ftge@ff2& (0+255),b
 17606  019932  0E00               	movlw	0
 17607  019934  0101               	movlb	1	; () banked
 17608  019936  2107               	addwfc	(??___ftge+1)& (0+255),w,b
 17609  019938  0101               	movlb	1	; () banked
 17610  01993A  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 17611  01993C  0E80               	movlw	128
 17612  01993E  0101               	movlb	1	; () banked
 17613  019940  2108               	addwfc	(??___ftge+2)& (0+255),w,b
 17614  019942  0101               	movlb	1	; () banked
 17615  019944  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 17616  019946                     l12222:
 17617                           
 17618                           ; BSR set to: 1
 17619  019946  0E00               	movlw	0
 17620  019948  0101               	movlb	1	; () banked
 17621  01994A  1B00               	xorwf	___ftge@ff1& (0+255),f,b
 17622  01994C  0E00               	movlw	0
 17623  01994E  0101               	movlb	1	; () banked
 17624  019950  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 17625  019952  0E80               	movlw	128
 17626  019954  0101               	movlb	1	; () banked
 17627  019956  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 17628                           
 17629                           ; BSR set to: 1
 17630  019958  0E00               	movlw	0
 17631  01995A  0101               	movlb	1	; () banked
 17632  01995C  1B03               	xorwf	___ftge@ff2& (0+255),f,b
 17633  01995E  0E00               	movlw	0
 17634  019960  0101               	movlb	1	; () banked
 17635  019962  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 17636  019964  0E80               	movlw	128
 17637  019966  0101               	movlb	1	; () banked
 17638  019968  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 17639  01996A  0101               	movlb	1	; () banked
 17640  01996C  5103               	movf	___ftge@ff2& (0+255),w,b
 17641  01996E  0101               	movlb	1	; () banked
 17642  019970  5D00               	subwf	___ftge@ff1& (0+255),w,b
 17643  019972  0101               	movlb	1	; () banked
 17644  019974  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
 17645  019976  0101               	movlb	1	; () banked
 17646  019978  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 17647  01997A  0101               	movlb	1	; () banked
 17648  01997C  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
 17649  01997E  0101               	movlb	1	; () banked
 17650  019980  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 17651  019982  B0D8               	btfsc	status,0,c
 17652  019984  D002               	goto	l12228
 17653                           
 17654                           ; BSR set to: 1
 17655  019986  90D8               	bcf	status,0,c
 17656  019988  0012               	return	
 17657  01998A                     l12228:
 17658                           
 17659                           ; BSR set to: 1
 17660  01998A  80D8               	bsf	status,0,c
 17661  01998C  0012               	return	
 17662  01998E                     __end_of___ftge:
 17663                           	opt stack 0
 17664                           tblptru	equ	0xFF8
 17665                           tblptrh	equ	0xFF7
 17666                           tblptrl	equ	0xFF6
 17667                           tablat	equ	0xFF5
 17668                           prodh	equ	0xFF4
 17669                           prodl	equ	0xFF3
 17670                           intcon	equ	0xFF2
 17671                           postinc0	equ	0xFEE
 17672                           wreg	equ	0xFE8
 17673                           postdec1	equ	0xFE5
 17674                           fsr1h	equ	0xFE2
 17675                           fsr1l	equ	0xFE1
 17676                           indf2	equ	0xFDF
 17677                           postinc2	equ	0xFDE
 17678                           postdec2	equ	0xFDD
 17679                           fsr2h	equ	0xFDA
 17680                           fsr2l	equ	0xFD9
 17681                           status	equ	0xFD8
 17682                           
 17683 ;; *************** function ___ftdiv *****************
 17684 ;; Defined at:
 17685 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 17686 ;; Parameters:    Size  Location     Type
 17687 ;;  f1              3   12[BANK1 ] float 
 17688 ;;  f2              3   15[BANK1 ] float 
 17689 ;; Auto vars:     Size  Location     Type
 17690 ;;  f3              3   22[BANK1 ] float 
 17691 ;;  sign            1   26[BANK1 ] unsigned char 
 17692 ;;  exp             1   25[BANK1 ] unsigned char 
 17693 ;;  cntr            1   21[BANK1 ] unsigned char 
 17694 ;; Return value:  Size  Location     Type
 17695 ;;                  3   12[BANK1 ] float 
 17696 ;; Registers used:
 17697 ;;		wreg, status,2, status,0, cstack
 17698 ;; Tracked objects:
 17699 ;;		On entry : 0/0
 17700 ;;		On exit  : 0/0
 17701 ;;		Unchanged: 0/0
 17702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17703 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17704 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17705 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17706 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17707 ;;Total ram usage:       15 bytes
 17708 ;; Hardware stack levels used:    1
 17709 ;; Hardware stack levels required when called:   11
 17710 ;; This function calls:
 17711 ;;		___ftpack
 17712 ;; This function is called by:
 17713 ;;		_UpdateMasterVolume
 17714 ;; This function uses a non-reentrant model
 17715 ;;
 17716                           
 17717                           	psect	text19
 17718  017BAA                     __ptext19:
 17719                           	opt stack 0
 17720  017BAA                     ___ftdiv:
 17721                           	opt stack 17
 17722                           
 17723                           ; BSR set to: 1
 17724                           ;incstack = 0
 17725  017BAA  0101               	movlb	1	; () banked
 17726  017BAC  C10E  F112         	movff	___ftdiv@f1+2,??___ftdiv
 17727  017BB0  0101               	movlb	1	; () banked
 17728  017BB2  6B13               	clrf	(??___ftdiv+1)& (0+255),b
 17729  017BB4  6B14               	clrf	(??___ftdiv+2)& (0+255),b
 17730  017BB6  0101               	movlb	1	; () banked
 17731  017BB8  350D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 17732  017BBA  0101               	movlb	1	; () banked
 17733  017BBC  3712               	rlcf	??___ftdiv& (0+255),f,b
 17734  017BBE  E301               	bnc	u15701
 17735  017BC0  8113               	bsf	(??___ftdiv+1)& (0+255),0,b
 17736  017BC2                     u15701:
 17737  017BC2  0101               	movlb	1	; () banked
 17738  017BC4  5112               	movf	??___ftdiv& (0+255),w,b
 17739  017BC6  0101               	movlb	1	; () banked
 17740  017BC8  6F19               	movwf	___ftdiv@exp& (0+255),b
 17741  017BCA  0101               	movlb	1	; () banked
 17742  017BCC  6719               	tstfsz	___ftdiv@exp& (0+255),b
 17743  017BCE  D00A               	goto	l13654
 17744                           
 17745                           ; BSR set to: 1
 17746  017BD0  0E00               	movlw	0
 17747  017BD2  0101               	movlb	1	; () banked
 17748  017BD4  6F0C               	movwf	?___ftdiv& (0+255),b
 17749  017BD6  0E00               	movlw	0
 17750  017BD8  0101               	movlb	1	; () banked
 17751  017BDA  6F0D               	movwf	(?___ftdiv+1)& (0+255),b
 17752  017BDC  0E00               	movlw	0
 17753  017BDE  0101               	movlb	1	; () banked
 17754  017BE0  6F0E               	movwf	(?___ftdiv+2)& (0+255),b
 17755  017BE2  0012               	return	
 17756  017BE4                     l13654:
 17757                           
 17758                           ; BSR set to: 1
 17759  017BE4  0101               	movlb	1	; () banked
 17760  017BE6  C111  F112         	movff	___ftdiv@f2+2,??___ftdiv
 17761  017BEA  0101               	movlb	1	; () banked
 17762  017BEC  6B13               	clrf	(??___ftdiv+1)& (0+255),b
 17763  017BEE  6B14               	clrf	(??___ftdiv+2)& (0+255),b
 17764  017BF0  0101               	movlb	1	; () banked
 17765  017BF2  3510               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 17766  017BF4  0101               	movlb	1	; () banked
 17767  017BF6  3712               	rlcf	??___ftdiv& (0+255),f,b
 17768  017BF8  E301               	bnc	u15721
 17769  017BFA  8113               	bsf	(??___ftdiv+1)& (0+255),0,b
 17770  017BFC                     u15721:
 17771  017BFC  0101               	movlb	1	; () banked
 17772  017BFE  5112               	movf	??___ftdiv& (0+255),w,b
 17773  017C00  0101               	movlb	1	; () banked
 17774  017C02  6F1A               	movwf	___ftdiv@sign& (0+255),b
 17775  017C04  0101               	movlb	1	; () banked
 17776  017C06  671A               	tstfsz	___ftdiv@sign& (0+255),b
 17777  017C08  D00A               	goto	l13660
 17778                           
 17779                           ; BSR set to: 1
 17780  017C0A  0E00               	movlw	0
 17781  017C0C  0101               	movlb	1	; () banked
 17782  017C0E  6F0C               	movwf	?___ftdiv& (0+255),b
 17783  017C10  0E00               	movlw	0
 17784  017C12  0101               	movlb	1	; () banked
 17785  017C14  6F0D               	movwf	(?___ftdiv+1)& (0+255),b
 17786  017C16  0E00               	movlw	0
 17787  017C18  0101               	movlb	1	; () banked
 17788  017C1A  6F0E               	movwf	(?___ftdiv+2)& (0+255),b
 17789  017C1C  0012               	return	
 17790  017C1E                     l13660:
 17791                           
 17792                           ; BSR set to: 1
 17793  017C1E  0E00               	movlw	0
 17794  017C20  0101               	movlb	1	; () banked
 17795  017C22  6F16               	movwf	___ftdiv@f3& (0+255),b
 17796  017C24  0E00               	movlw	0
 17797  017C26  0101               	movlb	1	; () banked
 17798  017C28  6F17               	movwf	(___ftdiv@f3+1)& (0+255),b
 17799  017C2A  0E00               	movlw	0
 17800  017C2C  0101               	movlb	1	; () banked
 17801  017C2E  6F18               	movwf	(___ftdiv@f3+2)& (0+255),b
 17802                           
 17803                           ; BSR set to: 1
 17804  017C30  0101               	movlb	1	; () banked
 17805  017C32  511A               	movf	___ftdiv@sign& (0+255),w,b
 17806  017C34  0F89               	addlw	137
 17807  017C36  0101               	movlb	1	; () banked
 17808  017C38  5F19               	subwf	___ftdiv@exp& (0+255),f,b
 17809                           
 17810                           ; BSR set to: 1
 17811  017C3A  C10E  F11A         	movff	___ftdiv@f1+2,___ftdiv@sign
 17812                           
 17813                           ; BSR set to: 1
 17814  017C3E  0101               	movlb	1	; () banked
 17815  017C40  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17816  017C42  0101               	movlb	1	; () banked
 17817  017C44  1B1A               	xorwf	___ftdiv@sign& (0+255),f,b
 17818                           
 17819                           ; BSR set to: 1
 17820  017C46  0E80               	movlw	128
 17821  017C48  0101               	movlb	1	; () banked
 17822  017C4A  171A               	andwf	___ftdiv@sign& (0+255),f,b
 17823                           
 17824                           ; BSR set to: 1
 17825  017C4C  0101               	movlb	1	; () banked
 17826  017C4E  8F0D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 17827                           
 17828                           ; BSR set to: 1
 17829  017C50  0EFF               	movlw	255
 17830  017C52  0101               	movlb	1	; () banked
 17831  017C54  170C               	andwf	___ftdiv@f1& (0+255),f,b
 17832  017C56  0EFF               	movlw	255
 17833  017C58  0101               	movlb	1	; () banked
 17834  017C5A  170D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 17835  017C5C  0E00               	movlw	0
 17836  017C5E  0101               	movlb	1	; () banked
 17837  017C60  170E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 17838                           
 17839                           ; BSR set to: 1
 17840  017C62  0101               	movlb	1	; () banked
 17841  017C64  8F10               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 17842                           
 17843                           ; BSR set to: 1
 17844  017C66  0EFF               	movlw	255
 17845  017C68  0101               	movlb	1	; () banked
 17846  017C6A  170F               	andwf	___ftdiv@f2& (0+255),f,b
 17847  017C6C  0EFF               	movlw	255
 17848  017C6E  0101               	movlb	1	; () banked
 17849  017C70  1710               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 17850  017C72  0E00               	movlw	0
 17851  017C74  0101               	movlb	1	; () banked
 17852  017C76  1711               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 17853                           
 17854                           ; BSR set to: 1
 17855  017C78  0E18               	movlw	24
 17856  017C7A  0101               	movlb	1	; () banked
 17857  017C7C  6F15               	movwf	___ftdiv@cntr& (0+255),b
 17858  017C7E                     l13680:
 17859                           
 17860                           ; BSR set to: 1
 17861  017C7E  0101               	movlb	1	; () banked
 17862  017C80  90D8               	bcf	status,0,c
 17863  017C82  0101               	movlb	1	; () banked
 17864  017C84  3716               	rlcf	___ftdiv@f3& (0+255),f,b
 17865  017C86  0101               	movlb	1	; () banked
 17866  017C88  3717               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 17867  017C8A  0101               	movlb	1	; () banked
 17868  017C8C  3718               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 17869                           
 17870                           ; BSR set to: 1
 17871  017C8E  0101               	movlb	1	; () banked
 17872  017C90  510F               	movf	___ftdiv@f2& (0+255),w,b
 17873  017C92  0101               	movlb	1	; () banked
 17874  017C94  5D0C               	subwf	___ftdiv@f1& (0+255),w,b
 17875  017C96  0101               	movlb	1	; () banked
 17876  017C98  5110               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17877  017C9A  0101               	movlb	1	; () banked
 17878  017C9C  590D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 17879  017C9E  0101               	movlb	1	; () banked
 17880  017CA0  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17881  017CA2  0101               	movlb	1	; () banked
 17882  017CA4  590E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 17883  017CA6  A0D8               	btfss	status,0,c
 17884  017CA8  D00E               	goto	l2560
 17885                           
 17886                           ; BSR set to: 1
 17887  017CAA  0101               	movlb	1	; () banked
 17888  017CAC  510F               	movf	___ftdiv@f2& (0+255),w,b
 17889  017CAE  0101               	movlb	1	; () banked
 17890  017CB0  5F0C               	subwf	___ftdiv@f1& (0+255),f,b
 17891  017CB2  0101               	movlb	1	; () banked
 17892  017CB4  5110               	movf	(___ftdiv@f2+1)& (0+255),w,b
 17893  017CB6  0101               	movlb	1	; () banked
 17894  017CB8  5B0D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 17895  017CBA  0101               	movlb	1	; () banked
 17896  017CBC  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
 17897  017CBE  0101               	movlb	1	; () banked
 17898  017CC0  5B0E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 17899                           
 17900                           ; BSR set to: 1
 17901  017CC2  0101               	movlb	1	; () banked
 17902  017CC4  8116               	bsf	___ftdiv@f3& (0+255),0,b
 17903  017CC6                     l2560:
 17904                           
 17905                           ; BSR set to: 1
 17906  017CC6  0101               	movlb	1	; () banked
 17907  017CC8  90D8               	bcf	status,0,c
 17908  017CCA  0101               	movlb	1	; () banked
 17909  017CCC  370C               	rlcf	___ftdiv@f1& (0+255),f,b
 17910  017CCE  0101               	movlb	1	; () banked
 17911  017CD0  370D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 17912  017CD2  0101               	movlb	1	; () banked
 17913  017CD4  370E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 17914                           
 17915                           ; BSR set to: 1
 17916  017CD6  0101               	movlb	1	; () banked
 17917  017CD8  2F15               	decfsz	___ftdiv@cntr& (0+255),f,b
 17918  017CDA  D7D1               	goto	l13680
 17919                           
 17920                           ; BSR set to: 1
 17921                           
 17922                           ; BSR set to: 1
 17923  017CDC  C116  F100         	movff	___ftdiv@f3,___ftpack@arg
 17924  017CE0  C117  F101         	movff	___ftdiv@f3+1,___ftpack@arg+1
 17925  017CE4  C118  F102         	movff	___ftdiv@f3+2,___ftpack@arg+2
 17926  017CE8  C119  F103         	movff	___ftdiv@exp,___ftpack@exp
 17927  017CEC  C11A  F104         	movff	___ftdiv@sign,___ftpack@sign
 17928  017CF0  EC6E  F0C5         	call	___ftpack	;wreg free
 17929  017CF4  C100  F10C         	movff	?___ftpack,?___ftdiv
 17930  017CF8  C101  F10D         	movff	?___ftpack+1,?___ftdiv+1
 17931  017CFC  C102  F10E         	movff	?___ftpack+2,?___ftdiv+2
 17932  017D00  0012               	return	
 17933  017D02                     __end_of___ftdiv:
 17934                           	opt stack 0
 17935                           tblptru	equ	0xFF8
 17936                           tblptrh	equ	0xFF7
 17937                           tblptrl	equ	0xFF6
 17938                           tablat	equ	0xFF5
 17939                           prodh	equ	0xFF4
 17940                           prodl	equ	0xFF3
 17941                           intcon	equ	0xFF2
 17942                           postinc0	equ	0xFEE
 17943                           wreg	equ	0xFE8
 17944                           postdec1	equ	0xFE5
 17945                           fsr1h	equ	0xFE2
 17946                           fsr1l	equ	0xFE1
 17947                           indf2	equ	0xFDF
 17948                           postinc2	equ	0xFDE
 17949                           postdec2	equ	0xFDD
 17950                           fsr2h	equ	0xFDA
 17951                           fsr2l	equ	0xFD9
 17952                           status	equ	0xFD8
 17953                           
 17954 ;; *************** function ___awtoft *****************
 17955 ;; Defined at:
 17956 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  c               2    8[BANK1 ] int 
 17959 ;; Auto vars:     Size  Location     Type
 17960 ;;  sign            1   11[BANK1 ] unsigned char 
 17961 ;; Return value:  Size  Location     Type
 17962 ;;                  3    8[BANK1 ] float 
 17963 ;; Registers used:
 17964 ;;		wreg, status,2, status,0, prodl, cstack
 17965 ;; Tracked objects:
 17966 ;;		On entry : 0/0
 17967 ;;		On exit  : 0/0
 17968 ;;		Unchanged: 0/0
 17969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17970 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17971 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17973 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17974 ;;Total ram usage:        4 bytes
 17975 ;; Hardware stack levels used:    1
 17976 ;; Hardware stack levels required when called:   11
 17977 ;; This function calls:
 17978 ;;		___ftpack
 17979 ;; This function is called by:
 17980 ;;		_UpdateMasterVolume
 17981 ;; This function uses a non-reentrant model
 17982 ;;
 17983                           
 17984                           	psect	text20
 17985  01AF3C                     __ptext20:
 17986                           	opt stack 0
 17987  01AF3C                     ___awtoft:
 17988                           	opt stack 17
 17989                           
 17990                           ;incstack = 0
 17991  01AF3C  0E00               	movlw	0
 17992  01AF3E  0101               	movlb	1	; () banked
 17993  01AF40  6F0B               	movwf	___awtoft@sign& (0+255),b
 17994                           
 17995                           ; BSR set to: 1
 17996  01AF42  0101               	movlb	1	; () banked
 17997  01AF44  5109               	movf	(___awtoft@c+1)& (0+255),w,b
 17998  01AF46  0A80               	xorlw	128
 17999  01AF48  6EF3               	movwf	prodl,c
 18000  01AF4A  0E80               	movlw	128
 18001  01AF4C  5CF3               	subwf	prodl,w,c
 18002  01AF4E  0E00               	movlw	0
 18003  01AF50  B4D8               	btfsc	status,2,c
 18004  01AF52  5D08               	subwf	___awtoft@c& (0+255),w,b
 18005  01AF54  B0D8               	btfsc	status,0,c
 18006  01AF56  D009               	goto	l13702
 18007                           
 18008                           ; BSR set to: 1
 18009  01AF58  0101               	movlb	1	; () banked
 18010  01AF5A  6D08               	negf	___awtoft@c& (0+255),b
 18011  01AF5C  0101               	movlb	1	; () banked
 18012  01AF5E  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
 18013  01AF60  B0D8               	btfsc	status,0,c
 18014  01AF62  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
 18015                           
 18016                           ; BSR set to: 1
 18017  01AF64  0E01               	movlw	1
 18018  01AF66  0101               	movlb	1	; () banked
 18019  01AF68  6F0B               	movwf	___awtoft@sign& (0+255),b
 18020  01AF6A                     l13702:
 18021                           
 18022                           ; BSR set to: 1
 18023  01AF6A  0101               	movlb	1	; () banked
 18024  01AF6C  C108  F100         	movff	___awtoft@c,___ftpack@arg
 18025  01AF70  0101               	movlb	1	; () banked
 18026  01AF72  C109  F101         	movff	___awtoft@c+1,___ftpack@arg+1
 18027  01AF76  0101               	movlb	1	; () banked
 18028  01AF78  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
 18029  01AF7A  0E8E               	movlw	142
 18030  01AF7C  0101               	movlb	1	; () banked
 18031  01AF7E  6F03               	movwf	___ftpack@exp& (0+255),b
 18032  01AF80  C10B  F104         	movff	___awtoft@sign,___ftpack@sign
 18033  01AF84  EC6E  F0C5         	call	___ftpack	;wreg free
 18034  01AF88  C100  F108         	movff	?___ftpack,?___awtoft
 18035  01AF8C  C101  F109         	movff	?___ftpack+1,?___awtoft+1
 18036  01AF90  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
 18037  01AF94  0012               	return	
 18038  01AF96                     __end_of___awtoft:
 18039                           	opt stack 0
 18040                           tblptru	equ	0xFF8
 18041                           tblptrh	equ	0xFF7
 18042                           tblptrl	equ	0xFF6
 18043                           tablat	equ	0xFF5
 18044                           prodh	equ	0xFF4
 18045                           prodl	equ	0xFF3
 18046                           intcon	equ	0xFF2
 18047                           postinc0	equ	0xFEE
 18048                           wreg	equ	0xFE8
 18049                           postdec1	equ	0xFE5
 18050                           fsr1h	equ	0xFE2
 18051                           fsr1l	equ	0xFE1
 18052                           indf2	equ	0xFDF
 18053                           postinc2	equ	0xFDE
 18054                           postdec2	equ	0xFDD
 18055                           fsr2h	equ	0xFDA
 18056                           fsr2l	equ	0xFD9
 18057                           status	equ	0xFD8
 18058                           
 18059 ;; *************** function _SendVolumeToDevice *****************
 18060 ;; Defined at:
 18061 ;;		line 224 in file "Device.c"
 18062 ;; Parameters:    Size  Location     Type
 18063 ;;		None
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;		None
 18066 ;; Return value:  Size  Location     Type
 18067 ;;		None               void
 18068 ;; Registers used:
 18069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18070 ;; Tracked objects:
 18071 ;;		On entry : 0/0
 18072 ;;		On exit  : 0/0
 18073 ;;		Unchanged: 0/0
 18074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 18075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18079 ;;Total ram usage:        0 bytes
 18080 ;; Hardware stack levels used:    1
 18081 ;; Hardware stack levels required when called:   14
 18082 ;; This function calls:
 18083 ;;		_SendDataToDeviceCh
 18084 ;; This function is called by:
 18085 ;;		_TCPServer
 18086 ;;		_UpdateMasterVolume
 18087 ;; This function uses a non-reentrant model
 18088 ;;
 18089                           
 18090                           	psect	text21
 18091  01B940                     __ptext21:
 18092                           	opt stack 0
 18093  01B940                     _SendVolumeToDevice:
 18094                           	opt stack 14
 18095                           
 18096                           ;Device.c: 226: LATEbits.LE4 = 1;
 18097                           
 18098                           ;incstack = 0
 18099  01B940  888D               	bsf	3981,4,c	;volatile
 18100                           
 18101                           ;Device.c: 227: SendDataToDeviceCh(0);
 18102  01B942  0E00               	movlw	0
 18103  01B944  EC87  F0AE         	call	_SendDataToDeviceCh
 18104                           
 18105                           ;Device.c: 228: LATEbits.LE4 = 0;
 18106  01B948  988D               	bcf	3981,4,c	;volatile
 18107                           
 18108                           ;Device.c: 229: LATEbits.LE5 = 1;
 18109  01B94A  8A8D               	bsf	3981,5,c	;volatile
 18110                           
 18111                           ;Device.c: 230: SendDataToDeviceCh(8);
 18112  01B94C  0E08               	movlw	8
 18113  01B94E  EC87  F0AE         	call	_SendDataToDeviceCh
 18114                           
 18115                           ;Device.c: 231: LATEbits.LE5 = 0;
 18116  01B952  9A8D               	bcf	3981,5,c	;volatile
 18117  01B954  0012               	return	
 18118  01B956                     __end_of_SendVolumeToDevice:
 18119                           	opt stack 0
 18120                           tblptru	equ	0xFF8
 18121                           tblptrh	equ	0xFF7
 18122                           tblptrl	equ	0xFF6
 18123                           tablat	equ	0xFF5
 18124                           prodh	equ	0xFF4
 18125                           prodl	equ	0xFF3
 18126                           intcon	equ	0xFF2
 18127                           postinc0	equ	0xFEE
 18128                           wreg	equ	0xFE8
 18129                           postdec1	equ	0xFE5
 18130                           fsr1h	equ	0xFE2
 18131                           fsr1l	equ	0xFE1
 18132                           indf2	equ	0xFDF
 18133                           postinc2	equ	0xFDE
 18134                           postdec2	equ	0xFDD
 18135                           fsr2h	equ	0xFDA
 18136                           fsr2l	equ	0xFD9
 18137                           status	equ	0xFD8
 18138                           
 18139 ;; *************** function _SendDataToDeviceCh *****************
 18140 ;; Defined at:
 18141 ;;		line 192 in file "Device.c"
 18142 ;; Parameters:    Size  Location     Type
 18143 ;;  offset          1    wreg     unsigned char 
 18144 ;; Auto vars:     Size  Location     Type
 18145 ;;  offset          1   88[BANK1 ] unsigned char 
 18146 ;;  v               2   86[BANK1 ] unsigned int 
 18147 ;;  i               1  105[BANK1 ] unsigned char 
 18148 ;;  values         16   89[BANK1 ] unsigned int [8]
 18149 ;;  mask            2  106[BANK1 ] unsigned int 
 18150 ;; Return value:  Size  Location     Type
 18151 ;;		None               void
 18152 ;; Registers used:
 18153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18154 ;; Tracked objects:
 18155 ;;		On entry : 0/0
 18156 ;;		On exit  : 0/0
 18157 ;;		Unchanged: 0/0
 18158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 18159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18160 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18161 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18162 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18163 ;;Total ram usage:       25 bytes
 18164 ;; Hardware stack levels used:    1
 18165 ;; Hardware stack levels required when called:   13
 18166 ;; This function calls:
 18167 ;;		_DbToCode
 18168 ;; This function is called by:
 18169 ;;		_SendVolumeToDevice
 18170 ;; This function uses a non-reentrant model
 18171 ;;
 18172                           
 18173                           	psect	text22
 18174  015D0E                     __ptext22:
 18175                           	opt stack 0
 18176  015D0E                     _SendDataToDeviceCh:
 18177                           	opt stack 14
 18178                           
 18179                           ;incstack = 0
 18180                           ;SendDataToDeviceCh@offset stored from wreg
 18181  015D0E  0101               	movlb	1	; () banked
 18182  015D10  6F58               	movwf	SendDataToDeviceCh@offset& (0+255),b
 18183                           
 18184                           ; BSR set to: 1
 18185                           ;Device.c: 194: uint16_t values[8];
 18186                           ;Device.c: 196: for(uint8_t i = 0; i < 8; i++)
 18187  015D12  0E00               	movlw	0
 18188  015D14  0101               	movlb	1	; () banked
 18189  015D16  6F69               	movwf	SendDataToDeviceCh@i& (0+255),b
 18190  015D18  D03B               	goto	L12
 18191  015D1A                     l11978:
 18192                           
 18193                           ; BSR set to: 1
 18194                           ;Device.c: 197: {
 18195                           ;Device.c: 198: uint16_t v = ((uint16_t)s_dacSettings.ChannelScaling[i + offset]) + s_da
      +                          cSettings.Volume;
 18196  015D1A  0101               	movlb	1	; () banked
 18197  015D1C  5158               	movf	SendDataToDeviceCh@offset& (0+255),w,b
 18198  015D1E  0101               	movlb	1	; () banked
 18199  015D20  C169  F153         	movff	SendDataToDeviceCh@i,??_SendDataToDeviceCh
 18200  015D24  0101               	movlb	1	; () banked
 18201  015D26  6B54               	clrf	(??_SendDataToDeviceCh+1)& (0+255),b
 18202  015D28  0101               	movlb	1	; () banked
 18203  015D2A  2753               	addwf	??_SendDataToDeviceCh& (0+255),f,b
 18204  015D2C  0E00               	movlw	0
 18205  015D2E  2354               	addwfc	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18206  015D30  0102               	movlb	2	; () banked
 18207  015D32  0ED6               	movlw	low (_s_dacSettings+3)
 18208  015D34  0101               	movlb	1	; () banked
 18209  015D36  2553               	addwf	??_SendDataToDeviceCh& (0+255),w,b
 18210  015D38  6ED9               	movwf	fsr2l,c
 18211  015D3A  0102               	movlb	2	; () banked
 18212  015D3C  0E02               	movlw	high (_s_dacSettings+3)
 18213  015D3E  0101               	movlb	1	; () banked
 18214  015D40  2154               	addwfc	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18215  015D42  6EDA               	movwf	fsr2h,c
 18216  015D44  50DF               	movf	indf2,w,c
 18217  015D46  0101               	movlb	1	; () banked
 18218  015D48  6F55               	movwf	(??_SendDataToDeviceCh+2)& (0+255),b
 18219  015D4A  0101               	movlb	1	; () banked
 18220  015D4C  5155               	movf	(??_SendDataToDeviceCh+2)& (0+255),w,b
 18221  015D4E  0102               	movlb	2	; () banked
 18222  015D50  25D5               	addwf	(_s_dacSettings+2)& (0+255),w,b
 18223  015D52  0101               	movlb	1	; () banked
 18224  015D54  6F56               	movwf	SendDataToDeviceCh@v& (0+255),b
 18225  015D56  0101               	movlb	1	; () banked
 18226  015D58  6B57               	clrf	(SendDataToDeviceCh@v+1)& (0+255),b
 18227  015D5A  0101               	movlb	1	; () banked
 18228  015D5C  3757               	rlcf	(SendDataToDeviceCh@v+1)& (0+255),f,b
 18229                           
 18230                           ; BSR set to: 1
 18231                           ;Device.c: 199: values[i] = DbToCode(v);
 18232  015D5E  C156  F148         	movff	SendDataToDeviceCh@v,DbToCode@volume
 18233  015D62  C157  F149         	movff	SendDataToDeviceCh@v+1,DbToCode@volume+1
 18234  015D66  ECFD  F0A8         	call	_DbToCode	;wreg free
 18235  015D6A  0101               	movlb	1	; () banked
 18236  015D6C  5169               	movf	SendDataToDeviceCh@i& (0+255),w,b
 18237  015D6E  0D02               	mullw	2
 18238  015D70  0101               	movlb	1	; () banked
 18239  015D72  0E59               	movlw	low SendDataToDeviceCh@values
 18240  015D74  24F3               	addwf	prodl,w,c
 18241  015D76  6ED9               	movwf	fsr2l,c
 18242  015D78  0101               	movlb	1	; () banked
 18243  015D7A  0E01               	movlw	high SendDataToDeviceCh@values
 18244  015D7C  20F4               	addwfc	prodh,w,c
 18245  015D7E  6EDA               	movwf	fsr2h,c
 18246  015D80  0101               	movlb	1	; () banked
 18247  015D82  C148  FFDE         	movff	?_DbToCode,postinc2
 18248  015D86  0101               	movlb	1	; () banked
 18249  015D88  C149  FFDD         	movff	?_DbToCode+1,postdec2
 18250                           
 18251                           ; BSR set to: 1
 18252  015D8C  0101               	movlb	1	; () banked
 18253  015D8E  2B69               	incf	SendDataToDeviceCh@i& (0+255),f,b
 18254  015D90                     L12:
 18255                           
 18256                           ; BSR set to: 1
 18257  015D90  0E07               	movlw	7
 18258  015D92  0101               	movlb	1	; () banked
 18259  015D94  6569               	cpfsgt	SendDataToDeviceCh@i& (0+255),b
 18260  015D96  D7C1               	goto	l11978
 18261                           
 18262                           ; BSR set to: 1
 18263                           ;Device.c: 200: }
 18264                           ;Device.c: 202: uint16_t mask = 0x0800;
 18265                           
 18266                           ; BSR set to: 1
 18267  015D98  0E08               	movlw	8
 18268  015D9A  0101               	movlb	1	; () banked
 18269  015D9C  6F6B               	movwf	(SendDataToDeviceCh@mask+1)& (0+255),b
 18270  015D9E  0E00               	movlw	0
 18271  015DA0  0101               	movlb	1	; () banked
 18272  015DA2  6F6A               	movwf	SendDataToDeviceCh@mask& (0+255),b
 18273                           
 18274                           ;Device.c: 204: while(mask > 0)
 18275  015DA4  D0BD               	goto	l12022
 18276  015DA6                     l1879:
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;Device.c: 205: {
 18280                           ;Device.c: 206: LATEbits.LE3 = 0;
 18281  015DA6  968D               	bcf	3981,3,c	;volatile
 18282                           
 18283                           ; BSR set to: 1
 18284                           ;Device.c: 207: if (values[0] & mask) LATFbits.LF1 = 1; else LATFbits.LF1 = 0;
 18285  015DA8  0101               	movlb	1	; () banked
 18286  015DAA  C159  F153         	movff	SendDataToDeviceCh@values,??_SendDataToDeviceCh
 18287  015DAE  0101               	movlb	1	; () banked
 18288  015DB0  C15A  F154         	movff	SendDataToDeviceCh@values+1,??_SendDataToDeviceCh+1
 18289  015DB4  0101               	movlb	1	; () banked
 18290  015DB6  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18291  015DB8  0101               	movlb	1	; () banked
 18292  015DBA  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18293  015DBC  0101               	movlb	1	; () banked
 18294  015DBE  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18295  015DC0  0101               	movlb	1	; () banked
 18296  015DC2  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18297  015DC4  0101               	movlb	1	; () banked
 18298  015DC6  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18299  015DC8  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18300  015DCA  B4D8               	btfsc	status,2,c
 18301  015DCC  D002               	goto	l1880
 18302                           
 18303                           ; BSR set to: 1
 18304  015DCE  828E               	bsf	3982,1,c	;volatile
 18305  015DD0  D001               	goto	l11992
 18306  015DD2                     l1880:
 18307                           
 18308                           ; BSR set to: 1
 18309  015DD2  928E               	bcf	3982,1,c	;volatile
 18310  015DD4                     l11992:
 18311                           
 18312                           ; BSR set to: 1
 18313                           ;Device.c: 208: if (values[1] & mask) LATFbits.LF2 = 1; else LATFbits.LF2 = 0;
 18314  015DD4  0101               	movlb	1	; () banked
 18315  015DD6  EE21  F05B         	lfsr	2,SendDataToDeviceCh@values+2
 18316  015DDA  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18317  015DDE  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18318  015DE2  0101               	movlb	1	; () banked
 18319  015DE4  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18320  015DE6  0101               	movlb	1	; () banked
 18321  015DE8  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18322  015DEA  0101               	movlb	1	; () banked
 18323  015DEC  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18324  015DEE  0101               	movlb	1	; () banked
 18325  015DF0  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18326  015DF2  0101               	movlb	1	; () banked
 18327  015DF4  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18328  015DF6  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18329  015DF8  B4D8               	btfsc	status,2,c
 18330  015DFA  D002               	goto	l1882
 18331                           
 18332                           ; BSR set to: 1
 18333  015DFC  848E               	bsf	3982,2,c	;volatile
 18334  015DFE  D001               	goto	l11996
 18335  015E00                     l1882:
 18336                           
 18337                           ; BSR set to: 1
 18338  015E00  948E               	bcf	3982,2,c	;volatile
 18339  015E02                     l11996:
 18340                           
 18341                           ; BSR set to: 1
 18342                           ;Device.c: 209: if (values[2] & mask) LATFbits.LF3 = 1; else LATFbits.LF3 = 0;
 18343  015E02  0101               	movlb	1	; () banked
 18344  015E04  EE21  F05D         	lfsr	2,SendDataToDeviceCh@values+4
 18345  015E08  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18346  015E0C  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18347  015E10  0101               	movlb	1	; () banked
 18348  015E12  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18349  015E14  0101               	movlb	1	; () banked
 18350  015E16  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18351  015E18  0101               	movlb	1	; () banked
 18352  015E1A  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18353  015E1C  0101               	movlb	1	; () banked
 18354  015E1E  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18355  015E20  0101               	movlb	1	; () banked
 18356  015E22  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18357  015E24  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18358  015E26  B4D8               	btfsc	status,2,c
 18359  015E28  D002               	goto	l1884
 18360                           
 18361                           ; BSR set to: 1
 18362  015E2A  868E               	bsf	3982,3,c	;volatile
 18363  015E2C  D001               	goto	l12000
 18364  015E2E                     l1884:
 18365                           
 18366                           ; BSR set to: 1
 18367  015E2E  968E               	bcf	3982,3,c	;volatile
 18368  015E30                     l12000:
 18369                           
 18370                           ; BSR set to: 1
 18371                           ;Device.c: 210: if (values[3] & mask) LATFbits.LF4 = 1; else LATFbits.LF4 = 0;
 18372  015E30  0101               	movlb	1	; () banked
 18373  015E32  EE21  F05F         	lfsr	2,SendDataToDeviceCh@values+6
 18374  015E36  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18375  015E3A  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18376  015E3E  0101               	movlb	1	; () banked
 18377  015E40  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18378  015E42  0101               	movlb	1	; () banked
 18379  015E44  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18380  015E46  0101               	movlb	1	; () banked
 18381  015E48  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18382  015E4A  0101               	movlb	1	; () banked
 18383  015E4C  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18384  015E4E  0101               	movlb	1	; () banked
 18385  015E50  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18386  015E52  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18387  015E54  B4D8               	btfsc	status,2,c
 18388  015E56  D002               	goto	l1886
 18389                           
 18390                           ; BSR set to: 1
 18391  015E58  888E               	bsf	3982,4,c	;volatile
 18392  015E5A  D001               	goto	l12004
 18393  015E5C                     l1886:
 18394                           
 18395                           ; BSR set to: 1
 18396  015E5C  988E               	bcf	3982,4,c	;volatile
 18397  015E5E                     l12004:
 18398                           
 18399                           ; BSR set to: 1
 18400                           ;Device.c: 211: if (values[4] & mask) LATFbits.LF5 = 1; else LATFbits.LF5 = 0;
 18401  015E5E  0101               	movlb	1	; () banked
 18402  015E60  EE21  F061         	lfsr	2,SendDataToDeviceCh@values+8
 18403  015E64  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18404  015E68  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18405  015E6C  0101               	movlb	1	; () banked
 18406  015E6E  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18407  015E70  0101               	movlb	1	; () banked
 18408  015E72  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18409  015E74  0101               	movlb	1	; () banked
 18410  015E76  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18411  015E78  0101               	movlb	1	; () banked
 18412  015E7A  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18413  015E7C  0101               	movlb	1	; () banked
 18414  015E7E  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18415  015E80  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18416  015E82  B4D8               	btfsc	status,2,c
 18417  015E84  D002               	goto	l1888
 18418                           
 18419                           ; BSR set to: 1
 18420  015E86  8A8E               	bsf	3982,5,c	;volatile
 18421  015E88  D001               	goto	l12008
 18422  015E8A                     l1888:
 18423                           
 18424                           ; BSR set to: 1
 18425  015E8A  9A8E               	bcf	3982,5,c	;volatile
 18426  015E8C                     l12008:
 18427                           
 18428                           ; BSR set to: 1
 18429                           ;Device.c: 212: if (values[5] & mask) LATFbits.LF6 = 1; else LATFbits.LF6 = 0;
 18430  015E8C  0101               	movlb	1	; () banked
 18431  015E8E  EE21  F063         	lfsr	2,SendDataToDeviceCh@values+10
 18432  015E92  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18433  015E96  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18434  015E9A  0101               	movlb	1	; () banked
 18435  015E9C  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18436  015E9E  0101               	movlb	1	; () banked
 18437  015EA0  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18438  015EA2  0101               	movlb	1	; () banked
 18439  015EA4  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18440  015EA6  0101               	movlb	1	; () banked
 18441  015EA8  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18442  015EAA  0101               	movlb	1	; () banked
 18443  015EAC  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18444  015EAE  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18445  015EB0  B4D8               	btfsc	status,2,c
 18446  015EB2  D002               	goto	l1890
 18447                           
 18448                           ; BSR set to: 1
 18449  015EB4  8C8E               	bsf	3982,6,c	;volatile
 18450  015EB6  D001               	goto	l12012
 18451  015EB8                     l1890:
 18452                           
 18453                           ; BSR set to: 1
 18454  015EB8  9C8E               	bcf	3982,6,c	;volatile
 18455  015EBA                     l12012:
 18456                           
 18457                           ; BSR set to: 1
 18458                           ;Device.c: 213: if (values[6] & mask) LATFbits.LF7 = 1; else LATFbits.LF7 = 0;
 18459  015EBA  0101               	movlb	1	; () banked
 18460  015EBC  EE21  F065         	lfsr	2,SendDataToDeviceCh@values+12
 18461  015EC0  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18462  015EC4  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18463  015EC8  0101               	movlb	1	; () banked
 18464  015ECA  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18465  015ECC  0101               	movlb	1	; () banked
 18466  015ECE  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18467  015ED0  0101               	movlb	1	; () banked
 18468  015ED2  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18469  015ED4  0101               	movlb	1	; () banked
 18470  015ED6  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18471  015ED8  0101               	movlb	1	; () banked
 18472  015EDA  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18473  015EDC  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18474  015EDE  B4D8               	btfsc	status,2,c
 18475  015EE0  D002               	goto	l1892
 18476                           
 18477                           ; BSR set to: 1
 18478  015EE2  8E8E               	bsf	3982,7,c	;volatile
 18479  015EE4  D001               	goto	l12016
 18480  015EE6                     l1892:
 18481                           
 18482                           ; BSR set to: 1
 18483  015EE6  9E8E               	bcf	3982,7,c	;volatile
 18484  015EE8                     l12016:
 18485                           
 18486                           ; BSR set to: 1
 18487                           ;Device.c: 214: if (values[7] & mask) LATGbits.LG4 = 1; else LATGbits.LG4 = 0;
 18488  015EE8  0101               	movlb	1	; () banked
 18489  015EEA  EE21  F067         	lfsr	2,SendDataToDeviceCh@values+14
 18490  015EEE  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 18491  015EF2  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 18492  015EF6  0101               	movlb	1	; () banked
 18493  015EF8  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 18494  015EFA  0101               	movlb	1	; () banked
 18495  015EFC  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 18496  015EFE  0101               	movlb	1	; () banked
 18497  015F00  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18498  015F02  0101               	movlb	1	; () banked
 18499  015F04  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 18500  015F06  0101               	movlb	1	; () banked
 18501  015F08  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 18502  015F0A  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 18503  015F0C  B4D8               	btfsc	status,2,c
 18504  015F0E  D002               	goto	l1894
 18505                           
 18506                           ; BSR set to: 1
 18507  015F10  888F               	bsf	3983,4,c	;volatile
 18508  015F12  D001               	goto	l1895
 18509  015F14                     l1894:
 18510                           
 18511                           ; BSR set to: 1
 18512  015F14  988F               	bcf	3983,4,c	;volatile
 18513  015F16                     l1895:
 18514                           
 18515                           ; BSR set to: 1
 18516                           ;Device.c: 215: LATEbits.LE3 = 1;
 18517  015F16  868D               	bsf	3981,3,c	;volatile
 18518                           
 18519                           ; BSR set to: 1
 18520                           ;Device.c: 218: mask >>=1;
 18521  015F18  0101               	movlb	1	; () banked
 18522  015F1A  90D8               	bcf	status,0,c
 18523  015F1C  336B               	rrcf	(SendDataToDeviceCh@mask+1)& (0+255),f,b
 18524  015F1E  336A               	rrcf	SendDataToDeviceCh@mask& (0+255),f,b
 18525  015F20                     l12022:
 18526                           
 18527                           ; BSR set to: 1
 18528  015F20  0101               	movlb	1	; () banked
 18529  015F22  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 18530  015F24  116A               	iorwf	SendDataToDeviceCh@mask& (0+255),w,b
 18531  015F26  B4D8               	btfsc	status,2,c
 18532                           
 18533                           ; BSR set to: 1
 18534                           
 18535                           ; BSR set to: 1
 18536  015F28  0012               	return	
 18537  015F2A  D73D               	goto	l1879
 18538  015F2C                     __end_of_SendDataToDeviceCh:
 18539                           	opt stack 0
 18540                           tblptru	equ	0xFF8
 18541                           tblptrh	equ	0xFF7
 18542                           tblptrl	equ	0xFF6
 18543                           tablat	equ	0xFF5
 18544                           prodh	equ	0xFF4
 18545                           prodl	equ	0xFF3
 18546                           intcon	equ	0xFF2
 18547                           postinc0	equ	0xFEE
 18548                           wreg	equ	0xFE8
 18549                           postdec1	equ	0xFE5
 18550                           fsr1h	equ	0xFE2
 18551                           fsr1l	equ	0xFE1
 18552                           indf2	equ	0xFDF
 18553                           postinc2	equ	0xFDE
 18554                           postdec2	equ	0xFDD
 18555                           fsr2h	equ	0xFDA
 18556                           fsr2l	equ	0xFD9
 18557                           status	equ	0xFD8
 18558                           
 18559 ;; *************** function _DbToCode *****************
 18560 ;; Defined at:
 18561 ;;		line 64 in file "Device.c"
 18562 ;; Parameters:    Size  Location     Type
 18563 ;;  volume          2   72[BANK1 ] unsigned int 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;  k               3   80[BANK1 ] unsigned int 
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  2   72[BANK1 ] unsigned int 
 18568 ;; Registers used:
 18569 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/0
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 18575 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18576 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18577 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18578 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18579 ;;Total ram usage:       11 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; Hardware stack levels required when called:   12
 18582 ;; This function calls:
 18583 ;;		___ftadd
 18584 ;;		___ftmul
 18585 ;;		___fttol
 18586 ;;		___lwtoft
 18587 ;; This function is called by:
 18588 ;;		_SendDataToDeviceCh
 18589 ;; This function uses a non-reentrant model
 18590 ;;
 18591                           
 18592                           	psect	text23
 18593  0151FA                     __ptext23:
 18594                           	opt stack 0
 18595  0151FA                     _DbToCode:
 18596                           	opt stack 14
 18597                           
 18598                           ;Device.c: 66: double k = 1;
 18599                           
 18600                           ; BSR set to: 1
 18601                           ;incstack = 0
 18602  0151FA  0E00               	movlw	0
 18603  0151FC  0101               	movlb	1	; () banked
 18604  0151FE  6F50               	movwf	DbToCode@k& (0+255),b
 18605  015200  0E80               	movlw	128
 18606  015202  0101               	movlb	1	; () banked
 18607  015204  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18608  015206  0E3F               	movlw	63
 18609  015208  0101               	movlb	1	; () banked
 18610  01520A  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18611                           
 18612                           ; BSR set to: 1
 18613                           ;Device.c: 67: if (volume < 192)
 18614  01520C  0EC0               	movlw	192
 18615  01520E  0101               	movlb	1	; () banked
 18616  015210  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18617  015212  0E00               	movlw	0
 18618  015214  0101               	movlb	1	; () banked
 18619  015216  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18620  015218  B0D8               	btfsc	status,0,c
 18621  01521A  D039               	goto	l11004
 18622                           
 18623                           ; BSR set to: 1
 18624                           ;Device.c: 68: {
 18625                           ;Device.c: 69: if (volume < 96)
 18626  01521C  0E60               	movlw	96
 18627  01521E  0101               	movlb	1	; () banked
 18628  015220  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18629  015222  0E00               	movlw	0
 18630  015224  0101               	movlb	1	; () banked
 18631  015226  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18632  015228  B0D8               	btfsc	status,0,c
 18633  01522A  D013               	goto	l10994
 18634                           
 18635                           ; BSR set to: 1
 18636                           ;Device.c: 70: {
 18637                           ;Device.c: 71: if (volume >= 48)
 18638  01522C  0E30               	movlw	48
 18639  01522E  0101               	movlb	1	; () banked
 18640  015230  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18641  015232  0E00               	movlw	0
 18642  015234  0101               	movlb	1	; () banked
 18643  015236  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18644  015238  A0D8               	btfss	status,0,c
 18645  01523A  D0B2               	goto	l11044
 18646                           
 18647                           ; BSR set to: 1
 18648                           ;Device.c: 72: {
 18649                           ;Device.c: 73: k = 0.501187233627272;
 18650  01523C  0E4E               	movlw	78
 18651  01523E  0101               	movlb	1	; () banked
 18652  015240  6F50               	movwf	DbToCode@k& (0+255),b
 18653  015242  0E00               	movlw	0
 18654  015244  0101               	movlb	1	; () banked
 18655  015246  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18656  015248  0E3F               	movlw	63
 18657  01524A  0101               	movlb	1	; () banked
 18658  01524C  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18659                           
 18660                           ; BSR set to: 1
 18661                           ;Device.c: 74: volume -= 48;
 18662  01524E  0E30               	movlw	48
 18663  015250  D04B               	goto	L16
 18664  015252                     l10994:
 18665                           
 18666                           ; BSR set to: 1
 18667                           ;Device.c: 77: else
 18668                           ;Device.c: 78: {
 18669                           ;Device.c: 79: if (volume < 144)
 18670  015252  0E90               	movlw	144
 18671  015254  0101               	movlb	1	; () banked
 18672  015256  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18673  015258  0E00               	movlw	0
 18674  01525A  0101               	movlb	1	; () banked
 18675  01525C  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18676  01525E  B0D8               	btfsc	status,0,c
 18677  015260  D00B               	goto	l11000
 18678                           
 18679                           ; BSR set to: 1
 18680                           ;Device.c: 80: {
 18681                           ;Device.c: 81: k = 0.251188643150958;
 18682  015262  0E9C               	movlw	156
 18683  015264  0101               	movlb	1	; () banked
 18684  015266  6F50               	movwf	DbToCode@k& (0+255),b
 18685  015268  0E80               	movlw	128
 18686  01526A  0101               	movlb	1	; () banked
 18687  01526C  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18688  01526E  0E3E               	movlw	62
 18689  015270  0101               	movlb	1	; () banked
 18690  015272  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18691                           
 18692                           ; BSR set to: 1
 18693                           ;Device.c: 82: volume -= 96;
 18694  015274  0E60               	movlw	96
 18695  015276  D038               	goto	L16
 18696  015278                     l11000:
 18697                           
 18698                           ; BSR set to: 1
 18699                           ;Device.c: 84: else
 18700                           ;Device.c: 85: {
 18701                           ;Device.c: 86: k = 0.125892541179417;
 18702  015278  0EEA               	movlw	234
 18703  01527A  0101               	movlb	1	; () banked
 18704  01527C  6F50               	movwf	DbToCode@k& (0+255),b
 18705  01527E  0E00               	movlw	0
 18706  015280  0101               	movlb	1	; () banked
 18707  015282  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18708  015284  0E3E               	movlw	62
 18709  015286  0101               	movlb	1	; () banked
 18710  015288  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18711                           
 18712                           ; BSR set to: 1
 18713                           ;Device.c: 87: volume -= 144;
 18714  01528A  0E90               	movlw	144
 18715  01528C  D02D               	goto	L16
 18716  01528E                     l11004:
 18717                           
 18718                           ; BSR set to: 1
 18719                           ;Device.c: 91: else
 18720                           ;Device.c: 92: {
 18721                           ;Device.c: 93: if (volume < 384)
 18722  01528E  0E80               	movlw	128
 18723  015290  0101               	movlb	1	; () banked
 18724  015292  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18725  015294  0E01               	movlw	1
 18726  015296  0101               	movlb	1	; () banked
 18727  015298  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18728  01529A  B0D8               	btfsc	status,0,c
 18729  01529C  D049               	goto	l11028
 18730                           
 18731                           ; BSR set to: 1
 18732                           ;Device.c: 94: {
 18733                           ;Device.c: 95: if (volume < 288)
 18734  01529E  0E20               	movlw	32
 18735  0152A0  0101               	movlb	1	; () banked
 18736  0152A2  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18737  0152A4  0E01               	movlw	1
 18738  0152A6  0101               	movlb	1	; () banked
 18739  0152A8  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18740  0152AA  B0D8               	btfsc	status,0,c
 18741  0152AC  D021               	goto	l11018
 18742                           
 18743                           ; BSR set to: 1
 18744                           ;Device.c: 96: {
 18745                           ;Device.c: 97: if (volume < 240)
 18746  0152AE  0EF0               	movlw	240
 18747  0152B0  0101               	movlb	1	; () banked
 18748  0152B2  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18749  0152B4  0E00               	movlw	0
 18750  0152B6  0101               	movlb	1	; () banked
 18751  0152B8  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18752  0152BA  B0D8               	btfsc	status,0,c
 18753  0152BC  D00B               	goto	l11014
 18754                           
 18755                           ; BSR set to: 1
 18756                           ;Device.c: 98: {
 18757                           ;Device.c: 99: k = 0.0630957344480193;
 18758  0152BE  0E38               	movlw	56
 18759  0152C0  0101               	movlb	1	; () banked
 18760  0152C2  6F50               	movwf	DbToCode@k& (0+255),b
 18761  0152C4  0E81               	movlw	129
 18762  0152C6  0101               	movlb	1	; () banked
 18763  0152C8  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18764  0152CA  0E3D               	movlw	61
 18765  0152CC  0101               	movlb	1	; () banked
 18766  0152CE  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18767                           
 18768                           ; BSR set to: 1
 18769                           ;Device.c: 100: volume -= 192;
 18770  0152D0  0EC0               	movlw	192
 18771  0152D2  D00A               	goto	L16
 18772  0152D4                     l11014:
 18773                           
 18774                           ; BSR set to: 1
 18775                           ;Device.c: 102: else
 18776                           ;Device.c: 103: {
 18777                           ;Device.c: 104: k = 0.0316227766016838;
 18778  0152D4  0E87               	movlw	135
 18779  0152D6  0101               	movlb	1	; () banked
 18780  0152D8  6F50               	movwf	DbToCode@k& (0+255),b
 18781  0152DA  0E01               	movlw	1
 18782  0152DC  0101               	movlb	1	; () banked
 18783  0152DE  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18784  0152E0  0E3D               	movlw	61
 18785  0152E2  0101               	movlb	1	; () banked
 18786  0152E4  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18787                           
 18788                           ; BSR set to: 1
 18789                           ;Device.c: 105: volume -= 240;
 18790  0152E6  0EF0               	movlw	240
 18791  0152E8                     L16:
 18792  0152E8  0101               	movlb	1	; () banked
 18793  0152EA  5F48               	subwf	DbToCode@volume& (0+255),f,b
 18794  0152EC  0E00               	movlw	0
 18795  0152EE  D056               	goto	L19
 18796  0152F0                     l11018:
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;Device.c: 108: else
 18800                           ;Device.c: 109: {
 18801                           ;Device.c: 110: if (volume < 336)
 18802  0152F0  0E50               	movlw	80
 18803  0152F2  0101               	movlb	1	; () banked
 18804  0152F4  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18805  0152F6  0E01               	movlw	1
 18806  0152F8  0101               	movlb	1	; () banked
 18807  0152FA  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18808  0152FC  B0D8               	btfsc	status,0,c
 18809  0152FE  D00C               	goto	l11024
 18810                           
 18811                           ; BSR set to: 1
 18812                           ;Device.c: 111: {
 18813                           ;Device.c: 112: k = 0.0158489319246111;
 18814  015300  0ED6               	movlw	214
 18815  015302  0101               	movlb	1	; () banked
 18816  015304  6F50               	movwf	DbToCode@k& (0+255),b
 18817  015306  0E81               	movlw	129
 18818  015308  0101               	movlb	1	; () banked
 18819  01530A  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18820  01530C  0E3C               	movlw	60
 18821  01530E  0101               	movlb	1	; () banked
 18822  015310  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18823                           
 18824                           ; BSR set to: 1
 18825                           ;Device.c: 113: volume -= 288;
 18826  015312  0101               	movlb	1	; () banked
 18827  015314  0E20               	movlw	32
 18828  015316  D03F               	goto	L20
 18829  015318                     l11024:
 18830                           
 18831                           ; BSR set to: 1
 18832                           ;Device.c: 115: else
 18833                           ;Device.c: 116: {
 18834                           ;Device.c: 117: k = 0.0079432823472428;
 18835  015318  0E25               	movlw	37
 18836  01531A  0101               	movlb	1	; () banked
 18837  01531C  6F50               	movwf	DbToCode@k& (0+255),b
 18838  01531E  0E02               	movlw	2
 18839  015320  0101               	movlb	1	; () banked
 18840  015322  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18841  015324  0E3C               	movlw	60
 18842  015326  0101               	movlb	1	; () banked
 18843  015328  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18844                           
 18845                           ; BSR set to: 1
 18846                           ;Device.c: 118: volume -= 336;
 18847  01532A  0101               	movlb	1	; () banked
 18848  01532C  0E50               	movlw	80
 18849  01532E  D033               	goto	L20
 18850  015330                     l11028:
 18851                           
 18852                           ; BSR set to: 1
 18853                           ;Device.c: 122: else
 18854                           ;Device.c: 123: {
 18855                           ;Device.c: 124: if (volume < 480)
 18856  015330  0EE0               	movlw	224
 18857  015332  0101               	movlb	1	; () banked
 18858  015334  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18859  015336  0E01               	movlw	1
 18860  015338  0101               	movlb	1	; () banked
 18861  01533A  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18862  01533C  B0D8               	btfsc	status,0,c
 18863  01533E  D020               	goto	l11040
 18864                           
 18865                           ; BSR set to: 1
 18866                           ;Device.c: 125: {
 18867                           ;Device.c: 126: if (volume < 432)
 18868  015340  0EB0               	movlw	176
 18869  015342  0101               	movlb	1	; () banked
 18870  015344  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18871  015346  0E01               	movlw	1
 18872  015348  0101               	movlb	1	; () banked
 18873  01534A  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18874  01534C  B0D8               	btfsc	status,0,c
 18875  01534E  D00C               	goto	l11036
 18876                           
 18877                           ; BSR set to: 1
 18878                           ;Device.c: 127: {
 18879                           ;Device.c: 128: k = 0.00398107170553497;
 18880  015350  0E74               	movlw	116
 18881  015352  0101               	movlb	1	; () banked
 18882  015354  6F50               	movwf	DbToCode@k& (0+255),b
 18883  015356  0E82               	movlw	130
 18884  015358  0101               	movlb	1	; () banked
 18885  01535A  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18886  01535C  0E3B               	movlw	59
 18887  01535E  0101               	movlb	1	; () banked
 18888  015360  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18889                           
 18890                           ; BSR set to: 1
 18891                           ;Device.c: 129: volume -= 384;
 18892  015362  0101               	movlb	1	; () banked
 18893  015364  0E80               	movlw	128
 18894  015366  D017               	goto	L20
 18895  015368                     l11036:
 18896                           
 18897                           ; BSR set to: 1
 18898                           ;Device.c: 131: else
 18899                           ;Device.c: 132: {
 18900                           ;Device.c: 133: k = 0.00199526231496888;
 18901  015368  0EC3               	movlw	195
 18902  01536A  0101               	movlb	1	; () banked
 18903  01536C  6F50               	movwf	DbToCode@k& (0+255),b
 18904  01536E  0E02               	movlw	2
 18905  015370  0101               	movlb	1	; () banked
 18906  015372  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18907  015374  0E3B               	movlw	59
 18908  015376  0101               	movlb	1	; () banked
 18909  015378  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18910                           
 18911                           ; BSR set to: 1
 18912                           ;Device.c: 134: volume -= 432;
 18913  01537A  0101               	movlb	1	; () banked
 18914  01537C  0EB0               	movlw	176
 18915  01537E  D00B               	goto	L20
 18916  015380                     l11040:
 18917                           
 18918                           ; BSR set to: 1
 18919                           ;Device.c: 137: else
 18920                           ;Device.c: 138: {
 18921                           ;Device.c: 139: k = 0.001;
 18922  015380  0E12               	movlw	18
 18923  015382  0101               	movlb	1	; () banked
 18924  015384  6F50               	movwf	DbToCode@k& (0+255),b
 18925  015386  0E83               	movlw	131
 18926  015388  0101               	movlb	1	; () banked
 18927  01538A  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 18928  01538C  0E3A               	movlw	58
 18929  01538E  0101               	movlb	1	; () banked
 18930  015390  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 18931                           
 18932                           ; BSR set to: 1
 18933                           ;Device.c: 140: volume -= 480;
 18934  015392  0101               	movlb	1	; () banked
 18935  015394  0EE0               	movlw	224
 18936  015396                     L20:
 18937  015396  0101               	movlb	1	; () banked
 18938  015398  5F48               	subwf	DbToCode@volume& (0+255),f,b
 18939  01539A  0E01               	movlw	1
 18940  01539C                     L19:
 18941  01539C  0101               	movlb	1	; () banked
 18942  01539E  5B49               	subwfb	(DbToCode@volume+1)& (0+255),f,b
 18943  0153A0                     l11044:
 18944                           
 18945                           ; BSR set to: 1
 18946                           ;Device.c: 141: }
 18947                           ;Device.c: 142: }
 18948                           ;Device.c: 143: }
 18949                           ;Device.c: 146: if (volume > 47) return 0;
 18950  0153A0  0E30               	movlw	48
 18951  0153A2  0101               	movlb	1	; () banked
 18952  0153A4  5D48               	subwf	DbToCode@volume& (0+255),w,b
 18953  0153A6  0E00               	movlw	0
 18954  0153A8  0101               	movlb	1	; () banked
 18955  0153AA  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 18956  0153AC  A0D8               	btfss	status,0,c
 18957  0153AE  D007               	goto	l11050
 18958                           
 18959                           ; BSR set to: 1
 18960  0153B0  0E00               	movlw	0
 18961  0153B2  0101               	movlb	1	; () banked
 18962  0153B4  6F49               	movwf	(?_DbToCode+1)& (0+255),b
 18963  0153B6  0E00               	movlw	0
 18964  0153B8  0101               	movlb	1	; () banked
 18965  0153BA  6F48               	movwf	?_DbToCode& (0+255),b
 18966  0153BC  0012               	return	
 18967  0153BE                     l11050:
 18968                           
 18969                           ; BSR set to: 1
 18970                           ;Device.c: 147: return (uint16_t)(LOGS[volume] * k + 0.5);
 18971  0153BE  0E00               	movlw	0
 18972  0153C0  0101               	movlb	1	; () banked
 18973  0153C2  6F30               	movwf	___ftadd@f2& (0+255),b
 18974  0153C4  0E00               	movlw	0
 18975  0153C6  0101               	movlb	1	; () banked
 18976  0153C8  6F31               	movwf	(___ftadd@f2+1)& (0+255),b
 18977  0153CA  0E3F               	movlw	63
 18978  0153CC  0101               	movlb	1	; () banked
 18979  0153CE  6F32               	movwf	(___ftadd@f2+2)& (0+255),b
 18980  0153D0  C150  F117         	movff	DbToCode@k,___ftmul@f2
 18981  0153D4  C151  F118         	movff	DbToCode@k+1,___ftmul@f2+1
 18982  0153D8  C152  F119         	movff	DbToCode@k+2,___ftmul@f2+2
 18983  0153DC  0101               	movlb	1	; () banked
 18984  0153DE  C148  F14A         	movff	DbToCode@volume,??_DbToCode
 18985  0153E2  0101               	movlb	1	; () banked
 18986  0153E4  C149  F14B         	movff	DbToCode@volume+1,??_DbToCode+1
 18987  0153E8  90D8               	bcf	status,0,c
 18988  0153EA  0101               	movlb	1	; () banked
 18989  0153EC  374A               	rlcf	??_DbToCode& (0+255),f,b
 18990  0153EE  374B               	rlcf	(??_DbToCode+1)& (0+255),f,b
 18991  0153F0  0E35               	movlw	low _LOGS
 18992  0153F2  0101               	movlb	1	; () banked
 18993  0153F4  254A               	addwf	??_DbToCode& (0+255),w,b
 18994  0153F6  6EF6               	movwf	tblptrl,c
 18995  0153F8  0EFE               	movlw	high _LOGS
 18996  0153FA  214B               	addwfc	(??_DbToCode+1)& (0+255),w,b
 18997  0153FC  6EF7               	movwf	tblptrh,c
 18998  0153FE                     	if	1	;There are 3 active tblptr bytes
 18999  0153FE  6AF8               	clrf	tblptru,c
 19000  015400  0E00               	movlw	low (__mediumconst shr (0+16))
 19001  015402  22F8               	addwfc	tblptru,f,c
 19002  015404                     	endif
 19003  015404  0009               	tblrd		*+
 19004  015406  0101               	movlb	1	; () banked
 19005  015408  CFF5 F108          	movff	tablat,___lwtoft@c
 19006  01540C  000A               	tblrd		*-
 19007  01540E  0101               	movlb	1	; () banked
 19008  015410  CFF5 F109          	movff	tablat,___lwtoft@c+1
 19009  015414  ECDD  F0DA         	call	___lwtoft	;wreg free
 19010  015418  C108  F114         	movff	?___lwtoft,___ftmul@f1
 19011  01541C  C109  F115         	movff	?___lwtoft+1,___ftmul@f1+1
 19012  015420  C10A  F116         	movff	?___lwtoft+2,___ftmul@f1+2
 19013  015424  ECAF  F0BB         	call	___ftmul	;wreg free
 19014  015428  C114  F12D         	movff	?___ftmul,___ftadd@f1
 19015  01542C  C115  F12E         	movff	?___ftmul+1,___ftadd@f1+1
 19016  015430  C116  F12F         	movff	?___ftmul+2,___ftadd@f1+2
 19017  015434  EC82  F0A6         	call	___ftadd	;wreg free
 19018  015438  C12D  F139         	movff	?___ftadd,___fttol@f1
 19019  01543C  C12E  F13A         	movff	?___ftadd+1,___fttol@f1+1
 19020  015440  C12F  F13B         	movff	?___ftadd+2,___fttol@f1+2
 19021  015444  ECF1  F0BA         	call	___fttol	;wreg free
 19022  015448  C139  F14C         	movff	?___fttol,??_DbToCode+2
 19023  01544C  C13A  F14D         	movff	?___fttol+1,??_DbToCode+3
 19024  015450  C13B  F14E         	movff	?___fttol+2,??_DbToCode+4
 19025  015454  C13C  F14F         	movff	?___fttol+3,??_DbToCode+5
 19026  015458  C14C  F148         	movff	??_DbToCode+2,?_DbToCode
 19027  01545C  C14D  F149         	movff	??_DbToCode+3,?_DbToCode+1
 19028  015460  0012               	return	
 19029  015462                     __end_of_DbToCode:
 19030                           	opt stack 0
 19031                           tblptru	equ	0xFF8
 19032                           tblptrh	equ	0xFF7
 19033                           tblptrl	equ	0xFF6
 19034                           tablat	equ	0xFF5
 19035                           prodh	equ	0xFF4
 19036                           prodl	equ	0xFF3
 19037                           intcon	equ	0xFF2
 19038                           postinc0	equ	0xFEE
 19039                           wreg	equ	0xFE8
 19040                           postdec1	equ	0xFE5
 19041                           fsr1h	equ	0xFE2
 19042                           fsr1l	equ	0xFE1
 19043                           indf2	equ	0xFDF
 19044                           postinc2	equ	0xFDE
 19045                           postdec2	equ	0xFDD
 19046                           fsr2h	equ	0xFDA
 19047                           fsr2l	equ	0xFD9
 19048                           status	equ	0xFD8
 19049                           
 19050 ;; *************** function ___lwtoft *****************
 19051 ;; Defined at:
 19052 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 19053 ;; Parameters:    Size  Location     Type
 19054 ;;  c               2    8[BANK1 ] unsigned int 
 19055 ;; Auto vars:     Size  Location     Type
 19056 ;;		None
 19057 ;; Return value:  Size  Location     Type
 19058 ;;                  3    8[BANK1 ] float 
 19059 ;; Registers used:
 19060 ;;		wreg, status,2, status,0, cstack
 19061 ;; Tracked objects:
 19062 ;;		On entry : 0/0
 19063 ;;		On exit  : 0/0
 19064 ;;		Unchanged: 0/0
 19065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19066 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19069 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19070 ;;Total ram usage:        3 bytes
 19071 ;; Hardware stack levels used:    1
 19072 ;; Hardware stack levels required when called:   11
 19073 ;; This function calls:
 19074 ;;		___ftpack
 19075 ;; This function is called by:
 19076 ;;		_DbToCode
 19077 ;; This function uses a non-reentrant model
 19078 ;;
 19079                           
 19080                           	psect	text24
 19081  01B5BA                     __ptext24:
 19082                           	opt stack 0
 19083  01B5BA                     ___lwtoft:
 19084                           	opt stack 14
 19085                           
 19086                           ;incstack = 0
 19087  01B5BA  0101               	movlb	1	; () banked
 19088  01B5BC  C108  F100         	movff	___lwtoft@c,___ftpack@arg
 19089  01B5C0  0101               	movlb	1	; () banked
 19090  01B5C2  C109  F101         	movff	___lwtoft@c+1,___ftpack@arg+1
 19091  01B5C6  0101               	movlb	1	; () banked
 19092  01B5C8  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
 19093  01B5CA  0E8E               	movlw	142
 19094  01B5CC  0101               	movlb	1	; () banked
 19095  01B5CE  6F03               	movwf	___ftpack@exp& (0+255),b
 19096  01B5D0  0E00               	movlw	0
 19097  01B5D2  0101               	movlb	1	; () banked
 19098  01B5D4  6F04               	movwf	___ftpack@sign& (0+255),b
 19099  01B5D6  EC6E  F0C5         	call	___ftpack	;wreg free
 19100  01B5DA  C100  F108         	movff	?___ftpack,?___lwtoft
 19101  01B5DE  C101  F109         	movff	?___ftpack+1,?___lwtoft+1
 19102  01B5E2  C102  F10A         	movff	?___ftpack+2,?___lwtoft+2
 19103  01B5E6  0012               	return	
 19104  01B5E8                     __end_of___lwtoft:
 19105                           	opt stack 0
 19106                           tblptru	equ	0xFF8
 19107                           tblptrh	equ	0xFF7
 19108                           tblptrl	equ	0xFF6
 19109                           tablat	equ	0xFF5
 19110                           prodh	equ	0xFF4
 19111                           prodl	equ	0xFF3
 19112                           intcon	equ	0xFF2
 19113                           postinc0	equ	0xFEE
 19114                           wreg	equ	0xFE8
 19115                           postdec1	equ	0xFE5
 19116                           fsr1h	equ	0xFE2
 19117                           fsr1l	equ	0xFE1
 19118                           indf2	equ	0xFDF
 19119                           postinc2	equ	0xFDE
 19120                           postdec2	equ	0xFDD
 19121                           fsr2h	equ	0xFDA
 19122                           fsr2l	equ	0xFD9
 19123                           status	equ	0xFD8
 19124                           
 19125 ;; *************** function ___fttol *****************
 19126 ;; Defined at:
 19127 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 19128 ;; Parameters:    Size  Location     Type
 19129 ;;  f1              3   57[BANK1 ] float 
 19130 ;; Auto vars:     Size  Location     Type
 19131 ;;  lval            4   67[BANK1 ] unsigned long 
 19132 ;;  exp1            1   71[BANK1 ] unsigned char 
 19133 ;;  sign1           1   66[BANK1 ] unsigned char 
 19134 ;; Return value:  Size  Location     Type
 19135 ;;                  4   57[BANK1 ] long 
 19136 ;; Registers used:
 19137 ;;		wreg, status,2, status,0
 19138 ;; Tracked objects:
 19139 ;;		On entry : 0/0
 19140 ;;		On exit  : 0/0
 19141 ;;		Unchanged: 0/0
 19142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19143 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19144 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19145 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19146 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19147 ;;Total ram usage:       15 bytes
 19148 ;; Hardware stack levels used:    1
 19149 ;; Hardware stack levels required when called:   10
 19150 ;; This function calls:
 19151 ;;		Nothing
 19152 ;; This function is called by:
 19153 ;;		_DbToCode
 19154 ;;		_sprintf
 19155 ;; This function uses a non-reentrant model
 19156 ;;
 19157                           
 19158                           	psect	text25
 19159  0175E2                     __ptext25:
 19160                           	opt stack 0
 19161  0175E2                     ___fttol:
 19162                           	opt stack 17
 19163                           
 19164                           ;incstack = 0
 19165  0175E2  0101               	movlb	1	; () banked
 19166  0175E4  C13B  F13D         	movff	___fttol@f1+2,??___fttol
 19167  0175E8  0101               	movlb	1	; () banked
 19168  0175EA  6B3E               	clrf	(??___fttol+1)& (0+255),b
 19169  0175EC  6B3F               	clrf	(??___fttol+2)& (0+255),b
 19170  0175EE  0101               	movlb	1	; () banked
 19171  0175F0  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19172  0175F2  0101               	movlb	1	; () banked
 19173  0175F4  373D               	rlcf	??___fttol& (0+255),f,b
 19174  0175F6  E301               	bnc	u11031
 19175  0175F8  813E               	bsf	(??___fttol+1)& (0+255),0,b
 19176  0175FA                     u11031:
 19177  0175FA  0101               	movlb	1	; () banked
 19178  0175FC  513D               	movf	??___fttol& (0+255),w,b
 19179  0175FE  0101               	movlb	1	; () banked
 19180  017600  6F47               	movwf	___fttol@exp1& (0+255),b
 19181  017602  0101               	movlb	1	; () banked
 19182  017604  6747               	tstfsz	___fttol@exp1& (0+255),b
 19183  017606  D00D               	goto	l10450
 19184                           
 19185                           ; BSR set to: 1
 19186  017608  0E00               	movlw	0
 19187  01760A  0101               	movlb	1	; () banked
 19188  01760C  6F39               	movwf	?___fttol& (0+255),b
 19189  01760E  0E00               	movlw	0
 19190  017610  0101               	movlb	1	; () banked
 19191  017612  6F3A               	movwf	(?___fttol+1)& (0+255),b
 19192  017614  0E00               	movlw	0
 19193  017616  0101               	movlb	1	; () banked
 19194  017618  6F3B               	movwf	(?___fttol+2)& (0+255),b
 19195  01761A  0E00               	movlw	0
 19196  01761C  0101               	movlb	1	; () banked
 19197  01761E  6F3C               	movwf	(?___fttol+3)& (0+255),b
 19198  017620  0012               	return	
 19199  017622                     l10450:
 19200                           
 19201                           ; BSR set to: 1
 19202  017622  0E17               	movlw	23
 19203  017624  0101               	movlb	1	; () banked
 19204  017626  6F3D               	movwf	??___fttol& (0+255),b
 19205  017628  0101               	movlb	1	; () banked
 19206  01762A  C139  F13E         	movff	___fttol@f1,??___fttol+1
 19207  01762E  0101               	movlb	1	; () banked
 19208  017630  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
 19209  017634  0101               	movlb	1	; () banked
 19210  017636  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
 19211  01763A  0101               	movlb	1	; () banked
 19212  01763C  293D               	incf	??___fttol& (0+255),w,b
 19213  01763E  0101               	movlb	1	; () banked
 19214  017640  6F41               	movwf	(??___fttol+4)& (0+255),b
 19215  017642  D005               	goto	u11050
 19216  017644                     u11055:
 19217  017644  0101               	movlb	1	; () banked
 19218  017646  90D8               	bcf	status,0,c
 19219  017648  3340               	rrcf	(??___fttol+3)& (0+255),f,b
 19220  01764A  333F               	rrcf	(??___fttol+2)& (0+255),f,b
 19221  01764C  333E               	rrcf	(??___fttol+1)& (0+255),f,b
 19222  01764E                     u11050:
 19223  01764E  0101               	movlb	1	; () banked
 19224  017650  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
 19225  017652  D7F8               	goto	u11055
 19226  017654  0101               	movlb	1	; () banked
 19227  017656  513E               	movf	(??___fttol+1)& (0+255),w,b
 19228  017658  0101               	movlb	1	; () banked
 19229  01765A  6F42               	movwf	___fttol@sign1& (0+255),b
 19230                           
 19231                           ; BSR set to: 1
 19232  01765C  0101               	movlb	1	; () banked
 19233  01765E  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
 19234                           
 19235                           ; BSR set to: 1
 19236  017660  0EFF               	movlw	255
 19237  017662  0101               	movlb	1	; () banked
 19238  017664  1739               	andwf	___fttol@f1& (0+255),f,b
 19239  017666  0EFF               	movlw	255
 19240  017668  0101               	movlb	1	; () banked
 19241  01766A  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
 19242  01766C  0E00               	movlw	0
 19243  01766E  0101               	movlb	1	; () banked
 19244  017670  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
 19245                           
 19246                           ; BSR set to: 1
 19247  017672  0101               	movlb	1	; () banked
 19248  017674  5139               	movf	___fttol@f1& (0+255),w,b
 19249  017676  0101               	movlb	1	; () banked
 19250  017678  6F43               	movwf	___fttol@lval& (0+255),b
 19251  01767A  0101               	movlb	1	; () banked
 19252  01767C  513A               	movf	(___fttol@f1+1)& (0+255),w,b
 19253  01767E  0101               	movlb	1	; () banked
 19254  017680  6F44               	movwf	(___fttol@lval+1)& (0+255),b
 19255  017682  0101               	movlb	1	; () banked
 19256  017684  513B               	movf	(___fttol@f1+2)& (0+255),w,b
 19257  017686  0101               	movlb	1	; () banked
 19258  017688  6F45               	movwf	(___fttol@lval+2)& (0+255),b
 19259  01768A  0101               	movlb	1	; () banked
 19260  01768C  6B46               	clrf	(___fttol@lval+3)& (0+255),b
 19261                           
 19262                           ; BSR set to: 1
 19263  01768E  0E8E               	movlw	142
 19264  017690  0101               	movlb	1	; () banked
 19265  017692  5F47               	subwf	___fttol@exp1& (0+255),f,b
 19266                           
 19267                           ; BSR set to: 1
 19268  017694  0101               	movlb	1	; () banked
 19269  017696  AF47               	btfss	___fttol@exp1& (0+255),7,b
 19270  017698  D026               	goto	l10472
 19271                           
 19272                           ; BSR set to: 1
 19273  01769A  0101               	movlb	1	; () banked
 19274  01769C  5147               	movf	___fttol@exp1& (0+255),w,b
 19275  01769E  0A80               	xorlw	128
 19276  0176A0  0101               	movlb	1	; () banked
 19277  0176A2  6F3D               	movwf	??___fttol& (0+255),b
 19278  0176A4  0EF1               	movlw	241
 19279  0176A6  0A80               	xorlw	128
 19280  0176A8  0101               	movlb	1	; () banked
 19281  0176AA  5D3D               	subwf	??___fttol& (0+255),w,b
 19282  0176AC  B0D8               	btfsc	status,0,c
 19283  0176AE  D00D               	goto	l10468
 19284                           
 19285                           ; BSR set to: 1
 19286  0176B0  0E00               	movlw	0
 19287  0176B2  0101               	movlb	1	; () banked
 19288  0176B4  6F39               	movwf	?___fttol& (0+255),b
 19289  0176B6  0E00               	movlw	0
 19290  0176B8  0101               	movlb	1	; () banked
 19291  0176BA  6F3A               	movwf	(?___fttol+1)& (0+255),b
 19292  0176BC  0E00               	movlw	0
 19293  0176BE  0101               	movlb	1	; () banked
 19294  0176C0  6F3B               	movwf	(?___fttol+2)& (0+255),b
 19295  0176C2  0E00               	movlw	0
 19296  0176C4  0101               	movlb	1	; () banked
 19297  0176C6  6F3C               	movwf	(?___fttol+3)& (0+255),b
 19298  0176C8  0012               	return	
 19299  0176CA                     l10468:
 19300                           
 19301                           ; BSR set to: 1
 19302  0176CA  0101               	movlb	1	; () banked
 19303  0176CC  90D8               	bcf	status,0,c
 19304  0176CE  0101               	movlb	1	; () banked
 19305  0176D0  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19306  0176D2  0101               	movlb	1	; () banked
 19307  0176D4  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19308  0176D6  0101               	movlb	1	; () banked
 19309  0176D8  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19310  0176DA  0101               	movlb	1	; () banked
 19311  0176DC  3343               	rrcf	___fttol@lval& (0+255),f,b
 19312                           
 19313                           ; BSR set to: 1
 19314  0176DE  0101               	movlb	1	; () banked
 19315  0176E0  3F47               	incfsz	___fttol@exp1& (0+255),f,b
 19316  0176E2  D7F3               	goto	l10468
 19317  0176E4  D020               	goto	l10482
 19318  0176E6                     l10472:
 19319                           
 19320                           ; BSR set to: 1
 19321  0176E6  0E17               	movlw	23
 19322  0176E8  0101               	movlb	1	; () banked
 19323  0176EA  6547               	cpfsgt	___fttol@exp1& (0+255),b
 19324  0176EC  D019               	goto	l10480
 19325                           
 19326                           ; BSR set to: 1
 19327  0176EE  0E00               	movlw	0
 19328  0176F0  0101               	movlb	1	; () banked
 19329  0176F2  6F39               	movwf	?___fttol& (0+255),b
 19330  0176F4  0E00               	movlw	0
 19331  0176F6  0101               	movlb	1	; () banked
 19332  0176F8  6F3A               	movwf	(?___fttol+1)& (0+255),b
 19333  0176FA  0E00               	movlw	0
 19334  0176FC  0101               	movlb	1	; () banked
 19335  0176FE  6F3B               	movwf	(?___fttol+2)& (0+255),b
 19336  017700  0E00               	movlw	0
 19337  017702  0101               	movlb	1	; () banked
 19338  017704  6F3C               	movwf	(?___fttol+3)& (0+255),b
 19339  017706  0012               	return	
 19340  017708                     l10478:
 19341                           
 19342                           ; BSR set to: 1
 19343  017708  0101               	movlb	1	; () banked
 19344  01770A  90D8               	bcf	status,0,c
 19345  01770C  0101               	movlb	1	; () banked
 19346  01770E  3743               	rlcf	___fttol@lval& (0+255),f,b
 19347  017710  0101               	movlb	1	; () banked
 19348  017712  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19349  017714  0101               	movlb	1	; () banked
 19350  017716  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19351  017718  0101               	movlb	1	; () banked
 19352  01771A  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19353  01771C  0101               	movlb	1	; () banked
 19354  01771E  0747               	decf	___fttol@exp1& (0+255),f,b
 19355  017720                     l10480:
 19356                           
 19357                           ; BSR set to: 1
 19358  017720  0101               	movlb	1	; () banked
 19359  017722  6747               	tstfsz	___fttol@exp1& (0+255),b
 19360  017724  D7F1               	goto	l10478
 19361  017726                     l10482:
 19362                           
 19363                           ; BSR set to: 1
 19364  017726  0101               	movlb	1	; () banked
 19365  017728  5142               	movf	___fttol@sign1& (0+255),w,b
 19366  01772A  B4D8               	btfsc	status,2,c
 19367  01772C  D00F               	goto	l10486
 19368                           
 19369                           ; BSR set to: 1
 19370  01772E  0101               	movlb	1	; () banked
 19371  017730  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
 19372  017732  0101               	movlb	1	; () banked
 19373  017734  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
 19374  017736  0101               	movlb	1	; () banked
 19375  017738  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
 19376  01773A  0101               	movlb	1	; () banked
 19377  01773C  6D43               	negf	___fttol@lval& (0+255),b
 19378  01773E  0E00               	movlw	0
 19379  017740  0101               	movlb	1	; () banked
 19380  017742  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19381  017744  0101               	movlb	1	; () banked
 19382  017746  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19383  017748  0101               	movlb	1	; () banked
 19384  01774A  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19385  01774C                     l10486:
 19386                           
 19387                           ; BSR set to: 1
 19388  01774C  C143  F139         	movff	___fttol@lval,?___fttol
 19389  017750  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
 19390  017754  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
 19391  017758  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
 19392  01775C  0012               	return	
 19393  01775E                     __end_of___fttol:
 19394                           	opt stack 0
 19395                           tblptru	equ	0xFF8
 19396                           tblptrh	equ	0xFF7
 19397                           tblptrl	equ	0xFF6
 19398                           tablat	equ	0xFF5
 19399                           prodh	equ	0xFF4
 19400                           prodl	equ	0xFF3
 19401                           intcon	equ	0xFF2
 19402                           postinc0	equ	0xFEE
 19403                           wreg	equ	0xFE8
 19404                           postdec1	equ	0xFE5
 19405                           fsr1h	equ	0xFE2
 19406                           fsr1l	equ	0xFE1
 19407                           indf2	equ	0xFDF
 19408                           postinc2	equ	0xFDE
 19409                           postdec2	equ	0xFDD
 19410                           fsr2h	equ	0xFDA
 19411                           fsr2l	equ	0xFD9
 19412                           status	equ	0xFD8
 19413                           
 19414 ;; *************** function ___ftmul *****************
 19415 ;; Defined at:
 19416 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 19417 ;; Parameters:    Size  Location     Type
 19418 ;;  f1              3   20[BANK1 ] float 
 19419 ;;  f2              3   23[BANK1 ] float 
 19420 ;; Auto vars:     Size  Location     Type
 19421 ;;  f3_as_produc    3   30[BANK1 ] unsigned um
 19422 ;;  sign            1   34[BANK1 ] unsigned char 
 19423 ;;  cntr            1   33[BANK1 ] unsigned char 
 19424 ;;  exp             1   29[BANK1 ] unsigned char 
 19425 ;; Return value:  Size  Location     Type
 19426 ;;                  3   20[BANK1 ] float 
 19427 ;; Registers used:
 19428 ;;		wreg, status,2, status,0, cstack
 19429 ;; Tracked objects:
 19430 ;;		On entry : 0/0
 19431 ;;		On exit  : 0/0
 19432 ;;		Unchanged: 0/0
 19433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19434 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19435 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19436 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19437 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19438 ;;Total ram usage:       15 bytes
 19439 ;; Hardware stack levels used:    1
 19440 ;; Hardware stack levels required when called:   11
 19441 ;; This function calls:
 19442 ;;		___ftpack
 19443 ;; This function is called by:
 19444 ;;		_DbToCode
 19445 ;;		_fround
 19446 ;;		_scale
 19447 ;;		_sprintf
 19448 ;; This function uses a non-reentrant model
 19449 ;;
 19450                           
 19451                           	psect	text26
 19452  01775E                     __ptext26:
 19453                           	opt stack 0
 19454  01775E                     ___ftmul:
 19455                           	opt stack 15
 19456                           
 19457                           ; BSR set to: 1
 19458                           ;incstack = 0
 19459  01775E  0101               	movlb	1	; () banked
 19460  017760  C116  F11A         	movff	___ftmul@f1+2,??___ftmul
 19461  017764  0101               	movlb	1	; () banked
 19462  017766  6B1B               	clrf	(??___ftmul+1)& (0+255),b
 19463  017768  6B1C               	clrf	(??___ftmul+2)& (0+255),b
 19464  01776A  0101               	movlb	1	; () banked
 19465  01776C  3515               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 19466  01776E  0101               	movlb	1	; () banked
 19467  017770  371A               	rlcf	??___ftmul& (0+255),f,b
 19468  017772  E301               	bnc	u10971
 19469  017774  811B               	bsf	(??___ftmul+1)& (0+255),0,b
 19470  017776                     u10971:
 19471  017776  0101               	movlb	1	; () banked
 19472  017778  511A               	movf	??___ftmul& (0+255),w,b
 19473  01777A  0101               	movlb	1	; () banked
 19474  01777C  6F1D               	movwf	___ftmul@exp& (0+255),b
 19475  01777E  0101               	movlb	1	; () banked
 19476  017780  671D               	tstfsz	___ftmul@exp& (0+255),b
 19477  017782  D00A               	goto	l10402
 19478                           
 19479                           ; BSR set to: 1
 19480  017784  0E00               	movlw	0
 19481  017786  0101               	movlb	1	; () banked
 19482  017788  6F14               	movwf	?___ftmul& (0+255),b
 19483  01778A  0E00               	movlw	0
 19484  01778C  0101               	movlb	1	; () banked
 19485  01778E  6F15               	movwf	(?___ftmul+1)& (0+255),b
 19486  017790  0E00               	movlw	0
 19487  017792  0101               	movlb	1	; () banked
 19488  017794  6F16               	movwf	(?___ftmul+2)& (0+255),b
 19489  017796  0012               	return	
 19490  017798                     l10402:
 19491                           
 19492                           ; BSR set to: 1
 19493  017798  0101               	movlb	1	; () banked
 19494  01779A  C119  F11A         	movff	___ftmul@f2+2,??___ftmul
 19495  01779E  0101               	movlb	1	; () banked
 19496  0177A0  6B1B               	clrf	(??___ftmul+1)& (0+255),b
 19497  0177A2  6B1C               	clrf	(??___ftmul+2)& (0+255),b
 19498  0177A4  0101               	movlb	1	; () banked
 19499  0177A6  3518               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 19500  0177A8  0101               	movlb	1	; () banked
 19501  0177AA  371A               	rlcf	??___ftmul& (0+255),f,b
 19502  0177AC  E301               	bnc	u10991
 19503  0177AE  811B               	bsf	(??___ftmul+1)& (0+255),0,b
 19504  0177B0                     u10991:
 19505  0177B0  0101               	movlb	1	; () banked
 19506  0177B2  511A               	movf	??___ftmul& (0+255),w,b
 19507  0177B4  0101               	movlb	1	; () banked
 19508  0177B6  6F22               	movwf	___ftmul@sign& (0+255),b
 19509  0177B8  0101               	movlb	1	; () banked
 19510  0177BA  6722               	tstfsz	___ftmul@sign& (0+255),b
 19511  0177BC  D00A               	goto	l10408
 19512                           
 19513                           ; BSR set to: 1
 19514  0177BE  0E00               	movlw	0
 19515  0177C0  0101               	movlb	1	; () banked
 19516  0177C2  6F14               	movwf	?___ftmul& (0+255),b
 19517  0177C4  0E00               	movlw	0
 19518  0177C6  0101               	movlb	1	; () banked
 19519  0177C8  6F15               	movwf	(?___ftmul+1)& (0+255),b
 19520  0177CA  0E00               	movlw	0
 19521  0177CC  0101               	movlb	1	; () banked
 19522  0177CE  6F16               	movwf	(?___ftmul+2)& (0+255),b
 19523  0177D0  0012               	return	
 19524  0177D2                     l10408:
 19525                           
 19526                           ; BSR set to: 1
 19527  0177D2  0101               	movlb	1	; () banked
 19528  0177D4  5122               	movf	___ftmul@sign& (0+255),w,b
 19529  0177D6  0F7B               	addlw	123
 19530  0177D8  0101               	movlb	1	; () banked
 19531  0177DA  271D               	addwf	___ftmul@exp& (0+255),f,b
 19532                           
 19533                           ; BSR set to: 1
 19534  0177DC  C116  F122         	movff	___ftmul@f1+2,___ftmul@sign
 19535  0177E0  0101               	movlb	1	; () banked
 19536  0177E2  5119               	movf	(___ftmul@f2+2)& (0+255),w,b
 19537  0177E4  0101               	movlb	1	; () banked
 19538  0177E6  1B22               	xorwf	___ftmul@sign& (0+255),f,b
 19539  0177E8  0E80               	movlw	128
 19540  0177EA  0101               	movlb	1	; () banked
 19541  0177EC  1722               	andwf	___ftmul@sign& (0+255),f,b
 19542                           
 19543                           ; BSR set to: 1
 19544  0177EE  0101               	movlb	1	; () banked
 19545  0177F0  8F15               	bsf	(___ftmul@f1+1)& (0+255),7,b
 19546                           
 19547                           ; BSR set to: 1
 19548  0177F2  0101               	movlb	1	; () banked
 19549  0177F4  8F18               	bsf	(___ftmul@f2+1)& (0+255),7,b
 19550                           
 19551                           ; BSR set to: 1
 19552  0177F6  0EFF               	movlw	255
 19553  0177F8  0101               	movlb	1	; () banked
 19554  0177FA  1717               	andwf	___ftmul@f2& (0+255),f,b
 19555  0177FC  0EFF               	movlw	255
 19556  0177FE  0101               	movlb	1	; () banked
 19557  017800  1718               	andwf	(___ftmul@f2+1)& (0+255),f,b
 19558  017802  0E00               	movlw	0
 19559  017804  0101               	movlb	1	; () banked
 19560  017806  1719               	andwf	(___ftmul@f2+2)& (0+255),f,b
 19561                           
 19562                           ; BSR set to: 1
 19563  017808  0E00               	movlw	0
 19564  01780A  0101               	movlb	1	; () banked
 19565  01780C  6F1E               	movwf	___ftmul@f3_as_product& (0+255),b
 19566  01780E  0E00               	movlw	0
 19567  017810  0101               	movlb	1	; () banked
 19568  017812  6F1F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 19569  017814  0E00               	movlw	0
 19570  017816  0101               	movlb	1	; () banked
 19571  017818  6F20               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 19572                           
 19573                           ; BSR set to: 1
 19574  01781A  0E07               	movlw	7
 19575  01781C  0101               	movlb	1	; () banked
 19576  01781E  6F21               	movwf	___ftmul@cntr& (0+255),b
 19577  017820                     l10422:
 19578                           
 19579                           ; BSR set to: 1
 19580  017820  0101               	movlb	1	; () banked
 19581  017822  A114               	btfss	___ftmul@f1& (0+255),0,b
 19582  017824  D00C               	goto	l10426
 19583                           
 19584                           ; BSR set to: 1
 19585  017826  0101               	movlb	1	; () banked
 19586  017828  5117               	movf	___ftmul@f2& (0+255),w,b
 19587  01782A  0101               	movlb	1	; () banked
 19588  01782C  271E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19589  01782E  0101               	movlb	1	; () banked
 19590  017830  5118               	movf	(___ftmul@f2+1)& (0+255),w,b
 19591  017832  0101               	movlb	1	; () banked
 19592  017834  231F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19593  017836  0101               	movlb	1	; () banked
 19594  017838  5119               	movf	(___ftmul@f2+2)& (0+255),w,b
 19595  01783A  0101               	movlb	1	; () banked
 19596  01783C  2320               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19597  01783E                     l10426:
 19598                           
 19599                           ; BSR set to: 1
 19600  01783E  0101               	movlb	1	; () banked
 19601  017840  90D8               	bcf	status,0,c
 19602  017842  0101               	movlb	1	; () banked
 19603  017844  3316               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19604  017846  0101               	movlb	1	; () banked
 19605  017848  3315               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19606  01784A  0101               	movlb	1	; () banked
 19607  01784C  3314               	rrcf	___ftmul@f1& (0+255),f,b
 19608  01784E  0101               	movlb	1	; () banked
 19609  017850  90D8               	bcf	status,0,c
 19610  017852  0101               	movlb	1	; () banked
 19611  017854  3717               	rlcf	___ftmul@f2& (0+255),f,b
 19612  017856  0101               	movlb	1	; () banked
 19613  017858  3718               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 19614  01785A  0101               	movlb	1	; () banked
 19615  01785C  3719               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 19616                           
 19617                           ; BSR set to: 1
 19618  01785E  0101               	movlb	1	; () banked
 19619  017860  2F21               	decfsz	___ftmul@cntr& (0+255),f,b
 19620  017862  D7DE               	goto	l10422
 19621                           
 19622                           ; BSR set to: 1
 19623                           
 19624                           ; BSR set to: 1
 19625  017864  0E09               	movlw	9
 19626  017866  0101               	movlb	1	; () banked
 19627  017868  6F21               	movwf	___ftmul@cntr& (0+255),b
 19628  01786A                     l10432:
 19629                           
 19630                           ; BSR set to: 1
 19631  01786A  0101               	movlb	1	; () banked
 19632  01786C  A114               	btfss	___ftmul@f1& (0+255),0,b
 19633  01786E  D00C               	goto	l10436
 19634                           
 19635                           ; BSR set to: 1
 19636  017870  0101               	movlb	1	; () banked
 19637  017872  5117               	movf	___ftmul@f2& (0+255),w,b
 19638  017874  0101               	movlb	1	; () banked
 19639  017876  271E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19640  017878  0101               	movlb	1	; () banked
 19641  01787A  5118               	movf	(___ftmul@f2+1)& (0+255),w,b
 19642  01787C  0101               	movlb	1	; () banked
 19643  01787E  231F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19644  017880  0101               	movlb	1	; () banked
 19645  017882  5119               	movf	(___ftmul@f2+2)& (0+255),w,b
 19646  017884  0101               	movlb	1	; () banked
 19647  017886  2320               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19648  017888                     l10436:
 19649                           
 19650                           ; BSR set to: 1
 19651  017888  0101               	movlb	1	; () banked
 19652  01788A  90D8               	bcf	status,0,c
 19653  01788C  0101               	movlb	1	; () banked
 19654  01788E  3316               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19655  017890  0101               	movlb	1	; () banked
 19656  017892  3315               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19657  017894  0101               	movlb	1	; () banked
 19658  017896  3314               	rrcf	___ftmul@f1& (0+255),f,b
 19659  017898  0101               	movlb	1	; () banked
 19660  01789A  90D8               	bcf	status,0,c
 19661  01789C  0101               	movlb	1	; () banked
 19662  01789E  3320               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 19663  0178A0  0101               	movlb	1	; () banked
 19664  0178A2  331F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 19665  0178A4  0101               	movlb	1	; () banked
 19666  0178A6  331E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 19667                           
 19668                           ; BSR set to: 1
 19669  0178A8  0101               	movlb	1	; () banked
 19670  0178AA  2F21               	decfsz	___ftmul@cntr& (0+255),f,b
 19671  0178AC  D7DE               	goto	l10432
 19672                           
 19673                           ; BSR set to: 1
 19674                           
 19675                           ; BSR set to: 1
 19676  0178AE  C11E  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
 19677  0178B2  C11F  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 19678  0178B6  C120  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 19679  0178BA  C11D  F103         	movff	___ftmul@exp,___ftpack@exp
 19680  0178BE  C122  F104         	movff	___ftmul@sign,___ftpack@sign
 19681  0178C2  EC6E  F0C5         	call	___ftpack	;wreg free
 19682  0178C6  C100  F114         	movff	?___ftpack,?___ftmul
 19683  0178CA  C101  F115         	movff	?___ftpack+1,?___ftmul+1
 19684  0178CE  C102  F116         	movff	?___ftpack+2,?___ftmul+2
 19685  0178D2  0012               	return	
 19686  0178D4                     __end_of___ftmul:
 19687                           	opt stack 0
 19688                           tblptru	equ	0xFF8
 19689                           tblptrh	equ	0xFF7
 19690                           tblptrl	equ	0xFF6
 19691                           tablat	equ	0xFF5
 19692                           prodh	equ	0xFF4
 19693                           prodl	equ	0xFF3
 19694                           intcon	equ	0xFF2
 19695                           postinc0	equ	0xFEE
 19696                           wreg	equ	0xFE8
 19697                           postdec1	equ	0xFE5
 19698                           fsr1h	equ	0xFE2
 19699                           fsr1l	equ	0xFE1
 19700                           indf2	equ	0xFDF
 19701                           postinc2	equ	0xFDE
 19702                           postdec2	equ	0xFDD
 19703                           fsr2h	equ	0xFDA
 19704                           fsr2l	equ	0xFD9
 19705                           status	equ	0xFD8
 19706                           
 19707 ;; *************** function ___ftadd *****************
 19708 ;; Defined at:
 19709 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;  f1              3   45[BANK1 ] float 
 19712 ;;  f2              3   48[BANK1 ] float 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;  exp1            1   56[BANK1 ] unsigned char 
 19715 ;;  exp2            1   55[BANK1 ] unsigned char 
 19716 ;;  sign            1   54[BANK1 ] unsigned char 
 19717 ;; Return value:  Size  Location     Type
 19718 ;;                  3   45[BANK1 ] float 
 19719 ;; Registers used:
 19720 ;;		wreg, status,2, status,0, cstack
 19721 ;; Tracked objects:
 19722 ;;		On entry : 0/0
 19723 ;;		On exit  : 0/0
 19724 ;;		Unchanged: 0/0
 19725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19726 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19727 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19728 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19729 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19730 ;;Total ram usage:       12 bytes
 19731 ;; Hardware stack levels used:    1
 19732 ;; Hardware stack levels required when called:   11
 19733 ;; This function calls:
 19734 ;;		___ftpack
 19735 ;; This function is called by:
 19736 ;;		_DbToCode
 19737 ;;		_sprintf
 19738 ;;		___ftsub
 19739 ;; This function uses a non-reentrant model
 19740 ;;
 19741                           
 19742                           	psect	text27
 19743  014D04                     __ptext27:
 19744                           	opt stack 0
 19745  014D04                     ___ftadd:
 19746                           	opt stack 15
 19747                           
 19748                           ;incstack = 0
 19749  014D04  0101               	movlb	1	; () banked
 19750  014D06  C12F  F133         	movff	___ftadd@f1+2,??___ftadd
 19751  014D0A  0101               	movlb	1	; () banked
 19752  014D0C  6B34               	clrf	(??___ftadd+1)& (0+255),b
 19753  014D0E  6B35               	clrf	(??___ftadd+2)& (0+255),b
 19754  014D10  0101               	movlb	1	; () banked
 19755  014D12  352E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 19756  014D14  0101               	movlb	1	; () banked
 19757  014D16  3733               	rlcf	??___ftadd& (0+255),f,b
 19758  014D18  E301               	bnc	u10761
 19759  014D1A  8134               	bsf	(??___ftadd+1)& (0+255),0,b
 19760  014D1C                     u10761:
 19761  014D1C  0101               	movlb	1	; () banked
 19762  014D1E  5133               	movf	??___ftadd& (0+255),w,b
 19763  014D20  0101               	movlb	1	; () banked
 19764  014D22  6F38               	movwf	___ftadd@exp1& (0+255),b
 19765  014D24  0101               	movlb	1	; () banked
 19766  014D26  C132  F133         	movff	___ftadd@f2+2,??___ftadd
 19767  014D2A  0101               	movlb	1	; () banked
 19768  014D2C  6B34               	clrf	(??___ftadd+1)& (0+255),b
 19769  014D2E  6B35               	clrf	(??___ftadd+2)& (0+255),b
 19770  014D30  0101               	movlb	1	; () banked
 19771  014D32  3531               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 19772  014D34  0101               	movlb	1	; () banked
 19773  014D36  3733               	rlcf	??___ftadd& (0+255),f,b
 19774  014D38  E301               	bnc	u10771
 19775  014D3A  8134               	bsf	(??___ftadd+1)& (0+255),0,b
 19776  014D3C                     u10771:
 19777  014D3C  0101               	movlb	1	; () banked
 19778  014D3E  5133               	movf	??___ftadd& (0+255),w,b
 19779  014D40  0101               	movlb	1	; () banked
 19780  014D42  6F37               	movwf	___ftadd@exp2& (0+255),b
 19781                           
 19782                           ; BSR set to: 1
 19783  014D44  0101               	movlb	1	; () banked
 19784  014D46  5138               	movf	___ftadd@exp1& (0+255),w,b
 19785  014D48  B4D8               	btfsc	status,2,c
 19786  014D4A  D012               	goto	l2525
 19787                           
 19788                           ; BSR set to: 1
 19789  014D4C  0101               	movlb	1	; () banked
 19790  014D4E  5137               	movf	___ftadd@exp2& (0+255),w,b
 19791  014D50  0101               	movlb	1	; () banked
 19792  014D52  5D38               	subwf	___ftadd@exp1& (0+255),w,b
 19793  014D54  B0D8               	btfsc	status,0,c
 19794  014D56  D013               	goto	l10334
 19795                           
 19796                           ; BSR set to: 1
 19797  014D58  0101               	movlb	1	; () banked
 19798  014D5A  5138               	movf	___ftadd@exp1& (0+255),w,b
 19799  014D5C  0800               	sublw	0
 19800  014D5E  0101               	movlb	1	; () banked
 19801  014D60  2537               	addwf	___ftadd@exp2& (0+255),w,b
 19802  014D62  0101               	movlb	1	; () banked
 19803  014D64  6F33               	movwf	??___ftadd& (0+255),b
 19804  014D66  0E19               	movlw	25
 19805  014D68  0101               	movlb	1	; () banked
 19806  014D6A  5D33               	subwf	??___ftadd& (0+255),w,b
 19807  014D6C  A0D8               	btfss	status,0,c
 19808  014D6E  D007               	goto	l10334
 19809  014D70                     l2525:
 19810                           
 19811                           ; BSR set to: 1
 19812  014D70  C130  F12D         	movff	___ftadd@f2,?___ftadd
 19813  014D74  C131  F12E         	movff	___ftadd@f2+1,?___ftadd+1
 19814  014D78  C132  F12F         	movff	___ftadd@f2+2,?___ftadd+2
 19815  014D7C  0012               	return	
 19816  014D7E                     l10334:
 19817                           
 19818                           ; BSR set to: 1
 19819  014D7E  0101               	movlb	1	; () banked
 19820  014D80  5137               	movf	___ftadd@exp2& (0+255),w,b
 19821  014D82  B4D8               	btfsc	status,2,c
 19822  014D84  D012               	goto	l2529
 19823                           
 19824                           ; BSR set to: 1
 19825  014D86  0101               	movlb	1	; () banked
 19826  014D88  5138               	movf	___ftadd@exp1& (0+255),w,b
 19827  014D8A  0101               	movlb	1	; () banked
 19828  014D8C  5D37               	subwf	___ftadd@exp2& (0+255),w,b
 19829  014D8E  B0D8               	btfsc	status,0,c
 19830  014D90  D013               	goto	l10340
 19831                           
 19832                           ; BSR set to: 1
 19833  014D92  0101               	movlb	1	; () banked
 19834  014D94  5137               	movf	___ftadd@exp2& (0+255),w,b
 19835  014D96  0800               	sublw	0
 19836  014D98  0101               	movlb	1	; () banked
 19837  014D9A  2538               	addwf	___ftadd@exp1& (0+255),w,b
 19838  014D9C  0101               	movlb	1	; () banked
 19839  014D9E  6F33               	movwf	??___ftadd& (0+255),b
 19840  014DA0  0E19               	movlw	25
 19841  014DA2  0101               	movlb	1	; () banked
 19842  014DA4  5D33               	subwf	??___ftadd& (0+255),w,b
 19843  014DA6  A0D8               	btfss	status,0,c
 19844  014DA8  D007               	goto	l10340
 19845  014DAA                     l2529:
 19846                           
 19847                           ; BSR set to: 1
 19848  014DAA  C12D  F12D         	movff	___ftadd@f1,?___ftadd
 19849  014DAE  C12E  F12E         	movff	___ftadd@f1+1,?___ftadd+1
 19850  014DB2  C12F  F12F         	movff	___ftadd@f1+2,?___ftadd+2
 19851  014DB6  0012               	return	
 19852  014DB8                     l10340:
 19853                           
 19854                           ; BSR set to: 1
 19855  014DB8  0E06               	movlw	6
 19856  014DBA  0101               	movlb	1	; () banked
 19857  014DBC  6F36               	movwf	___ftadd@sign& (0+255),b
 19858                           
 19859                           ; BSR set to: 1
 19860  014DBE  0101               	movlb	1	; () banked
 19861  014DC0  AF2F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 19862  014DC2  D002               	goto	l10346
 19863                           
 19864                           ; BSR set to: 1
 19865  014DC4  0101               	movlb	1	; () banked
 19866  014DC6  8F36               	bsf	___ftadd@sign& (0+255),7,b
 19867  014DC8                     l10346:
 19868                           
 19869                           ; BSR set to: 1
 19870  014DC8  0101               	movlb	1	; () banked
 19871  014DCA  AF32               	btfss	(___ftadd@f2+2)& (0+255),7,b
 19872  014DCC  D002               	goto	l2531
 19873                           
 19874                           ; BSR set to: 1
 19875  014DCE  0101               	movlb	1	; () banked
 19876  014DD0  8D36               	bsf	___ftadd@sign& (0+255),6,b
 19877  014DD2                     l2531:
 19878                           
 19879                           ; BSR set to: 1
 19880  014DD2  0101               	movlb	1	; () banked
 19881  014DD4  8F2E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 19882                           
 19883                           ; BSR set to: 1
 19884  014DD6  0EFF               	movlw	255
 19885  014DD8  0101               	movlb	1	; () banked
 19886  014DDA  172D               	andwf	___ftadd@f1& (0+255),f,b
 19887  014DDC  0EFF               	movlw	255
 19888  014DDE  0101               	movlb	1	; () banked
 19889  014DE0  172E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 19890  014DE2  0E00               	movlw	0
 19891  014DE4  0101               	movlb	1	; () banked
 19892  014DE6  172F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 19893  014DE8  0101               	movlb	1	; () banked
 19894  014DEA  8F31               	bsf	(___ftadd@f2+1)& (0+255),7,b
 19895                           
 19896                           ; BSR set to: 1
 19897  014DEC  0EFF               	movlw	255
 19898  014DEE  0101               	movlb	1	; () banked
 19899  014DF0  1730               	andwf	___ftadd@f2& (0+255),f,b
 19900  014DF2  0EFF               	movlw	255
 19901  014DF4  0101               	movlb	1	; () banked
 19902  014DF6  1731               	andwf	(___ftadd@f2+1)& (0+255),f,b
 19903  014DF8  0E00               	movlw	0
 19904  014DFA  0101               	movlb	1	; () banked
 19905  014DFC  1732               	andwf	(___ftadd@f2+2)& (0+255),f,b
 19906                           
 19907                           ; BSR set to: 1
 19908  014DFE  0101               	movlb	1	; () banked
 19909  014E00  5137               	movf	___ftadd@exp2& (0+255),w,b
 19910  014E02  0101               	movlb	1	; () banked
 19911  014E04  5D38               	subwf	___ftadd@exp1& (0+255),w,b
 19912  014E06  B0D8               	btfsc	status,0,c
 19913  014E08  D02A               	goto	l10366
 19914  014E0A                     l10356:
 19915                           
 19916                           ; BSR set to: 1
 19917  014E0A  0101               	movlb	1	; () banked
 19918  014E0C  90D8               	bcf	status,0,c
 19919  014E0E  0101               	movlb	1	; () banked
 19920  014E10  3730               	rlcf	___ftadd@f2& (0+255),f,b
 19921  014E12  0101               	movlb	1	; () banked
 19922  014E14  3731               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 19923  014E16  0101               	movlb	1	; () banked
 19924  014E18  3732               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 19925  014E1A  0101               	movlb	1	; () banked
 19926  014E1C  0737               	decf	___ftadd@exp2& (0+255),f,b
 19927                           
 19928                           ; BSR set to: 1
 19929  014E1E  0101               	movlb	1	; () banked
 19930  014E20  5137               	movf	___ftadd@exp2& (0+255),w,b
 19931  014E22  0101               	movlb	1	; () banked
 19932  014E24  1938               	xorwf	___ftadd@exp1& (0+255),w,b
 19933  014E26  B4D8               	btfsc	status,2,c
 19934  014E28  D014               	goto	l10364
 19935                           
 19936                           ; BSR set to: 1
 19937  014E2A  0101               	movlb	1	; () banked
 19938  014E2C  0736               	decf	___ftadd@sign& (0+255),f,b
 19939  014E2E  C136  F133         	movff	___ftadd@sign,??___ftadd
 19940  014E32  0E07               	movlw	7
 19941  014E34  0101               	movlb	1	; () banked
 19942  014E36  1733               	andwf	??___ftadd& (0+255),f,b
 19943  014E38  B4D8               	btfsc	status,2,c
 19944  014E3A  D00B               	goto	l10364
 19945  014E3C  D7E6               	goto	l10356
 19946  014E3E                     l10362:
 19947                           
 19948                           ; BSR set to: 1
 19949  014E3E  0101               	movlb	1	; () banked
 19950  014E40  90D8               	bcf	status,0,c
 19951  014E42  0101               	movlb	1	; () banked
 19952  014E44  332F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 19953  014E46  0101               	movlb	1	; () banked
 19954  014E48  332E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 19955  014E4A  0101               	movlb	1	; () banked
 19956  014E4C  332D               	rrcf	___ftadd@f1& (0+255),f,b
 19957  014E4E  0101               	movlb	1	; () banked
 19958  014E50  2B38               	incf	___ftadd@exp1& (0+255),f,b
 19959  014E52                     l10364:
 19960                           
 19961                           ; BSR set to: 1
 19962  014E52  0101               	movlb	1	; () banked
 19963  014E54  5137               	movf	___ftadd@exp2& (0+255),w,b
 19964  014E56  0101               	movlb	1	; () banked
 19965  014E58  6338               	cpfseq	___ftadd@exp1& (0+255),b
 19966  014E5A  D7F1               	goto	l10362
 19967  014E5C  D02F               	goto	l2540
 19968  014E5E                     l10366:
 19969                           
 19970                           ; BSR set to: 1
 19971  014E5E  0101               	movlb	1	; () banked
 19972  014E60  5138               	movf	___ftadd@exp1& (0+255),w,b
 19973  014E62  0101               	movlb	1	; () banked
 19974  014E64  5D37               	subwf	___ftadd@exp2& (0+255),w,b
 19975  014E66  B0D8               	btfsc	status,0,c
 19976  014E68  D029               	goto	l2540
 19977  014E6A                     l10368:
 19978                           
 19979                           ; BSR set to: 1
 19980  014E6A  0101               	movlb	1	; () banked
 19981  014E6C  90D8               	bcf	status,0,c
 19982  014E6E  0101               	movlb	1	; () banked
 19983  014E70  372D               	rlcf	___ftadd@f1& (0+255),f,b
 19984  014E72  0101               	movlb	1	; () banked
 19985  014E74  372E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 19986  014E76  0101               	movlb	1	; () banked
 19987  014E78  372F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 19988  014E7A  0101               	movlb	1	; () banked
 19989  014E7C  0738               	decf	___ftadd@exp1& (0+255),f,b
 19990                           
 19991                           ; BSR set to: 1
 19992  014E7E  0101               	movlb	1	; () banked
 19993  014E80  5137               	movf	___ftadd@exp2& (0+255),w,b
 19994  014E82  0101               	movlb	1	; () banked
 19995  014E84  1938               	xorwf	___ftadd@exp1& (0+255),w,b
 19996  014E86  B4D8               	btfsc	status,2,c
 19997  014E88  D014               	goto	l10376
 19998                           
 19999                           ; BSR set to: 1
 20000  014E8A  0101               	movlb	1	; () banked
 20001  014E8C  0736               	decf	___ftadd@sign& (0+255),f,b
 20002  014E8E  C136  F133         	movff	___ftadd@sign,??___ftadd
 20003  014E92  0E07               	movlw	7
 20004  014E94  0101               	movlb	1	; () banked
 20005  014E96  1733               	andwf	??___ftadd& (0+255),f,b
 20006  014E98  B4D8               	btfsc	status,2,c
 20007  014E9A  D00B               	goto	l10376
 20008  014E9C  D7E6               	goto	l10368
 20009  014E9E                     l10374:
 20010                           
 20011                           ; BSR set to: 1
 20012  014E9E  0101               	movlb	1	; () banked
 20013  014EA0  90D8               	bcf	status,0,c
 20014  014EA2  0101               	movlb	1	; () banked
 20015  014EA4  3332               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 20016  014EA6  0101               	movlb	1	; () banked
 20017  014EA8  3331               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 20018  014EAA  0101               	movlb	1	; () banked
 20019  014EAC  3330               	rrcf	___ftadd@f2& (0+255),f,b
 20020  014EAE  0101               	movlb	1	; () banked
 20021  014EB0  2B37               	incf	___ftadd@exp2& (0+255),f,b
 20022  014EB2                     l10376:
 20023                           
 20024                           ; BSR set to: 1
 20025  014EB2  0101               	movlb	1	; () banked
 20026  014EB4  5137               	movf	___ftadd@exp2& (0+255),w,b
 20027  014EB6  0101               	movlb	1	; () banked
 20028  014EB8  6338               	cpfseq	___ftadd@exp1& (0+255),b
 20029  014EBA  D7F1               	goto	l10374
 20030  014EBC                     l2540:
 20031                           
 20032                           ; BSR set to: 1
 20033  014EBC  0101               	movlb	1	; () banked
 20034  014EBE  AF36               	btfss	___ftadd@sign& (0+255),7,b
 20035  014EC0  D012               	goto	l2549
 20036                           
 20037                           ; BSR set to: 1
 20038  014EC2  0EFF               	movlw	255
 20039  014EC4  0101               	movlb	1	; () banked
 20040  014EC6  1B2D               	xorwf	___ftadd@f1& (0+255),f,b
 20041  014EC8  0EFF               	movlw	255
 20042  014ECA  0101               	movlb	1	; () banked
 20043  014ECC  1B2E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 20044  014ECE  0EFF               	movlw	255
 20045  014ED0  0101               	movlb	1	; () banked
 20046  014ED2  1B2F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 20047  014ED4  0E01               	movlw	1
 20048  014ED6  0101               	movlb	1	; () banked
 20049  014ED8  272D               	addwf	___ftadd@f1& (0+255),f,b
 20050  014EDA  0E00               	movlw	0
 20051  014EDC  0101               	movlb	1	; () banked
 20052  014EDE  232E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 20053  014EE0  0E00               	movlw	0
 20054  014EE2  0101               	movlb	1	; () banked
 20055  014EE4  232F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 20056  014EE6                     l2549:
 20057                           
 20058                           ; BSR set to: 1
 20059  014EE6  0101               	movlb	1	; () banked
 20060  014EE8  AD36               	btfss	___ftadd@sign& (0+255),6,b
 20061  014EEA  D012               	goto	l10382
 20062                           
 20063                           ; BSR set to: 1
 20064  014EEC  0EFF               	movlw	255
 20065  014EEE  0101               	movlb	1	; () banked
 20066  014EF0  1B30               	xorwf	___ftadd@f2& (0+255),f,b
 20067  014EF2  0EFF               	movlw	255
 20068  014EF4  0101               	movlb	1	; () banked
 20069  014EF6  1B31               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 20070  014EF8  0EFF               	movlw	255
 20071  014EFA  0101               	movlb	1	; () banked
 20072  014EFC  1B32               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 20073  014EFE  0E01               	movlw	1
 20074  014F00  0101               	movlb	1	; () banked
 20075  014F02  2730               	addwf	___ftadd@f2& (0+255),f,b
 20076  014F04  0E00               	movlw	0
 20077  014F06  0101               	movlb	1	; () banked
 20078  014F08  2331               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20079  014F0A  0E00               	movlw	0
 20080  014F0C  0101               	movlb	1	; () banked
 20081  014F0E  2332               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20082  014F10                     l10382:
 20083                           
 20084                           ; BSR set to: 1
 20085  014F10  0E00               	movlw	0
 20086  014F12  0101               	movlb	1	; () banked
 20087  014F14  6F36               	movwf	___ftadd@sign& (0+255),b
 20088                           
 20089                           ; BSR set to: 1
 20090  014F16  0101               	movlb	1	; () banked
 20091  014F18  512D               	movf	___ftadd@f1& (0+255),w,b
 20092  014F1A  0101               	movlb	1	; () banked
 20093  014F1C  2730               	addwf	___ftadd@f2& (0+255),f,b
 20094  014F1E  0101               	movlb	1	; () banked
 20095  014F20  512E               	movf	(___ftadd@f1+1)& (0+255),w,b
 20096  014F22  0101               	movlb	1	; () banked
 20097  014F24  2331               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20098  014F26  0101               	movlb	1	; () banked
 20099  014F28  512F               	movf	(___ftadd@f1+2)& (0+255),w,b
 20100  014F2A  0101               	movlb	1	; () banked
 20101  014F2C  2332               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20102                           
 20103                           ; BSR set to: 1
 20104  014F2E  0101               	movlb	1	; () banked
 20105  014F30  AF32               	btfss	(___ftadd@f2+2)& (0+255),7,b
 20106  014F32  D015               	goto	l10392
 20107                           
 20108                           ; BSR set to: 1
 20109  014F34  0EFF               	movlw	255
 20110  014F36  0101               	movlb	1	; () banked
 20111  014F38  1B30               	xorwf	___ftadd@f2& (0+255),f,b
 20112  014F3A  0EFF               	movlw	255
 20113  014F3C  0101               	movlb	1	; () banked
 20114  014F3E  1B31               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 20115  014F40  0EFF               	movlw	255
 20116  014F42  0101               	movlb	1	; () banked
 20117  014F44  1B32               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 20118  014F46  0E01               	movlw	1
 20119  014F48  0101               	movlb	1	; () banked
 20120  014F4A  2730               	addwf	___ftadd@f2& (0+255),f,b
 20121  014F4C  0E00               	movlw	0
 20122  014F4E  0101               	movlb	1	; () banked
 20123  014F50  2331               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20124  014F52  0E00               	movlw	0
 20125  014F54  0101               	movlb	1	; () banked
 20126  014F56  2332               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20127                           
 20128                           ; BSR set to: 1
 20129  014F58  0E01               	movlw	1
 20130  014F5A  0101               	movlb	1	; () banked
 20131  014F5C  6F36               	movwf	___ftadd@sign& (0+255),b
 20132  014F5E                     l10392:
 20133                           
 20134                           ; BSR set to: 1
 20135  014F5E  C130  F100         	movff	___ftadd@f2,___ftpack@arg
 20136  014F62  C131  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
 20137  014F66  C132  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
 20138  014F6A  C138  F103         	movff	___ftadd@exp1,___ftpack@exp
 20139  014F6E  C136  F104         	movff	___ftadd@sign,___ftpack@sign
 20140  014F72  EC6E  F0C5         	call	___ftpack	;wreg free
 20141  014F76  C100  F12D         	movff	?___ftpack,?___ftadd
 20142  014F7A  C101  F12E         	movff	?___ftpack+1,?___ftadd+1
 20143  014F7E  C102  F12F         	movff	?___ftpack+2,?___ftadd+2
 20144  014F82  0012               	return	
 20145  014F84                     __end_of___ftadd:
 20146                           	opt stack 0
 20147                           tblptru	equ	0xFF8
 20148                           tblptrh	equ	0xFF7
 20149                           tblptrl	equ	0xFF6
 20150                           tablat	equ	0xFF5
 20151                           prodh	equ	0xFF4
 20152                           prodl	equ	0xFF3
 20153                           intcon	equ	0xFF2
 20154                           postinc0	equ	0xFEE
 20155                           wreg	equ	0xFE8
 20156                           postdec1	equ	0xFE5
 20157                           fsr1h	equ	0xFE2
 20158                           fsr1l	equ	0xFE1
 20159                           indf2	equ	0xFDF
 20160                           postinc2	equ	0xFDE
 20161                           postdec2	equ	0xFDD
 20162                           fsr2h	equ	0xFDA
 20163                           fsr2l	equ	0xFD9
 20164                           status	equ	0xFD8
 20165                           
 20166 ;; *************** function ___ftpack *****************
 20167 ;; Defined at:
 20168 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 20169 ;; Parameters:    Size  Location     Type
 20170 ;;  arg             3    0[BANK1 ] unsigned um
 20171 ;;  exp             1    3[BANK1 ] unsigned char 
 20172 ;;  sign            1    4[BANK1 ] unsigned char 
 20173 ;; Auto vars:     Size  Location     Type
 20174 ;;		None
 20175 ;; Return value:  Size  Location     Type
 20176 ;;                  3    0[BANK1 ] float 
 20177 ;; Registers used:
 20178 ;;		wreg, status,2, status,0
 20179 ;; Tracked objects:
 20180 ;;		On entry : 0/0
 20181 ;;		On exit  : 0/0
 20182 ;;		Unchanged: 0/0
 20183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20184 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20186 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20187 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20188 ;;Total ram usage:        8 bytes
 20189 ;; Hardware stack levels used:    1
 20190 ;; Hardware stack levels required when called:   10
 20191 ;; This function calls:
 20192 ;;		Nothing
 20193 ;; This function is called by:
 20194 ;;		___awtoft
 20195 ;;		___ftadd
 20196 ;;		___ftdiv
 20197 ;;		___ftmul
 20198 ;;		___lltoft
 20199 ;;		___lwtoft
 20200 ;; This function uses a non-reentrant model
 20201 ;;
 20202                           
 20203                           	psect	text28
 20204  018ADC                     __ptext28:
 20205                           	opt stack 0
 20206  018ADC                     ___ftpack:
 20207                           	opt stack 15
 20208                           
 20209                           ;incstack = 0
 20210  018ADC  0101               	movlb	1	; () banked
 20211  018ADE  5103               	movf	___ftpack@exp& (0+255),w,b
 20212  018AE0  B4D8               	btfsc	status,2,c
 20213  018AE2  D008               	goto	l9954
 20214                           
 20215                           ; BSR set to: 1
 20216  018AE4  0101               	movlb	1	; () banked
 20217  018AE6  5100               	movf	___ftpack@arg& (0+255),w,b
 20218  018AE8  0101               	movlb	1	; () banked
 20219  018AEA  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 20220  018AEC  0101               	movlb	1	; () banked
 20221  018AEE  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 20222  018AF0  A4D8               	btfss	status,2,c
 20223  018AF2  D014               	goto	l9960
 20224  018AF4                     l9954:
 20225                           
 20226                           ; BSR set to: 1
 20227  018AF4  0E00               	movlw	0
 20228  018AF6  0101               	movlb	1	; () banked
 20229  018AF8  6F00               	movwf	?___ftpack& (0+255),b
 20230  018AFA  0E00               	movlw	0
 20231  018AFC  0101               	movlb	1	; () banked
 20232  018AFE  6F01               	movwf	(?___ftpack+1)& (0+255),b
 20233  018B00  0E00               	movlw	0
 20234  018B02  0101               	movlb	1	; () banked
 20235  018B04  6F02               	movwf	(?___ftpack+2)& (0+255),b
 20236  018B06  0012               	return	
 20237  018B08                     l9958:
 20238                           
 20239                           ; BSR set to: 1
 20240  018B08  0101               	movlb	1	; () banked
 20241  018B0A  2B03               	incf	___ftpack@exp& (0+255),f,b
 20242  018B0C  0101               	movlb	1	; () banked
 20243  018B0E  90D8               	bcf	status,0,c
 20244  018B10  0101               	movlb	1	; () banked
 20245  018B12  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20246  018B14  0101               	movlb	1	; () banked
 20247  018B16  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20248  018B18  0101               	movlb	1	; () banked
 20249  018B1A  3300               	rrcf	___ftpack@arg& (0+255),f,b
 20250  018B1C                     l9960:
 20251                           
 20252                           ; BSR set to: 1
 20253  018B1C  0E00               	movlw	0
 20254  018B1E  0101               	movlb	1	; () banked
 20255  018B20  1500               	andwf	___ftpack@arg& (0+255),w,b
 20256  018B22  0101               	movlb	1	; () banked
 20257  018B24  6F05               	movwf	??___ftpack& (0+255),b
 20258  018B26  0E00               	movlw	0
 20259  018B28  0101               	movlb	1	; () banked
 20260  018B2A  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20261  018B2C  0101               	movlb	1	; () banked
 20262  018B2E  6F06               	movwf	(??___ftpack+1)& (0+255),b
 20263  018B30  0EFE               	movlw	254
 20264  018B32  0101               	movlb	1	; () banked
 20265  018B34  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20266  018B36  0101               	movlb	1	; () banked
 20267  018B38  6F07               	movwf	(??___ftpack+2)& (0+255),b
 20268  018B3A  0101               	movlb	1	; () banked
 20269  018B3C  5105               	movf	??___ftpack& (0+255),w,b
 20270  018B3E  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 20271  018B40  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 20272  018B42  B4D8               	btfsc	status,2,c
 20273  018B44  D014               	goto	l9966
 20274  018B46  D7E0               	goto	l9958
 20275  018B48                     l9962:
 20276                           
 20277                           ; BSR set to: 1
 20278  018B48  0101               	movlb	1	; () banked
 20279  018B4A  2B03               	incf	___ftpack@exp& (0+255),f,b
 20280                           
 20281                           ; BSR set to: 1
 20282  018B4C  0E01               	movlw	1
 20283  018B4E  0101               	movlb	1	; () banked
 20284  018B50  2700               	addwf	___ftpack@arg& (0+255),f,b
 20285  018B52  0E00               	movlw	0
 20286  018B54  0101               	movlb	1	; () banked
 20287  018B56  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 20288  018B58  0E00               	movlw	0
 20289  018B5A  0101               	movlb	1	; () banked
 20290  018B5C  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 20291  018B5E  0101               	movlb	1	; () banked
 20292  018B60  90D8               	bcf	status,0,c
 20293  018B62  0101               	movlb	1	; () banked
 20294  018B64  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20295  018B66  0101               	movlb	1	; () banked
 20296  018B68  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20297  018B6A  0101               	movlb	1	; () banked
 20298  018B6C  3300               	rrcf	___ftpack@arg& (0+255),f,b
 20299  018B6E                     l9966:
 20300                           
 20301                           ; BSR set to: 1
 20302  018B6E  0E00               	movlw	0
 20303  018B70  0101               	movlb	1	; () banked
 20304  018B72  1500               	andwf	___ftpack@arg& (0+255),w,b
 20305  018B74  0101               	movlb	1	; () banked
 20306  018B76  6F05               	movwf	??___ftpack& (0+255),b
 20307  018B78  0E00               	movlw	0
 20308  018B7A  0101               	movlb	1	; () banked
 20309  018B7C  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20310  018B7E  0101               	movlb	1	; () banked
 20311  018B80  6F06               	movwf	(??___ftpack+1)& (0+255),b
 20312  018B82  0EFF               	movlw	255
 20313  018B84  0101               	movlb	1	; () banked
 20314  018B86  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20315  018B88  0101               	movlb	1	; () banked
 20316  018B8A  6F07               	movwf	(??___ftpack+2)& (0+255),b
 20317  018B8C  0101               	movlb	1	; () banked
 20318  018B8E  5105               	movf	??___ftpack& (0+255),w,b
 20319  018B90  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 20320  018B92  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 20321  018B94  B4D8               	btfsc	status,2,c
 20322  018B96  D00B               	goto	l9970
 20323  018B98  D7D7               	goto	l9962
 20324  018B9A                     l9968:
 20325                           
 20326                           ; BSR set to: 1
 20327  018B9A  0101               	movlb	1	; () banked
 20328  018B9C  0703               	decf	___ftpack@exp& (0+255),f,b
 20329  018B9E  0101               	movlb	1	; () banked
 20330  018BA0  90D8               	bcf	status,0,c
 20331  018BA2  0101               	movlb	1	; () banked
 20332  018BA4  3700               	rlcf	___ftpack@arg& (0+255),f,b
 20333  018BA6  0101               	movlb	1	; () banked
 20334  018BA8  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 20335  018BAA  0101               	movlb	1	; () banked
 20336  018BAC  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 20337  018BAE                     l9970:
 20338                           
 20339                           ; BSR set to: 1
 20340  018BAE  0101               	movlb	1	; () banked
 20341  018BB0  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 20342  018BB2  D7F3               	goto	l9968
 20343                           
 20344                           ; BSR set to: 1
 20345  018BB4  0101               	movlb	1	; () banked
 20346  018BB6  B103               	btfsc	___ftpack@exp& (0+255),0,b
 20347  018BB8  D002               	goto	l9974
 20348                           
 20349                           ; BSR set to: 1
 20350  018BBA  0101               	movlb	1	; () banked
 20351  018BBC  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 20352  018BBE                     l9974:
 20353                           
 20354                           ; BSR set to: 1
 20355  018BBE  0101               	movlb	1	; () banked
 20356  018BC0  90D8               	bcf	status,0,c
 20357  018BC2  3303               	rrcf	___ftpack@exp& (0+255),f,b
 20358  018BC4  0101               	movlb	1	; () banked
 20359  018BC6  5103               	movf	___ftpack@exp& (0+255),w,b
 20360  018BC8  0101               	movlb	1	; () banked
 20361  018BCA  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 20362                           
 20363                           ; BSR set to: 1
 20364  018BCC  0101               	movlb	1	; () banked
 20365  018BCE  5104               	movf	___ftpack@sign& (0+255),w,b
 20366  018BD0  B4D8               	btfsc	status,2,c
 20367  018BD2  D002               	goto	l9980
 20368                           
 20369                           ; BSR set to: 1
 20370  018BD4  0101               	movlb	1	; () banked
 20371  018BD6  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 20372  018BD8                     l9980:
 20373                           
 20374                           ; BSR set to: 1
 20375  018BD8  C100  F100         	movff	___ftpack@arg,?___ftpack
 20376  018BDC  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 20377  018BE0  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 20378  018BE4  0012               	return	
 20379  018BE6                     __end_of___ftpack:
 20380                           	opt stack 0
 20381                           tblptru	equ	0xFF8
 20382                           tblptrh	equ	0xFF7
 20383                           tblptrl	equ	0xFF6
 20384                           tablat	equ	0xFF5
 20385                           prodh	equ	0xFF4
 20386                           prodl	equ	0xFF3
 20387                           intcon	equ	0xFF2
 20388                           postinc0	equ	0xFEE
 20389                           wreg	equ	0xFE8
 20390                           postdec1	equ	0xFE5
 20391                           fsr1h	equ	0xFE2
 20392                           fsr1l	equ	0xFE1
 20393                           indf2	equ	0xFDF
 20394                           postinc2	equ	0xFDE
 20395                           postdec2	equ	0xFDD
 20396                           fsr2h	equ	0xFDA
 20397                           fsr2l	equ	0xFD9
 20398                           status	equ	0xFD8
 20399                           
 20400 ;; *************** function _TCPPutArray *****************
 20401 ;; Defined at:
 20402 ;;		line 1192 in file "../tcpip/tcp.c"
 20403 ;; Parameters:    Size  Location     Type
 20404 ;;  hTCP            1    wreg     unsigned char 
 20405 ;;  data            2   87[BANK1 ] PTR unsigned char 
 20406 ;;		 -> TCPServer@cmdBytes(18), 
 20407 ;;  len             2   89[BANK1 ] unsigned int 
 20408 ;; Auto vars:     Size  Location     Type
 20409 ;;  hTCP            1  101[BANK1 ] unsigned char 
 20410 ;;  wFreeTXSpace    2   99[BANK1 ] unsigned int 
 20411 ;;  wActualLen      2   97[BANK1 ] unsigned int 
 20412 ;;  wRightLen       2   95[BANK1 ] unsigned int 
 20413 ;; Return value:  Size  Location     Type
 20414 ;;                  2   87[BANK1 ] unsigned int 
 20415 ;; Registers used:
 20416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20417 ;; Tracked objects:
 20418 ;;		On entry : 0/0
 20419 ;;		On exit  : 0/0
 20420 ;;		Unchanged: 0/0
 20421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20422 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20423 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20424 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20425 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20426 ;;Total ram usage:       15 bytes
 20427 ;; Hardware stack levels used:    1
 20428 ;; Hardware stack levels required when called:   16
 20429 ;; This function calls:
 20430 ;;		_SyncTCBStub
 20431 ;;		_TCPFlush
 20432 ;;		_TCPIsPutReady
 20433 ;;		_TCPRAMCopy
 20434 ;;		_TickGetDiv256
 20435 ;; This function is called by:
 20436 ;;		_TCPServer
 20437 ;;		_TCPPutString
 20438 ;; This function uses a non-reentrant model
 20439 ;;
 20440                           
 20441                           	psect	text29
 20442  015462                     __ptext29:
 20443                           	opt stack 0
 20444  015462                     _TCPPutArray:
 20445                           	opt stack 12
 20446                           
 20447                           ; BSR set to: 1
 20448                           ;incstack = 0
 20449                           ;TCPPutArray@hTCP stored from wreg
 20450  015462  0101               	movlb	1	; () banked
 20451  015464  6F65               	movwf	TCPPutArray@hTCP& (0+255),b
 20452                           
 20453                           ; BSR set to: 1
 20454                           ;tcp.c: 1194: uint16_t wActualLen;
 20455                           ;tcp.c: 1195: uint16_t wFreeTXSpace;
 20456                           ;tcp.c: 1196: uint16_t wRightLen = 0;
 20457  015466  0E00               	movlw	0
 20458  015468  0101               	movlb	1	; () banked
 20459  01546A  6F60               	movwf	(TCPPutArray@wRightLen+1)& (0+255),b
 20460  01546C  0E00               	movlw	0
 20461  01546E  0101               	movlb	1	; () banked
 20462  015470  6F5F               	movwf	TCPPutArray@wRightLen& (0+255),b
 20463                           
 20464                           ; BSR set to: 1
 20465                           ;tcp.c: 1198: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 20466  015472  0101               	movlb	1	; () banked
 20467  015474  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 20468  015476  B4D8               	btfsc	status,2,c
 20469  015478  D007               	goto	l14258
 20470                           
 20471                           ; BSR set to: 1
 20472                           ;tcp.c: 1199: {
 20473                           ;tcp.c: 1200: return 0;
 20474  01547A  0E00               	movlw	0
 20475  01547C  0101               	movlb	1	; () banked
 20476  01547E  6F58               	movwf	(?_TCPPutArray+1)& (0+255),b
 20477  015480  0E00               	movlw	0
 20478  015482  0101               	movlb	1	; () banked
 20479  015484  6F57               	movwf	?_TCPPutArray& (0+255),b
 20480  015486  0012               	return	
 20481  015488                     l14258:
 20482                           
 20483                           ; BSR set to: 1
 20484                           ;tcp.c: 1201: }
 20485                           ;tcp.c: 1203: SyncTCBStub(hTCP);
 20486  015488  0101               	movlb	1	; () banked
 20487  01548A  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 20488  01548C  EC3D  F0D0         	call	_SyncTCBStub
 20489                           
 20490                           ;tcp.c: 1205: wFreeTXSpace = TCPIsPutReady(hTCP);
 20491  015490  0101               	movlb	1	; () banked
 20492  015492  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 20493  015494  ECE8  F0C4         	call	_TCPIsPutReady
 20494  015498  0101               	movlb	1	; () banked
 20495  01549A  C121  F163         	movff	?_TCPIsPutReady,TCPPutArray@wFreeTXSpace
 20496  01549E  0101               	movlb	1	; () banked
 20497  0154A0  C122  F164         	movff	?_TCPIsPutReady+1,TCPPutArray@wFreeTXSpace+1
 20498                           
 20499                           ; BSR set to: 1
 20500                           ;tcp.c: 1206: if(wFreeTXSpace == 0u)
 20501  0154A4  0101               	movlb	1	; () banked
 20502  0154A6  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 20503  0154A8  1163               	iorwf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 20504  0154AA  A4D8               	btfss	status,2,c
 20505  0154AC  D00B               	goto	l976
 20506                           
 20507                           ; BSR set to: 1
 20508                           ;tcp.c: 1207: {
 20509                           ;tcp.c: 1208: TCPFlush(hTCP);
 20510  0154AE  0101               	movlb	1	; () banked
 20511  0154B0  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 20512  0154B2  ECBD  F0D8         	call	_TCPFlush
 20513                           
 20514                           ;tcp.c: 1209: return 0;
 20515  0154B6  0E00               	movlw	0
 20516  0154B8  0101               	movlb	1	; () banked
 20517  0154BA  6F58               	movwf	(?_TCPPutArray+1)& (0+255),b
 20518  0154BC  0E00               	movlw	0
 20519  0154BE  0101               	movlb	1	; () banked
 20520  0154C0  6F57               	movwf	?_TCPPutArray& (0+255),b
 20521  0154C2  0012               	return	
 20522  0154C4                     l976:
 20523                           
 20524                           ; BSR set to: 1
 20525                           ;tcp.c: 1210: }
 20526                           ;tcp.c: 1212: wActualLen = wFreeTXSpace;
 20527  0154C4  C163  F161         	movff	TCPPutArray@wFreeTXSpace,TCPPutArray@wActualLen
 20528  0154C8  C164  F162         	movff	TCPPutArray@wFreeTXSpace+1,TCPPutArray@wActualLen+1
 20529                           
 20530                           ; BSR set to: 1
 20531                           ;tcp.c: 1213: if(wFreeTXSpace > len)
 20532  0154CC  0101               	movlb	1	; () banked
 20533  0154CE  5163               	movf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 20534  0154D0  0101               	movlb	1	; () banked
 20535  0154D2  5D59               	subwf	TCPPutArray@len& (0+255),w,b
 20536  0154D4  0101               	movlb	1	; () banked
 20537  0154D6  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 20538  0154D8  0101               	movlb	1	; () banked
 20539  0154DA  595A               	subwfb	(TCPPutArray@len+1)& (0+255),w,b
 20540  0154DC  B0D8               	btfsc	status,0,c
 20541  0154DE  D004               	goto	l977
 20542                           
 20543                           ; BSR set to: 1
 20544                           ;tcp.c: 1214: wActualLen = len;
 20545  0154E0  C159  F161         	movff	TCPPutArray@len,TCPPutArray@wActualLen
 20546  0154E4  C15A  F162         	movff	TCPPutArray@len+1,TCPPutArray@wActualLen+1
 20547  0154E8                     l977:
 20548                           
 20549                           ; BSR set to: 1
 20550                           ;tcp.c: 1219: if((!MyTCBStub.Flags.bHalfFullFlush) && (wFreeTXSpace <= ((MyTCBStub.buffe
      +                          rRxStart-MyTCBStub.bufferTxStart)>>1)))
 20551  0154E8  0101               	movlb	1	; () banked
 20552  0154EA  B1F8               	btfsc	(_MyTCBStub+24)& (0+255),0,b
 20553  0154EC  D02C               	goto	l14280
 20554                           
 20555                           ; BSR set to: 1
 20556  0154EE  0101               	movlb	1	; () banked
 20557  0154F0  C1E0  F15B         	movff	_MyTCBStub,??_TCPPutArray
 20558  0154F4  0101               	movlb	1	; () banked
 20559  0154F6  C1E1  F15C         	movff	_MyTCBStub+1,??_TCPPutArray+1
 20560  0154FA  0101               	movlb	1	; () banked
 20561  0154FC  1F5B               	comf	??_TCPPutArray& (0+255),f,b
 20562  0154FE  1F5C               	comf	(??_TCPPutArray+1)& (0+255),f,b
 20563  015500  4B5B               	infsnz	??_TCPPutArray& (0+255),f,b
 20564  015502  2B5C               	incf	(??_TCPPutArray+1)& (0+255),f,b
 20565  015504  0101               	movlb	1	; () banked
 20566  015506  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 20567  015508  0101               	movlb	1	; () banked
 20568  01550A  275B               	addwf	??_TCPPutArray& (0+255),f,b
 20569  01550C  0101               	movlb	1	; () banked
 20570  01550E  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 20571  015510  0101               	movlb	1	; () banked
 20572  015512  235C               	addwfc	(??_TCPPutArray+1)& (0+255),f,b
 20573  015514  90D8               	bcf	status,0,c
 20574  015516  0101               	movlb	1	; () banked
 20575  015518  315C               	rrcf	(??_TCPPutArray+1)& (0+255),w,b
 20576  01551A  0101               	movlb	1	; () banked
 20577  01551C  6F5E               	movwf	(??_TCPPutArray+3)& (0+255),b
 20578  01551E  0101               	movlb	1	; () banked
 20579  015520  315B               	rrcf	??_TCPPutArray& (0+255),w,b
 20580  015522  0101               	movlb	1	; () banked
 20581  015524  6F5D               	movwf	(??_TCPPutArray+2)& (0+255),b
 20582  015526  0101               	movlb	1	; () banked
 20583  015528  5163               	movf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 20584  01552A  0101               	movlb	1	; () banked
 20585  01552C  5D5D               	subwf	(??_TCPPutArray+2)& (0+255),w,b
 20586  01552E  0101               	movlb	1	; () banked
 20587  015530  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 20588  015532  0101               	movlb	1	; () banked
 20589  015534  595E               	subwfb	(??_TCPPutArray+3)& (0+255),w,b
 20590  015536  A0D8               	btfss	status,0,c
 20591  015538  D006               	goto	l14280
 20592                           
 20593                           ; BSR set to: 1
 20594                           ;tcp.c: 1220: {
 20595                           ;tcp.c: 1221: TCPFlush(hTCP);
 20596  01553A  0101               	movlb	1	; () banked
 20597  01553C  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 20598  01553E  ECBD  F0D8         	call	_TCPFlush
 20599                           
 20600                           ;tcp.c: 1222: MyTCBStub.Flags.bHalfFullFlush = 1;
 20601  015542  0101               	movlb	1	; () banked
 20602  015544  81F8               	bsf	(_MyTCBStub+24)& (0+255),0,b
 20603  015546                     l14280:
 20604                           
 20605                           ; BSR set to: 1
 20606                           ;tcp.c: 1223: }
 20607                           ;tcp.c: 1258: if(MyTCBStub.txHead + wActualLen >= MyTCBStub.bufferRxStart)
 20608  015546  0101               	movlb	1	; () banked
 20609  015548  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 20610  01554C  CFDE F15B          	movff	postinc2,??_TCPPutArray
 20611  015550  CFDD F15C          	movff	postdec2,??_TCPPutArray+1
 20612  015554  0101               	movlb	1	; () banked
 20613  015556  5161               	movf	TCPPutArray@wActualLen& (0+255),w,b
 20614  015558  0101               	movlb	1	; () banked
 20615  01555A  275B               	addwf	??_TCPPutArray& (0+255),f,b
 20616  01555C  0101               	movlb	1	; () banked
 20617  01555E  5162               	movf	(TCPPutArray@wActualLen+1)& (0+255),w,b
 20618  015560  0101               	movlb	1	; () banked
 20619  015562  235C               	addwfc	(??_TCPPutArray+1)& (0+255),f,b
 20620  015564  0101               	movlb	1	; () banked
 20621  015566  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 20622  015568  0101               	movlb	1	; () banked
 20623  01556A  5D5B               	subwf	??_TCPPutArray& (0+255),w,b
 20624  01556C  0101               	movlb	1	; () banked
 20625  01556E  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 20626  015570  0101               	movlb	1	; () banked
 20627  015572  595C               	subwfb	(??_TCPPutArray+1)& (0+255),w,b
 20628  015574  A0D8               	btfss	status,0,c
 20629  015576  D03F               	goto	l14292
 20630                           
 20631                           ; BSR set to: 1
 20632                           ;tcp.c: 1259: {
 20633                           ;tcp.c: 1260: wRightLen = MyTCBStub.bufferRxStart-MyTCBStub.txHead;
 20634  015578  0101               	movlb	1	; () banked
 20635  01557A  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 20636  01557E  CFDE F15B          	movff	postinc2,??_TCPPutArray
 20637  015582  CFDD F15C          	movff	postdec2,??_TCPPutArray+1
 20638  015586  0101               	movlb	1	; () banked
 20639  015588  1F5B               	comf	??_TCPPutArray& (0+255),f,b
 20640  01558A  1F5C               	comf	(??_TCPPutArray+1)& (0+255),f,b
 20641  01558C  4B5B               	infsnz	??_TCPPutArray& (0+255),f,b
 20642  01558E  2B5C               	incf	(??_TCPPutArray+1)& (0+255),f,b
 20643  015590  0101               	movlb	1	; () banked
 20644  015592  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 20645  015594  0101               	movlb	1	; () banked
 20646  015596  255B               	addwf	??_TCPPutArray& (0+255),w,b
 20647  015598  0101               	movlb	1	; () banked
 20648  01559A  6F5F               	movwf	TCPPutArray@wRightLen& (0+255),b
 20649  01559C  0101               	movlb	1	; () banked
 20650  01559E  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 20651  0155A0  0101               	movlb	1	; () banked
 20652  0155A2  215C               	addwfc	(??_TCPPutArray+1)& (0+255),w,b
 20653  0155A4  0101               	movlb	1	; () banked
 20654  0155A6  6F60               	movwf	(TCPPutArray@wRightLen+1)& (0+255),b
 20655                           
 20656                           ; BSR set to: 1
 20657                           ;tcp.c: 1261: TCPRAMCopy(MyTCBStub.txHead, MyTCBStub.vMemoryMedium, (unsigned short)data
      +                          , 1u, wRightLen);
 20658  0155A8  C1E6  F11E         	movff	_MyTCBStub+6,TCPRAMCopy@ptrDest
 20659  0155AC  C1E7  F11F         	movff	_MyTCBStub+7,TCPRAMCopy@ptrDest+1
 20660  0155B0  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 20661  0155B4  C157  F121         	movff	TCPPutArray@data,TCPRAMCopy@ptrSource
 20662  0155B8  C158  F122         	movff	TCPPutArray@data+1,TCPRAMCopy@ptrSource+1
 20663  0155BC  0E01               	movlw	1
 20664  0155BE  0101               	movlb	1	; () banked
 20665  0155C0  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 20666  0155C2  C15F  F124         	movff	TCPPutArray@wRightLen,TCPRAMCopy@wLength
 20667  0155C6  C160  F125         	movff	TCPPutArray@wRightLen+1,TCPRAMCopy@wLength+1
 20668  0155CA  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 20669                           
 20670                           ;tcp.c: 1262: data += wRightLen;
 20671  0155CE  0101               	movlb	1	; () banked
 20672  0155D0  515F               	movf	TCPPutArray@wRightLen& (0+255),w,b
 20673  0155D2  0101               	movlb	1	; () banked
 20674  0155D4  2757               	addwf	TCPPutArray@data& (0+255),f,b
 20675  0155D6  0101               	movlb	1	; () banked
 20676  0155D8  5160               	movf	(TCPPutArray@wRightLen+1)& (0+255),w,b
 20677  0155DA  0101               	movlb	1	; () banked
 20678  0155DC  2358               	addwfc	(TCPPutArray@data+1)& (0+255),f,b
 20679                           
 20680                           ; BSR set to: 1
 20681                           ;tcp.c: 1263: wActualLen -= wRightLen;
 20682  0155DE  0101               	movlb	1	; () banked
 20683  0155E0  515F               	movf	TCPPutArray@wRightLen& (0+255),w,b
 20684  0155E2  0101               	movlb	1	; () banked
 20685  0155E4  5F61               	subwf	TCPPutArray@wActualLen& (0+255),f,b
 20686  0155E6  0101               	movlb	1	; () banked
 20687  0155E8  5160               	movf	(TCPPutArray@wRightLen+1)& (0+255),w,b
 20688  0155EA  0101               	movlb	1	; () banked
 20689  0155EC  5B62               	subwfb	(TCPPutArray@wActualLen+1)& (0+255),f,b
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;tcp.c: 1264: MyTCBStub.txHead = MyTCBStub.bufferTxStart;
 20693  0155EE  C1E0  F1E6         	movff	_MyTCBStub,_MyTCBStub+6
 20694  0155F2  C1E1  F1E7         	movff	_MyTCBStub+1,_MyTCBStub+7
 20695  0155F6                     l14292:
 20696                           
 20697                           ; BSR set to: 1
 20698                           ;tcp.c: 1265: }
 20699                           ;tcp.c: 1267: TCPRAMCopy(MyTCBStub.txHead, MyTCBStub.vMemoryMedium, (unsigned short)data
      +                          , 1u, wActualLen);
 20700  0155F6  C1E6  F11E         	movff	_MyTCBStub+6,TCPRAMCopy@ptrDest
 20701  0155FA  C1E7  F11F         	movff	_MyTCBStub+7,TCPRAMCopy@ptrDest+1
 20702  0155FE  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 20703  015602  C157  F121         	movff	TCPPutArray@data,TCPRAMCopy@ptrSource
 20704  015606  C158  F122         	movff	TCPPutArray@data+1,TCPRAMCopy@ptrSource+1
 20705  01560A  0E01               	movlw	1
 20706  01560C  0101               	movlb	1	; () banked
 20707  01560E  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 20708  015610  C161  F124         	movff	TCPPutArray@wActualLen,TCPRAMCopy@wLength
 20709  015614  C162  F125         	movff	TCPPutArray@wActualLen+1,TCPRAMCopy@wLength+1
 20710  015618  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 20711                           
 20712                           ;tcp.c: 1268: MyTCBStub.txHead += wActualLen;
 20713  01561C  0101               	movlb	1	; () banked
 20714  01561E  5161               	movf	TCPPutArray@wActualLen& (0+255),w,b
 20715  015620  0101               	movlb	1	; () banked
 20716  015622  27E6               	addwf	(_MyTCBStub+6)& (0+255),f,b
 20717  015624  0101               	movlb	1	; () banked
 20718  015626  5162               	movf	(TCPPutArray@wActualLen+1)& (0+255),w,b
 20719  015628  0101               	movlb	1	; () banked
 20720  01562A  23E7               	addwfc	(_MyTCBStub+7)& (0+255),f,b
 20721                           
 20722                           ; BSR set to: 1
 20723                           ;tcp.c: 1272: if(wFreeTXSpace <= len)
 20724  01562C  0101               	movlb	1	; () banked
 20725  01562E  5163               	movf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 20726  015630  0101               	movlb	1	; () banked
 20727  015632  5D59               	subwf	TCPPutArray@len& (0+255),w,b
 20728  015634  0101               	movlb	1	; () banked
 20729  015636  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 20730  015638  0101               	movlb	1	; () banked
 20731  01563A  595A               	subwfb	(TCPPutArray@len+1)& (0+255),w,b
 20732  01563C  A0D8               	btfss	status,0,c
 20733  01563E  D005               	goto	l980
 20734                           
 20735                           ; BSR set to: 1
 20736                           ;tcp.c: 1273: {
 20737                           ;tcp.c: 1274: TCPFlush(hTCP);
 20738  015640  0101               	movlb	1	; () banked
 20739  015642  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 20740  015644  ECBD  F0D8         	call	_TCPFlush
 20741                           
 20742                           ;tcp.c: 1275: }
 20743  015648  D019               	goto	l14304
 20744  01564A                     l980:
 20745                           
 20746                           ; BSR set to: 1
 20747                           ;tcp.c: 1279: else if(!MyTCBStub.Flags.bTimer2Enabled)
 20748  01564A  0101               	movlb	1	; () banked
 20749  01564C  BBF7               	btfsc	(_MyTCBStub+23)& (0+255),5,b
 20750  01564E  D016               	goto	l14304
 20751                           
 20752                           ; BSR set to: 1
 20753                           ;tcp.c: 1280: {
 20754                           ;tcp.c: 1281: MyTCBStub.Flags.bTimer2Enabled = 1;
 20755  015650  0101               	movlb	1	; () banked
 20756  015652  8BF7               	bsf	(_MyTCBStub+23)& (0+255),5,b
 20757                           
 20758                           ; BSR set to: 1
 20759                           ;tcp.c: 1282: MyTCBStub.eventTime2 = (uint16_t)TickGetDiv256() + ((((((40000000ul)/4)+12
      +                          8ull)/256ull))/25ull)/256ull;
 20760  015654  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 20761  015658  C100  F15B         	movff	?_TickGetDiv256,??_TCPPutArray
 20762  01565C  C101  F15C         	movff	?_TickGetDiv256+1,??_TCPPutArray+1
 20763  015660  C102  F15D         	movff	?_TickGetDiv256+2,??_TCPPutArray+2
 20764  015664  C103  F15E         	movff	?_TickGetDiv256+3,??_TCPPutArray+3
 20765  015668  0E06               	movlw	6
 20766  01566A  0101               	movlb	1	; () banked
 20767  01566C  255B               	addwf	??_TCPPutArray& (0+255),w,b
 20768  01566E  0101               	movlb	1	; () banked
 20769  015670  6FF2               	movwf	(_MyTCBStub+18)& (0+255),b
 20770  015672  0E00               	movlw	0
 20771  015674  0101               	movlb	1	; () banked
 20772  015676  215C               	addwfc	(??_TCPPutArray+1)& (0+255),w,b
 20773  015678  0101               	movlb	1	; () banked
 20774  01567A  6FF3               	movwf	(_MyTCBStub+19)& (0+255),b
 20775  01567C                     l14304:
 20776                           
 20777                           ;tcp.c: 1283: }
 20778                           ;tcp.c: 1285: return wActualLen + wRightLen;
 20779  01567C  0101               	movlb	1	; () banked
 20780  01567E  515F               	movf	TCPPutArray@wRightLen& (0+255),w,b
 20781  015680  0101               	movlb	1	; () banked
 20782  015682  2561               	addwf	TCPPutArray@wActualLen& (0+255),w,b
 20783  015684  0101               	movlb	1	; () banked
 20784  015686  6F57               	movwf	?_TCPPutArray& (0+255),b
 20785  015688  0101               	movlb	1	; () banked
 20786  01568A  5160               	movf	(TCPPutArray@wRightLen+1)& (0+255),w,b
 20787  01568C  0101               	movlb	1	; () banked
 20788  01568E  2162               	addwfc	(TCPPutArray@wActualLen+1)& (0+255),w,b
 20789  015690  0101               	movlb	1	; () banked
 20790  015692  6F58               	movwf	(?_TCPPutArray+1)& (0+255),b
 20791  015694  0012               	return	
 20792  015696                     __end_of_TCPPutArray:
 20793                           	opt stack 0
 20794                           tblptru	equ	0xFF8
 20795                           tblptrh	equ	0xFF7
 20796                           tblptrl	equ	0xFF6
 20797                           tablat	equ	0xFF5
 20798                           prodh	equ	0xFF4
 20799                           prodl	equ	0xFF3
 20800                           intcon	equ	0xFF2
 20801                           postinc0	equ	0xFEE
 20802                           wreg	equ	0xFE8
 20803                           postdec1	equ	0xFE5
 20804                           fsr1h	equ	0xFE2
 20805                           fsr1l	equ	0xFE1
 20806                           indf2	equ	0xFDF
 20807                           postinc2	equ	0xFDE
 20808                           postdec2	equ	0xFDD
 20809                           fsr2h	equ	0xFDA
 20810                           fsr2l	equ	0xFD9
 20811                           status	equ	0xFD8
 20812                           
 20813 ;; *************** function _TCPIsPutReady *****************
 20814 ;; Defined at:
 20815 ;;		line 1048 in file "../tcpip/tcp.c"
 20816 ;; Parameters:    Size  Location     Type
 20817 ;;  hTCP            1    wreg     unsigned char 
 20818 ;; Auto vars:     Size  Location     Type
 20819 ;;  hTCP            1   37[BANK1 ] unsigned char 
 20820 ;;  i               1   38[BANK1 ] unsigned char 
 20821 ;; Return value:  Size  Location     Type
 20822 ;;                  2   33[BANK1 ] unsigned int 
 20823 ;; Registers used:
 20824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20825 ;; Tracked objects:
 20826 ;;		On entry : 0/0
 20827 ;;		On exit  : 0/0
 20828 ;;		Unchanged: 0/0
 20829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20830 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20831 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20832 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20833 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20834 ;;Total ram usage:        6 bytes
 20835 ;; Hardware stack levels used:    1
 20836 ;; Hardware stack levels required when called:   12
 20837 ;; This function calls:
 20838 ;;		_SyncTCBStub
 20839 ;; This function is called by:
 20840 ;;		_TCPPutArray
 20841 ;;		_TCPServer
 20842 ;;		_TCPPut
 20843 ;;		_TCPPutROMArray
 20844 ;;		_TCPGetTxFIFOFull
 20845 ;; This function uses a non-reentrant model
 20846 ;;
 20847                           
 20848                           	psect	text30
 20849  0189D0                     __ptext30:
 20850                           	opt stack 0
 20851  0189D0                     _TCPIsPutReady:
 20852                           	opt stack 15
 20853                           
 20854                           ; BSR set to: 1
 20855                           ;incstack = 0
 20856                           ;TCPIsPutReady@hTCP stored from wreg
 20857  0189D0  0101               	movlb	1	; () banked
 20858  0189D2  6F25               	movwf	TCPIsPutReady@hTCP& (0+255),b
 20859                           
 20860                           ; BSR set to: 1
 20861                           ;tcp.c: 1050: uint8_t i;
 20862                           ;tcp.c: 1052: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 20863  0189D4  0101               	movlb	1	; () banked
 20864  0189D6  5125               	movf	TCPIsPutReady@hTCP& (0+255),w,b
 20865  0189D8  B4D8               	btfsc	status,2,c
 20866  0189DA  D007               	goto	l12572
 20867                           
 20868                           ; BSR set to: 1
 20869                           ;tcp.c: 1053: {
 20870                           ;tcp.c: 1054: return 0;
 20871  0189DC  0E00               	movlw	0
 20872  0189DE  0101               	movlb	1	; () banked
 20873  0189E0  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 20874  0189E2  0E00               	movlw	0
 20875  0189E4  0101               	movlb	1	; () banked
 20876  0189E6  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 20877  0189E8  0012               	return	
 20878  0189EA                     l12572:
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;tcp.c: 1055: }
 20882                           ;tcp.c: 1057: SyncTCBStub(hTCP);
 20883  0189EA  0101               	movlb	1	; () banked
 20884  0189EC  5125               	movf	TCPIsPutReady@hTCP& (0+255),w,b
 20885  0189EE  EC3D  F0D0         	call	_SyncTCBStub
 20886                           
 20887                           ;tcp.c: 1059: i = MyTCBStub.smState;
 20888  0189F2  C1F6  F126         	movff	_MyTCBStub+22,TCPIsPutReady@i
 20889                           
 20890                           ;tcp.c: 1062: if(!( (i == (uint8_t)TCP_ESTABLISHED) || (i == (uint8_t)TCP_CLOSE_WAIT) ))
 20891  0189F6  0101               	movlb	1	; () banked
 20892  0189F8  5126               	movf	TCPIsPutReady@i& (0+255),w,b
 20893  0189FA  0A07               	xorlw	7
 20894  0189FC  B4D8               	btfsc	status,2,c
 20895  0189FE  D00C               	goto	l12584
 20896                           
 20897                           ; BSR set to: 1
 20898  018A00  0101               	movlb	1	; () banked
 20899  018A02  5126               	movf	TCPIsPutReady@i& (0+255),w,b
 20900  018A04  0A0B               	xorlw	11
 20901  018A06  B4D8               	btfsc	status,2,c
 20902  018A08  D007               	goto	l12584
 20903                           
 20904                           ; BSR set to: 1
 20905                           ;tcp.c: 1063: return 0;
 20906  018A0A  0E00               	movlw	0
 20907  018A0C  0101               	movlb	1	; () banked
 20908  018A0E  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 20909  018A10  0E00               	movlw	0
 20910  018A12  0101               	movlb	1	; () banked
 20911  018A14  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 20912  018A16  0012               	return	
 20913  018A18                     l12584:
 20914                           
 20915                           ; BSR set to: 1
 20916                           ;tcp.c: 1085: if(MyTCBStub.txHead >= MyTCBStub.txTail)
 20917  018A18  0101               	movlb	1	; () banked
 20918  018A1A  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 20919  018A1E  0101               	movlb	1	; () banked
 20920  018A20  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 20921  018A24  52E6               	movf	postinc1,f,c
 20922  018A26  52DE               	movf	postinc2,f,c
 20923  018A28  50DD               	movf	postdec2,w,c
 20924  018A2A  5CE5               	subwf	postdec1,w,c
 20925  018A2C  E102               	bnz	u13895
 20926  018A2E  50DF               	movf	indf2,w,c
 20927  018A30  5CE7               	subwf	indf1,w,c
 20928  018A32                     u13895:
 20929  018A32  A0D8               	btfss	status,0,c
 20930  018A34  D034               	goto	l12592
 20931                           
 20932                           ; BSR set to: 1
 20933                           ;tcp.c: 1086: return (MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart - 1) - (MyTCBStu
      +                          b.txHead - MyTCBStub.txTail);
 20934  018A36  0101               	movlb	1	; () banked
 20935  018A38  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 20936  018A3C  CFDE F123          	movff	postinc2,??_TCPIsPutReady
 20937  018A40  CFDD F124          	movff	postdec2,??_TCPIsPutReady+1
 20938  018A44  0101               	movlb	1	; () banked
 20939  018A46  1F23               	comf	??_TCPIsPutReady& (0+255),f,b
 20940  018A48  1F24               	comf	(??_TCPIsPutReady+1)& (0+255),f,b
 20941  018A4A  4B23               	infsnz	??_TCPIsPutReady& (0+255),f,b
 20942  018A4C  2B24               	incf	(??_TCPIsPutReady+1)& (0+255),f,b
 20943  018A4E  0101               	movlb	1	; () banked
 20944  018A50  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 20945  018A52  0101               	movlb	1	; () banked
 20946  018A54  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 20947  018A56  0101               	movlb	1	; () banked
 20948  018A58  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 20949  018A5A  0101               	movlb	1	; () banked
 20950  018A5C  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 20951  018A5E  0101               	movlb	1	; () banked
 20952  018A60  51E0               	movf	_MyTCBStub& (0+255),w,b
 20953  018A62  0101               	movlb	1	; () banked
 20954  018A64  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 20955  018A66  0101               	movlb	1	; () banked
 20956  018A68  51E1               	movf	(_MyTCBStub+1)& (0+255),w,b
 20957  018A6A  0101               	movlb	1	; () banked
 20958  018A6C  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 20959  018A6E  0101               	movlb	1	; () banked
 20960  018A70  1F23               	comf	??_TCPIsPutReady& (0+255),f,b
 20961  018A72  1F24               	comf	(??_TCPIsPutReady+1)& (0+255),f,b
 20962  018A74  4B23               	infsnz	??_TCPIsPutReady& (0+255),f,b
 20963  018A76  2B24               	incf	(??_TCPIsPutReady+1)& (0+255),f,b
 20964  018A78  0101               	movlb	1	; () banked
 20965  018A7A  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 20966  018A7C  0101               	movlb	1	; () banked
 20967  018A7E  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 20968  018A80  0101               	movlb	1	; () banked
 20969  018A82  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 20970  018A84  0101               	movlb	1	; () banked
 20971  018A86  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 20972  018A88  0EFF               	movlw	255
 20973  018A8A  0101               	movlb	1	; () banked
 20974  018A8C  2523               	addwf	??_TCPIsPutReady& (0+255),w,b
 20975  018A8E  0101               	movlb	1	; () banked
 20976  018A90  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 20977  018A92  0EFF               	movlw	255
 20978  018A94  0101               	movlb	1	; () banked
 20979  018A96  2124               	addwfc	(??_TCPIsPutReady+1)& (0+255),w,b
 20980  018A98  0101               	movlb	1	; () banked
 20981  018A9A  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 20982  018A9C  0012               	return	
 20983  018A9E                     l12592:
 20984                           
 20985                           ; BSR set to: 1
 20986                           ;tcp.c: 1087: else
 20987                           ;tcp.c: 1088: return MyTCBStub.txTail - MyTCBStub.txHead - 1;
 20988  018A9E  0101               	movlb	1	; () banked
 20989  018AA0  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 20990  018AA4  CFDE F123          	movff	postinc2,??_TCPIsPutReady
 20991  018AA8  CFDD F124          	movff	postdec2,??_TCPIsPutReady+1
 20992  018AAC  0101               	movlb	1	; () banked
 20993  018AAE  1F23               	comf	??_TCPIsPutReady& (0+255),f,b
 20994  018AB0  1F24               	comf	(??_TCPIsPutReady+1)& (0+255),f,b
 20995  018AB2  4B23               	infsnz	??_TCPIsPutReady& (0+255),f,b
 20996  018AB4  2B24               	incf	(??_TCPIsPutReady+1)& (0+255),f,b
 20997  018AB6  0101               	movlb	1	; () banked
 20998  018AB8  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 20999  018ABA  0101               	movlb	1	; () banked
 21000  018ABC  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 21001  018ABE  0101               	movlb	1	; () banked
 21002  018AC0  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 21003  018AC2  0101               	movlb	1	; () banked
 21004  018AC4  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 21005  018AC6  0EFF               	movlw	255
 21006  018AC8  0101               	movlb	1	; () banked
 21007  018ACA  2523               	addwf	??_TCPIsPutReady& (0+255),w,b
 21008  018ACC  0101               	movlb	1	; () banked
 21009  018ACE  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 21010  018AD0  0EFF               	movlw	255
 21011  018AD2  0101               	movlb	1	; () banked
 21012  018AD4  2124               	addwfc	(??_TCPIsPutReady+1)& (0+255),w,b
 21013  018AD6  0101               	movlb	1	; () banked
 21014  018AD8  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 21015  018ADA  0012               	return	
 21016  018ADC                     __end_of_TCPIsPutReady:
 21017                           	opt stack 0
 21018                           tblptru	equ	0xFF8
 21019                           tblptrh	equ	0xFF7
 21020                           tblptrl	equ	0xFF6
 21021                           tablat	equ	0xFF5
 21022                           prodh	equ	0xFF4
 21023                           prodl	equ	0xFF3
 21024                           intcon	equ	0xFF2
 21025                           postinc0	equ	0xFEE
 21026                           wreg	equ	0xFE8
 21027                           indf1	equ	0xFE7
 21028                           postinc1	equ	0xFE6
 21029                           postdec1	equ	0xFE5
 21030                           fsr1h	equ	0xFE2
 21031                           fsr1l	equ	0xFE1
 21032                           indf2	equ	0xFDF
 21033                           postinc2	equ	0xFDE
 21034                           postdec2	equ	0xFDD
 21035                           fsr2h	equ	0xFDA
 21036                           fsr2l	equ	0xFD9
 21037                           status	equ	0xFD8
 21038                           
 21039 ;; *************** function _TCPFlush *****************
 21040 ;; Defined at:
 21041 ;;		line 1006 in file "../tcpip/tcp.c"
 21042 ;; Parameters:    Size  Location     Type
 21043 ;;  hTCP            1    wreg     unsigned char 
 21044 ;; Auto vars:     Size  Location     Type
 21045 ;;  hTCP            1   86[BANK1 ] unsigned char 
 21046 ;; Return value:  Size  Location     Type
 21047 ;;		None               void
 21048 ;; Registers used:
 21049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21050 ;; Tracked objects:
 21051 ;;		On entry : 0/0
 21052 ;;		On exit  : 0/0
 21053 ;;		Unchanged: 0/0
 21054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21058 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21059 ;;Total ram usage:        1 bytes
 21060 ;; Hardware stack levels used:    1
 21061 ;; Hardware stack levels required when called:   15
 21062 ;; This function calls:
 21063 ;;		_SendTCP
 21064 ;;		_SyncTCB
 21065 ;;		_SyncTCBStub
 21066 ;; This function is called by:
 21067 ;;		_TCPPutArray
 21068 ;;		_TCPPut
 21069 ;;		_TCPPutROMArray
 21070 ;; This function uses a non-reentrant model
 21071 ;;
 21072                           
 21073                           	psect	text31
 21074  01B17A                     __ptext31:
 21075                           	opt stack 0
 21076  01B17A                     _TCPFlush:
 21077                           	opt stack 12
 21078                           
 21079                           ; BSR set to: 1
 21080                           ;incstack = 0
 21081                           ;TCPFlush@hTCP stored from wreg
 21082  01B17A  0101               	movlb	1	; () banked
 21083  01B17C  6F56               	movwf	TCPFlush@hTCP& (0+255),b
 21084                           
 21085                           ; BSR set to: 1
 21086                           ;tcp.c: 1008: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 21087  01B17E  0101               	movlb	1	; () banked
 21088  01B180  5156               	movf	TCPFlush@hTCP& (0+255),w,b
 21089  01B182  A4D8               	btfss	status,2,c
 21090  01B184  0012               	return	
 21091                           
 21092                           ; BSR set to: 1
 21093                           ;tcp.c: 1011: }
 21094                           ;tcp.c: 1013: SyncTCBStub(hTCP);
 21095                           
 21096                           ; BSR set to: 1
 21097                           
 21098                           ; BSR set to: 1
 21099                           ;tcp.c: 1009: {
 21100                           ;tcp.c: 1010: return;
 21101  01B186  0101               	movlb	1	; () banked
 21102  01B188  5156               	movf	TCPFlush@hTCP& (0+255),w,b
 21103  01B18A  EC3D  F0D0         	call	_SyncTCBStub
 21104                           
 21105                           ;tcp.c: 1014: SyncTCB();
 21106  01B18E  EC1D  F0CB         	call	_SyncTCB	;wreg free
 21107                           
 21108                           ;tcp.c: 1018: if(MyTCBStub.txHead != MyTCB.txUnackedTail)
 21109  01B192  0101               	movlb	1	; () banked
 21110  01B194  EE21  F0C5         	lfsr	2,_MyTCB+12
 21111  01B198  0101               	movlb	1	; () banked
 21112  01B19A  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 21113  01B19E  52E6               	movf	postinc1,f,c
 21114  01B1A0  52DE               	movf	postinc2,f,c
 21115  01B1A2  50DD               	movf	postdec2,w,c
 21116  01B1A4  18E5               	xorwf	postdec1,w,c
 21117  01B1A6  CFDF FFE8          	movff	indf2,wreg
 21118  01B1AA  B4D8               	btfsc	status,2,c
 21119  01B1AC  18E7               	xorwf	indf1,w,c
 21120  01B1AE  B4D8               	btfsc	status,2,c
 21121  01B1B0  0012               	return	
 21122                           
 21123                           ; BSR set to: 1
 21124                           ;tcp.c: 1019: {
 21125                           ;tcp.c: 1021: SendTCP((0x10), 0x01);
 21126  01B1B2  0E01               	movlw	1
 21127  01B1B4  0101               	movlb	1	; () banked
 21128  01B1B6  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 21129  01B1B8  0E10               	movlw	16
 21130  01B1BA  ECC1  F096         	call	_SendTCP
 21131  01B1BE  0012               	return	
 21132  01B1C0                     __end_of_TCPFlush:
 21133                           	opt stack 0
 21134                           tblptru	equ	0xFF8
 21135                           tblptrh	equ	0xFF7
 21136                           tblptrl	equ	0xFF6
 21137                           tablat	equ	0xFF5
 21138                           prodh	equ	0xFF4
 21139                           prodl	equ	0xFF3
 21140                           intcon	equ	0xFF2
 21141                           postinc0	equ	0xFEE
 21142                           wreg	equ	0xFE8
 21143                           indf1	equ	0xFE7
 21144                           postinc1	equ	0xFE6
 21145                           postdec1	equ	0xFE5
 21146                           fsr1h	equ	0xFE2
 21147                           fsr1l	equ	0xFE1
 21148                           indf2	equ	0xFDF
 21149                           postinc2	equ	0xFDE
 21150                           postdec2	equ	0xFDD
 21151                           fsr2h	equ	0xFDA
 21152                           fsr2l	equ	0xFD9
 21153                           status	equ	0xFD8
 21154                           
 21155 ;; *************** function _TCPOpen *****************
 21156 ;; Defined at:
 21157 ;;		line 553 in file "../tcpip/tcp.c"
 21158 ;; Parameters:    Size  Location     Type
 21159 ;;  dwRemoteHost    4   86[BANK1 ] unsigned long 
 21160 ;;  vRemoteHostT    1   90[BANK1 ] unsigned char 
 21161 ;;  wPort           2   91[BANK1 ] unsigned int 
 21162 ;;  vSocketPurpo    1   93[BANK1 ] unsigned char 
 21163 ;; Auto vars:     Size  Location     Type
 21164 ;;  hTCP            1   98[BANK1 ] unsigned char 
 21165 ;; Return value:  Size  Location     Type
 21166 ;;                  1    wreg      unsigned char 
 21167 ;; Registers used:
 21168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21169 ;; Tracked objects:
 21170 ;;		On entry : 0/0
 21171 ;;		On exit  : 0/0
 21172 ;;		Unchanged: 0/0
 21173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21174 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21175 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21176 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21177 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21178 ;;Total ram usage:       13 bytes
 21179 ;; Hardware stack levels used:    1
 21180 ;; Hardware stack levels required when called:   15
 21181 ;; This function calls:
 21182 ;;		_SendTCP
 21183 ;;		_SyncTCB
 21184 ;;		_SyncTCBStub
 21185 ;;		_TickGet
 21186 ;;		_memcpy
 21187 ;; This function is called by:
 21188 ;;		_TCPServer
 21189 ;; This function uses a non-reentrant model
 21190 ;;
 21191                           
 21192                           	psect	text32
 21193  015F2C                     __ptext32:
 21194                           	opt stack 0
 21195  015F2C                     _TCPOpen:
 21196                           	opt stack 13
 21197                           
 21198                           ;tcp.c: 555: TCP_SOCKET hTCP;
 21199                           ;tcp.c: 558: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitiali
      +                          zer[0])); hTCP++)
 21200                           
 21201                           ;incstack = 0
 21202  015F2C  0E00               	movlw	0
 21203  015F2E  0101               	movlb	1	; () banked
 21204  015F30  6F62               	movwf	TCPOpen@hTCP& (0+255),b
 21205  015F32  0101               	movlb	1	; () banked
 21206  015F34  5162               	movf	TCPOpen@hTCP& (0+255),w,b
 21207  015F36  A4D8               	btfss	status,2,c
 21208  015F38  D0F3               	goto	l14224
 21209                           
 21210                           ; BSR set to: 1
 21211                           ;tcp.c: 559: {
 21212                           ;tcp.c: 560: SyncTCBStub(hTCP);
 21213                           
 21214                           ; BSR set to: 1
 21215                           
 21216                           ; BSR set to: 1
 21217  015F3A  0101               	movlb	1	; () banked
 21218  015F3C  5162               	movf	TCPOpen@hTCP& (0+255),w,b
 21219  015F3E  EC3D  F0D0         	call	_SyncTCBStub
 21220                           
 21221                           ;tcp.c: 563: if(MyTCBStub.smState != TCP_CLOSED)
 21222  015F42  0101               	movlb	1	; () banked
 21223  015F44  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 21224  015F46  0A0D               	xorlw	13
 21225  015F48  A4D8               	btfss	status,2,c
 21226  015F4A  D0E7               	goto	l14220
 21227                           
 21228                           ; BSR set to: 1
 21229                           ;tcp.c: 566: SyncTCB();
 21230                           
 21231                           ; BSR set to: 1
 21232                           
 21233                           ; BSR set to: 1
 21234                           ;tcp.c: 564: continue;
 21235  015F4C  EC1D  F0CB         	call	_SyncTCB	;wreg free
 21236                           
 21237                           ;tcp.c: 569: if(MyTCB.vSocketPurpose != vSocketPurpose)
 21238  015F50  0101               	movlb	1	; () banked
 21239  015F52  51DF               	movf	(_MyTCB+38)& (0+255),w,b
 21240  015F54  0101               	movlb	1	; () banked
 21241  015F56  195D               	xorwf	TCPOpen@vSocketPurpose& (0+255),w,b
 21242  015F58  A4D8               	btfss	status,2,c
 21243  015F5A  D0DF               	goto	l14220
 21244                           
 21245                           ; BSR set to: 1
 21246                           ;tcp.c: 574: MyTCB.wRemoteMSS = 536;
 21247                           
 21248                           ; BSR set to: 1
 21249                           
 21250                           ; BSR set to: 1
 21251                           ;tcp.c: 570: continue;
 21252  015F5C  0E02               	movlw	2
 21253  015F5E  0101               	movlb	1	; () banked
 21254  015F60  6FDD               	movwf	(_MyTCB+36)& (0+255),b
 21255  015F62  0E18               	movlw	24
 21256  015F64  0101               	movlb	1	; () banked
 21257  015F66  6FDC               	movwf	(_MyTCB+35)& (0+255),b
 21258                           
 21259                           ; BSR set to: 1
 21260                           ;tcp.c: 577: if(vRemoteHostType == 0u)
 21261  015F68  0101               	movlb	1	; () banked
 21262  015F6A  675A               	tstfsz	TCPOpen@vRemoteHostType& (0+255),b
 21263  015F6C  D00E               	goto	l14178
 21264                           
 21265                           ; BSR set to: 1
 21266                           ;tcp.c: 578: {
 21267                           ;tcp.c: 579: MyTCB.localPort.Val = wPort;
 21268  015F6E  C15B  F1C9         	movff	TCPOpen@wPort,_MyTCB+16
 21269  015F72  C15C  F1CA         	movff	TCPOpen@wPort+1,_MyTCB+17
 21270                           
 21271                           ;tcp.c: 580: MyTCBStub.Flags.bServer = 1;
 21272  015F76  0101               	movlb	1	; () banked
 21273  015F78  87F7               	bsf	(_MyTCBStub+23)& (0+255),3,b
 21274                           
 21275                           ; BSR set to: 1
 21276                           ;tcp.c: 581: MyTCBStub.smState = TCP_LISTEN;
 21277  015F7A  0E04               	movlw	4
 21278  015F7C  0101               	movlb	1	; () banked
 21279  015F7E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 21280                           
 21281                           ; BSR set to: 1
 21282                           ;tcp.c: 582: MyTCBStub.remoteHash.Val = wPort;
 21283  015F80  C15B  F1F9         	movff	TCPOpen@wPort,_MyTCBStub+25
 21284  015F84  C15C  F1FA         	movff	TCPOpen@wPort+1,_MyTCBStub+26
 21285                           
 21286                           ;tcp.c: 586: }
 21287  015F88  D0C5               	goto	l14216
 21288  015F8A                     l14178:
 21289                           
 21290                           ; BSR set to: 1
 21291                           ;tcp.c: 588: else
 21292                           ;tcp.c: 589: {
 21293                           ;tcp.c: 591: {
 21294                           ;tcp.c: 594: if(NextPort < (1024u) || NextPort > (5000u))
 21295  015F8A  0E00               	movlw	0
 21296  015F8C  0100               	movlb	0	; () banked
 21297  015F8E  5DE5               	subwf	_NextPort& (0+255),w,b
 21298  015F90  0E04               	movlw	4
 21299  015F92  0100               	movlb	0	; () banked
 21300  015F94  59E6               	subwfb	(_NextPort+1)& (0+255),w,b
 21301  015F96  A0D8               	btfss	status,0,c
 21302  015F98  D008               	goto	l14182
 21303                           
 21304                           ; BSR set to: 0
 21305  015F9A  0E89               	movlw	137
 21306  015F9C  0100               	movlb	0	; () banked
 21307  015F9E  5DE5               	subwf	_NextPort& (0+255),w,b
 21308  015FA0  0E13               	movlw	19
 21309  015FA2  0100               	movlb	0	; () banked
 21310  015FA4  59E6               	subwfb	(_NextPort+1)& (0+255),w,b
 21311  015FA6  A0D8               	btfss	status,0,c
 21312  015FA8  D006               	goto	l14184
 21313  015FAA                     l14182:
 21314                           
 21315                           ; BSR set to: 0
 21316                           ;tcp.c: 595: NextPort = (1024u);
 21317  015FAA  0E04               	movlw	4
 21318  015FAC  0100               	movlb	0	; () banked
 21319  015FAE  6FE6               	movwf	(_NextPort+1)& (0+255),b
 21320  015FB0  0E00               	movlw	0
 21321  015FB2  0100               	movlb	0	; () banked
 21322  015FB4  6FE5               	movwf	_NextPort& (0+255),b
 21323  015FB6                     l14184:
 21324                           
 21325                           ; BSR set to: 0
 21326                           ;tcp.c: 598: MyTCB.localPort.Val = NextPort++;
 21327  015FB6  C0E5  F1C9         	movff	_NextPort,_MyTCB+16
 21328  015FBA  C0E6  F1CA         	movff	_NextPort+1,_MyTCB+17
 21329                           
 21330                           ; BSR set to: 0
 21331  015FBE  0100               	movlb	0	; () banked
 21332  015FC0  4BE5               	infsnz	_NextPort& (0+255),f,b
 21333  015FC2  2BE6               	incf	(_NextPort+1)& (0+255),f,b
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;tcp.c: 599: MyTCB.remotePort.Val = wPort;
 21337  015FC4  C15B  F1C7         	movff	TCPOpen@wPort,_MyTCB+14
 21338  015FC8  C15C  F1C8         	movff	TCPOpen@wPort+1,_MyTCB+15
 21339                           
 21340                           ; BSR set to: 0
 21341                           ;tcp.c: 602: MyTCBStub.eventTime = TickGet();
 21342  015FCC  EC5D  F0DB         	call	_TickGet	;wreg free
 21343  015FD0  C100  F1EE         	movff	?_TickGet,_MyTCBStub+14
 21344  015FD4  C101  F1EF         	movff	?_TickGet+1,_MyTCBStub+15
 21345  015FD8  C102  F1F0         	movff	?_TickGet+2,_MyTCBStub+16
 21346  015FDC  C103  F1F1         	movff	?_TickGet+3,_MyTCBStub+17
 21347                           
 21348                           ;tcp.c: 603: MyTCBStub.Flags.bTimerEnabled = 1;
 21349  015FE0  0101               	movlb	1	; () banked
 21350  015FE2  89F7               	bsf	(_MyTCBStub+23)& (0+255),4,b
 21351                           
 21352                           ;tcp.c: 605: switch(vRemoteHostType)
 21353  015FE4  D08F               	goto	l14214
 21354  015FE6                     l14194:
 21355                           
 21356                           ; BSR set to: 1
 21357                           ;tcp.c: 620: MyTCBStub.remoteHash.Val = (((TCPIP_UINT32_VAL*)&dwRemoteHost)->w[1]+((TCPI
      +                          P_UINT32_VAL*)&dwRemoteHost)->w[0] + wPort) ^ MyTCB.localPort.Val;
 21358  015FE6  0101               	movlb	1	; () banked
 21359  015FE8  EE21  F058         	lfsr	2,TCPOpen@dwRemoteHost+2
 21360  015FEC  CFDE F15E          	movff	postinc2,??_TCPOpen
 21361  015FF0  CFDD F15F          	movff	postdec2,??_TCPOpen+1
 21362  015FF4  0101               	movlb	1	; () banked
 21363  015FF6  5156               	movf	TCPOpen@dwRemoteHost& (0+255),w,b
 21364  015FF8  0101               	movlb	1	; () banked
 21365  015FFA  275E               	addwf	??_TCPOpen& (0+255),f,b
 21366  015FFC  0101               	movlb	1	; () banked
 21367  015FFE  5157               	movf	(TCPOpen@dwRemoteHost+1)& (0+255),w,b
 21368  016000  0101               	movlb	1	; () banked
 21369  016002  235F               	addwfc	(??_TCPOpen+1)& (0+255),f,b
 21370  016004  0101               	movlb	1	; () banked
 21371  016006  515B               	movf	TCPOpen@wPort& (0+255),w,b
 21372  016008  0101               	movlb	1	; () banked
 21373  01600A  275E               	addwf	??_TCPOpen& (0+255),f,b
 21374  01600C  0101               	movlb	1	; () banked
 21375  01600E  515C               	movf	(TCPOpen@wPort+1)& (0+255),w,b
 21376  016010  0101               	movlb	1	; () banked
 21377  016012  235F               	addwfc	(??_TCPOpen+1)& (0+255),f,b
 21378  016014  0101               	movlb	1	; () banked
 21379  016016  51C9               	movf	(_MyTCB+16)& (0+255),w,b
 21380  016018  0101               	movlb	1	; () banked
 21381  01601A  195E               	xorwf	??_TCPOpen& (0+255),w,b
 21382  01601C  0101               	movlb	1	; () banked
 21383  01601E  6FF9               	movwf	(_MyTCBStub+25)& (0+255),b
 21384  016020  0101               	movlb	1	; () banked
 21385  016022  51CA               	movf	(_MyTCB+17)& (0+255),w,b
 21386  016024  0101               	movlb	1	; () banked
 21387  016026  195F               	xorwf	(??_TCPOpen+1)& (0+255),w,b
 21388  016028  0101               	movlb	1	; () banked
 21389  01602A  6FFA               	movwf	(_MyTCBStub+26)& (0+255),b
 21390                           
 21391                           ; BSR set to: 1
 21392                           ;tcp.c: 621: MyTCB.remote.niRemoteMACIP.IPAddr.Val = dwRemoteHost;
 21393  01602C  C156  F1CF         	movff	TCPOpen@dwRemoteHost,_MyTCB+22
 21394  016030  C157  F1D0         	movff	TCPOpen@dwRemoteHost+1,_MyTCB+23
 21395  016034  C158  F1D1         	movff	TCPOpen@dwRemoteHost+2,_MyTCB+24
 21396  016038  C159  F1D2         	movff	TCPOpen@dwRemoteHost+3,_MyTCB+25
 21397                           
 21398                           ; BSR set to: 1
 21399                           ;tcp.c: 622: MyTCB.retryCount = 0;
 21400  01603C  0E00               	movlw	0
 21401  01603E  0101               	movlb	1	; () banked
 21402  016040  6FDE               	movwf	(_MyTCB+37)& (0+255),b
 21403                           
 21404                           ; BSR set to: 1
 21405                           ;tcp.c: 623: MyTCB.retryInterval = ((((((40000000ul)/4)+128ull)/256ull))/4)/256;
 21406  016042  0E26               	movlw	38
 21407  016044  0101               	movlb	1	; () banked
 21408  016046  6FB9               	movwf	_MyTCB& (0+255),b
 21409  016048  0E00               	movlw	0
 21410  01604A  0101               	movlb	1	; () banked
 21411  01604C  6FBA               	movwf	(_MyTCB+1)& (0+255),b
 21412  01604E  0E00               	movlw	0
 21413  016050  0101               	movlb	1	; () banked
 21414  016052  6FBB               	movwf	(_MyTCB+2)& (0+255),b
 21415  016054  0E00               	movlw	0
 21416  016056  0101               	movlb	1	; () banked
 21417  016058  6FBC               	movwf	(_MyTCB+3)& (0+255),b
 21418                           
 21419                           ; BSR set to: 1
 21420                           ;tcp.c: 624: MyTCBStub.smState = TCP_GATEWAY_SEND_ARP;
 21421  01605A  0E02               	movlw	2
 21422  01605C  0101               	movlb	1	; () banked
 21423  01605E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 21424                           
 21425                           ;tcp.c: 625: break;
 21426  016060  D059               	goto	l14216
 21427  016062                     l14204:
 21428                           
 21429                           ; BSR set to: 1
 21430                           ;tcp.c: 628: MyTCBStub.remoteHash.Val = (((NODE_INFO*)(unsigned short)dwRemoteHost)->IPA
      +                          ddr.w[1]+((NODE_INFO*)(unsigned short)dwRemoteHost)->IPAddr.w[0] + wPort) ^ MyTCB.localP
      +                          ort.Val;
 21431  016062  C156  FFD9         	movff	TCPOpen@dwRemoteHost,fsr2l
 21432  016066  C157  FFDA         	movff	TCPOpen@dwRemoteHost+1,fsr2h
 21433  01606A  CFDE F15E          	movff	postinc2,??_TCPOpen
 21434  01606E  CFDD F15F          	movff	postdec2,??_TCPOpen+1
 21435  016072  0101               	movlb	1	; () banked
 21436  016074  EE20 F002          	lfsr	2,2
 21437  016078  0101               	movlb	1	; () banked
 21438  01607A  5156               	movf	TCPOpen@dwRemoteHost& (0+255),w,b
 21439  01607C  26D9               	addwf	fsr2l,f,c
 21440  01607E  0101               	movlb	1	; () banked
 21441  016080  5157               	movf	(TCPOpen@dwRemoteHost+1)& (0+255),w,b
 21442  016082  22DA               	addwfc	fsr2h,f,c
 21443  016084  CFDE F160          	movff	postinc2,??_TCPOpen+2
 21444  016088  CFDD F161          	movff	postdec2,??_TCPOpen+3
 21445  01608C  0101               	movlb	1	; () banked
 21446  01608E  515E               	movf	??_TCPOpen& (0+255),w,b
 21447  016090  0101               	movlb	1	; () banked
 21448  016092  2760               	addwf	(??_TCPOpen+2)& (0+255),f,b
 21449  016094  0101               	movlb	1	; () banked
 21450  016096  515F               	movf	(??_TCPOpen+1)& (0+255),w,b
 21451  016098  0101               	movlb	1	; () banked
 21452  01609A  2361               	addwfc	(??_TCPOpen+3)& (0+255),f,b
 21453  01609C  0101               	movlb	1	; () banked
 21454  01609E  515B               	movf	TCPOpen@wPort& (0+255),w,b
 21455  0160A0  0101               	movlb	1	; () banked
 21456  0160A2  2760               	addwf	(??_TCPOpen+2)& (0+255),f,b
 21457  0160A4  0101               	movlb	1	; () banked
 21458  0160A6  515C               	movf	(TCPOpen@wPort+1)& (0+255),w,b
 21459  0160A8  0101               	movlb	1	; () banked
 21460  0160AA  2361               	addwfc	(??_TCPOpen+3)& (0+255),f,b
 21461  0160AC  0101               	movlb	1	; () banked
 21462  0160AE  51C9               	movf	(_MyTCB+16)& (0+255),w,b
 21463  0160B0  0101               	movlb	1	; () banked
 21464  0160B2  1960               	xorwf	(??_TCPOpen+2)& (0+255),w,b
 21465  0160B4  0101               	movlb	1	; () banked
 21466  0160B6  6FF9               	movwf	(_MyTCBStub+25)& (0+255),b
 21467  0160B8  0101               	movlb	1	; () banked
 21468  0160BA  51CA               	movf	(_MyTCB+17)& (0+255),w,b
 21469  0160BC  0101               	movlb	1	; () banked
 21470  0160BE  1961               	xorwf	(??_TCPOpen+3)& (0+255),w,b
 21471  0160C0  0101               	movlb	1	; () banked
 21472  0160C2  6FFA               	movwf	(_MyTCBStub+26)& (0+255),b
 21473                           
 21474                           ; BSR set to: 1
 21475                           ;tcp.c: 629: memcpy((void*)(uint8_t*)&MyTCB.remote, (void*)(uint8_t*)(unsigned short)dwR
      +                          emoteHost, sizeof(NODE_INFO));
 21476  0160C4  0101               	movlb	1	; () banked
 21477  0160C6  0E01               	movlw	high (_MyTCB+22)
 21478  0160C8  0101               	movlb	1	; () banked
 21479  0160CA  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 21480  0160CC  0101               	movlb	1	; () banked
 21481  0160CE  0ECF               	movlw	low (_MyTCB+22)
 21482  0160D0  0101               	movlb	1	; () banked
 21483  0160D2  6F14               	movwf	memcpy@d1& (0+255),b
 21484  0160D4  0101               	movlb	1	; () banked
 21485  0160D6  C157  F117         	movff	TCPOpen@dwRemoteHost+1,memcpy@s1+1
 21486  0160DA  0101               	movlb	1	; () banked
 21487  0160DC  C156  F116         	movff	TCPOpen@dwRemoteHost,memcpy@s1
 21488  0160E0  0E00               	movlw	0
 21489  0160E2  0101               	movlb	1	; () banked
 21490  0160E4  6F19               	movwf	(memcpy@n+1)& (0+255),b
 21491  0160E6  0E0A               	movlw	10
 21492  0160E8  0101               	movlb	1	; () banked
 21493  0160EA  6F18               	movwf	memcpy@n& (0+255),b
 21494  0160EC  ECDC  F0D5         	call	_memcpy	;wreg free
 21495                           
 21496                           ;tcp.c: 630: MyTCBStub.smState = TCP_SYN_SENT;
 21497  0160F0  0E05               	movlw	5
 21498  0160F2  0101               	movlb	1	; () banked
 21499  0160F4  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 21500                           
 21501                           ; BSR set to: 1
 21502                           ;tcp.c: 631: SendTCP((0x02), 0x01);
 21503  0160F6  0E01               	movlw	1
 21504  0160F8  0101               	movlb	1	; () banked
 21505  0160FA  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 21506  0160FC  0E02               	movlw	2
 21507  0160FE  ECC1  F096         	call	_SendTCP
 21508                           
 21509                           ;tcp.c: 632: break;
 21510  016102  D008               	goto	l14216
 21511  016104                     l14214:
 21512  016104  0101               	movlb	1	; () banked
 21513  016106  515A               	movf	TCPOpen@vRemoteHostType& (0+255),w,b
 21514                           
 21515                           ; Switch size 1, requested type "space"
 21516                           ; Number of cases is 2, Range of values is 3 to 4
 21517                           ; switch strategies available:
 21518                           ; Name         Instructions Cycles
 21519                           ; simple_byte            7     4 (average)
 21520                           ;	Chosen strategy is simple_byte
 21521  016108  0A03               	xorlw	3	; case 3
 21522  01610A  B4D8               	btfsc	status,2,c
 21523  01610C  D76C               	goto	l14194
 21524  01610E  0A07               	xorlw	7	; case 4
 21525  016110  B4D8               	btfsc	status,2,c
 21526  016112  D7A7               	goto	l14204
 21527  016114                     l14216:
 21528                           
 21529                           ;tcp.c: 634: }
 21530                           ;tcp.c: 640: }
 21531                           ;tcp.c: 642: return hTCP;
 21532  016114  0101               	movlb	1	; () banked
 21533  016116  5162               	movf	TCPOpen@hTCP& (0+255),w,b
 21534  016118  0012               	return	
 21535  01611A                     l14220:
 21536                           
 21537                           ; BSR set to: 1
 21538  01611A  0101               	movlb	1	; () banked
 21539  01611C  2B62               	incf	TCPOpen@hTCP& (0+255),f,b
 21540  01611E  D709               	goto	L22
 21541  016120                     l14224:
 21542                           
 21543                           ; BSR set to: 1
 21544                           ;tcp.c: 643: }
 21545                           ;tcp.c: 646: return (0xFE);
 21546  016120  0EFE               	movlw	254
 21547  016122  0012               	return	
 21548  016124                     __end_of_TCPOpen:
 21549                           	opt stack 0
 21550                           tblptru	equ	0xFF8
 21551                           tblptrh	equ	0xFF7
 21552                           tblptrl	equ	0xFF6
 21553                           tablat	equ	0xFF5
 21554                           prodh	equ	0xFF4
 21555                           prodl	equ	0xFF3
 21556                           intcon	equ	0xFF2
 21557                           postinc0	equ	0xFEE
 21558                           wreg	equ	0xFE8
 21559                           indf1	equ	0xFE7
 21560                           postinc1	equ	0xFE6
 21561                           postdec1	equ	0xFE5
 21562                           fsr1h	equ	0xFE2
 21563                           fsr1l	equ	0xFE1
 21564                           indf2	equ	0xFDF
 21565                           postinc2	equ	0xFDE
 21566                           postdec2	equ	0xFDD
 21567                           fsr2h	equ	0xFDA
 21568                           fsr2l	equ	0xFD9
 21569                           status	equ	0xFD8
 21570                           
 21571 ;; *************** function _TCPIsConnected *****************
 21572 ;; Defined at:
 21573 ;;		line 733 in file "../tcpip/tcp.c"
 21574 ;; Parameters:    Size  Location     Type
 21575 ;;  hTCP            1    wreg     unsigned char 
 21576 ;; Auto vars:     Size  Location     Type
 21577 ;;  hTCP            1   33[BANK1 ] unsigned char 
 21578 ;; Return value:  Size  Location     Type
 21579 ;;                  1    wreg      unsigned char 
 21580 ;; Registers used:
 21581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21582 ;; Tracked objects:
 21583 ;;		On entry : 0/0
 21584 ;;		On exit  : 0/0
 21585 ;;		Unchanged: 0/0
 21586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21588 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21590 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21591 ;;Total ram usage:        1 bytes
 21592 ;; Hardware stack levels used:    1
 21593 ;; Hardware stack levels required when called:   12
 21594 ;; This function calls:
 21595 ;;		_SyncTCBStub
 21596 ;; This function is called by:
 21597 ;;		_TCPServer
 21598 ;; This function uses a non-reentrant model
 21599 ;;
 21600                           
 21601                           	psect	text33
 21602  01B640                     __ptext33:
 21603                           	opt stack 0
 21604  01B640                     _TCPIsConnected:
 21605                           	opt stack 16
 21606                           
 21607                           ; BSR set to: 1
 21608                           ;incstack = 0
 21609                           ;TCPIsConnected@hTCP stored from wreg
 21610  01B640  0101               	movlb	1	; () banked
 21611  01B642  6F21               	movwf	TCPIsConnected@hTCP& (0+255),b
 21612                           
 21613                           ; BSR set to: 1
 21614                           ;tcp.c: 735: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 21615  01B644  0101               	movlb	1	; () banked
 21616  01B646  5121               	movf	TCPIsConnected@hTCP& (0+255),w,b
 21617  01B648  B4D8               	btfsc	status,2,c
 21618  01B64A  D002               	goto	l14234
 21619                           
 21620                           ; BSR set to: 1
 21621                           ;tcp.c: 736: {
 21622                           ;tcp.c: 737: return 0;
 21623  01B64C  0E00               	movlw	0
 21624  01B64E  0012               	return	
 21625  01B650                     l14234:
 21626                           
 21627                           ; BSR set to: 1
 21628                           ;tcp.c: 738: }
 21629                           ;tcp.c: 740: SyncTCBStub(hTCP);
 21630  01B650  0101               	movlb	1	; () banked
 21631  01B652  5121               	movf	TCPIsConnected@hTCP& (0+255),w,b
 21632  01B654  EC3D  F0D0         	call	_SyncTCBStub
 21633                           
 21634                           ;tcp.c: 741: return (MyTCBStub.smState == TCP_ESTABLISHED);
 21635  01B658  0101               	movlb	1	; () banked
 21636  01B65A  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 21637  01B65C  0A07               	xorlw	7
 21638  01B65E  A4D8               	btfss	status,2,c
 21639  01B660  D002               	goto	u16590
 21640  01B662  0E01               	movlw	1
 21641  01B664  0012               	return	
 21642  01B666                     u16590:
 21643  01B666  0E00               	movlw	0
 21644  01B668  0012               	return	
 21645  01B66A                     __end_of_TCPIsConnected:
 21646                           	opt stack 0
 21647                           tblptru	equ	0xFF8
 21648                           tblptrh	equ	0xFF7
 21649                           tblptrl	equ	0xFF6
 21650                           tablat	equ	0xFF5
 21651                           prodh	equ	0xFF4
 21652                           prodl	equ	0xFF3
 21653                           intcon	equ	0xFF2
 21654                           postinc0	equ	0xFEE
 21655                           wreg	equ	0xFE8
 21656                           indf1	equ	0xFE7
 21657                           postinc1	equ	0xFE6
 21658                           postdec1	equ	0xFE5
 21659                           fsr1h	equ	0xFE2
 21660                           fsr1l	equ	0xFE1
 21661                           indf2	equ	0xFDF
 21662                           postinc2	equ	0xFDE
 21663                           postdec2	equ	0xFDD
 21664                           fsr2h	equ	0xFDA
 21665                           fsr2l	equ	0xFD9
 21666                           status	equ	0xFD8
 21667                           
 21668 ;; *************** function _TCPGetArray *****************
 21669 ;; Defined at:
 21670 ;;		line 1661 in file "../tcpip/tcp.c"
 21671 ;; Parameters:    Size  Location     Type
 21672 ;;  hTCP            1    wreg     unsigned char 
 21673 ;;  buffer          2   38[BANK1 ] PTR unsigned char 
 21674 ;;		 -> TCPServer@cmdBytes(18), 
 21675 ;;  len             2   40[BANK1 ] unsigned int 
 21676 ;; Auto vars:     Size  Location     Type
 21677 ;;  hTCP            1   46[BANK1 ] unsigned char 
 21678 ;;  RightLen        2   49[BANK1 ] unsigned int 
 21679 ;;  wGetReadyCou    2   47[BANK1 ] unsigned int 
 21680 ;; Return value:  Size  Location     Type
 21681 ;;                  2   38[BANK1 ] unsigned int 
 21682 ;; Registers used:
 21683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21684 ;; Tracked objects:
 21685 ;;		On entry : 0/0
 21686 ;;		On exit  : 0/0
 21687 ;;		Unchanged: 0/0
 21688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21689 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21690 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21691 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21692 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21693 ;;Total ram usage:       13 bytes
 21694 ;; Hardware stack levels used:    1
 21695 ;; Hardware stack levels required when called:   13
 21696 ;; This function calls:
 21697 ;;		_SyncTCBStub
 21698 ;;		_TCPIsGetReady
 21699 ;;		_TCPRAMCopy
 21700 ;;		_TickGetDiv256
 21701 ;; This function is called by:
 21702 ;;		_TCPServer
 21703 ;; This function uses a non-reentrant model
 21704 ;;
 21705                           
 21706                           	psect	text34
 21707  0166D8                     __ptext34:
 21708                           	opt stack 0
 21709  0166D8                     _TCPGetArray:
 21710                           	opt stack 15
 21711                           
 21712                           ; BSR set to: 1
 21713                           ;incstack = 0
 21714                           ;TCPGetArray@hTCP stored from wreg
 21715  0166D8  0101               	movlb	1	; () banked
 21716  0166DA  6F2E               	movwf	TCPGetArray@hTCP& (0+255),b
 21717                           
 21718                           ; BSR set to: 1
 21719                           ;tcp.c: 1663: uint16_t wGetReadyCount;
 21720                           ;tcp.c: 1664: uint16_t RightLen = 0;
 21721  0166DC  0E00               	movlw	0
 21722  0166DE  0101               	movlb	1	; () banked
 21723  0166E0  6F32               	movwf	(TCPGetArray@RightLen+1)& (0+255),b
 21724  0166E2  0E00               	movlw	0
 21725  0166E4  0101               	movlb	1	; () banked
 21726  0166E6  6F31               	movwf	TCPGetArray@RightLen& (0+255),b
 21727                           
 21728                           ; BSR set to: 1
 21729                           ;tcp.c: 1667: wGetReadyCount = TCPIsGetReady(hTCP);
 21730  0166E8  0101               	movlb	1	; () banked
 21731  0166EA  512E               	movf	TCPGetArray@hTCP& (0+255),w,b
 21732  0166EC  EC30  F0CD         	call	_TCPIsGetReady
 21733  0166F0  0101               	movlb	1	; () banked
 21734  0166F2  C121  F12F         	movff	?_TCPIsGetReady,TCPGetArray@wGetReadyCount
 21735  0166F6  0101               	movlb	1	; () banked
 21736  0166F8  C122  F130         	movff	?_TCPIsGetReady+1,TCPGetArray@wGetReadyCount+1
 21737                           
 21738                           ; BSR set to: 1
 21739                           ;tcp.c: 1668: if(wGetReadyCount == 0u)
 21740  0166FC  0101               	movlb	1	; () banked
 21741  0166FE  5130               	movf	(TCPGetArray@wGetReadyCount+1)& (0+255),w,b
 21742  016700  112F               	iorwf	TCPGetArray@wGetReadyCount& (0+255),w,b
 21743  016702  B4D8               	btfsc	status,2,c
 21744  016704  0012               	return	
 21745                           
 21746                           ; BSR set to: 1
 21747                           ;tcp.c: 1671: SyncTCBStub(hTCP);
 21748                           
 21749                           ; BSR set to: 1
 21750                           
 21751                           ; BSR set to: 1
 21752                           ;tcp.c: 1669: return 0x0000u;
 21753                           ;	Return value of _TCPGetArray is never used
 21754  016706  0101               	movlb	1	; () banked
 21755  016708  512E               	movf	TCPGetArray@hTCP& (0+255),w,b
 21756  01670A  EC3D  F0D0         	call	_SyncTCBStub
 21757                           
 21758                           ;tcp.c: 1674: if(len > wGetReadyCount)
 21759  01670E  0101               	movlb	1	; () banked
 21760  016710  5128               	movf	TCPGetArray@len& (0+255),w,b
 21761  016712  0101               	movlb	1	; () banked
 21762  016714  5D2F               	subwf	TCPGetArray@wGetReadyCount& (0+255),w,b
 21763  016716  0101               	movlb	1	; () banked
 21764  016718  5129               	movf	(TCPGetArray@len+1)& (0+255),w,b
 21765  01671A  0101               	movlb	1	; () banked
 21766  01671C  5930               	subwfb	(TCPGetArray@wGetReadyCount+1)& (0+255),w,b
 21767  01671E  B0D8               	btfsc	status,0,c
 21768  016720  D004               	goto	l14322
 21769                           
 21770                           ; BSR set to: 1
 21771                           ;tcp.c: 1675: len = wGetReadyCount;
 21772  016722  C12F  F128         	movff	TCPGetArray@wGetReadyCount,TCPGetArray@len
 21773  016726  C130  F129         	movff	TCPGetArray@wGetReadyCount+1,TCPGetArray@len+1
 21774  01672A                     l14322:
 21775                           
 21776                           ; BSR set to: 1
 21777                           ;tcp.c: 1678: if(MyTCBStub.rxTail + len > MyTCBStub.bufferEnd)
 21778  01672A  0101               	movlb	1	; () banked
 21779  01672C  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 21780  016730  CFDE F12A          	movff	postinc2,??_TCPGetArray
 21781  016734  CFDD F12B          	movff	postdec2,??_TCPGetArray+1
 21782  016738  0101               	movlb	1	; () banked
 21783  01673A  5128               	movf	TCPGetArray@len& (0+255),w,b
 21784  01673C  0101               	movlb	1	; () banked
 21785  01673E  272A               	addwf	??_TCPGetArray& (0+255),f,b
 21786  016740  0101               	movlb	1	; () banked
 21787  016742  5129               	movf	(TCPGetArray@len+1)& (0+255),w,b
 21788  016744  0101               	movlb	1	; () banked
 21789  016746  232B               	addwfc	(??_TCPGetArray+1)& (0+255),f,b
 21790  016748  0101               	movlb	1	; () banked
 21791  01674A  512A               	movf	??_TCPGetArray& (0+255),w,b
 21792  01674C  0101               	movlb	1	; () banked
 21793  01674E  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 21794  016750  0101               	movlb	1	; () banked
 21795  016752  512B               	movf	(??_TCPGetArray+1)& (0+255),w,b
 21796  016754  0101               	movlb	1	; () banked
 21797  016756  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 21798  016758  B0D8               	btfsc	status,0,c
 21799  01675A  D04A               	goto	l14336
 21800                           
 21801                           ; BSR set to: 1
 21802                           ;tcp.c: 1679: {
 21803                           ;tcp.c: 1680: RightLen = MyTCBStub.bufferEnd - MyTCBStub.rxTail + 1;
 21804  01675C  0101               	movlb	1	; () banked
 21805  01675E  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 21806  016762  CFDE F12A          	movff	postinc2,??_TCPGetArray
 21807  016766  CFDD F12B          	movff	postdec2,??_TCPGetArray+1
 21808  01676A  0101               	movlb	1	; () banked
 21809  01676C  1F2A               	comf	??_TCPGetArray& (0+255),f,b
 21810  01676E  1F2B               	comf	(??_TCPGetArray+1)& (0+255),f,b
 21811  016770  4B2A               	infsnz	??_TCPGetArray& (0+255),f,b
 21812  016772  2B2B               	incf	(??_TCPGetArray+1)& (0+255),f,b
 21813  016774  0101               	movlb	1	; () banked
 21814  016776  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 21815  016778  0101               	movlb	1	; () banked
 21816  01677A  272A               	addwf	??_TCPGetArray& (0+255),f,b
 21817  01677C  0101               	movlb	1	; () banked
 21818  01677E  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 21819  016780  0101               	movlb	1	; () banked
 21820  016782  232B               	addwfc	(??_TCPGetArray+1)& (0+255),f,b
 21821  016784  0E01               	movlw	1
 21822  016786  0101               	movlb	1	; () banked
 21823  016788  252A               	addwf	??_TCPGetArray& (0+255),w,b
 21824  01678A  0101               	movlb	1	; () banked
 21825  01678C  6F31               	movwf	TCPGetArray@RightLen& (0+255),b
 21826  01678E  0E00               	movlw	0
 21827  016790  0101               	movlb	1	; () banked
 21828  016792  212B               	addwfc	(??_TCPGetArray+1)& (0+255),w,b
 21829  016794  0101               	movlb	1	; () banked
 21830  016796  6F32               	movwf	(TCPGetArray@RightLen+1)& (0+255),b
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;tcp.c: 1681: if(buffer)
 21834  016798  0101               	movlb	1	; () banked
 21835  01679A  5127               	movf	(TCPGetArray@buffer+1)& (0+255),w,b
 21836  01679C  1126               	iorwf	TCPGetArray@buffer& (0+255),w,b
 21837  01679E  B4D8               	btfsc	status,2,c
 21838  0167A0  D01B               	goto	l14332
 21839                           
 21840                           ; BSR set to: 1
 21841                           ;tcp.c: 1682: {
 21842                           ;tcp.c: 1683: TCPRAMCopy((unsigned short)buffer, 1u, MyTCBStub.rxTail, MyTCBStub.vMemory
      +                          Medium, RightLen);
 21843  0167A2  C126  F11E         	movff	TCPGetArray@buffer,TCPRAMCopy@ptrDest
 21844  0167A6  C127  F11F         	movff	TCPGetArray@buffer+1,TCPRAMCopy@ptrDest+1
 21845  0167AA  0E01               	movlw	1
 21846  0167AC  0101               	movlb	1	; () banked
 21847  0167AE  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 21848  0167B0  C1EC  F121         	movff	_MyTCBStub+12,TCPRAMCopy@ptrSource
 21849  0167B4  C1ED  F122         	movff	_MyTCBStub+13,TCPRAMCopy@ptrSource+1
 21850  0167B8  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 21851  0167BC  C131  F124         	movff	TCPGetArray@RightLen,TCPRAMCopy@wLength
 21852  0167C0  C132  F125         	movff	TCPGetArray@RightLen+1,TCPRAMCopy@wLength+1
 21853  0167C4  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 21854                           
 21855                           ;tcp.c: 1684: buffer += RightLen;
 21856  0167C8  0101               	movlb	1	; () banked
 21857  0167CA  5131               	movf	TCPGetArray@RightLen& (0+255),w,b
 21858  0167CC  0101               	movlb	1	; () banked
 21859  0167CE  2726               	addwf	TCPGetArray@buffer& (0+255),f,b
 21860  0167D0  0101               	movlb	1	; () banked
 21861  0167D2  5132               	movf	(TCPGetArray@RightLen+1)& (0+255),w,b
 21862  0167D4  0101               	movlb	1	; () banked
 21863  0167D6  2327               	addwfc	(TCPGetArray@buffer+1)& (0+255),f,b
 21864  0167D8                     l14332:
 21865                           
 21866                           ; BSR set to: 1
 21867                           ;tcp.c: 1685: }
 21868                           ;tcp.c: 1686: len -= RightLen;
 21869  0167D8  0101               	movlb	1	; () banked
 21870  0167DA  5131               	movf	TCPGetArray@RightLen& (0+255),w,b
 21871  0167DC  0101               	movlb	1	; () banked
 21872  0167DE  5F28               	subwf	TCPGetArray@len& (0+255),f,b
 21873  0167E0  0101               	movlb	1	; () banked
 21874  0167E2  5132               	movf	(TCPGetArray@RightLen+1)& (0+255),w,b
 21875  0167E4  0101               	movlb	1	; () banked
 21876  0167E6  5B29               	subwfb	(TCPGetArray@len+1)& (0+255),f,b
 21877                           
 21878                           ; BSR set to: 1
 21879                           ;tcp.c: 1687: MyTCBStub.rxTail = MyTCBStub.bufferRxStart;
 21880  0167E8  C1E2  F1EC         	movff	_MyTCBStub+2,_MyTCBStub+12
 21881  0167EC  C1E3  F1ED         	movff	_MyTCBStub+3,_MyTCBStub+13
 21882  0167F0                     l14336:
 21883                           
 21884                           ; BSR set to: 1
 21885                           ;tcp.c: 1688: }
 21886                           ;tcp.c: 1690: if(buffer)
 21887  0167F0  0101               	movlb	1	; () banked
 21888  0167F2  5127               	movf	(TCPGetArray@buffer+1)& (0+255),w,b
 21889  0167F4  1126               	iorwf	TCPGetArray@buffer& (0+255),w,b
 21890  0167F6  B4D8               	btfsc	status,2,c
 21891  0167F8  D013               	goto	l14340
 21892                           
 21893                           ; BSR set to: 1
 21894                           ;tcp.c: 1691: TCPRAMCopy((unsigned short)buffer, 1u, MyTCBStub.rxTail, MyTCBStub.vMemory
      +                          Medium, len);
 21895  0167FA  C126  F11E         	movff	TCPGetArray@buffer,TCPRAMCopy@ptrDest
 21896  0167FE  C127  F11F         	movff	TCPGetArray@buffer+1,TCPRAMCopy@ptrDest+1
 21897  016802  0E01               	movlw	1
 21898  016804  0101               	movlb	1	; () banked
 21899  016806  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 21900  016808  C1EC  F121         	movff	_MyTCBStub+12,TCPRAMCopy@ptrSource
 21901  01680C  C1ED  F122         	movff	_MyTCBStub+13,TCPRAMCopy@ptrSource+1
 21902  016810  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 21903  016814  C128  F124         	movff	TCPGetArray@len,TCPRAMCopy@wLength
 21904  016818  C129  F125         	movff	TCPGetArray@len+1,TCPRAMCopy@wLength+1
 21905  01681C  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 21906  016820                     l14340:
 21907                           
 21908                           ;tcp.c: 1692: MyTCBStub.rxTail += len;
 21909  016820  0101               	movlb	1	; () banked
 21910  016822  5128               	movf	TCPGetArray@len& (0+255),w,b
 21911  016824  0101               	movlb	1	; () banked
 21912  016826  27EC               	addwf	(_MyTCBStub+12)& (0+255),f,b
 21913  016828  0101               	movlb	1	; () banked
 21914  01682A  5129               	movf	(TCPGetArray@len+1)& (0+255),w,b
 21915  01682C  0101               	movlb	1	; () banked
 21916  01682E  23ED               	addwfc	(_MyTCBStub+13)& (0+255),f,b
 21917                           
 21918                           ; BSR set to: 1
 21919                           ;tcp.c: 1693: len += RightLen;
 21920  016830  0101               	movlb	1	; () banked
 21921  016832  5131               	movf	TCPGetArray@RightLen& (0+255),w,b
 21922  016834  0101               	movlb	1	; () banked
 21923  016836  2728               	addwf	TCPGetArray@len& (0+255),f,b
 21924  016838  0101               	movlb	1	; () banked
 21925  01683A  5132               	movf	(TCPGetArray@RightLen+1)& (0+255),w,b
 21926  01683C  0101               	movlb	1	; () banked
 21927  01683E  2329               	addwfc	(TCPGetArray@len+1)& (0+255),f,b
 21928                           
 21929                           ; BSR set to: 1
 21930                           ;tcp.c: 1696: if(wGetReadyCount - len <= len)
 21931  016840  0101               	movlb	1	; () banked
 21932  016842  C128  F12A         	movff	TCPGetArray@len,??_TCPGetArray
 21933  016846  0101               	movlb	1	; () banked
 21934  016848  C129  F12B         	movff	TCPGetArray@len+1,??_TCPGetArray+1
 21935  01684C  0101               	movlb	1	; () banked
 21936  01684E  1F2A               	comf	??_TCPGetArray& (0+255),f,b
 21937  016850  1F2B               	comf	(??_TCPGetArray+1)& (0+255),f,b
 21938  016852  4B2A               	infsnz	??_TCPGetArray& (0+255),f,b
 21939  016854  2B2B               	incf	(??_TCPGetArray+1)& (0+255),f,b
 21940  016856  0101               	movlb	1	; () banked
 21941  016858  512F               	movf	TCPGetArray@wGetReadyCount& (0+255),w,b
 21942  01685A  0101               	movlb	1	; () banked
 21943  01685C  272A               	addwf	??_TCPGetArray& (0+255),f,b
 21944  01685E  0101               	movlb	1	; () banked
 21945  016860  5130               	movf	(TCPGetArray@wGetReadyCount+1)& (0+255),w,b
 21946  016862  0101               	movlb	1	; () banked
 21947  016864  232B               	addwfc	(??_TCPGetArray+1)& (0+255),f,b
 21948  016866  0101               	movlb	1	; () banked
 21949  016868  512A               	movf	??_TCPGetArray& (0+255),w,b
 21950  01686A  0101               	movlb	1	; () banked
 21951  01686C  5D28               	subwf	TCPGetArray@len& (0+255),w,b
 21952  01686E  0101               	movlb	1	; () banked
 21953  016870  512B               	movf	(??_TCPGetArray+1)& (0+255),w,b
 21954  016872  0101               	movlb	1	; () banked
 21955  016874  5929               	subwfb	(TCPGetArray@len+1)& (0+255),w,b
 21956  016876  A0D8               	btfss	status,0,c
 21957  016878  D003               	goto	l1031
 21958                           
 21959                           ; BSR set to: 1
 21960                           ;tcp.c: 1697: {
 21961                           ;tcp.c: 1698: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 21962  01687A  0101               	movlb	1	; () banked
 21963  01687C  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 21964                           
 21965                           ;tcp.c: 1699: }
 21966  01687E  0012               	return	
 21967  016880                     l1031:
 21968                           
 21969                           ; BSR set to: 1
 21970                           ;tcp.c: 1700: else if(!MyTCBStub.Flags.bTimer2Enabled)
 21971  016880  0101               	movlb	1	; () banked
 21972  016882  BBF7               	btfsc	(_MyTCBStub+23)& (0+255),5,b
 21973  016884  0012               	return	
 21974                           
 21975                           ; BSR set to: 1
 21976                           ;tcp.c: 1703: {
 21977                           ;tcp.c: 1704: MyTCBStub.Flags.bTimer2Enabled = 1;
 21978  016886  0101               	movlb	1	; () banked
 21979  016888  8BF7               	bsf	(_MyTCBStub+23)& (0+255),5,b
 21980                           
 21981                           ; BSR set to: 1
 21982                           ;tcp.c: 1705: MyTCBStub.eventTime2 = (uint16_t)TickGetDiv256() + ((((((40000000ul)/4)+12
      +                          8ull)/256ull))/5ull)/256ull;
 21983  01688A  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 21984  01688E  C100  F12A         	movff	?_TickGetDiv256,??_TCPGetArray
 21985  016892  C101  F12B         	movff	?_TickGetDiv256+1,??_TCPGetArray+1
 21986  016896  C102  F12C         	movff	?_TickGetDiv256+2,??_TCPGetArray+2
 21987  01689A  C103  F12D         	movff	?_TickGetDiv256+3,??_TCPGetArray+3
 21988  01689E  0E1E               	movlw	30
 21989  0168A0  0101               	movlb	1	; () banked
 21990  0168A2  252A               	addwf	??_TCPGetArray& (0+255),w,b
 21991  0168A4  0101               	movlb	1	; () banked
 21992  0168A6  6FF2               	movwf	(_MyTCBStub+18)& (0+255),b
 21993  0168A8  0E00               	movlw	0
 21994  0168AA  0101               	movlb	1	; () banked
 21995  0168AC  212B               	addwfc	(??_TCPGetArray+1)& (0+255),w,b
 21996  0168AE  0101               	movlb	1	; () banked
 21997  0168B0  6FF3               	movwf	(_MyTCBStub+19)& (0+255),b
 21998  0168B2  0012               	return	
 21999  0168B4                     __end_of_TCPGetArray:
 22000                           	opt stack 0
 22001                           tblptru	equ	0xFF8
 22002                           tblptrh	equ	0xFF7
 22003                           tblptrl	equ	0xFF6
 22004                           tablat	equ	0xFF5
 22005                           prodh	equ	0xFF4
 22006                           prodl	equ	0xFF3
 22007                           intcon	equ	0xFF2
 22008                           postinc0	equ	0xFEE
 22009                           wreg	equ	0xFE8
 22010                           indf1	equ	0xFE7
 22011                           postinc1	equ	0xFE6
 22012                           postdec1	equ	0xFE5
 22013                           fsr1h	equ	0xFE2
 22014                           fsr1l	equ	0xFE1
 22015                           indf2	equ	0xFDF
 22016                           postinc2	equ	0xFDE
 22017                           postdec2	equ	0xFDD
 22018                           fsr2h	equ	0xFDA
 22019                           fsr2l	equ	0xFD9
 22020                           status	equ	0xFD8
 22021                           
 22022 ;; *************** function _TCPIsGetReady *****************
 22023 ;; Defined at:
 22024 ;;		line 1573 in file "../tcpip/tcp.c"
 22025 ;; Parameters:    Size  Location     Type
 22026 ;;  hTCP            1    wreg     unsigned char 
 22027 ;; Auto vars:     Size  Location     Type
 22028 ;;  hTCP            1   37[BANK1 ] unsigned char 
 22029 ;; Return value:  Size  Location     Type
 22030 ;;                  2   33[BANK1 ] unsigned int 
 22031 ;; Registers used:
 22032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22033 ;; Tracked objects:
 22034 ;;		On entry : 0/0
 22035 ;;		On exit  : 0/0
 22036 ;;		Unchanged: 0/0
 22037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22038 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22039 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22040 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22041 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22042 ;;Total ram usage:        5 bytes
 22043 ;; Hardware stack levels used:    1
 22044 ;; Hardware stack levels required when called:   12
 22045 ;; This function calls:
 22046 ;;		_SyncTCBStub
 22047 ;; This function is called by:
 22048 ;;		_TCPGetArray
 22049 ;;		_TCPServer
 22050 ;;		_TCPDiscard
 22051 ;;		_TCPGet
 22052 ;;		_TCPGetRxFIFOFree
 22053 ;;		_TCPPeekArray
 22054 ;;		_TCPFindArrayEx
 22055 ;;		_TCPFindROMArrayEx
 22056 ;; This function uses a non-reentrant model
 22057 ;;
 22058                           
 22059                           	psect	text35
 22060  019A60                     __ptext35:
 22061                           	opt stack 0
 22062  019A60                     _TCPIsGetReady:
 22063                           	opt stack 16
 22064                           
 22065                           ; BSR set to: 1
 22066                           ;incstack = 0
 22067                           ;TCPIsGetReady@hTCP stored from wreg
 22068  019A60  0101               	movlb	1	; () banked
 22069  019A62  6F25               	movwf	TCPIsGetReady@hTCP& (0+255),b
 22070                           
 22071                           ; BSR set to: 1
 22072                           ;tcp.c: 1575: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 22073  019A64  0101               	movlb	1	; () banked
 22074  019A66  5125               	movf	TCPIsGetReady@hTCP& (0+255),w,b
 22075  019A68  B4D8               	btfsc	status,2,c
 22076  019A6A  D007               	goto	l12602
 22077                           
 22078                           ; BSR set to: 1
 22079                           ;tcp.c: 1576: {
 22080                           ;tcp.c: 1577: return 0;
 22081  019A6C  0E00               	movlw	0
 22082  019A6E  0101               	movlb	1	; () banked
 22083  019A70  6F22               	movwf	(?_TCPIsGetReady+1)& (0+255),b
 22084  019A72  0E00               	movlw	0
 22085  019A74  0101               	movlb	1	; () banked
 22086  019A76  6F21               	movwf	?_TCPIsGetReady& (0+255),b
 22087  019A78  0012               	return	
 22088  019A7A                     l12602:
 22089                           
 22090                           ; BSR set to: 1
 22091                           ;tcp.c: 1578: }
 22092                           ;tcp.c: 1580: SyncTCBStub(hTCP);
 22093  019A7A  0101               	movlb	1	; () banked
 22094  019A7C  5125               	movf	TCPIsGetReady@hTCP& (0+255),w,b
 22095  019A7E  EC3D  F0D0         	call	_SyncTCBStub
 22096                           
 22097                           ;tcp.c: 1582: if(MyTCBStub.rxHead >= MyTCBStub.rxTail)
 22098  019A82  0101               	movlb	1	; () banked
 22099  019A84  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 22100  019A88  0101               	movlb	1	; () banked
 22101  019A8A  EE11  F0EA         	lfsr	1,_MyTCBStub+10
 22102  019A8E  52E6               	movf	postinc1,f,c
 22103  019A90  52DE               	movf	postinc2,f,c
 22104  019A92  50DD               	movf	postdec2,w,c
 22105  019A94  5CE5               	subwf	postdec1,w,c
 22106  019A96  E102               	bnz	u13915
 22107  019A98  50DF               	movf	indf2,w,c
 22108  019A9A  5CE7               	subwf	indf1,w,c
 22109  019A9C                     u13915:
 22110  019A9C  A0D8               	btfss	status,0,c
 22111  019A9E  D019               	goto	l12612
 22112                           
 22113                           ; BSR set to: 1
 22114                           ;tcp.c: 1583: return MyTCBStub.rxHead - MyTCBStub.rxTail;
 22115  019AA0  0101               	movlb	1	; () banked
 22116  019AA2  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 22117  019AA6  CFDE F123          	movff	postinc2,??_TCPIsGetReady
 22118  019AAA  CFDD F124          	movff	postdec2,??_TCPIsGetReady+1
 22119  019AAE  0101               	movlb	1	; () banked
 22120  019AB0  1F23               	comf	??_TCPIsGetReady& (0+255),f,b
 22121  019AB2  1F24               	comf	(??_TCPIsGetReady+1)& (0+255),f,b
 22122  019AB4  4B23               	infsnz	??_TCPIsGetReady& (0+255),f,b
 22123  019AB6  2B24               	incf	(??_TCPIsGetReady+1)& (0+255),f,b
 22124  019AB8  0101               	movlb	1	; () banked
 22125  019ABA  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 22126  019ABC  0101               	movlb	1	; () banked
 22127  019ABE  2523               	addwf	??_TCPIsGetReady& (0+255),w,b
 22128  019AC0  0101               	movlb	1	; () banked
 22129  019AC2  6F21               	movwf	?_TCPIsGetReady& (0+255),b
 22130  019AC4  0101               	movlb	1	; () banked
 22131  019AC6  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 22132  019AC8  0101               	movlb	1	; () banked
 22133  019ACA  2124               	addwfc	(??_TCPIsGetReady+1)& (0+255),w,b
 22134  019ACC  0101               	movlb	1	; () banked
 22135  019ACE  6F22               	movwf	(?_TCPIsGetReady+1)& (0+255),b
 22136  019AD0  0012               	return	
 22137  019AD2                     l12612:
 22138                           
 22139                           ; BSR set to: 1
 22140                           ;tcp.c: 1584: else
 22141                           ;tcp.c: 1585: return (MyTCBStub.bufferEnd - MyTCBStub.rxTail + 1) + (MyTCBStub.rxHead - 
      +                          MyTCBStub.bufferRxStart);
 22142  019AD2  0101               	movlb	1	; () banked
 22143  019AD4  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 22144  019AD8  CFDE F123          	movff	postinc2,??_TCPIsGetReady
 22145  019ADC  CFDD F124          	movff	postdec2,??_TCPIsGetReady+1
 22146  019AE0  0101               	movlb	1	; () banked
 22147  019AE2  51EC               	movf	(_MyTCBStub+12)& (0+255),w,b
 22148  019AE4  0101               	movlb	1	; () banked
 22149  019AE6  2723               	addwf	??_TCPIsGetReady& (0+255),f,b
 22150  019AE8  0101               	movlb	1	; () banked
 22151  019AEA  51ED               	movf	(_MyTCBStub+13)& (0+255),w,b
 22152  019AEC  0101               	movlb	1	; () banked
 22153  019AEE  2324               	addwfc	(??_TCPIsGetReady+1)& (0+255),f,b
 22154  019AF0  0101               	movlb	1	; () banked
 22155  019AF2  1F23               	comf	??_TCPIsGetReady& (0+255),f,b
 22156  019AF4  1F24               	comf	(??_TCPIsGetReady+1)& (0+255),f,b
 22157  019AF6  4B23               	infsnz	??_TCPIsGetReady& (0+255),f,b
 22158  019AF8  2B24               	incf	(??_TCPIsGetReady+1)& (0+255),f,b
 22159  019AFA  0101               	movlb	1	; () banked
 22160  019AFC  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 22161  019AFE  0101               	movlb	1	; () banked
 22162  019B00  2723               	addwf	??_TCPIsGetReady& (0+255),f,b
 22163  019B02  0101               	movlb	1	; () banked
 22164  019B04  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 22165  019B06  0101               	movlb	1	; () banked
 22166  019B08  2324               	addwfc	(??_TCPIsGetReady+1)& (0+255),f,b
 22167  019B0A  0101               	movlb	1	; () banked
 22168  019B0C  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 22169  019B0E  0101               	movlb	1	; () banked
 22170  019B10  2723               	addwf	??_TCPIsGetReady& (0+255),f,b
 22171  019B12  0101               	movlb	1	; () banked
 22172  019B14  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 22173  019B16  0101               	movlb	1	; () banked
 22174  019B18  2324               	addwfc	(??_TCPIsGetReady+1)& (0+255),f,b
 22175  019B1A  0E01               	movlw	1
 22176  019B1C  0101               	movlb	1	; () banked
 22177  019B1E  2523               	addwf	??_TCPIsGetReady& (0+255),w,b
 22178  019B20  0101               	movlb	1	; () banked
 22179  019B22  6F21               	movwf	?_TCPIsGetReady& (0+255),b
 22180  019B24  0E00               	movlw	0
 22181  019B26  0101               	movlb	1	; () banked
 22182  019B28  2124               	addwfc	(??_TCPIsGetReady+1)& (0+255),w,b
 22183  019B2A  0101               	movlb	1	; () banked
 22184  019B2C  6F22               	movwf	(?_TCPIsGetReady+1)& (0+255),b
 22185  019B2E  0012               	return	
 22186  019B30                     __end_of_TCPIsGetReady:
 22187                           	opt stack 0
 22188                           tblptru	equ	0xFF8
 22189                           tblptrh	equ	0xFF7
 22190                           tblptrl	equ	0xFF6
 22191                           tablat	equ	0xFF5
 22192                           prodh	equ	0xFF4
 22193                           prodl	equ	0xFF3
 22194                           intcon	equ	0xFF2
 22195                           postinc0	equ	0xFEE
 22196                           wreg	equ	0xFE8
 22197                           indf1	equ	0xFE7
 22198                           postinc1	equ	0xFE6
 22199                           postdec1	equ	0xFE5
 22200                           fsr1h	equ	0xFE2
 22201                           fsr1l	equ	0xFE1
 22202                           indf2	equ	0xFDF
 22203                           postinc2	equ	0xFDE
 22204                           postdec2	equ	0xFDD
 22205                           fsr2h	equ	0xFDA
 22206                           fsr2l	equ	0xFD9
 22207                           status	equ	0xFD8
 22208                           
 22209 ;; *************** function _TCPClose *****************
 22210 ;; Defined at:
 22211 ;;		line 919 in file "../tcpip/tcp.c"
 22212 ;; Parameters:    Size  Location     Type
 22213 ;;  hTCP            1    wreg     unsigned char 
 22214 ;; Auto vars:     Size  Location     Type
 22215 ;;  hTCP            1   87[BANK1 ] unsigned char 
 22216 ;; Return value:  Size  Location     Type
 22217 ;;		None               void
 22218 ;; Registers used:
 22219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22220 ;; Tracked objects:
 22221 ;;		On entry : 0/0
 22222 ;;		On exit  : 0/0
 22223 ;;		Unchanged: 0/0
 22224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22226 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22228 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22229 ;;Total ram usage:        1 bytes
 22230 ;; Hardware stack levels used:    1
 22231 ;; Hardware stack levels required when called:   16
 22232 ;; This function calls:
 22233 ;;		_SyncTCBStub
 22234 ;;		_TCPDisconnect
 22235 ;; This function is called by:
 22236 ;;		_TCPServer
 22237 ;; This function uses a non-reentrant model
 22238 ;;
 22239                           
 22240                           	psect	text36
 22241  01B79A                     __ptext36:
 22242                           	opt stack 0
 22243  01B79A                     _TCPClose:
 22244                           	opt stack 12
 22245                           
 22246                           ; BSR set to: 1
 22247                           ;incstack = 0
 22248                           ;TCPClose@hTCP stored from wreg
 22249  01B79A  0101               	movlb	1	; () banked
 22250  01B79C  6F57               	movwf	TCPClose@hTCP& (0+255),b
 22251                           
 22252                           ; BSR set to: 1
 22253                           ;tcp.c: 921: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 22254  01B79E  0101               	movlb	1	; () banked
 22255  01B7A0  5157               	movf	TCPClose@hTCP& (0+255),w,b
 22256  01B7A2  A4D8               	btfss	status,2,c
 22257  01B7A4  0012               	return	
 22258                           
 22259                           ; BSR set to: 1
 22260                           ;tcp.c: 924: }
 22261                           ;tcp.c: 926: SyncTCBStub(hTCP);
 22262                           
 22263                           ; BSR set to: 1
 22264                           
 22265                           ; BSR set to: 1
 22266                           ;tcp.c: 922: {
 22267                           ;tcp.c: 923: return;
 22268  01B7A6  0101               	movlb	1	; () banked
 22269  01B7A8  5157               	movf	TCPClose@hTCP& (0+255),w,b
 22270  01B7AA  EC3D  F0D0         	call	_SyncTCBStub
 22271                           
 22272                           ;tcp.c: 927: MyTCBStub.Flags.bServer = 0;
 22273  01B7AE  0101               	movlb	1	; () banked
 22274  01B7B0  97F7               	bcf	(_MyTCBStub+23)& (0+255),3,b
 22275                           
 22276                           ; BSR set to: 1
 22277                           ;tcp.c: 928: TCPDisconnect(hTCP);
 22278  01B7B2  0101               	movlb	1	; () banked
 22279  01B7B4  5157               	movf	TCPClose@hTCP& (0+255),w,b
 22280  01B7B6  EC75  F0C6         	call	_TCPDisconnect
 22281  01B7BA  0012               	return	
 22282  01B7BC                     __end_of_TCPClose:
 22283                           	opt stack 0
 22284                           tblptru	equ	0xFF8
 22285                           tblptrh	equ	0xFF7
 22286                           tblptrl	equ	0xFF6
 22287                           tablat	equ	0xFF5
 22288                           prodh	equ	0xFF4
 22289                           prodl	equ	0xFF3
 22290                           intcon	equ	0xFF2
 22291                           postinc0	equ	0xFEE
 22292                           wreg	equ	0xFE8
 22293                           indf1	equ	0xFE7
 22294                           postinc1	equ	0xFE6
 22295                           postdec1	equ	0xFE5
 22296                           fsr1h	equ	0xFE2
 22297                           fsr1l	equ	0xFE1
 22298                           indf2	equ	0xFDF
 22299                           postinc2	equ	0xFDE
 22300                           postdec2	equ	0xFDD
 22301                           fsr2h	equ	0xFDA
 22302                           fsr2l	equ	0xFD9
 22303                           status	equ	0xFD8
 22304                           
 22305 ;; *************** function _SaveToFlash *****************
 22306 ;; Defined at:
 22307 ;;		line 83 in file "Persistence.c"
 22308 ;; Parameters:    Size  Location     Type
 22309 ;;		None
 22310 ;; Auto vars:     Size  Location     Type
 22311 ;;  emptyAddr       4   59[BANK1 ] unsigned long 
 22312 ;;  addr            4   52[BANK1 ] unsigned long 
 22313 ;;  success         1   58[BANK1 ] unsigned char 
 22314 ;;  cmp             2   56[BANK1 ] int 
 22315 ;; Return value:  Size  Location     Type
 22316 ;;		None               void
 22317 ;; Registers used:
 22318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22319 ;; Tracked objects:
 22320 ;;		On entry : 0/0
 22321 ;;		On exit  : 0/0
 22322 ;;		Unchanged: 0/0
 22323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22325 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22326 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22327 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22328 ;;Total ram usage:       23 bytes
 22329 ;; Hardware stack levels used:    1
 22330 ;; Hardware stack levels required when called:   15
 22331 ;; This function calls:
 22332 ;;		_EraseFlash
 22333 ;;		_FindEmpty
 22334 ;;		_GetCheckSum
 22335 ;;		_ReadFlash
 22336 ;;		_RefreshLine1
 22337 ;;		_RefreshLine1Ex
 22338 ;;		_WriteBlockFlash
 22339 ;;		_memcmp
 22340 ;; This function is called by:
 22341 ;;		_TCPServer
 22342 ;; This function uses a non-reentrant model
 22343 ;;
 22344                           
 22345                           	psect	text37
 22346  014A4A                     __ptext37:
 22347                           	opt stack 0
 22348  014A4A                     _SaveToFlash:
 22349                           	opt stack 13
 22350                           
 22351                           ;Persistence.c: 85: s_dacSettingsOriginal.Sequence = s_dacSettings.Sequence;
 22352                           
 22353                           ;incstack = 0
 22354  014A4A  C2D3  F300         	movff	_s_dacSettings,_s_dacSettingsOriginal
 22355                           
 22356                           ;Persistence.c: 86: int cmp = memcmp(&s_dacSettingsOriginal, &s_dacSettings, sizeof(s_da
      +                          cSettings) - 1);
 22357  014A4E  0103               	movlb	3	; () banked
 22358  014A50  0E03               	movlw	high _s_dacSettingsOriginal
 22359  014A52  0101               	movlb	1	; () banked
 22360  014A54  6F01               	movwf	(memcmp@s1+1)& (0+255),b
 22361  014A56  0103               	movlb	3	; () banked
 22362  014A58  0E00               	movlw	low _s_dacSettingsOriginal
 22363  014A5A  0101               	movlb	1	; () banked
 22364  014A5C  6F00               	movwf	memcmp@s1& (0+255),b
 22365  014A5E  0102               	movlb	2	; () banked
 22366  014A60  0E02               	movlw	high _s_dacSettings
 22367  014A62  0101               	movlb	1	; () banked
 22368  014A64  6F03               	movwf	(memcmp@s2+1)& (0+255),b
 22369  014A66  0102               	movlb	2	; () banked
 22370  014A68  0ED3               	movlw	low _s_dacSettings
 22371  014A6A  0101               	movlb	1	; () banked
 22372  014A6C  6F02               	movwf	memcmp@s2& (0+255),b
 22373  014A6E  0E00               	movlw	0
 22374  014A70  0101               	movlb	1	; () banked
 22375  014A72  6F05               	movwf	(memcmp@n+1)& (0+255),b
 22376  014A74  0E13               	movlw	19
 22377  014A76  0101               	movlb	1	; () banked
 22378  014A78  6F04               	movwf	memcmp@n& (0+255),b
 22379  014A7A  EC62  F0CE         	call	_memcmp	;wreg free
 22380  014A7E  0101               	movlb	1	; () banked
 22381  014A80  C100  F138         	movff	?_memcmp,SaveToFlash@cmp
 22382  014A84  0101               	movlb	1	; () banked
 22383  014A86  C101  F139         	movff	?_memcmp+1,SaveToFlash@cmp+1
 22384                           
 22385                           ; BSR set to: 1
 22386                           ;Persistence.c: 87: if (cmp)
 22387  014A8A  0101               	movlb	1	; () banked
 22388  014A8C  5139               	movf	(SaveToFlash@cmp+1)& (0+255),w,b
 22389  014A8E  1138               	iorwf	SaveToFlash@cmp& (0+255),w,b
 22390  014A90  B4D8               	btfsc	status,2,c
 22391  014A92  D12F               	goto	l14492
 22392                           
 22393                           ; BSR set to: 1
 22394                           ;Persistence.c: 88: {
 22395                           ;Persistence.c: 89: unsigned long addr = SETTINGS_ADDR;
 22396  014A94  0E11               	movlw	low _SETTINGS_ADDR
 22397  014A96  6EF6               	movwf	tblptrl,c
 22398  014A98                     	if	1	;There is more than 1 active tblptr byte
 22399  014A98  0EFF               	movlw	high _SETTINGS_ADDR
 22400  014A9A  6EF7               	movwf	tblptrh,c
 22401  014A9C                     	endif
 22402  014A9C                     	if	1	;There are 3 active tblptr bytes
 22403  014A9C  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 22404  014A9E  6EF8               	movwf	tblptru,c
 22405  014AA0                     	endif
 22406  014AA0  0009               	tblrd		*+
 22407  014AA2  0101               	movlb	1	; () banked
 22408  014AA4  CFF5 F134          	movff	tablat,SaveToFlash@addr
 22409  014AA8  0009               	tblrd		*+
 22410  014AAA  0101               	movlb	1	; () banked
 22411  014AAC  CFF5 F135          	movff	tablat,SaveToFlash@addr+1
 22412  014AB0  0009               	tblrd		*+
 22413  014AB2  0101               	movlb	1	; () banked
 22414  014AB4  CFF5 F136          	movff	tablat,SaveToFlash@addr+2
 22415  014AB8  000A               	tblrd		*-
 22416  014ABA  0101               	movlb	1	; () banked
 22417  014ABC  CFF5 F137          	movff	tablat,SaveToFlash@addr+3
 22418                           
 22419                           ; BSR set to: 1
 22420                           ;Persistence.c: 90: uint8_t success = 0;
 22421  014AC0  0E00               	movlw	0
 22422  014AC2  0101               	movlb	1	; () banked
 22423  014AC4  6F3A               	movwf	SaveToFlash@success& (0+255),b
 22424                           
 22425                           ;Persistence.c: 91: while (!success)
 22426  014AC6  D0FF               	goto	l14486
 22427  014AC8                     l14460:
 22428                           
 22429                           ; BSR set to: 1
 22430                           ;Persistence.c: 92: {
 22431                           ;Persistence.c: 93: RefreshLine1Ex( "Preparing...    ");
 22432  014AC8  0EFF               	movlw	high STR_2
 22433  014ACA  0101               	movlb	1	; () banked
 22434  014ACC  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 22435  014ACE  0ED7               	movlw	low STR_2
 22436  014AD0  0101               	movlb	1	; () banked
 22437  014AD2  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 22438  014AD4  EC94  F0DC         	call	_RefreshLine1Ex	;wreg free
 22439                           
 22440                           ;Persistence.c: 94: unsigned long emptyAddr = FindEmpty(addr);
 22441  014AD8  C134  F110         	movff	SaveToFlash@addr,FindEmpty@startAddr
 22442  014ADC  C135  F111         	movff	SaveToFlash@addr+1,FindEmpty@startAddr+1
 22443  014AE0  C136  F112         	movff	SaveToFlash@addr+2,FindEmpty@startAddr+2
 22444  014AE4  C137  F113         	movff	SaveToFlash@addr+3,FindEmpty@startAddr+3
 22445  014AE8  EC2F  F0BA         	call	_FindEmpty	;wreg free
 22446  014AEC  C110  F13B         	movff	?_FindEmpty,SaveToFlash@emptyAddr
 22447  014AF0  C111  F13C         	movff	?_FindEmpty+1,SaveToFlash@emptyAddr+1
 22448  014AF4  C112  F13D         	movff	?_FindEmpty+2,SaveToFlash@emptyAddr+2
 22449  014AF8  C113  F13E         	movff	?_FindEmpty+3,SaveToFlash@emptyAddr+3
 22450                           
 22451                           ;Persistence.c: 95: if (emptyAddr)
 22452  014AFC  0101               	movlb	1	; () banked
 22453  014AFE  513E               	movf	(SaveToFlash@emptyAddr+3)& (0+255),w,b
 22454  014B00  113B               	iorwf	SaveToFlash@emptyAddr& (0+255),w,b
 22455  014B02  113C               	iorwf	(SaveToFlash@emptyAddr+1)& (0+255),w,b
 22456  014B04  113D               	iorwf	(SaveToFlash@emptyAddr+2)& (0+255),w,b
 22457  014B06  B4D8               	btfsc	status,2,c
 22458  014B08  D06C               	goto	l14480
 22459                           
 22460                           ; BSR set to: 1
 22461                           ;Persistence.c: 96: {
 22462                           ;Persistence.c: 97: RefreshLine1Ex("Writing...      ");
 22463  014B0A  0EFF               	movlw	high STR_3
 22464  014B0C  0101               	movlb	1	; () banked
 22465  014B0E  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 22466  014B10  0EC6               	movlw	low STR_3
 22467  014B12  0101               	movlb	1	; () banked
 22468  014B14  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 22469  014B16  EC94  F0DC         	call	_RefreshLine1Ex	;wreg free
 22470                           
 22471                           ;Persistence.c: 98: s_dacSettings.Sequence --;
 22472  014B1A  0102               	movlb	2	; () banked
 22473  014B1C  07D3               	decf	_s_dacSettings& (0+255),f,b
 22474                           
 22475                           ; BSR set to: 2
 22476                           ;Persistence.c: 99: s_dacSettings.CheckSum = GetCheckSum((unsigned char *)&s_dacSettings
      +                          , sizeof(s_dacSettings) - 1);
 22477  014B1E  0102               	movlb	2	; () banked
 22478  014B20  0E02               	movlw	high _s_dacSettings
 22479  014B22  0101               	movlb	1	; () banked
 22480  014B24  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 22481  014B26  0102               	movlb	2	; () banked
 22482  014B28  0ED3               	movlw	low _s_dacSettings
 22483  014B2A  0101               	movlb	1	; () banked
 22484  014B2C  6F00               	movwf	GetCheckSum@data& (0+255),b
 22485  014B2E  0E13               	movlw	19
 22486  014B30  0101               	movlb	1	; () banked
 22487  014B32  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 22488  014B34  EC23  F0D9         	call	_GetCheckSum	;wreg free
 22489  014B38  0102               	movlb	2	; () banked
 22490  014B3A  6FE6               	movwf	(_s_dacSettings+19)& (0+255),b
 22491                           
 22492                           ; BSR set to: 2
 22493                           ;Persistence.c: 100: WriteBlockFlash(emptyAddr, 1, (unsigned char *)&s_dacSettings);
 22494  014B3C  C13B  F100         	movff	SaveToFlash@emptyAddr,WriteBlockFlash@startaddr
 22495  014B40  C13C  F101         	movff	SaveToFlash@emptyAddr+1,WriteBlockFlash@startaddr+1
 22496  014B44  C13D  F102         	movff	SaveToFlash@emptyAddr+2,WriteBlockFlash@startaddr+2
 22497  014B48  C13E  F103         	movff	SaveToFlash@emptyAddr+3,WriteBlockFlash@startaddr+3
 22498  014B4C  0E01               	movlw	1
 22499  014B4E  0101               	movlb	1	; () banked
 22500  014B50  6F04               	movwf	WriteBlockFlash@num_blocks& (0+255),b
 22501  014B52  0102               	movlb	2	; () banked
 22502  014B54  0E02               	movlw	high _s_dacSettings
 22503  014B56  0101               	movlb	1	; () banked
 22504  014B58  6F06               	movwf	(WriteBlockFlash@flash_array+1)& (0+255),b
 22505  014B5A  0102               	movlb	2	; () banked
 22506  014B5C  0ED3               	movlw	low _s_dacSettings
 22507  014B5E  0101               	movlb	1	; () banked
 22508  014B60  6F05               	movwf	WriteBlockFlash@flash_array& (0+255),b
 22509  014B62  EC9B  F0C1         	call	_WriteBlockFlash	;wreg free
 22510                           
 22511                           ;Persistence.c: 102: ReadFlash(emptyAddr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_
      +                          dacSettingsTmp);
 22512  014B66  C13B  F100         	movff	SaveToFlash@emptyAddr,ReadFlash@startaddr
 22513  014B6A  C13C  F101         	movff	SaveToFlash@emptyAddr+1,ReadFlash@startaddr+1
 22514  014B6E  C13D  F102         	movff	SaveToFlash@emptyAddr+2,ReadFlash@startaddr+2
 22515  014B72  C13E  F103         	movff	SaveToFlash@emptyAddr+3,ReadFlash@startaddr+3
 22516  014B76  0E00               	movlw	0
 22517  014B78  0101               	movlb	1	; () banked
 22518  014B7A  6F05               	movwf	(ReadFlash@num_bytes+1)& (0+255),b
 22519  014B7C  0E14               	movlw	20
 22520  014B7E  0101               	movlb	1	; () banked
 22521  014B80  6F04               	movwf	ReadFlash@num_bytes& (0+255),b
 22522  014B82  0102               	movlb	2	; () banked
 22523  014B84  0E02               	movlw	high _s_dacSettingsTmp
 22524  014B86  0101               	movlb	1	; () banked
 22525  014B88  6F07               	movwf	(ReadFlash@flash_array+1)& (0+255),b
 22526  014B8A  0102               	movlb	2	; () banked
 22527  014B8C  0EE7               	movlw	low _s_dacSettingsTmp
 22528  014B8E  0101               	movlb	1	; () banked
 22529  014B90  6F06               	movwf	ReadFlash@flash_array& (0+255),b
 22530  014B92  ECE2  F0D6         	call	_ReadFlash	;wreg free
 22531                           
 22532                           ;Persistence.c: 103: success = !memcmp(&s_dacSettingsTmp, &s_dacSettings, sizeof(s_dacSe
      +                          ttings));
 22533  014B96  0102               	movlb	2	; () banked
 22534  014B98  0E02               	movlw	high _s_dacSettingsTmp
 22535  014B9A  0101               	movlb	1	; () banked
 22536  014B9C  6F01               	movwf	(memcmp@s1+1)& (0+255),b
 22537  014B9E  0102               	movlb	2	; () banked
 22538  014BA0  0EE7               	movlw	low _s_dacSettingsTmp
 22539  014BA2  0101               	movlb	1	; () banked
 22540  014BA4  6F00               	movwf	memcmp@s1& (0+255),b
 22541  014BA6  0102               	movlb	2	; () banked
 22542  014BA8  0E02               	movlw	high _s_dacSettings
 22543  014BAA  0101               	movlb	1	; () banked
 22544  014BAC  6F03               	movwf	(memcmp@s2+1)& (0+255),b
 22545  014BAE  0102               	movlb	2	; () banked
 22546  014BB0  0ED3               	movlw	low _s_dacSettings
 22547  014BB2  0101               	movlb	1	; () banked
 22548  014BB4  6F02               	movwf	memcmp@s2& (0+255),b
 22549  014BB6  0E00               	movlw	0
 22550  014BB8  0101               	movlb	1	; () banked
 22551  014BBA  6F05               	movwf	(memcmp@n+1)& (0+255),b
 22552  014BBC  0E14               	movlw	20
 22553  014BBE  0101               	movlb	1	; () banked
 22554  014BC0  6F04               	movwf	memcmp@n& (0+255),b
 22555  014BC2  EC62  F0CE         	call	_memcmp	;wreg free
 22556  014BC6  0101               	movlb	1	; () banked
 22557  014BC8  5101               	movf	(?_memcmp+1)& (0+255),w,b
 22558  014BCA  0101               	movlb	1	; () banked
 22559  014BCC  1100               	iorwf	?_memcmp& (0+255),w,b
 22560  014BCE  A4D8               	btfss	status,2,c
 22561  014BD0  D002               	goto	u16780
 22562  014BD2  0E01               	movlw	1
 22563  014BD4  D001               	goto	u16786
 22564  014BD6                     u16780:
 22565  014BD6  0E00               	movlw	0
 22566  014BD8                     u16786:
 22567  014BD8  0101               	movlb	1	; () banked
 22568  014BDA  6F3A               	movwf	SaveToFlash@success& (0+255),b
 22569                           
 22570                           ; BSR set to: 1
 22571                           ;Persistence.c: 104: RefreshLine1();
 22572  014BDC  ECAB  F0DC         	call	_RefreshLine1	;wreg free
 22573                           
 22574                           ;Persistence.c: 105: }
 22575  014BE0  D072               	goto	l14486
 22576  014BE2                     l14480:
 22577                           
 22578                           ;Persistence.c: 106: else
 22579                           ;Persistence.c: 107: {
 22580                           ;Persistence.c: 108: RefreshLine1Ex("Erasing...      ");
 22581  014BE2  0EFF               	movlw	high STR_4
 22582  014BE4  0101               	movlb	1	; () banked
 22583  014BE6  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 22584  014BE8  0EB5               	movlw	low STR_4
 22585  014BEA  0101               	movlb	1	; () banked
 22586  014BEC  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 22587  014BEE  EC94  F0DC         	call	_RefreshLine1Ex	;wreg free
 22588                           
 22589                           ;Persistence.c: 109: s_dacSettings.Sequence = 0xFF;
 22590  014BF2  0102               	movlb	2	; () banked
 22591  014BF4  69D3               	setf	_s_dacSettings& (0+255),b
 22592                           
 22593                           ; BSR set to: 2
 22594                           ;Persistence.c: 110: EraseFlash(SETTINGS_ADDR, SETTINGS_ADDR + SETTINGS_LEN - 1);
 22595  014BF6  0E11               	movlw	low _SETTINGS_ADDR
 22596  014BF8  6EF6               	movwf	tblptrl,c
 22597  014BFA                     	if	1	;There is more than 1 active tblptr byte
 22598  014BFA  0EFF               	movlw	high _SETTINGS_ADDR
 22599  014BFC  6EF7               	movwf	tblptrh,c
 22600  014BFE                     	endif
 22601  014BFE                     	if	1	;There are 3 active tblptr bytes
 22602  014BFE  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 22603  014C00  6EF8               	movwf	tblptru,c
 22604  014C02                     	endif
 22605  014C02  0009               	tblrd		*+
 22606  014C04  0101               	movlb	1	; () banked
 22607  014C06  CFF5 F100          	movff	tablat,EraseFlash@startaddr
 22608  014C0A  0009               	tblrd		*+
 22609  014C0C  0101               	movlb	1	; () banked
 22610  014C0E  CFF5 F101          	movff	tablat,EraseFlash@startaddr+1
 22611  014C12  0009               	tblrd		*+
 22612  014C14  0101               	movlb	1	; () banked
 22613  014C16  CFF5 F102          	movff	tablat,EraseFlash@startaddr+2
 22614  014C1A  000A               	tblrd		*-
 22615  014C1C  0101               	movlb	1	; () banked
 22616  014C1E  CFF5 F103          	movff	tablat,EraseFlash@startaddr+3
 22617  014C22  0E15               	movlw	low _SETTINGS_LEN
 22618  014C24  6EF6               	movwf	tblptrl,c
 22619  014C26                     	if	1	;There is more than 1 active tblptr byte
 22620  014C26  0EFF               	movlw	high _SETTINGS_LEN
 22621  014C28  6EF7               	movwf	tblptrh,c
 22622  014C2A                     	endif
 22623  014C2A                     	if	1	;There are 3 active tblptr bytes
 22624  014C2A  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 22625  014C2C  6EF8               	movwf	tblptru,c
 22626  014C2E                     	endif
 22627  014C2E  0009               	tblrd		*+
 22628  014C30  CFF5 F128          	movff	tablat,??_SaveToFlash
 22629  014C34  0009               	tblrd		*+
 22630  014C36  CFF5 F129          	movff	tablat,??_SaveToFlash+1
 22631  014C3A  0009               	tblrd		*+
 22632  014C3C  CFF5 F12A          	movff	tablat,??_SaveToFlash+2
 22633  014C40  0009               	tblrd		*+
 22634  014C42  CFF5 F12B          	movff	tablat,??_SaveToFlash+3
 22635  014C46  0E11               	movlw	low _SETTINGS_ADDR
 22636  014C48  6EF6               	movwf	tblptrl,c
 22637  014C4A                     	if	1	;There is more than 1 active tblptr byte
 22638  014C4A  0EFF               	movlw	high _SETTINGS_ADDR
 22639  014C4C  6EF7               	movwf	tblptrh,c
 22640  014C4E                     	endif
 22641  014C4E                     	if	1	;There are 3 active tblptr bytes
 22642  014C4E  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 22643  014C50  6EF8               	movwf	tblptru,c
 22644  014C52                     	endif
 22645  014C52  0009               	tblrd		*+
 22646  014C54  CFF5 F12C          	movff	tablat,??_SaveToFlash+4
 22647  014C58  0009               	tblrd		*+
 22648  014C5A  CFF5 F12D          	movff	tablat,??_SaveToFlash+5
 22649  014C5E  0009               	tblrd		*+
 22650  014C60  CFF5 F12E          	movff	tablat,??_SaveToFlash+6
 22651  014C64  0009               	tblrd		*+
 22652  014C66  CFF5 F12F          	movff	tablat,??_SaveToFlash+7
 22653  014C6A  0101               	movlb	1	; () banked
 22654  014C6C  5128               	movf	??_SaveToFlash& (0+255),w,b
 22655  014C6E  0101               	movlb	1	; () banked
 22656  014C70  252C               	addwf	(??_SaveToFlash+4)& (0+255),w,b
 22657  014C72  0101               	movlb	1	; () banked
 22658  014C74  6F30               	movwf	(??_SaveToFlash+8)& (0+255),b
 22659  014C76  0101               	movlb	1	; () banked
 22660  014C78  5129               	movf	(??_SaveToFlash+1)& (0+255),w,b
 22661  014C7A  0101               	movlb	1	; () banked
 22662  014C7C  212D               	addwfc	(??_SaveToFlash+5)& (0+255),w,b
 22663  014C7E  0101               	movlb	1	; () banked
 22664  014C80  6F31               	movwf	(??_SaveToFlash+9)& (0+255),b
 22665  014C82  0101               	movlb	1	; () banked
 22666  014C84  512A               	movf	(??_SaveToFlash+2)& (0+255),w,b
 22667  014C86  0101               	movlb	1	; () banked
 22668  014C88  212E               	addwfc	(??_SaveToFlash+6)& (0+255),w,b
 22669  014C8A  0101               	movlb	1	; () banked
 22670  014C8C  6F32               	movwf	(??_SaveToFlash+10)& (0+255),b
 22671  014C8E  0101               	movlb	1	; () banked
 22672  014C90  512B               	movf	(??_SaveToFlash+3)& (0+255),w,b
 22673  014C92  0101               	movlb	1	; () banked
 22674  014C94  212F               	addwfc	(??_SaveToFlash+7)& (0+255),w,b
 22675  014C96  0101               	movlb	1	; () banked
 22676  014C98  6F33               	movwf	(??_SaveToFlash+11)& (0+255),b
 22677  014C9A  0EFF               	movlw	255
 22678  014C9C  0101               	movlb	1	; () banked
 22679  014C9E  2530               	addwf	(??_SaveToFlash+8)& (0+255),w,b
 22680  014CA0  0101               	movlb	1	; () banked
 22681  014CA2  6F04               	movwf	EraseFlash@endaddr& (0+255),b
 22682  014CA4  0EFF               	movlw	255
 22683  014CA6  0101               	movlb	1	; () banked
 22684  014CA8  2131               	addwfc	(??_SaveToFlash+9)& (0+255),w,b
 22685  014CAA  0101               	movlb	1	; () banked
 22686  014CAC  6F05               	movwf	(EraseFlash@endaddr+1)& (0+255),b
 22687  014CAE  0EFF               	movlw	255
 22688  014CB0  0101               	movlb	1	; () banked
 22689  014CB2  2132               	addwfc	(??_SaveToFlash+10)& (0+255),w,b
 22690  014CB4  0101               	movlb	1	; () banked
 22691  014CB6  6F06               	movwf	(EraseFlash@endaddr+2)& (0+255),b
 22692  014CB8  0EFF               	movlw	255
 22693  014CBA  0101               	movlb	1	; () banked
 22694  014CBC  2133               	addwfc	(??_SaveToFlash+11)& (0+255),w,b
 22695  014CBE  0101               	movlb	1	; () banked
 22696  014CC0  6F07               	movwf	(EraseFlash@endaddr+3)& (0+255),b
 22697  014CC2  EC7A  F0D2         	call	_EraseFlash	;wreg free
 22698  014CC6                     l14486:
 22699  014CC6  0101               	movlb	1	; () banked
 22700  014CC8  513A               	movf	SaveToFlash@success& (0+255),w,b
 22701  014CCA  B4D8               	btfsc	status,2,c
 22702  014CCC  D6FD               	goto	l14460
 22703                           
 22704                           ; BSR set to: 1
 22705                           ;Persistence.c: 111: }
 22706                           ;Persistence.c: 112: }
 22707                           ;Persistence.c: 113: s_dacSettingsOriginal = s_dacSettings;
 22708                           
 22709                           ; BSR set to: 1
 22710  014CCE  EE22  F0D3         	lfsr	2,_s_dacSettings
 22711  014CD2  EE13  F000         	lfsr	1,_s_dacSettingsOriginal
 22712  014CD6  0E14               	movlw	20
 22713  014CD8                     u16801:
 22714  014CD8  CFDE FFE6          	movff	postinc2,postinc1
 22715  014CDC  2EE8               	decfsz	wreg,f,c
 22716  014CDE  D7FC               	goto	u16801
 22717                           
 22718                           ; BSR set to: 1
 22719                           ;Persistence.c: 114: RefreshLine1Ex("Stored          ");
 22720  014CE0  0EFF               	movlw	high STR_5
 22721  014CE2  0101               	movlb	1	; () banked
 22722  014CE4  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 22723  014CE6  0E93               	movlw	low STR_5
 22724  014CE8  0101               	movlb	1	; () banked
 22725  014CEA  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 22726  014CEC  EC94  F0DC         	call	_RefreshLine1Ex	;wreg free
 22727                           
 22728                           ;Persistence.c: 115: }
 22729  014CF0  0012               	return	
 22730  014CF2                     l14492:
 22731                           
 22732                           ;Persistence.c: 116: else
 22733                           ;Persistence.c: 117: {
 22734                           ;Persistence.c: 118: RefreshLine1Ex("No change       ");
 22735  014CF2  0EFF               	movlw	high STR_6
 22736  014CF4  0101               	movlb	1	; () banked
 22737  014CF6  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 22738  014CF8  0EA4               	movlw	low STR_6
 22739  014CFA  0101               	movlb	1	; () banked
 22740  014CFC  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 22741  014CFE  EC94  F0DC         	call	_RefreshLine1Ex	;wreg free
 22742  014D02  0012               	return	
 22743  014D04                     __end_of_SaveToFlash:
 22744                           	opt stack 0
 22745                           tblptru	equ	0xFF8
 22746                           tblptrh	equ	0xFF7
 22747                           tblptrl	equ	0xFF6
 22748                           tablat	equ	0xFF5
 22749                           prodh	equ	0xFF4
 22750                           prodl	equ	0xFF3
 22751                           intcon	equ	0xFF2
 22752                           postinc0	equ	0xFEE
 22753                           wreg	equ	0xFE8
 22754                           indf1	equ	0xFE7
 22755                           postinc1	equ	0xFE6
 22756                           postdec1	equ	0xFE5
 22757                           fsr1h	equ	0xFE2
 22758                           fsr1l	equ	0xFE1
 22759                           indf2	equ	0xFDF
 22760                           postinc2	equ	0xFDE
 22761                           postdec2	equ	0xFDD
 22762                           fsr2h	equ	0xFDA
 22763                           fsr2l	equ	0xFD9
 22764                           status	equ	0xFD8
 22765                           
 22766 ;; *************** function _memcmp *****************
 22767 ;; Defined at:
 22768 ;;		line 3 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcmp.c"
 22769 ;; Parameters:    Size  Location     Type
 22770 ;;  s1              2    0[BANK1 ] PTR const void 
 22771 ;;		 -> IR_VOLUME_DOWN(4), IR_VOLUME_UP(4), IR_POWER_OFF(3), IR_POWER_ON(3), 
 22772 ;;		 -> s_dacSettingsOriginal(20), s_dacSettingsTmp(20), 
 22773 ;;  s2              2    2[BANK1 ] PTR const void 
 22774 ;;		 -> s_irCode(16), s_dacSettings(20), 
 22775 ;;  n               2    4[BANK1 ] unsigned int 
 22776 ;; Auto vars:     Size  Location     Type
 22777 ;;		None
 22778 ;; Return value:  Size  Location     Type
 22779 ;;                  2    0[BANK1 ] int 
 22780 ;; Registers used:
 22781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22782 ;; Tracked objects:
 22783 ;;		On entry : 0/0
 22784 ;;		On exit  : 0/0
 22785 ;;		Unchanged: 0/0
 22786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22787 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22789 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22790 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22791 ;;Total ram usage:        9 bytes
 22792 ;; Hardware stack levels used:    1
 22793 ;; Hardware stack levels required when called:   10
 22794 ;; This function calls:
 22795 ;;		Nothing
 22796 ;; This function is called by:
 22797 ;;		_SaveToFlash
 22798 ;; This function uses a non-reentrant model
 22799 ;;
 22800                           
 22801                           	psect	text38
 22802  019CC4                     __ptext38:
 22803                           	opt stack 0
 22804  019CC4                     _memcmp:
 22805                           	opt stack 17
 22806                           
 22807                           ;incstack = 0
 22808  019CC4  D052               	goto	l13298
 22809  019CC6                     l13290:
 22810  019CC6  C102  FFD9         	movff	memcmp@s2,fsr2l
 22811  019CCA  C103  FFDA         	movff	memcmp@s2+1,fsr2h
 22812  019CCE  50DF               	movf	indf2,w,c
 22813  019CD0  0101               	movlb	1	; () banked
 22814  019CD2  6F06               	movwf	??_memcmp& (0+255),b
 22815  019CD4  0101               	movlb	1	; () banked
 22816  019CD6  C100  FFF6         	movff	memcmp@s1,tblptrl
 22817  019CDA  0101               	movlb	1	; () banked
 22818  019CDC  C101  FFF7         	movff	memcmp@s1+1,tblptrh
 22819  019CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 22820  019CE2  6EF8               	movwf	tblptru,c
 22821  019CE4  0E0F               	movlw	(high __ramtop+-1)
 22822  019CE6  64F7               	cpfsgt	tblptrh,c
 22823  019CE8  D003               	bra	u15127
 22824  019CEA  0008               	tblrd		*
 22825  019CEC  50F5               	movf	tablat,w,c
 22826  019CEE  D005               	bra	u15120
 22827  019CF0                     u15127:
 22828  019CF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 22829  019CF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 22830  019CF8  50EF               	movf	indf0,w,c
 22831  019CFA                     u15120:
 22832  019CFA  0101               	movlb	1	; () banked
 22833  019CFC  1906               	xorwf	??_memcmp& (0+255),w,b
 22834  019CFE  B4D8               	btfsc	status,2,c
 22835  019D00  D02E               	goto	l13296
 22836                           
 22837                           ; BSR set to: 1
 22838  019D02  C102  FFD9         	movff	memcmp@s2,fsr2l
 22839  019D06  C103  FFDA         	movff	memcmp@s2+1,fsr2h
 22840  019D0A  50DF               	movf	indf2,w,c
 22841  019D0C  0101               	movlb	1	; () banked
 22842  019D0E  6F06               	movwf	??_memcmp& (0+255),b
 22843  019D10  6B07               	clrf	(??_memcmp+1)& (0+255),b
 22844  019D12  0101               	movlb	1	; () banked
 22845  019D14  1F06               	comf	??_memcmp& (0+255),f,b
 22846  019D16  1F07               	comf	(??_memcmp+1)& (0+255),f,b
 22847  019D18  4B06               	infsnz	??_memcmp& (0+255),f,b
 22848  019D1A  2B07               	incf	(??_memcmp+1)& (0+255),f,b
 22849  019D1C  0101               	movlb	1	; () banked
 22850  019D1E  C100  FFF6         	movff	memcmp@s1,tblptrl
 22851  019D22  0101               	movlb	1	; () banked
 22852  019D24  C101  FFF7         	movff	memcmp@s1+1,tblptrh
 22853  019D28  0E00               	movlw	low (__mediumconst shr (0+16))
 22854  019D2A  6EF8               	movwf	tblptru,c
 22855  019D2C  0E0F               	movlw	(high __ramtop+-1)
 22856  019D2E  64F7               	cpfsgt	tblptrh,c
 22857  019D30  D003               	bra	u15147
 22858  019D32  0008               	tblrd		*
 22859  019D34  50F5               	movf	tablat,w,c
 22860  019D36  D005               	bra	u15140
 22861  019D38                     u15147:
 22862  019D38  CFF6 FFE9          	movff	tblptrl,fsr0l
 22863  019D3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22864  019D40  50EF               	movf	indf0,w,c
 22865  019D42                     u15140:
 22866  019D42  0101               	movlb	1	; () banked
 22867  019D44  6F08               	movwf	(??_memcmp+2)& (0+255),b
 22868  019D46  0101               	movlb	1	; () banked
 22869  019D48  5108               	movf	(??_memcmp+2)& (0+255),w,b
 22870  019D4A  0101               	movlb	1	; () banked
 22871  019D4C  2506               	addwf	??_memcmp& (0+255),w,b
 22872  019D4E  0101               	movlb	1	; () banked
 22873  019D50  6F00               	movwf	?_memcmp& (0+255),b
 22874  019D52  0E00               	movlw	0
 22875  019D54  0101               	movlb	1	; () banked
 22876  019D56  2107               	addwfc	(??_memcmp+1)& (0+255),w,b
 22877  019D58  0101               	movlb	1	; () banked
 22878  019D5A  6F01               	movwf	(?_memcmp+1)& (0+255),b
 22879  019D5C  0012               	return	
 22880  019D5E                     l13296:
 22881                           
 22882                           ; BSR set to: 1
 22883  019D5E  0101               	movlb	1	; () banked
 22884  019D60  4B00               	infsnz	memcmp@s1& (0+255),f,b
 22885  019D62  2B01               	incf	(memcmp@s1+1)& (0+255),f,b
 22886  019D64  0101               	movlb	1	; () banked
 22887  019D66  4B02               	infsnz	memcmp@s2& (0+255),f,b
 22888  019D68  2B03               	incf	(memcmp@s2+1)& (0+255),f,b
 22889  019D6A                     l13298:
 22890  019D6A  0101               	movlb	1	; () banked
 22891  019D6C  0704               	decf	memcmp@n& (0+255),f,b
 22892  019D6E  A0D8               	btfss	status,0,c
 22893  019D70  0705               	decf	(memcmp@n+1)& (0+255),f,b
 22894  019D72  0101               	movlb	1	; () banked
 22895  019D74  2904               	incf	memcmp@n& (0+255),w,b
 22896  019D76  B4D8               	btfsc	status,2,c
 22897  019D78  2905               	incf	(memcmp@n+1)& (0+255),w,b
 22898  019D7A  A4D8               	btfss	status,2,c
 22899  019D7C  D7A4               	goto	l13290
 22900                           
 22901                           ; BSR set to: 1
 22902                           
 22903                           ; BSR set to: 1
 22904  019D7E  0E00               	movlw	0
 22905  019D80  0101               	movlb	1	; () banked
 22906  019D82  6F01               	movwf	(?_memcmp+1)& (0+255),b
 22907  019D84  0E00               	movlw	0
 22908  019D86  0101               	movlb	1	; () banked
 22909  019D88  6F00               	movwf	?_memcmp& (0+255),b
 22910  019D8A  0012               	return	
 22911  019D8C                     __end_of_memcmp:
 22912                           	opt stack 0
 22913                           tblptru	equ	0xFF8
 22914                           tblptrh	equ	0xFF7
 22915                           tblptrl	equ	0xFF6
 22916                           tablat	equ	0xFF5
 22917                           prodh	equ	0xFF4
 22918                           prodl	equ	0xFF3
 22919                           intcon	equ	0xFF2
 22920                           indf0	equ	0xFEF
 22921                           postinc0	equ	0xFEE
 22922                           fsr0h	equ	0xFEA
 22923                           fsr0l	equ	0xFE9
 22924                           wreg	equ	0xFE8
 22925                           indf1	equ	0xFE7
 22926                           postinc1	equ	0xFE6
 22927                           postdec1	equ	0xFE5
 22928                           fsr1h	equ	0xFE2
 22929                           fsr1l	equ	0xFE1
 22930                           indf2	equ	0xFDF
 22931                           postinc2	equ	0xFDE
 22932                           postdec2	equ	0xFDD
 22933                           fsr2h	equ	0xFDA
 22934                           fsr2l	equ	0xFD9
 22935                           status	equ	0xFD8
 22936                           
 22937 ;; *************** function _WriteBlockFlash *****************
 22938 ;; Defined at:
 22939 ;;		line 119 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\WriteBlockFlash.c"
 22940 ;; Parameters:    Size  Location     Type
 22941 ;;  startaddr       4    0[BANK1 ] unsigned long 
 22942 ;;  num_blocks      1    4[BANK1 ] unsigned char 
 22943 ;;  flash_array     2    5[BANK1 ] PTR unsigned char 
 22944 ;;		 -> s_dacSettings(20), 
 22945 ;; Auto vars:     Size  Location     Type
 22946 ;;  saddress        4   13[BANK1 ] unsigned long 
 22947 ;;  startptr        3    8[BANK1 ] PTR unsigned char 
 22948 ;;		 -> ROM(131063), 
 22949 ;;  flag            1   12[BANK1 ] unsigned char 
 22950 ;;  write_byte      1   11[BANK1 ] unsigned char 
 22951 ;; Return value:  Size  Location     Type
 22952 ;;		None               void
 22953 ;; Registers used:
 22954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22955 ;; Tracked objects:
 22956 ;;		On entry : 0/0
 22957 ;;		On exit  : 0/0
 22958 ;;		Unchanged: 0/0
 22959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22960 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22961 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22962 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22963 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22964 ;;Total ram usage:       17 bytes
 22965 ;; Hardware stack levels used:    1
 22966 ;; Hardware stack levels required when called:   10
 22967 ;; This function calls:
 22968 ;;		Nothing
 22969 ;; This function is called by:
 22970 ;;		_SaveToFlash
 22971 ;; This function uses a non-reentrant model
 22972 ;;
 22973                           
 22974                           	psect	text39
 22975  018336                     __ptext39:
 22976                           	opt stack 0
 22977  018336                     _WriteBlockFlash:
 22978                           	opt stack 17
 22979                           
 22980                           ; BSR set to: 1
 22981                           ;incstack = 0
 22982  018336  0E00               	movlw	0
 22983  018338  0101               	movlb	1	; () banked
 22984  01833A  6F0B               	movwf	WriteBlockFlash@write_byte& (0+255),b
 22985  01833C  0E00               	movlw	0
 22986  01833E  0101               	movlb	1	; () banked
 22987  018340  6F0C               	movwf	WriteBlockFlash@flag& (0+255),b
 22988                           
 22989                           ; BSR set to: 1
 22990  018342  0E06               	movlw	6
 22991  018344  0101               	movlb	1	; () banked
 22992  018346  6F07               	movwf	??_WriteBlockFlash& (0+255),b
 22993  018348                     u15165:
 22994  018348  90D8               	bcf	status,0,c
 22995  01834A  0101               	movlb	1	; () banked
 22996  01834C  3303               	rrcf	(WriteBlockFlash@startaddr+3)& (0+255),f,b
 22997  01834E  0101               	movlb	1	; () banked
 22998  018350  3302               	rrcf	(WriteBlockFlash@startaddr+2)& (0+255),f,b
 22999  018352  0101               	movlb	1	; () banked
 23000  018354  3301               	rrcf	(WriteBlockFlash@startaddr+1)& (0+255),f,b
 23001  018356  0101               	movlb	1	; () banked
 23002  018358  3300               	rrcf	WriteBlockFlash@startaddr& (0+255),f,b
 23003  01835A  0101               	movlb	1	; () banked
 23004  01835C  2F07               	decfsz	??_WriteBlockFlash& (0+255),f,b
 23005  01835E  D7F4               	goto	u15165
 23006                           
 23007                           ; BSR set to: 1
 23008  018360  0101               	movlb	1	; () banked
 23009  018362  0E06               	movlw	6
 23010  018364                     u15175:
 23011  018364  90D8               	bcf	status,0,c
 23012  018366  0101               	movlb	1	; () banked
 23013  018368  3700               	rlcf	WriteBlockFlash@startaddr& (0+255),f,b
 23014  01836A  0101               	movlb	1	; () banked
 23015  01836C  3701               	rlcf	(WriteBlockFlash@startaddr+1)& (0+255),f,b
 23016  01836E  0101               	movlb	1	; () banked
 23017  018370  3702               	rlcf	(WriteBlockFlash@startaddr+2)& (0+255),f,b
 23018  018372  0101               	movlb	1	; () banked
 23019  018374  3703               	rlcf	(WriteBlockFlash@startaddr+3)& (0+255),f,b
 23020  018376  2EE8               	decfsz	wreg,f,c
 23021  018378  D7F5               	goto	u15175
 23022                           
 23023                           ; BSR set to: 1
 23024  01837A  C100  F10D         	movff	WriteBlockFlash@startaddr,WriteBlockFlash@saddress
 23025  01837E  C101  F10E         	movff	WriteBlockFlash@startaddr+1,WriteBlockFlash@saddress+1
 23026  018382  C102  F10F         	movff	WriteBlockFlash@startaddr+2,WriteBlockFlash@saddress+2
 23027  018386  C103  F110         	movff	WriteBlockFlash@startaddr+3,WriteBlockFlash@saddress+3
 23028  01838A  D062               	goto	l13344
 23029  01838C                     l13312:
 23030                           
 23031                           ; BSR set to: 1
 23032  01838C  0101               	movlb	1	; () banked
 23033  01838E  C10F  F10A         	movff	WriteBlockFlash@saddress+2,WriteBlockFlash@startptr+2
 23034  018392  0101               	movlb	1	; () banked
 23035  018394  C10E  F109         	movff	WriteBlockFlash@saddress+1,WriteBlockFlash@startptr+1
 23036  018398  0101               	movlb	1	; () banked
 23037  01839A  C10D  F108         	movff	WriteBlockFlash@saddress,WriteBlockFlash@startptr
 23038                           
 23039                           ; BSR set to: 1
 23040  01839E  0E40               	movlw	64
 23041  0183A0  0101               	movlb	1	; () banked
 23042  0183A2  6F0B               	movwf	WriteBlockFlash@write_byte& (0+255),b
 23043  0183A4  D01D               	goto	l13322
 23044  0183A6                     l13316:
 23045                           
 23046                           ; BSR set to: 1
 23047  0183A6  C105  FFD9         	movff	WriteBlockFlash@flash_array,fsr2l
 23048  0183AA  C106  FFDA         	movff	WriteBlockFlash@flash_array+1,fsr2h
 23049  0183AE  50DF               	movf	indf2,w,c
 23050  0183B0  0101               	movlb	1	; () banked
 23051  0183B2  C108  FFF6         	movff	WriteBlockFlash@startptr,tblptrl
 23052  0183B6  0101               	movlb	1	; () banked
 23053  0183B8  C109  FFF7         	movff	WriteBlockFlash@startptr+1,tblptrh
 23054  0183BC  0101               	movlb	1	; () banked
 23055  0183BE  C10A  FFF8         	movff	WriteBlockFlash@startptr+2,tblptru
 23056  0183C2  6EF5               	movwf	tablat,c
 23057  0183C4  000C               	tblwt		*
 23058                           
 23059                           ; BSR set to: 1
 23060  0183C6  0101               	movlb	1	; () banked
 23061  0183C8  4B05               	infsnz	WriteBlockFlash@flash_array& (0+255),f,b
 23062  0183CA  2B06               	incf	(WriteBlockFlash@flash_array+1)& (0+255),f,b
 23063                           
 23064                           ; BSR set to: 1
 23065  0183CC  0101               	movlb	1	; () banked
 23066  0183CE  0E01               	movlw	1
 23067  0183D0  0101               	movlb	1	; () banked
 23068  0183D2  2708               	addwf	WriteBlockFlash@startptr& (0+255),f,b
 23069  0183D4  0E00               	movlw	0
 23070  0183D6  0101               	movlb	1	; () banked
 23071  0183D8  2309               	addwfc	(WriteBlockFlash@startptr+1)& (0+255),f,b
 23072  0183DA  0E00               	movlw	0
 23073  0183DC  0101               	movlb	1	; () banked
 23074  0183DE  230A               	addwfc	(WriteBlockFlash@startptr+2)& (0+255),f,b
 23075  0183E0                     l13322:
 23076                           
 23077                           ; BSR set to: 1
 23078  0183E0  0101               	movlb	1	; () banked
 23079  0183E2  070B               	decf	WriteBlockFlash@write_byte& (0+255),f,b
 23080  0183E4  0101               	movlb	1	; () banked
 23081  0183E6  290B               	incf	WriteBlockFlash@write_byte& (0+255),w,b
 23082  0183E8  A4D8               	btfss	status,2,c
 23083  0183EA  D7DD               	goto	l13316
 23084                           
 23085                           ; BSR set to: 1
 23086                           
 23087                           ; BSR set to: 1
 23088  0183EC  0101               	movlb	1	; () banked
 23089  0183EE  C10F  F10A         	movff	WriteBlockFlash@saddress+2,WriteBlockFlash@startptr+2
 23090  0183F2  0101               	movlb	1	; () banked
 23091  0183F4  C10E  F109         	movff	WriteBlockFlash@saddress+1,WriteBlockFlash@startptr+1
 23092  0183F8  0101               	movlb	1	; () banked
 23093  0183FA  C10D  F108         	movff	WriteBlockFlash@saddress,WriteBlockFlash@startptr
 23094                           
 23095                           ; BSR set to: 1
 23096  0183FE  84A6               	bsf	4006,2,c	;volatile
 23097                           
 23098                           ; BSR set to: 1
 23099  018400  AEF2               	btfss	intcon,7,c	;volatile
 23100  018402  D004               	goto	l2145
 23101                           
 23102                           ; BSR set to: 1
 23103  018404  9EF2               	bcf	intcon,7,c	;volatile
 23104                           
 23105                           ; BSR set to: 1
 23106  018406  0E01               	movlw	1
 23107  018408  0101               	movlb	1	; () banked
 23108  01840A  6F0C               	movwf	WriteBlockFlash@flag& (0+255),b
 23109  01840C                     l2145:
 23110                           
 23111                           ; BSR set to: 1
 23112  01840C  0E55               	movlw	85
 23113  01840E  6EA7               	movwf	4007,c	;volatile
 23114  018410  0EAA               	movlw	170
 23115  018412  6EA7               	movwf	4007,c	;volatile
 23116                           
 23117                           ; BSR set to: 1
 23118  018414  82A6               	bsf	4006,1,c	;volatile
 23119                           
 23120                           ; BSR set to: 1
 23121  018416  94A6               	bcf	4006,2,c	;volatile
 23122  018418  0101               	movlb	1	; () banked
 23123  01841A  510C               	movf	WriteBlockFlash@flag& (0+255),w,b
 23124  01841C  B4D8               	btfsc	status,2,c
 23125  01841E  D004               	goto	l13342
 23126                           
 23127                           ; BSR set to: 1
 23128  018420  8EF2               	bsf	intcon,7,c	;volatile
 23129                           
 23130                           ; BSR set to: 1
 23131  018422  0E00               	movlw	0
 23132  018424  0101               	movlb	1	; () banked
 23133  018426  6F0C               	movwf	WriteBlockFlash@flag& (0+255),b
 23134  018428                     l13342:
 23135                           
 23136                           ; BSR set to: 1
 23137  018428  0E40               	movlw	64
 23138  01842A  0101               	movlb	1	; () banked
 23139  01842C  250D               	addwf	WriteBlockFlash@saddress& (0+255),w,b
 23140  01842E  0101               	movlb	1	; () banked
 23141  018430  6F0D               	movwf	WriteBlockFlash@saddress& (0+255),b
 23142  018432  0E00               	movlw	0
 23143  018434  0101               	movlb	1	; () banked
 23144  018436  210E               	addwfc	(WriteBlockFlash@saddress+1)& (0+255),w,b
 23145  018438  0101               	movlb	1	; () banked
 23146  01843A  6F0E               	movwf	(WriteBlockFlash@saddress+1)& (0+255),b
 23147  01843C  0E00               	movlw	0
 23148  01843E  0101               	movlb	1	; () banked
 23149  018440  210F               	addwfc	(WriteBlockFlash@saddress+2)& (0+255),w,b
 23150  018442  0101               	movlb	1	; () banked
 23151  018444  6F0F               	movwf	(WriteBlockFlash@saddress+2)& (0+255),b
 23152  018446  0E00               	movlw	0
 23153  018448  0101               	movlb	1	; () banked
 23154  01844A  2110               	addwfc	(WriteBlockFlash@saddress+3)& (0+255),w,b
 23155  01844C  0101               	movlb	1	; () banked
 23156  01844E  6F10               	movwf	(WriteBlockFlash@saddress+3)& (0+255),b
 23157  018450                     l13344:
 23158                           
 23159                           ; BSR set to: 1
 23160  018450  0101               	movlb	1	; () banked
 23161  018452  0704               	decf	WriteBlockFlash@num_blocks& (0+255),f,b
 23162  018454  0101               	movlb	1	; () banked
 23163  018456  2904               	incf	WriteBlockFlash@num_blocks& (0+255),w,b
 23164  018458  B4D8               	btfsc	status,2,c
 23165                           
 23166                           ; BSR set to: 1
 23167                           
 23168                           ; BSR set to: 1
 23169  01845A  0012               	return	
 23170  01845C  D797               	goto	l13312
 23171  01845E                     __end_of_WriteBlockFlash:
 23172                           	opt stack 0
 23173                           tblptru	equ	0xFF8
 23174                           tblptrh	equ	0xFF7
 23175                           tblptrl	equ	0xFF6
 23176                           tablat	equ	0xFF5
 23177                           prodh	equ	0xFF4
 23178                           prodl	equ	0xFF3
 23179                           intcon	equ	0xFF2
 23180                           indf0	equ	0xFEF
 23181                           postinc0	equ	0xFEE
 23182                           fsr0h	equ	0xFEA
 23183                           fsr0l	equ	0xFE9
 23184                           wreg	equ	0xFE8
 23185                           indf1	equ	0xFE7
 23186                           postinc1	equ	0xFE6
 23187                           postdec1	equ	0xFE5
 23188                           fsr1h	equ	0xFE2
 23189                           fsr1l	equ	0xFE1
 23190                           indf2	equ	0xFDF
 23191                           postinc2	equ	0xFDE
 23192                           postdec2	equ	0xFDD
 23193                           fsr2h	equ	0xFDA
 23194                           fsr2l	equ	0xFD9
 23195                           status	equ	0xFD8
 23196                           
 23197 ;; *************** function _RefreshLine1 *****************
 23198 ;; Defined at:
 23199 ;;		line 7 in file "LCD.c"
 23200 ;; Parameters:    Size  Location     Type
 23201 ;;		None
 23202 ;; Auto vars:     Size  Location     Type
 23203 ;;		None
 23204 ;; Return value:  Size  Location     Type
 23205 ;;		None               void
 23206 ;; Registers used:
 23207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23208 ;; Tracked objects:
 23209 ;;		On entry : 0/0
 23210 ;;		On exit  : 0/0
 23211 ;;		Unchanged: 0/0
 23212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23217 ;;Total ram usage:        0 bytes
 23218 ;; Hardware stack levels used:    1
 23219 ;; Hardware stack levels required when called:   14
 23220 ;; This function calls:
 23221 ;;		_RefreshLine1Ex
 23222 ;; This function is called by:
 23223 ;;		_SaveToFlash
 23224 ;;		_UpdateMasterVolume
 23225 ;; This function uses a non-reentrant model
 23226 ;;
 23227                           
 23228                           	psect	text40
 23229  01B956                     __ptext40:
 23230                           	opt stack 0
 23231  01B956                     _RefreshLine1:
 23232                           	opt stack 14
 23233                           
 23234                           ;LCD.c: 9: RefreshLine1Ex(&dispbuf1);
 23235                           
 23236                           ; BSR set to: 1
 23237                           ;incstack = 0
 23238  01B956  0102               	movlb	2	; () banked
 23239  01B958  0E02               	movlw	high _dispbuf1
 23240  01B95A  0101               	movlb	1	; () banked
 23241  01B95C  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 23242  01B95E  0102               	movlb	2	; () banked
 23243  01B960  0E8B               	movlw	low _dispbuf1
 23244  01B962  0101               	movlb	1	; () banked
 23245  01B964  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 23246  01B966  EC94  F0DC         	call	_RefreshLine1Ex	;wreg free
 23247  01B96A  0012               	return	
 23248  01B96C                     __end_of_RefreshLine1:
 23249                           	opt stack 0
 23250                           tblptru	equ	0xFF8
 23251                           tblptrh	equ	0xFF7
 23252                           tblptrl	equ	0xFF6
 23253                           tablat	equ	0xFF5
 23254                           prodh	equ	0xFF4
 23255                           prodl	equ	0xFF3
 23256                           intcon	equ	0xFF2
 23257                           indf0	equ	0xFEF
 23258                           postinc0	equ	0xFEE
 23259                           fsr0h	equ	0xFEA
 23260                           fsr0l	equ	0xFE9
 23261                           wreg	equ	0xFE8
 23262                           indf1	equ	0xFE7
 23263                           postinc1	equ	0xFE6
 23264                           postdec1	equ	0xFE5
 23265                           fsr1h	equ	0xFE2
 23266                           fsr1l	equ	0xFE1
 23267                           indf2	equ	0xFDF
 23268                           postinc2	equ	0xFDE
 23269                           postdec2	equ	0xFDD
 23270                           fsr2h	equ	0xFDA
 23271                           fsr2l	equ	0xFD9
 23272                           status	equ	0xFD8
 23273                           
 23274 ;; *************** function _RefreshLine1Ex *****************
 23275 ;; Defined at:
 23276 ;;		line 18 in file "LCD.c"
 23277 ;; Parameters:    Size  Location     Type
 23278 ;;  line            2    3[BANK1 ] PTR const unsigned char 
 23279 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
 23280 ;;		 -> STR_2(17), dispbuf1(17), 
 23281 ;; Auto vars:     Size  Location     Type
 23282 ;;		None
 23283 ;; Return value:  Size  Location     Type
 23284 ;;		None               void
 23285 ;; Registers used:
 23286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23287 ;; Tracked objects:
 23288 ;;		On entry : 0/0
 23289 ;;		On exit  : 0/0
 23290 ;;		Unchanged: 0/0
 23291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23292 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23295 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23296 ;;Total ram usage:        2 bytes
 23297 ;; Hardware stack levels used:    1
 23298 ;; Hardware stack levels required when called:   13
 23299 ;; This function calls:
 23300 ;;		_PutsSLCD
 23301 ;;		_SLCDSetDDRamAddr
 23302 ;; This function is called by:
 23303 ;;		_RefreshLine1
 23304 ;;		_SaveToFlash
 23305 ;; This function uses a non-reentrant model
 23306 ;;
 23307                           
 23308                           	psect	text41
 23309  01B928                     __ptext41:
 23310                           	opt stack 0
 23311  01B928                     _RefreshLine1Ex:
 23312                           	opt stack 14
 23313                           
 23314                           ;LCD.c: 20: SLCDSetDDRamAddr(0x00);
 23315                           
 23316                           ;incstack = 0
 23317  01B928  0E00               	movlw	0
 23318  01B92A  EC7B  F0DC         	call	_SLCDSetDDRamAddr
 23319                           
 23320                           ;LCD.c: 21: PutsSLCD(line);
 23321  01B92E  0101               	movlb	1	; () banked
 23322  01B930  C104  F102         	movff	RefreshLine1Ex@line+1,PutsSLCD@buffer+1
 23323  01B934  0101               	movlb	1	; () banked
 23324  01B936  C103  F101         	movff	RefreshLine1Ex@line,PutsSLCD@buffer
 23325  01B93A  EC12  F0D6         	call	_PutsSLCD	;wreg free
 23326  01B93E  0012               	return	
 23327  01B940                     __end_of_RefreshLine1Ex:
 23328                           	opt stack 0
 23329                           tblptru	equ	0xFF8
 23330                           tblptrh	equ	0xFF7
 23331                           tblptrl	equ	0xFF6
 23332                           tablat	equ	0xFF5
 23333                           prodh	equ	0xFF4
 23334                           prodl	equ	0xFF3
 23335                           intcon	equ	0xFF2
 23336                           indf0	equ	0xFEF
 23337                           postinc0	equ	0xFEE
 23338                           fsr0h	equ	0xFEA
 23339                           fsr0l	equ	0xFE9
 23340                           wreg	equ	0xFE8
 23341                           indf1	equ	0xFE7
 23342                           postinc1	equ	0xFE6
 23343                           postdec1	equ	0xFE5
 23344                           fsr1h	equ	0xFE2
 23345                           fsr1l	equ	0xFE1
 23346                           indf2	equ	0xFDF
 23347                           postinc2	equ	0xFDE
 23348                           postdec2	equ	0xFDD
 23349                           fsr2h	equ	0xFDA
 23350                           fsr2l	equ	0xFD9
 23351                           status	equ	0xFD8
 23352                           
 23353 ;; *************** function _PutsSLCD *****************
 23354 ;; Defined at:
 23355 ;;		line 16 in file "SLCD/putsslcd.c"
 23356 ;; Parameters:    Size  Location     Type
 23357 ;;  buffer          2    1[BANK1 ] PTR const unsigned char 
 23358 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 23359 ;;		 -> STR_9(17), STR_8(17), STR_6(17), STR_5(17), 
 23360 ;;		 -> STR_4(17), STR_3(17), STR_2(17), dispbuf2(17), 
 23361 ;;		 -> dispbuf1(17), 
 23362 ;; Auto vars:     Size  Location     Type
 23363 ;;		None
 23364 ;; Return value:  Size  Location     Type
 23365 ;;		None               void
 23366 ;; Registers used:
 23367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23368 ;; Tracked objects:
 23369 ;;		On entry : 0/0
 23370 ;;		On exit  : 0/0
 23371 ;;		Unchanged: 0/0
 23372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23373 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23376 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23377 ;;Total ram usage:        2 bytes
 23378 ;; Hardware stack levels used:    1
 23379 ;; Hardware stack levels required when called:   12
 23380 ;; This function calls:
 23381 ;;		_BusySLCD
 23382 ;;		_WriteDataSLCD
 23383 ;; This function is called by:
 23384 ;;		_RefreshLine1Ex
 23385 ;;		_RefreshLine2Ex
 23386 ;; This function uses a non-reentrant model
 23387 ;;
 23388                           
 23389                           	psect	text42
 23390  01AC24                     __ptext42:
 23391                           	opt stack 0
 23392  01AC24                     _PutsSLCD:
 23393                           	opt stack 15
 23394                           
 23395                           ;putsslcd.c: 18: while(*buffer)
 23396                           
 23397                           ;incstack = 0
 23398  01AC24  D01D               	goto	l10824
 23399  01AC26                     l10818:
 23400  01AC26  ECEF  F0DB         	call	_BusySLCD	;wreg free
 23401  01AC2A  0900               	iorlw	0
 23402  01AC2C  A4D8               	btfss	status,2,c
 23403  01AC2E  D7FB               	goto	l10818
 23404                           
 23405                           ;putsslcd.c: 21: WriteDataSLCD(*buffer);
 23406  01AC30  0101               	movlb	1	; () banked
 23407  01AC32  C101  FFF6         	movff	PutsSLCD@buffer,tblptrl
 23408  01AC36  0101               	movlb	1	; () banked
 23409  01AC38  C102  FFF7         	movff	PutsSLCD@buffer+1,tblptrh
 23410  01AC3C  0E00               	movlw	low (__mediumconst shr (0+16))
 23411  01AC3E  6EF8               	movwf	tblptru,c
 23412  01AC40  0E0F               	movlw	(high __ramtop+-1)
 23413  01AC42  64F7               	cpfsgt	tblptrh,c
 23414  01AC44  D003               	bra	u11627
 23415  01AC46  0008               	tblrd		*
 23416  01AC48  50F5               	movf	tablat,w,c
 23417  01AC4A  D005               	bra	u11620
 23418  01AC4C                     u11627:
 23419  01AC4C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23420  01AC50  CFF7 FFEA          	movff	tblptrh,fsr0h
 23421  01AC54  50EF               	movf	indf0,w,c
 23422  01AC56                     u11620:
 23423  01AC56  ECDE  F0DB         	call	_WriteDataSLCD
 23424                           
 23425                           ;putsslcd.c: 22: buffer++;
 23426  01AC5A  0101               	movlb	1	; () banked
 23427  01AC5C  4B01               	infsnz	PutsSLCD@buffer& (0+255),f,b
 23428  01AC5E  2B02               	incf	(PutsSLCD@buffer+1)& (0+255),f,b
 23429  01AC60                     l10824:
 23430  01AC60  0101               	movlb	1	; () banked
 23431  01AC62  C101  FFF6         	movff	PutsSLCD@buffer,tblptrl
 23432  01AC66  0101               	movlb	1	; () banked
 23433  01AC68  C102  FFF7         	movff	PutsSLCD@buffer+1,tblptrh
 23434  01AC6C  0E00               	movlw	low (__mediumconst shr (0+16))
 23435  01AC6E  6EF8               	movwf	tblptru,c
 23436  01AC70  0E0F               	movlw	(high __ramtop+-1)
 23437  01AC72  64F7               	cpfsgt	tblptrh,c
 23438  01AC74  D003               	bra	u11637
 23439  01AC76  0008               	tblrd		*
 23440  01AC78  50F5               	movf	tablat,w,c
 23441  01AC7A  D005               	bra	u11630
 23442  01AC7C                     u11637:
 23443  01AC7C  CFF6 FFE9          	movff	tblptrl,fsr0l
 23444  01AC80  CFF7 FFEA          	movff	tblptrh,fsr0h
 23445  01AC84  50EF               	movf	indf0,w,c
 23446  01AC86                     u11630:
 23447  01AC86  0900               	iorlw	0
 23448  01AC88  B4D8               	btfsc	status,2,c
 23449                           
 23450                           ;putsslcd.c: 23: }
 23451                           ;putsslcd.c: 24: return;
 23452  01AC8A  0012               	return	
 23453  01AC8C  D7CC               	goto	l10818
 23454  01AC8E                     __end_of_PutsSLCD:
 23455                           	opt stack 0
 23456                           tblptru	equ	0xFF8
 23457                           tblptrh	equ	0xFF7
 23458                           tblptrl	equ	0xFF6
 23459                           tablat	equ	0xFF5
 23460                           prodh	equ	0xFF4
 23461                           prodl	equ	0xFF3
 23462                           intcon	equ	0xFF2
 23463                           indf0	equ	0xFEF
 23464                           postinc0	equ	0xFEE
 23465                           fsr0h	equ	0xFEA
 23466                           fsr0l	equ	0xFE9
 23467                           wreg	equ	0xFE8
 23468                           indf1	equ	0xFE7
 23469                           postinc1	equ	0xFE6
 23470                           postdec1	equ	0xFE5
 23471                           fsr1h	equ	0xFE2
 23472                           fsr1l	equ	0xFE1
 23473                           indf2	equ	0xFDF
 23474                           postinc2	equ	0xFDE
 23475                           postdec2	equ	0xFDD
 23476                           fsr2h	equ	0xFDA
 23477                           fsr2l	equ	0xFD9
 23478                           status	equ	0xFD8
 23479                           
 23480 ;; *************** function _WriteDataSLCD *****************
 23481 ;; Defined at:
 23482 ;;		line 16 in file "SLCD/writdata.c"
 23483 ;; Parameters:    Size  Location     Type
 23484 ;;  data            1    wreg     unsigned char 
 23485 ;; Auto vars:     Size  Location     Type
 23486 ;;  data            1    0[BANK1 ] unsigned char 
 23487 ;; Return value:  Size  Location     Type
 23488 ;;		None               void
 23489 ;; Registers used:
 23490 ;;		wreg, status,2, cstack
 23491 ;; Tracked objects:
 23492 ;;		On entry : 0/0
 23493 ;;		On exit  : 0/0
 23494 ;;		Unchanged: 0/0
 23495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23497 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23499 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23500 ;;Total ram usage:        1 bytes
 23501 ;; Hardware stack levels used:    1
 23502 ;; Hardware stack levels required when called:   11
 23503 ;; This function calls:
 23504 ;;		_DelayFor18TCY
 23505 ;; This function is called by:
 23506 ;;		_PutsSLCD
 23507 ;;		_PutrsSLCD
 23508 ;; This function uses a non-reentrant model
 23509 ;;
 23510                           
 23511                           	psect	text43
 23512  01B7BC                     __ptext43:
 23513                           	opt stack 0
 23514  01B7BC                     _WriteDataSLCD:
 23515                           	opt stack 15
 23516                           
 23517                           ;incstack = 0
 23518                           ;WriteDataSLCD@data stored from wreg
 23519  01B7BC  0101               	movlb	1	; () banked
 23520  01B7BE  6F00               	movwf	WriteDataSLCD@data& (0+255),b
 23521                           
 23522                           ; BSR set to: 1
 23523                           ;writdata.c: 19: TRISC = 0;
 23524  01B7C0  0E00               	movlw	0
 23525  01B7C2  6E94               	movwf	3988,c	;volatile
 23526                           
 23527                           ; BSR set to: 1
 23528                           ;writdata.c: 20: LATC = data;
 23529  01B7C4  C100  FF8B         	movff	WriteDataSLCD@data,3979	;volatile
 23530                           
 23531                           ; BSR set to: 1
 23532                           ;writdata.c: 22: LATAbits.LATA3 = 1;
 23533  01B7C8  8689               	bsf	3977,3,c	;volatile
 23534                           
 23535                           ; BSR set to: 1
 23536                           ;writdata.c: 23: LATAbits.LATA4 = 0;
 23537  01B7CA  9889               	bcf	3977,4,c	;volatile
 23538                           
 23539                           ; BSR set to: 1
 23540                           ;writdata.c: 24: DelayFor18TCY();
 23541  01B7CC  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 23542                           
 23543                           ;writdata.c: 25: LATAbits.LATA5 = 1;
 23544  01B7D0  8A89               	bsf	3977,5,c	;volatile
 23545                           
 23546                           ;writdata.c: 26: DelayFor18TCY();
 23547  01B7D2  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 23548                           
 23549                           ;writdata.c: 27: LATAbits.LATA5 = 0;
 23550  01B7D6  9A89               	bcf	3977,5,c	;volatile
 23551                           
 23552                           ;writdata.c: 28: LATAbits.LATA3 = 0;
 23553  01B7D8  9689               	bcf	3977,3,c	;volatile
 23554                           
 23555                           ;writdata.c: 29: TRISC = 0xff;
 23556  01B7DA  6894               	setf	3988,c	;volatile
 23557  01B7DC  0012               	return	
 23558  01B7DE                     __end_of_WriteDataSLCD:
 23559                           	opt stack 0
 23560                           tblptru	equ	0xFF8
 23561                           tblptrh	equ	0xFF7
 23562                           tblptrl	equ	0xFF6
 23563                           tablat	equ	0xFF5
 23564                           prodh	equ	0xFF4
 23565                           prodl	equ	0xFF3
 23566                           intcon	equ	0xFF2
 23567                           indf0	equ	0xFEF
 23568                           postinc0	equ	0xFEE
 23569                           fsr0h	equ	0xFEA
 23570                           fsr0l	equ	0xFE9
 23571                           wreg	equ	0xFE8
 23572                           indf1	equ	0xFE7
 23573                           postinc1	equ	0xFE6
 23574                           postdec1	equ	0xFE5
 23575                           fsr1h	equ	0xFE2
 23576                           fsr1l	equ	0xFE1
 23577                           indf2	equ	0xFDF
 23578                           postinc2	equ	0xFDE
 23579                           postdec2	equ	0xFDD
 23580                           fsr2h	equ	0xFDA
 23581                           fsr2l	equ	0xFD9
 23582                           status	equ	0xFD8
 23583                           
 23584 ;; *************** function _FindEmpty *****************
 23585 ;; Defined at:
 23586 ;;		line 61 in file "Persistence.c"
 23587 ;; Parameters:    Size  Location     Type
 23588 ;;  startAddr       4   16[BANK1 ] unsigned long 
 23589 ;; Auto vars:     Size  Location     Type
 23590 ;;  tmpAddr         2   38[BANK1 ] PTR unsigned char 
 23591 ;;		 -> s_dacSettingsTmp(20), 
 23592 ;;  blockEnd        2   32[BANK1 ] PTR unsigned char 
 23593 ;;		 -> s_dacSettingsTmp(20), 
 23594 ;;  addr            4   34[BANK1 ] unsigned long 
 23595 ;;  addrStop        4   28[BANK1 ] unsigned long 
 23596 ;; Return value:  Size  Location     Type
 23597 ;;                  4   16[BANK1 ] unsigned long 
 23598 ;; Registers used:
 23599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23600 ;; Tracked objects:
 23601 ;;		On entry : 0/0
 23602 ;;		On exit  : 0/0
 23603 ;;		Unchanged: 0/0
 23604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23605 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23606 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23607 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23608 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23609 ;;Total ram usage:       24 bytes
 23610 ;; Hardware stack levels used:    1
 23611 ;; Hardware stack levels required when called:   11
 23612 ;; This function calls:
 23613 ;;		_ReadFlash
 23614 ;; This function is called by:
 23615 ;;		_SaveToFlash
 23616 ;; This function uses a non-reentrant model
 23617 ;;
 23618                           
 23619                           	psect	text44
 23620  01745E                     __ptext44:
 23621                           	opt stack 0
 23622  01745E                     _FindEmpty:
 23623                           	opt stack 16
 23624                           
 23625                           ;Persistence.c: 63: unsigned long addrStop = SETTINGS_ADDR + SETTINGS_LEN;
 23626                           
 23627                           ;incstack = 0
 23628  01745E  0E15               	movlw	low _SETTINGS_LEN
 23629  017460  6EF6               	movwf	tblptrl,c
 23630  017462                     	if	1	;There is more than 1 active tblptr byte
 23631  017462  0EFF               	movlw	high _SETTINGS_LEN
 23632  017464  6EF7               	movwf	tblptrh,c
 23633  017466                     	endif
 23634  017466                     	if	1	;There are 3 active tblptr bytes
 23635  017466  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 23636  017468  6EF8               	movwf	tblptru,c
 23637  01746A                     	endif
 23638  01746A  0009               	tblrd		*+
 23639  01746C  CFF5 F114          	movff	tablat,??_FindEmpty
 23640  017470  0009               	tblrd		*+
 23641  017472  CFF5 F115          	movff	tablat,??_FindEmpty+1
 23642  017476  0009               	tblrd		*+
 23643  017478  CFF5 F116          	movff	tablat,??_FindEmpty+2
 23644  01747C  0009               	tblrd		*+
 23645  01747E  CFF5 F117          	movff	tablat,??_FindEmpty+3
 23646  017482  0E11               	movlw	low _SETTINGS_ADDR
 23647  017484  6EF6               	movwf	tblptrl,c
 23648  017486                     	if	1	;There is more than 1 active tblptr byte
 23649  017486  0EFF               	movlw	high _SETTINGS_ADDR
 23650  017488  6EF7               	movwf	tblptrh,c
 23651  01748A                     	endif
 23652  01748A                     	if	1	;There are 3 active tblptr bytes
 23653  01748A  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 23654  01748C  6EF8               	movwf	tblptru,c
 23655  01748E                     	endif
 23656  01748E  0009               	tblrd		*+
 23657  017490  CFF5 F118          	movff	tablat,??_FindEmpty+4
 23658  017494  0009               	tblrd		*+
 23659  017496  CFF5 F119          	movff	tablat,??_FindEmpty+5
 23660  01749A  0009               	tblrd		*+
 23661  01749C  CFF5 F11A          	movff	tablat,??_FindEmpty+6
 23662  0174A0  0009               	tblrd		*+
 23663  0174A2  CFF5 F11B          	movff	tablat,??_FindEmpty+7
 23664  0174A6  0101               	movlb	1	; () banked
 23665  0174A8  5114               	movf	??_FindEmpty& (0+255),w,b
 23666  0174AA  0101               	movlb	1	; () banked
 23667  0174AC  2518               	addwf	(??_FindEmpty+4)& (0+255),w,b
 23668  0174AE  0101               	movlb	1	; () banked
 23669  0174B0  6F1C               	movwf	FindEmpty@addrStop& (0+255),b
 23670  0174B2  0101               	movlb	1	; () banked
 23671  0174B4  5115               	movf	(??_FindEmpty+1)& (0+255),w,b
 23672  0174B6  0101               	movlb	1	; () banked
 23673  0174B8  2119               	addwfc	(??_FindEmpty+5)& (0+255),w,b
 23674  0174BA  0101               	movlb	1	; () banked
 23675  0174BC  6F1D               	movwf	(FindEmpty@addrStop+1)& (0+255),b
 23676  0174BE  0101               	movlb	1	; () banked
 23677  0174C0  5116               	movf	(??_FindEmpty+2)& (0+255),w,b
 23678  0174C2  0101               	movlb	1	; () banked
 23679  0174C4  211A               	addwfc	(??_FindEmpty+6)& (0+255),w,b
 23680  0174C6  0101               	movlb	1	; () banked
 23681  0174C8  6F1E               	movwf	(FindEmpty@addrStop+2)& (0+255),b
 23682  0174CA  0101               	movlb	1	; () banked
 23683  0174CC  5117               	movf	(??_FindEmpty+3)& (0+255),w,b
 23684  0174CE  0101               	movlb	1	; () banked
 23685  0174D0  211B               	addwfc	(??_FindEmpty+7)& (0+255),w,b
 23686  0174D2  0101               	movlb	1	; () banked
 23687  0174D4  6F1F               	movwf	(FindEmpty@addrStop+3)& (0+255),b
 23688                           
 23689                           ; BSR set to: 1
 23690                           ;Persistence.c: 64: unsigned long addr = startAddr;
 23691  0174D6  C110  F122         	movff	FindEmpty@startAddr,FindEmpty@addr
 23692  0174DA  C111  F123         	movff	FindEmpty@startAddr+1,FindEmpty@addr+1
 23693  0174DE  C112  F124         	movff	FindEmpty@startAddr+2,FindEmpty@addr+2
 23694  0174E2  C113  F125         	movff	FindEmpty@startAddr+3,FindEmpty@addr+3
 23695                           
 23696                           ;Persistence.c: 65: while(addr < addrStop)
 23697  0174E6  D05E               	goto	l1796
 23698  0174E8                     l13264:
 23699                           
 23700                           ; BSR set to: 1
 23701                           ;Persistence.c: 66: {
 23702                           ;Persistence.c: 67: ReadFlash(addr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_dacSet
      +                          tingsTmp);
 23703  0174E8  C122  F100         	movff	FindEmpty@addr,ReadFlash@startaddr
 23704  0174EC  C123  F101         	movff	FindEmpty@addr+1,ReadFlash@startaddr+1
 23705  0174F0  C124  F102         	movff	FindEmpty@addr+2,ReadFlash@startaddr+2
 23706  0174F4  C125  F103         	movff	FindEmpty@addr+3,ReadFlash@startaddr+3
 23707  0174F8  0E00               	movlw	0
 23708  0174FA  0101               	movlb	1	; () banked
 23709  0174FC  6F05               	movwf	(ReadFlash@num_bytes+1)& (0+255),b
 23710  0174FE  0E14               	movlw	20
 23711  017500  0101               	movlb	1	; () banked
 23712  017502  6F04               	movwf	ReadFlash@num_bytes& (0+255),b
 23713  017504  0102               	movlb	2	; () banked
 23714  017506  0E02               	movlw	high _s_dacSettingsTmp
 23715  017508  0101               	movlb	1	; () banked
 23716  01750A  6F07               	movwf	(ReadFlash@flash_array+1)& (0+255),b
 23717  01750C  0102               	movlb	2	; () banked
 23718  01750E  0EE7               	movlw	low _s_dacSettingsTmp
 23719  017510  0101               	movlb	1	; () banked
 23720  017512  6F06               	movwf	ReadFlash@flash_array& (0+255),b
 23721  017514  ECE2  F0D6         	call	_ReadFlash	;wreg free
 23722                           
 23723                           ;Persistence.c: 69: uint8_t *tmpAddr = (uint8_t *)&s_dacSettingsTmp;
 23724  017518  0102               	movlb	2	; () banked
 23725  01751A  0E02               	movlw	high _s_dacSettingsTmp
 23726  01751C  0101               	movlb	1	; () banked
 23727  01751E  6F27               	movwf	(FindEmpty@tmpAddr+1)& (0+255),b
 23728  017520  0102               	movlb	2	; () banked
 23729  017522  0EE7               	movlw	low _s_dacSettingsTmp
 23730  017524  0101               	movlb	1	; () banked
 23731  017526  6F26               	movwf	FindEmpty@tmpAddr& (0+255),b
 23732                           
 23733                           ; BSR set to: 1
 23734                           ;Persistence.c: 70: uint8_t *blockEnd = tmpAddr + sizeof(s_dacSettingsTmp);
 23735  017528  0E14               	movlw	20
 23736  01752A  0101               	movlb	1	; () banked
 23737  01752C  2526               	addwf	FindEmpty@tmpAddr& (0+255),w,b
 23738  01752E  0101               	movlb	1	; () banked
 23739  017530  6F20               	movwf	FindEmpty@blockEnd& (0+255),b
 23740  017532  0E00               	movlw	0
 23741  017534  0101               	movlb	1	; () banked
 23742  017536  2127               	addwfc	(FindEmpty@tmpAddr+1)& (0+255),w,b
 23743  017538  0101               	movlb	1	; () banked
 23744  01753A  6F21               	movwf	(FindEmpty@blockEnd+1)& (0+255),b
 23745                           
 23746                           ;Persistence.c: 71: while(tmpAddr < blockEnd)
 23747  01753C  D00B               	goto	l13276
 23748  01753E                     l13270:
 23749                           
 23750                           ; BSR set to: 1
 23751                           ;Persistence.c: 72: {
 23752                           ;Persistence.c: 73: if (*tmpAddr != 0xFF) break;
 23753  01753E  C126  FFD9         	movff	FindEmpty@tmpAddr,fsr2l
 23754  017542  C127  FFDA         	movff	FindEmpty@tmpAddr+1,fsr2h
 23755  017546  50DF               	movf	indf2,w,c
 23756  017548  0AFF               	xorlw	255
 23757  01754A  A4D8               	btfss	status,2,c
 23758  01754C  D00D               	goto	l13278
 23759                           
 23760                           ; BSR set to: 1
 23761                           ;Persistence.c: 74: tmpAddr ++;
 23762                           
 23763                           ; BSR set to: 1
 23764                           
 23765                           ; BSR set to: 1
 23766  01754E  0101               	movlb	1	; () banked
 23767  017550  4B26               	infsnz	FindEmpty@tmpAddr& (0+255),f,b
 23768  017552  2B27               	incf	(FindEmpty@tmpAddr+1)& (0+255),f,b
 23769  017554                     l13276:
 23770                           
 23771                           ; BSR set to: 1
 23772  017554  0101               	movlb	1	; () banked
 23773  017556  5120               	movf	FindEmpty@blockEnd& (0+255),w,b
 23774  017558  0101               	movlb	1	; () banked
 23775  01755A  5D26               	subwf	FindEmpty@tmpAddr& (0+255),w,b
 23776  01755C  0101               	movlb	1	; () banked
 23777  01755E  5121               	movf	(FindEmpty@blockEnd+1)& (0+255),w,b
 23778  017560  0101               	movlb	1	; () banked
 23779  017562  5927               	subwfb	(FindEmpty@tmpAddr+1)& (0+255),w,b
 23780  017564  A0D8               	btfss	status,0,c
 23781  017566  D7EB               	goto	l13270
 23782  017568                     l13278:
 23783                           
 23784                           ; BSR set to: 1
 23785                           ;Persistence.c: 75: }
 23786                           ;Persistence.c: 76: if (tmpAddr == blockEnd) return addr;
 23787  017568  0101               	movlb	1	; () banked
 23788  01756A  5121               	movf	(FindEmpty@blockEnd+1)& (0+255),w,b
 23789  01756C  0101               	movlb	1	; () banked
 23790  01756E  1927               	xorwf	(FindEmpty@tmpAddr+1)& (0+255),w,b
 23791  017570  E104               	bnz	u15105
 23792  017572  0101               	movlb	1	; () banked
 23793  017574  5120               	movf	FindEmpty@blockEnd& (0+255),w,b
 23794  017576  0101               	movlb	1	; () banked
 23795  017578  1926               	xorwf	FindEmpty@tmpAddr& (0+255),w,b
 23796  01757A                     u15105:
 23797  01757A  A4D8               	btfss	status,2,c
 23798  01757C  D009               	goto	l13282
 23799                           
 23800                           ; BSR set to: 1
 23801  01757E  C122  F110         	movff	FindEmpty@addr,?_FindEmpty
 23802  017582  C123  F111         	movff	FindEmpty@addr+1,?_FindEmpty+1
 23803  017586  C124  F112         	movff	FindEmpty@addr+2,?_FindEmpty+2
 23804  01758A  C125  F113         	movff	FindEmpty@addr+3,?_FindEmpty+3
 23805  01758E  0012               	return	
 23806  017590                     l13282:
 23807                           
 23808                           ; BSR set to: 1
 23809                           ;Persistence.c: 78: addr += 0x40;
 23810  017590  0E40               	movlw	64
 23811  017592  0101               	movlb	1	; () banked
 23812  017594  2722               	addwf	FindEmpty@addr& (0+255),f,b
 23813  017596  0E00               	movlw	0
 23814  017598  0101               	movlb	1	; () banked
 23815  01759A  2323               	addwfc	(FindEmpty@addr+1)& (0+255),f,b
 23816  01759C  0101               	movlb	1	; () banked
 23817  01759E  2324               	addwfc	(FindEmpty@addr+2)& (0+255),f,b
 23818  0175A0  0101               	movlb	1	; () banked
 23819  0175A2  2325               	addwfc	(FindEmpty@addr+3)& (0+255),f,b
 23820  0175A4                     l1796:
 23821                           
 23822                           ; BSR set to: 1
 23823  0175A4  0101               	movlb	1	; () banked
 23824  0175A6  511C               	movf	FindEmpty@addrStop& (0+255),w,b
 23825  0175A8  0101               	movlb	1	; () banked
 23826  0175AA  5D22               	subwf	FindEmpty@addr& (0+255),w,b
 23827  0175AC  0101               	movlb	1	; () banked
 23828  0175AE  511D               	movf	(FindEmpty@addrStop+1)& (0+255),w,b
 23829  0175B0  0101               	movlb	1	; () banked
 23830  0175B2  5923               	subwfb	(FindEmpty@addr+1)& (0+255),w,b
 23831  0175B4  0101               	movlb	1	; () banked
 23832  0175B6  511E               	movf	(FindEmpty@addrStop+2)& (0+255),w,b
 23833  0175B8  0101               	movlb	1	; () banked
 23834  0175BA  5924               	subwfb	(FindEmpty@addr+2)& (0+255),w,b
 23835  0175BC  0101               	movlb	1	; () banked
 23836  0175BE  511F               	movf	(FindEmpty@addrStop+3)& (0+255),w,b
 23837  0175C0  0101               	movlb	1	; () banked
 23838  0175C2  5925               	subwfb	(FindEmpty@addr+3)& (0+255),w,b
 23839  0175C4  A0D8               	btfss	status,0,c
 23840  0175C6  D790               	goto	l13264
 23841                           
 23842                           ; BSR set to: 1
 23843                           ;Persistence.c: 79: }
 23844                           ;Persistence.c: 80: return 0;
 23845                           
 23846                           ; BSR set to: 1
 23847  0175C8  0E00               	movlw	0
 23848  0175CA  0101               	movlb	1	; () banked
 23849  0175CC  6F10               	movwf	?_FindEmpty& (0+255),b
 23850  0175CE  0E00               	movlw	0
 23851  0175D0  0101               	movlb	1	; () banked
 23852  0175D2  6F11               	movwf	(?_FindEmpty+1)& (0+255),b
 23853  0175D4  0E00               	movlw	0
 23854  0175D6  0101               	movlb	1	; () banked
 23855  0175D8  6F12               	movwf	(?_FindEmpty+2)& (0+255),b
 23856  0175DA  0E00               	movlw	0
 23857  0175DC  0101               	movlb	1	; () banked
 23858  0175DE  6F13               	movwf	(?_FindEmpty+3)& (0+255),b
 23859  0175E0  0012               	return	
 23860  0175E2                     __end_of_FindEmpty:
 23861                           	opt stack 0
 23862                           tblptru	equ	0xFF8
 23863                           tblptrh	equ	0xFF7
 23864                           tblptrl	equ	0xFF6
 23865                           tablat	equ	0xFF5
 23866                           prodh	equ	0xFF4
 23867                           prodl	equ	0xFF3
 23868                           intcon	equ	0xFF2
 23869                           indf0	equ	0xFEF
 23870                           postinc0	equ	0xFEE
 23871                           fsr0h	equ	0xFEA
 23872                           fsr0l	equ	0xFE9
 23873                           wreg	equ	0xFE8
 23874                           indf1	equ	0xFE7
 23875                           postinc1	equ	0xFE6
 23876                           postdec1	equ	0xFE5
 23877                           fsr1h	equ	0xFE2
 23878                           fsr1l	equ	0xFE1
 23879                           indf2	equ	0xFDF
 23880                           postinc2	equ	0xFDE
 23881                           postdec2	equ	0xFDD
 23882                           fsr2h	equ	0xFDA
 23883                           fsr2l	equ	0xFD9
 23884                           status	equ	0xFD8
 23885                           
 23886 ;; *************** function _EraseFlash *****************
 23887 ;; Defined at:
 23888 ;;		line 59 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\EraseFlash.c"
 23889 ;; Parameters:    Size  Location     Type
 23890 ;;  startaddr       4    0[BANK1 ] unsigned long 
 23891 ;;  endaddr         4    4[BANK1 ] unsigned long 
 23892 ;; Auto vars:     Size  Location     Type
 23893 ;;  flash_addr      4    9[BANK1 ] struct .
 23894 ;;  flag            1    8[BANK1 ] unsigned char 
 23895 ;; Return value:  Size  Location     Type
 23896 ;;		None               void
 23897 ;; Registers used:
 23898 ;;		wreg, status,2, status,0
 23899 ;; Tracked objects:
 23900 ;;		On entry : 0/0
 23901 ;;		On exit  : 0/0
 23902 ;;		Unchanged: 0/0
 23903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23904 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23905 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23907 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23908 ;;Total ram usage:       13 bytes
 23909 ;; Hardware stack levels used:    1
 23910 ;; Hardware stack levels required when called:   10
 23911 ;; This function calls:
 23912 ;;		Nothing
 23913 ;; This function is called by:
 23914 ;;		_SaveToFlash
 23915 ;; This function uses a non-reentrant model
 23916 ;;
 23917                           
 23918                           	psect	text45
 23919  01A4F4                     __ptext45:
 23920                           	opt stack 0
 23921  01A4F4                     _EraseFlash:
 23922                           	opt stack 17
 23923                           
 23924                           ; BSR set to: 1
 23925                           ;incstack = 0
 23926  01A4F4  0E00               	movlw	0
 23927  01A4F6  0101               	movlb	1	; () banked
 23928  01A4F8  6F08               	movwf	EraseFlash@flag& (0+255),b
 23929                           
 23930                           ; BSR set to: 1
 23931  01A4FA  C100  F109         	movff	EraseFlash@startaddr,EraseFlash@flash_addr
 23932  01A4FE  C101  F10A         	movff	EraseFlash@startaddr+1,EraseFlash@flash_addr+1
 23933  01A502  C102  F10B         	movff	EraseFlash@startaddr+2,EraseFlash@flash_addr+2
 23934  01A506  C103  F10C         	movff	EraseFlash@startaddr+3,EraseFlash@flash_addr+3
 23935  01A50A  D02B               	goto	l2112
 23936  01A50C                     l2113:
 23937                           
 23938                           ; BSR set to: 1
 23939  01A50C  C10B  FFF8         	movff	EraseFlash@flash_addr+2,tblptru	;volatile
 23940  01A510  C10A  FFF7         	movff	EraseFlash@flash_addr+1,tblptrh	;volatile
 23941  01A514  C109  FFF6         	movff	EraseFlash@flash_addr,tblptrl	;volatile
 23942  01A518  84A6               	bsf	4006,2,c	;volatile
 23943  01A51A  88A6               	bsf	4006,4,c	;volatile
 23944  01A51C  AEF2               	btfss	intcon,7,c	;volatile
 23945  01A51E  D004               	goto	l2114
 23946                           
 23947                           ; BSR set to: 1
 23948  01A520  9EF2               	bcf	intcon,7,c	;volatile
 23949                           
 23950                           ; BSR set to: 1
 23951  01A522  0E01               	movlw	1
 23952  01A524  0101               	movlb	1	; () banked
 23953  01A526  6F08               	movwf	EraseFlash@flag& (0+255),b
 23954  01A528                     l2114:
 23955                           
 23956                           ; BSR set to: 1
 23957  01A528  0E55               	movlw	85
 23958  01A52A  6EA7               	movwf	4007,c	;volatile
 23959  01A52C  0EAA               	movlw	170
 23960  01A52E  6EA7               	movwf	4007,c	;volatile
 23961                           
 23962                           ; BSR set to: 1
 23963  01A530  82A6               	bsf	4006,1,c	;volatile
 23964  01A532  0101               	movlb	1	; () banked
 23965  01A534  5108               	movf	EraseFlash@flag& (0+255),w,b
 23966  01A536  A4D8               	btfss	status,2,c
 23967                           
 23968                           ; BSR set to: 1
 23969  01A538  8EF2               	bsf	intcon,7,c	;volatile
 23970                           
 23971                           ; BSR set to: 1
 23972                           
 23973                           ; BSR set to: 1
 23974  01A53A  0E00               	movlw	0
 23975  01A53C  0101               	movlb	1	; () banked
 23976  01A53E  2509               	addwf	EraseFlash@flash_addr& (0+255),w,b
 23977  01A540  0101               	movlb	1	; () banked
 23978  01A542  6F09               	movwf	EraseFlash@flash_addr& (0+255),b
 23979  01A544  0E04               	movlw	4
 23980  01A546  0101               	movlb	1	; () banked
 23981  01A548  210A               	addwfc	(EraseFlash@flash_addr+1)& (0+255),w,b
 23982  01A54A  0101               	movlb	1	; () banked
 23983  01A54C  6F0A               	movwf	(EraseFlash@flash_addr+1)& (0+255),b
 23984  01A54E  0E00               	movlw	0
 23985  01A550  0101               	movlb	1	; () banked
 23986  01A552  210B               	addwfc	(EraseFlash@flash_addr+2)& (0+255),w,b
 23987  01A554  0101               	movlb	1	; () banked
 23988  01A556  6F0B               	movwf	(EraseFlash@flash_addr+2)& (0+255),b
 23989  01A558  0E00               	movlw	0
 23990  01A55A  0101               	movlb	1	; () banked
 23991  01A55C  210C               	addwfc	(EraseFlash@flash_addr+3)& (0+255),w,b
 23992  01A55E  0101               	movlb	1	; () banked
 23993  01A560  6F0C               	movwf	(EraseFlash@flash_addr+3)& (0+255),b
 23994  01A562                     l2112:
 23995                           
 23996                           ; BSR set to: 1
 23997  01A562  0101               	movlb	1	; () banked
 23998  01A564  5104               	movf	EraseFlash@endaddr& (0+255),w,b
 23999  01A566  0101               	movlb	1	; () banked
 24000  01A568  5D09               	subwf	EraseFlash@flash_addr& (0+255),w,b
 24001  01A56A  0101               	movlb	1	; () banked
 24002  01A56C  5105               	movf	(EraseFlash@endaddr+1)& (0+255),w,b
 24003  01A56E  0101               	movlb	1	; () banked
 24004  01A570  590A               	subwfb	(EraseFlash@flash_addr+1)& (0+255),w,b
 24005  01A572  0101               	movlb	1	; () banked
 24006  01A574  5106               	movf	(EraseFlash@endaddr+2)& (0+255),w,b
 24007  01A576  0101               	movlb	1	; () banked
 24008  01A578  590B               	subwfb	(EraseFlash@flash_addr+2)& (0+255),w,b
 24009  01A57A  0101               	movlb	1	; () banked
 24010  01A57C  5107               	movf	(EraseFlash@endaddr+3)& (0+255),w,b
 24011  01A57E  0101               	movlb	1	; () banked
 24012  01A580  590C               	subwfb	(EraseFlash@flash_addr+3)& (0+255),w,b
 24013  01A582  B0D8               	btfsc	status,0,c
 24014                           
 24015                           ; BSR set to: 1
 24016                           
 24017                           ; BSR set to: 1
 24018  01A584  0012               	return	
 24019  01A586  D7C2               	goto	l2113
 24020  01A588                     __end_of_EraseFlash:
 24021                           	opt stack 0
 24022                           tblptru	equ	0xFF8
 24023                           tblptrh	equ	0xFF7
 24024                           tblptrl	equ	0xFF6
 24025                           tablat	equ	0xFF5
 24026                           prodh	equ	0xFF4
 24027                           prodl	equ	0xFF3
 24028                           intcon	equ	0xFF2
 24029                           indf0	equ	0xFEF
 24030                           postinc0	equ	0xFEE
 24031                           fsr0h	equ	0xFEA
 24032                           fsr0l	equ	0xFE9
 24033                           wreg	equ	0xFE8
 24034                           indf1	equ	0xFE7
 24035                           postinc1	equ	0xFE6
 24036                           postdec1	equ	0xFE5
 24037                           fsr1h	equ	0xFE2
 24038                           fsr1l	equ	0xFE1
 24039                           indf2	equ	0xFDF
 24040                           postinc2	equ	0xFDE
 24041                           postdec2	equ	0xFDD
 24042                           fsr2h	equ	0xFDA
 24043                           fsr2l	equ	0xFD9
 24044                           status	equ	0xFD8
 24045                           
 24046 ;; *************** function _StackTask *****************
 24047 ;; Defined at:
 24048 ;;		line 203 in file "../tcpip/stack_task.c"
 24049 ;; Parameters:    Size  Location     Type
 24050 ;;		None
 24051 ;; Auto vars:     Size  Location     Type
 24052 ;;  tempLocalIP     4  173[BANK1 ] struct .
 24053 ;;  dataCount       2  171[BANK1 ] unsigned int 
 24054 ;;  cFrameType      1  178[BANK1 ] unsigned char 
 24055 ;;  cIPFrameType    1  177[BANK1 ] unsigned char 
 24056 ;; Return value:  Size  Location     Type
 24057 ;;		None               void
 24058 ;; Registers used:
 24059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24060 ;; Tracked objects:
 24061 ;;		On entry : 0/0
 24062 ;;		On exit  : 0/0
 24063 ;;		Unchanged: 0/0
 24064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 24065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24066 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24068 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24069 ;;Total ram usage:        8 bytes
 24070 ;; Hardware stack levels used:    1
 24071 ;; Hardware stack levels required when called:   17
 24072 ;; This function calls:
 24073 ;;		_ARPProcess
 24074 ;;		_IPGetHeader
 24075 ;;		_MACGetHeader
 24076 ;;		_TCPProcess
 24077 ;;		_TCPTick
 24078 ;; This function is called by:
 24079 ;;		_main
 24080 ;; This function uses a non-reentrant model
 24081 ;;
 24082                           
 24083                           	psect	text46
 24084  019B30                     __ptext46:
 24085                           	opt stack 0
 24086  019B30                     _StackTask:
 24087                           	opt stack 12
 24088                           
 24089                           ;stack_task.c: 205: uint16_t dataCount;
 24090                           ;stack_task.c: 206: TCPIP_UINT32_VAL tempLocalIP;
 24091                           ;stack_task.c: 207: uint8_t cFrameType;
 24092                           ;stack_task.c: 208: uint8_t cIPFrameType;
 24093                           ;stack_task.c: 295: TCPTick();
 24094                           
 24095                           ; BSR set to: 1
 24096                           ;incstack = 0
 24097  019B30  EC19  F08C         	call	_TCPTick	;wreg free
 24098  019B34                     l14710:
 24099                           
 24100                           ;stack_task.c: 304: {
 24101                           ;stack_task.c: 319: if(!MACGetHeader(&remoteNode.MACAddr, &cFrameType))
 24102  019B34  0102               	movlb	2	; () banked
 24103  019B36  0E02               	movlw	high (_remoteNode+4)
 24104  019B38  0101               	movlb	1	; () banked
 24105  019B3A  6F1F               	movwf	(MACGetHeader@remote+1)& (0+255),b
 24106  019B3C  0102               	movlb	2	; () banked
 24107  019B3E  0ECD               	movlw	low (_remoteNode+4)
 24108  019B40  0101               	movlb	1	; () banked
 24109  019B42  6F1E               	movwf	MACGetHeader@remote& (0+255),b
 24110  019B44  0101               	movlb	1	; () banked
 24111  019B46  0E01               	movlw	high StackTask@cFrameType
 24112  019B48  0101               	movlb	1	; () banked
 24113  019B4A  6F21               	movwf	(MACGetHeader@type+1)& (0+255),b
 24114  019B4C  0101               	movlb	1	; () banked
 24115  019B4E  0EB2               	movlw	low StackTask@cFrameType
 24116  019B50  0101               	movlb	1	; () banked
 24117  019B52  6F20               	movwf	MACGetHeader@type& (0+255),b
 24118  019B54  ECD9  F0C3         	call	_MACGetHeader	;wreg free
 24119  019B58  0900               	iorlw	0
 24120  019B5A  B4D8               	btfsc	status,2,c
 24121  019B5C  0012               	return	
 24122  019B5E  D044               	goto	l14726
 24123  019B60                     l14714:
 24124                           
 24125                           ;stack_task.c: 336: ARPProcess();
 24126  019B60  ECC9  F0BF         	call	_ARPProcess	;wreg free
 24127                           
 24128                           ;stack_task.c: 337: break;
 24129  019B64  D7E7               	goto	l14710
 24130  019B66                     l14716:
 24131                           
 24132                           ;stack_task.c: 340: if(!IPGetHeader(&tempLocalIP, &remoteNode, &cIPFrameType, &dataCount
      +                          ))
 24133  019B66  0101               	movlb	1	; () banked
 24134  019B68  0E01               	movlw	high StackTask@tempLocalIP
 24135  019B6A  0101               	movlb	1	; () banked
 24136  019B6C  6F33               	movwf	(IPGetHeader@localIP+1)& (0+255),b
 24137  019B6E  0101               	movlb	1	; () banked
 24138  019B70  0EAD               	movlw	low StackTask@tempLocalIP
 24139  019B72  0101               	movlb	1	; () banked
 24140  019B74  6F32               	movwf	IPGetHeader@localIP& (0+255),b
 24141  019B76  0102               	movlb	2	; () banked
 24142  019B78  0E02               	movlw	high _remoteNode
 24143  019B7A  0101               	movlb	1	; () banked
 24144  019B7C  6F35               	movwf	(IPGetHeader@remote+1)& (0+255),b
 24145  019B7E  0102               	movlb	2	; () banked
 24146  019B80  0EC9               	movlw	low _remoteNode
 24147  019B82  0101               	movlb	1	; () banked
 24148  019B84  6F34               	movwf	IPGetHeader@remote& (0+255),b
 24149  019B86  0101               	movlb	1	; () banked
 24150  019B88  0E01               	movlw	high StackTask@cIPFrameType
 24151  019B8A  0101               	movlb	1	; () banked
 24152  019B8C  6F37               	movwf	(IPGetHeader@protocol+1)& (0+255),b
 24153  019B8E  0101               	movlb	1	; () banked
 24154  019B90  0EB1               	movlw	low StackTask@cIPFrameType
 24155  019B92  0101               	movlb	1	; () banked
 24156  019B94  6F36               	movwf	IPGetHeader@protocol& (0+255),b
 24157  019B96  0101               	movlb	1	; () banked
 24158  019B98  0E01               	movlw	high StackTask@dataCount
 24159  019B9A  0101               	movlb	1	; () banked
 24160  019B9C  6F39               	movwf	(IPGetHeader@len+1)& (0+255),b
 24161  019B9E  0101               	movlb	1	; () banked
 24162  019BA0  0EAB               	movlw	low StackTask@dataCount
 24163  019BA2  0101               	movlb	1	; () banked
 24164  019BA4  6F38               	movwf	IPGetHeader@len& (0+255),b
 24165  019BA6  EC6A  F0BC         	call	_IPGetHeader	;wreg free
 24166  019BAA  0900               	iorlw	0
 24167  019BAC  B4D8               	btfsc	status,2,c
 24168  019BAE  D7C2               	goto	l14710
 24169                           
 24170                           ;stack_task.c: 378: if(cIPFrameType == (6u))
 24171                           
 24172                           ;stack_task.c: 341: break;
 24173  019BB0  0101               	movlb	1	; () banked
 24174  019BB2  51B1               	movf	StackTask@cIPFrameType& (0+255),w,b
 24175  019BB4  0A06               	xorlw	6
 24176  019BB6  A4D8               	btfss	status,2,c
 24177  019BB8  D7BD               	goto	l14710
 24178                           
 24179                           ; BSR set to: 1
 24180                           ;stack_task.c: 379: {
 24181                           ;stack_task.c: 380: TCPProcess(&remoteNode, &tempLocalIP, dataCount);
 24182  019BBA  0102               	movlb	2	; () banked
 24183  019BBC  0E02               	movlw	high _remoteNode
 24184  019BBE  0101               	movlb	1	; () banked
 24185  019BC0  6F7F               	movwf	(TCPProcess@remote+1)& (0+255),b
 24186  019BC2  0102               	movlb	2	; () banked
 24187  019BC4  0EC9               	movlw	low _remoteNode
 24188  019BC6  0101               	movlb	1	; () banked
 24189  019BC8  6F7E               	movwf	TCPProcess@remote& (0+255),b
 24190  019BCA  0101               	movlb	1	; () banked
 24191  019BCC  0E01               	movlw	high StackTask@tempLocalIP
 24192  019BCE  0101               	movlb	1	; () banked
 24193  019BD0  6F81               	movwf	(TCPProcess@localIP+1)& (0+255),b
 24194  019BD2  0101               	movlb	1	; () banked
 24195  019BD4  0EAD               	movlw	low StackTask@tempLocalIP
 24196  019BD6  0101               	movlb	1	; () banked
 24197  019BD8  6F80               	movwf	TCPProcess@localIP& (0+255),b
 24198  019BDA  C1AB  F182         	movff	StackTask@dataCount,TCPProcess@len
 24199  019BDE  C1AC  F183         	movff	StackTask@dataCount+1,TCPProcess@len+1
 24200  019BE2  EC44  F0B5         	call	_TCPProcess	;wreg free
 24201                           
 24202                           ;stack_task.c: 381: break;
 24203  019BE6  D7A6               	goto	l14710
 24204  019BE8                     l14726:
 24205  019BE8  0101               	movlb	1	; () banked
 24206  019BEA  51B2               	movf	StackTask@cFrameType& (0+255),w,b
 24207                           
 24208                           ; Switch size 1, requested type "space"
 24209                           ; Number of cases is 2, Range of values is 0 to 6
 24210                           ; switch strategies available:
 24211                           ; Name         Instructions Cycles
 24212                           ; simple_byte            7     4 (average)
 24213                           ;	Chosen strategy is simple_byte
 24214  019BEC  0A00               	xorlw	0	; case 0
 24215  019BEE  B4D8               	btfsc	status,2,c
 24216  019BF0  D7BA               	goto	l14716
 24217  019BF2  0A06               	xorlw	6	; case 6
 24218  019BF4  B4D8               	btfsc	status,2,c
 24219  019BF6  D7B4               	goto	l14714
 24220  019BF8  D79D               	goto	l14710
 24221  019BFA                     __end_of_StackTask:
 24222                           	opt stack 0
 24223                           tblptru	equ	0xFF8
 24224                           tblptrh	equ	0xFF7
 24225                           tblptrl	equ	0xFF6
 24226                           tablat	equ	0xFF5
 24227                           prodh	equ	0xFF4
 24228                           prodl	equ	0xFF3
 24229                           intcon	equ	0xFF2
 24230                           indf0	equ	0xFEF
 24231                           postinc0	equ	0xFEE
 24232                           fsr0h	equ	0xFEA
 24233                           fsr0l	equ	0xFE9
 24234                           wreg	equ	0xFE8
 24235                           indf1	equ	0xFE7
 24236                           postinc1	equ	0xFE6
 24237                           postdec1	equ	0xFE5
 24238                           fsr1h	equ	0xFE2
 24239                           fsr1l	equ	0xFE1
 24240                           indf2	equ	0xFDF
 24241                           postinc2	equ	0xFDE
 24242                           postdec2	equ	0xFDD
 24243                           fsr2h	equ	0xFDA
 24244                           fsr2l	equ	0xFD9
 24245                           status	equ	0xFD8
 24246                           
 24247 ;; *************** function _TCPTick *****************
 24248 ;; Defined at:
 24249 ;;		line 2323 in file "../tcpip/tcp.c"
 24250 ;; Parameters:    Size  Location     Type
 24251 ;;		None
 24252 ;; Auto vars:     Size  Location     Type
 24253 ;;  w               2  103[BANK1 ] unsigned int 
 24254 ;;  vFlags          1  102[BANK1 ] unsigned char 
 24255 ;;  hTCP            1  101[BANK1 ] unsigned char 
 24256 ;;  bRetransmit     1  100[BANK1 ] unsigned char 
 24257 ;;  bCloseSocket    1   99[BANK1 ] unsigned char 
 24258 ;; Return value:  Size  Location     Type
 24259 ;;		None               void
 24260 ;; Registers used:
 24261 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24262 ;; Tracked objects:
 24263 ;;		On entry : 0/0
 24264 ;;		On exit  : 0/0
 24265 ;;		Unchanged: 0/0
 24266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 24267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24268 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24269 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24270 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24271 ;;Total ram usage:       18 bytes
 24272 ;; Hardware stack levels used:    1
 24273 ;; Hardware stack levels required when called:   16
 24274 ;; This function calls:
 24275 ;;		_ARPIsResolved
 24276 ;;		_ARPResolve
 24277 ;;		_CloseSocket
 24278 ;;		_MACIsTxReady
 24279 ;;		_SendTCP
 24280 ;;		_SyncTCB
 24281 ;;		_SyncTCBStub
 24282 ;;		_TCPDisconnect
 24283 ;;		_TCPRAMCopy
 24284 ;;		_TickGet
 24285 ;;		_TickGetDiv256
 24286 ;;		___wmul
 24287 ;;		_memcpy
 24288 ;; This function is called by:
 24289 ;;		_StackTask
 24290 ;; This function uses a non-reentrant model
 24291 ;;
 24292                           
 24293                           	psect	text47
 24294  011832                     __ptext47:
 24295                           	opt stack 0
 24296  011832                     _TCPTick:
 24297                           	opt stack 12
 24298                           
 24299                           ;tcp.c: 2325: TCP_SOCKET hTCP;
 24300                           ;tcp.c: 2326: bool bRetransmit;
 24301                           ;tcp.c: 2327: bool bCloseSocket;
 24302                           ;tcp.c: 2328: uint8_t vFlags;
 24303                           ;tcp.c: 2329: uint16_t w;
 24304                           ;tcp.c: 2332: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitial
      +                          izer[0])); hTCP++)
 24305                           
 24306                           ;incstack = 0
 24307  011832  0E00               	movlw	0
 24308  011834  0101               	movlb	1	; () banked
 24309  011836  6F65               	movwf	TCPTick@hTCP& (0+255),b
 24310  011838  0101               	movlb	1	; () banked
 24311  01183A  5165               	movf	TCPTick@hTCP& (0+255),w,b
 24312  01183C  A4D8               	btfss	status,2,c
 24313  01183E  EF9D  F090         	goto	l14092
 24314                           
 24315                           ; BSR set to: 1
 24316                           ;tcp.c: 2333: {
 24317                           ;tcp.c: 2334: SyncTCBStub(hTCP);
 24318                           
 24319                           ; BSR set to: 1
 24320                           
 24321                           ; BSR set to: 1
 24322  011842  0101               	movlb	1	; () banked
 24323  011844  5165               	movf	TCPTick@hTCP& (0+255),w,b
 24324  011846  EC3D  F0D0         	call	_SyncTCBStub
 24325                           
 24326                           ;tcp.c: 2353: vFlags = 0x00;
 24327  01184A  0E00               	movlw	0
 24328  01184C  0101               	movlb	1	; () banked
 24329  01184E  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24330                           
 24331                           ; BSR set to: 1
 24332                           ;tcp.c: 2354: bRetransmit = 0;
 24333  011850  0E00               	movlw	0
 24334  011852  0101               	movlb	1	; () banked
 24335  011854  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 24336                           
 24337                           ; BSR set to: 1
 24338                           ;tcp.c: 2355: bCloseSocket = 0;
 24339  011856  0E00               	movlw	0
 24340  011858  0101               	movlb	1	; () banked
 24341  01185A  6F63               	movwf	TCPTick@bCloseSocket& (0+255),b
 24342                           
 24343                           ; BSR set to: 1
 24344                           ;tcp.c: 2358: if(MyTCBStub.Flags.bTXASAP || MyTCBStub.Flags.bTXASAPWithoutTimerReset)
 24345  01185C  0101               	movlb	1	; () banked
 24346  01185E  B3F8               	btfsc	(_MyTCBStub+24)& (0+255),1,b
 24347  011860  D003               	goto	l13910
 24348                           
 24349                           ; BSR set to: 1
 24350  011862  0101               	movlb	1	; () banked
 24351  011864  A5F8               	btfss	(_MyTCBStub+24)& (0+255),2,b
 24352  011866  D00E               	goto	l13916
 24353  011868                     l13910:
 24354                           
 24355                           ; BSR set to: 1
 24356                           ;tcp.c: 2359: {
 24357                           ;tcp.c: 2360: if(MACIsTxReady())
 24358  011868  ECCB  F0D7         	call	_MACIsTxReady	;wreg free
 24359  01186C  0900               	iorlw	0
 24360  01186E  B4D8               	btfsc	status,2,c
 24361  011870  D009               	goto	l13916
 24362                           
 24363                           ;tcp.c: 2361: {
 24364                           ;tcp.c: 2362: vFlags = (0x10);
 24365  011872  0E10               	movlw	16
 24366  011874  0101               	movlb	1	; () banked
 24367  011876  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24368                           
 24369                           ; BSR set to: 1
 24370                           ;tcp.c: 2363: bRetransmit = MyTCBStub.Flags.bTXASAPWithoutTimerReset;
 24371  011878  0E00               	movlw	0
 24372  01187A  0101               	movlb	1	; () banked
 24373  01187C  B5F8               	btfsc	(_MyTCBStub+24)& (0+255),2,b
 24374  01187E  0E01               	movlw	1
 24375  011880  0101               	movlb	1	; () banked
 24376  011882  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 24377  011884                     l13916:
 24378                           
 24379                           ;tcp.c: 2364: }
 24380                           ;tcp.c: 2365: }
 24381                           ;tcp.c: 2368: if(MyTCBStub.Flags.bTimer2Enabled)
 24382  011884  0101               	movlb	1	; () banked
 24383  011886  ABF7               	btfss	(_MyTCBStub+23)& (0+255),5,b
 24384  011888  D025               	goto	l13922
 24385                           
 24386                           ; BSR set to: 1
 24387                           ;tcp.c: 2369: {
 24388                           ;tcp.c: 2371: if((int16_t)(MyTCBStub.eventTime2 - (uint16_t)TickGetDiv256()) <= (int16_t
      +                          )0)
 24389  01188A  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 24390  01188E  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 24391  011892  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 24392  011896  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 24393  01189A  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 24394  01189E  0101               	movlb	1	; () banked
 24395  0118A0  1F57               	comf	??_TCPTick& (0+255),f,b
 24396  0118A2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24397  0118A4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24398  0118A6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24399  0118A8  0101               	movlb	1	; () banked
 24400  0118AA  51F2               	movf	(_MyTCBStub+18)& (0+255),w,b
 24401  0118AC  0101               	movlb	1	; () banked
 24402  0118AE  2757               	addwf	??_TCPTick& (0+255),f,b
 24403  0118B0  0101               	movlb	1	; () banked
 24404  0118B2  51F3               	movf	(_MyTCBStub+19)& (0+255),w,b
 24405  0118B4  0101               	movlb	1	; () banked
 24406  0118B6  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24407  0118B8  0101               	movlb	1	; () banked
 24408  0118BA  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 24409  0118BC  0A80               	xorlw	128
 24410  0118BE  6EF3               	movwf	prodl,c
 24411  0118C0  0E80               	movlw	128
 24412  0118C2  5CF3               	subwf	prodl,w,c
 24413  0118C4  0E01               	movlw	1
 24414  0118C6  B4D8               	btfsc	status,2,c
 24415  0118C8  5D57               	subwf	??_TCPTick& (0+255),w,b
 24416  0118CA  B0D8               	btfsc	status,0,c
 24417  0118CC  D003               	goto	l13922
 24418                           
 24419                           ; BSR set to: 1
 24420                           ;tcp.c: 2372: vFlags = (0x10);
 24421  0118CE  0E10               	movlw	16
 24422  0118D0  0101               	movlb	1	; () banked
 24423  0118D2  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24424  0118D4                     l13922:
 24425                           
 24426                           ; BSR set to: 1
 24427                           ;tcp.c: 2373: }
 24428                           ;tcp.c: 2376: if(MyTCBStub.Flags.bDelayedACKTimerEnabled)
 24429  0118D4  0101               	movlb	1	; () banked
 24430  0118D6  ADF7               	btfss	(_MyTCBStub+23)& (0+255),6,b
 24431  0118D8  D025               	goto	l13928
 24432                           
 24433                           ; BSR set to: 1
 24434                           ;tcp.c: 2377: {
 24435                           ;tcp.c: 2379: if((int16_t)(MyTCBStub.OverlappedTimers.delayedACKTime - (uint16_t)TickGet
      +                          Div256()) <= (int16_t)0)
 24436  0118DA  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 24437  0118DE  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 24438  0118E2  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 24439  0118E6  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 24440  0118EA  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 24441  0118EE  0101               	movlb	1	; () banked
 24442  0118F0  1F57               	comf	??_TCPTick& (0+255),f,b
 24443  0118F2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24444  0118F4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24445  0118F6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24446  0118F8  0101               	movlb	1	; () banked
 24447  0118FA  51F4               	movf	(_MyTCBStub+20)& (0+255),w,b
 24448  0118FC  0101               	movlb	1	; () banked
 24449  0118FE  2757               	addwf	??_TCPTick& (0+255),f,b
 24450  011900  0101               	movlb	1	; () banked
 24451  011902  51F5               	movf	(_MyTCBStub+21)& (0+255),w,b
 24452  011904  0101               	movlb	1	; () banked
 24453  011906  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24454  011908  0101               	movlb	1	; () banked
 24455  01190A  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 24456  01190C  0A80               	xorlw	128
 24457  01190E  6EF3               	movwf	prodl,c
 24458  011910  0E80               	movlw	128
 24459  011912  5CF3               	subwf	prodl,w,c
 24460  011914  0E01               	movlw	1
 24461  011916  B4D8               	btfsc	status,2,c
 24462  011918  5D57               	subwf	??_TCPTick& (0+255),w,b
 24463  01191A  B0D8               	btfsc	status,0,c
 24464  01191C  D003               	goto	l13928
 24465                           
 24466                           ; BSR set to: 1
 24467                           ;tcp.c: 2380: vFlags = (0x10);
 24468  01191E  0E10               	movlw	16
 24469  011920  0101               	movlb	1	; () banked
 24470  011922  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24471  011924                     l13928:
 24472                           
 24473                           ; BSR set to: 1
 24474                           ;tcp.c: 2381: }
 24475                           ;tcp.c: 2384: if(MyTCBStub.smState == TCP_CLOSE_WAIT)
 24476  011924  0101               	movlb	1	; () banked
 24477  011926  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 24478  011928  0A0B               	xorlw	11
 24479  01192A  A4D8               	btfss	status,2,c
 24480  01192C  D028               	goto	l13934
 24481                           
 24482                           ; BSR set to: 1
 24483                           ;tcp.c: 2385: {
 24484                           ;tcp.c: 2388: if((int16_t)(MyTCBStub.OverlappedTimers.closeWaitTime - (uint16_t)TickGetD
      +                          iv256()) <= (int16_t)0)
 24485  01192E  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 24486  011932  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 24487  011936  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 24488  01193A  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 24489  01193E  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 24490  011942  0101               	movlb	1	; () banked
 24491  011944  1F57               	comf	??_TCPTick& (0+255),f,b
 24492  011946  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24493  011948  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24494  01194A  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24495  01194C  0101               	movlb	1	; () banked
 24496  01194E  51F4               	movf	(_MyTCBStub+20)& (0+255),w,b
 24497  011950  0101               	movlb	1	; () banked
 24498  011952  2757               	addwf	??_TCPTick& (0+255),f,b
 24499  011954  0101               	movlb	1	; () banked
 24500  011956  51F5               	movf	(_MyTCBStub+21)& (0+255),w,b
 24501  011958  0101               	movlb	1	; () banked
 24502  01195A  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24503  01195C  0101               	movlb	1	; () banked
 24504  01195E  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 24505  011960  0A80               	xorlw	128
 24506  011962  6EF3               	movwf	prodl,c
 24507  011964  0E80               	movlw	128
 24508  011966  5CF3               	subwf	prodl,w,c
 24509  011968  0E01               	movlw	1
 24510  01196A  B4D8               	btfsc	status,2,c
 24511  01196C  5D57               	subwf	??_TCPTick& (0+255),w,b
 24512  01196E  B0D8               	btfsc	status,0,c
 24513  011970  D006               	goto	l13934
 24514                           
 24515                           ; BSR set to: 1
 24516                           ;tcp.c: 2389: {
 24517                           ;tcp.c: 2390: vFlags = (0x01) | (0x10);
 24518  011972  0E11               	movlw	17
 24519  011974  0101               	movlb	1	; () banked
 24520  011976  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24521                           
 24522                           ;tcp.c: 2391: MyTCBStub.smState = TCP_LAST_ACK;
 24523  011978  0E0C               	movlw	12
 24524  01197A  0101               	movlb	1	; () banked
 24525  01197C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 24526  01197E                     l13934:
 24527                           
 24528                           ; BSR set to: 1
 24529                           ;tcp.c: 2392: }
 24530                           ;tcp.c: 2393: }
 24531                           ;tcp.c: 2397: if(MyTCBStub.smState == TCP_LISTEN)
 24532  01197E  0101               	movlb	1	; () banked
 24533  011980  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 24534  011982  0A04               	xorlw	4
 24535  011984  A4D8               	btfss	status,2,c
 24536  011986  D179               	goto	l13968
 24537                           
 24538                           ; BSR set to: 1
 24539                           ;tcp.c: 2398: {
 24540                           ;tcp.c: 2399: for(w = 0; w < (3u); w++)
 24541  011988  0E00               	movlw	0
 24542  01198A  0101               	movlb	1	; () banked
 24543  01198C  6F68               	movwf	(TCPTick@w+1)& (0+255),b
 24544  01198E  0E00               	movlw	0
 24545  011990  0101               	movlb	1	; () banked
 24546  011992  6F67               	movwf	TCPTick@w& (0+255),b
 24547  011994                     
 24548                           ; BSR set to: 1
 24549  011994  0E03               	movlw	3
 24550  011996  0101               	movlb	1	; () banked
 24551  011998  5D67               	subwf	TCPTick@w& (0+255),w,b
 24552  01199A  0E00               	movlw	0
 24553  01199C  0101               	movlb	1	; () banked
 24554  01199E  5968               	subwfb	(TCPTick@w+1)& (0+255),w,b
 24555  0119A0  B0D8               	btfsc	status,0,c
 24556  0119A2  D16B               	goto	l13968
 24557                           
 24558                           ; BSR set to: 1
 24559                           ;tcp.c: 2400: {
 24560                           ;tcp.c: 2402: if(SYNQueue[w].wDestPort == 0u)
 24561                           
 24562                           ; BSR set to: 1
 24563                           
 24564                           ; BSR set to: 1
 24565  0119A4  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24566  0119A8  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24567  0119AC  0E00               	movlw	0
 24568  0119AE  0101               	movlb	1	; () banked
 24569  0119B0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24570  0119B2  0E14               	movlw	20
 24571  0119B4  0101               	movlb	1	; () banked
 24572  0119B6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24573  0119B8  ECF5  F0D9         	call	___wmul	;wreg free
 24574  0119BC  0E10               	movlw	16
 24575  0119BE  0101               	movlb	1	; () banked
 24576  0119C0  270E               	addwf	?___wmul& (0+255),f,b
 24577  0119C2  0E00               	movlw	0
 24578  0119C4  0101               	movlb	1	; () banked
 24579  0119C6  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24580  0119C8  0102               	movlb	2	; () banked
 24581  0119CA  0E00               	movlw	low _SYNQueue
 24582  0119CC  0101               	movlb	1	; () banked
 24583  0119CE  250E               	addwf	?___wmul& (0+255),w,b
 24584  0119D0  6ED9               	movwf	fsr2l,c
 24585  0119D2  0102               	movlb	2	; () banked
 24586  0119D4  0E02               	movlw	high _SYNQueue
 24587  0119D6  0101               	movlb	1	; () banked
 24588  0119D8  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24589  0119DA  6EDA               	movwf	fsr2h,c
 24590  0119DC  50DE               	movf	postinc2,w,c
 24591  0119DE  10DD               	iorwf	postdec2,w,c
 24592  0119E0  B4D8               	btfsc	status,2,c
 24593  0119E2  D14B               	goto	l13968
 24594                           
 24595                           ; BSR set to: 1
 24596                           ;tcp.c: 2409: if(SYNQueue[w].wDestPort == MyTCBStub.remoteHash.Val)
 24597                           
 24598                           ; BSR set to: 1
 24599                           
 24600                           ; BSR set to: 1
 24601                           ;tcp.c: 2403: break;
 24602  0119E4  0101               	movlb	1	; () banked
 24603  0119E6  EE21  F0F9         	lfsr	2,_MyTCBStub+25
 24604  0119EA  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24605  0119EE  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24606  0119F2  0E00               	movlw	0
 24607  0119F4  0101               	movlb	1	; () banked
 24608  0119F6  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24609  0119F8  0E14               	movlw	20
 24610  0119FA  0101               	movlb	1	; () banked
 24611  0119FC  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24612  0119FE  ECF5  F0D9         	call	___wmul	;wreg free
 24613  011A02  0E10               	movlw	16
 24614  011A04  0101               	movlb	1	; () banked
 24615  011A06  270E               	addwf	?___wmul& (0+255),f,b
 24616  011A08  0E00               	movlw	0
 24617  011A0A  0101               	movlb	1	; () banked
 24618  011A0C  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24619  011A0E  0102               	movlb	2	; () banked
 24620  011A10  0E00               	movlw	low _SYNQueue
 24621  011A12  0101               	movlb	1	; () banked
 24622  011A14  250E               	addwf	?___wmul& (0+255),w,b
 24623  011A16  6EE1               	movwf	fsr1l,c
 24624  011A18  0102               	movlb	2	; () banked
 24625  011A1A  0E02               	movlw	high _SYNQueue
 24626  011A1C  0101               	movlb	1	; () banked
 24627  011A1E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24628  011A20  6EE2               	movwf	fsr1h,c
 24629  011A22  52E6               	movf	postinc1,f,c
 24630  011A24  52DE               	movf	postinc2,f,c
 24631  011A26  50DD               	movf	postdec2,w,c
 24632  011A28  18E5               	xorwf	postdec1,w,c
 24633  011A2A  CFDF FFE8          	movff	indf2,wreg
 24634  011A2E  B4D8               	btfsc	status,2,c
 24635  011A30  18E7               	xorwf	indf1,w,c
 24636  011A32  A4D8               	btfss	status,2,c
 24637  011A34  D11E               	goto	l13964
 24638                           
 24639                           ; BSR set to: 1
 24640                           ;tcp.c: 2411: {
 24641                           ;tcp.c: 2413: SyncTCB();
 24642  011A36  EC1D  F0CB         	call	_SyncTCB	;wreg free
 24643                           
 24644                           ;tcp.c: 2422: memcpy((void*)&MyTCB.remote.niRemoteMACIP, (void*)&SYNQueue[w].niSourceAdd
      +                          ress, sizeof(NODE_INFO));
 24645  011A3A  0101               	movlb	1	; () banked
 24646  011A3C  0E01               	movlw	high (_MyTCB+22)
 24647  011A3E  0101               	movlb	1	; () banked
 24648  011A40  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 24649  011A42  0101               	movlb	1	; () banked
 24650  011A44  0ECF               	movlw	low (_MyTCB+22)
 24651  011A46  0101               	movlb	1	; () banked
 24652  011A48  6F14               	movwf	memcpy@d1& (0+255),b
 24653  011A4A  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24654  011A4E  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24655  011A52  0E00               	movlw	0
 24656  011A54  0101               	movlb	1	; () banked
 24657  011A56  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24658  011A58  0E14               	movlw	20
 24659  011A5A  0101               	movlb	1	; () banked
 24660  011A5C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24661  011A5E  ECF5  F0D9         	call	___wmul	;wreg free
 24662  011A62  0E00               	movlw	low _SYNQueue
 24663  011A64  0101               	movlb	1	; () banked
 24664  011A66  6F57               	movwf	??_TCPTick& (0+255),b
 24665  011A68  0E02               	movlw	high _SYNQueue
 24666  011A6A  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 24667  011A6C  0101               	movlb	1	; () banked
 24668  011A6E  510E               	movf	?___wmul& (0+255),w,b
 24669  011A70  0101               	movlb	1	; () banked
 24670  011A72  2757               	addwf	??_TCPTick& (0+255),f,b
 24671  011A74  0101               	movlb	1	; () banked
 24672  011A76  510F               	movf	(?___wmul+1)& (0+255),w,b
 24673  011A78  0101               	movlb	1	; () banked
 24674  011A7A  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24675  011A7C  C157  F116         	movff	??_TCPTick,memcpy@s1
 24676  011A80  C158  F117         	movff	??_TCPTick+1,memcpy@s1+1
 24677  011A84  0E00               	movlw	0
 24678  011A86  0101               	movlb	1	; () banked
 24679  011A88  6F19               	movwf	(memcpy@n+1)& (0+255),b
 24680  011A8A  0E0A               	movlw	10
 24681  011A8C  0101               	movlb	1	; () banked
 24682  011A8E  6F18               	movwf	memcpy@n& (0+255),b
 24683  011A90  ECDC  F0D5         	call	_memcpy	;wreg free
 24684                           
 24685                           ;tcp.c: 2423: MyTCB.remotePort.Val = SYNQueue[w].wSourcePort;
 24686  011A94  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24687  011A98  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24688  011A9C  0E00               	movlw	0
 24689  011A9E  0101               	movlb	1	; () banked
 24690  011AA0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24691  011AA2  0E14               	movlw	20
 24692  011AA4  0101               	movlb	1	; () banked
 24693  011AA6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24694  011AA8  ECF5  F0D9         	call	___wmul	;wreg free
 24695  011AAC  0E0A               	movlw	10
 24696  011AAE  0101               	movlb	1	; () banked
 24697  011AB0  270E               	addwf	?___wmul& (0+255),f,b
 24698  011AB2  0E00               	movlw	0
 24699  011AB4  0101               	movlb	1	; () banked
 24700  011AB6  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24701  011AB8  0102               	movlb	2	; () banked
 24702  011ABA  0E00               	movlw	low _SYNQueue
 24703  011ABC  0101               	movlb	1	; () banked
 24704  011ABE  250E               	addwf	?___wmul& (0+255),w,b
 24705  011AC0  6ED9               	movwf	fsr2l,c
 24706  011AC2  0102               	movlb	2	; () banked
 24707  011AC4  0E02               	movlw	high _SYNQueue
 24708  011AC6  0101               	movlb	1	; () banked
 24709  011AC8  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24710  011ACA  6EDA               	movwf	fsr2h,c
 24711  011ACC  0101               	movlb	1	; () banked
 24712  011ACE  CFDE F1C7          	movff	postinc2,_MyTCB+14
 24713  011AD2  0101               	movlb	1	; () banked
 24714  011AD4  CFDD F1C8          	movff	postdec2,_MyTCB+15
 24715                           
 24716                           ; BSR set to: 1
 24717                           ;tcp.c: 2424: MyTCB.RemoteSEQ = SYNQueue[w].dwSourceSEQ + 1;
 24718  011AD8  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24719  011ADC  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24720  011AE0  0E00               	movlw	0
 24721  011AE2  0101               	movlb	1	; () banked
 24722  011AE4  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24723  011AE6  0E14               	movlw	20
 24724  011AE8  0101               	movlb	1	; () banked
 24725  011AEA  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24726  011AEC  ECF5  F0D9         	call	___wmul	;wreg free
 24727  011AF0  0E0C               	movlw	12
 24728  011AF2  0101               	movlb	1	; () banked
 24729  011AF4  270E               	addwf	?___wmul& (0+255),f,b
 24730  011AF6  0E00               	movlw	0
 24731  011AF8  0101               	movlb	1	; () banked
 24732  011AFA  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24733  011AFC  0102               	movlb	2	; () banked
 24734  011AFE  0E00               	movlw	low _SYNQueue
 24735  011B00  0101               	movlb	1	; () banked
 24736  011B02  250E               	addwf	?___wmul& (0+255),w,b
 24737  011B04  6ED9               	movwf	fsr2l,c
 24738  011B06  0102               	movlb	2	; () banked
 24739  011B08  0E02               	movlw	high _SYNQueue
 24740  011B0A  0101               	movlb	1	; () banked
 24741  011B0C  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24742  011B0E  6EDA               	movwf	fsr2h,c
 24743  011B10  CFDE F157          	movff	postinc2,??_TCPTick
 24744  011B14  CFDE F158          	movff	postinc2,??_TCPTick+1
 24745  011B18  CFDE F159          	movff	postinc2,??_TCPTick+2
 24746  011B1C  CFDE F15A          	movff	postinc2,??_TCPTick+3
 24747  011B20  0E01               	movlw	1
 24748  011B22  0101               	movlb	1	; () banked
 24749  011B24  2557               	addwf	??_TCPTick& (0+255),w,b
 24750  011B26  0101               	movlb	1	; () banked
 24751  011B28  6FC1               	movwf	(_MyTCB+8)& (0+255),b
 24752  011B2A  0E00               	movlw	0
 24753  011B2C  0101               	movlb	1	; () banked
 24754  011B2E  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 24755  011B30  0101               	movlb	1	; () banked
 24756  011B32  6FC2               	movwf	(_MyTCB+9)& (0+255),b
 24757  011B34  0E00               	movlw	0
 24758  011B36  0101               	movlb	1	; () banked
 24759  011B38  2159               	addwfc	(??_TCPTick+2)& (0+255),w,b
 24760  011B3A  0101               	movlb	1	; () banked
 24761  011B3C  6FC3               	movwf	(_MyTCB+10)& (0+255),b
 24762  011B3E  0E00               	movlw	0
 24763  011B40  0101               	movlb	1	; () banked
 24764  011B42  215A               	addwfc	(??_TCPTick+3)& (0+255),w,b
 24765  011B44  0101               	movlb	1	; () banked
 24766  011B46  6FC4               	movwf	(_MyTCB+11)& (0+255),b
 24767                           
 24768                           ; BSR set to: 1
 24769                           ;tcp.c: 2425: MyTCBStub.remoteHash.Val = (MyTCB.remote.niRemoteMACIP.IPAddr.w[1] + MyTCB
      +                          .remote.niRemoteMACIP.IPAddr.w[0] + MyTCB.remotePort.Val) ^ MyTCB.localPort.Val;
 24770  011B48  0101               	movlb	1	; () banked
 24771  011B4A  EE21  F0C7         	lfsr	2,_MyTCB+14
 24772  011B4E  CFDE F157          	movff	postinc2,??_TCPTick
 24773  011B52  CFDD F158          	movff	postdec2,??_TCPTick+1
 24774  011B56  0101               	movlb	1	; () banked
 24775  011B58  51D1               	movf	(_MyTCB+24)& (0+255),w,b
 24776  011B5A  0101               	movlb	1	; () banked
 24777  011B5C  2757               	addwf	??_TCPTick& (0+255),f,b
 24778  011B5E  0101               	movlb	1	; () banked
 24779  011B60  51D2               	movf	(_MyTCB+25)& (0+255),w,b
 24780  011B62  0101               	movlb	1	; () banked
 24781  011B64  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24782  011B66  0101               	movlb	1	; () banked
 24783  011B68  51CF               	movf	(_MyTCB+22)& (0+255),w,b
 24784  011B6A  0101               	movlb	1	; () banked
 24785  011B6C  2757               	addwf	??_TCPTick& (0+255),f,b
 24786  011B6E  0101               	movlb	1	; () banked
 24787  011B70  51D0               	movf	(_MyTCB+23)& (0+255),w,b
 24788  011B72  0101               	movlb	1	; () banked
 24789  011B74  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24790  011B76  0101               	movlb	1	; () banked
 24791  011B78  51C9               	movf	(_MyTCB+16)& (0+255),w,b
 24792  011B7A  0101               	movlb	1	; () banked
 24793  011B7C  1957               	xorwf	??_TCPTick& (0+255),w,b
 24794  011B7E  0101               	movlb	1	; () banked
 24795  011B80  6FF9               	movwf	(_MyTCBStub+25)& (0+255),b
 24796  011B82  0101               	movlb	1	; () banked
 24797  011B84  51CA               	movf	(_MyTCB+17)& (0+255),w,b
 24798  011B86  0101               	movlb	1	; () banked
 24799  011B88  1958               	xorwf	(??_TCPTick+1)& (0+255),w,b
 24800  011B8A  0101               	movlb	1	; () banked
 24801  011B8C  6FFA               	movwf	(_MyTCBStub+26)& (0+255),b
 24802                           
 24803                           ; BSR set to: 1
 24804                           ;tcp.c: 2426: vFlags = (0x02) | (0x10);
 24805  011B8E  0E12               	movlw	18
 24806  011B90  0101               	movlb	1	; () banked
 24807  011B92  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24808                           
 24809                           ; BSR set to: 1
 24810                           ;tcp.c: 2427: MyTCBStub.smState = TCP_SYN_RECEIVED;
 24811  011B94  0E06               	movlw	6
 24812  011B96  0101               	movlb	1	; () banked
 24813  011B98  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 24814                           
 24815                           ; BSR set to: 1
 24816                           ;tcp.c: 2430: TCPRAMCopy((unsigned short)&SYNQueue[w], 1u, (unsigned short)&SYNQueue[w+1
      +                          ], 1u, ((3u)-1u-w)*sizeof(TCP_SYN_QUEUE));
 24817  011B9A  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24818  011B9E  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24819  011BA2  0E00               	movlw	0
 24820  011BA4  0101               	movlb	1	; () banked
 24821  011BA6  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24822  011BA8  0E14               	movlw	20
 24823  011BAA  0101               	movlb	1	; () banked
 24824  011BAC  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24825  011BAE  ECF5  F0D9         	call	___wmul	;wreg free
 24826  011BB2  0102               	movlb	2	; () banked
 24827  011BB4  0E00               	movlw	low _SYNQueue
 24828  011BB6  0101               	movlb	1	; () banked
 24829  011BB8  250E               	addwf	?___wmul& (0+255),w,b
 24830  011BBA  0101               	movlb	1	; () banked
 24831  011BBC  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 24832  011BBE  0102               	movlb	2	; () banked
 24833  011BC0  0E02               	movlw	high _SYNQueue
 24834  011BC2  0101               	movlb	1	; () banked
 24835  011BC4  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24836  011BC6  0101               	movlb	1	; () banked
 24837  011BC8  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 24838  011BCA  0E01               	movlw	1
 24839  011BCC  0101               	movlb	1	; () banked
 24840  011BCE  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 24841  011BD0  0E01               	movlw	1
 24842  011BD2  0101               	movlb	1	; () banked
 24843  011BD4  2567               	addwf	TCPTick@w& (0+255),w,b
 24844  011BD6  0101               	movlb	1	; () banked
 24845  011BD8  6F0E               	movwf	___wmul@multiplier& (0+255),b
 24846  011BDA  0E00               	movlw	0
 24847  011BDC  0101               	movlb	1	; () banked
 24848  011BDE  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 24849  011BE0  0101               	movlb	1	; () banked
 24850  011BE2  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 24851  011BE4  0E00               	movlw	0
 24852  011BE6  0101               	movlb	1	; () banked
 24853  011BE8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24854  011BEA  0E14               	movlw	20
 24855  011BEC  0101               	movlb	1	; () banked
 24856  011BEE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24857  011BF0  ECF5  F0D9         	call	___wmul	;wreg free
 24858  011BF4  0102               	movlb	2	; () banked
 24859  011BF6  0E00               	movlw	low _SYNQueue
 24860  011BF8  0101               	movlb	1	; () banked
 24861  011BFA  250E               	addwf	?___wmul& (0+255),w,b
 24862  011BFC  0101               	movlb	1	; () banked
 24863  011BFE  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 24864  011C00  0102               	movlb	2	; () banked
 24865  011C02  0E02               	movlw	high _SYNQueue
 24866  011C04  0101               	movlb	1	; () banked
 24867  011C06  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24868  011C08  0101               	movlb	1	; () banked
 24869  011C0A  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 24870  011C0C  0E01               	movlw	1
 24871  011C0E  0101               	movlb	1	; () banked
 24872  011C10  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 24873  011C12  0E01               	movlw	1
 24874  011C14  0101               	movlb	1	; () banked
 24875  011C16  2567               	addwf	TCPTick@w& (0+255),w,b
 24876  011C18  0101               	movlb	1	; () banked
 24877  011C1A  6F57               	movwf	??_TCPTick& (0+255),b
 24878  011C1C  0E00               	movlw	0
 24879  011C1E  0101               	movlb	1	; () banked
 24880  011C20  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 24881  011C22  0101               	movlb	1	; () banked
 24882  011C24  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 24883  011C26  0101               	movlb	1	; () banked
 24884  011C28  1F57               	comf	??_TCPTick& (0+255),f,b
 24885  011C2A  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24886  011C2C  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24887  011C2E  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24888  011C30  0E03               	movlw	3
 24889  011C32  0101               	movlb	1	; () banked
 24890  011C34  2557               	addwf	??_TCPTick& (0+255),w,b
 24891  011C36  0101               	movlb	1	; () banked
 24892  011C38  6F0E               	movwf	___wmul@multiplier& (0+255),b
 24893  011C3A  0E00               	movlw	0
 24894  011C3C  0101               	movlb	1	; () banked
 24895  011C3E  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 24896  011C40  0101               	movlb	1	; () banked
 24897  011C42  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 24898  011C44  0E00               	movlw	0
 24899  011C46  0101               	movlb	1	; () banked
 24900  011C48  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24901  011C4A  0E14               	movlw	20
 24902  011C4C  0101               	movlb	1	; () banked
 24903  011C4E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24904  011C50  ECF5  F0D9         	call	___wmul	;wreg free
 24905  011C54  0101               	movlb	1	; () banked
 24906  011C56  C10E  F124         	movff	?___wmul,TCPRAMCopy@wLength
 24907  011C5A  0101               	movlb	1	; () banked
 24908  011C5C  C10F  F125         	movff	?___wmul+1,TCPRAMCopy@wLength+1
 24909  011C60  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 24910                           
 24911                           ;tcp.c: 2431: SYNQueue[(3u)-1].wDestPort = 0u;
 24912  011C64  0E00               	movlw	0
 24913  011C66  0102               	movlb	2	; () banked
 24914  011C68  6F39               	movwf	(_SYNQueue+57)& (0+255),b
 24915  011C6A  0E00               	movlw	0
 24916  011C6C  0102               	movlb	2	; () banked
 24917  011C6E  6F38               	movwf	(_SYNQueue+56)& (0+255),b
 24918                           
 24919                           ;tcp.c: 2433: break;
 24920  011C70  D004               	goto	l13968
 24921  011C72                     l13964:
 24922  011C72  0101               	movlb	1	; () banked
 24923  011C74  4B67               	infsnz	TCPTick@w& (0+255),f,b
 24924  011C76  2B68               	incf	(TCPTick@w+1)& (0+255),f,b
 24925  011C78  D68D               	goto	L23
 24926  011C7A                     l13968:
 24927                           
 24928                           ;tcp.c: 2434: }
 24929                           ;tcp.c: 2435: }
 24930                           ;tcp.c: 2436: }
 24931                           ;tcp.c: 2439: if(vFlags)
 24932  011C7A  0101               	movlb	1	; () banked
 24933  011C7C  5166               	movf	TCPTick@vFlags& (0+255),w,b
 24934  011C7E  B4D8               	btfsc	status,2,c
 24935  011C80  D00D               	goto	l13972
 24936                           
 24937                           ; BSR set to: 1
 24938                           ;tcp.c: 2440: SendTCP(vFlags, bRetransmit ? 0 : 0x01);
 24939  011C82  0101               	movlb	1	; () banked
 24940  011C84  5164               	movf	TCPTick@bRetransmit& (0+255),w,b
 24941  011C86  A4D8               	btfss	status,2,c
 24942  011C88  D002               	goto	u16230
 24943  011C8A  0E01               	movlw	1
 24944  011C8C  D001               	goto	u16236
 24945  011C8E                     u16230:
 24946  011C8E  0E00               	movlw	0
 24947  011C90                     u16236:
 24948  011C90  0101               	movlb	1	; () banked
 24949  011C92  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 24950  011C94  0101               	movlb	1	; () banked
 24951  011C96  5166               	movf	TCPTick@vFlags& (0+255),w,b
 24952  011C98  ECC1  F096         	call	_SendTCP
 24953  011C9C                     l13972:
 24954                           
 24955                           ;tcp.c: 2444: if(!MyTCBStub.Flags.bTimerEnabled)
 24956  011C9C  0101               	movlb	1	; () banked
 24957  011C9E  B9F7               	btfsc	(_MyTCBStub+23)& (0+255),4,b
 24958  011CA0  D08E               	goto	l13998
 24959                           
 24960                           ; BSR set to: 1
 24961                           ;tcp.c: 2445: {
 24962                           ;tcp.c: 2448: if(MyTCBStub.smState == TCP_ESTABLISHED)
 24963  011CA2  0101               	movlb	1	; () banked
 24964  011CA4  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 24965  011CA6  0A07               	xorlw	7
 24966  011CA8  A4D8               	btfss	status,2,c
 24967  011CAA  D243               	goto	l14088
 24968                           
 24969                           ; BSR set to: 1
 24970                           ;tcp.c: 2449: {
 24971                           ;tcp.c: 2451: if((int32_t)(TickGet() - MyTCBStub.eventTime) < (int32_t)0)
 24972  011CAC  0101               	movlb	1	; () banked
 24973  011CAE  C1EE  F157         	movff	_MyTCBStub+14,??_TCPTick
 24974  011CB2  0101               	movlb	1	; () banked
 24975  011CB4  C1EF  F158         	movff	_MyTCBStub+15,??_TCPTick+1
 24976  011CB8  0101               	movlb	1	; () banked
 24977  011CBA  C1F0  F159         	movff	_MyTCBStub+16,??_TCPTick+2
 24978  011CBE  0101               	movlb	1	; () banked
 24979  011CC0  C1F1  F15A         	movff	_MyTCBStub+17,??_TCPTick+3
 24980  011CC4  0101               	movlb	1	; () banked
 24981  011CC6  1F57               	comf	??_TCPTick& (0+255),f,b
 24982  011CC8  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24983  011CCA  1F59               	comf	(??_TCPTick+2)& (0+255),f,b
 24984  011CCC  1F5A               	comf	(??_TCPTick+3)& (0+255),f,b
 24985  011CCE  2B57               	incf	??_TCPTick& (0+255),f,b
 24986  011CD0  0E00               	movlw	0
 24987  011CD2  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24988  011CD4  2359               	addwfc	(??_TCPTick+2)& (0+255),f,b
 24989  011CD6  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 24990  011CD8  EC5D  F0DB         	call	_TickGet	;wreg free
 24991  011CDC  C100  F15B         	movff	?_TickGet,??_TCPTick+4
 24992  011CE0  C101  F15C         	movff	?_TickGet+1,??_TCPTick+5
 24993  011CE4  C102  F15D         	movff	?_TickGet+2,??_TCPTick+6
 24994  011CE8  C103  F15E         	movff	?_TickGet+3,??_TCPTick+7
 24995  011CEC  0101               	movlb	1	; () banked
 24996  011CEE  5157               	movf	??_TCPTick& (0+255),w,b
 24997  011CF0  0101               	movlb	1	; () banked
 24998  011CF2  255B               	addwf	(??_TCPTick+4)& (0+255),w,b
 24999  011CF4  0101               	movlb	1	; () banked
 25000  011CF6  6F5F               	movwf	(??_TCPTick+8)& (0+255),b
 25001  011CF8  0101               	movlb	1	; () banked
 25002  011CFA  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25003  011CFC  0101               	movlb	1	; () banked
 25004  011CFE  215C               	addwfc	(??_TCPTick+5)& (0+255),w,b
 25005  011D00  0101               	movlb	1	; () banked
 25006  011D02  6F60               	movwf	(??_TCPTick+9)& (0+255),b
 25007  011D04  0101               	movlb	1	; () banked
 25008  011D06  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25009  011D08  0101               	movlb	1	; () banked
 25010  011D0A  215D               	addwfc	(??_TCPTick+6)& (0+255),w,b
 25011  011D0C  0101               	movlb	1	; () banked
 25012  011D0E  6F61               	movwf	(??_TCPTick+10)& (0+255),b
 25013  011D10  0101               	movlb	1	; () banked
 25014  011D12  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25015  011D14  0101               	movlb	1	; () banked
 25016  011D16  215E               	addwfc	(??_TCPTick+7)& (0+255),w,b
 25017  011D18  0101               	movlb	1	; () banked
 25018  011D1A  6F62               	movwf	(??_TCPTick+11)& (0+255),b
 25019  011D1C  0101               	movlb	1	; () banked
 25020  011D1E  5162               	movf	(??_TCPTick+11)& (0+255),w,b
 25021  011D20  0A80               	xorlw	128
 25022  011D22  0F80               	addlw	128
 25023  011D24  E108               	bnz	u16265
 25024  011D26  0E00               	movlw	0
 25025  011D28  5D61               	subwf	(??_TCPTick+10)& (0+255),w,b
 25026  011D2A  E105               	bnz	u16265
 25027  011D2C  0E00               	movlw	0
 25028  011D2E  5D60               	subwf	(??_TCPTick+9)& (0+255),w,b
 25029  011D30  E102               	bnz	u16265
 25030  011D32  0E00               	movlw	0
 25031  011D34  5D5F               	subwf	(??_TCPTick+8)& (0+255),w,b
 25032  011D36                     u16265:
 25033  011D36  A0D8               	btfss	status,0,c
 25034  011D38  D1FC               	goto	l14088
 25035                           
 25036                           ; BSR set to: 1
 25037                           ;tcp.c: 2458: if(MyTCBStub.Flags.vUnackedKeepalives == (6u))
 25038                           
 25039                           ; BSR set to: 1
 25040                           
 25041                           ; BSR set to: 1
 25042                           ;tcp.c: 2452: continue;
 25043  011D3A  0101               	movlb	1	; () banked
 25044  011D3C  51F7               	movf	(_MyTCBStub+23)& (0+255),w,b
 25045  011D3E  0B07               	andlw	7
 25046  011D40  0A06               	xorlw	6
 25047  011D42  A4D8               	btfss	status,2,c
 25048  011D44  D015               	goto	l13992
 25049                           
 25050                           ; BSR set to: 1
 25051                           ;tcp.c: 2459: {
 25052                           ;tcp.c: 2460: vFlags = MyTCBStub.Flags.bServer;
 25053  011D46  0E00               	movlw	0
 25054  011D48  0101               	movlb	1	; () banked
 25055  011D4A  B7F7               	btfsc	(_MyTCBStub+23)& (0+255),3,b
 25056  011D4C  0E01               	movlw	1
 25057  011D4E  0101               	movlb	1	; () banked
 25058  011D50  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;tcp.c: 2465: TCPDisconnect(hTCP);
 25062  011D52  0101               	movlb	1	; () banked
 25063  011D54  5165               	movf	TCPTick@hTCP& (0+255),w,b
 25064  011D56  EC75  F0C6         	call	_TCPDisconnect
 25065                           
 25066                           ;tcp.c: 2466: TCPDisconnect(hTCP);
 25067  011D5A  0101               	movlb	1	; () banked
 25068  011D5C  5165               	movf	TCPTick@hTCP& (0+255),w,b
 25069  011D5E  EC75  F0C6         	call	_TCPDisconnect
 25070                           
 25071                           ;tcp.c: 2471: if(!vFlags)
 25072  011D62  0101               	movlb	1	; () banked
 25073  011D64  6766               	tstfsz	TCPTick@vFlags& (0+255),b
 25074  011D66  D1E5               	goto	l14088
 25075                           
 25076                           ; BSR set to: 1
 25077                           ;tcp.c: 2472: MyTCBStub.smState = TCP_CLOSED_BUT_RESERVED;
 25078  011D68  0E0E               	movlw	14
 25079  011D6A  0101               	movlb	1	; () banked
 25080  011D6C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25081  011D6E  D1E1               	goto	l14088
 25082  011D70                     l13992:
 25083                           
 25084                           ; BSR set to: 1
 25085                           ;tcp.c: 2475: }
 25086                           ;tcp.c: 2478: SyncTCB();
 25087  011D70  EC1D  F0CB         	call	_SyncTCB	;wreg free
 25088                           
 25089                           ;tcp.c: 2479: SendTCP((0x10), 0x02);
 25090  011D74  0E02               	movlw	2
 25091  011D76  0101               	movlb	1	; () banked
 25092  011D78  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25093  011D7A  0E10               	movlw	16
 25094  011D7C  ECC1  F096         	call	_SendTCP
 25095                           
 25096                           ;tcp.c: 2480: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 25097  011D80  EC5D  F0DB         	call	_TickGet	;wreg free
 25098  011D84  C100  F157         	movff	?_TickGet,??_TCPTick
 25099  011D88  C101  F158         	movff	?_TickGet+1,??_TCPTick+1
 25100  011D8C  C102  F159         	movff	?_TickGet+2,??_TCPTick+2
 25101  011D90  C103  F15A         	movff	?_TickGet+3,??_TCPTick+3
 25102  011D94  0EE6               	movlw	230
 25103  011D96  0101               	movlb	1	; () banked
 25104  011D98  2557               	addwf	??_TCPTick& (0+255),w,b
 25105  011D9A  0101               	movlb	1	; () banked
 25106  011D9C  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 25107  011D9E  0EF5               	movlw	245
 25108  011DA0  0101               	movlb	1	; () banked
 25109  011DA2  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 25110  011DA4  0101               	movlb	1	; () banked
 25111  011DA6  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 25112  011DA8  0E05               	movlw	5
 25113  011DAA  0101               	movlb	1	; () banked
 25114  011DAC  2159               	addwfc	(??_TCPTick+2)& (0+255),w,b
 25115  011DAE  0101               	movlb	1	; () banked
 25116  011DB0  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 25117  011DB2  0E00               	movlw	0
 25118  011DB4  0101               	movlb	1	; () banked
 25119  011DB6  215A               	addwfc	(??_TCPTick+3)& (0+255),w,b
 25120  011DB8  0101               	movlb	1	; () banked
 25121  011DBA  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 25122  011DBC  D1BA               	goto	l14088
 25123  011DBE                     l13998:
 25124                           
 25125                           ; BSR set to: 1
 25126                           ;tcp.c: 2484: }
 25127                           ;tcp.c: 2487: if((int32_t)(TickGet() - MyTCBStub.eventTime) < (int32_t)0)
 25128  011DBE  0101               	movlb	1	; () banked
 25129  011DC0  C1EE  F157         	movff	_MyTCBStub+14,??_TCPTick
 25130  011DC4  0101               	movlb	1	; () banked
 25131  011DC6  C1EF  F158         	movff	_MyTCBStub+15,??_TCPTick+1
 25132  011DCA  0101               	movlb	1	; () banked
 25133  011DCC  C1F0  F159         	movff	_MyTCBStub+16,??_TCPTick+2
 25134  011DD0  0101               	movlb	1	; () banked
 25135  011DD2  C1F1  F15A         	movff	_MyTCBStub+17,??_TCPTick+3
 25136  011DD6  0101               	movlb	1	; () banked
 25137  011DD8  1F57               	comf	??_TCPTick& (0+255),f,b
 25138  011DDA  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25139  011DDC  1F59               	comf	(??_TCPTick+2)& (0+255),f,b
 25140  011DDE  1F5A               	comf	(??_TCPTick+3)& (0+255),f,b
 25141  011DE0  2B57               	incf	??_TCPTick& (0+255),f,b
 25142  011DE2  0E00               	movlw	0
 25143  011DE4  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25144  011DE6  2359               	addwfc	(??_TCPTick+2)& (0+255),f,b
 25145  011DE8  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 25146  011DEA  EC5D  F0DB         	call	_TickGet	;wreg free
 25147  011DEE  C100  F15B         	movff	?_TickGet,??_TCPTick+4
 25148  011DF2  C101  F15C         	movff	?_TickGet+1,??_TCPTick+5
 25149  011DF6  C102  F15D         	movff	?_TickGet+2,??_TCPTick+6
 25150  011DFA  C103  F15E         	movff	?_TickGet+3,??_TCPTick+7
 25151  011DFE  0101               	movlb	1	; () banked
 25152  011E00  5157               	movf	??_TCPTick& (0+255),w,b
 25153  011E02  0101               	movlb	1	; () banked
 25154  011E04  255B               	addwf	(??_TCPTick+4)& (0+255),w,b
 25155  011E06  0101               	movlb	1	; () banked
 25156  011E08  6F5F               	movwf	(??_TCPTick+8)& (0+255),b
 25157  011E0A  0101               	movlb	1	; () banked
 25158  011E0C  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25159  011E0E  0101               	movlb	1	; () banked
 25160  011E10  215C               	addwfc	(??_TCPTick+5)& (0+255),w,b
 25161  011E12  0101               	movlb	1	; () banked
 25162  011E14  6F60               	movwf	(??_TCPTick+9)& (0+255),b
 25163  011E16  0101               	movlb	1	; () banked
 25164  011E18  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25165  011E1A  0101               	movlb	1	; () banked
 25166  011E1C  215D               	addwfc	(??_TCPTick+6)& (0+255),w,b
 25167  011E1E  0101               	movlb	1	; () banked
 25168  011E20  6F61               	movwf	(??_TCPTick+10)& (0+255),b
 25169  011E22  0101               	movlb	1	; () banked
 25170  011E24  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25171  011E26  0101               	movlb	1	; () banked
 25172  011E28  215E               	addwfc	(??_TCPTick+7)& (0+255),w,b
 25173  011E2A  0101               	movlb	1	; () banked
 25174  011E2C  6F62               	movwf	(??_TCPTick+11)& (0+255),b
 25175  011E2E  0101               	movlb	1	; () banked
 25176  011E30  5162               	movf	(??_TCPTick+11)& (0+255),w,b
 25177  011E32  0A80               	xorlw	128
 25178  011E34  0F80               	addlw	128
 25179  011E36  E108               	bnz	u16295
 25180  011E38  0E00               	movlw	0
 25181  011E3A  5D61               	subwf	(??_TCPTick+10)& (0+255),w,b
 25182  011E3C  E105               	bnz	u16295
 25183  011E3E  0E00               	movlw	0
 25184  011E40  5D60               	subwf	(??_TCPTick+9)& (0+255),w,b
 25185  011E42  E102               	bnz	u16295
 25186  011E44  0E00               	movlw	0
 25187  011E46  5D5F               	subwf	(??_TCPTick+8)& (0+255),w,b
 25188  011E48                     u16295:
 25189  011E48  A0D8               	btfss	status,0,c
 25190  011E4A  D173               	goto	l14088
 25191                           
 25192                           ; BSR set to: 1
 25193                           ;tcp.c: 2491: SyncTCB();
 25194                           
 25195                           ; BSR set to: 1
 25196                           
 25197                           ; BSR set to: 1
 25198                           ;tcp.c: 2488: continue;
 25199  011E4C  EC1D  F0CB         	call	_SyncTCB	;wreg free
 25200                           
 25201                           ;tcp.c: 2495: switch(MyTCBStub.smState)
 25202  011E50  D0C3               	goto	l14064
 25203  011E52                     l14004:
 25204                           
 25205                           ;tcp.c: 2543: MyTCBStub.eventTime2 = (uint16_t)TickGetDiv256();
 25206  011E52  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 25207  011E56  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 25208  011E5A  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 25209  011E5E  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 25210  011E62  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 25211  011E66  C157  F1F2         	movff	??_TCPTick,_MyTCBStub+18
 25212  011E6A  C158  F1F3         	movff	??_TCPTick+1,_MyTCBStub+19
 25213                           
 25214                           ;tcp.c: 2544: ARPResolve(&MyTCB.remote.niRemoteMACIP.IPAddr);
 25215  011E6E  0101               	movlb	1	; () banked
 25216  011E70  0E01               	movlw	high (_MyTCB+22)
 25217  011E72  0101               	movlb	1	; () banked
 25218  011E74  6F21               	movwf	(ARPResolve@IPAddr+1)& (0+255),b
 25219  011E76  0101               	movlb	1	; () banked
 25220  011E78  0ECF               	movlw	low (_MyTCB+22)
 25221  011E7A  0101               	movlb	1	; () banked
 25222  011E7C  6F20               	movwf	ARPResolve@IPAddr& (0+255),b
 25223  011E7E  ECF6  F0C6         	call	_ARPResolve	;wreg free
 25224                           
 25225                           ;tcp.c: 2545: MyTCBStub.smState = TCP_GATEWAY_GET_ARP;
 25226  011E82  0E03               	movlw	3
 25227  011E84  D057               	goto	L25
 25228  011E86                     l14010:
 25229                           
 25230                           ; BSR set to: 1
 25231                           ;tcp.c: 2550: if(!ARPIsResolved(&MyTCB.remote.niRemoteMACIP.IPAddr, &MyTCB.remote.niRemo
      +                          teMACIP.MACAddr))
 25232  011E86  0101               	movlb	1	; () banked
 25233  011E88  0E01               	movlw	high (_MyTCB+22)
 25234  011E8A  0101               	movlb	1	; () banked
 25235  011E8C  6F01               	movwf	(ARPIsResolved@IPAddr+1)& (0+255),b
 25236  011E8E  0101               	movlb	1	; () banked
 25237  011E90  0ECF               	movlw	low (_MyTCB+22)
 25238  011E92  0101               	movlb	1	; () banked
 25239  011E94  6F00               	movwf	ARPIsResolved@IPAddr& (0+255),b
 25240  011E96  0101               	movlb	1	; () banked
 25241  011E98  0E01               	movlw	high (_MyTCB+26)
 25242  011E9A  0101               	movlb	1	; () banked
 25243  011E9C  6F03               	movwf	(ARPIsResolved@MACAddr+1)& (0+255),b
 25244  011E9E  0101               	movlb	1	; () banked
 25245  011EA0  0ED3               	movlw	low (_MyTCB+26)
 25246  011EA2  0101               	movlb	1	; () banked
 25247  011EA4  6F02               	movwf	ARPIsResolved@MACAddr& (0+255),b
 25248  011EA6  EC4F  F0C3         	call	_ARPIsResolved	;wreg free
 25249  011EAA  0900               	iorlw	0
 25250  011EAC  A4D8               	btfss	status,2,c
 25251  011EAE  D03B               	goto	l14020
 25252                           
 25253                           ;tcp.c: 2551: {
 25254                           ;tcp.c: 2556: if((uint16_t)TickGetDiv256() - MyTCBStub.eventTime2 > (uint16_t)MyTCB.retr
      +                          yInterval)
 25255  011EB0  0101               	movlb	1	; () banked
 25256  011EB2  EE21  F0F2         	lfsr	2,_MyTCBStub+18
 25257  011EB6  CFDE F157          	movff	postinc2,??_TCPTick
 25258  011EBA  CFDD F158          	movff	postdec2,??_TCPTick+1
 25259  011EBE  0101               	movlb	1	; () banked
 25260  011EC0  1F57               	comf	??_TCPTick& (0+255),f,b
 25261  011EC2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25262  011EC4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25263  011EC6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25264  011EC8  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 25265  011ECC  C100  F159         	movff	?_TickGetDiv256,??_TCPTick+2
 25266  011ED0  C101  F15A         	movff	?_TickGetDiv256+1,??_TCPTick+3
 25267  011ED4  C102  F15B         	movff	?_TickGetDiv256+2,??_TCPTick+4
 25268  011ED8  C103  F15C         	movff	?_TickGetDiv256+3,??_TCPTick+5
 25269  011EDC  0101               	movlb	1	; () banked
 25270  011EDE  5157               	movf	??_TCPTick& (0+255),w,b
 25271  011EE0  0101               	movlb	1	; () banked
 25272  011EE2  2759               	addwf	(??_TCPTick+2)& (0+255),f,b
 25273  011EE4  0101               	movlb	1	; () banked
 25274  011EE6  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25275  011EE8  0101               	movlb	1	; () banked
 25276  011EEA  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 25277  011EEC  0101               	movlb	1	; () banked
 25278  011EEE  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25279  011EF0  0101               	movlb	1	; () banked
 25280  011EF2  5DB9               	subwf	_MyTCB& (0+255),w,b
 25281  011EF4  0101               	movlb	1	; () banked
 25282  011EF6  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25283  011EF8  0101               	movlb	1	; () banked
 25284  011EFA  59BA               	subwfb	(_MyTCB+1)& (0+255),w,b
 25285  011EFC  B0D8               	btfsc	status,0,c
 25286  011EFE  D08C               	goto	l14066
 25287                           
 25288                           ; BSR set to: 1
 25289                           ;tcp.c: 2557: {
 25290                           ;tcp.c: 2559: if(MyTCB.retryCount < 6u)
 25291  011F00  0E06               	movlw	6
 25292  011F02  0101               	movlb	1	; () banked
 25293  011F04  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25294  011F06  B0D8               	btfsc	status,0,c
 25295  011F08  D00C               	goto	l14018
 25296                           
 25297                           ; BSR set to: 1
 25298                           ;tcp.c: 2560: {
 25299                           ;tcp.c: 2561: MyTCB.retryCount++;
 25300  011F0A  0101               	movlb	1	; () banked
 25301  011F0C  2BDE               	incf	(_MyTCB+37)& (0+255),f,b
 25302                           
 25303                           ;tcp.c: 2562: MyTCB.retryInterval <<= 1;
 25304  011F0E  0101               	movlb	1	; () banked
 25305  011F10  90D8               	bcf	status,0,c
 25306  011F12  0101               	movlb	1	; () banked
 25307  011F14  37B9               	rlcf	_MyTCB& (0+255),f,b
 25308  011F16  0101               	movlb	1	; () banked
 25309  011F18  37BA               	rlcf	(_MyTCB+1)& (0+255),f,b
 25310  011F1A  0101               	movlb	1	; () banked
 25311  011F1C  37BB               	rlcf	(_MyTCB+2)& (0+255),f,b
 25312  011F1E  0101               	movlb	1	; () banked
 25313  011F20  37BC               	rlcf	(_MyTCB+3)& (0+255),f,b
 25314  011F22                     l14018:
 25315                           
 25316                           ; BSR set to: 1
 25317                           ;tcp.c: 2563: }
 25318                           ;tcp.c: 2566: MyTCBStub.smState = TCP_GATEWAY_SEND_ARP;
 25319  011F22  0E02               	movlw	2
 25320  011F24  D007               	goto	L25
 25321  011F26                     l14020:
 25322                           
 25323                           ;tcp.c: 2569: }
 25324                           ;tcp.c: 2574: vFlags = (0x02);
 25325  011F26  0E02               	movlw	2
 25326  011F28  0101               	movlb	1	; () banked
 25327  011F2A  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25328                           
 25329                           ;tcp.c: 2575: bRetransmit = 0;
 25330  011F2C  0E00               	movlw	0
 25331  011F2E  0101               	movlb	1	; () banked
 25332  011F30  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 25333                           
 25334                           ;tcp.c: 2576: MyTCBStub.smState = TCP_SYN_SENT;
 25335  011F32  0E05               	movlw	5
 25336  011F34                     L25:
 25337  011F34  0101               	movlb	1	; () banked
 25338  011F36  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25339                           
 25340                           ;tcp.c: 2577: break;
 25341  011F38  D06F               	goto	l14066
 25342  011F3A                     l14022:
 25343                           
 25344                           ; BSR set to: 1
 25345                           ;tcp.c: 2584: vFlags = (0x02);
 25346  011F3A  0E02               	movlw	2
 25347  011F3C  0101               	movlb	1	; () banked
 25348  011F3E  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25349                           
 25350                           ;tcp.c: 2585: bRetransmit = 1;
 25351  011F40  0E01               	movlw	1
 25352  011F42  0101               	movlb	1	; () banked
 25353  011F44  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 25354                           
 25355                           ; BSR set to: 1
 25356                           ;tcp.c: 2588: if(MyTCB.retryCount >= ((5u) - 1))
 25357  011F46  0101               	movlb	1	; () banked
 25358  011F48  EE21  F0DE         	lfsr	2,_MyTCB+37
 25359  011F4C  0E03               	movlw	3
 25360  011F4E  64DF               	cpfsgt	indf2,c
 25361  011F50  D063               	goto	l14066
 25362                           
 25363                           ; BSR set to: 1
 25364                           ;tcp.c: 2589: {
 25365                           ;tcp.c: 2590: MyTCB.retryCount = (5u) - 1;
 25366  011F52  0E04               	movlw	4
 25367  011F54  0101               	movlb	1	; () banked
 25368  011F56  6FDE               	movwf	(_MyTCB+37)& (0+255),b
 25369                           
 25370                           ;tcp.c: 2591: MyTCB.retryInterval = ((uint32_t)(((((40000000ul)/4)+128ull)/256ull))*1)<<
      +                          ((5u)-1);
 25371  011F58  0E70               	movlw	112
 25372  011F5A  0101               	movlb	1	; () banked
 25373  011F5C  6FB9               	movwf	_MyTCB& (0+255),b
 25374  011F5E  0E89               	movlw	137
 25375  011F60  0101               	movlb	1	; () banked
 25376  011F62  6FBA               	movwf	(_MyTCB+1)& (0+255),b
 25377  011F64  0E09               	movlw	9
 25378  011F66  0101               	movlb	1	; () banked
 25379  011F68  6FBB               	movwf	(_MyTCB+2)& (0+255),b
 25380  011F6A  0E00               	movlw	0
 25381  011F6C  0101               	movlb	1	; () banked
 25382  011F6E  6FBC               	movwf	(_MyTCB+3)& (0+255),b
 25383  011F70  D053               	goto	l14066
 25384  011F72                     l14028:
 25385                           
 25386                           ; BSR set to: 1
 25387                           ;tcp.c: 2599: if(MyTCB.retryCount < (2u))
 25388  011F72  0E02               	movlw	2
 25389  011F74  0101               	movlb	1	; () banked
 25390  011F76  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25391  011F78  B0D8               	btfsc	status,0,c
 25392  011F7A  D002               	goto	l1163
 25393                           
 25394                           ; BSR set to: 1
 25395                           ;tcp.c: 2600: {
 25396                           ;tcp.c: 2601: vFlags = (0x02) | (0x10);
 25397  011F7C  0E12               	movlw	18
 25398  011F7E  D01F               	goto	L30
 25399  011F80                     l1163:
 25400                           
 25401                           ; BSR set to: 1
 25402                           ;tcp.c: 2604: else
 25403                           ;tcp.c: 2605: {
 25404                           ;tcp.c: 2606: if(MyTCBStub.Flags.bServer)
 25405  011F80  0101               	movlb	1	; () banked
 25406  011F82  B7F7               	btfsc	(_MyTCBStub+23)& (0+255),3,b
 25407  011F84  D022               	goto	l14060
 25408                           
 25409                           ; BSR set to: 1
 25410                           ;tcp.c: 2611: else
 25411                           ;tcp.c: 2612: {
 25412                           ;tcp.c: 2613: vFlags = (0x02);
 25413                           
 25414                           ; BSR set to: 1
 25415                           
 25416                           ;tcp.c: 2610: }
 25417                           
 25418                           ;tcp.c: 2609: bCloseSocket = 1;
 25419                           
 25420                           ; BSR set to: 1
 25421                           ;tcp.c: 2607: {
 25422                           ;tcp.c: 2608: vFlags = (0x04) | (0x10);
 25423  011F86  0E02               	movlw	2
 25424  011F88  D00B               	goto	L27
 25425  011F8A                     l14036:
 25426                           
 25427                           ; BSR set to: 1
 25428                           ;tcp.c: 2619: case TCP_CLOSE_WAIT:
 25429                           ;tcp.c: 2621: if(MyTCB.retryCount < (5u))
 25430  011F8A  0E05               	movlw	5
 25431  011F8C  0101               	movlb	1	; () banked
 25432  011F8E  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25433  011F90  B0D8               	btfsc	status,0,c
 25434  011F92  D002               	goto	l14040
 25435  011F94                     
 25436                           ; BSR set to: 1
 25437                           ;tcp.c: 2622: {
 25438                           ;tcp.c: 2623: vFlags = (0x10);
 25439  011F94  0E10               	movlw	16
 25440  011F96  D013               	goto	L30
 25441  011F98                     l14040:
 25442                           
 25443                           ; BSR set to: 1
 25444                           ;tcp.c: 2626: else
 25445                           ;tcp.c: 2627: {
 25446                           ;tcp.c: 2631: MyTCBStub.smState = TCP_FIN_WAIT_1;
 25447  011F98  0E08               	movlw	8
 25448  011F9A  0101               	movlb	1	; () banked
 25449  011F9C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25450                           
 25451                           ;tcp.c: 2632: vFlags = (0x01) | (0x10);
 25452  011F9E  0E11               	movlw	17
 25453  011FA0                     L27:
 25454  011FA0  0101               	movlb	1	; () banked
 25455  011FA2  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25456  011FA4  D039               	goto	l14066
 25457  011FA6                     l14050:
 25458                           
 25459                           ; BSR set to: 1
 25460                           ;tcp.c: 2660: if(MyTCB.retryCount < (5u))
 25461  011FA6  0E05               	movlw	5
 25462  011FA8  0101               	movlb	1	; () banked
 25463  011FAA  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25464  011FAC  B0D8               	btfsc	status,0,c
 25465  011FAE  D00D               	goto	l14060
 25466  011FB0  D7F1               	goto	L33
 25467  011FB2                     l14056:
 25468                           
 25469                           ; BSR set to: 1
 25470                           ;tcp.c: 2685: if(MyTCB.retryCount < (5u))
 25471  011FB2  0E05               	movlw	5
 25472  011FB4  0101               	movlb	1	; () banked
 25473  011FB6  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25474  011FB8  B0D8               	btfsc	status,0,c
 25475  011FBA  D007               	goto	l14060
 25476                           
 25477                           ; BSR set to: 1
 25478                           ;tcp.c: 2686: {
 25479                           ;tcp.c: 2687: vFlags = (0x01) | (0x10);
 25480  011FBC  0E11               	movlw	17
 25481  011FBE                     L30:
 25482  011FBE  0101               	movlb	1	; () banked
 25483  011FC0  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25484                           
 25485                           ;tcp.c: 2688: bRetransmit = 1;
 25486  011FC2  0E01               	movlw	1
 25487  011FC4  0101               	movlb	1	; () banked
 25488  011FC6  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 25489                           
 25490                           ;tcp.c: 2689: }
 25491  011FC8  D027               	goto	l14066
 25492  011FCA                     l14060:
 25493                           
 25494                           ; BSR set to: 1
 25495                           ;tcp.c: 2690: else
 25496                           ;tcp.c: 2691: {
 25497                           ;tcp.c: 2692: vFlags = (0x04) | (0x10);
 25498  011FCA  0E14               	movlw	20
 25499  011FCC  0101               	movlb	1	; () banked
 25500  011FCE  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25501                           
 25502                           ;tcp.c: 2693: bCloseSocket = 1;
 25503  011FD0  0E01               	movlw	1
 25504  011FD2  0101               	movlb	1	; () banked
 25505  011FD4  6F63               	movwf	TCPTick@bCloseSocket& (0+255),b
 25506  011FD6  D020               	goto	l14066
 25507  011FD8                     l14064:
 25508  011FD8  0101               	movlb	1	; () banked
 25509  011FDA  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 25510                           
 25511                           ; Switch size 1, requested type "space"
 25512                           ; Number of cases is 10, Range of values is 2 to 12
 25513                           ; switch strategies available:
 25514                           ; Name         Instructions Cycles
 25515                           ; simple_byte           31    16 (average)
 25516                           ;	Chosen strategy is simple_byte
 25517  011FDC  0A02               	xorlw	2	; case 2
 25518  011FDE  B4D8               	btfsc	status,2,c
 25519  011FE0  D738               	goto	l14004
 25520  011FE2  0A01               	xorlw	1	; case 3
 25521  011FE4  B4D8               	btfsc	status,2,c
 25522  011FE6  D74F               	goto	l14010
 25523  011FE8  0A06               	xorlw	6	; case 5
 25524  011FEA  B4D8               	btfsc	status,2,c
 25525  011FEC  D7A6               	goto	l14022
 25526  011FEE  0A03               	xorlw	3	; case 6
 25527  011FF0  B4D8               	btfsc	status,2,c
 25528  011FF2  D7BF               	goto	l14028
 25529  011FF4  0A01               	xorlw	1	; case 7
 25530  011FF6  B4D8               	btfsc	status,2,c
 25531  011FF8  D7C8               	goto	l14036
 25532  011FFA  0A0F               	xorlw	15	; case 8
 25533  011FFC  B4D8               	btfsc	status,2,c
 25534  011FFE  D7D9               	goto	l14056
 25535  012000  0A01               	xorlw	1	; case 9
 25536  012002  B4D8               	btfsc	status,2,c
 25537  012004  D7E2               	goto	l14060
 25538  012006  0A03               	xorlw	3	; case 10
 25539  012008  B4D8               	btfsc	status,2,c
 25540  01200A  D7CD               	goto	l14050
 25541  01200C  0A01               	xorlw	1	; case 11
 25542  01200E  B4D8               	btfsc	status,2,c
 25543  012010  D7BC               	goto	l14036
 25544  012012  0A07               	xorlw	7	; case 12
 25545  012014  B4D8               	btfsc	status,2,c
 25546  012016  D7CD               	goto	l14056
 25547  012018                     l14066:
 25548                           
 25549                           ; BSR set to: 1
 25550                           ;tcp.c: 2701: if(vFlags)
 25551  012018  0101               	movlb	1	; () banked
 25552  01201A  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25553  01201C  B4D8               	btfsc	status,2,c
 25554  01201E  D084               	goto	l14084
 25555                           
 25556                           ; BSR set to: 1
 25557                           ;tcp.c: 2702: {
 25558                           ;tcp.c: 2704: if(bRetransmit)
 25559  012020  0101               	movlb	1	; () banked
 25560  012022  5164               	movf	TCPTick@bRetransmit& (0+255),w,b
 25561  012024  B4D8               	btfsc	status,2,c
 25562  012026  D079               	goto	l14082
 25563                           
 25564                           ; BSR set to: 1
 25565                           ;tcp.c: 2705: {
 25566                           ;tcp.c: 2707: MyTCB.retryCount++;
 25567  012028  0101               	movlb	1	; () banked
 25568  01202A  2BDE               	incf	(_MyTCB+37)& (0+255),f,b
 25569                           
 25570                           ;tcp.c: 2708: MyTCB.retryInterval <<= 1;
 25571  01202C  0101               	movlb	1	; () banked
 25572  01202E  90D8               	bcf	status,0,c
 25573  012030  0101               	movlb	1	; () banked
 25574  012032  37B9               	rlcf	_MyTCB& (0+255),f,b
 25575  012034  0101               	movlb	1	; () banked
 25576  012036  37BA               	rlcf	(_MyTCB+1)& (0+255),f,b
 25577  012038  0101               	movlb	1	; () banked
 25578  01203A  37BB               	rlcf	(_MyTCB+2)& (0+255),f,b
 25579  01203C  0101               	movlb	1	; () banked
 25580  01203E  37BC               	rlcf	(_MyTCB+3)& (0+255),f,b
 25581                           
 25582                           ; BSR set to: 1
 25583                           ;tcp.c: 2711: w = MyTCB.txUnackedTail - MyTCBStub.txTail;
 25584  012040  0101               	movlb	1	; () banked
 25585  012042  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 25586  012046  CFDE F157          	movff	postinc2,??_TCPTick
 25587  01204A  CFDD F158          	movff	postdec2,??_TCPTick+1
 25588  01204E  0101               	movlb	1	; () banked
 25589  012050  1F57               	comf	??_TCPTick& (0+255),f,b
 25590  012052  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25591  012054  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25592  012056  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25593  012058  0101               	movlb	1	; () banked
 25594  01205A  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 25595  01205C  0101               	movlb	1	; () banked
 25596  01205E  2557               	addwf	??_TCPTick& (0+255),w,b
 25597  012060  0101               	movlb	1	; () banked
 25598  012062  6F67               	movwf	TCPTick@w& (0+255),b
 25599  012064  0101               	movlb	1	; () banked
 25600  012066  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 25601  012068  0101               	movlb	1	; () banked
 25602  01206A  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 25603  01206C  0101               	movlb	1	; () banked
 25604  01206E  6F68               	movwf	(TCPTick@w+1)& (0+255),b
 25605                           
 25606                           ; BSR set to: 1
 25607                           ;tcp.c: 2712: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 25608  012070  0101               	movlb	1	; () banked
 25609  012072  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 25610  012074  0101               	movlb	1	; () banked
 25611  012076  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 25612  012078  0101               	movlb	1	; () banked
 25613  01207A  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 25614  01207C  0101               	movlb	1	; () banked
 25615  01207E  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 25616  012080  B0D8               	btfsc	status,0,c
 25617  012082  D01B               	goto	l1184
 25618                           
 25619                           ; BSR set to: 1
 25620                           ;tcp.c: 2713: w += MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 25621  012084  0101               	movlb	1	; () banked
 25622  012086  C1E0  F157         	movff	_MyTCBStub,??_TCPTick
 25623  01208A  0101               	movlb	1	; () banked
 25624  01208C  C1E1  F158         	movff	_MyTCBStub+1,??_TCPTick+1
 25625  012090  0101               	movlb	1	; () banked
 25626  012092  1F57               	comf	??_TCPTick& (0+255),f,b
 25627  012094  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25628  012096  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25629  012098  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25630  01209A  0101               	movlb	1	; () banked
 25631  01209C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 25632  01209E  0101               	movlb	1	; () banked
 25633  0120A0  2757               	addwf	??_TCPTick& (0+255),f,b
 25634  0120A2  0101               	movlb	1	; () banked
 25635  0120A4  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 25636  0120A6  0101               	movlb	1	; () banked
 25637  0120A8  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25638  0120AA  0101               	movlb	1	; () banked
 25639  0120AC  5157               	movf	??_TCPTick& (0+255),w,b
 25640  0120AE  0101               	movlb	1	; () banked
 25641  0120B0  2767               	addwf	TCPTick@w& (0+255),f,b
 25642  0120B2  0101               	movlb	1	; () banked
 25643  0120B4  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25644  0120B6  0101               	movlb	1	; () banked
 25645  0120B8  2368               	addwfc	(TCPTick@w+1)& (0+255),f,b
 25646  0120BA                     l1184:
 25647                           
 25648                           ; BSR set to: 1
 25649                           ;tcp.c: 2718: MyTCB.MySEQ -= w;
 25650  0120BA  0101               	movlb	1	; () banked
 25651  0120BC  5167               	movf	TCPTick@w& (0+255),w,b
 25652  0120BE  0101               	movlb	1	; () banked
 25653  0120C0  6F57               	movwf	??_TCPTick& (0+255),b
 25654  0120C2  0101               	movlb	1	; () banked
 25655  0120C4  5168               	movf	(TCPTick@w+1)& (0+255),w,b
 25656  0120C6  0101               	movlb	1	; () banked
 25657  0120C8  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 25658  0120CA  0101               	movlb	1	; () banked
 25659  0120CC  6B59               	clrf	(??_TCPTick+2)& (0+255),b
 25660  0120CE  0101               	movlb	1	; () banked
 25661  0120D0  6B5A               	clrf	(??_TCPTick+3)& (0+255),b
 25662  0120D2  0101               	movlb	1	; () banked
 25663  0120D4  5157               	movf	??_TCPTick& (0+255),w,b
 25664  0120D6  0101               	movlb	1	; () banked
 25665  0120D8  5FBD               	subwf	(_MyTCB+4)& (0+255),f,b
 25666  0120DA  0101               	movlb	1	; () banked
 25667  0120DC  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25668  0120DE  0101               	movlb	1	; () banked
 25669  0120E0  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 25670  0120E2  0101               	movlb	1	; () banked
 25671  0120E4  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25672  0120E6  0101               	movlb	1	; () banked
 25673  0120E8  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 25674  0120EA  0101               	movlb	1	; () banked
 25675  0120EC  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25676  0120EE  0101               	movlb	1	; () banked
 25677  0120F0  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 25678                           
 25679                           ;tcp.c: 2719: MyTCB.remoteWindow += w;
 25680  0120F2  0101               	movlb	1	; () banked
 25681  0120F4  5167               	movf	TCPTick@w& (0+255),w,b
 25682  0120F6  0101               	movlb	1	; () banked
 25683  0120F8  27CB               	addwf	(_MyTCB+18)& (0+255),f,b
 25684  0120FA  0101               	movlb	1	; () banked
 25685  0120FC  5168               	movf	(TCPTick@w+1)& (0+255),w,b
 25686  0120FE  0101               	movlb	1	; () banked
 25687  012100  23CC               	addwfc	(_MyTCB+19)& (0+255),f,b
 25688                           
 25689                           ; BSR set to: 1
 25690                           ;tcp.c: 2720: MyTCB.txUnackedTail = MyTCBStub.txTail;
 25691  012102  C1E8  F1C5         	movff	_MyTCBStub+8,_MyTCB+12
 25692  012106  C1E9  F1C6         	movff	_MyTCBStub+9,_MyTCB+13
 25693                           
 25694                           ; BSR set to: 1
 25695                           ;tcp.c: 2721: SendTCP(vFlags, 0);
 25696  01210A  0E00               	movlw	0
 25697  01210C  0101               	movlb	1	; () banked
 25698  01210E  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25699  012110  0101               	movlb	1	; () banked
 25700  012112  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25701  012114  ECC1  F096         	call	_SendTCP
 25702                           
 25703                           ;tcp.c: 2722: }
 25704  012118  D007               	goto	l14084
 25705  01211A                     l14082:
 25706                           
 25707                           ;tcp.c: 2723: else
 25708                           ;tcp.c: 2724: SendTCP(vFlags, 0x01);
 25709  01211A  0E01               	movlw	1
 25710  01211C  0101               	movlb	1	; () banked
 25711  01211E  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25712  012120  0101               	movlb	1	; () banked
 25713  012122  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25714  012124  ECC1  F096         	call	_SendTCP
 25715  012128                     l14084:
 25716                           
 25717                           ;tcp.c: 2726: }
 25718                           ;tcp.c: 2728: if(bCloseSocket)
 25719  012128  0101               	movlb	1	; () banked
 25720  01212A  5163               	movf	TCPTick@bCloseSocket& (0+255),w,b
 25721  01212C  A4D8               	btfss	status,2,c
 25722                           
 25723                           ; BSR set to: 1
 25724                           ;tcp.c: 2729: CloseSocket();
 25725  01212E  ECFD  F0CD         	call	_CloseSocket	;wreg free
 25726  012132                     l14088:
 25727  012132  0101               	movlb	1	; () banked
 25728  012134  2B65               	incf	TCPTick@hTCP& (0+255),f,b
 25729  012136  EF1C  F08C         	goto	L31
 25730  01213A                     l14092:
 25731                           
 25732                           ; BSR set to: 1
 25733                           ;tcp.c: 2730: }
 25734                           ;tcp.c: 2735: for(w = 0; w < (3u); w++)
 25735  01213A  0E00               	movlw	0
 25736  01213C  0101               	movlb	1	; () banked
 25737  01213E  6F68               	movwf	(TCPTick@w+1)& (0+255),b
 25738  012140  0E00               	movlw	0
 25739  012142  0101               	movlb	1	; () banked
 25740  012144  6F67               	movwf	TCPTick@w& (0+255),b
 25741  012146                     
 25742                           ; BSR set to: 1
 25743  012146  0E03               	movlw	3
 25744  012148  0101               	movlb	1	; () banked
 25745  01214A  5D67               	subwf	TCPTick@w& (0+255),w,b
 25746  01214C  0E00               	movlw	0
 25747  01214E  0101               	movlb	1	; () banked
 25748  012150  5968               	subwfb	(TCPTick@w+1)& (0+255),w,b
 25749  012152  B0D8               	btfsc	status,0,c
 25750  012154  0012               	return	
 25751                           
 25752                           ; BSR set to: 1
 25753                           ;tcp.c: 2736: {
 25754                           ;tcp.c: 2738: if(SYNQueue[w].wDestPort == 0u)
 25755                           
 25756                           ; BSR set to: 1
 25757                           
 25758                           ; BSR set to: 1
 25759  012156  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 25760  01215A  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 25761  01215E  0E00               	movlw	0
 25762  012160  0101               	movlb	1	; () banked
 25763  012162  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25764  012164  0E14               	movlw	20
 25765  012166  0101               	movlb	1	; () banked
 25766  012168  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25767  01216A  ECF5  F0D9         	call	___wmul	;wreg free
 25768  01216E  0E10               	movlw	16
 25769  012170  0101               	movlb	1	; () banked
 25770  012172  270E               	addwf	?___wmul& (0+255),f,b
 25771  012174  0E00               	movlw	0
 25772  012176  0101               	movlb	1	; () banked
 25773  012178  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 25774  01217A  0102               	movlb	2	; () banked
 25775  01217C  0E00               	movlw	low _SYNQueue
 25776  01217E  0101               	movlb	1	; () banked
 25777  012180  250E               	addwf	?___wmul& (0+255),w,b
 25778  012182  6ED9               	movwf	fsr2l,c
 25779  012184  0102               	movlb	2	; () banked
 25780  012186  0E02               	movlw	high _SYNQueue
 25781  012188  0101               	movlb	1	; () banked
 25782  01218A  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 25783  01218C  6EDA               	movwf	fsr2h,c
 25784  01218E  50DE               	movf	postinc2,w,c
 25785  012190  10DD               	iorwf	postdec2,w,c
 25786  012192  B4D8               	btfsc	status,2,c
 25787  012194  0012               	return	
 25788                           
 25789                           ; BSR set to: 1
 25790                           ;tcp.c: 2742: if((uint16_t)TickGetDiv256() - SYNQueue[w].wTimestamp > (uint16_t)(((uint3
      +                          2_t)(((((40000000ul)/4)+128ull)/256ull))*3)/256ull))
 25791                           
 25792                           ; BSR set to: 1
 25793                           
 25794                           ; BSR set to: 1
 25795                           ;tcp.c: 2739: break;
 25796  012196  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 25797  01219A  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 25798  01219E  0E00               	movlw	0
 25799  0121A0  0101               	movlb	1	; () banked
 25800  0121A2  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25801  0121A4  0E14               	movlw	20
 25802  0121A6  0101               	movlb	1	; () banked
 25803  0121A8  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25804  0121AA  ECF5  F0D9         	call	___wmul	;wreg free
 25805  0121AE  0E12               	movlw	18
 25806  0121B0  0101               	movlb	1	; () banked
 25807  0121B2  270E               	addwf	?___wmul& (0+255),f,b
 25808  0121B4  0E00               	movlw	0
 25809  0121B6  0101               	movlb	1	; () banked
 25810  0121B8  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 25811  0121BA  0102               	movlb	2	; () banked
 25812  0121BC  0E00               	movlw	low _SYNQueue
 25813  0121BE  0101               	movlb	1	; () banked
 25814  0121C0  250E               	addwf	?___wmul& (0+255),w,b
 25815  0121C2  6ED9               	movwf	fsr2l,c
 25816  0121C4  0102               	movlb	2	; () banked
 25817  0121C6  0E02               	movlw	high _SYNQueue
 25818  0121C8  0101               	movlb	1	; () banked
 25819  0121CA  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 25820  0121CC  6EDA               	movwf	fsr2h,c
 25821  0121CE  CFDE F157          	movff	postinc2,??_TCPTick
 25822  0121D2  CFDD F158          	movff	postdec2,??_TCPTick+1
 25823  0121D6  0101               	movlb	1	; () banked
 25824  0121D8  1F57               	comf	??_TCPTick& (0+255),f,b
 25825  0121DA  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25826  0121DC  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25827  0121DE  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25828  0121E0  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 25829  0121E4  C100  F159         	movff	?_TickGetDiv256,??_TCPTick+2
 25830  0121E8  C101  F15A         	movff	?_TickGetDiv256+1,??_TCPTick+3
 25831  0121EC  C102  F15B         	movff	?_TickGetDiv256+2,??_TCPTick+4
 25832  0121F0  C103  F15C         	movff	?_TickGetDiv256+3,??_TCPTick+5
 25833  0121F4  0101               	movlb	1	; () banked
 25834  0121F6  5157               	movf	??_TCPTick& (0+255),w,b
 25835  0121F8  0101               	movlb	1	; () banked
 25836  0121FA  2759               	addwf	(??_TCPTick+2)& (0+255),f,b
 25837  0121FC  0101               	movlb	1	; () banked
 25838  0121FE  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25839  012200  0101               	movlb	1	; () banked
 25840  012202  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 25841  012204  0ECA               	movlw	202
 25842  012206  0101               	movlb	1	; () banked
 25843  012208  5D59               	subwf	(??_TCPTick+2)& (0+255),w,b
 25844  01220A  0E01               	movlw	1
 25845  01220C  595A               	subwfb	(??_TCPTick+3)& (0+255),w,b
 25846  01220E  A0D8               	btfss	status,0,c
 25847  012210  D06F               	goto	l14110
 25848                           
 25849                           ; BSR set to: 1
 25850                           ;tcp.c: 2743: {
 25851                           ;tcp.c: 2745: TCPRAMCopy((unsigned short)&SYNQueue[w], 1u, (unsigned short)&SYNQueue[w+1
      +                          ], 1u, ((3u)-1u-w)*sizeof(TCP_SYN_QUEUE));
 25852  012212  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 25853  012216  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 25854  01221A  0E00               	movlw	0
 25855  01221C  0101               	movlb	1	; () banked
 25856  01221E  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25857  012220  0E14               	movlw	20
 25858  012222  0101               	movlb	1	; () banked
 25859  012224  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25860  012226  ECF5  F0D9         	call	___wmul	;wreg free
 25861  01222A  0102               	movlb	2	; () banked
 25862  01222C  0E00               	movlw	low _SYNQueue
 25863  01222E  0101               	movlb	1	; () banked
 25864  012230  250E               	addwf	?___wmul& (0+255),w,b
 25865  012232  0101               	movlb	1	; () banked
 25866  012234  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 25867  012236  0102               	movlb	2	; () banked
 25868  012238  0E02               	movlw	high _SYNQueue
 25869  01223A  0101               	movlb	1	; () banked
 25870  01223C  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 25871  01223E  0101               	movlb	1	; () banked
 25872  012240  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 25873  012242  0E01               	movlw	1
 25874  012244  0101               	movlb	1	; () banked
 25875  012246  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 25876  012248  0E01               	movlw	1
 25877  01224A  0101               	movlb	1	; () banked
 25878  01224C  2567               	addwf	TCPTick@w& (0+255),w,b
 25879  01224E  0101               	movlb	1	; () banked
 25880  012250  6F0E               	movwf	___wmul@multiplier& (0+255),b
 25881  012252  0E00               	movlw	0
 25882  012254  0101               	movlb	1	; () banked
 25883  012256  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 25884  012258  0101               	movlb	1	; () banked
 25885  01225A  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 25886  01225C  0E00               	movlw	0
 25887  01225E  0101               	movlb	1	; () banked
 25888  012260  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25889  012262  0E14               	movlw	20
 25890  012264  0101               	movlb	1	; () banked
 25891  012266  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25892  012268  ECF5  F0D9         	call	___wmul	;wreg free
 25893  01226C  0102               	movlb	2	; () banked
 25894  01226E  0E00               	movlw	low _SYNQueue
 25895  012270  0101               	movlb	1	; () banked
 25896  012272  250E               	addwf	?___wmul& (0+255),w,b
 25897  012274  0101               	movlb	1	; () banked
 25898  012276  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 25899  012278  0102               	movlb	2	; () banked
 25900  01227A  0E02               	movlw	high _SYNQueue
 25901  01227C  0101               	movlb	1	; () banked
 25902  01227E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 25903  012280  0101               	movlb	1	; () banked
 25904  012282  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 25905  012284  0E01               	movlw	1
 25906  012286  0101               	movlb	1	; () banked
 25907  012288  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 25908  01228A  0E01               	movlw	1
 25909  01228C  0101               	movlb	1	; () banked
 25910  01228E  2567               	addwf	TCPTick@w& (0+255),w,b
 25911  012290  0101               	movlb	1	; () banked
 25912  012292  6F57               	movwf	??_TCPTick& (0+255),b
 25913  012294  0E00               	movlw	0
 25914  012296  0101               	movlb	1	; () banked
 25915  012298  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 25916  01229A  0101               	movlb	1	; () banked
 25917  01229C  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 25918  01229E  0101               	movlb	1	; () banked
 25919  0122A0  1F57               	comf	??_TCPTick& (0+255),f,b
 25920  0122A2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25921  0122A4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25922  0122A6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25923  0122A8  0E03               	movlw	3
 25924  0122AA  0101               	movlb	1	; () banked
 25925  0122AC  2557               	addwf	??_TCPTick& (0+255),w,b
 25926  0122AE  0101               	movlb	1	; () banked
 25927  0122B0  6F0E               	movwf	___wmul@multiplier& (0+255),b
 25928  0122B2  0E00               	movlw	0
 25929  0122B4  0101               	movlb	1	; () banked
 25930  0122B6  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 25931  0122B8  0101               	movlb	1	; () banked
 25932  0122BA  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 25933  0122BC  0E00               	movlw	0
 25934  0122BE  0101               	movlb	1	; () banked
 25935  0122C0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25936  0122C2  0E14               	movlw	20
 25937  0122C4  0101               	movlb	1	; () banked
 25938  0122C6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25939  0122C8  ECF5  F0D9         	call	___wmul	;wreg free
 25940  0122CC  0101               	movlb	1	; () banked
 25941  0122CE  C10E  F124         	movff	?___wmul,TCPRAMCopy@wLength
 25942  0122D2  0101               	movlb	1	; () banked
 25943  0122D4  C10F  F125         	movff	?___wmul+1,TCPRAMCopy@wLength+1
 25944  0122D8  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 25945                           
 25946                           ;tcp.c: 2746: SYNQueue[(3u)-1].wDestPort = 0u;
 25947  0122DC  0E00               	movlw	0
 25948  0122DE  0102               	movlb	2	; () banked
 25949  0122E0  6F39               	movwf	(_SYNQueue+57)& (0+255),b
 25950  0122E2  0E00               	movlw	0
 25951  0122E4  0102               	movlb	2	; () banked
 25952  0122E6  6F38               	movwf	(_SYNQueue+56)& (0+255),b
 25953                           
 25954                           ; BSR set to: 2
 25955                           ;tcp.c: 2750: w--;
 25956  0122E8  0101               	movlb	1	; () banked
 25957  0122EA  0767               	decf	TCPTick@w& (0+255),f,b
 25958  0122EC  A0D8               	btfss	status,0,c
 25959  0122EE  0768               	decf	(TCPTick@w+1)& (0+255),f,b
 25960  0122F0                     l14110:
 25961                           
 25962                           ; BSR set to: 1
 25963  0122F0  0101               	movlb	1	; () banked
 25964  0122F2  4B67               	infsnz	TCPTick@w& (0+255),f,b
 25965  0122F4  2B68               	incf	(TCPTick@w+1)& (0+255),f,b
 25966  0122F6  D727               	goto	L32
 25967  0122F8                     __end_of_TCPTick:
 25968                           	opt stack 0
 25969                           tblptru	equ	0xFF8
 25970                           tblptrh	equ	0xFF7
 25971                           tblptrl	equ	0xFF6
 25972                           tablat	equ	0xFF5
 25973                           prodh	equ	0xFF4
 25974                           prodl	equ	0xFF3
 25975                           intcon	equ	0xFF2
 25976                           indf0	equ	0xFEF
 25977                           postinc0	equ	0xFEE
 25978                           fsr0h	equ	0xFEA
 25979                           fsr0l	equ	0xFE9
 25980                           wreg	equ	0xFE8
 25981                           indf1	equ	0xFE7
 25982                           postinc1	equ	0xFE6
 25983                           postdec1	equ	0xFE5
 25984                           fsr1h	equ	0xFE2
 25985                           fsr1l	equ	0xFE1
 25986                           indf2	equ	0xFDF
 25987                           postinc2	equ	0xFDE
 25988                           postdec2	equ	0xFDD
 25989                           fsr2h	equ	0xFDA
 25990                           fsr2l	equ	0xFD9
 25991                           status	equ	0xFD8
 25992                           
 25993 ;; *************** function _TCPDisconnect *****************
 25994 ;; Defined at:
 25995 ;;		line 788 in file "../tcpip/tcp.c"
 25996 ;; Parameters:    Size  Location     Type
 25997 ;;  hTCP            1    wreg     unsigned char 
 25998 ;; Auto vars:     Size  Location     Type
 25999 ;;  hTCP            1   86[BANK1 ] unsigned char 
 26000 ;; Return value:  Size  Location     Type
 26001 ;;		None               void
 26002 ;; Registers used:
 26003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26004 ;; Tracked objects:
 26005 ;;		On entry : 0/0
 26006 ;;		On exit  : 0/0
 26007 ;;		Unchanged: 0/0
 26008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26010 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26012 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26013 ;;Total ram usage:        1 bytes
 26014 ;; Hardware stack levels used:    1
 26015 ;; Hardware stack levels required when called:   15
 26016 ;; This function calls:
 26017 ;;		_CloseSocket
 26018 ;;		_SendTCP
 26019 ;;		_SyncTCBStub
 26020 ;; This function is called by:
 26021 ;;		_TCPClose
 26022 ;;		_TCPTick
 26023 ;; This function uses a non-reentrant model
 26024 ;;
 26025                           
 26026                           	psect	text48
 26027  018CEA                     __ptext48:
 26028                           	opt stack 0
 26029  018CEA                     _TCPDisconnect:
 26030                           	opt stack 12
 26031                           
 26032                           ; BSR set to: 1
 26033                           ;incstack = 0
 26034                           ;TCPDisconnect@hTCP stored from wreg
 26035  018CEA  0101               	movlb	1	; () banked
 26036  018CEC  6F56               	movwf	TCPDisconnect@hTCP& (0+255),b
 26037                           
 26038                           ; BSR set to: 1
 26039                           ;tcp.c: 790: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 26040  018CEE  0101               	movlb	1	; () banked
 26041  018CF0  5156               	movf	TCPDisconnect@hTCP& (0+255),w,b
 26042  018CF2  A4D8               	btfss	status,2,c
 26043  018CF4  0012               	return	
 26044                           
 26045                           ; BSR set to: 1
 26046                           ;tcp.c: 793: }
 26047                           ;tcp.c: 795: SyncTCBStub(hTCP);
 26048                           
 26049                           ; BSR set to: 1
 26050                           
 26051                           ; BSR set to: 1
 26052                           ;tcp.c: 791: {
 26053                           ;tcp.c: 792: return;
 26054  018CF6  0101               	movlb	1	; () banked
 26055  018CF8  5156               	movf	TCPDisconnect@hTCP& (0+255),w,b
 26056  018CFA  EC3D  F0D0         	call	_SyncTCBStub
 26057                           
 26058                           ;tcp.c: 804: MyTCBStub.rxTail = MyTCBStub.rxHead;
 26059  018CFE  C1EA  F1EC         	movff	_MyTCBStub+10,_MyTCBStub+12
 26060  018D02  C1EB  F1ED         	movff	_MyTCBStub+11,_MyTCBStub+13
 26061                           
 26062                           ;tcp.c: 806: switch(MyTCBStub.smState)
 26063  018D06  D04E               	goto	l12554
 26064  018D08                     l12524:
 26065                           
 26066                           ;tcp.c: 816: case TCP_GATEWAY_SEND_ARP:
 26067                           ;tcp.c: 817: case TCP_GATEWAY_GET_ARP:
 26068                           ;tcp.c: 818: case TCP_SYN_SENT:
 26069                           ;tcp.c: 819: CloseSocket();
 26070  018D08  ECFD  F0CD         	call	_CloseSocket	;wreg free
 26071                           
 26072                           ;tcp.c: 820: break;
 26073  018D0C  0012               	return	
 26074  018D0E                     l12526:
 26075                           
 26076                           ;tcp.c: 840: {
 26077                           ;tcp.c: 841: SendTCP((0x01) | (0x10), 0x01);
 26078  018D0E  0E01               	movlw	1
 26079  018D10  0101               	movlb	1	; () banked
 26080  018D12  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 26081  018D14  0E11               	movlw	17
 26082  018D16  ECC1  F096         	call	_SendTCP
 26083                           
 26084                           ;tcp.c: 842: if(MyTCB.remoteWindow == 0u)
 26085  018D1A  0101               	movlb	1	; () banked
 26086  018D1C  51CC               	movf	(_MyTCB+19)& (0+255),w,b
 26087  018D1E  11CB               	iorwf	(_MyTCB+18)& (0+255),w,b
 26088  018D20  B4D8               	btfsc	status,2,c
 26089  018D22  D010               	goto	l12534
 26090                           
 26091                           ; BSR set to: 1
 26092                           ;tcp.c: 844: } while(MyTCBStub.txHead != MyTCB.txUnackedTail);
 26093                           
 26094                           ; BSR set to: 1
 26095                           
 26096                           ; BSR set to: 1
 26097                           ;tcp.c: 843: break;
 26098  018D24  0101               	movlb	1	; () banked
 26099  018D26  EE21  F0C5         	lfsr	2,_MyTCB+12
 26100  018D2A  0101               	movlb	1	; () banked
 26101  018D2C  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 26102  018D30  52E6               	movf	postinc1,f,c
 26103  018D32  52DE               	movf	postinc2,f,c
 26104  018D34  50DD               	movf	postdec2,w,c
 26105  018D36  18E5               	xorwf	postdec1,w,c
 26106  018D38  CFDF FFE8          	movff	indf2,wreg
 26107  018D3C  B4D8               	btfsc	status,2,c
 26108  018D3E  18E7               	xorwf	indf1,w,c
 26109  018D40  A4D8               	btfss	status,2,c
 26110  018D42  D7E5               	goto	l12526
 26111  018D44                     l12534:
 26112                           
 26113                           ; BSR set to: 1
 26114                           ;tcp.c: 846: MyTCBStub.smState = TCP_FIN_WAIT_1;
 26115  018D44  0E08               	movlw	8
 26116  018D46  0101               	movlb	1	; () banked
 26117  018D48  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 26118                           
 26119                           ;tcp.c: 847: break;
 26120  018D4A  0012               	return	
 26121  018D4C                     l12536:
 26122                           
 26123                           ; BSR set to: 1
 26124                           ;tcp.c: 856: {
 26125                           ;tcp.c: 857: SendTCP((0x01) | (0x10), 0x01);
 26126  018D4C  0E01               	movlw	1
 26127  018D4E  0101               	movlb	1	; () banked
 26128  018D50  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 26129  018D52  0E11               	movlw	17
 26130  018D54  ECC1  F096         	call	_SendTCP
 26131                           
 26132                           ;tcp.c: 858: if(MyTCB.remoteWindow == 0u)
 26133  018D58  0101               	movlb	1	; () banked
 26134  018D5A  51CC               	movf	(_MyTCB+19)& (0+255),w,b
 26135  018D5C  11CB               	iorwf	(_MyTCB+18)& (0+255),w,b
 26136  018D5E  B4D8               	btfsc	status,2,c
 26137  018D60  D010               	goto	l12544
 26138                           
 26139                           ; BSR set to: 1
 26140                           ;tcp.c: 860: } while(MyTCBStub.txHead != MyTCB.txUnackedTail);
 26141                           
 26142                           ; BSR set to: 1
 26143                           
 26144                           ; BSR set to: 1
 26145                           ;tcp.c: 859: break;
 26146  018D62  0101               	movlb	1	; () banked
 26147  018D64  EE21  F0C5         	lfsr	2,_MyTCB+12
 26148  018D68  0101               	movlb	1	; () banked
 26149  018D6A  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 26150  018D6E  52E6               	movf	postinc1,f,c
 26151  018D70  52DE               	movf	postinc2,f,c
 26152  018D72  50DD               	movf	postdec2,w,c
 26153  018D74  18E5               	xorwf	postdec1,w,c
 26154  018D76  CFDF FFE8          	movff	indf2,wreg
 26155  018D7A  B4D8               	btfsc	status,2,c
 26156  018D7C  18E7               	xorwf	indf1,w,c
 26157  018D7E  A4D8               	btfss	status,2,c
 26158  018D80  D7E5               	goto	l12536
 26159  018D82                     l12544:
 26160                           
 26161                           ; BSR set to: 1
 26162                           ;tcp.c: 862: MyTCBStub.smState = TCP_LAST_ACK;
 26163  018D82  0E0C               	movlw	12
 26164  018D84  0101               	movlb	1	; () banked
 26165  018D86  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 26166                           
 26167                           ;tcp.c: 863: break;
 26168  018D88  0012               	return	
 26169  018D8A                     l12546:
 26170                           
 26171                           ; BSR set to: 1
 26172                           ;tcp.c: 873: MyTCBStub.smState = TCP_CLOSED;
 26173  018D8A  0E0D               	movlw	13
 26174  018D8C  0101               	movlb	1	; () banked
 26175  018D8E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 26176                           
 26177                           ;tcp.c: 874: break;
 26178  018D90  0012               	return	
 26179  018D92                     l12548:
 26180                           
 26181                           ; BSR set to: 1
 26182                           ;tcp.c: 889: SendTCP((0x04) | (0x10), 0);
 26183  018D92  0E00               	movlw	0
 26184  018D94  0101               	movlb	1	; () banked
 26185  018D96  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 26186  018D98  0E14               	movlw	20
 26187  018D9A  ECC1  F096         	call	_SendTCP
 26188                           
 26189                           ;tcp.c: 890: CloseSocket();
 26190  018D9E  ECFD  F0CD         	call	_CloseSocket	;wreg free
 26191                           
 26192                           ;tcp.c: 891: break;
 26193  018DA2  0012               	return	
 26194  018DA4                     l12554:
 26195  018DA4  0101               	movlb	1	; () banked
 26196  018DA6  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 26197                           
 26198                           ; Switch size 1, requested type "space"
 26199                           ; Number of cases is 11, Range of values is 0 to 14
 26200                           ; switch strategies available:
 26201                           ; Name         Instructions Cycles
 26202                           ; simple_byte           34    18 (average)
 26203                           ;	Chosen strategy is simple_byte
 26204  018DA8  0A00               	xorlw	0	; case 0
 26205  018DAA  B4D8               	btfsc	status,2,c
 26206  018DAC  D7AD               	goto	l12524
 26207  018DAE  0A02               	xorlw	2	; case 2
 26208  018DB0  B4D8               	btfsc	status,2,c
 26209  018DB2  D7AA               	goto	l12524
 26210  018DB4  0A01               	xorlw	1	; case 3
 26211  018DB6  B4D8               	btfsc	status,2,c
 26212  018DB8  D7A7               	goto	l12524
 26213  018DBA  0A06               	xorlw	6	; case 5
 26214  018DBC  B4D8               	btfsc	status,2,c
 26215  018DBE  D7A4               	goto	l12524
 26216  018DC0  0A03               	xorlw	3	; case 6
 26217  018DC2  B4D8               	btfsc	status,2,c
 26218  018DC4  D7A4               	goto	l12526
 26219  018DC6  0A01               	xorlw	1	; case 7
 26220  018DC8  B4D8               	btfsc	status,2,c
 26221  018DCA  D7A1               	goto	l12526
 26222  018DCC  0A0F               	xorlw	15	; case 8
 26223  018DCE  B4D8               	btfsc	status,2,c
 26224  018DD0  D7E0               	goto	l12548
 26225  018DD2  0A01               	xorlw	1	; case 9
 26226  018DD4  B4D8               	btfsc	status,2,c
 26227  018DD6  D7DD               	goto	l12548
 26228  018DD8  0A02               	xorlw	2	; case 11
 26229  018DDA  B4D8               	btfsc	status,2,c
 26230  018DDC  D7B7               	goto	l12536
 26231  018DDE  0A07               	xorlw	7	; case 12
 26232  018DE0  B4D8               	btfsc	status,2,c
 26233  018DE2  D7D7               	goto	l12548
 26234  018DE4  0A02               	xorlw	2	; case 14
 26235  018DE6  B4D8               	btfsc	status,2,c
 26236  018DE8  D7D0               	goto	l12546
 26237  018DEA  D7D3               	goto	l12548
 26238  018DEC                     __end_of_TCPDisconnect:
 26239                           	opt stack 0
 26240                           tblptru	equ	0xFF8
 26241                           tblptrh	equ	0xFF7
 26242                           tblptrl	equ	0xFF6
 26243                           tablat	equ	0xFF5
 26244                           prodh	equ	0xFF4
 26245                           prodl	equ	0xFF3
 26246                           intcon	equ	0xFF2
 26247                           indf0	equ	0xFEF
 26248                           postinc0	equ	0xFEE
 26249                           fsr0h	equ	0xFEA
 26250                           fsr0l	equ	0xFE9
 26251                           wreg	equ	0xFE8
 26252                           indf1	equ	0xFE7
 26253                           postinc1	equ	0xFE6
 26254                           postdec1	equ	0xFE5
 26255                           fsr1h	equ	0xFE2
 26256                           fsr1l	equ	0xFE1
 26257                           indf2	equ	0xFDF
 26258                           postinc2	equ	0xFDE
 26259                           postdec2	equ	0xFDD
 26260                           fsr2h	equ	0xFDA
 26261                           fsr2l	equ	0xFD9
 26262                           status	equ	0xFD8
 26263                           
 26264 ;; *************** function _ARPResolve *****************
 26265 ;; Defined at:
 26266 ;;		line 569 in file "../tcpip/arp.c"
 26267 ;; Parameters:    Size  Location     Type
 26268 ;;  IPAddr          2   32[BANK1 ] PTR struct .
 26269 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 26270 ;; Auto vars:     Size  Location     Type
 26271 ;;  packet         28   50[BANK1 ] struct .
 26272 ;; Return value:  Size  Location     Type
 26273 ;;		None               void
 26274 ;; Registers used:
 26275 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26276 ;; Tracked objects:
 26277 ;;		On entry : 0/0
 26278 ;;		On exit  : 0/0
 26279 ;;		Unchanged: 0/0
 26280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26281 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26282 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26283 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26284 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26285 ;;Total ram usage:       46 bytes
 26286 ;; Hardware stack levels used:    1
 26287 ;; Hardware stack levels required when called:   15
 26288 ;; This function calls:
 26289 ;;		_ARPPut
 26290 ;; This function is called by:
 26291 ;;		_TCPTick
 26292 ;; This function uses a non-reentrant model
 26293 ;;
 26294                           
 26295                           	psect	text49
 26296  018DEC                     __ptext49:
 26297                           	opt stack 0
 26298  018DEC                     _ARPResolve:
 26299                           	opt stack 12
 26300                           
 26301                           ;arp.c: 571: ARP_PACKET packet;
 26302                           ;arp.c: 595: packet.Operation = 0x0001u;
 26303                           
 26304                           ;incstack = 0
 26305  018DEC  0E00               	movlw	0
 26306  018DEE  0101               	movlb	1	; () banked
 26307  018DF0  6F39               	movwf	(ARPResolve@packet+7)& (0+255),b
 26308  018DF2  0E01               	movlw	1
 26309  018DF4  0101               	movlb	1	; () banked
 26310  018DF6  6F38               	movwf	(ARPResolve@packet+6)& (0+255),b
 26311                           
 26312                           ; BSR set to: 1
 26313                           ;arp.c: 596: packet.TargetMACAddr.v[0] = 0xff;
 26314  018DF8  0101               	movlb	1	; () banked
 26315  018DFA  6944               	setf	(ARPResolve@packet+18)& (0+255),b
 26316                           
 26317                           ; BSR set to: 1
 26318                           ;arp.c: 597: packet.TargetMACAddr.v[1] = 0xff;
 26319  018DFC  0101               	movlb	1	; () banked
 26320  018DFE  6945               	setf	(ARPResolve@packet+19)& (0+255),b
 26321                           
 26322                           ; BSR set to: 1
 26323                           ;arp.c: 598: packet.TargetMACAddr.v[2] = 0xff;
 26324  018E00  0101               	movlb	1	; () banked
 26325  018E02  6946               	setf	(ARPResolve@packet+20)& (0+255),b
 26326                           
 26327                           ; BSR set to: 1
 26328                           ;arp.c: 599: packet.TargetMACAddr.v[3] = 0xff;
 26329  018E04  0101               	movlb	1	; () banked
 26330  018E06  6947               	setf	(ARPResolve@packet+21)& (0+255),b
 26331                           
 26332                           ; BSR set to: 1
 26333                           ;arp.c: 600: packet.TargetMACAddr.v[4] = 0xff;
 26334  018E08  0101               	movlb	1	; () banked
 26335  018E0A  6948               	setf	(ARPResolve@packet+22)& (0+255),b
 26336                           
 26337                           ; BSR set to: 1
 26338                           ;arp.c: 601: packet.TargetMACAddr.v[5] = 0xff;
 26339  018E0C  0101               	movlb	1	; () banked
 26340  018E0E  6949               	setf	(ARPResolve@packet+23)& (0+255),b
 26341                           
 26342                           ; BSR set to: 1
 26343                           ;arp.c: 606: packet.TargetIPAddr = ((AppConfig.MyIPAddr.Val ^ IPAddr->Val) & AppConfig.M
      +                          yMask.Val) ? AppConfig.MyGateway : *IPAddr;
 26344  018E10  C120  FFD9         	movff	ARPResolve@IPAddr,fsr2l
 26345  018E14  C121  FFDA         	movff	ARPResolve@IPAddr+1,fsr2h
 26346  018E18  CFDE F122          	movff	postinc2,??_ARPResolve
 26347  018E1C  CFDE F123          	movff	postinc2,??_ARPResolve+1
 26348  018E20  CFDE F124          	movff	postinc2,??_ARPResolve+2
 26349  018E24  CFDE F125          	movff	postinc2,??_ARPResolve+3
 26350  018E28  0102               	movlb	2	; () banked
 26351  018E2A  513C               	movf	_AppConfig& (0+255),w,b
 26352  018E2C  0101               	movlb	1	; () banked
 26353  018E2E  1922               	xorwf	??_ARPResolve& (0+255),w,b
 26354  018E30  0101               	movlb	1	; () banked
 26355  018E32  6F26               	movwf	(??_ARPResolve+4)& (0+255),b
 26356  018E34  0102               	movlb	2	; () banked
 26357  018E36  513D               	movf	(_AppConfig+1)& (0+255),w,b
 26358  018E38  0101               	movlb	1	; () banked
 26359  018E3A  1923               	xorwf	(??_ARPResolve+1)& (0+255),w,b
 26360  018E3C  0101               	movlb	1	; () banked
 26361  018E3E  6F27               	movwf	(??_ARPResolve+5)& (0+255),b
 26362  018E40  0102               	movlb	2	; () banked
 26363  018E42  513E               	movf	(_AppConfig+2)& (0+255),w,b
 26364  018E44  0101               	movlb	1	; () banked
 26365  018E46  1924               	xorwf	(??_ARPResolve+2)& (0+255),w,b
 26366  018E48  0101               	movlb	1	; () banked
 26367  018E4A  6F28               	movwf	(??_ARPResolve+6)& (0+255),b
 26368  018E4C  0102               	movlb	2	; () banked
 26369  018E4E  513F               	movf	(_AppConfig+3)& (0+255),w,b
 26370  018E50  0101               	movlb	1	; () banked
 26371  018E52  1925               	xorwf	(??_ARPResolve+3)& (0+255),w,b
 26372  018E54  0101               	movlb	1	; () banked
 26373  018E56  6F29               	movwf	(??_ARPResolve+7)& (0+255),b
 26374  018E58  0102               	movlb	2	; () banked
 26375  018E5A  5140               	movf	(_AppConfig+4)& (0+255),w,b
 26376  018E5C  0101               	movlb	1	; () banked
 26377  018E5E  1526               	andwf	(??_ARPResolve+4)& (0+255),w,b
 26378  018E60  0101               	movlb	1	; () banked
 26379  018E62  6F2A               	movwf	(??_ARPResolve+8)& (0+255),b
 26380  018E64  0102               	movlb	2	; () banked
 26381  018E66  5141               	movf	(_AppConfig+5)& (0+255),w,b
 26382  018E68  0101               	movlb	1	; () banked
 26383  018E6A  1527               	andwf	(??_ARPResolve+5)& (0+255),w,b
 26384  018E6C  0101               	movlb	1	; () banked
 26385  018E6E  6F2B               	movwf	(??_ARPResolve+9)& (0+255),b
 26386  018E70  0102               	movlb	2	; () banked
 26387  018E72  5142               	movf	(_AppConfig+6)& (0+255),w,b
 26388  018E74  0101               	movlb	1	; () banked
 26389  018E76  1528               	andwf	(??_ARPResolve+6)& (0+255),w,b
 26390  018E78  0101               	movlb	1	; () banked
 26391  018E7A  6F2C               	movwf	(??_ARPResolve+10)& (0+255),b
 26392  018E7C  0102               	movlb	2	; () banked
 26393  018E7E  5143               	movf	(_AppConfig+7)& (0+255),w,b
 26394  018E80  0101               	movlb	1	; () banked
 26395  018E82  1529               	andwf	(??_ARPResolve+7)& (0+255),w,b
 26396  018E84  0101               	movlb	1	; () banked
 26397  018E86  6F2D               	movwf	(??_ARPResolve+11)& (0+255),b
 26398  018E88  0101               	movlb	1	; () banked
 26399  018E8A  512D               	movf	(??_ARPResolve+11)& (0+255),w,b
 26400  018E8C  112A               	iorwf	(??_ARPResolve+8)& (0+255),w,b
 26401  018E8E  112B               	iorwf	(??_ARPResolve+9)& (0+255),w,b
 26402  018E90  112C               	iorwf	(??_ARPResolve+10)& (0+255),w,b
 26403  018E92  A4D8               	btfss	status,2,c
 26404  018E94  D011               	goto	l477
 26405                           
 26406                           ; BSR set to: 1
 26407  018E96  C120  FFD9         	movff	ARPResolve@IPAddr,fsr2l
 26408  018E9A  C121  FFDA         	movff	ARPResolve@IPAddr+1,fsr2h
 26409  018E9E  0101               	movlb	1	; () banked
 26410  018EA0  CFDE F12E          	movff	postinc2,_ARPResolve$3399
 26411  018EA4  0101               	movlb	1	; () banked
 26412  018EA6  CFDE F12F          	movff	postinc2,_ARPResolve$3399+1
 26413  018EAA  0101               	movlb	1	; () banked
 26414  018EAC  CFDE F130          	movff	postinc2,_ARPResolve$3399+2
 26415  018EB0  0101               	movlb	1	; () banked
 26416  018EB2  CFDE F131          	movff	postinc2,_ARPResolve$3399+3
 26417  018EB6  D008               	goto	l479
 26418  018EB8                     l477:
 26419                           
 26420                           ; BSR set to: 1
 26421  018EB8  C244  F12E         	movff	_AppConfig+8,_ARPResolve$3399
 26422  018EBC  C245  F12F         	movff	_AppConfig+9,_ARPResolve$3399+1
 26423  018EC0  C246  F130         	movff	_AppConfig+10,_ARPResolve$3399+2
 26424  018EC4  C247  F131         	movff	_AppConfig+11,_ARPResolve$3399+3
 26425  018EC8                     l479:
 26426                           
 26427                           ; BSR set to: 1
 26428  018EC8  C12E  F14A         	movff	_ARPResolve$3399,ARPResolve@packet+24
 26429  018ECC  C12F  F14B         	movff	_ARPResolve$3399+1,ARPResolve@packet+25
 26430  018ED0  C130  F14C         	movff	_ARPResolve$3399+2,ARPResolve@packet+26
 26431  018ED4  C131  F14D         	movff	_ARPResolve$3399+3,ARPResolve@packet+27
 26432                           
 26433                           ; BSR set to: 1
 26434                           ;arp.c: 611: ARPPut(&packet);
 26435  018ED8  0101               	movlb	1	; () banked
 26436  018EDA  0E01               	movlw	high ARPResolve@packet
 26437  018EDC  0101               	movlb	1	; () banked
 26438  018EDE  6F1F               	movwf	(ARPPut@packet+1)& (0+255),b
 26439  018EE0  0101               	movlb	1	; () banked
 26440  018EE2  0E32               	movlw	low ARPResolve@packet
 26441  018EE4  0101               	movlb	1	; () banked
 26442  018EE6  6F1E               	movwf	ARPPut@packet& (0+255),b
 26443  018EE8  EC05  F0C1         	call	_ARPPut	;wreg free
 26444  018EEC  0012               	return	
 26445  018EEE                     __end_of_ARPResolve:
 26446                           	opt stack 0
 26447                           tblptru	equ	0xFF8
 26448                           tblptrh	equ	0xFF7
 26449                           tblptrl	equ	0xFF6
 26450                           tablat	equ	0xFF5
 26451                           prodh	equ	0xFF4
 26452                           prodl	equ	0xFF3
 26453                           intcon	equ	0xFF2
 26454                           indf0	equ	0xFEF
 26455                           postinc0	equ	0xFEE
 26456                           fsr0h	equ	0xFEA
 26457                           fsr0l	equ	0xFE9
 26458                           wreg	equ	0xFE8
 26459                           indf1	equ	0xFE7
 26460                           postinc1	equ	0xFE6
 26461                           postdec1	equ	0xFE5
 26462                           fsr1h	equ	0xFE2
 26463                           fsr1l	equ	0xFE1
 26464                           indf2	equ	0xFDF
 26465                           postinc2	equ	0xFDE
 26466                           postdec2	equ	0xFDD
 26467                           fsr2h	equ	0xFDA
 26468                           fsr2l	equ	0xFD9
 26469                           status	equ	0xFD8
 26470                           
 26471 ;; *************** function _ARPIsResolved *****************
 26472 ;; Defined at:
 26473 ;;		line 654 in file "../tcpip/arp.c"
 26474 ;; Parameters:    Size  Location     Type
 26475 ;;  IPAddr          2    0[BANK1 ] PTR struct .
 26476 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 26477 ;;  MACAddr         2    2[BANK1 ] PTR struct .
 26478 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 26479 ;; Auto vars:     Size  Location     Type
 26480 ;;		None
 26481 ;; Return value:  Size  Location     Type
 26482 ;;                  1    wreg      unsigned char 
 26483 ;; Registers used:
 26484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26485 ;; Tracked objects:
 26486 ;;		On entry : 0/0
 26487 ;;		On exit  : 0/0
 26488 ;;		Unchanged: 0/0
 26489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26490 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26492 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26493 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26494 ;;Total ram usage:       16 bytes
 26495 ;; Hardware stack levels used:    1
 26496 ;; Hardware stack levels required when called:   10
 26497 ;; This function calls:
 26498 ;;		Nothing
 26499 ;; This function is called by:
 26500 ;;		_TCPTick
 26501 ;; This function uses a non-reentrant model
 26502 ;;
 26503                           
 26504                           	psect	text50
 26505  01869E                     __ptext50:
 26506                           	opt stack 0
 26507  01869E                     _ARPIsResolved:
 26508                           	opt stack 17
 26509                           
 26510                           ;arp.c: 656: if((Cache.IPAddr.Val == IPAddr->Val) ||
 26511                           ;arp.c: 657: ((Cache.IPAddr.Val == AppConfig.MyGateway.Val) && ((AppConfig.MyIPAddr.Val 
      +                          ^ IPAddr->Val) & AppConfig.MyMask.Val)))
 26512                           
 26513                           ;incstack = 0
 26514  01869E  C100  FFD9         	movff	ARPIsResolved@IPAddr,fsr2l
 26515  0186A2  C101  FFDA         	movff	ARPIsResolved@IPAddr+1,fsr2h
 26516  0186A6  CFDE F104          	movff	postinc2,??_ARPIsResolved
 26517  0186AA  CFDE F105          	movff	postinc2,??_ARPIsResolved+1
 26518  0186AE  CFDE F106          	movff	postinc2,??_ARPIsResolved+2
 26519  0186B2  CFDE F107          	movff	postinc2,??_ARPIsResolved+3
 26520  0186B6  0100               	movlb	0	; () banked
 26521  0186B8  51C0               	movf	(_Cache+3)& (0+255),w,b
 26522  0186BA  0101               	movlb	1	; () banked
 26523  0186BC  1907               	xorwf	(??_ARPIsResolved+3)& (0+255),w,b
 26524  0186BE  E10E               	bnz	u13685
 26525  0186C0  0100               	movlb	0	; () banked
 26526  0186C2  51BF               	movf	(_Cache+2)& (0+255),w,b
 26527  0186C4  0101               	movlb	1	; () banked
 26528  0186C6  1906               	xorwf	(??_ARPIsResolved+2)& (0+255),w,b
 26529  0186C8  E109               	bnz	u13685
 26530  0186CA  0100               	movlb	0	; () banked
 26531  0186CC  51BE               	movf	(_Cache+1)& (0+255),w,b
 26532  0186CE  0101               	movlb	1	; () banked
 26533  0186D0  1905               	xorwf	(??_ARPIsResolved+1)& (0+255),w,b
 26534  0186D2  E104               	bnz	u13685
 26535  0186D4  0100               	movlb	0	; () banked
 26536  0186D6  51BD               	movf	_Cache& (0+255),w,b
 26537  0186D8  0101               	movlb	1	; () banked
 26538  0186DA  1904               	xorwf	??_ARPIsResolved& (0+255),w,b
 26539  0186DC                     u13685:
 26540  0186DC  B4D8               	btfsc	status,2,c
 26541  0186DE  D058               	goto	l12440
 26542                           
 26543                           ; BSR set to: 1
 26544  0186E0  0100               	movlb	0	; () banked
 26545  0186E2  51C0               	movf	(_Cache+3)& (0+255),w,b
 26546  0186E4  0102               	movlb	2	; () banked
 26547  0186E6  1947               	xorwf	(_AppConfig+11)& (0+255),w,b
 26548  0186E8  E10E               	bnz	u13695
 26549  0186EA  0100               	movlb	0	; () banked
 26550  0186EC  51BF               	movf	(_Cache+2)& (0+255),w,b
 26551  0186EE  0102               	movlb	2	; () banked
 26552  0186F0  1946               	xorwf	(_AppConfig+10)& (0+255),w,b
 26553  0186F2  E109               	bnz	u13695
 26554  0186F4  0100               	movlb	0	; () banked
 26555  0186F6  51BE               	movf	(_Cache+1)& (0+255),w,b
 26556  0186F8  0102               	movlb	2	; () banked
 26557  0186FA  1945               	xorwf	(_AppConfig+9)& (0+255),w,b
 26558  0186FC  E104               	bnz	u13695
 26559  0186FE  0100               	movlb	0	; () banked
 26560  018700  51BD               	movf	_Cache& (0+255),w,b
 26561  018702  0102               	movlb	2	; () banked
 26562  018704  1944               	xorwf	(_AppConfig+8)& (0+255),w,b
 26563  018706                     u13695:
 26564  018706  A4D8               	btfss	status,2,c
 26565  018708  D052               	goto	l12446
 26566                           
 26567                           ; BSR set to: 2
 26568  01870A  C100  FFD9         	movff	ARPIsResolved@IPAddr,fsr2l
 26569  01870E  C101  FFDA         	movff	ARPIsResolved@IPAddr+1,fsr2h
 26570  018712  CFDE F104          	movff	postinc2,??_ARPIsResolved
 26571  018716  CFDE F105          	movff	postinc2,??_ARPIsResolved+1
 26572  01871A  CFDE F106          	movff	postinc2,??_ARPIsResolved+2
 26573  01871E  CFDE F107          	movff	postinc2,??_ARPIsResolved+3
 26574  018722  0102               	movlb	2	; () banked
 26575  018724  513C               	movf	_AppConfig& (0+255),w,b
 26576  018726  0101               	movlb	1	; () banked
 26577  018728  1904               	xorwf	??_ARPIsResolved& (0+255),w,b
 26578  01872A  0101               	movlb	1	; () banked
 26579  01872C  6F08               	movwf	(??_ARPIsResolved+4)& (0+255),b
 26580  01872E  0102               	movlb	2	; () banked
 26581  018730  513D               	movf	(_AppConfig+1)& (0+255),w,b
 26582  018732  0101               	movlb	1	; () banked
 26583  018734  1905               	xorwf	(??_ARPIsResolved+1)& (0+255),w,b
 26584  018736  0101               	movlb	1	; () banked
 26585  018738  6F09               	movwf	(??_ARPIsResolved+5)& (0+255),b
 26586  01873A  0102               	movlb	2	; () banked
 26587  01873C  513E               	movf	(_AppConfig+2)& (0+255),w,b
 26588  01873E  0101               	movlb	1	; () banked
 26589  018740  1906               	xorwf	(??_ARPIsResolved+2)& (0+255),w,b
 26590  018742  0101               	movlb	1	; () banked
 26591  018744  6F0A               	movwf	(??_ARPIsResolved+6)& (0+255),b
 26592  018746  0102               	movlb	2	; () banked
 26593  018748  513F               	movf	(_AppConfig+3)& (0+255),w,b
 26594  01874A  0101               	movlb	1	; () banked
 26595  01874C  1907               	xorwf	(??_ARPIsResolved+3)& (0+255),w,b
 26596  01874E  0101               	movlb	1	; () banked
 26597  018750  6F0B               	movwf	(??_ARPIsResolved+7)& (0+255),b
 26598  018752  0102               	movlb	2	; () banked
 26599  018754  5140               	movf	(_AppConfig+4)& (0+255),w,b
 26600  018756  0101               	movlb	1	; () banked
 26601  018758  1508               	andwf	(??_ARPIsResolved+4)& (0+255),w,b
 26602  01875A  0101               	movlb	1	; () banked
 26603  01875C  6F0C               	movwf	(??_ARPIsResolved+8)& (0+255),b
 26604  01875E  0102               	movlb	2	; () banked
 26605  018760  5141               	movf	(_AppConfig+5)& (0+255),w,b
 26606  018762  0101               	movlb	1	; () banked
 26607  018764  1509               	andwf	(??_ARPIsResolved+5)& (0+255),w,b
 26608  018766  0101               	movlb	1	; () banked
 26609  018768  6F0D               	movwf	(??_ARPIsResolved+9)& (0+255),b
 26610  01876A  0102               	movlb	2	; () banked
 26611  01876C  5142               	movf	(_AppConfig+6)& (0+255),w,b
 26612  01876E  0101               	movlb	1	; () banked
 26613  018770  150A               	andwf	(??_ARPIsResolved+6)& (0+255),w,b
 26614  018772  0101               	movlb	1	; () banked
 26615  018774  6F0E               	movwf	(??_ARPIsResolved+10)& (0+255),b
 26616  018776  0102               	movlb	2	; () banked
 26617  018778  5143               	movf	(_AppConfig+7)& (0+255),w,b
 26618  01877A  0101               	movlb	1	; () banked
 26619  01877C  150B               	andwf	(??_ARPIsResolved+7)& (0+255),w,b
 26620  01877E  0101               	movlb	1	; () banked
 26621  018780  6F0F               	movwf	(??_ARPIsResolved+11)& (0+255),b
 26622  018782  0101               	movlb	1	; () banked
 26623  018784  510F               	movf	(??_ARPIsResolved+11)& (0+255),w,b
 26624  018786  110C               	iorwf	(??_ARPIsResolved+8)& (0+255),w,b
 26625  018788  110D               	iorwf	(??_ARPIsResolved+9)& (0+255),w,b
 26626  01878A  110E               	iorwf	(??_ARPIsResolved+10)& (0+255),w,b
 26627  01878C  B4D8               	btfsc	status,2,c
 26628  01878E  D00F               	goto	l12446
 26629  018790                     l12440:
 26630                           
 26631                           ; BSR set to: 1
 26632                           ;arp.c: 658: {
 26633                           ;arp.c: 659: *MACAddr = Cache.MACAddr;
 26634  018790  EE20  F0C1         	lfsr	2,_Cache+4
 26635  018794  0101               	movlb	1	; () banked
 26636  018796  C102  FFE1         	movff	ARPIsResolved@MACAddr,fsr1l
 26637  01879A  0101               	movlb	1	; () banked
 26638  01879C  C103  FFE2         	movff	ARPIsResolved@MACAddr+1,fsr1h
 26639  0187A0  0E06               	movlw	6
 26640  0187A2                     u13711:
 26641  0187A2  CFDE FFE6          	movff	postinc2,postinc1
 26642  0187A6  2EE8               	decfsz	wreg,f,c
 26643  0187A8  D7FC               	goto	u13711
 26644                           
 26645                           ; BSR set to: 1
 26646                           ;arp.c: 661: return 1;
 26647  0187AA  0E01               	movlw	1
 26648  0187AC  0012               	return	
 26649  0187AE                     l12446:
 26650                           
 26651                           ;arp.c: 662: }
 26652                           ;arp.c: 666: return 0;
 26653  0187AE  0E00               	movlw	0
 26654  0187B0  0012               	return	
 26655  0187B2                     __end_of_ARPIsResolved:
 26656                           	opt stack 0
 26657                           tblptru	equ	0xFF8
 26658                           tblptrh	equ	0xFF7
 26659                           tblptrl	equ	0xFF6
 26660                           tablat	equ	0xFF5
 26661                           prodh	equ	0xFF4
 26662                           prodl	equ	0xFF3
 26663                           intcon	equ	0xFF2
 26664                           indf0	equ	0xFEF
 26665                           postinc0	equ	0xFEE
 26666                           fsr0h	equ	0xFEA
 26667                           fsr0l	equ	0xFE9
 26668                           wreg	equ	0xFE8
 26669                           indf1	equ	0xFE7
 26670                           postinc1	equ	0xFE6
 26671                           postdec1	equ	0xFE5
 26672                           fsr1h	equ	0xFE2
 26673                           fsr1l	equ	0xFE1
 26674                           indf2	equ	0xFDF
 26675                           postinc2	equ	0xFDE
 26676                           postdec2	equ	0xFDD
 26677                           fsr2h	equ	0xFDA
 26678                           fsr2l	equ	0xFD9
 26679                           status	equ	0xFD8
 26680                           
 26681 ;; *************** function _TCPProcess *****************
 26682 ;; Defined at:
 26683 ;;		line 2781 in file "../tcpip/tcp.c"
 26684 ;; Parameters:    Size  Location     Type
 26685 ;;  remote          2  126[BANK1 ] PTR struct .
 26686 ;;		 -> remoteNode(10), 
 26687 ;;  localIP         2  128[BANK1 ] PTR struct .
 26688 ;;		 -> StackTask@tempLocalIP(4), 
 26689 ;;  len             2  130[BANK1 ] unsigned int 
 26690 ;; Auto vars:     Size  Location     Type
 26691 ;;  TCPHeader      20  151[BANK1 ] struct .
 26692 ;;  pseudoHeader   12  139[BANK1 ] struct _PSEUDO_HEADER
 26693 ;;  checksum2       2  136[BANK1 ] struct .
 26694 ;;  checksum1       2  134[BANK1 ] struct .
 26695 ;;  optionsSize     1  138[BANK1 ] unsigned char 
 26696 ;; Return value:  Size  Location     Type
 26697 ;;                  1    wreg      unsigned char 
 26698 ;; Registers used:
 26699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26700 ;; Tracked objects:
 26701 ;;		On entry : 0/0
 26702 ;;		On exit  : 0/0
 26703 ;;		Unchanged: 0/0
 26704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26705 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26706 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26707 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26708 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26709 ;;Total ram usage:       45 bytes
 26710 ;; Hardware stack levels used:    1
 26711 ;; Hardware stack levels required when called:   16
 26712 ;; This function calls:
 26713 ;;		_CalcIPBufferChecksum
 26714 ;;		_CalcIPChecksum
 26715 ;;		_FindMatchingSocket
 26716 ;;		_HandleTCPSeg
 26717 ;;		_IPSetRxBuffer
 26718 ;;		_MACDiscardRx
 26719 ;;		_MACGetArray
 26720 ;;		_SwapTCPHeader
 26721 ;;		_swaps
 26722 ;; This function is called by:
 26723 ;;		_StackTask
 26724 ;; This function uses a non-reentrant model
 26725 ;;
 26726                           
 26727                           	psect	text51
 26728  016A88                     __ptext51:
 26729                           	opt stack 0
 26730  016A88                     _TCPProcess:
 26731                           	opt stack 12
 26732                           
 26733                           ;tcp.c: 2783: TCP_HEADER TCPHeader;
 26734                           ;tcp.c: 2784: PSEUDO_HEADER pseudoHeader;
 26735                           ;tcp.c: 2785: TCPIP_UINT16_VAL checksum1;
 26736                           ;tcp.c: 2786: TCPIP_UINT16_VAL checksum2;
 26737                           ;tcp.c: 2787: uint8_t optionsSize;
 26738                           ;tcp.c: 2790: pseudoHeader.SourceAddress = remote->IPAddr;
 26739                           
 26740                           ;incstack = 0
 26741  016A88  C17E  FFD9         	movff	TCPProcess@remote,fsr2l
 26742  016A8C  C17F  FFDA         	movff	TCPProcess@remote+1,fsr2h
 26743  016A90  0101               	movlb	1	; () banked
 26744  016A92  CFDE F18B          	movff	postinc2,TCPProcess@pseudoHeader
 26745  016A96  0101               	movlb	1	; () banked
 26746  016A98  CFDE F18C          	movff	postinc2,TCPProcess@pseudoHeader+1
 26747  016A9C  0101               	movlb	1	; () banked
 26748  016A9E  CFDE F18D          	movff	postinc2,TCPProcess@pseudoHeader+2
 26749  016AA2  0101               	movlb	1	; () banked
 26750  016AA4  CFDE F18E          	movff	postinc2,TCPProcess@pseudoHeader+3
 26751                           
 26752                           ;tcp.c: 2791: pseudoHeader.DestAddress = *localIP;
 26753  016AA8  C180  FFD9         	movff	TCPProcess@localIP,fsr2l
 26754  016AAC  C181  FFDA         	movff	TCPProcess@localIP+1,fsr2h
 26755  016AB0  0101               	movlb	1	; () banked
 26756  016AB2  CFDE F18F          	movff	postinc2,TCPProcess@pseudoHeader+4
 26757  016AB6  0101               	movlb	1	; () banked
 26758  016AB8  CFDE F190          	movff	postinc2,TCPProcess@pseudoHeader+5
 26759  016ABC  0101               	movlb	1	; () banked
 26760  016ABE  CFDE F191          	movff	postinc2,TCPProcess@pseudoHeader+6
 26761  016AC2  0101               	movlb	1	; () banked
 26762  016AC4  CFDE F192          	movff	postinc2,TCPProcess@pseudoHeader+7
 26763                           
 26764                           ; BSR set to: 1
 26765                           ;tcp.c: 2792: pseudoHeader.Zero = 0x0;
 26766  016AC8  0E00               	movlw	0
 26767  016ACA  0101               	movlb	1	; () banked
 26768  016ACC  6F93               	movwf	(TCPProcess@pseudoHeader+8)& (0+255),b
 26769                           
 26770                           ; BSR set to: 1
 26771                           ;tcp.c: 2793: pseudoHeader.Protocol = (6u);
 26772  016ACE  0E06               	movlw	6
 26773  016AD0  0101               	movlb	1	; () banked
 26774  016AD2  6F94               	movwf	(TCPProcess@pseudoHeader+9)& (0+255),b
 26775                           
 26776                           ; BSR set to: 1
 26777                           ;tcp.c: 2794: pseudoHeader.Length = len;
 26778  016AD4  C182  F195         	movff	TCPProcess@len,TCPProcess@pseudoHeader+10
 26779  016AD8  C183  F196         	movff	TCPProcess@len+1,TCPProcess@pseudoHeader+11
 26780                           
 26781                           ; BSR set to: 1
 26782                           ;tcp.c: 2796: (pseudoHeader.Length = swaps(pseudoHeader.Length));
 26783  016ADC  C195  F100         	movff	TCPProcess@pseudoHeader+10,swaps@v
 26784  016AE0  C196  F101         	movff	TCPProcess@pseudoHeader+11,swaps@v+1
 26785  016AE4  EC42  F0DC         	call	_swaps	;wreg free
 26786  016AE8  0101               	movlb	1	; () banked
 26787  016AEA  C100  F195         	movff	?_swaps,TCPProcess@pseudoHeader+10
 26788  016AEE  0101               	movlb	1	; () banked
 26789  016AF0  C101  F196         	movff	?_swaps+1,TCPProcess@pseudoHeader+11
 26790                           
 26791                           ; BSR set to: 1
 26792                           ;tcp.c: 2798: checksum1.Val = ~CalcIPChecksum((uint8_t*)&pseudoHeader,
 26793                           ;tcp.c: 2799: sizeof(pseudoHeader));
 26794  016AF4  0101               	movlb	1	; () banked
 26795  016AF6  0E01               	movlw	high TCPProcess@pseudoHeader
 26796  016AF8  0101               	movlb	1	; () banked
 26797  016AFA  6F01               	movwf	(CalcIPChecksum@buffer+1)& (0+255),b
 26798  016AFC  0101               	movlb	1	; () banked
 26799  016AFE  0E8B               	movlw	low TCPProcess@pseudoHeader
 26800  016B00  0101               	movlb	1	; () banked
 26801  016B02  6F00               	movwf	CalcIPChecksum@buffer& (0+255),b
 26802  016B04  0E00               	movlw	0
 26803  016B06  0101               	movlb	1	; () banked
 26804  016B08  6F03               	movwf	(CalcIPChecksum@count+1)& (0+255),b
 26805  016B0A  0E0C               	movlw	12
 26806  016B0C  0101               	movlb	1	; () banked
 26807  016B0E  6F02               	movwf	CalcIPChecksum@count& (0+255),b
 26808  016B10  EC77  F0C7         	call	_CalcIPChecksum	;wreg free
 26809  016B14  0101               	movlb	1	; () banked
 26810  016B16  1D00               	comf	?_CalcIPChecksum& (0+255),w,b
 26811  016B18  0101               	movlb	1	; () banked
 26812  016B1A  6F86               	movwf	TCPProcess@checksum1& (0+255),b
 26813  016B1C  0101               	movlb	1	; () banked
 26814  016B1E  1D01               	comf	(?_CalcIPChecksum+1)& (0+255),w,b
 26815  016B20  0101               	movlb	1	; () banked
 26816  016B22  6F87               	movwf	(TCPProcess@checksum1+1)& (0+255),b
 26817                           
 26818                           ; BSR set to: 1
 26819                           ;tcp.c: 2803: checksum2.Val = CalcIPBufferChecksum(len);
 26820  016B24  C182  F106         	movff	TCPProcess@len,CalcIPBufferChecksum@len
 26821  016B28  C183  F107         	movff	TCPProcess@len+1,CalcIPBufferChecksum@len+1
 26822  016B2C  EC81  F0BE         	call	_CalcIPBufferChecksum	;wreg free
 26823  016B30  0101               	movlb	1	; () banked
 26824  016B32  C106  F188         	movff	?_CalcIPBufferChecksum,TCPProcess@checksum2
 26825  016B36  0101               	movlb	1	; () banked
 26826  016B38  C107  F189         	movff	?_CalcIPBufferChecksum+1,TCPProcess@checksum2+1
 26827                           
 26828                           ; BSR set to: 1
 26829                           ;tcp.c: 2806: if(checksum1.Val != checksum2.Val)
 26830  016B3C  0101               	movlb	1	; () banked
 26831  016B3E  5189               	movf	(TCPProcess@checksum2+1)& (0+255),w,b
 26832  016B40  0101               	movlb	1	; () banked
 26833  016B42  1987               	xorwf	(TCPProcess@checksum1+1)& (0+255),w,b
 26834  016B44  E104               	bnz	u16495
 26835  016B46  0101               	movlb	1	; () banked
 26836  016B48  5188               	movf	TCPProcess@checksum2& (0+255),w,b
 26837  016B4A  0101               	movlb	1	; () banked
 26838  016B4C  1986               	xorwf	TCPProcess@checksum1& (0+255),w,b
 26839  016B4E                     u16495:
 26840  016B4E  B4D8               	btfsc	status,2,c
 26841  016B50  D003               	goto	l14134
 26842                           
 26843                           ; BSR set to: 1
 26844                           ;tcp.c: 2807: {
 26845                           ;tcp.c: 2808: MACDiscardRx();
 26846  016B52  EC51  F0D8         	call	_MACDiscardRx	;wreg free
 26847  016B56  0012               	return	
 26848  016B58                     l14134:
 26849                           
 26850                           ;tcp.c: 2810: }
 26851                           ;tcp.c: 2822: IPSetRxBuffer(0);
 26852  016B58  0E00               	movlw	0
 26853  016B5A  0101               	movlb	1	; () banked
 26854  016B5C  6F07               	movwf	(IPSetRxBuffer@Offset+1)& (0+255),b
 26855  016B5E  0E00               	movlw	0
 26856  016B60  0101               	movlb	1	; () banked
 26857  016B62  6F06               	movwf	IPSetRxBuffer@Offset& (0+255),b
 26858  016B64  EC51  F0DC         	call	_IPSetRxBuffer	;wreg free
 26859                           
 26860                           ;tcp.c: 2823: MACGetArray((uint8_t*)&TCPHeader, sizeof(TCPHeader));
 26861  016B68  0101               	movlb	1	; () banked
 26862  016B6A  0E01               	movlw	high TCPProcess@TCPHeader
 26863  016B6C  0101               	movlb	1	; () banked
 26864  016B6E  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 26865  016B70  0101               	movlb	1	; () banked
 26866  016B72  0E97               	movlw	low TCPProcess@TCPHeader
 26867  016B74  0101               	movlb	1	; () banked
 26868  016B76  6F00               	movwf	MACGetArray@val& (0+255),b
 26869  016B78  0E00               	movlw	0
 26870  016B7A  0101               	movlb	1	; () banked
 26871  016B7C  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 26872  016B7E  0E14               	movlw	20
 26873  016B80  0101               	movlb	1	; () banked
 26874  016B82  6F02               	movwf	MACGetArray@len& (0+255),b
 26875  016B84  EC42  F0D7         	call	_MACGetArray	;wreg free
 26876                           
 26877                           ;tcp.c: 2824: SwapTCPHeader(&TCPHeader);
 26878  016B88  0101               	movlb	1	; () banked
 26879  016B8A  0E01               	movlw	high TCPProcess@TCPHeader
 26880  016B8C  0101               	movlb	1	; () banked
 26881  016B8E  6F06               	movwf	(SwapTCPHeader@header+1)& (0+255),b
 26882  016B90  0101               	movlb	1	; () banked
 26883  016B92  0E97               	movlw	low TCPProcess@TCPHeader
 26884  016B94  0101               	movlb	1	; () banked
 26885  016B96  6F05               	movwf	SwapTCPHeader@header& (0+255),b
 26886  016B98  EC92  F0B0         	call	_SwapTCPHeader	;wreg free
 26887                           
 26888                           ;tcp.c: 2828: optionsSize = (uint8_t)((TCPHeader.DataOffset.Val << 2)-
 26889                           ;tcp.c: 2829: sizeof(TCPHeader));
 26890  016B9C  0101               	movlb	1	; () banked
 26891  016B9E  39A3               	swapf	(TCPProcess@TCPHeader+12)& (0+255),w,b
 26892  016BA0  0B0F               	andlw	15
 26893  016BA2  0101               	movlb	1	; () banked
 26894  016BA4  6F84               	movwf	??_TCPProcess& (0+255),b
 26895  016BA6  0101               	movlb	1	; () banked
 26896  016BA8  90D8               	bcf	status,0,c
 26897  016BAA  3784               	rlcf	??_TCPProcess& (0+255),f,b
 26898  016BAC  0101               	movlb	1	; () banked
 26899  016BAE  90D8               	bcf	status,0,c
 26900  016BB0  3584               	rlcf	??_TCPProcess& (0+255),w,b
 26901  016BB2  0FEC               	addlw	236
 26902  016BB4  0101               	movlb	1	; () banked
 26903  016BB6  6F8A               	movwf	TCPProcess@optionsSize& (0+255),b
 26904                           
 26905                           ; BSR set to: 1
 26906                           ;tcp.c: 2830: len = len - optionsSize - sizeof(TCPHeader);
 26907  016BB8  0101               	movlb	1	; () banked
 26908  016BBA  518A               	movf	TCPProcess@optionsSize& (0+255),w,b
 26909  016BBC  0101               	movlb	1	; () banked
 26910  016BBE  6F84               	movwf	??_TCPProcess& (0+255),b
 26911  016BC0  6B85               	clrf	(??_TCPProcess+1)& (0+255),b
 26912  016BC2  0E14               	movlw	20
 26913  016BC4  0101               	movlb	1	; () banked
 26914  016BC6  2784               	addwf	??_TCPProcess& (0+255),f,b
 26915  016BC8  0E00               	movlw	0
 26916  016BCA  2385               	addwfc	(??_TCPProcess+1)& (0+255),f,b
 26917  016BCC  0101               	movlb	1	; () banked
 26918  016BCE  1F84               	comf	??_TCPProcess& (0+255),f,b
 26919  016BD0  1F85               	comf	(??_TCPProcess+1)& (0+255),f,b
 26920  016BD2  4B84               	infsnz	??_TCPProcess& (0+255),f,b
 26921  016BD4  2B85               	incf	(??_TCPProcess+1)& (0+255),f,b
 26922  016BD6  0101               	movlb	1	; () banked
 26923  016BD8  5182               	movf	TCPProcess@len& (0+255),w,b
 26924  016BDA  0101               	movlb	1	; () banked
 26925  016BDC  2584               	addwf	??_TCPProcess& (0+255),w,b
 26926  016BDE  0101               	movlb	1	; () banked
 26927  016BE0  6F82               	movwf	TCPProcess@len& (0+255),b
 26928  016BE2  0101               	movlb	1	; () banked
 26929  016BE4  5183               	movf	(TCPProcess@len+1)& (0+255),w,b
 26930  016BE6  0101               	movlb	1	; () banked
 26931  016BE8  2185               	addwfc	(??_TCPProcess+1)& (0+255),w,b
 26932  016BEA  0101               	movlb	1	; () banked
 26933  016BEC  6F83               	movwf	(TCPProcess@len+1)& (0+255),b
 26934                           
 26935                           ; BSR set to: 1
 26936                           ;tcp.c: 2833: if(FindMatchingSocket(&TCPHeader, remote))
 26937  016BEE  0101               	movlb	1	; () banked
 26938  016BF0  0E01               	movlw	high TCPProcess@TCPHeader
 26939  016BF2  0101               	movlb	1	; () banked
 26940  016BF4  6F29               	movwf	(FindMatchingSocket@h+1)& (0+255),b
 26941  016BF6  0101               	movlb	1	; () banked
 26942  016BF8  0E97               	movlw	low TCPProcess@TCPHeader
 26943  016BFA  0101               	movlb	1	; () banked
 26944  016BFC  6F28               	movwf	FindMatchingSocket@h& (0+255),b
 26945  016BFE  0101               	movlb	1	; () banked
 26946  016C00  C17F  F12B         	movff	TCPProcess@remote+1,FindMatchingSocket@remote+1
 26947  016C04  0101               	movlb	1	; () banked
 26948  016C06  C17E  F12A         	movff	TCPProcess@remote,FindMatchingSocket@remote
 26949  016C0A  ECFF  F09A         	call	_FindMatchingSocket	;wreg free
 26950  016C0E  0900               	iorlw	0
 26951  016C10  B4D8               	btfsc	status,2,c
 26952  016C12  D00E               	goto	l14148
 26953                           
 26954                           ;tcp.c: 2834: {
 26955                           ;tcp.c: 2843: HandleTCPSeg(&TCPHeader, len);
 26956  016C14  0101               	movlb	1	; () banked
 26957  016C16  0E01               	movlw	high TCPProcess@TCPHeader
 26958  016C18  0101               	movlb	1	; () banked
 26959  016C1A  6F57               	movwf	(HandleTCPSeg@h+1)& (0+255),b
 26960  016C1C  0101               	movlb	1	; () banked
 26961  016C1E  0E97               	movlw	low TCPProcess@TCPHeader
 26962  016C20  0101               	movlb	1	; () banked
 26963  016C22  6F56               	movwf	HandleTCPSeg@h& (0+255),b
 26964  016C24  C182  F158         	movff	TCPProcess@len,HandleTCPSeg@len
 26965  016C28  C183  F159         	movff	TCPProcess@len+1,HandleTCPSeg@len+1
 26966  016C2C  EC00  F080         	call	_HandleTCPSeg	;wreg free
 26967  016C30                     l14148:
 26968                           
 26969                           ;tcp.c: 2856: }
 26970                           ;tcp.c: 2869: MACDiscardRx();
 26971  016C30  EC51  F0D8         	call	_MACDiscardRx	;wreg free
 26972  016C34  0012               	return	
 26973  016C36                     __end_of_TCPProcess:
 26974                           	opt stack 0
 26975                           tblptru	equ	0xFF8
 26976                           tblptrh	equ	0xFF7
 26977                           tblptrl	equ	0xFF6
 26978                           tablat	equ	0xFF5
 26979                           prodh	equ	0xFF4
 26980                           prodl	equ	0xFF3
 26981                           intcon	equ	0xFF2
 26982                           indf0	equ	0xFEF
 26983                           postinc0	equ	0xFEE
 26984                           fsr0h	equ	0xFEA
 26985                           fsr0l	equ	0xFE9
 26986                           wreg	equ	0xFE8
 26987                           indf1	equ	0xFE7
 26988                           postinc1	equ	0xFE6
 26989                           postdec1	equ	0xFE5
 26990                           fsr1h	equ	0xFE2
 26991                           fsr1l	equ	0xFE1
 26992                           indf2	equ	0xFDF
 26993                           postinc2	equ	0xFDE
 26994                           postdec2	equ	0xFDD
 26995                           fsr2h	equ	0xFDA
 26996                           fsr2l	equ	0xFD9
 26997                           status	equ	0xFD8
 26998                           
 26999 ;; *************** function _HandleTCPSeg *****************
 27000 ;; Defined at:
 27001 ;;		line 3570 in file "../tcpip/tcp.c"
 27002 ;; Parameters:    Size  Location     Type
 27003 ;;  h               2   86[BANK1 ] PTR struct .
 27004 ;;		 -> TCPProcess@TCPHeader(20), 
 27005 ;;  len             2   88[BANK1 ] unsigned int 
 27006 ;; Auto vars:     Size  Location     Type
 27007 ;;  localAckNumb    4  117[BANK1 ] unsigned long 
 27008 ;;  lMissingByte    4  111[BANK1 ] long 
 27009 ;;  dwTemp          4  107[BANK1 ] unsigned long 
 27010 ;;  localSeqNumb    4  101[BANK1 ] unsigned long 
 27011 ;;  wMissingByte    2  124[BANK1 ] unsigned int 
 27012 ;;  wTemp           2  122[BANK1 ] unsigned short 
 27013 ;;  wFreeSpace      2  115[BANK1 ] unsigned int 
 27014 ;;  wSegmentLeng    2  105[BANK1 ] unsigned int 
 27015 ;;  wNewWindow      2   98[BANK1 ] unsigned int 
 27016 ;;  localHeaderF    1  121[BANK1 ] unsigned char 
 27017 ;;  bSegmentAcce    1  100[BANK1 ] unsigned char 
 27018 ;; Return value:  Size  Location     Type
 27019 ;;		None               void
 27020 ;; Registers used:
 27021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27022 ;; Tracked objects:
 27023 ;;		On entry : 0/0
 27024 ;;		On exit  : 0/0
 27025 ;;		Unchanged: 0/0
 27026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 27027 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27028 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27029 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27030 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27031 ;;Total ram usage:       40 bytes
 27032 ;; Hardware stack levels used:    1
 27033 ;; Hardware stack levels required when called:   15
 27034 ;; This function calls:
 27035 ;;		_CloseSocket
 27036 ;;		_GetMaxSegSizeOption
 27037 ;;		_IPSetRxBuffer
 27038 ;;		_SendTCP
 27039 ;;		_SyncTCB
 27040 ;;		_TCPRAMCopy
 27041 ;;		_TickGet
 27042 ;;		_TickGetDiv256
 27043 ;; This function is called by:
 27044 ;;		_TCPProcess
 27045 ;; This function uses a non-reentrant model
 27046 ;;
 27047                           
 27048                           	psect	text52
 27049  010000                     __ptext52:
 27050                           	opt stack 0
 27051  010000                     _HandleTCPSeg:
 27052                           	opt stack 12
 27053                           
 27054                           ;tcp.c: 3572: uint32_t dwTemp;
 27055                           ;tcp.c: 3573: unsigned short wTemp;
 27056                           ;tcp.c: 3574: int32_t lMissingBytes;
 27057                           ;tcp.c: 3575: uint16_t wMissingBytes;
 27058                           ;tcp.c: 3576: uint16_t wFreeSpace;
 27059                           ;tcp.c: 3577: uint8_t localHeaderFlags;
 27060                           ;tcp.c: 3578: uint32_t localAckNumber;
 27061                           ;tcp.c: 3579: uint32_t localSeqNumber;
 27062                           ;tcp.c: 3580: uint16_t wSegmentLength;
 27063                           ;tcp.c: 3581: bool bSegmentAcceptable;
 27064                           ;tcp.c: 3582: uint16_t wNewWindow;
 27065                           ;tcp.c: 3588: localHeaderFlags = h->Flags.byte;
 27066                           
 27067                           ;incstack = 0
 27068  010000  0101               	movlb	1	; () banked
 27069  010002  EE20 F00D          	lfsr	2,13
 27070  010006  0101               	movlb	1	; () banked
 27071  010008  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27072  01000A  26D9               	addwf	fsr2l,f,c
 27073  01000C  0101               	movlb	1	; () banked
 27074  01000E  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27075  010010  22DA               	addwfc	fsr2h,f,c
 27076  010012  50DF               	movf	indf2,w,c
 27077  010014  0101               	movlb	1	; () banked
 27078  010016  6F79               	movwf	HandleTCPSeg@localHeaderFlags& (0+255),b
 27079                           
 27080                           ;tcp.c: 3589: localAckNumber = h->AckNumber;
 27081  010018  0101               	movlb	1	; () banked
 27082  01001A  EE20 F008          	lfsr	2,8
 27083  01001E  0101               	movlb	1	; () banked
 27084  010020  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27085  010022  26D9               	addwf	fsr2l,f,c
 27086  010024  0101               	movlb	1	; () banked
 27087  010026  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27088  010028  22DA               	addwfc	fsr2h,f,c
 27089  01002A  0101               	movlb	1	; () banked
 27090  01002C  CFDE F175          	movff	postinc2,HandleTCPSeg@localAckNumber
 27091  010030  0101               	movlb	1	; () banked
 27092  010032  CFDE F176          	movff	postinc2,HandleTCPSeg@localAckNumber+1
 27093  010036  0101               	movlb	1	; () banked
 27094  010038  CFDE F177          	movff	postinc2,HandleTCPSeg@localAckNumber+2
 27095  01003C  0101               	movlb	1	; () banked
 27096  01003E  CFDE F178          	movff	postinc2,HandleTCPSeg@localAckNumber+3
 27097                           
 27098                           ;tcp.c: 3590: localSeqNumber = h->SeqNumber;
 27099  010042  0101               	movlb	1	; () banked
 27100  010044  EE20 F004          	lfsr	2,4
 27101  010048  0101               	movlb	1	; () banked
 27102  01004A  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27103  01004C  26D9               	addwf	fsr2l,f,c
 27104  01004E  0101               	movlb	1	; () banked
 27105  010050  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27106  010052  22DA               	addwfc	fsr2h,f,c
 27107  010054  0101               	movlb	1	; () banked
 27108  010056  CFDE F165          	movff	postinc2,HandleTCPSeg@localSeqNumber
 27109  01005A  0101               	movlb	1	; () banked
 27110  01005C  CFDE F166          	movff	postinc2,HandleTCPSeg@localSeqNumber+1
 27111  010060  0101               	movlb	1	; () banked
 27112  010062  CFDE F167          	movff	postinc2,HandleTCPSeg@localSeqNumber+2
 27113  010066  0101               	movlb	1	; () banked
 27114  010068  CFDE F168          	movff	postinc2,HandleTCPSeg@localSeqNumber+3
 27115                           
 27116                           ; BSR set to: 1
 27117                           ;tcp.c: 3594: MyTCBStub.Flags.vUnackedKeepalives = 0;
 27118  01006C  0101               	movlb	1	; () banked
 27119  01006E  91F7               	bcf	(_MyTCBStub+23)& (0+255),0,b
 27120  010070  0101               	movlb	1	; () banked
 27121  010072  93F7               	bcf	(_MyTCBStub+23)& (0+255),1,b
 27122  010074  0101               	movlb	1	; () banked
 27123  010076  95F7               	bcf	(_MyTCBStub+23)& (0+255),2,b
 27124                           
 27125                           ; BSR set to: 1
 27126                           ;tcp.c: 3595: if(!MyTCBStub.Flags.bTimerEnabled)
 27127  010078  0101               	movlb	1	; () banked
 27128  01007A  B9F7               	btfsc	(_MyTCBStub+23)& (0+255),4,b
 27129  01007C  D104               	goto	l12838
 27130                           
 27131                           ; BSR set to: 1
 27132                           ;tcp.c: 3596: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 27133  01007E  EC5D  F0DB         	call	_TickGet	;wreg free
 27134  010082  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 27135  010086  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 27136  01008A  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 27137  01008E  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 27138  010092  0EE6               	movlw	230
 27139  010094  0101               	movlb	1	; () banked
 27140  010096  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27141  010098  0101               	movlb	1	; () banked
 27142  01009A  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 27143  01009C  0EF5               	movlw	245
 27144  01009E  0101               	movlb	1	; () banked
 27145  0100A0  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27146  0100A2  0101               	movlb	1	; () banked
 27147  0100A4  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 27148  0100A6  0E05               	movlw	5
 27149  0100A8  0101               	movlb	1	; () banked
 27150  0100AA  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 27151  0100AC  0101               	movlb	1	; () banked
 27152  0100AE  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 27153  0100B0  0E00               	movlw	0
 27154  0100B2  0101               	movlb	1	; () banked
 27155  0100B4  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 27156  0100B6  0101               	movlb	1	; () banked
 27157  0100B8  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 27158  0100BA  D0E5               	goto	l12838
 27159  0100BC                     l1304:
 27160                           
 27161                           ; BSR set to: 1
 27162                           ;tcp.c: 3607: if(localHeaderFlags & (0x04))
 27163  0100BC  0101               	movlb	1	; () banked
 27164  0100BE  A579               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),2,b
 27165  0100C0  D003               	goto	l1305
 27166                           
 27167                           ; BSR set to: 1
 27168                           ;tcp.c: 3608: {
 27169                           ;tcp.c: 3609: CloseSocket();
 27170  0100C2  ECFD  F0CD         	call	_CloseSocket	;wreg free
 27171  0100C6  0012               	return	
 27172  0100C8                     l1305:
 27173                           
 27174                           ; BSR set to: 1
 27175                           ;tcp.c: 3611: }
 27176                           ;tcp.c: 3614: if(localHeaderFlags & (0x10))
 27177  0100C8  0101               	movlb	1	; () banked
 27178  0100CA  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 27179  0100CC  D011               	goto	l1307
 27180                           
 27181                           ; BSR set to: 1
 27182                           ;tcp.c: 3615: {
 27183                           ;tcp.c: 3617: MyTCB.MySEQ = localAckNumber;
 27184  0100CE  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 27185  0100D2  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 27186  0100D6  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 27187  0100DA  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 27188                           
 27189                           ; BSR set to: 1
 27190                           ;tcp.c: 3618: SendTCP((0x04), 0);
 27191  0100DE  0E00               	movlw	0
 27192  0100E0  0101               	movlb	1	; () banked
 27193  0100E2  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27194  0100E4  0E04               	movlw	4
 27195  0100E6  ECC1  F096         	call	_SendTCP
 27196                           
 27197                           ;tcp.c: 3619: CloseSocket();
 27198  0100EA  ECFD  F0CD         	call	_CloseSocket	;wreg free
 27199  0100EE  0012               	return	
 27200  0100F0                     l1307:
 27201                           
 27202                           ; BSR set to: 1
 27203                           ;tcp.c: 3621: }
 27204                           ;tcp.c: 3624: if(localHeaderFlags & (0x02))
 27205  0100F0  0101               	movlb	1	; () banked
 27206  0100F2  A379               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),1,b
 27207  0100F4  D026               	goto	l12798
 27208                           
 27209                           ; BSR set to: 1
 27210                           ;tcp.c: 3625: {
 27211                           ;tcp.c: 3627: MyTCB.RemoteSEQ = localSeqNumber + 1;
 27212  0100F6  0E01               	movlw	1
 27213  0100F8  0101               	movlb	1	; () banked
 27214  0100FA  2565               	addwf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 27215  0100FC  0101               	movlb	1	; () banked
 27216  0100FE  6FC1               	movwf	(_MyTCB+8)& (0+255),b
 27217  010100  0E00               	movlw	0
 27218  010102  0101               	movlb	1	; () banked
 27219  010104  2166               	addwfc	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 27220  010106  0101               	movlb	1	; () banked
 27221  010108  6FC2               	movwf	(_MyTCB+9)& (0+255),b
 27222  01010A  0E00               	movlw	0
 27223  01010C  0101               	movlb	1	; () banked
 27224  01010E  2167               	addwfc	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 27225  010110  0101               	movlb	1	; () banked
 27226  010112  6FC3               	movwf	(_MyTCB+10)& (0+255),b
 27227  010114  0E00               	movlw	0
 27228  010116  0101               	movlb	1	; () banked
 27229  010118  2168               	addwfc	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 27230  01011A  0101               	movlb	1	; () banked
 27231  01011C  6FC4               	movwf	(_MyTCB+11)& (0+255),b
 27232                           
 27233                           ; BSR set to: 1
 27234                           ;tcp.c: 3630: MyTCB.wRemoteMSS = GetMaxSegSizeOption();
 27235  01011E  EC26  F0BF         	call	_GetMaxSegSizeOption	;wreg free
 27236  010122  0101               	movlb	1	; () banked
 27237  010124  C108  F1DC         	movff	?_GetMaxSegSizeOption,_MyTCB+35
 27238  010128  0101               	movlb	1	; () banked
 27239  01012A  C109  F1DD         	movff	?_GetMaxSegSizeOption+1,_MyTCB+36
 27240                           
 27241                           ; BSR set to: 1
 27242                           ;tcp.c: 3636: SendTCP((0x02) | (0x10), 0x01);
 27243  01012E  0E01               	movlw	1
 27244  010130  0101               	movlb	1	; () banked
 27245  010132  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27246  010134  0E12               	movlw	18
 27247  010136  ECC1  F096         	call	_SendTCP
 27248                           
 27249                           ;tcp.c: 3637: MyTCBStub.smState = TCP_SYN_RECEIVED;
 27250  01013A  0E06               	movlw	6
 27251  01013C  0101               	movlb	1	; () banked
 27252  01013E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 27253                           
 27254                           ;tcp.c: 3638: }
 27255  010140  0012               	return	
 27256  010142                     l12798:
 27257                           
 27258                           ; BSR set to: 1
 27259                           ;tcp.c: 3639: else
 27260                           ;tcp.c: 3640: {
 27261                           ;tcp.c: 3641: CloseSocket();
 27262  010142  ECFD  F0CD         	call	_CloseSocket	;wreg free
 27263  010146  0012               	return	
 27264  010148                     l1310:
 27265                           
 27266                           ; BSR set to: 1
 27267                           ;tcp.c: 3654: if(localHeaderFlags & (0x04))
 27268  010148  0101               	movlb	1	; () banked
 27269  01014A  B579               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),2,b
 27270  01014C  0012               	return	
 27271                           
 27272                           ; BSR set to: 1
 27273                           ;tcp.c: 3658: if(localHeaderFlags & (0x10))
 27274                           
 27275                           ; BSR set to: 1
 27276                           ;tcp.c: 3655: return;
 27277  01014E  0101               	movlb	1	; () banked
 27278  010150  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 27279  010152  D034               	goto	l1312
 27280                           
 27281                           ; BSR set to: 1
 27282                           ;tcp.c: 3659: {
 27283                           ;tcp.c: 3660: if(localAckNumber != MyTCB.MySEQ)
 27284  010154  0101               	movlb	1	; () banked
 27285  010156  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 27286  010158  0101               	movlb	1	; () banked
 27287  01015A  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 27288  01015C  E10E               	bnz	u14225
 27289  01015E  0101               	movlb	1	; () banked
 27290  010160  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 27291  010162  0101               	movlb	1	; () banked
 27292  010164  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 27293  010166  E109               	bnz	u14225
 27294  010168  0101               	movlb	1	; () banked
 27295  01016A  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 27296  01016C  0101               	movlb	1	; () banked
 27297  01016E  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 27298  010170  E104               	bnz	u14225
 27299  010172  0101               	movlb	1	; () banked
 27300  010174  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 27301  010176  0101               	movlb	1	; () banked
 27302  010178  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 27303  01017A                     u14225:
 27304  01017A  B4D8               	btfsc	status,2,c
 27305  01017C  D01F               	goto	l1312
 27306                           
 27307                           ; BSR set to: 1
 27308                           ;tcp.c: 3661: {
 27309                           ;tcp.c: 3664: localSeqNumber = MyTCB.MySEQ;
 27310  01017E  C1BD  F165         	movff	_MyTCB+4,HandleTCPSeg@localSeqNumber
 27311  010182  C1BE  F166         	movff	_MyTCB+5,HandleTCPSeg@localSeqNumber+1
 27312  010186  C1BF  F167         	movff	_MyTCB+6,HandleTCPSeg@localSeqNumber+2
 27313  01018A  C1C0  F168         	movff	_MyTCB+7,HandleTCPSeg@localSeqNumber+3
 27314                           
 27315                           ;tcp.c: 3665: MyTCB.MySEQ = localAckNumber;
 27316  01018E  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 27317  010192  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 27318  010196  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 27319  01019A  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 27320                           
 27321                           ; BSR set to: 1
 27322                           ;tcp.c: 3666: SendTCP((0x04), 0x01);
 27323  01019E  0E01               	movlw	1
 27324  0101A0  0101               	movlb	1	; () banked
 27325  0101A2  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27326  0101A4  0E04               	movlw	4
 27327  0101A6  ECC1  F096         	call	_SendTCP
 27328                           
 27329                           ;tcp.c: 3667: MyTCB.MySEQ = localSeqNumber;
 27330  0101AA  C165  F1BD         	movff	HandleTCPSeg@localSeqNumber,_MyTCB+4
 27331  0101AE  C166  F1BE         	movff	HandleTCPSeg@localSeqNumber+1,_MyTCB+5
 27332  0101B2  C167  F1BF         	movff	HandleTCPSeg@localSeqNumber+2,_MyTCB+6
 27333  0101B6  C168  F1C0         	movff	HandleTCPSeg@localSeqNumber+3,_MyTCB+7
 27334  0101BA  0012               	return	
 27335  0101BC                     l1312:
 27336                           
 27337                           ;tcp.c: 3669: }
 27338                           ;tcp.c: 3670: }
 27339                           ;tcp.c: 3676: if(localHeaderFlags & (0x02))
 27340  0101BC  0101               	movlb	1	; () banked
 27341  0101BE  A379               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),1,b
 27342  0101C0  0012               	return	
 27343                           
 27344                           ; BSR set to: 1
 27345                           ;tcp.c: 3677: {
 27346                           ;tcp.c: 3679: MyTCB.RemoteSEQ = localSeqNumber + 1;
 27347  0101C2  0E01               	movlw	1
 27348  0101C4  0101               	movlb	1	; () banked
 27349  0101C6  2565               	addwf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 27350  0101C8  0101               	movlb	1	; () banked
 27351  0101CA  6FC1               	movwf	(_MyTCB+8)& (0+255),b
 27352  0101CC  0E00               	movlw	0
 27353  0101CE  0101               	movlb	1	; () banked
 27354  0101D0  2166               	addwfc	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 27355  0101D2  0101               	movlb	1	; () banked
 27356  0101D4  6FC2               	movwf	(_MyTCB+9)& (0+255),b
 27357  0101D6  0E00               	movlw	0
 27358  0101D8  0101               	movlb	1	; () banked
 27359  0101DA  2167               	addwfc	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 27360  0101DC  0101               	movlb	1	; () banked
 27361  0101DE  6FC3               	movwf	(_MyTCB+10)& (0+255),b
 27362  0101E0  0E00               	movlw	0
 27363  0101E2  0101               	movlb	1	; () banked
 27364  0101E4  2168               	addwfc	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 27365  0101E6  0101               	movlb	1	; () banked
 27366  0101E8  6FC4               	movwf	(_MyTCB+11)& (0+255),b
 27367                           
 27368                           ; BSR set to: 1
 27369                           ;tcp.c: 3680: MyTCB.remoteWindow = h->Window;
 27370  0101EA  0101               	movlb	1	; () banked
 27371  0101EC  EE20 F00E          	lfsr	2,14
 27372  0101F0  0101               	movlb	1	; () banked
 27373  0101F2  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27374  0101F4  26D9               	addwf	fsr2l,f,c
 27375  0101F6  0101               	movlb	1	; () banked
 27376  0101F8  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27377  0101FA  22DA               	addwfc	fsr2h,f,c
 27378  0101FC  0101               	movlb	1	; () banked
 27379  0101FE  CFDE F1CB          	movff	postinc2,_MyTCB+18
 27380  010202  0101               	movlb	1	; () banked
 27381  010204  CFDD F1CC          	movff	postdec2,_MyTCB+19
 27382                           
 27383                           ; BSR set to: 1
 27384                           ;tcp.c: 3683: MyTCB.wRemoteMSS = GetMaxSegSizeOption();
 27385  010208  EC26  F0BF         	call	_GetMaxSegSizeOption	;wreg free
 27386  01020C  0101               	movlb	1	; () banked
 27387  01020E  C108  F1DC         	movff	?_GetMaxSegSizeOption,_MyTCB+35
 27388  010212  0101               	movlb	1	; () banked
 27389  010214  C109  F1DD         	movff	?_GetMaxSegSizeOption+1,_MyTCB+36
 27390                           
 27391                           ; BSR set to: 1
 27392                           ;tcp.c: 3685: if(localHeaderFlags & (0x10))
 27393  010218  0101               	movlb	1	; () banked
 27394  01021A  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 27395  01021C  D02A               	goto	l12830
 27396                           
 27397                           ; BSR set to: 1
 27398                           ;tcp.c: 3686: {
 27399                           ;tcp.c: 3687: SendTCP((0x10), 0x01);
 27400  01021E  0E01               	movlw	1
 27401  010220  0101               	movlb	1	; () banked
 27402  010222  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27403  010224  0E10               	movlw	16
 27404  010226  ECC1  F096         	call	_SendTCP
 27405                           
 27406                           ;tcp.c: 3688: MyTCBStub.smState = TCP_ESTABLISHED;
 27407  01022A  0E07               	movlw	7
 27408  01022C  0101               	movlb	1	; () banked
 27409  01022E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 27410                           
 27411                           ; BSR set to: 1
 27412                           ;tcp.c: 3691: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 27413  010230  EC5D  F0DB         	call	_TickGet	;wreg free
 27414  010234  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 27415  010238  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 27416  01023C  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 27417  010240  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 27418  010244  0EE6               	movlw	230
 27419  010246  0101               	movlb	1	; () banked
 27420  010248  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27421  01024A  0101               	movlb	1	; () banked
 27422  01024C  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 27423  01024E  0EF5               	movlw	245
 27424  010250  0101               	movlb	1	; () banked
 27425  010252  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27426  010254  0101               	movlb	1	; () banked
 27427  010256  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 27428  010258  0E05               	movlw	5
 27429  01025A  0101               	movlb	1	; () banked
 27430  01025C  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 27431  01025E  0101               	movlb	1	; () banked
 27432  010260  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 27433  010262  0E00               	movlw	0
 27434  010264  0101               	movlb	1	; () banked
 27435  010266  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 27436  010268  0101               	movlb	1	; () banked
 27437  01026A  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 27438                           
 27439                           ; BSR set to: 1
 27440                           ;tcp.c: 3693: MyTCBStub.Flags.bTimerEnabled = 0;
 27441  01026C  0101               	movlb	1	; () banked
 27442  01026E  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 27443                           
 27444                           ;tcp.c: 3694: }
 27445  010270  0012               	return	
 27446  010272                     l12830:
 27447                           
 27448                           ; BSR set to: 1
 27449                           ;tcp.c: 3695: else
 27450                           ;tcp.c: 3696: {
 27451                           ;tcp.c: 3697: SendTCP((0x02) | (0x10), 0x01);
 27452  010272  0E01               	movlw	1
 27453  010274  0101               	movlb	1	; () banked
 27454  010276  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27455  010278  0E12               	movlw	18
 27456  01027A  ECC1  F096         	call	_SendTCP
 27457                           
 27458                           ;tcp.c: 3698: MyTCBStub.smState = TCP_SYN_RECEIVED;
 27459  01027E  0E06               	movlw	6
 27460  010280  0101               	movlb	1	; () banked
 27461  010282  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 27462  010284  0012               	return	
 27463  010286                     l12838:
 27464                           
 27465                           ; BSR set to: 1
 27466  010286  0101               	movlb	1	; () banked
 27467  010288  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 27468                           
 27469                           ; Switch size 1, requested type "space"
 27470                           ; Number of cases is 2, Range of values is 4 to 5
 27471                           ; switch strategies available:
 27472                           ; Name         Instructions Cycles
 27473                           ; simple_byte            7     4 (average)
 27474                           ;	Chosen strategy is simple_byte
 27475  01028A  0A04               	xorlw	4	; case 4
 27476  01028C  B4D8               	btfsc	status,2,c
 27477  01028E  D716               	goto	l1304
 27478  010290  0A01               	xorlw	1	; case 5
 27479  010292  B4D8               	btfsc	status,2,c
 27480  010294  D759               	goto	l1310
 27481                           
 27482                           ; BSR set to: 1
 27483                           ;tcp.c: 3712: wSegmentLength = len;
 27484  010296  C158  F169         	movff	HandleTCPSeg@len,HandleTCPSeg@wSegmentLength
 27485  01029A  C159  F16A         	movff	HandleTCPSeg@len+1,HandleTCPSeg@wSegmentLength+1
 27486                           
 27487                           ;tcp.c: 3713: if(localHeaderFlags & (0x01))
 27488  01029E  0101               	movlb	1	; () banked
 27489  0102A0  A179               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),0,b
 27490  0102A2  D003               	goto	l12842
 27491                           
 27492                           ; BSR set to: 1
 27493                           ;tcp.c: 3714: wSegmentLength++;
 27494  0102A4  0101               	movlb	1	; () banked
 27495  0102A6  4B69               	infsnz	HandleTCPSeg@wSegmentLength& (0+255),f,b
 27496  0102A8  2B6A               	incf	(HandleTCPSeg@wSegmentLength+1)& (0+255),f,b
 27497  0102AA                     l12842:
 27498                           
 27499                           ; BSR set to: 1
 27500                           ;tcp.c: 3715: if(localHeaderFlags & (0x02))
 27501  0102AA  0101               	movlb	1	; () banked
 27502  0102AC  A379               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),1,b
 27503  0102AE  D003               	goto	l12846
 27504                           
 27505                           ; BSR set to: 1
 27506                           ;tcp.c: 3716: wSegmentLength++;
 27507  0102B0  0101               	movlb	1	; () banked
 27508  0102B2  4B69               	infsnz	HandleTCPSeg@wSegmentLength& (0+255),f,b
 27509  0102B4  2B6A               	incf	(HandleTCPSeg@wSegmentLength+1)& (0+255),f,b
 27510  0102B6                     l12846:
 27511                           
 27512                           ; BSR set to: 1
 27513                           ;tcp.c: 3719: if(MyTCBStub.rxHead >= MyTCBStub.rxTail)
 27514  0102B6  0101               	movlb	1	; () banked
 27515  0102B8  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 27516  0102BC  0101               	movlb	1	; () banked
 27517  0102BE  EE11  F0EA         	lfsr	1,_MyTCBStub+10
 27518  0102C2  52E6               	movf	postinc1,f,c
 27519  0102C4  52DE               	movf	postinc2,f,c
 27520  0102C6  50DD               	movf	postdec2,w,c
 27521  0102C8  5CE5               	subwf	postdec1,w,c
 27522  0102CA  E102               	bnz	u14275
 27523  0102CC  50DF               	movf	indf2,w,c
 27524  0102CE  5CE7               	subwf	indf1,w,c
 27525  0102D0                     u14275:
 27526  0102D0  A0D8               	btfss	status,0,c
 27527  0102D2  D02A               	goto	l12850
 27528                           
 27529                           ; BSR set to: 1
 27530                           ;tcp.c: 3720: wFreeSpace = (MyTCBStub.bufferEnd - MyTCBStub.bufferRxStart) - (MyTCBStub.
      +                          rxHead - MyTCBStub.rxTail);
 27531  0102D4  0101               	movlb	1	; () banked
 27532  0102D6  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 27533  0102DA  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 27534  0102DE  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 27535  0102E2  0101               	movlb	1	; () banked
 27536  0102E4  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27537  0102E6  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27538  0102E8  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27539  0102EA  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27540  0102EC  0101               	movlb	1	; () banked
 27541  0102EE  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 27542  0102F0  0101               	movlb	1	; () banked
 27543  0102F2  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27544  0102F4  0101               	movlb	1	; () banked
 27545  0102F6  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 27546  0102F8  0101               	movlb	1	; () banked
 27547  0102FA  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27548  0102FC  0101               	movlb	1	; () banked
 27549  0102FE  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 27550  010300  0101               	movlb	1	; () banked
 27551  010302  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27552  010304  0101               	movlb	1	; () banked
 27553  010306  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 27554  010308  0101               	movlb	1	; () banked
 27555  01030A  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27556  01030C  0101               	movlb	1	; () banked
 27557  01030E  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27558  010310  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27559  010312  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27560  010314  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27561  010316  0101               	movlb	1	; () banked
 27562  010318  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 27563  01031A  0101               	movlb	1	; () banked
 27564  01031C  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27565  01031E  0101               	movlb	1	; () banked
 27566  010320  6F73               	movwf	HandleTCPSeg@wFreeSpace& (0+255),b
 27567  010322  0101               	movlb	1	; () banked
 27568  010324  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 27569  010326  D01A               	goto	L34
 27570  010328                     l12850:
 27571                           
 27572                           ; BSR set to: 1
 27573                           ;tcp.c: 3721: else
 27574                           ;tcp.c: 3722: wFreeSpace = MyTCBStub.rxTail - MyTCBStub.rxHead - 1;
 27575  010328  0101               	movlb	1	; () banked
 27576  01032A  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 27577  01032E  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 27578  010332  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 27579  010336  0101               	movlb	1	; () banked
 27580  010338  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27581  01033A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27582  01033C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27583  01033E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27584  010340  0101               	movlb	1	; () banked
 27585  010342  51EC               	movf	(_MyTCBStub+12)& (0+255),w,b
 27586  010344  0101               	movlb	1	; () banked
 27587  010346  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27588  010348  0101               	movlb	1	; () banked
 27589  01034A  51ED               	movf	(_MyTCBStub+13)& (0+255),w,b
 27590  01034C  0101               	movlb	1	; () banked
 27591  01034E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27592  010350  0EFF               	movlw	255
 27593  010352  0101               	movlb	1	; () banked
 27594  010354  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27595  010356  0101               	movlb	1	; () banked
 27596  010358  6F73               	movwf	HandleTCPSeg@wFreeSpace& (0+255),b
 27597  01035A  0EFF               	movlw	255
 27598  01035C                     L34:
 27599  01035C  0101               	movlb	1	; () banked
 27600  01035E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27601  010360  0101               	movlb	1	; () banked
 27602  010362  6F74               	movwf	(HandleTCPSeg@wFreeSpace+1)& (0+255),b
 27603                           
 27604                           ; BSR set to: 1
 27605                           ;tcp.c: 3725: lMissingBytes = localSeqNumber - MyTCB.RemoteSEQ;
 27606                           
 27607                           ; BSR set to: 1
 27608  010364  0101               	movlb	1	; () banked
 27609  010366  C1C1  F15A         	movff	_MyTCB+8,??_HandleTCPSeg
 27610  01036A  0101               	movlb	1	; () banked
 27611  01036C  C1C2  F15B         	movff	_MyTCB+9,??_HandleTCPSeg+1
 27612  010370  0101               	movlb	1	; () banked
 27613  010372  C1C3  F15C         	movff	_MyTCB+10,??_HandleTCPSeg+2
 27614  010376  0101               	movlb	1	; () banked
 27615  010378  C1C4  F15D         	movff	_MyTCB+11,??_HandleTCPSeg+3
 27616  01037C  0101               	movlb	1	; () banked
 27617  01037E  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27618  010380  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27619  010382  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 27620  010384  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 27621  010386  2B5A               	incf	??_HandleTCPSeg& (0+255),f,b
 27622  010388  0E00               	movlw	0
 27623  01038A  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27624  01038C  235C               	addwfc	(??_HandleTCPSeg+2)& (0+255),f,b
 27625  01038E  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 27626  010390  0101               	movlb	1	; () banked
 27627  010392  5165               	movf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 27628  010394  0101               	movlb	1	; () banked
 27629  010396  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27630  010398  0101               	movlb	1	; () banked
 27631  01039A  6F6F               	movwf	HandleTCPSeg@lMissingBytes& (0+255),b
 27632  01039C  0101               	movlb	1	; () banked
 27633  01039E  5166               	movf	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 27634  0103A0  0101               	movlb	1	; () banked
 27635  0103A2  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27636  0103A4  0101               	movlb	1	; () banked
 27637  0103A6  6F70               	movwf	(HandleTCPSeg@lMissingBytes+1)& (0+255),b
 27638  0103A8  0101               	movlb	1	; () banked
 27639  0103AA  5167               	movf	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 27640  0103AC  0101               	movlb	1	; () banked
 27641  0103AE  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 27642  0103B0  0101               	movlb	1	; () banked
 27643  0103B2  6F71               	movwf	(HandleTCPSeg@lMissingBytes+2)& (0+255),b
 27644  0103B4  0101               	movlb	1	; () banked
 27645  0103B6  5168               	movf	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 27646  0103B8  0101               	movlb	1	; () banked
 27647  0103BA  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 27648  0103BC  0101               	movlb	1	; () banked
 27649  0103BE  6F72               	movwf	(HandleTCPSeg@lMissingBytes+3)& (0+255),b
 27650                           
 27651                           ; BSR set to: 1
 27652                           ;tcp.c: 3726: wMissingBytes = (uint16_t)lMissingBytes;
 27653  0103C0  C16F  F17C         	movff	HandleTCPSeg@lMissingBytes,HandleTCPSeg@wMissingBytes
 27654  0103C4  C170  F17D         	movff	HandleTCPSeg@lMissingBytes+1,HandleTCPSeg@wMissingBytes+1
 27655                           
 27656                           ; BSR set to: 1
 27657                           ;tcp.c: 3729: bSegmentAcceptable = 0;
 27658  0103C8  0E00               	movlw	0
 27659  0103CA  0101               	movlb	1	; () banked
 27660  0103CC  6F64               	movwf	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 27661                           
 27662                           ; BSR set to: 1
 27663                           ;tcp.c: 3730: if(wSegmentLength)
 27664  0103CE  0101               	movlb	1	; () banked
 27665  0103D0  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 27666  0103D2  1169               	iorwf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 27667  0103D4  B4D8               	btfsc	status,2,c
 27668  0103D6  D0C2               	goto	l12880
 27669                           
 27670                           ; BSR set to: 1
 27671                           ;tcp.c: 3731: {
 27672                           ;tcp.c: 3733: if(wFreeSpace)
 27673  0103D8  0101               	movlb	1	; () banked
 27674  0103DA  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27675  0103DC  1173               	iorwf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27676  0103DE  B4D8               	btfsc	status,2,c
 27677  0103E0  D0E8               	goto	l12888
 27678                           
 27679                           ; BSR set to: 1
 27680                           ;tcp.c: 3734: {
 27681                           ;tcp.c: 3736: if((lMissingBytes >= (int32_t)0) && (wFreeSpace > (uint32_t)lMissingBytes)
      +                          )
 27682  0103E2  0101               	movlb	1	; () banked
 27683  0103E4  BF72               	btfsc	(HandleTCPSeg@lMissingBytes+3)& (0+255),7,b
 27684  0103E6  D01E               	goto	l12868
 27685                           
 27686                           ; BSR set to: 1
 27687  0103E8  0101               	movlb	1	; () banked
 27688  0103EA  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27689  0103EC  0101               	movlb	1	; () banked
 27690  0103EE  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 27691  0103F0  0101               	movlb	1	; () banked
 27692  0103F2  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27693  0103F4  0101               	movlb	1	; () banked
 27694  0103F6  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 27695  0103F8  0101               	movlb	1	; () banked
 27696  0103FA  6B5C               	clrf	(??_HandleTCPSeg+2)& (0+255),b
 27697  0103FC  0101               	movlb	1	; () banked
 27698  0103FE  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 27699  010400  0101               	movlb	1	; () banked
 27700  010402  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 27701  010404  0101               	movlb	1	; () banked
 27702  010406  5D6F               	subwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27703  010408  0101               	movlb	1	; () banked
 27704  01040A  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 27705  01040C  0101               	movlb	1	; () banked
 27706  01040E  5970               	subwfb	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27707  010410  0101               	movlb	1	; () banked
 27708  010412  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 27709  010414  0101               	movlb	1	; () banked
 27710  010416  5971               	subwfb	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27711  010418  0101               	movlb	1	; () banked
 27712  01041A  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 27713  01041C  0101               	movlb	1	; () banked
 27714  01041E  5972               	subwfb	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27715  010420  A0D8               	btfss	status,0,c
 27716  010422  D05D               	goto	u14330
 27717  010424                     l12868:
 27718                           
 27719                           ; BSR set to: 1
 27720                           ;tcp.c: 3738: else
 27721                           ;tcp.c: 3739: {
 27722                           ;tcp.c: 3741: if((lMissingBytes + (int32_t)wSegmentLength > (int32_t)0) && (lMissingByte
      +                          s <= (int32_t)(int16_t)(wFreeSpace - wSegmentLength)))
 27723  010424  0101               	movlb	1	; () banked
 27724  010426  5169               	movf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 27725  010428  0101               	movlb	1	; () banked
 27726  01042A  256F               	addwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27727  01042C  0101               	movlb	1	; () banked
 27728  01042E  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 27729  010430  0101               	movlb	1	; () banked
 27730  010432  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 27731  010434  0101               	movlb	1	; () banked
 27732  010436  2170               	addwfc	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27733  010438  0101               	movlb	1	; () banked
 27734  01043A  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 27735  01043C  0E00               	movlw	0
 27736  01043E  0101               	movlb	1	; () banked
 27737  010440  2171               	addwfc	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27738  010442  0101               	movlb	1	; () banked
 27739  010444  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 27740  010446  0E00               	movlw	0
 27741  010448  0101               	movlb	1	; () banked
 27742  01044A  2172               	addwfc	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27743  01044C  0101               	movlb	1	; () banked
 27744  01044E  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 27745  010450  0101               	movlb	1	; () banked
 27746  010452  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 27747  010454  0A80               	xorlw	128
 27748  010456  0F80               	addlw	128
 27749  010458  E108               	bnz	u14325
 27750  01045A  0E00               	movlw	0
 27751  01045C  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 27752  01045E  E105               	bnz	u14325
 27753  010460  0E00               	movlw	0
 27754  010462  5D5B               	subwf	(??_HandleTCPSeg+1)& (0+255),w,b
 27755  010464  E102               	bnz	u14325
 27756  010466  0E01               	movlw	1
 27757  010468  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 27758  01046A                     u14325:
 27759  01046A  A0D8               	btfss	status,0,c
 27760  01046C  D03B               	goto	l12874
 27761                           
 27762                           ; BSR set to: 1
 27763  01046E  0101               	movlb	1	; () banked
 27764  010470  C169  F15A         	movff	HandleTCPSeg@wSegmentLength,??_HandleTCPSeg
 27765  010474  0101               	movlb	1	; () banked
 27766  010476  C16A  F15B         	movff	HandleTCPSeg@wSegmentLength+1,??_HandleTCPSeg+1
 27767  01047A  0101               	movlb	1	; () banked
 27768  01047C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27769  01047E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27770  010480  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27771  010482  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27772  010484  0101               	movlb	1	; () banked
 27773  010486  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27774  010488  0101               	movlb	1	; () banked
 27775  01048A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27776  01048C  0101               	movlb	1	; () banked
 27777  01048E  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 27778  010490  0101               	movlb	1	; () banked
 27779  010492  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27780  010494  0101               	movlb	1	; () banked
 27781  010496  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27782  010498  0101               	movlb	1	; () banked
 27783  01049A  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 27784  01049C  0101               	movlb	1	; () banked
 27785  01049E  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 27786  0104A0  0101               	movlb	1	; () banked
 27787  0104A2  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 27788  0104A4  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 27789  0104A6  0101               	movlb	1	; () banked
 27790  0104A8  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 27791  0104AA  0101               	movlb	1	; () banked
 27792  0104AC  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 27793  0104AE  0101               	movlb	1	; () banked
 27794  0104B0  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 27795  0104B2  0A80               	xorlw	128
 27796  0104B4  0101               	movlb	1	; () banked
 27797  0104B6  6F60               	movwf	(??_HandleTCPSeg+6)& (0+255),b
 27798  0104B8  0101               	movlb	1	; () banked
 27799  0104BA  516F               	movf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27800  0104BC  0101               	movlb	1	; () banked
 27801  0104BE  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 27802  0104C0  0101               	movlb	1	; () banked
 27803  0104C2  5170               	movf	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27804  0104C4  0101               	movlb	1	; () banked
 27805  0104C6  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 27806  0104C8  0101               	movlb	1	; () banked
 27807  0104CA  5171               	movf	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27808  0104CC  0101               	movlb	1	; () banked
 27809  0104CE  595E               	subwfb	(??_HandleTCPSeg+4)& (0+255),w,b
 27810  0104D0  0101               	movlb	1	; () banked
 27811  0104D2  5172               	movf	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27812  0104D4  0A80               	xorlw	128
 27813  0104D6  0101               	movlb	1	; () banked
 27814  0104D8  5960               	subwfb	(??_HandleTCPSeg+6)& (0+255),w,b
 27815  0104DA  A0D8               	btfss	status,0,c
 27816  0104DC  D003               	goto	l12874
 27817  0104DE                     u14330:
 27818                           
 27819                           ; BSR set to: 1
 27820                           ;tcp.c: 3742: bSegmentAcceptable = 1;
 27821  0104DE  0E01               	movlw	1
 27822  0104E0  0101               	movlb	1	; () banked
 27823  0104E2  6F64               	movwf	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 27824  0104E4                     l12874:
 27825                           
 27826                           ; BSR set to: 1
 27827                           ;tcp.c: 3743: }
 27828                           ;tcp.c: 3745: if((lMissingBytes < (int32_t)wFreeSpace) && ((int16_t)wMissingBytes + (int
      +                          16_t)wSegmentLength > (int16_t)0))
 27829  0104E4  0101               	movlb	1	; () banked
 27830  0104E6  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27831  0104E8  0101               	movlb	1	; () banked
 27832  0104EA  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 27833  0104EC  0101               	movlb	1	; () banked
 27834  0104EE  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27835  0104F0  0101               	movlb	1	; () banked
 27836  0104F2  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 27837  0104F4  0101               	movlb	1	; () banked
 27838  0104F6  6B5C               	clrf	(??_HandleTCPSeg+2)& (0+255),b
 27839  0104F8  0101               	movlb	1	; () banked
 27840  0104FA  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 27841  0104FC  0101               	movlb	1	; () banked
 27842  0104FE  5172               	movf	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27843  010500  0A80               	xorlw	128
 27844  010502  0101               	movlb	1	; () banked
 27845  010504  6F5E               	movwf	(??_HandleTCPSeg+4)& (0+255),b
 27846  010506  0101               	movlb	1	; () banked
 27847  010508  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 27848  01050A  0101               	movlb	1	; () banked
 27849  01050C  5D6F               	subwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27850  01050E  0101               	movlb	1	; () banked
 27851  010510  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 27852  010512  0101               	movlb	1	; () banked
 27853  010514  5970               	subwfb	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27854  010516  0101               	movlb	1	; () banked
 27855  010518  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 27856  01051A  0101               	movlb	1	; () banked
 27857  01051C  5971               	subwfb	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27858  01051E  0101               	movlb	1	; () banked
 27859  010520  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 27860  010522  0A80               	xorlw	128
 27861  010524  0101               	movlb	1	; () banked
 27862  010526  595E               	subwfb	(??_HandleTCPSeg+4)& (0+255),w,b
 27863  010528  B0D8               	btfsc	status,0,c
 27864  01052A  D043               	goto	l12888
 27865                           
 27866                           ; BSR set to: 1
 27867  01052C  0101               	movlb	1	; () banked
 27868  01052E  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 27869  010532  0101               	movlb	1	; () banked
 27870  010534  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 27871  010538  0101               	movlb	1	; () banked
 27872  01053A  5169               	movf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 27873  01053C  0101               	movlb	1	; () banked
 27874  01053E  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27875  010540  0101               	movlb	1	; () banked
 27876  010542  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 27877  010544  0101               	movlb	1	; () banked
 27878  010546  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27879  010548  0101               	movlb	1	; () banked
 27880  01054A  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 27881  01054C  0A80               	xorlw	128
 27882  01054E  0F80               	addlw	-128
 27883  010550  0E01               	movlw	1
 27884  010552  B4D8               	btfsc	status,2,c
 27885  010554  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 27886  010556  A0D8               	btfss	status,0,c
 27887  010558  D02C               	goto	l12888
 27888  01055A  D028               	goto	u14380
 27889  01055C                     l12880:
 27890                           
 27891                           ; BSR set to: 1
 27892                           ;tcp.c: 3750: else
 27893                           ;tcp.c: 3751: {
 27894                           ;tcp.c: 3754: if(lMissingBytes == 0)
 27895  01055C  0101               	movlb	1	; () banked
 27896  01055E  5172               	movf	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27897  010560  116F               	iorwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27898  010562  1170               	iorwf	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27899  010564  1171               	iorwf	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27900  010566  B4D8               	btfsc	status,2,c
 27901  010568  D021               	goto	u14380
 27902                           
 27903                           ; BSR set to: 1
 27904                           ;tcp.c: 3758: else
 27905                           ;tcp.c: 3759: {
 27906                           ;tcp.c: 3761: if((lMissingBytes >= (int32_t)0) && (wFreeSpace > (uint32_t)lMissingBytes)
      +                          )
 27907                           
 27908                           ;tcp.c: 3757: }
 27909                           
 27910                           ; BSR set to: 1
 27911                           ;tcp.c: 3755: {
 27912                           ;tcp.c: 3756: bSegmentAcceptable = 1;
 27913  01056A  0101               	movlb	1	; () banked
 27914  01056C  BF72               	btfsc	(HandleTCPSeg@lMissingBytes+3)& (0+255),7,b
 27915  01056E  D021               	goto	l12888
 27916                           
 27917                           ; BSR set to: 1
 27918  010570  0101               	movlb	1	; () banked
 27919  010572  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27920  010574  0101               	movlb	1	; () banked
 27921  010576  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 27922  010578  0101               	movlb	1	; () banked
 27923  01057A  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27924  01057C  0101               	movlb	1	; () banked
 27925  01057E  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 27926  010580  0101               	movlb	1	; () banked
 27927  010582  6B5C               	clrf	(??_HandleTCPSeg+2)& (0+255),b
 27928  010584  0101               	movlb	1	; () banked
 27929  010586  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 27930  010588  0101               	movlb	1	; () banked
 27931  01058A  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 27932  01058C  0101               	movlb	1	; () banked
 27933  01058E  5D6F               	subwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27934  010590  0101               	movlb	1	; () banked
 27935  010592  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 27936  010594  0101               	movlb	1	; () banked
 27937  010596  5970               	subwfb	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27938  010598  0101               	movlb	1	; () banked
 27939  01059A  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 27940  01059C  0101               	movlb	1	; () banked
 27941  01059E  5971               	subwfb	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27942  0105A0  0101               	movlb	1	; () banked
 27943  0105A2  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 27944  0105A4  0101               	movlb	1	; () banked
 27945  0105A6  5972               	subwfb	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27946  0105A8  B0D8               	btfsc	status,0,c
 27947  0105AA  D003               	goto	l12888
 27948  0105AC                     u14380:
 27949                           
 27950                           ; BSR set to: 1
 27951                           ;tcp.c: 3762: bSegmentAcceptable = 1;
 27952  0105AC  0E01               	movlw	1
 27953  0105AE  0101               	movlb	1	; () banked
 27954  0105B0  6F64               	movwf	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 27955  0105B2                     l12888:
 27956                           
 27957                           ; BSR set to: 1
 27958                           ;tcp.c: 3763: }
 27959                           ;tcp.c: 3764: }
 27960                           ;tcp.c: 3766: if(!bSegmentAcceptable)
 27961  0105B2  0101               	movlb	1	; () banked
 27962  0105B4  6764               	tstfsz	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 27963  0105B6  D00A               	goto	l12896
 27964                           
 27965                           ; BSR set to: 1
 27966                           ;tcp.c: 3767: {
 27967                           ;tcp.c: 3769: if(!(localHeaderFlags & (0x04)))
 27968  0105B8  0101               	movlb	1	; () banked
 27969  0105BA  B579               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),2,b
 27970  0105BC  0012               	return	
 27971                           
 27972                           ; BSR set to: 1
 27973                           ;tcp.c: 3770: SendTCP((0x10), 0x01);
 27974  0105BE  0E01               	movlw	1
 27975  0105C0  0101               	movlb	1	; () banked
 27976  0105C2  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27977  0105C4  0E10               	movlw	16
 27978  0105C6  ECC1  F096         	call	_SendTCP
 27979  0105CA  0012               	return	
 27980  0105CC                     l12896:
 27981                           
 27982                           ;tcp.c: 3772: }
 27983                           ;tcp.c: 3783: if(localHeaderFlags & ((0x04) | (0x02)))
 27984  0105CC  C179  F15A         	movff	HandleTCPSeg@localHeaderFlags,??_HandleTCPSeg
 27985  0105D0  0E06               	movlw	6
 27986  0105D2  0101               	movlb	1	; () banked
 27987  0105D4  175A               	andwf	??_HandleTCPSeg& (0+255),f,b
 27988  0105D6  B4D8               	btfsc	status,2,c
 27989  0105D8  D003               	goto	l1335
 27990                           
 27991                           ; BSR set to: 1
 27992                           ;tcp.c: 3784: {
 27993                           ;tcp.c: 3785: CloseSocket();
 27994  0105DA  ECFD  F0CD         	call	_CloseSocket	;wreg free
 27995  0105DE  0012               	return	
 27996  0105E0                     l1335:
 27997                           
 27998                           ; BSR set to: 1
 27999                           ;tcp.c: 3787: }
 28000                           ;tcp.c: 3797: if(!(localHeaderFlags & (0x10)))
 28001  0105E0  0101               	movlb	1	; () banked
 28002  0105E2  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 28003  0105E4  0012               	return	
 28004  0105E6  EF4F  F087         	goto	l13048
 28005  0105EA                     l12904:
 28006                           
 28007                           ; BSR set to: 1
 28008                           ;tcp.c: 3803: if(localAckNumber != MyTCB.MySEQ)
 28009  0105EA  0101               	movlb	1	; () banked
 28010  0105EC  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28011  0105EE  0101               	movlb	1	; () banked
 28012  0105F0  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 28013  0105F2  E10E               	bnz	u14435
 28014  0105F4  0101               	movlb	1	; () banked
 28015  0105F6  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 28016  0105F8  0101               	movlb	1	; () banked
 28017  0105FA  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 28018  0105FC  E109               	bnz	u14435
 28019  0105FE  0101               	movlb	1	; () banked
 28020  010600  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 28021  010602  0101               	movlb	1	; () banked
 28022  010604  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 28023  010606  E104               	bnz	u14435
 28024  010608  0101               	movlb	1	; () banked
 28025  01060A  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 28026  01060C  0101               	movlb	1	; () banked
 28027  01060E  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 28028  010610                     u14435:
 28029  010610  B4D8               	btfsc	status,2,c
 28030  010612  D01F               	goto	l12914
 28031                           
 28032                           ; BSR set to: 1
 28033                           ;tcp.c: 3804: {
 28034                           ;tcp.c: 3807: localSeqNumber = MyTCB.MySEQ;
 28035  010614  C1BD  F165         	movff	_MyTCB+4,HandleTCPSeg@localSeqNumber
 28036  010618  C1BE  F166         	movff	_MyTCB+5,HandleTCPSeg@localSeqNumber+1
 28037  01061C  C1BF  F167         	movff	_MyTCB+6,HandleTCPSeg@localSeqNumber+2
 28038  010620  C1C0  F168         	movff	_MyTCB+7,HandleTCPSeg@localSeqNumber+3
 28039                           
 28040                           ;tcp.c: 3808: MyTCB.MySEQ = localAckNumber;
 28041  010624  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 28042  010628  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 28043  01062C  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 28044  010630  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 28045                           
 28046                           ; BSR set to: 1
 28047                           ;tcp.c: 3809: SendTCP((0x04), 0x01);
 28048  010634  0E01               	movlw	1
 28049  010636  0101               	movlb	1	; () banked
 28050  010638  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 28051  01063A  0E04               	movlw	4
 28052  01063C  ECC1  F096         	call	_SendTCP
 28053                           
 28054                           ;tcp.c: 3810: MyTCB.MySEQ = localSeqNumber;
 28055  010640  C165  F1BD         	movff	HandleTCPSeg@localSeqNumber,_MyTCB+4
 28056  010644  C166  F1BE         	movff	HandleTCPSeg@localSeqNumber+1,_MyTCB+5
 28057  010648  C167  F1BF         	movff	HandleTCPSeg@localSeqNumber+2,_MyTCB+6
 28058  01064C  C168  F1C0         	movff	HandleTCPSeg@localSeqNumber+3,_MyTCB+7
 28059  010650  0012               	return	
 28060  010652                     l12914:
 28061                           
 28062                           ;tcp.c: 3812: }
 28063                           ;tcp.c: 3813: MyTCBStub.smState = TCP_ESTABLISHED;
 28064  010652  0E07               	movlw	7
 28065  010654  0101               	movlb	1	; () banked
 28066  010656  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 28067  010658                     l12916:
 28068                           
 28069                           ; BSR set to: 1
 28070                           ;tcp.c: 3817: case TCP_FIN_WAIT_1:
 28071                           ;tcp.c: 3818: case TCP_FIN_WAIT_2:
 28072                           ;tcp.c: 3819: case TCP_CLOSE_WAIT:
 28073                           ;tcp.c: 3820: case TCP_CLOSING:
 28074                           ;tcp.c: 3822: wTemp = MyTCBStub.txHead - MyTCB.txUnackedTail;
 28075  010658  0101               	movlb	1	; () banked
 28076  01065A  EE21  F0C5         	lfsr	2,_MyTCB+12
 28077  01065E  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28078  010662  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28079  010666  0101               	movlb	1	; () banked
 28080  010668  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28081  01066A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28082  01066C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28083  01066E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28084  010670  0101               	movlb	1	; () banked
 28085  010672  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 28086  010674  0101               	movlb	1	; () banked
 28087  010676  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28088  010678  0101               	movlb	1	; () banked
 28089  01067A  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 28090  01067C  0101               	movlb	1	; () banked
 28091  01067E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 28092  010680  0101               	movlb	1	; () banked
 28093  010682  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28094  010684  0101               	movlb	1	; () banked
 28095  010686  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 28096                           
 28097                           ; BSR set to: 1
 28098                           ;tcp.c: 3823: if((int16_t)wTemp < (int16_t)0)
 28099  010688  0101               	movlb	1	; () banked
 28100  01068A  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28101  01068C  0A80               	xorlw	128
 28102  01068E  6EF3               	movwf	prodl,c
 28103  010690  0E80               	movlw	128
 28104  010692  5CF3               	subwf	prodl,w,c
 28105  010694  0E00               	movlw	0
 28106  010696  B4D8               	btfsc	status,2,c
 28107  010698  5D7A               	subwf	HandleTCPSeg@wTemp& (0+255),w,b
 28108  01069A  B0D8               	btfsc	status,0,c
 28109  01069C  D01B               	goto	l1345
 28110                           
 28111                           ; BSR set to: 1
 28112                           ;tcp.c: 3824: wTemp += MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28113  01069E  0101               	movlb	1	; () banked
 28114  0106A0  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28115  0106A4  0101               	movlb	1	; () banked
 28116  0106A6  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28117  0106AA  0101               	movlb	1	; () banked
 28118  0106AC  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28119  0106AE  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28120  0106B0  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28121  0106B2  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28122  0106B4  0101               	movlb	1	; () banked
 28123  0106B6  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28124  0106B8  0101               	movlb	1	; () banked
 28125  0106BA  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28126  0106BC  0101               	movlb	1	; () banked
 28127  0106BE  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28128  0106C0  0101               	movlb	1	; () banked
 28129  0106C2  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28130  0106C4  0101               	movlb	1	; () banked
 28131  0106C6  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28132  0106C8  0101               	movlb	1	; () banked
 28133  0106CA  277A               	addwf	HandleTCPSeg@wTemp& (0+255),f,b
 28134  0106CC  0101               	movlb	1	; () banked
 28135  0106CE  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28136  0106D0  0101               	movlb	1	; () banked
 28137  0106D2  237B               	addwfc	(HandleTCPSeg@wTemp+1)& (0+255),f,b
 28138  0106D4                     l1345:
 28139                           
 28140                           ; BSR set to: 1
 28141                           ;tcp.c: 3825: dwTemp = MyTCB.MySEQ + (uint32_t)wTemp;
 28142  0106D4  0101               	movlb	1	; () banked
 28143  0106D6  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 28144  0106D8  0101               	movlb	1	; () banked
 28145  0106DA  25BD               	addwf	(_MyTCB+4)& (0+255),w,b
 28146  0106DC  0101               	movlb	1	; () banked
 28147  0106DE  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28148  0106E0  0101               	movlb	1	; () banked
 28149  0106E2  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28150  0106E4  0101               	movlb	1	; () banked
 28151  0106E6  21BE               	addwfc	(_MyTCB+5)& (0+255),w,b
 28152  0106E8  0101               	movlb	1	; () banked
 28153  0106EA  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28154  0106EC  0E00               	movlw	0
 28155  0106EE  0101               	movlb	1	; () banked
 28156  0106F0  21BF               	addwfc	(_MyTCB+6)& (0+255),w,b
 28157  0106F2  0101               	movlb	1	; () banked
 28158  0106F4  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28159  0106F6  0E00               	movlw	0
 28160  0106F8  0101               	movlb	1	; () banked
 28161  0106FA  21C0               	addwfc	(_MyTCB+7)& (0+255),w,b
 28162  0106FC  0101               	movlb	1	; () banked
 28163  0106FE  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28164                           
 28165                           ;tcp.c: 3828: dwTemp = (int32_t)localAckNumber - (int32_t)dwTemp;
 28166  010700  0101               	movlb	1	; () banked
 28167  010702  C16B  F15A         	movff	HandleTCPSeg@dwTemp,??_HandleTCPSeg
 28168  010706  0101               	movlb	1	; () banked
 28169  010708  C16C  F15B         	movff	HandleTCPSeg@dwTemp+1,??_HandleTCPSeg+1
 28170  01070C  0101               	movlb	1	; () banked
 28171  01070E  C16D  F15C         	movff	HandleTCPSeg@dwTemp+2,??_HandleTCPSeg+2
 28172  010712  0101               	movlb	1	; () banked
 28173  010714  C16E  F15D         	movff	HandleTCPSeg@dwTemp+3,??_HandleTCPSeg+3
 28174  010718  0101               	movlb	1	; () banked
 28175  01071A  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28176  01071C  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28177  01071E  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 28178  010720  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 28179  010722  2B5A               	incf	??_HandleTCPSeg& (0+255),f,b
 28180  010724  0E00               	movlw	0
 28181  010726  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28182  010728  235C               	addwfc	(??_HandleTCPSeg+2)& (0+255),f,b
 28183  01072A  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 28184  01072C  0101               	movlb	1	; () banked
 28185  01072E  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 28186  010730  0101               	movlb	1	; () banked
 28187  010732  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28188  010734  0101               	movlb	1	; () banked
 28189  010736  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28190  010738  0101               	movlb	1	; () banked
 28191  01073A  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 28192  01073C  0101               	movlb	1	; () banked
 28193  01073E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28194  010740  0101               	movlb	1	; () banked
 28195  010742  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28196  010744  0101               	movlb	1	; () banked
 28197  010746  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 28198  010748  0101               	movlb	1	; () banked
 28199  01074A  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 28200  01074C  0101               	movlb	1	; () banked
 28201  01074E  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28202  010750  0101               	movlb	1	; () banked
 28203  010752  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28204  010754  0101               	movlb	1	; () banked
 28205  010756  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28206  010758  0101               	movlb	1	; () banked
 28207  01075A  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28208                           
 28209                           ;tcp.c: 3829: if((int32_t)dwTemp > 0)
 28210  01075C  0101               	movlb	1	; () banked
 28211  01075E  516E               	movf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28212  010760  0A80               	xorlw	128
 28213  010762  0F80               	addlw	128
 28214  010764  E10B               	bnz	u14455
 28215  010766  0E00               	movlw	0
 28216  010768  0101               	movlb	1	; () banked
 28217  01076A  5D6D               	subwf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28218  01076C  E107               	bnz	u14455
 28219  01076E  0E00               	movlw	0
 28220  010770  0101               	movlb	1	; () banked
 28221  010772  5D6C               	subwf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28222  010774  E103               	bnz	u14455
 28223  010776  0E01               	movlw	1
 28224  010778  0101               	movlb	1	; () banked
 28225  01077A  5D6B               	subwf	HandleTCPSeg@dwTemp& (0+255),w,b
 28226  01077C                     u14455:
 28227  01077C  A0D8               	btfss	status,0,c
 28228  01077E  D01A               	goto	l12934
 28229                           
 28230                           ; BSR set to: 1
 28231                           ;tcp.c: 3830: {
 28232                           ;tcp.c: 3831: if(!MyTCB.flags.bFINSent || dwTemp != 1)
 28233  010780  0101               	movlb	1	; () banked
 28234  010782  A1DB               	btfss	(_MyTCB+34)& (0+255),0,b
 28235  010784  D007               	goto	l12926
 28236                           
 28237                           ; BSR set to: 1
 28238  010786  0101               	movlb	1	; () banked
 28239  010788  056B               	decf	HandleTCPSeg@dwTemp& (0+255),w,b
 28240  01078A  116C               	iorwf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28241  01078C  116D               	iorwf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28242  01078E  116E               	iorwf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28243  010790  B4D8               	btfsc	status,2,c
 28244  010792  D007               	goto	l12932
 28245  010794                     l12926:
 28246                           
 28247                           ; BSR set to: 1
 28248                           ;tcp.c: 3832: {
 28249                           ;tcp.c: 3833: SendTCP((0x10), 0);
 28250  010794  0E00               	movlw	0
 28251  010796  0101               	movlb	1	; () banked
 28252  010798  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 28253  01079A  0E10               	movlw	16
 28254  01079C  ECC1  F096         	call	_SendTCP
 28255  0107A0  0012               	return	
 28256  0107A2                     l12932:
 28257                           
 28258                           ;tcp.c: 3836: else
 28259                           ;tcp.c: 3837: {
 28260                           ;tcp.c: 3838: localAckNumber--;
 28261  0107A2  0101               	movlb	1	; () banked
 28262  0107A4  0775               	decf	HandleTCPSeg@localAckNumber& (0+255),f,b
 28263  0107A6  0E00               	movlw	0
 28264  0107A8  0101               	movlb	1	; () banked
 28265  0107AA  5B76               	subwfb	(HandleTCPSeg@localAckNumber+1)& (0+255),f,b
 28266  0107AC  0101               	movlb	1	; () banked
 28267  0107AE  5B77               	subwfb	(HandleTCPSeg@localAckNumber+2)& (0+255),f,b
 28268  0107B0  0101               	movlb	1	; () banked
 28269  0107B2  5B78               	subwfb	(HandleTCPSeg@localAckNumber+3)& (0+255),f,b
 28270  0107B4                     l12934:
 28271                           
 28272                           ;tcp.c: 3839: }
 28273                           ;tcp.c: 3840: }
 28274                           ;tcp.c: 3844: dwTemp = MyTCB.MySEQ - (int32_t)(int16_t)(MyTCB.txUnackedTail - MyTCBStub.
      +                          txTail);
 28275  0107B4  0101               	movlb	1	; () banked
 28276  0107B6  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 28277  0107BA  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28278  0107BE  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28279  0107C2  0101               	movlb	1	; () banked
 28280  0107C4  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28281  0107C6  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28282  0107C8  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28283  0107CA  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28284  0107CC  0101               	movlb	1	; () banked
 28285  0107CE  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 28286  0107D0  0101               	movlb	1	; () banked
 28287  0107D2  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28288  0107D4  0101               	movlb	1	; () banked
 28289  0107D6  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28290  0107D8  0101               	movlb	1	; () banked
 28291  0107DA  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 28292  0107DC  0101               	movlb	1	; () banked
 28293  0107DE  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28294  0107E0  0101               	movlb	1	; () banked
 28295  0107E2  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28296  0107E4  0101               	movlb	1	; () banked
 28297  0107E6  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28298  0107E8  0101               	movlb	1	; () banked
 28299  0107EA  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 28300  0107EC  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 28301  0107EE  0101               	movlb	1	; () banked
 28302  0107F0  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28303  0107F2  0101               	movlb	1	; () banked
 28304  0107F4  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 28305  0107F6  0101               	movlb	1	; () banked
 28306  0107F8  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 28307  0107FA  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 28308  0107FC  1F5E               	comf	(??_HandleTCPSeg+4)& (0+255),f,b
 28309  0107FE  1F5F               	comf	(??_HandleTCPSeg+5)& (0+255),f,b
 28310  010800  2B5C               	incf	(??_HandleTCPSeg+2)& (0+255),f,b
 28311  010802  0E00               	movlw	0
 28312  010804  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 28313  010806  235E               	addwfc	(??_HandleTCPSeg+4)& (0+255),f,b
 28314  010808  235F               	addwfc	(??_HandleTCPSeg+5)& (0+255),f,b
 28315  01080A  0101               	movlb	1	; () banked
 28316  01080C  51BD               	movf	(_MyTCB+4)& (0+255),w,b
 28317  01080E  0101               	movlb	1	; () banked
 28318  010810  255C               	addwf	(??_HandleTCPSeg+2)& (0+255),w,b
 28319  010812  0101               	movlb	1	; () banked
 28320  010814  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28321  010816  0101               	movlb	1	; () banked
 28322  010818  51BE               	movf	(_MyTCB+5)& (0+255),w,b
 28323  01081A  0101               	movlb	1	; () banked
 28324  01081C  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28325  01081E  0101               	movlb	1	; () banked
 28326  010820  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28327  010822  0101               	movlb	1	; () banked
 28328  010824  51BF               	movf	(_MyTCB+6)& (0+255),w,b
 28329  010826  0101               	movlb	1	; () banked
 28330  010828  215E               	addwfc	(??_HandleTCPSeg+4)& (0+255),w,b
 28331  01082A  0101               	movlb	1	; () banked
 28332  01082C  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28333  01082E  0101               	movlb	1	; () banked
 28334  010830  51C0               	movf	(_MyTCB+7)& (0+255),w,b
 28335  010832  0101               	movlb	1	; () banked
 28336  010834  215F               	addwfc	(??_HandleTCPSeg+5)& (0+255),w,b
 28337  010836  0101               	movlb	1	; () banked
 28338  010838  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28339                           
 28340                           ; BSR set to: 1
 28341                           ;tcp.c: 3845: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 28342  01083A  0101               	movlb	1	; () banked
 28343  01083C  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28344  01083E  0101               	movlb	1	; () banked
 28345  010840  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28346  010842  0101               	movlb	1	; () banked
 28347  010844  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28348  010846  0101               	movlb	1	; () banked
 28349  010848  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28350  01084A  B0D8               	btfsc	status,0,c
 28351  01084C  D02B               	goto	l1351
 28352                           
 28353                           ; BSR set to: 1
 28354                           ;tcp.c: 3846: dwTemp -= MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28355  01084E  0101               	movlb	1	; () banked
 28356  010850  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28357  010854  0101               	movlb	1	; () banked
 28358  010856  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28359  01085A  0101               	movlb	1	; () banked
 28360  01085C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28361  01085E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28362  010860  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28363  010862  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28364  010864  0101               	movlb	1	; () banked
 28365  010866  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28366  010868  0101               	movlb	1	; () banked
 28367  01086A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28368  01086C  0101               	movlb	1	; () banked
 28369  01086E  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28370  010870  0101               	movlb	1	; () banked
 28371  010872  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28372  010874  0101               	movlb	1	; () banked
 28373  010876  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28374  010878  0101               	movlb	1	; () banked
 28375  01087A  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28376  01087C  0101               	movlb	1	; () banked
 28377  01087E  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28378  010880  0101               	movlb	1	; () banked
 28379  010882  6B5F               	clrf	(??_HandleTCPSeg+5)& (0+255),b
 28380  010884  0101               	movlb	1	; () banked
 28381  010886  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 28382  010888  0101               	movlb	1	; () banked
 28383  01088A  5F6B               	subwf	HandleTCPSeg@dwTemp& (0+255),f,b
 28384  01088C  0101               	movlb	1	; () banked
 28385  01088E  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 28386  010890  0101               	movlb	1	; () banked
 28387  010892  5B6C               	subwfb	(HandleTCPSeg@dwTemp+1)& (0+255),f,b
 28388  010894  0101               	movlb	1	; () banked
 28389  010896  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28390  010898  0101               	movlb	1	; () banked
 28391  01089A  5B6D               	subwfb	(HandleTCPSeg@dwTemp+2)& (0+255),f,b
 28392  01089C  0101               	movlb	1	; () banked
 28393  01089E  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 28394  0108A0  0101               	movlb	1	; () banked
 28395  0108A2  5B6E               	subwfb	(HandleTCPSeg@dwTemp+3)& (0+255),f,b
 28396  0108A4                     l1351:
 28397                           
 28398                           ; BSR set to: 1
 28399                           ;tcp.c: 3849: dwTemp = localAckNumber - dwTemp;
 28400  0108A4  0101               	movlb	1	; () banked
 28401  0108A6  C16B  F15A         	movff	HandleTCPSeg@dwTemp,??_HandleTCPSeg
 28402  0108AA  0101               	movlb	1	; () banked
 28403  0108AC  C16C  F15B         	movff	HandleTCPSeg@dwTemp+1,??_HandleTCPSeg+1
 28404  0108B0  0101               	movlb	1	; () banked
 28405  0108B2  C16D  F15C         	movff	HandleTCPSeg@dwTemp+2,??_HandleTCPSeg+2
 28406  0108B6  0101               	movlb	1	; () banked
 28407  0108B8  C16E  F15D         	movff	HandleTCPSeg@dwTemp+3,??_HandleTCPSeg+3
 28408  0108BC  0101               	movlb	1	; () banked
 28409  0108BE  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28410  0108C0  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28411  0108C2  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 28412  0108C4  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 28413  0108C6  2B5A               	incf	??_HandleTCPSeg& (0+255),f,b
 28414  0108C8  0E00               	movlw	0
 28415  0108CA  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28416  0108CC  235C               	addwfc	(??_HandleTCPSeg+2)& (0+255),f,b
 28417  0108CE  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 28418  0108D0  0101               	movlb	1	; () banked
 28419  0108D2  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 28420  0108D4  0101               	movlb	1	; () banked
 28421  0108D6  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28422  0108D8  0101               	movlb	1	; () banked
 28423  0108DA  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28424  0108DC  0101               	movlb	1	; () banked
 28425  0108DE  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 28426  0108E0  0101               	movlb	1	; () banked
 28427  0108E2  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28428  0108E4  0101               	movlb	1	; () banked
 28429  0108E6  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28430  0108E8  0101               	movlb	1	; () banked
 28431  0108EA  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 28432  0108EC  0101               	movlb	1	; () banked
 28433  0108EE  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 28434  0108F0  0101               	movlb	1	; () banked
 28435  0108F2  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28436  0108F4  0101               	movlb	1	; () banked
 28437  0108F6  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28438  0108F8  0101               	movlb	1	; () banked
 28439  0108FA  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28440  0108FC  0101               	movlb	1	; () banked
 28441  0108FE  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28442                           
 28443                           ;tcp.c: 3850: if(((int32_t)(dwTemp) > (int32_t)0) && (dwTemp <= MyTCBStub.bufferRxStart 
      +                          - MyTCBStub.bufferTxStart))
 28444  010900  0101               	movlb	1	; () banked
 28445  010902  516E               	movf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28446  010904  0A80               	xorlw	128
 28447  010906  0F80               	addlw	128
 28448  010908  E10B               	bnz	u14495
 28449  01090A  0E00               	movlw	0
 28450  01090C  0101               	movlb	1	; () banked
 28451  01090E  5D6D               	subwf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28452  010910  E107               	bnz	u14495
 28453  010912  0E00               	movlw	0
 28454  010914  0101               	movlb	1	; () banked
 28455  010916  5D6C               	subwf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28456  010918  E103               	bnz	u14495
 28457  01091A  0E01               	movlw	1
 28458  01091C  0101               	movlb	1	; () banked
 28459  01091E  5D6B               	subwf	HandleTCPSeg@dwTemp& (0+255),w,b
 28460  010920                     u14495:
 28461  010920  A0D8               	btfss	status,0,c
 28462  010922  D0FE               	goto	l12966
 28463                           
 28464                           ; BSR set to: 1
 28465  010924  0101               	movlb	1	; () banked
 28466  010926  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28467  01092A  0101               	movlb	1	; () banked
 28468  01092C  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28469  010930  0101               	movlb	1	; () banked
 28470  010932  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28471  010934  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28472  010936  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28473  010938  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28474  01093A  0101               	movlb	1	; () banked
 28475  01093C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28476  01093E  0101               	movlb	1	; () banked
 28477  010940  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28478  010942  0101               	movlb	1	; () banked
 28479  010944  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28480  010946  0101               	movlb	1	; () banked
 28481  010948  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28482  01094A  0101               	movlb	1	; () banked
 28483  01094C  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28484  01094E  0101               	movlb	1	; () banked
 28485  010950  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28486  010952  0101               	movlb	1	; () banked
 28487  010954  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28488  010956  0101               	movlb	1	; () banked
 28489  010958  6B5F               	clrf	(??_HandleTCPSeg+5)& (0+255),b
 28490  01095A  0101               	movlb	1	; () banked
 28491  01095C  516B               	movf	HandleTCPSeg@dwTemp& (0+255),w,b
 28492  01095E  0101               	movlb	1	; () banked
 28493  010960  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 28494  010962  0101               	movlb	1	; () banked
 28495  010964  516C               	movf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28496  010966  0101               	movlb	1	; () banked
 28497  010968  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 28498  01096A  0101               	movlb	1	; () banked
 28499  01096C  516D               	movf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28500  01096E  0101               	movlb	1	; () banked
 28501  010970  595E               	subwfb	(??_HandleTCPSeg+4)& (0+255),w,b
 28502  010972  0101               	movlb	1	; () banked
 28503  010974  516E               	movf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28504  010976  0101               	movlb	1	; () banked
 28505  010978  595F               	subwfb	(??_HandleTCPSeg+5)& (0+255),w,b
 28506  01097A  A0D8               	btfss	status,0,c
 28507  01097C  D0D1               	goto	l12966
 28508                           
 28509                           ; BSR set to: 1
 28510                           ;tcp.c: 3851: {
 28511                           ;tcp.c: 3852: MyTCB.flags.bRXNoneACKed1 = 0;
 28512  01097E  0101               	movlb	1	; () banked
 28513  010980  97DB               	bcf	(_MyTCB+34)& (0+255),3,b
 28514                           
 28515                           ;tcp.c: 3853: MyTCB.flags.bRXNoneACKed2 = 0;
 28516  010982  0101               	movlb	1	; () banked
 28517  010984  99DB               	bcf	(_MyTCB+34)& (0+255),4,b
 28518                           
 28519                           ;tcp.c: 3854: MyTCBStub.Flags.bHalfFullFlush = 0;
 28520  010986  0101               	movlb	1	; () banked
 28521  010988  91F8               	bcf	(_MyTCBStub+24)& (0+255),0,b
 28522                           
 28523                           ;tcp.c: 3857: wTemp = MyTCBStub.txTail;
 28524  01098A  C1E8  F17A         	movff	_MyTCBStub+8,HandleTCPSeg@wTemp
 28525  01098E  C1E9  F17B         	movff	_MyTCBStub+9,HandleTCPSeg@wTemp+1
 28526                           
 28527                           ; BSR set to: 1
 28528                           ;tcp.c: 3858: MyTCBStub.txTail += dwTemp;
 28529  010992  0101               	movlb	1	; () banked
 28530  010994  516B               	movf	HandleTCPSeg@dwTemp& (0+255),w,b
 28531  010996  0101               	movlb	1	; () banked
 28532  010998  27E8               	addwf	(_MyTCBStub+8)& (0+255),f,b
 28533  01099A  0101               	movlb	1	; () banked
 28534  01099C  516C               	movf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28535  01099E  0101               	movlb	1	; () banked
 28536  0109A0  23E9               	addwfc	(_MyTCBStub+9)& (0+255),f,b
 28537                           
 28538                           ;tcp.c: 3859: if(MyTCB.txUnackedTail >= wTemp)
 28539  0109A2  0101               	movlb	1	; () banked
 28540  0109A4  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 28541  0109A6  0101               	movlb	1	; () banked
 28542  0109A8  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28543  0109AA  0101               	movlb	1	; () banked
 28544  0109AC  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28545  0109AE  0101               	movlb	1	; () banked
 28546  0109B0  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28547  0109B2  A0D8               	btfss	status,0,c
 28548  0109B4  D012               	goto	l12952
 28549                           
 28550                           ; BSR set to: 1
 28551                           ;tcp.c: 3860: {
 28552                           ;tcp.c: 3861: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 28553  0109B6  0101               	movlb	1	; () banked
 28554  0109B8  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28555  0109BA  0101               	movlb	1	; () banked
 28556  0109BC  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28557  0109BE  0101               	movlb	1	; () banked
 28558  0109C0  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28559  0109C2  0101               	movlb	1	; () banked
 28560  0109C4  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28561  0109C6  B0D8               	btfsc	status,0,c
 28562  0109C8  D056               	goto	l12958
 28563                           
 28564                           ; BSR set to: 1
 28565                           ;tcp.c: 3862: {
 28566                           ;tcp.c: 3863: MyTCB.MySEQ += MyTCBStub.txTail - MyTCB.txUnackedTail;
 28567  0109CA  0101               	movlb	1	; () banked
 28568  0109CC  EE21  F0C5         	lfsr	2,_MyTCB+12
 28569  0109D0  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28570  0109D4  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28571  0109D8  D02F               	goto	L35
 28572  0109DA                     l12952:
 28573                           
 28574                           ; BSR set to: 1
 28575                           ;tcp.c: 3867: else
 28576                           ;tcp.c: 3868: {
 28577                           ;tcp.c: 3869: wTemp = MyTCB.txUnackedTail + (MyTCBStub.bufferRxStart - MyTCBStub.bufferT
      +                          xStart);
 28578  0109DA  0101               	movlb	1	; () banked
 28579  0109DC  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28580  0109E0  0101               	movlb	1	; () banked
 28581  0109E2  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28582  0109E6  0101               	movlb	1	; () banked
 28583  0109E8  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28584  0109EA  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28585  0109EC  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28586  0109EE  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28587  0109F0  0101               	movlb	1	; () banked
 28588  0109F2  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28589  0109F4  0101               	movlb	1	; () banked
 28590  0109F6  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28591  0109F8  0101               	movlb	1	; () banked
 28592  0109FA  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28593  0109FC  0101               	movlb	1	; () banked
 28594  0109FE  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28595  010A00  0101               	movlb	1	; () banked
 28596  010A02  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 28597  010A04  0101               	movlb	1	; () banked
 28598  010A06  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28599  010A08  0101               	movlb	1	; () banked
 28600  010A0A  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 28601  010A0C  0101               	movlb	1	; () banked
 28602  010A0E  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 28603  010A10  0101               	movlb	1	; () banked
 28604  010A12  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28605  010A14  0101               	movlb	1	; () banked
 28606  010A16  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 28607                           
 28608                           ;tcp.c: 3870: if(wTemp < MyTCBStub.txTail)
 28609  010A18  0101               	movlb	1	; () banked
 28610  010A1A  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28611  010A1C  0101               	movlb	1	; () banked
 28612  010A1E  5D7A               	subwf	HandleTCPSeg@wTemp& (0+255),w,b
 28613  010A20  0101               	movlb	1	; () banked
 28614  010A22  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28615  010A24  0101               	movlb	1	; () banked
 28616  010A26  597B               	subwfb	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28617  010A28  B0D8               	btfsc	status,0,c
 28618  010A2A  D025               	goto	l12958
 28619                           
 28620                           ; BSR set to: 1
 28621                           ;tcp.c: 3871: {
 28622                           ;tcp.c: 3872: MyTCB.MySEQ += MyTCBStub.txTail - wTemp;
 28623  010A2C  0101               	movlb	1	; () banked
 28624  010A2E  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 28625  010A32  0101               	movlb	1	; () banked
 28626  010A34  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 28627  010A38                     L35:
 28628  010A38  0101               	movlb	1	; () banked
 28629  010A3A  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28630  010A3C  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28631  010A3E  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28632  010A40  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28633  010A42  0101               	movlb	1	; () banked
 28634  010A44  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28635  010A46  0101               	movlb	1	; () banked
 28636  010A48  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28637  010A4A  0101               	movlb	1	; () banked
 28638  010A4C  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28639  010A4E  0101               	movlb	1	; () banked
 28640  010A50  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28641  010A52  0101               	movlb	1	; () banked
 28642  010A54  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28643  010A56  0101               	movlb	1	; () banked
 28644  010A58  27BD               	addwf	(_MyTCB+4)& (0+255),f,b
 28645  010A5A  0101               	movlb	1	; () banked
 28646  010A5C  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28647  010A5E  0101               	movlb	1	; () banked
 28648  010A60  23BE               	addwfc	(_MyTCB+5)& (0+255),f,b
 28649  010A62  0E00               	movlw	0
 28650  010A64  0101               	movlb	1	; () banked
 28651  010A66  23BF               	addwfc	(_MyTCB+6)& (0+255),f,b
 28652  010A68  0E00               	movlw	0
 28653  010A6A  0101               	movlb	1	; () banked
 28654  010A6C  23C0               	addwfc	(_MyTCB+7)& (0+255),f,b
 28655                           
 28656                           ; BSR set to: 1
 28657                           ;tcp.c: 3873: MyTCB.txUnackedTail = MyTCBStub.txTail;
 28658  010A6E  C1E8  F1C5         	movff	_MyTCBStub+8,_MyTCB+12
 28659  010A72  C1E9  F1C6         	movff	_MyTCBStub+9,_MyTCB+13
 28660  010A76                     l12958:
 28661                           
 28662                           ; BSR set to: 1
 28663                           ;tcp.c: 3874: }
 28664                           ;tcp.c: 3875: }
 28665                           ;tcp.c: 3876: if(MyTCBStub.txTail >= MyTCBStub.bufferRxStart)
 28666  010A76  0101               	movlb	1	; () banked
 28667  010A78  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 28668  010A7C  0101               	movlb	1	; () banked
 28669  010A7E  EE11  F0E8         	lfsr	1,_MyTCBStub+8
 28670  010A82  52E6               	movf	postinc1,f,c
 28671  010A84  52DE               	movf	postinc2,f,c
 28672  010A86  50DD               	movf	postdec2,w,c
 28673  010A88  5CE5               	subwf	postdec1,w,c
 28674  010A8A  E102               	bnz	u14545
 28675  010A8C  50DF               	movf	indf2,w,c
 28676  010A8E  5CE7               	subwf	indf1,w,c
 28677  010A90                     u14545:
 28678  010A90  A0D8               	btfss	status,0,c
 28679  010A92  D01B               	goto	l12962
 28680                           
 28681                           ; BSR set to: 1
 28682                           ;tcp.c: 3877: MyTCBStub.txTail -= MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28683  010A94  0101               	movlb	1	; () banked
 28684  010A96  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28685  010A9A  0101               	movlb	1	; () banked
 28686  010A9C  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28687  010AA0  0101               	movlb	1	; () banked
 28688  010AA2  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28689  010AA4  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28690  010AA6  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28691  010AA8  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28692  010AAA  0101               	movlb	1	; () banked
 28693  010AAC  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28694  010AAE  0101               	movlb	1	; () banked
 28695  010AB0  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28696  010AB2  0101               	movlb	1	; () banked
 28697  010AB4  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28698  010AB6  0101               	movlb	1	; () banked
 28699  010AB8  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28700  010ABA  0101               	movlb	1	; () banked
 28701  010ABC  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28702  010ABE  0101               	movlb	1	; () banked
 28703  010AC0  5FE8               	subwf	(_MyTCBStub+8)& (0+255),f,b
 28704  010AC2  0101               	movlb	1	; () banked
 28705  010AC4  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28706  010AC6  0101               	movlb	1	; () banked
 28707  010AC8  5BE9               	subwfb	(_MyTCBStub+9)& (0+255),f,b
 28708  010ACA                     l12962:
 28709                           
 28710                           ; BSR set to: 1
 28711                           ;tcp.c: 3878: if(MyTCB.txUnackedTail >= MyTCBStub.bufferRxStart)
 28712  010ACA  0101               	movlb	1	; () banked
 28713  010ACC  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 28714  010AD0  0101               	movlb	1	; () banked
 28715  010AD2  EE11  F0C5         	lfsr	1,_MyTCB+12
 28716  010AD6  52E6               	movf	postinc1,f,c
 28717  010AD8  52DE               	movf	postinc2,f,c
 28718  010ADA  50DD               	movf	postdec2,w,c
 28719  010ADC  5CE5               	subwf	postdec1,w,c
 28720  010ADE  E102               	bnz	u14555
 28721  010AE0  50DF               	movf	indf2,w,c
 28722  010AE2  5CE7               	subwf	indf1,w,c
 28723  010AE4                     u14555:
 28724  010AE4  A0D8               	btfss	status,0,c
 28725  010AE6  D0A7               	goto	l12986
 28726                           
 28727                           ; BSR set to: 1
 28728                           ;tcp.c: 3879: MyTCB.txUnackedTail -= MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28729  010AE8  0101               	movlb	1	; () banked
 28730  010AEA  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28731  010AEE  0101               	movlb	1	; () banked
 28732  010AF0  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28733  010AF4  0101               	movlb	1	; () banked
 28734  010AF6  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28735  010AF8  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28736  010AFA  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28737  010AFC  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28738  010AFE  0101               	movlb	1	; () banked
 28739  010B00  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28740  010B02  0101               	movlb	1	; () banked
 28741  010B04  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28742  010B06  0101               	movlb	1	; () banked
 28743  010B08  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28744  010B0A  0101               	movlb	1	; () banked
 28745  010B0C  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28746  010B0E  0101               	movlb	1	; () banked
 28747  010B10  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28748  010B12  0101               	movlb	1	; () banked
 28749  010B14  5FC5               	subwf	(_MyTCB+12)& (0+255),f,b
 28750  010B16  0101               	movlb	1	; () banked
 28751  010B18  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28752  010B1A  0101               	movlb	1	; () banked
 28753  010B1C  5BC6               	subwfb	(_MyTCB+13)& (0+255),f,b
 28754  010B1E  D08B               	goto	l12986
 28755  010B20                     l12966:
 28756                           
 28757                           ; BSR set to: 1
 28758                           ;tcp.c: 3881: else
 28759                           ;tcp.c: 3882: {
 28760                           ;tcp.c: 3884: if(MyTCBStub.txTail != MyTCB.txUnackedTail)
 28761  010B20  0101               	movlb	1	; () banked
 28762  010B22  EE21  F0C5         	lfsr	2,_MyTCB+12
 28763  010B26  0101               	movlb	1	; () banked
 28764  010B28  EE11  F0E8         	lfsr	1,_MyTCBStub+8
 28765  010B2C  52E6               	movf	postinc1,f,c
 28766  010B2E  52DE               	movf	postinc2,f,c
 28767  010B30  50DD               	movf	postdec2,w,c
 28768  010B32  18E5               	xorwf	postdec1,w,c
 28769  010B34  CFDF FFE8          	movff	indf2,wreg
 28770  010B38  B4D8               	btfsc	status,2,c
 28771  010B3A  18E7               	xorwf	indf1,w,c
 28772  010B3C  B4D8               	btfsc	status,2,c
 28773  010B3E  D07B               	goto	l12986
 28774                           
 28775                           ; BSR set to: 1
 28776                           ;tcp.c: 3885: {
 28777                           ;tcp.c: 3886: if(MyTCB.flags.bRXNoneACKed1)
 28778  010B40  0101               	movlb	1	; () banked
 28779  010B42  A7DB               	btfss	(_MyTCB+34)& (0+255),3,b
 28780  010B44  D076               	goto	l12984
 28781                           
 28782                           ; BSR set to: 1
 28783                           ;tcp.c: 3887: {
 28784                           ;tcp.c: 3888: if(MyTCB.flags.bRXNoneACKed2)
 28785  010B46  0101               	movlb	1	; () banked
 28786  010B48  A9DB               	btfss	(_MyTCB+34)& (0+255),4,b
 28787  010B4A  D071               	goto	l12982
 28788                           
 28789                           ; BSR set to: 1
 28790                           ;tcp.c: 3889: {
 28791                           ;tcp.c: 3892: MyTCB.MySEQ -= (int32_t)(int16_t)(MyTCB.txUnackedTail - MyTCBStub.txTail);
 28792  010B4C  0101               	movlb	1	; () banked
 28793  010B4E  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 28794  010B52  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28795  010B56  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28796  010B5A  0101               	movlb	1	; () banked
 28797  010B5C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28798  010B5E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28799  010B60  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28800  010B62  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28801  010B64  0101               	movlb	1	; () banked
 28802  010B66  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 28803  010B68  0101               	movlb	1	; () banked
 28804  010B6A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28805  010B6C  0101               	movlb	1	; () banked
 28806  010B6E  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28807  010B70  0101               	movlb	1	; () banked
 28808  010B72  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 28809  010B74  0101               	movlb	1	; () banked
 28810  010B76  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28811  010B78  0101               	movlb	1	; () banked
 28812  010B7A  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28813  010B7C  0101               	movlb	1	; () banked
 28814  010B7E  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28815  010B80  0101               	movlb	1	; () banked
 28816  010B82  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 28817  010B84  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 28818  010B86  0101               	movlb	1	; () banked
 28819  010B88  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28820  010B8A  0101               	movlb	1	; () banked
 28821  010B8C  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 28822  010B8E  0101               	movlb	1	; () banked
 28823  010B90  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 28824  010B92  0101               	movlb	1	; () banked
 28825  010B94  5FBD               	subwf	(_MyTCB+4)& (0+255),f,b
 28826  010B96  0101               	movlb	1	; () banked
 28827  010B98  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 28828  010B9A  0101               	movlb	1	; () banked
 28829  010B9C  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 28830  010B9E  0101               	movlb	1	; () banked
 28831  010BA0  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28832  010BA2  0101               	movlb	1	; () banked
 28833  010BA4  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 28834  010BA6  0101               	movlb	1	; () banked
 28835  010BA8  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 28836  010BAA  0101               	movlb	1	; () banked
 28837  010BAC  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 28838                           
 28839                           ; BSR set to: 1
 28840                           ;tcp.c: 3893: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 28841  010BAE  0101               	movlb	1	; () banked
 28842  010BB0  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28843  010BB2  0101               	movlb	1	; () banked
 28844  010BB4  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28845  010BB6  0101               	movlb	1	; () banked
 28846  010BB8  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28847  010BBA  0101               	movlb	1	; () banked
 28848  010BBC  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28849  010BBE  B0D8               	btfsc	status,0,c
 28850  010BC0  D030               	goto	l12978
 28851                           
 28852                           ; BSR set to: 1
 28853                           ;tcp.c: 3894: MyTCB.MySEQ -= (int32_t)(int16_t)(MyTCBStub.bufferRxStart - MyTCBStub.buff
      +                          erTxStart);
 28854  010BC2  0101               	movlb	1	; () banked
 28855  010BC4  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28856  010BC8  0101               	movlb	1	; () banked
 28857  010BCA  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28858  010BCE  0101               	movlb	1	; () banked
 28859  010BD0  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28860  010BD2  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28861  010BD4  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28862  010BD6  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28863  010BD8  0101               	movlb	1	; () banked
 28864  010BDA  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28865  010BDC  0101               	movlb	1	; () banked
 28866  010BDE  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28867  010BE0  0101               	movlb	1	; () banked
 28868  010BE2  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28869  010BE4  0101               	movlb	1	; () banked
 28870  010BE6  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28871  010BE8  0101               	movlb	1	; () banked
 28872  010BEA  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28873  010BEC  0101               	movlb	1	; () banked
 28874  010BEE  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28875  010BF0  0101               	movlb	1	; () banked
 28876  010BF2  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28877  010BF4  0101               	movlb	1	; () banked
 28878  010BF6  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 28879  010BF8  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 28880  010BFA  0101               	movlb	1	; () banked
 28881  010BFC  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28882  010BFE  0101               	movlb	1	; () banked
 28883  010C00  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 28884  010C02  0101               	movlb	1	; () banked
 28885  010C04  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 28886  010C06  0101               	movlb	1	; () banked
 28887  010C08  5FBD               	subwf	(_MyTCB+4)& (0+255),f,b
 28888  010C0A  0101               	movlb	1	; () banked
 28889  010C0C  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 28890  010C0E  0101               	movlb	1	; () banked
 28891  010C10  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 28892  010C12  0101               	movlb	1	; () banked
 28893  010C14  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28894  010C16  0101               	movlb	1	; () banked
 28895  010C18  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 28896  010C1A  0101               	movlb	1	; () banked
 28897  010C1C  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 28898  010C1E  0101               	movlb	1	; () banked
 28899  010C20  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 28900  010C22                     l12978:
 28901                           
 28902                           ; BSR set to: 1
 28903                           ;tcp.c: 3895: MyTCB.txUnackedTail = MyTCBStub.txTail;
 28904  010C22  C1E8  F1C5         	movff	_MyTCBStub+8,_MyTCB+12
 28905  010C26  C1E9  F1C6         	movff	_MyTCBStub+9,_MyTCB+13
 28906                           
 28907                           ; BSR set to: 1
 28908                           ;tcp.c: 3896: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 28909  010C2A  0101               	movlb	1	; () banked
 28910  010C2C  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 28911  010C2E                     l12982:
 28912                           
 28913                           ; BSR set to: 1
 28914                           ;tcp.c: 3897: }
 28915                           ;tcp.c: 3898: MyTCB.flags.bRXNoneACKed2 = 1;
 28916  010C2E  0101               	movlb	1	; () banked
 28917  010C30  89DB               	bsf	(_MyTCB+34)& (0+255),4,b
 28918  010C32                     l12984:
 28919                           
 28920                           ; BSR set to: 1
 28921                           ;tcp.c: 3899: }
 28922                           ;tcp.c: 3900: MyTCB.flags.bRXNoneACKed1 = 1;
 28923  010C32  0101               	movlb	1	; () banked
 28924  010C34  87DB               	bsf	(_MyTCB+34)& (0+255),3,b
 28925  010C36                     l12986:
 28926                           
 28927                           ; BSR set to: 1
 28928                           ;tcp.c: 3901: }
 28929                           ;tcp.c: 3902: }
 28930                           ;tcp.c: 3905: if(MyTCBStub.txTail == MyTCBStub.txHead)
 28931  010C36  0101               	movlb	1	; () banked
 28932  010C38  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 28933  010C3C  0101               	movlb	1	; () banked
 28934  010C3E  EE11  F0E8         	lfsr	1,_MyTCBStub+8
 28935  010C42  52E6               	movf	postinc1,f,c
 28936  010C44  52DE               	movf	postinc2,f,c
 28937  010C46  50DD               	movf	postdec2,w,c
 28938  010C48  18E5               	xorwf	postdec1,w,c
 28939  010C4A  CFDF FFE8          	movff	indf2,wreg
 28940  010C4E  B4D8               	btfsc	status,2,c
 28941  010C50  18E7               	xorwf	indf1,w,c
 28942  010C52  A4D8               	btfss	status,2,c
 28943  010C54  D040               	goto	l13000
 28944                           
 28945                           ; BSR set to: 1
 28946                           ;tcp.c: 3906: {
 28947                           ;tcp.c: 3908: if(MyTCBStub.Flags.bTXFIN == 0u)
 28948  010C56  0101               	movlb	1	; () banked
 28949  010C58  B7F8               	btfsc	(_MyTCBStub+24)& (0+255),3,b
 28950  010C5A  D021               	goto	l12994
 28951                           
 28952                           ; BSR set to: 1
 28953                           ;tcp.c: 3909: {
 28954                           ;tcp.c: 3912: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 28955  010C5C  EC5D  F0DB         	call	_TickGet	;wreg free
 28956  010C60  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 28957  010C64  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 28958  010C68  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 28959  010C6C  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 28960  010C70  0EE6               	movlw	230
 28961  010C72  0101               	movlb	1	; () banked
 28962  010C74  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28963  010C76  0101               	movlb	1	; () banked
 28964  010C78  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 28965  010C7A  0EF5               	movlw	245
 28966  010C7C  0101               	movlb	1	; () banked
 28967  010C7E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28968  010C80  0101               	movlb	1	; () banked
 28969  010C82  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 28970  010C84  0E05               	movlw	5
 28971  010C86  0101               	movlb	1	; () banked
 28972  010C88  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 28973  010C8A  0101               	movlb	1	; () banked
 28974  010C8C  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 28975  010C8E  0E00               	movlw	0
 28976  010C90  0101               	movlb	1	; () banked
 28977  010C92  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28978  010C94  0101               	movlb	1	; () banked
 28979  010C96  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 28980                           
 28981                           ; BSR set to: 1
 28982                           ;tcp.c: 3914: MyTCBStub.Flags.bTimerEnabled = 0;
 28983  010C98  0101               	movlb	1	; () banked
 28984  010C9A  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 28985                           
 28986                           ;tcp.c: 3915: }
 28987  010C9C  D01C               	goto	l13000
 28988  010C9E                     l12994:
 28989                           
 28990                           ; BSR set to: 1
 28991                           ;tcp.c: 3916: else
 28992                           ;tcp.c: 3917: {
 28993                           ;tcp.c: 3919: if((MyTCB.MySEQ == localAckNumber) && MyTCB.flags.bFINSent)
 28994  010C9E  0101               	movlb	1	; () banked
 28995  010CA0  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28996  010CA2  0101               	movlb	1	; () banked
 28997  010CA4  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 28998  010CA6  E10E               	bnz	u14625
 28999  010CA8  0101               	movlb	1	; () banked
 29000  010CAA  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29001  010CAC  0101               	movlb	1	; () banked
 29002  010CAE  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 29003  010CB0  E109               	bnz	u14625
 29004  010CB2  0101               	movlb	1	; () banked
 29005  010CB4  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29006  010CB6  0101               	movlb	1	; () banked
 29007  010CB8  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 29008  010CBA  E104               	bnz	u14625
 29009  010CBC  0101               	movlb	1	; () banked
 29010  010CBE  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29011  010CC0  0101               	movlb	1	; () banked
 29012  010CC2  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 29013  010CC4                     u14625:
 29014  010CC4  A4D8               	btfss	status,2,c
 29015  010CC6  D007               	goto	l13000
 29016                           
 29017                           ; BSR set to: 1
 29018  010CC8  0101               	movlb	1	; () banked
 29019  010CCA  A1DB               	btfss	(_MyTCB+34)& (0+255),0,b
 29020  010CCC  D004               	goto	l13000
 29021                           
 29022                           ; BSR set to: 1
 29023                           ;tcp.c: 3920: {
 29024                           ;tcp.c: 3921: MyTCBStub.Flags.bTimerEnabled = 0;
 29025  010CCE  0101               	movlb	1	; () banked
 29026  010CD0  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 29027                           
 29028                           ;tcp.c: 3922: MyTCBStub.Flags.bTXFIN = 0;
 29029  010CD2  0101               	movlb	1	; () banked
 29030  010CD4  97F8               	bcf	(_MyTCBStub+24)& (0+255),3,b
 29031  010CD6                     l13000:
 29032                           
 29033                           ; BSR set to: 1
 29034                           ;tcp.c: 3923: }
 29035                           ;tcp.c: 3924: }
 29036                           ;tcp.c: 3925: }
 29037                           ;tcp.c: 3930: wNewWindow = h->Window - ((uint16_t)(MyTCB.MySEQ - localAckNumber));
 29038  010CD6  0101               	movlb	1	; () banked
 29039  010CD8  EE20 F00E          	lfsr	2,14
 29040  010CDC  0101               	movlb	1	; () banked
 29041  010CDE  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 29042  010CE0  26D9               	addwf	fsr2l,f,c
 29043  010CE2  0101               	movlb	1	; () banked
 29044  010CE4  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 29045  010CE6  22DA               	addwfc	fsr2h,f,c
 29046  010CE8  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29047  010CEC  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29048  010CF0  0101               	movlb	1	; () banked
 29049  010CF2  C175  F15C         	movff	HandleTCPSeg@localAckNumber,??_HandleTCPSeg+2
 29050  010CF6  0101               	movlb	1	; () banked
 29051  010CF8  C176  F15D         	movff	HandleTCPSeg@localAckNumber+1,??_HandleTCPSeg+3
 29052  010CFC  0101               	movlb	1	; () banked
 29053  010CFE  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 29054  010D00  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 29055  010D02  4B5C               	infsnz	(??_HandleTCPSeg+2)& (0+255),f,b
 29056  010D04  2B5D               	incf	(??_HandleTCPSeg+3)& (0+255),f,b
 29057  010D06  0101               	movlb	1	; () banked
 29058  010D08  51BD               	movf	(_MyTCB+4)& (0+255),w,b
 29059  010D0A  0101               	movlb	1	; () banked
 29060  010D0C  275C               	addwf	(??_HandleTCPSeg+2)& (0+255),f,b
 29061  010D0E  0101               	movlb	1	; () banked
 29062  010D10  51BE               	movf	(_MyTCB+5)& (0+255),w,b
 29063  010D12  0101               	movlb	1	; () banked
 29064  010D14  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 29065  010D16  0101               	movlb	1	; () banked
 29066  010D18  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 29067  010D1A  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 29068  010D1C  4B5C               	infsnz	(??_HandleTCPSeg+2)& (0+255),f,b
 29069  010D1E  2B5D               	incf	(??_HandleTCPSeg+3)& (0+255),f,b
 29070  010D20  0101               	movlb	1	; () banked
 29071  010D22  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29072  010D24  0101               	movlb	1	; () banked
 29073  010D26  255C               	addwf	(??_HandleTCPSeg+2)& (0+255),w,b
 29074  010D28  0101               	movlb	1	; () banked
 29075  010D2A  6F62               	movwf	HandleTCPSeg@wNewWindow& (0+255),b
 29076  010D2C  0101               	movlb	1	; () banked
 29077  010D2E  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29078  010D30  0101               	movlb	1	; () banked
 29079  010D32  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29080  010D34  0101               	movlb	1	; () banked
 29081  010D36  6F63               	movwf	(HandleTCPSeg@wNewWindow+1)& (0+255),b
 29082                           
 29083                           ; BSR set to: 1
 29084                           ;tcp.c: 3935: if((MyTCB.remoteWindow == 0u) && wNewWindow)
 29085  010D38  0101               	movlb	1	; () banked
 29086  010D3A  51CC               	movf	(_MyTCB+19)& (0+255),w,b
 29087  010D3C  11CB               	iorwf	(_MyTCB+18)& (0+255),w,b
 29088  010D3E  A4D8               	btfss	status,2,c
 29089  010D40  D007               	goto	l1368
 29090                           
 29091                           ; BSR set to: 1
 29092  010D42  0101               	movlb	1	; () banked
 29093  010D44  5163               	movf	(HandleTCPSeg@wNewWindow+1)& (0+255),w,b
 29094  010D46  1162               	iorwf	HandleTCPSeg@wNewWindow& (0+255),w,b
 29095  010D48  B4D8               	btfsc	status,2,c
 29096  010D4A  D002               	goto	l1368
 29097                           
 29098                           ; BSR set to: 1
 29099                           ;tcp.c: 3936: MyTCBStub.Flags.bTXASAP = 1;
 29100  010D4C  0101               	movlb	1	; () banked
 29101  010D4E  83F8               	bsf	(_MyTCBStub+24)& (0+255),1,b
 29102  010D50                     l1368:
 29103                           
 29104                           ; BSR set to: 1
 29105                           ;tcp.c: 3937: MyTCB.remoteWindow = wNewWindow;
 29106  010D50  C162  F1CB         	movff	HandleTCPSeg@wNewWindow,_MyTCB+18
 29107  010D54  C163  F1CC         	movff	HandleTCPSeg@wNewWindow+1,_MyTCB+19
 29108                           
 29109                           ; BSR set to: 1
 29110                           ;tcp.c: 3940: if(MyTCBStub.smState == TCP_FIN_WAIT_1)
 29111  010D58  0101               	movlb	1	; () banked
 29112  010D5A  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29113  010D5C  0A08               	xorlw	8
 29114  010D5E  A4D8               	btfss	status,2,c
 29115  010D60  D03C               	goto	l13020
 29116                           
 29117                           ; BSR set to: 1
 29118                           ;tcp.c: 3941: {
 29119                           ;tcp.c: 3943: if((MyTCB.MySEQ == localAckNumber) && MyTCB.flags.bFINSent)
 29120  010D62  0101               	movlb	1	; () banked
 29121  010D64  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29122  010D66  0101               	movlb	1	; () banked
 29123  010D68  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 29124  010D6A  E10E               	bnz	u14675
 29125  010D6C  0101               	movlb	1	; () banked
 29126  010D6E  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29127  010D70  0101               	movlb	1	; () banked
 29128  010D72  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 29129  010D74  E109               	bnz	u14675
 29130  010D76  0101               	movlb	1	; () banked
 29131  010D78  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29132  010D7A  0101               	movlb	1	; () banked
 29133  010D7C  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 29134  010D7E  E104               	bnz	u14675
 29135  010D80  0101               	movlb	1	; () banked
 29136  010D82  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29137  010D84  0101               	movlb	1	; () banked
 29138  010D86  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 29139  010D88                     u14675:
 29140  010D88  A4D8               	btfss	status,2,c
 29141  010D8A  D0A6               	goto	l1377
 29142                           
 29143                           ; BSR set to: 1
 29144  010D8C  0101               	movlb	1	; () banked
 29145  010D8E  A1DB               	btfss	(_MyTCB+34)& (0+255),0,b
 29146  010D90  D0A3               	goto	l1377
 29147                           
 29148                           ; BSR set to: 1
 29149                           ;tcp.c: 3944: {
 29150                           ;tcp.c: 3947: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*5);
 29151  010D92  EC5D  F0DB         	call	_TickGet	;wreg free
 29152  010D96  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 29153  010D9A  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 29154  010D9E  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 29155  010DA2  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 29156  010DA6  0EF3               	movlw	243
 29157  010DA8  0101               	movlb	1	; () banked
 29158  010DAA  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29159  010DAC  0101               	movlb	1	; () banked
 29160  010DAE  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 29161  010DB0  0EFA               	movlw	250
 29162  010DB2  0101               	movlb	1	; () banked
 29163  010DB4  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29164  010DB6  0101               	movlb	1	; () banked
 29165  010DB8  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 29166  010DBA  0E02               	movlw	2
 29167  010DBC  0101               	movlb	1	; () banked
 29168  010DBE  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 29169  010DC0  0101               	movlb	1	; () banked
 29170  010DC2  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 29171  010DC4  0E00               	movlw	0
 29172  010DC6  0101               	movlb	1	; () banked
 29173  010DC8  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29174  010DCA  0101               	movlb	1	; () banked
 29175  010DCC  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 29176                           
 29177                           ; BSR set to: 1
 29178                           ;tcp.c: 3948: MyTCBStub.Flags.bTimerEnabled = 1;
 29179  010DCE  0101               	movlb	1	; () banked
 29180  010DD0  89F7               	bsf	(_MyTCBStub+23)& (0+255),4,b
 29181                           
 29182                           ; BSR set to: 1
 29183                           ;tcp.c: 3949: MyTCBStub.smState = TCP_FIN_WAIT_2;
 29184  010DD2  0E09               	movlw	9
 29185  010DD4  0101               	movlb	1	; () banked
 29186  010DD6  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 29187  010DD8  D07F               	goto	l1377
 29188  010DDA                     l13020:
 29189                           
 29190                           ; BSR set to: 1
 29191                           ;tcp.c: 3952: else if(MyTCBStub.smState == TCP_FIN_WAIT_2)
 29192  010DDA  0101               	movlb	1	; () banked
 29193  010DDC  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29194  010DDE  0A09               	xorlw	9
 29195  010DE0  A4D8               	btfss	status,2,c
 29196  010DE2  D014               	goto	l13032
 29197                           
 29198                           ; BSR set to: 1
 29199                           ;tcp.c: 3953: {
 29200                           ;tcp.c: 3962: if(!(localHeaderFlags & (0x01)))
 29201  010DE4  0101               	movlb	1	; () banked
 29202  010DE6  B179               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),0,b
 29203  010DE8  D077               	goto	l1377
 29204                           
 29205                           ; BSR set to: 1
 29206                           ;tcp.c: 3963: {
 29207                           ;tcp.c: 3964: MyTCB.MySEQ = localAckNumber;
 29208  010DEA  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 29209  010DEE  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 29210  010DF2  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 29211  010DF6  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 29212                           
 29213                           ; BSR set to: 1
 29214                           ;tcp.c: 3965: SendTCP((0x04) | (0x10), 0);
 29215  010DFA  0E00               	movlw	0
 29216  010DFC  0101               	movlb	1	; () banked
 29217  010DFE  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 29218  010E00  0E14               	movlw	20
 29219  010E02  ECC1  F096         	call	_SendTCP
 29220                           
 29221                           ;tcp.c: 3966: CloseSocket();
 29222  010E06  ECFD  F0CD         	call	_CloseSocket	;wreg free
 29223  010E0A  0012               	return	
 29224  010E0C                     l13032:
 29225                           
 29226                           ;tcp.c: 3970: else if(MyTCBStub.smState == TCP_CLOSING)
 29227  010E0C  0101               	movlb	1	; () banked
 29228  010E0E  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29229  010E10  0A0A               	xorlw	10
 29230  010E12  A4D8               	btfss	status,2,c
 29231  010E14  D061               	goto	l1377
 29232                           
 29233                           ; BSR set to: 1
 29234                           ;tcp.c: 3971: {
 29235                           ;tcp.c: 3973: if(MyTCB.MySEQ == localAckNumber)
 29236  010E16  0101               	movlb	1	; () banked
 29237  010E18  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29238  010E1A  0101               	movlb	1	; () banked
 29239  010E1C  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 29240  010E1E  E10E               	bnz	u14725
 29241  010E20  0101               	movlb	1	; () banked
 29242  010E22  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29243  010E24  0101               	movlb	1	; () banked
 29244  010E26  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 29245  010E28  E109               	bnz	u14725
 29246  010E2A  0101               	movlb	1	; () banked
 29247  010E2C  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29248  010E2E  0101               	movlb	1	; () banked
 29249  010E30  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 29250  010E32  E104               	bnz	u14725
 29251  010E34  0101               	movlb	1	; () banked
 29252  010E36  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29253  010E38  0101               	movlb	1	; () banked
 29254  010E3A  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 29255  010E3C                     u14725:
 29256  010E3C  A4D8               	btfss	status,2,c
 29257  010E3E  0012               	return	
 29258                           
 29259                           ; BSR set to: 1
 29260                           ;tcp.c: 3974: {
 29261                           ;tcp.c: 3984: CloseSocket();
 29262  010E40  ECFD  F0CD         	call	_CloseSocket	;wreg free
 29263  010E44  0012               	return	
 29264  010E46                     l13040:
 29265                           
 29266                           ;tcp.c: 3994: if(MyTCB.MySEQ + 1 == localAckNumber)
 29267  010E46  0E01               	movlw	1
 29268  010E48  0101               	movlb	1	; () banked
 29269  010E4A  25BD               	addwf	(_MyTCB+4)& (0+255),w,b
 29270  010E4C  0101               	movlb	1	; () banked
 29271  010E4E  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 29272  010E50  0E00               	movlw	0
 29273  010E52  0101               	movlb	1	; () banked
 29274  010E54  21BE               	addwfc	(_MyTCB+5)& (0+255),w,b
 29275  010E56  0101               	movlb	1	; () banked
 29276  010E58  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 29277  010E5A  0E00               	movlw	0
 29278  010E5C  0101               	movlb	1	; () banked
 29279  010E5E  21BF               	addwfc	(_MyTCB+6)& (0+255),w,b
 29280  010E60  0101               	movlb	1	; () banked
 29281  010E62  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 29282  010E64  0E00               	movlw	0
 29283  010E66  0101               	movlb	1	; () banked
 29284  010E68  21C0               	addwfc	(_MyTCB+7)& (0+255),w,b
 29285  010E6A  0101               	movlb	1	; () banked
 29286  010E6C  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 29287  010E6E  0101               	movlb	1	; () banked
 29288  010E70  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29289  010E72  0101               	movlb	1	; () banked
 29290  010E74  195D               	xorwf	(??_HandleTCPSeg+3)& (0+255),w,b
 29291  010E76  E10E               	bnz	u14735
 29292  010E78  0101               	movlb	1	; () banked
 29293  010E7A  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29294  010E7C  0101               	movlb	1	; () banked
 29295  010E7E  195C               	xorwf	(??_HandleTCPSeg+2)& (0+255),w,b
 29296  010E80  E109               	bnz	u14735
 29297  010E82  0101               	movlb	1	; () banked
 29298  010E84  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29299  010E86  0101               	movlb	1	; () banked
 29300  010E88  195B               	xorwf	(??_HandleTCPSeg+1)& (0+255),w,b
 29301  010E8A  E104               	bnz	u14735
 29302  010E8C  0101               	movlb	1	; () banked
 29303  010E8E  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29304  010E90  0101               	movlb	1	; () banked
 29305  010E92  195A               	xorwf	??_HandleTCPSeg& (0+255),w,b
 29306  010E94                     u14735:
 29307  010E94  A4D8               	btfss	status,2,c
 29308  010E96  0012               	return	
 29309                           
 29310                           ; BSR set to: 1
 29311                           ;tcp.c: 3995: CloseSocket();
 29312  010E98  ECFD  F0CD         	call	_CloseSocket	;wreg free
 29313  010E9C  0012               	return	
 29314  010E9E                     l13048:
 29315  010E9E  0101               	movlb	1	; () banked
 29316  010EA0  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29317                           
 29318                           ; Switch size 1, requested type "space"
 29319                           ; Number of cases is 7, Range of values is 6 to 12
 29320                           ; switch strategies available:
 29321                           ; Name         Instructions Cycles
 29322                           ; simple_byte           22    12 (average)
 29323                           ;	Chosen strategy is simple_byte
 29324  010EA2  0A06               	xorlw	6	; case 6
 29325  010EA4  B4D8               	btfsc	status,2,c
 29326  010EA6  EFF5  F082         	goto	l12904
 29327  010EAA  0A01               	xorlw	1	; case 7
 29328  010EAC  B4D8               	btfsc	status,2,c
 29329  010EAE  EF2C  F083         	goto	l12916
 29330  010EB2  0A0F               	xorlw	15	; case 8
 29331  010EB4  B4D8               	btfsc	status,2,c
 29332  010EB6  EF2C  F083         	goto	l12916
 29333  010EBA  0A01               	xorlw	1	; case 9
 29334  010EBC  B4D8               	btfsc	status,2,c
 29335  010EBE  EF2C  F083         	goto	l12916
 29336  010EC2  0A03               	xorlw	3	; case 10
 29337  010EC4  B4D8               	btfsc	status,2,c
 29338  010EC6  EF2C  F083         	goto	l12916
 29339  010ECA  0A01               	xorlw	1	; case 11
 29340  010ECC  B4D8               	btfsc	status,2,c
 29341  010ECE  EF2C  F083         	goto	l12916
 29342  010ED2  0A07               	xorlw	7	; case 12
 29343  010ED4  B4D8               	btfsc	status,2,c
 29344  010ED6  D7B7               	goto	l13040
 29345  010ED8                     l1377:
 29346                           
 29347                           ;tcp.c: 4012: if(localHeaderFlags & (0x20))
 29348  010ED8  0101               	movlb	1	; () banked
 29349  010EDA  BB79               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),5,b
 29350  010EDC  0012               	return	
 29351                           
 29352                           ; BSR set to: 1
 29353                           ;tcp.c: 4019: if(MyTCBStub.smState == TCP_CLOSE_WAIT)
 29354                           
 29355                           ; BSR set to: 1
 29356                           
 29357                           ; BSR set to: 1
 29358                           ;tcp.c: 4013: return;
 29359  010EDE  0101               	movlb	1	; () banked
 29360  010EE0  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29361  010EE2  0A0B               	xorlw	11
 29362  010EE4  B4D8               	btfsc	status,2,c
 29363  010EE6  0012               	return	
 29364                           
 29365                           ; BSR set to: 1
 29366                           ;tcp.c: 4021: if(MyTCBStub.smState == TCP_CLOSING)
 29367                           
 29368                           ; BSR set to: 1
 29369                           
 29370                           ; BSR set to: 1
 29371                           ;tcp.c: 4020: return;
 29372  010EE8  0101               	movlb	1	; () banked
 29373  010EEA  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29374  010EEC  0A0A               	xorlw	10
 29375  010EEE  B4D8               	btfsc	status,2,c
 29376  010EF0  0012               	return	
 29377                           
 29378                           ; BSR set to: 1
 29379                           ;tcp.c: 4023: if(MyTCBStub.smState == TCP_LAST_ACK)
 29380                           
 29381                           ; BSR set to: 1
 29382                           
 29383                           ; BSR set to: 1
 29384                           ;tcp.c: 4022: return;
 29385  010EF2  0101               	movlb	1	; () banked
 29386  010EF4  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29387  010EF6  0A0C               	xorlw	12
 29388  010EF8  B4D8               	btfsc	status,2,c
 29389  010EFA  0012               	return	
 29390                           
 29391                           ; BSR set to: 1
 29392                           ;tcp.c: 4029: if(len)
 29393                           
 29394                           ; BSR set to: 1
 29395                           
 29396                           ; BSR set to: 1
 29397                           ;tcp.c: 4024: return;
 29398  010EFC  0101               	movlb	1	; () banked
 29399  010EFE  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29400  010F00  1158               	iorwf	HandleTCPSeg@len& (0+255),w,b
 29401  010F02  B4D8               	btfsc	status,2,c
 29402  010F04  D3B2               	goto	l13152
 29403                           
 29404                           ; BSR set to: 1
 29405                           ;tcp.c: 4030: {
 29406                           ;tcp.c: 4032: if((int16_t)wMissingBytes <= 0)
 29407  010F06  0101               	movlb	1	; () banked
 29408  010F08  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29409  010F0A  0A80               	xorlw	128
 29410  010F0C  6EF3               	movwf	prodl,c
 29411  010F0E  0E80               	movlw	128
 29412  010F10  5CF3               	subwf	prodl,w,c
 29413  010F12  0E01               	movlw	1
 29414  010F14  B4D8               	btfsc	status,2,c
 29415  010F16  5D7C               	subwf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29416  010F18  B0D8               	btfsc	status,0,c
 29417  010F1A  D178               	goto	l13112
 29418                           
 29419                           ; BSR set to: 1
 29420                           ;tcp.c: 4033: {
 29421                           ;tcp.c: 4035: IPSetRxBuffer((h->DataOffset.Val << 2) - wMissingBytes);
 29422  010F1C  0101               	movlb	1	; () banked
 29423  010F1E  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 29424  010F22  0101               	movlb	1	; () banked
 29425  010F24  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 29426  010F28  0101               	movlb	1	; () banked
 29427  010F2A  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29428  010F2C  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29429  010F2E  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29430  010F30  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29431  010F32  0101               	movlb	1	; () banked
 29432  010F34  EE20 F00C          	lfsr	2,12
 29433  010F38  0101               	movlb	1	; () banked
 29434  010F3A  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 29435  010F3C  26D9               	addwf	fsr2l,f,c
 29436  010F3E  0101               	movlb	1	; () banked
 29437  010F40  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 29438  010F42  22DA               	addwfc	fsr2h,f,c
 29439  010F44  0101               	movlb	1	; () banked
 29440  010F46  38DF               	swapf	223,w,c
 29441  010F48  0B0F               	andlw	15
 29442  010F4A  0101               	movlb	1	; () banked
 29443  010F4C  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 29444  010F4E  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 29445  010F50  0101               	movlb	1	; () banked
 29446  010F52  90D8               	bcf	status,0,c
 29447  010F54  375C               	rlcf	(??_HandleTCPSeg+2)& (0+255),f,b
 29448  010F56  375D               	rlcf	(??_HandleTCPSeg+3)& (0+255),f,b
 29449  010F58  0101               	movlb	1	; () banked
 29450  010F5A  90D8               	bcf	status,0,c
 29451  010F5C  375C               	rlcf	(??_HandleTCPSeg+2)& (0+255),f,b
 29452  010F5E  375D               	rlcf	(??_HandleTCPSeg+3)& (0+255),f,b
 29453  010F60  0101               	movlb	1	; () banked
 29454  010F62  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29455  010F64  0101               	movlb	1	; () banked
 29456  010F66  255C               	addwf	(??_HandleTCPSeg+2)& (0+255),w,b
 29457  010F68  0101               	movlb	1	; () banked
 29458  010F6A  6F06               	movwf	IPSetRxBuffer@Offset& (0+255),b
 29459  010F6C  0101               	movlb	1	; () banked
 29460  010F6E  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29461  010F70  0101               	movlb	1	; () banked
 29462  010F72  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29463  010F74  0101               	movlb	1	; () banked
 29464  010F76  6F07               	movwf	(IPSetRxBuffer@Offset+1)& (0+255),b
 29465  010F78  EC51  F0DC         	call	_IPSetRxBuffer	;wreg free
 29466                           
 29467                           ;tcp.c: 4036: len += wMissingBytes;
 29468  010F7C  0101               	movlb	1	; () banked
 29469  010F7E  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29470  010F80  0101               	movlb	1	; () banked
 29471  010F82  2758               	addwf	HandleTCPSeg@len& (0+255),f,b
 29472  010F84  0101               	movlb	1	; () banked
 29473  010F86  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29474  010F88  0101               	movlb	1	; () banked
 29475  010F8A  2359               	addwfc	(HandleTCPSeg@len+1)& (0+255),f,b
 29476                           
 29477                           ; BSR set to: 1
 29478                           ;tcp.c: 4040: if(len > wFreeSpace)
 29479  010F8C  0101               	movlb	1	; () banked
 29480  010F8E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29481  010F90  0101               	movlb	1	; () banked
 29482  010F92  5D73               	subwf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 29483  010F94  0101               	movlb	1	; () banked
 29484  010F96  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29485  010F98  0101               	movlb	1	; () banked
 29486  010F9A  5974               	subwfb	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 29487  010F9C  B0D8               	btfsc	status,0,c
 29488  010F9E  D004               	goto	l13076
 29489                           
 29490                           ; BSR set to: 1
 29491                           ;tcp.c: 4041: len = wFreeSpace;
 29492  010FA0  C173  F158         	movff	HandleTCPSeg@wFreeSpace,HandleTCPSeg@len
 29493  010FA4  C174  F159         	movff	HandleTCPSeg@wFreeSpace+1,HandleTCPSeg@len+1
 29494  010FA8                     l13076:
 29495                           
 29496                           ; BSR set to: 1
 29497                           ;tcp.c: 4043: MyTCB.RemoteSEQ += (uint32_t)len;
 29498  010FA8  0101               	movlb	1	; () banked
 29499  010FAA  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29500  010FAC  0101               	movlb	1	; () banked
 29501  010FAE  27C1               	addwf	(_MyTCB+8)& (0+255),f,b
 29502  010FB0  0101               	movlb	1	; () banked
 29503  010FB2  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29504  010FB4  0101               	movlb	1	; () banked
 29505  010FB6  23C2               	addwfc	(_MyTCB+9)& (0+255),f,b
 29506  010FB8  0E00               	movlw	0
 29507  010FBA  0101               	movlb	1	; () banked
 29508  010FBC  23C3               	addwfc	(_MyTCB+10)& (0+255),f,b
 29509  010FBE  0E00               	movlw	0
 29510  010FC0  0101               	movlb	1	; () banked
 29511  010FC2  23C4               	addwfc	(_MyTCB+11)& (0+255),f,b
 29512                           
 29513                           ; BSR set to: 1
 29514                           ;tcp.c: 4047: if(MyTCBStub.rxHead + len > MyTCBStub.bufferEnd)
 29515  010FC4  0101               	movlb	1	; () banked
 29516  010FC6  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 29517  010FCA  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29518  010FCE  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29519  010FD2  0101               	movlb	1	; () banked
 29520  010FD4  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29521  010FD6  0101               	movlb	1	; () banked
 29522  010FD8  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29523  010FDA  0101               	movlb	1	; () banked
 29524  010FDC  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29525  010FDE  0101               	movlb	1	; () banked
 29526  010FE0  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29527  010FE2  0101               	movlb	1	; () banked
 29528  010FE4  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29529  010FE6  0101               	movlb	1	; () banked
 29530  010FE8  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 29531  010FEA  0101               	movlb	1	; () banked
 29532  010FEC  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29533  010FEE  0101               	movlb	1	; () banked
 29534  010FF0  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 29535  010FF2  B0D8               	btfsc	status,0,c
 29536  010FF4  D079               	goto	l13088
 29537                           
 29538                           ; BSR set to: 1
 29539                           ;tcp.c: 4048: {
 29540                           ;tcp.c: 4049: wTemp = MyTCBStub.bufferEnd - MyTCBStub.rxHead + 1;
 29541  010FF6  0101               	movlb	1	; () banked
 29542  010FF8  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 29543  010FFC  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29544  011000  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29545  011004  0101               	movlb	1	; () banked
 29546  011006  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29547  011008  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29548  01100A  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29549  01100C  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29550  01100E  0101               	movlb	1	; () banked
 29551  011010  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 29552  011012  0101               	movlb	1	; () banked
 29553  011014  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29554  011016  0101               	movlb	1	; () banked
 29555  011018  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 29556  01101A  0101               	movlb	1	; () banked
 29557  01101C  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29558  01101E  0E01               	movlw	1
 29559  011020  0101               	movlb	1	; () banked
 29560  011022  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29561  011024  0101               	movlb	1	; () banked
 29562  011026  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 29563  011028  0E00               	movlw	0
 29564  01102A  0101               	movlb	1	; () banked
 29565  01102C  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29566  01102E  0101               	movlb	1	; () banked
 29567  011030  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 29568                           
 29569                           ; BSR set to: 1
 29570                           ;tcp.c: 4050: TCPRAMCopy(MyTCBStub.rxHead, MyTCBStub.vMemoryMedium, (unsigned short)-1, 
      +                          0u, wTemp);
 29571  011032  C1EA  F11E         	movff	_MyTCBStub+10,TCPRAMCopy@ptrDest
 29572  011036  C1EB  F11F         	movff	_MyTCBStub+11,TCPRAMCopy@ptrDest+1
 29573  01103A  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 29574  01103E  0EFF               	movlw	255
 29575  011040  0101               	movlb	1	; () banked
 29576  011042  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 29577  011044  0101               	movlb	1	; () banked
 29578  011046  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 29579  011048  0E00               	movlw	0
 29580  01104A  0101               	movlb	1	; () banked
 29581  01104C  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 29582  01104E  C17A  F124         	movff	HandleTCPSeg@wTemp,TCPRAMCopy@wLength
 29583  011052  C17B  F125         	movff	HandleTCPSeg@wTemp+1,TCPRAMCopy@wLength+1
 29584  011056  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 29585                           
 29586                           ;tcp.c: 4051: TCPRAMCopy(MyTCBStub.bufferRxStart, MyTCBStub.vMemoryMedium, (unsigned sho
      +                          rt)-1, 0u, len - wTemp);
 29587  01105A  C1E2  F11E         	movff	_MyTCBStub+2,TCPRAMCopy@ptrDest
 29588  01105E  C1E3  F11F         	movff	_MyTCBStub+3,TCPRAMCopy@ptrDest+1
 29589  011062  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 29590  011066  0EFF               	movlw	255
 29591  011068  0101               	movlb	1	; () banked
 29592  01106A  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 29593  01106C  0101               	movlb	1	; () banked
 29594  01106E  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 29595  011070  0E00               	movlw	0
 29596  011072  0101               	movlb	1	; () banked
 29597  011074  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 29598  011076  0101               	movlb	1	; () banked
 29599  011078  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 29600  01107C  0101               	movlb	1	; () banked
 29601  01107E  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 29602  011082  0101               	movlb	1	; () banked
 29603  011084  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29604  011086  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29605  011088  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29606  01108A  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29607  01108C  0101               	movlb	1	; () banked
 29608  01108E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29609  011090  0101               	movlb	1	; () banked
 29610  011092  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29611  011094  0101               	movlb	1	; () banked
 29612  011096  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 29613  011098  0101               	movlb	1	; () banked
 29614  01109A  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29615  01109C  0101               	movlb	1	; () banked
 29616  01109E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29617  0110A0  0101               	movlb	1	; () banked
 29618  0110A2  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 29619  0110A4  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 29620                           
 29621                           ;tcp.c: 4052: MyTCBStub.rxHead = MyTCBStub.bufferRxStart + (len - wTemp);
 29622  0110A8  0101               	movlb	1	; () banked
 29623  0110AA  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 29624  0110AE  0101               	movlb	1	; () banked
 29625  0110B0  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 29626  0110B4  0101               	movlb	1	; () banked
 29627  0110B6  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29628  0110B8  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29629  0110BA  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29630  0110BC  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29631  0110BE  0101               	movlb	1	; () banked
 29632  0110C0  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 29633  0110C2  0101               	movlb	1	; () banked
 29634  0110C4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29635  0110C6  0101               	movlb	1	; () banked
 29636  0110C8  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 29637  0110CA  0101               	movlb	1	; () banked
 29638  0110CC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29639  0110CE  0101               	movlb	1	; () banked
 29640  0110D0  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29641  0110D2  0101               	movlb	1	; () banked
 29642  0110D4  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29643  0110D6  0101               	movlb	1	; () banked
 29644  0110D8  6FEA               	movwf	(_MyTCBStub+10)& (0+255),b
 29645  0110DA  0101               	movlb	1	; () banked
 29646  0110DC  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29647  0110DE  0101               	movlb	1	; () banked
 29648  0110E0  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29649  0110E2  0101               	movlb	1	; () banked
 29650  0110E4  6FEB               	movwf	(_MyTCBStub+11)& (0+255),b
 29651                           
 29652                           ;tcp.c: 4053: }
 29653  0110E6  D01C               	goto	l13092
 29654  0110E8                     l13088:
 29655                           
 29656                           ; BSR set to: 1
 29657                           ;tcp.c: 4054: else
 29658                           ;tcp.c: 4055: {
 29659                           ;tcp.c: 4056: TCPRAMCopy(MyTCBStub.rxHead, MyTCBStub.vMemoryMedium, (unsigned short)-1, 
      +                          0u, len);
 29660  0110E8  C1EA  F11E         	movff	_MyTCBStub+10,TCPRAMCopy@ptrDest
 29661  0110EC  C1EB  F11F         	movff	_MyTCBStub+11,TCPRAMCopy@ptrDest+1
 29662  0110F0  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 29663  0110F4  0EFF               	movlw	255
 29664  0110F6  0101               	movlb	1	; () banked
 29665  0110F8  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 29666  0110FA  0101               	movlb	1	; () banked
 29667  0110FC  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 29668  0110FE  0E00               	movlw	0
 29669  011100  0101               	movlb	1	; () banked
 29670  011102  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 29671  011104  C158  F124         	movff	HandleTCPSeg@len,TCPRAMCopy@wLength
 29672  011108  C159  F125         	movff	HandleTCPSeg@len+1,TCPRAMCopy@wLength+1
 29673  01110C  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 29674                           
 29675                           ;tcp.c: 4057: MyTCBStub.rxHead += len;
 29676  011110  0101               	movlb	1	; () banked
 29677  011112  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29678  011114  0101               	movlb	1	; () banked
 29679  011116  27EA               	addwf	(_MyTCBStub+10)& (0+255),f,b
 29680  011118  0101               	movlb	1	; () banked
 29681  01111A  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29682  01111C  0101               	movlb	1	; () banked
 29683  01111E  23EB               	addwfc	(_MyTCBStub+11)& (0+255),f,b
 29684  011120                     l13092:
 29685                           
 29686                           ; BSR set to: 1
 29687                           ;tcp.c: 4058: }
 29688                           ;tcp.c: 4061: if(MyTCB.sHoleSize != -1)
 29689  011120  0101               	movlb	1	; () banked
 29690  011122  29D9               	incf	(_MyTCB+32)& (0+255),w,b
 29691  011124  B4D8               	btfsc	status,2,c
 29692  011126  29DA               	incf	(_MyTCB+33)& (0+255),w,b
 29693  011128  B4D8               	btfsc	status,2,c
 29694  01112A  D29F               	goto	l13152
 29695                           
 29696                           ; BSR set to: 1
 29697                           ;tcp.c: 4062: {
 29698                           ;tcp.c: 4063: MyTCB.sHoleSize -= len;
 29699  01112C  0101               	movlb	1	; () banked
 29700  01112E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29701  011130  0101               	movlb	1	; () banked
 29702  011132  5FD9               	subwf	(_MyTCB+32)& (0+255),f,b
 29703  011134  0101               	movlb	1	; () banked
 29704  011136  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29705  011138  0101               	movlb	1	; () banked
 29706  01113A  5BDA               	subwfb	(_MyTCB+33)& (0+255),f,b
 29707                           
 29708                           ;tcp.c: 4064: wTemp = MyTCB.wFutureDataSize + MyTCB.sHoleSize;
 29709  01113C  0101               	movlb	1	; () banked
 29710  01113E  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 29711  011140  0101               	movlb	1	; () banked
 29712  011142  25CD               	addwf	(_MyTCB+20)& (0+255),w,b
 29713  011144  0101               	movlb	1	; () banked
 29714  011146  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 29715  011148  0101               	movlb	1	; () banked
 29716  01114A  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 29717  01114C  0101               	movlb	1	; () banked
 29718  01114E  21CE               	addwfc	(_MyTCB+21)& (0+255),w,b
 29719  011150  0101               	movlb	1	; () banked
 29720  011152  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 29721                           
 29722                           ; BSR set to: 1
 29723                           ;tcp.c: 4067: if((int16_t)wTemp < (int16_t)0)
 29724  011154  0101               	movlb	1	; () banked
 29725  011156  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 29726  011158  0A80               	xorlw	128
 29727  01115A  6EF3               	movwf	prodl,c
 29728  01115C  0E80               	movlw	128
 29729  01115E  5CF3               	subwf	prodl,w,c
 29730  011160  0E00               	movlw	0
 29731  011162  B4D8               	btfsc	status,2,c
 29732  011164  5D7A               	subwf	HandleTCPSeg@wTemp& (0+255),w,b
 29733  011166  A0D8               	btfss	status,0,c
 29734  011168  D04C               	goto	l13110
 29735                           
 29736                           ; BSR set to: 1
 29737                           ;tcp.c: 4071: else if(MyTCB.sHoleSize <= 0)
 29738                           
 29739                           ; BSR set to: 1
 29740                           
 29741                           ;tcp.c: 4070: }
 29742                           
 29743                           ; BSR set to: 1
 29744                           ;tcp.c: 4068: {
 29745                           ;tcp.c: 4069: MyTCB.sHoleSize = -1;
 29746  01116A  0101               	movlb	1	; () banked
 29747  01116C  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 29748  01116E  0A80               	xorlw	128
 29749  011170  6EF3               	movwf	prodl,c
 29750  011172  0E80               	movlw	128
 29751  011174  5CF3               	subwf	prodl,w,c
 29752  011176  0E01               	movlw	1
 29753  011178  B4D8               	btfsc	status,2,c
 29754  01117A  5DD9               	subwf	(_MyTCB+32)& (0+255),w,b
 29755  01117C  B0D8               	btfsc	status,0,c
 29756  01117E  D275               	goto	l13152
 29757                           
 29758                           ; BSR set to: 1
 29759                           ;tcp.c: 4072: {
 29760                           ;tcp.c: 4073: MyTCB.RemoteSEQ += wTemp;
 29761  011180  0101               	movlb	1	; () banked
 29762  011182  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 29763  011184  0101               	movlb	1	; () banked
 29764  011186  27C1               	addwf	(_MyTCB+8)& (0+255),f,b
 29765  011188  0101               	movlb	1	; () banked
 29766  01118A  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 29767  01118C  0101               	movlb	1	; () banked
 29768  01118E  23C2               	addwfc	(_MyTCB+9)& (0+255),f,b
 29769  011190  0E00               	movlw	0
 29770  011192  0101               	movlb	1	; () banked
 29771  011194  23C3               	addwfc	(_MyTCB+10)& (0+255),f,b
 29772  011196  0E00               	movlw	0
 29773  011198  0101               	movlb	1	; () banked
 29774  01119A  23C4               	addwfc	(_MyTCB+11)& (0+255),f,b
 29775                           
 29776                           ; BSR set to: 1
 29777                           ;tcp.c: 4074: MyTCBStub.rxHead += wTemp;
 29778  01119C  0101               	movlb	1	; () banked
 29779  01119E  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 29780  0111A0  0101               	movlb	1	; () banked
 29781  0111A2  27EA               	addwf	(_MyTCBStub+10)& (0+255),f,b
 29782  0111A4  0101               	movlb	1	; () banked
 29783  0111A6  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 29784  0111A8  0101               	movlb	1	; () banked
 29785  0111AA  23EB               	addwfc	(_MyTCBStub+11)& (0+255),f,b
 29786                           
 29787                           ; BSR set to: 1
 29788                           ;tcp.c: 4075: if(MyTCBStub.rxHead > MyTCBStub.bufferEnd)
 29789  0111AC  0101               	movlb	1	; () banked
 29790  0111AE  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 29791  0111B0  0101               	movlb	1	; () banked
 29792  0111B2  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 29793  0111B4  0101               	movlb	1	; () banked
 29794  0111B6  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 29795  0111B8  0101               	movlb	1	; () banked
 29796  0111BA  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 29797  0111BC  B0D8               	btfsc	status,0,c
 29798  0111BE  D021               	goto	l13110
 29799                           
 29800                           ; BSR set to: 1
 29801                           ;tcp.c: 4076: MyTCBStub.rxHead -= MyTCBStub.bufferEnd - MyTCBStub.bufferRxStart + 1;
 29802  0111C0  0101               	movlb	1	; () banked
 29803  0111C2  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 29804  0111C6  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29805  0111CA  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29806  0111CE  0101               	movlb	1	; () banked
 29807  0111D0  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29808  0111D2  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29809  0111D4  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29810  0111D6  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29811  0111D8  0101               	movlb	1	; () banked
 29812  0111DA  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 29813  0111DC  0101               	movlb	1	; () banked
 29814  0111DE  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29815  0111E0  0101               	movlb	1	; () banked
 29816  0111E2  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 29817  0111E4  0101               	movlb	1	; () banked
 29818  0111E6  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29819  0111E8  0E01               	movlw	1
 29820  0111EA  0101               	movlb	1	; () banked
 29821  0111EC  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29822  0111EE  0E00               	movlw	0
 29823  0111F0  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29824  0111F2  0101               	movlb	1	; () banked
 29825  0111F4  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29826  0111F6  0101               	movlb	1	; () banked
 29827  0111F8  5FEA               	subwf	(_MyTCBStub+10)& (0+255),f,b
 29828  0111FA  0101               	movlb	1	; () banked
 29829  0111FC  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29830  0111FE  0101               	movlb	1	; () banked
 29831  011200  5BEB               	subwfb	(_MyTCBStub+11)& (0+255),f,b
 29832  011202                     l13110:
 29833                           
 29834                           ; BSR set to: 1
 29835                           ;tcp.c: 4077: MyTCB.sHoleSize = -1;
 29836  011202  0101               	movlb	1	; () banked
 29837  011204  69D9               	setf	(_MyTCB+32)& (0+255),b
 29838  011206  0101               	movlb	1	; () banked
 29839  011208  69DA               	setf	(_MyTCB+33)& (0+255),b
 29840  01120A  D22F               	goto	l13152
 29841  01120C                     l13112:
 29842                           
 29843                           ; BSR set to: 1
 29844                           ;tcp.c: 4081: else if((int16_t)wMissingBytes > 0)
 29845  01120C  0101               	movlb	1	; () banked
 29846  01120E  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29847  011210  0A80               	xorlw	128
 29848  011212  0F80               	addlw	-128
 29849  011214  0E01               	movlw	1
 29850  011216  B4D8               	btfsc	status,2,c
 29851  011218  5D7C               	subwf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29852  01121A  A0D8               	btfss	status,0,c
 29853  01121C  D226               	goto	l13152
 29854                           
 29855                           ; BSR set to: 1
 29856                           ;tcp.c: 4082: {
 29857                           ;tcp.c: 4084: if(len + wMissingBytes > wFreeSpace)
 29858  01121E  0101               	movlb	1	; () banked
 29859  011220  C158  F15A         	movff	HandleTCPSeg@len,??_HandleTCPSeg
 29860  011224  0101               	movlb	1	; () banked
 29861  011226  C159  F15B         	movff	HandleTCPSeg@len+1,??_HandleTCPSeg+1
 29862  01122A  0101               	movlb	1	; () banked
 29863  01122C  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29864  01122E  0101               	movlb	1	; () banked
 29865  011230  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29866  011232  0101               	movlb	1	; () banked
 29867  011234  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29868  011236  0101               	movlb	1	; () banked
 29869  011238  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29870  01123A  0101               	movlb	1	; () banked
 29871  01123C  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29872  01123E  0101               	movlb	1	; () banked
 29873  011240  5D73               	subwf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 29874  011242  0101               	movlb	1	; () banked
 29875  011244  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29876  011246  0101               	movlb	1	; () banked
 29877  011248  5974               	subwfb	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 29878  01124A  B0D8               	btfsc	status,0,c
 29879  01124C  D017               	goto	l13118
 29880                           
 29881                           ; BSR set to: 1
 29882                           ;tcp.c: 4085: len = wFreeSpace - wMissingBytes;
 29883  01124E  0101               	movlb	1	; () banked
 29884  011250  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 29885  011254  0101               	movlb	1	; () banked
 29886  011256  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 29887  01125A  0101               	movlb	1	; () banked
 29888  01125C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29889  01125E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29890  011260  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29891  011262  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29892  011264  0101               	movlb	1	; () banked
 29893  011266  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 29894  011268  0101               	movlb	1	; () banked
 29895  01126A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29896  01126C  0101               	movlb	1	; () banked
 29897  01126E  6F58               	movwf	HandleTCPSeg@len& (0+255),b
 29898  011270  0101               	movlb	1	; () banked
 29899  011272  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 29900  011274  0101               	movlb	1	; () banked
 29901  011276  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29902  011278  0101               	movlb	1	; () banked
 29903  01127A  6F59               	movwf	(HandleTCPSeg@len+1)& (0+255),b
 29904  01127C                     l13118:
 29905                           
 29906                           ; BSR set to: 1
 29907                           ;tcp.c: 4088: IPSetRxBuffer(h->DataOffset.Val << 2);
 29908  01127C  0101               	movlb	1	; () banked
 29909  01127E  EE20 F00C          	lfsr	2,12
 29910  011282  0101               	movlb	1	; () banked
 29911  011284  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 29912  011286  26D9               	addwf	fsr2l,f,c
 29913  011288  0101               	movlb	1	; () banked
 29914  01128A  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 29915  01128C  22DA               	addwfc	fsr2h,f,c
 29916  01128E  0101               	movlb	1	; () banked
 29917  011290  38DF               	swapf	223,w,c
 29918  011292  0B0F               	andlw	15
 29919  011294  0101               	movlb	1	; () banked
 29920  011296  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 29921  011298  6B5B               	clrf	(??_HandleTCPSeg+1)& (0+255),b
 29922  01129A  0101               	movlb	1	; () banked
 29923  01129C  90D8               	bcf	status,0,c
 29924  01129E  375A               	rlcf	??_HandleTCPSeg& (0+255),f,b
 29925  0112A0  375B               	rlcf	(??_HandleTCPSeg+1)& (0+255),f,b
 29926  0112A2  0101               	movlb	1	; () banked
 29927  0112A4  90D8               	bcf	status,0,c
 29928  0112A6  375A               	rlcf	??_HandleTCPSeg& (0+255),f,b
 29929  0112A8  375B               	rlcf	(??_HandleTCPSeg+1)& (0+255),f,b
 29930  0112AA  C15A  F106         	movff	??_HandleTCPSeg,IPSetRxBuffer@Offset
 29931  0112AE  C15B  F107         	movff	??_HandleTCPSeg+1,IPSetRxBuffer@Offset+1
 29932  0112B2  EC51  F0DC         	call	_IPSetRxBuffer	;wreg free
 29933                           
 29934                           ;tcp.c: 4091: if(MyTCBStub.rxHead + wMissingBytes + len > MyTCBStub.bufferEnd)
 29935  0112B6  0101               	movlb	1	; () banked
 29936  0112B8  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 29937  0112BC  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29938  0112C0  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29939  0112C4  0101               	movlb	1	; () banked
 29940  0112C6  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29941  0112C8  0101               	movlb	1	; () banked
 29942  0112CA  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29943  0112CC  0101               	movlb	1	; () banked
 29944  0112CE  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29945  0112D0  0101               	movlb	1	; () banked
 29946  0112D2  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29947  0112D4  0101               	movlb	1	; () banked
 29948  0112D6  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29949  0112D8  0101               	movlb	1	; () banked
 29950  0112DA  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29951  0112DC  0101               	movlb	1	; () banked
 29952  0112DE  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29953  0112E0  0101               	movlb	1	; () banked
 29954  0112E2  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29955  0112E4  0101               	movlb	1	; () banked
 29956  0112E6  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29957  0112E8  0101               	movlb	1	; () banked
 29958  0112EA  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 29959  0112EC  0101               	movlb	1	; () banked
 29960  0112EE  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29961  0112F0  0101               	movlb	1	; () banked
 29962  0112F2  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 29963  0112F4  B0D8               	btfsc	status,0,c
 29964  0112F6  D0B0               	goto	l13130
 29965                           
 29966                           ; BSR set to: 1
 29967                           ;tcp.c: 4092: {
 29968                           ;tcp.c: 4094: wTemp = MyTCBStub.bufferEnd - MyTCBStub.rxHead + 1 - wMissingBytes;
 29969  0112F8  0101               	movlb	1	; () banked
 29970  0112FA  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 29971  0112FE  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29972  011302  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29973  011306  0101               	movlb	1	; () banked
 29974  011308  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29975  01130A  0101               	movlb	1	; () banked
 29976  01130C  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29977  01130E  0101               	movlb	1	; () banked
 29978  011310  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29979  011312  0101               	movlb	1	; () banked
 29980  011314  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29981  011316  0101               	movlb	1	; () banked
 29982  011318  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29983  01131A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29984  01131C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29985  01131E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29986  011320  0101               	movlb	1	; () banked
 29987  011322  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 29988  011324  0101               	movlb	1	; () banked
 29989  011326  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29990  011328  0101               	movlb	1	; () banked
 29991  01132A  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 29992  01132C  0101               	movlb	1	; () banked
 29993  01132E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29994  011330  0E01               	movlw	1
 29995  011332  0101               	movlb	1	; () banked
 29996  011334  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29997  011336  0101               	movlb	1	; () banked
 29998  011338  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 29999  01133A  0E00               	movlw	0
 30000  01133C  0101               	movlb	1	; () banked
 30001  01133E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30002  011340  0101               	movlb	1	; () banked
 30003  011342  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 30004                           
 30005                           ; BSR set to: 1
 30006                           ;tcp.c: 4095: if((int16_t)wTemp >= 0)
 30007  011344  0101               	movlb	1	; () banked
 30008  011346  BF7B               	btfsc	(HandleTCPSeg@wTemp+1)& (0+255),7,b
 30009  011348  D044               	goto	l13128
 30010                           
 30011                           ; BSR set to: 1
 30012                           ;tcp.c: 4096: {
 30013                           ;tcp.c: 4097: TCPRAMCopy(MyTCBStub.rxHead + wMissingBytes, MyTCBStub.vMemoryMedium, (uns
      +                          igned short)-1, 0u, wTemp);
 30014  01134A  0101               	movlb	1	; () banked
 30015  01134C  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30016  01134E  0101               	movlb	1	; () banked
 30017  011350  25EA               	addwf	(_MyTCBStub+10)& (0+255),w,b
 30018  011352  0101               	movlb	1	; () banked
 30019  011354  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 30020  011356  0101               	movlb	1	; () banked
 30021  011358  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30022  01135A  0101               	movlb	1	; () banked
 30023  01135C  21EB               	addwfc	(_MyTCBStub+11)& (0+255),w,b
 30024  01135E  0101               	movlb	1	; () banked
 30025  011360  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 30026  011362  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30027  011366  0EFF               	movlw	255
 30028  011368  0101               	movlb	1	; () banked
 30029  01136A  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30030  01136C  0101               	movlb	1	; () banked
 30031  01136E  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30032  011370  0E00               	movlw	0
 30033  011372  0101               	movlb	1	; () banked
 30034  011374  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30035  011376  C17A  F124         	movff	HandleTCPSeg@wTemp,TCPRAMCopy@wLength
 30036  01137A  C17B  F125         	movff	HandleTCPSeg@wTemp+1,TCPRAMCopy@wLength+1
 30037  01137E  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 30038                           
 30039                           ;tcp.c: 4098: TCPRAMCopy(MyTCBStub.bufferRxStart, MyTCBStub.vMemoryMedium, (unsigned sho
      +                          rt)-1, 0u, len - wTemp);
 30040  011382  C1E2  F11E         	movff	_MyTCBStub+2,TCPRAMCopy@ptrDest
 30041  011386  C1E3  F11F         	movff	_MyTCBStub+3,TCPRAMCopy@ptrDest+1
 30042  01138A  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30043  01138E  0EFF               	movlw	255
 30044  011390  0101               	movlb	1	; () banked
 30045  011392  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30046  011394  0101               	movlb	1	; () banked
 30047  011396  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30048  011398  0E00               	movlw	0
 30049  01139A  0101               	movlb	1	; () banked
 30050  01139C  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30051  01139E  0101               	movlb	1	; () banked
 30052  0113A0  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 30053  0113A4  0101               	movlb	1	; () banked
 30054  0113A6  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 30055  0113AA  0101               	movlb	1	; () banked
 30056  0113AC  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30057  0113AE  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30058  0113B0  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30059  0113B2  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30060  0113B4  0101               	movlb	1	; () banked
 30061  0113B6  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30062  0113B8  0101               	movlb	1	; () banked
 30063  0113BA  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30064  0113BC  0101               	movlb	1	; () banked
 30065  0113BE  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 30066  0113C0  0101               	movlb	1	; () banked
 30067  0113C2  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30068  0113C4  0101               	movlb	1	; () banked
 30069  0113C6  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30070  0113C8  0101               	movlb	1	; () banked
 30071  0113CA  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 30072  0113CC  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 30073                           
 30074                           ;tcp.c: 4099: }
 30075  0113D0  D05F               	goto	l13132
 30076  0113D2                     l13128:
 30077                           
 30078                           ;tcp.c: 4100: else
 30079                           ;tcp.c: 4101: {
 30080                           ;tcp.c: 4102: TCPRAMCopy(MyTCBStub.rxHead + wMissingBytes - (MyTCBStub.bufferEnd - MyTCB
      +                          Stub.bufferRxStart + 1), MyTCBStub.vMemoryMedium, (unsigned short)-1, 0u, len);
 30081  0113D2  0101               	movlb	1	; () banked
 30082  0113D4  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 30083  0113D8  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30084  0113DC  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30085  0113E0  0101               	movlb	1	; () banked
 30086  0113E2  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30087  0113E4  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30088  0113E6  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30089  0113E8  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30090  0113EA  0101               	movlb	1	; () banked
 30091  0113EC  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 30092  0113EE  0101               	movlb	1	; () banked
 30093  0113F0  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30094  0113F2  0101               	movlb	1	; () banked
 30095  0113F4  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 30096  0113F6  0101               	movlb	1	; () banked
 30097  0113F8  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30098  0113FA  0E01               	movlw	1
 30099  0113FC  0101               	movlb	1	; () banked
 30100  0113FE  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30101  011400  0E00               	movlw	0
 30102  011402  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30103  011404  0101               	movlb	1	; () banked
 30104  011406  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30105  011408  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30106  01140A  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30107  01140C  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30108  01140E  0101               	movlb	1	; () banked
 30109  011410  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 30110  011412  0101               	movlb	1	; () banked
 30111  011414  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30112  011416  0101               	movlb	1	; () banked
 30113  011418  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 30114  01141A  0101               	movlb	1	; () banked
 30115  01141C  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30116  01141E  0101               	movlb	1	; () banked
 30117  011420  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30118  011422  0101               	movlb	1	; () banked
 30119  011424  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30120  011426  0101               	movlb	1	; () banked
 30121  011428  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 30122  01142A  0101               	movlb	1	; () banked
 30123  01142C  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30124  01142E  0101               	movlb	1	; () banked
 30125  011430  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30126  011432  0101               	movlb	1	; () banked
 30127  011434  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 30128  011436  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30129  01143A  0EFF               	movlw	255
 30130  01143C  0101               	movlb	1	; () banked
 30131  01143E  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30132  011440  0101               	movlb	1	; () banked
 30133  011442  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30134  011444  0E00               	movlw	0
 30135  011446  0101               	movlb	1	; () banked
 30136  011448  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30137  01144A  C158  F124         	movff	HandleTCPSeg@len,TCPRAMCopy@wLength
 30138  01144E  C159  F125         	movff	HandleTCPSeg@len+1,TCPRAMCopy@wLength+1
 30139  011452  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 30140  011456  D01C               	goto	l13132
 30141  011458                     l13130:
 30142                           
 30143                           ;tcp.c: 4105: else
 30144                           ;tcp.c: 4106: {
 30145                           ;tcp.c: 4107: TCPRAMCopy(MyTCBStub.rxHead + wMissingBytes, MyTCBStub.vMemoryMedium, (uns
      +                          igned short)-1, 0u, len);
 30146  011458  0101               	movlb	1	; () banked
 30147  01145A  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30148  01145C  0101               	movlb	1	; () banked
 30149  01145E  25EA               	addwf	(_MyTCBStub+10)& (0+255),w,b
 30150  011460  0101               	movlb	1	; () banked
 30151  011462  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 30152  011464  0101               	movlb	1	; () banked
 30153  011466  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30154  011468  0101               	movlb	1	; () banked
 30155  01146A  21EB               	addwfc	(_MyTCBStub+11)& (0+255),w,b
 30156  01146C  0101               	movlb	1	; () banked
 30157  01146E  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 30158  011470  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30159  011474  0EFF               	movlw	255
 30160  011476  0101               	movlb	1	; () banked
 30161  011478  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30162  01147A  0101               	movlb	1	; () banked
 30163  01147C  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30164  01147E  0E00               	movlw	0
 30165  011480  0101               	movlb	1	; () banked
 30166  011482  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30167  011484  C158  F124         	movff	HandleTCPSeg@len,TCPRAMCopy@wLength
 30168  011488  C159  F125         	movff	HandleTCPSeg@len+1,TCPRAMCopy@wLength+1
 30169  01148C  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 30170  011490                     l13132:
 30171                           
 30172                           ;tcp.c: 4108: }
 30173                           ;tcp.c: 4111: if(MyTCB.sHoleSize == -1)
 30174  011490  0101               	movlb	1	; () banked
 30175  011492  29D9               	incf	(_MyTCB+32)& (0+255),w,b
 30176  011494  B4D8               	btfsc	status,2,c
 30177  011496  29DA               	incf	(_MyTCB+33)& (0+255),w,b
 30178  011498  A4D8               	btfss	status,2,c
 30179  01149A  D009               	goto	l13136
 30180                           
 30181                           ; BSR set to: 1
 30182                           ;tcp.c: 4112: {
 30183                           ;tcp.c: 4113: MyTCB.sHoleSize = wMissingBytes;
 30184  01149C  C17C  F1D9         	movff	HandleTCPSeg@wMissingBytes,_MyTCB+32
 30185  0114A0  C17D  F1DA         	movff	HandleTCPSeg@wMissingBytes+1,_MyTCB+33
 30186                           
 30187                           ;tcp.c: 4114: MyTCB.wFutureDataSize = len;
 30188  0114A4  C158  F1CD         	movff	HandleTCPSeg@len,_MyTCB+20
 30189  0114A8  C159  F1CE         	movff	HandleTCPSeg@len+1,_MyTCB+21
 30190                           
 30191                           ;tcp.c: 4115: }
 30192  0114AC  D0DE               	goto	l13152
 30193  0114AE                     l13136:
 30194                           
 30195                           ; BSR set to: 1
 30196                           ;tcp.c: 4116: else
 30197                           ;tcp.c: 4117: {
 30198                           ;tcp.c: 4120: if(wMissingBytes < (uint16_t)MyTCB.sHoleSize)
 30199  0114AE  0101               	movlb	1	; () banked
 30200  0114B0  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 30201  0114B2  0101               	movlb	1	; () banked
 30202  0114B4  5D7C               	subwf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30203  0114B6  0101               	movlb	1	; () banked
 30204  0114B8  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 30205  0114BA  0101               	movlb	1	; () banked
 30206  0114BC  597D               	subwfb	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30207  0114BE  B0D8               	btfsc	status,0,c
 30208  0114C0  D068               	goto	l13146
 30209                           
 30210                           ; BSR set to: 1
 30211                           ;tcp.c: 4121: {
 30212                           ;tcp.c: 4122: if((wMissingBytes + len > (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDataSiz
      +                          e) || (wMissingBytes + len < (uint16_t)MyTCB.sHoleSize))
 30213  0114C2  0101               	movlb	1	; () banked
 30214  0114C4  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30215  0114C8  0101               	movlb	1	; () banked
 30216  0114CA  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30217  0114CE  0101               	movlb	1	; () banked
 30218  0114D0  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30219  0114D2  0101               	movlb	1	; () banked
 30220  0114D4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30221  0114D6  0101               	movlb	1	; () banked
 30222  0114D8  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30223  0114DA  0101               	movlb	1	; () banked
 30224  0114DC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30225  0114DE  0101               	movlb	1	; () banked
 30226  0114E0  EE21  F0D9         	lfsr	2,_MyTCB+32
 30227  0114E4  CFDE F15C          	movff	postinc2,??_HandleTCPSeg+2
 30228  0114E8  CFDD F15D          	movff	postdec2,??_HandleTCPSeg+3
 30229  0114EC  0101               	movlb	1	; () banked
 30230  0114EE  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30231  0114F0  0101               	movlb	1	; () banked
 30232  0114F2  275C               	addwf	(??_HandleTCPSeg+2)& (0+255),f,b
 30233  0114F4  0101               	movlb	1	; () banked
 30234  0114F6  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30235  0114F8  0101               	movlb	1	; () banked
 30236  0114FA  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 30237  0114FC  0101               	movlb	1	; () banked
 30238  0114FE  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30239  011500  0101               	movlb	1	; () banked
 30240  011502  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 30241  011504  0101               	movlb	1	; () banked
 30242  011506  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30243  011508  0101               	movlb	1	; () banked
 30244  01150A  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 30245  01150C  A0D8               	btfss	status,0,c
 30246  01150E  D018               	goto	l1407
 30247                           
 30248                           ; BSR set to: 1
 30249  011510  0101               	movlb	1	; () banked
 30250  011512  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30251  011516  0101               	movlb	1	; () banked
 30252  011518  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30253  01151C  0101               	movlb	1	; () banked
 30254  01151E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30255  011520  0101               	movlb	1	; () banked
 30256  011522  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30257  011524  0101               	movlb	1	; () banked
 30258  011526  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30259  011528  0101               	movlb	1	; () banked
 30260  01152A  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30261  01152C  0101               	movlb	1	; () banked
 30262  01152E  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 30263  011530  0101               	movlb	1	; () banked
 30264  011532  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 30265  011534  0101               	movlb	1	; () banked
 30266  011536  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 30267  011538  0101               	movlb	1	; () banked
 30268  01153A  595B               	subwfb	(??_HandleTCPSeg+1)& (0+255),w,b
 30269  01153C  B0D8               	btfsc	status,0,c
 30270  01153E  D005               	goto	l13142
 30271  011540                     l1407:
 30272                           
 30273                           ; BSR set to: 1
 30274                           ;tcp.c: 4123: MyTCB.wFutureDataSize = len;
 30275  011540  C158  F1CD         	movff	HandleTCPSeg@len,_MyTCB+20
 30276  011544  C159  F1CE         	movff	HandleTCPSeg@len+1,_MyTCB+21
 30277  011548  D01F               	goto	l13144
 30278  01154A                     l13142:
 30279                           
 30280                           ; BSR set to: 1
 30281                           ;tcp.c: 4124: else
 30282                           ;tcp.c: 4125: MyTCB.wFutureDataSize = (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDataSize 
      +                          - wMissingBytes;
 30283  01154A  0101               	movlb	1	; () banked
 30284  01154C  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30285  011550  0101               	movlb	1	; () banked
 30286  011552  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30287  011556  0101               	movlb	1	; () banked
 30288  011558  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30289  01155A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30290  01155C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30291  01155E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30292  011560  0101               	movlb	1	; () banked
 30293  011562  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 30294  011564  0101               	movlb	1	; () banked
 30295  011566  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30296  011568  0101               	movlb	1	; () banked
 30297  01156A  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 30298  01156C  0101               	movlb	1	; () banked
 30299  01156E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30300  011570  0101               	movlb	1	; () banked
 30301  011572  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30302  011574  0101               	movlb	1	; () banked
 30303  011576  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30304  011578  0101               	movlb	1	; () banked
 30305  01157A  6FCD               	movwf	(_MyTCB+20)& (0+255),b
 30306  01157C  0101               	movlb	1	; () banked
 30307  01157E  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30308  011580  0101               	movlb	1	; () banked
 30309  011582  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30310  011584  0101               	movlb	1	; () banked
 30311  011586  6FCE               	movwf	(_MyTCB+21)& (0+255),b
 30312  011588                     l13144:
 30313                           
 30314                           ; BSR set to: 1
 30315                           ;tcp.c: 4126: MyTCB.sHoleSize = wMissingBytes;
 30316  011588  C17C  F1D9         	movff	HandleTCPSeg@wMissingBytes,_MyTCB+32
 30317  01158C  C17D  F1DA         	movff	HandleTCPSeg@wMissingBytes+1,_MyTCB+33
 30318                           
 30319                           ;tcp.c: 4127: }
 30320  011590  D06C               	goto	l13152
 30321  011592                     l13146:
 30322                           
 30323                           ; BSR set to: 1
 30324                           ;tcp.c: 4128: else if(wMissingBytes + len > (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDat
      +                          aSize)
 30325  011592  0101               	movlb	1	; () banked
 30326  011594  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30327  011598  0101               	movlb	1	; () banked
 30328  01159A  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30329  01159E  0101               	movlb	1	; () banked
 30330  0115A0  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30331  0115A2  0101               	movlb	1	; () banked
 30332  0115A4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30333  0115A6  0101               	movlb	1	; () banked
 30334  0115A8  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30335  0115AA  0101               	movlb	1	; () banked
 30336  0115AC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30337  0115AE  0101               	movlb	1	; () banked
 30338  0115B0  EE21  F0D9         	lfsr	2,_MyTCB+32
 30339  0115B4  CFDE F15C          	movff	postinc2,??_HandleTCPSeg+2
 30340  0115B8  CFDD F15D          	movff	postdec2,??_HandleTCPSeg+3
 30341  0115BC  0101               	movlb	1	; () banked
 30342  0115BE  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30343  0115C0  0101               	movlb	1	; () banked
 30344  0115C2  275C               	addwf	(??_HandleTCPSeg+2)& (0+255),f,b
 30345  0115C4  0101               	movlb	1	; () banked
 30346  0115C6  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30347  0115C8  0101               	movlb	1	; () banked
 30348  0115CA  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 30349  0115CC  0101               	movlb	1	; () banked
 30350  0115CE  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30351  0115D0  0101               	movlb	1	; () banked
 30352  0115D2  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 30353  0115D4  0101               	movlb	1	; () banked
 30354  0115D6  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30355  0115D8  0101               	movlb	1	; () banked
 30356  0115DA  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 30357  0115DC  B0D8               	btfsc	status,0,c
 30358  0115DE  D045               	goto	l13152
 30359                           
 30360                           ; BSR set to: 1
 30361                           ;tcp.c: 4129: {
 30362                           ;tcp.c: 4132: if(wMissingBytes <= (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDataSize)
 30363  0115E0  0101               	movlb	1	; () banked
 30364  0115E2  EE21  F0D9         	lfsr	2,_MyTCB+32
 30365  0115E6  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30366  0115EA  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30367  0115EE  0101               	movlb	1	; () banked
 30368  0115F0  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30369  0115F2  0101               	movlb	1	; () banked
 30370  0115F4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30371  0115F6  0101               	movlb	1	; () banked
 30372  0115F8  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30373  0115FA  0101               	movlb	1	; () banked
 30374  0115FC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30375  0115FE  0101               	movlb	1	; () banked
 30376  011600  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30377  011602  0101               	movlb	1	; () banked
 30378  011604  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 30379  011606  0101               	movlb	1	; () banked
 30380  011608  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30381  01160A  0101               	movlb	1	; () banked
 30382  01160C  595B               	subwfb	(??_HandleTCPSeg+1)& (0+255),w,b
 30383  01160E  A0D8               	btfss	status,0,c
 30384  011610  D02C               	goto	l13152
 30385                           
 30386                           ; BSR set to: 1
 30387                           ;tcp.c: 4133: MyTCB.wFutureDataSize += wMissingBytes + len - (uint16_t)MyTCB.sHoleSize -
      +                           MyTCB.wFutureDataSize;
 30388  011612  0101               	movlb	1	; () banked
 30389  011614  EE21  F0D9         	lfsr	2,_MyTCB+32
 30390  011618  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30391  01161C  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30392  011620  0101               	movlb	1	; () banked
 30393  011622  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30394  011624  0101               	movlb	1	; () banked
 30395  011626  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30396  011628  0101               	movlb	1	; () banked
 30397  01162A  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30398  01162C  0101               	movlb	1	; () banked
 30399  01162E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30400  011630  0101               	movlb	1	; () banked
 30401  011632  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30402  011634  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30403  011636  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30404  011638  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30405  01163A  0101               	movlb	1	; () banked
 30406  01163C  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30407  01163E  0101               	movlb	1	; () banked
 30408  011640  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30409  011642  0101               	movlb	1	; () banked
 30410  011644  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30411  011646  0101               	movlb	1	; () banked
 30412  011648  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30413  01164A  0101               	movlb	1	; () banked
 30414  01164C  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30415  01164E  0101               	movlb	1	; () banked
 30416  011650  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30417  011652  0101               	movlb	1	; () banked
 30418  011654  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30419  011656  0101               	movlb	1	; () banked
 30420  011658  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30421  01165A  0101               	movlb	1	; () banked
 30422  01165C  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30423  01165E  0101               	movlb	1	; () banked
 30424  011660  27CD               	addwf	(_MyTCB+20)& (0+255),f,b
 30425  011662  0101               	movlb	1	; () banked
 30426  011664  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30427  011666  0101               	movlb	1	; () banked
 30428  011668  23CE               	addwfc	(_MyTCB+21)& (0+255),f,b
 30429  01166A                     l13152:
 30430                           
 30431                           ; BSR set to: 1
 30432                           ;tcp.c: 4134: }
 30433                           ;tcp.c: 4136: }
 30434                           ;tcp.c: 4137: }
 30435                           ;tcp.c: 4138: }
 30436                           ;tcp.c: 4145: if(wSegmentLength)
 30437  01166A  0101               	movlb	1	; () banked
 30438  01166C  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 30439  01166E  1169               	iorwf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 30440  011670  B4D8               	btfsc	status,2,c
 30441  011672  D030               	goto	l13166
 30442                           
 30443                           ; BSR set to: 1
 30444                           ;tcp.c: 4146: {
 30445                           ;tcp.c: 4157: if(MyTCBStub.smState != TCP_ESTABLISHED)
 30446  011674  0101               	movlb	1	; () banked
 30447  011676  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 30448  011678  0A07               	xorlw	7
 30449  01167A  B4D8               	btfsc	status,2,c
 30450  01167C  D004               	goto	l1413
 30451                           
 30452                           ; BSR set to: 1
 30453                           ;tcp.c: 4158: MyTCBStub.rxTail = MyTCBStub.rxHead;
 30454  01167E  C1EA  F1EC         	movff	_MyTCBStub+10,_MyTCBStub+12
 30455  011682  C1EB  F1ED         	movff	_MyTCBStub+11,_MyTCBStub+13
 30456  011686                     l1413:
 30457                           
 30458                           ; BSR set to: 1
 30459                           ;tcp.c: 4160: if(MyTCBStub.Flags.bOneSegmentReceived)
 30460  011686  0101               	movlb	1	; () banked
 30461  011688  AFF7               	btfss	(_MyTCBStub+23)& (0+255),7,b
 30462  01168A  D009               	goto	l1414
 30463                           
 30464                           ; BSR set to: 1
 30465                           ;tcp.c: 4161: {
 30466                           ;tcp.c: 4162: SendTCP((0x10), 0x01);
 30467  01168C  0E01               	movlw	1
 30468  01168E  0101               	movlb	1	; () banked
 30469  011690  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30470  011692  0E10               	movlw	16
 30471  011694  ECC1  F096         	call	_SendTCP
 30472                           
 30473                           ;tcp.c: 4163: SyncTCB();
 30474  011698  EC1D  F0CB         	call	_SyncTCB	;wreg free
 30475                           
 30476                           ;tcp.c: 4165: }
 30477  01169C  D01B               	goto	l13166
 30478  01169E                     l1414:
 30479                           
 30480                           ; BSR set to: 1
 30481                           ;tcp.c: 4166: else
 30482                           ;tcp.c: 4167: {
 30483                           ;tcp.c: 4168: MyTCBStub.Flags.bOneSegmentReceived = 1;
 30484  01169E  0101               	movlb	1	; () banked
 30485  0116A0  8FF7               	bsf	(_MyTCBStub+23)& (0+255),7,b
 30486                           
 30487                           ;tcp.c: 4173: if(!MyTCBStub.Flags.bDelayedACKTimerEnabled)
 30488  0116A2  0101               	movlb	1	; () banked
 30489  0116A4  BDF7               	btfsc	(_MyTCBStub+23)& (0+255),6,b
 30490  0116A6  D016               	goto	l13166
 30491                           
 30492                           ; BSR set to: 1
 30493                           ;tcp.c: 4174: {
 30494                           ;tcp.c: 4175: MyTCBStub.Flags.bDelayedACKTimerEnabled = 1;
 30495  0116A8  0101               	movlb	1	; () banked
 30496  0116AA  8DF7               	bsf	(_MyTCBStub+23)& (0+255),6,b
 30497                           
 30498                           ; BSR set to: 1
 30499                           ;tcp.c: 4176: MyTCBStub.OverlappedTimers.delayedACKTime = (uint16_t)TickGetDiv256() + (u
      +                          int16_t)((((uint32_t)(((((40000000ul)/4)+128ull)/256ull))/10))>>8);
 30500  0116AC  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 30501  0116B0  C100  F15A         	movff	?_TickGetDiv256,??_HandleTCPSeg
 30502  0116B4  C101  F15B         	movff	?_TickGetDiv256+1,??_HandleTCPSeg+1
 30503  0116B8  C102  F15C         	movff	?_TickGetDiv256+2,??_HandleTCPSeg+2
 30504  0116BC  C103  F15D         	movff	?_TickGetDiv256+3,??_HandleTCPSeg+3
 30505  0116C0  0E0F               	movlw	15
 30506  0116C2  0101               	movlb	1	; () banked
 30507  0116C4  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30508  0116C6  0101               	movlb	1	; () banked
 30509  0116C8  6FF4               	movwf	(_MyTCBStub+20)& (0+255),b
 30510  0116CA  0E00               	movlw	0
 30511  0116CC  0101               	movlb	1	; () banked
 30512  0116CE  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30513  0116D0  0101               	movlb	1	; () banked
 30514  0116D2  6FF5               	movwf	(_MyTCBStub+21)& (0+255),b
 30515  0116D4                     l13166:
 30516                           
 30517                           ;tcp.c: 4177: }
 30518                           ;tcp.c: 4178: }
 30519                           ;tcp.c: 4179: }
 30520                           ;tcp.c: 4184: if(localHeaderFlags & (0x01))
 30521  0116D4  0101               	movlb	1	; () banked
 30522  0116D6  A179               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),0,b
 30523  0116D8  0012               	return	
 30524                           
 30525                           ; BSR set to: 1
 30526                           ;tcp.c: 4185: {
 30527                           ;tcp.c: 4189: if(MyTCB.RemoteSEQ + 1 == localSeqNumber + (uint32_t)wSegmentLength)
 30528  0116DA  0101               	movlb	1	; () banked
 30529  0116DC  5169               	movf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 30530  0116DE  0101               	movlb	1	; () banked
 30531  0116E0  2565               	addwf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 30532  0116E2  0101               	movlb	1	; () banked
 30533  0116E4  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 30534  0116E6  0101               	movlb	1	; () banked
 30535  0116E8  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 30536  0116EA  0101               	movlb	1	; () banked
 30537  0116EC  2166               	addwfc	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 30538  0116EE  0101               	movlb	1	; () banked
 30539  0116F0  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 30540  0116F2  0E00               	movlw	0
 30541  0116F4  0101               	movlb	1	; () banked
 30542  0116F6  2167               	addwfc	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 30543  0116F8  0101               	movlb	1	; () banked
 30544  0116FA  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 30545  0116FC  0E00               	movlw	0
 30546  0116FE  0101               	movlb	1	; () banked
 30547  011700  2168               	addwfc	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 30548  011702  0101               	movlb	1	; () banked
 30549  011704  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 30550  011706  0E01               	movlw	1
 30551  011708  0101               	movlb	1	; () banked
 30552  01170A  25C1               	addwf	(_MyTCB+8)& (0+255),w,b
 30553  01170C  0101               	movlb	1	; () banked
 30554  01170E  6F5E               	movwf	(??_HandleTCPSeg+4)& (0+255),b
 30555  011710  0E00               	movlw	0
 30556  011712  0101               	movlb	1	; () banked
 30557  011714  21C2               	addwfc	(_MyTCB+9)& (0+255),w,b
 30558  011716  0101               	movlb	1	; () banked
 30559  011718  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 30560  01171A  0E00               	movlw	0
 30561  01171C  0101               	movlb	1	; () banked
 30562  01171E  21C3               	addwfc	(_MyTCB+10)& (0+255),w,b
 30563  011720  0101               	movlb	1	; () banked
 30564  011722  6F60               	movwf	(??_HandleTCPSeg+6)& (0+255),b
 30565  011724  0E00               	movlw	0
 30566  011726  0101               	movlb	1	; () banked
 30567  011728  21C4               	addwfc	(_MyTCB+11)& (0+255),w,b
 30568  01172A  0101               	movlb	1	; () banked
 30569  01172C  6F61               	movwf	(??_HandleTCPSeg+7)& (0+255),b
 30570  01172E  0101               	movlb	1	; () banked
 30571  011730  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 30572  011732  0101               	movlb	1	; () banked
 30573  011734  1961               	xorwf	(??_HandleTCPSeg+7)& (0+255),w,b
 30574  011736  E10E               	bnz	u15015
 30575  011738  0101               	movlb	1	; () banked
 30576  01173A  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 30577  01173C  0101               	movlb	1	; () banked
 30578  01173E  1960               	xorwf	(??_HandleTCPSeg+6)& (0+255),w,b
 30579  011740  E109               	bnz	u15015
 30580  011742  0101               	movlb	1	; () banked
 30581  011744  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30582  011746  0101               	movlb	1	; () banked
 30583  011748  195F               	xorwf	(??_HandleTCPSeg+5)& (0+255),w,b
 30584  01174A  E104               	bnz	u15015
 30585  01174C  0101               	movlb	1	; () banked
 30586  01174E  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30587  011750  0101               	movlb	1	; () banked
 30588  011752  195E               	xorwf	(??_HandleTCPSeg+4)& (0+255),w,b
 30589  011754                     u15015:
 30590  011754  A4D8               	btfss	status,2,c
 30591  011756  0012               	return	
 30592                           
 30593                           ; BSR set to: 1
 30594                           ;tcp.c: 4190: {
 30595                           ;tcp.c: 4192: MyTCB.RemoteSEQ++;
 30596  011758  0E01               	movlw	1
 30597  01175A  0101               	movlb	1	; () banked
 30598  01175C  27C1               	addwf	(_MyTCB+8)& (0+255),f,b
 30599  01175E  0E00               	movlw	0
 30600  011760  0101               	movlb	1	; () banked
 30601  011762  23C2               	addwfc	(_MyTCB+9)& (0+255),f,b
 30602  011764  0101               	movlb	1	; () banked
 30603  011766  23C3               	addwfc	(_MyTCB+10)& (0+255),f,b
 30604  011768  0101               	movlb	1	; () banked
 30605  01176A  23C4               	addwfc	(_MyTCB+11)& (0+255),f,b
 30606                           
 30607                           ;tcp.c: 4194: switch(MyTCBStub.smState)
 30608  01176C  D04D               	goto	l13202
 30609  01176E                     l13172:
 30610                           
 30611                           ; BSR set to: 1
 30612                           ;tcp.c: 4202: MyTCBStub.smState = TCP_LAST_ACK;
 30613  01176E  0E0C               	movlw	12
 30614  011770  0101               	movlb	1	; () banked
 30615  011772  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 30616                           
 30617                           ; BSR set to: 1
 30618                           ;tcp.c: 4203: SendTCP((0x01) | (0x10), 0x01);
 30619  011774  0E01               	movlw	1
 30620  011776  0101               	movlb	1	; () banked
 30621  011778  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30622  01177A  0E11               	movlw	17
 30623  01177C  ECC1  F096         	call	_SendTCP
 30624  011780  0012               	return	
 30625  011782                     l13178:
 30626                           
 30627                           ;tcp.c: 4208: MyTCBStub.smState = TCP_CLOSE_WAIT;
 30628  011782  0E0B               	movlw	11
 30629  011784  0101               	movlb	1	; () banked
 30630  011786  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 30631                           
 30632                           ; BSR set to: 1
 30633                           ;tcp.c: 4215: MyTCBStub.OverlappedTimers.closeWaitTime = (uint16_t)TickGetDiv256() + (ui
      +                          nt16_t)((((uint32_t)(((((40000000ul)/4)+128ull)/256ull))/5))>>8);
 30634  011788  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 30635  01178C  C100  F15A         	movff	?_TickGetDiv256,??_HandleTCPSeg
 30636  011790  C101  F15B         	movff	?_TickGetDiv256+1,??_HandleTCPSeg+1
 30637  011794  C102  F15C         	movff	?_TickGetDiv256+2,??_HandleTCPSeg+2
 30638  011798  C103  F15D         	movff	?_TickGetDiv256+3,??_HandleTCPSeg+3
 30639  01179C  0E1E               	movlw	30
 30640  01179E  0101               	movlb	1	; () banked
 30641  0117A0  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30642  0117A2  0101               	movlb	1	; () banked
 30643  0117A4  6FF4               	movwf	(_MyTCBStub+20)& (0+255),b
 30644  0117A6  0E00               	movlw	0
 30645  0117A8  0101               	movlb	1	; () banked
 30646  0117AA  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30647  0117AC  0101               	movlb	1	; () banked
 30648  0117AE  6FF5               	movwf	(_MyTCBStub+21)& (0+255),b
 30649                           
 30650                           ;tcp.c: 4216: break;
 30651  0117B0  D039               	goto	l13204
 30652  0117B2                     l13182:
 30653                           
 30654                           ; BSR set to: 1
 30655                           ;tcp.c: 4219: if(MyTCB.MySEQ == localAckNumber)
 30656  0117B2  0101               	movlb	1	; () banked
 30657  0117B4  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 30658  0117B6  0101               	movlb	1	; () banked
 30659  0117B8  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 30660  0117BA  E10E               	bnz	u15025
 30661  0117BC  0101               	movlb	1	; () banked
 30662  0117BE  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 30663  0117C0  0101               	movlb	1	; () banked
 30664  0117C2  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 30665  0117C4  E109               	bnz	u15025
 30666  0117C6  0101               	movlb	1	; () banked
 30667  0117C8  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 30668  0117CA  0101               	movlb	1	; () banked
 30669  0117CC  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 30670  0117CE  E104               	bnz	u15025
 30671  0117D0  0101               	movlb	1	; () banked
 30672  0117D2  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 30673  0117D4  0101               	movlb	1	; () banked
 30674  0117D6  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 30675  0117D8                     u15025:
 30676  0117D8  A4D8               	btfss	status,2,c
 30677  0117DA  D009               	goto	l13192
 30678                           
 30679                           ; BSR set to: 1
 30680                           ;tcp.c: 4220: {
 30681                           ;tcp.c: 4230: SendTCP((0x10), 0);
 30682  0117DC  0E00               	movlw	0
 30683  0117DE  0101               	movlb	1	; () banked
 30684  0117E0  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30685  0117E2  0E10               	movlw	16
 30686  0117E4  ECC1  F096         	call	_SendTCP
 30687                           
 30688                           ;tcp.c: 4231: CloseSocket();
 30689  0117E8  ECFD  F0CD         	call	_CloseSocket	;wreg free
 30690  0117EC  0012               	return	
 30691  0117EE                     l13192:
 30692                           
 30693                           ;tcp.c: 4234: else
 30694                           ;tcp.c: 4235: {
 30695                           ;tcp.c: 4236: MyTCBStub.smState = TCP_CLOSING;
 30696  0117EE  0E0A               	movlw	10
 30697  0117F0  0101               	movlb	1	; () banked
 30698  0117F2  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 30699  0117F4  D017               	goto	l13204
 30700  0117F6                     l13194:
 30701                           
 30702                           ; BSR set to: 1
 30703                           ;tcp.c: 4250: SendTCP((0x10), 0);
 30704  0117F6  0E00               	movlw	0
 30705  0117F8  0101               	movlb	1	; () banked
 30706  0117FA  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30707  0117FC  0E10               	movlw	16
 30708  0117FE  ECC1  F096         	call	_SendTCP
 30709                           
 30710                           ;tcp.c: 4251: CloseSocket();
 30711  011802  ECFD  F0CD         	call	_CloseSocket	;wreg free
 30712  011806  0012               	return	
 30713  011808                     l13202:
 30714  011808  0101               	movlb	1	; () banked
 30715  01180A  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 30716                           
 30717                           ; Switch size 1, requested type "space"
 30718                           ; Number of cases is 4, Range of values is 6 to 9
 30719                           ; switch strategies available:
 30720                           ; Name         Instructions Cycles
 30721                           ; simple_byte           13     7 (average)
 30722                           ;	Chosen strategy is simple_byte
 30723  01180C  0A06               	xorlw	6	; case 6
 30724  01180E  B4D8               	btfsc	status,2,c
 30725  011810  D7AE               	goto	l13172
 30726  011812  0A01               	xorlw	1	; case 7
 30727  011814  B4D8               	btfsc	status,2,c
 30728  011816  D7B5               	goto	l13178
 30729  011818  0A0F               	xorlw	15	; case 8
 30730  01181A  B4D8               	btfsc	status,2,c
 30731  01181C  D7CA               	goto	l13182
 30732  01181E  0A01               	xorlw	1	; case 9
 30733  011820  B4D8               	btfsc	status,2,c
 30734  011822  D7E9               	goto	l13194
 30735  011824                     l13204:
 30736                           
 30737                           ;tcp.c: 4259: SendTCP((0x10), 0x01);
 30738  011824  0E01               	movlw	1
 30739  011826  0101               	movlb	1	; () banked
 30740  011828  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30741  01182A  0E10               	movlw	16
 30742  01182C  ECC1  F096         	call	_SendTCP
 30743  011830  0012               	return	
 30744  011832                     __end_of_HandleTCPSeg:
 30745                           	opt stack 0
 30746                           tblptru	equ	0xFF8
 30747                           tblptrh	equ	0xFF7
 30748                           tblptrl	equ	0xFF6
 30749                           tablat	equ	0xFF5
 30750                           prodh	equ	0xFF4
 30751                           prodl	equ	0xFF3
 30752                           intcon	equ	0xFF2
 30753                           indf0	equ	0xFEF
 30754                           postinc0	equ	0xFEE
 30755                           fsr0h	equ	0xFEA
 30756                           fsr0l	equ	0xFE9
 30757                           wreg	equ	0xFE8
 30758                           indf1	equ	0xFE7
 30759                           postinc1	equ	0xFE6
 30760                           postdec1	equ	0xFE5
 30761                           fsr1h	equ	0xFE2
 30762                           fsr1l	equ	0xFE1
 30763                           indf2	equ	0xFDF
 30764                           postinc2	equ	0xFDE
 30765                           postdec2	equ	0xFDD
 30766                           fsr2h	equ	0xFDA
 30767                           fsr2l	equ	0xFD9
 30768                           status	equ	0xFD8
 30769                           
 30770 ;; *************** function _SendTCP *****************
 30771 ;; Defined at:
 30772 ;;		line 2898 in file "../tcpip/tcp.c"
 30773 ;; Parameters:    Size  Location     Type
 30774 ;;  vTCPFlags       1    wreg     unsigned char 
 30775 ;;  vSendFlags      1   40[BANK1 ] unsigned char 
 30776 ;; Auto vars:     Size  Location     Type
 30777 ;;  vTCPFlags       1   51[BANK1 ] unsigned char 
 30778 ;;  header         20   66[BANK1 ] struct .
 30779 ;;  pseudoHeader   12   54[BANK1 ] struct _PSEUDO_HEADER
 30780 ;;  options         4   45[BANK1 ] struct .
 30781 ;;  len             2   52[BANK1 ] unsigned int 
 30782 ;;  wVal            2   49[BANK1 ] struct .
 30783 ;; Return value:  Size  Location     Type
 30784 ;;		None               void
 30785 ;; Registers used:
 30786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30787 ;; Tracked objects:
 30788 ;;		On entry : 0/0
 30789 ;;		On exit  : 0/0
 30790 ;;		Unchanged: 0/0
 30791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 30792 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30793 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30794 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30795 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30796 ;;Total ram usage:       46 bytes
 30797 ;; Hardware stack levels used:    1
 30798 ;; Hardware stack levels required when called:   14
 30799 ;; This function calls:
 30800 ;;		_CalcIPBufferChecksum
 30801 ;;		_CalcIPChecksum
 30802 ;;		_IPPutHeader
 30803 ;;		_MACFlush
 30804 ;;		_MACGetFreeRxSize
 30805 ;;		_MACIsTxReady
 30806 ;;		_MACPutArray
 30807 ;;		_MACSetReadPtr
 30808 ;;		_MACSetWritePtr
 30809 ;;		_SwapTCPHeader
 30810 ;;		_SyncTCB
 30811 ;;		_TCPRAMCopy
 30812 ;;		_TickGet
 30813 ;;		_swaps
 30814 ;; This function is called by:
 30815 ;;		_TCPOpen
 30816 ;;		_TCPDisconnect
 30817 ;;		_TCPFlush
 30818 ;;		_TCPTick
 30819 ;;		_HandleTCPSeg
 30820 ;;		_TCPDiscard
 30821 ;;		_TCPAdjustFIFOSize
 30822 ;; This function uses a non-reentrant model
 30823 ;;
 30824                           
 30825                           	psect	text53
 30826  012D82                     __ptext53:
 30827                           	opt stack 0
 30828  012D82                     _SendTCP:
 30829                           	opt stack 12
 30830                           
 30831                           ;incstack = 0
 30832                           ;SendTCP@vTCPFlags stored from wreg
 30833  012D82  0101               	movlb	1	; () banked
 30834  012D84  6F33               	movwf	SendTCP@vTCPFlags& (0+255),b
 30835                           
 30836                           ; BSR set to: 1
 30837                           ;tcp.c: 2900: TCPIP_UINT16_VAL wVal;
 30838                           ;tcp.c: 2901: TCP_HEADER header;
 30839                           ;tcp.c: 2902: TCP_OPTIONS options;
 30840                           ;tcp.c: 2903: PSEUDO_HEADER pseudoHeader;
 30841                           ;tcp.c: 2904: uint16_t len;
 30842                           ;tcp.c: 2906: SyncTCB();
 30843  012D86  EC1D  F0CB         	call	_SyncTCB	;wreg free
 30844                           
 30845                           ;tcp.c: 2909: if(vTCPFlags & (0x01))
 30846  012D8A  0101               	movlb	1	; () banked
 30847  012D8C  A133               	btfss	SendTCP@vTCPFlags& (0+255),0,b
 30848  012D8E  D004               	goto	l11678
 30849                           
 30850                           ; BSR set to: 1
 30851                           ;tcp.c: 2910: {
 30852                           ;tcp.c: 2911: MyTCBStub.Flags.bTXFIN = 1;
 30853  012D90  0101               	movlb	1	; () banked
 30854  012D92  87F8               	bsf	(_MyTCBStub+24)& (0+255),3,b
 30855                           
 30856                           ; BSR set to: 1
 30857                           ;tcp.c: 2912: vTCPFlags &= ~(0x01);
 30858  012D94  0101               	movlb	1	; () banked
 30859  012D96  9133               	bcf	SendTCP@vTCPFlags& (0+255),0,b
 30860  012D98                     l11678:
 30861                           
 30862                           ; BSR set to: 1
 30863                           ;tcp.c: 2913: }
 30864                           ;tcp.c: 2917: MyTCBStub.Flags.bTimer2Enabled = 0;
 30865  012D98  0101               	movlb	1	; () banked
 30866  012D9A  9BF7               	bcf	(_MyTCBStub+23)& (0+255),5,b
 30867                           
 30868                           ; BSR set to: 1
 30869                           ;tcp.c: 2918: MyTCBStub.Flags.bDelayedACKTimerEnabled = 0;
 30870  012D9C  0101               	movlb	1	; () banked
 30871  012D9E  9DF7               	bcf	(_MyTCBStub+23)& (0+255),6,b
 30872                           
 30873                           ; BSR set to: 1
 30874                           ;tcp.c: 2919: MyTCBStub.Flags.bOneSegmentReceived = 0;
 30875  012DA0  0101               	movlb	1	; () banked
 30876  012DA2  9FF7               	bcf	(_MyTCBStub+23)& (0+255),7,b
 30877                           
 30878                           ; BSR set to: 1
 30879                           ;tcp.c: 2920: MyTCBStub.Flags.bTXASAP = 0;
 30880  012DA4  0101               	movlb	1	; () banked
 30881  012DA6  93F8               	bcf	(_MyTCBStub+24)& (0+255),1,b
 30882                           
 30883                           ; BSR set to: 1
 30884                           ;tcp.c: 2921: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 0;
 30885  012DA8  0101               	movlb	1	; () banked
 30886  012DAA  95F8               	bcf	(_MyTCBStub+24)& (0+255),2,b
 30887                           
 30888                           ; BSR set to: 1
 30889                           ;tcp.c: 2922: MyTCBStub.Flags.bHalfFullFlush = 0;
 30890  012DAC  0101               	movlb	1	; () banked
 30891  012DAE  91F8               	bcf	(_MyTCBStub+24)& (0+255),0,b
 30892  012DB0                     l11690:
 30893  012DB0  ECCB  F0D7         	call	_MACIsTxReady	;wreg free
 30894  012DB4  0900               	iorlw	0
 30895  012DB6  B4D8               	btfsc	status,2,c
 30896  012DB8  D7FB               	goto	l11690
 30897                           
 30898                           ;tcp.c: 2928: if(vTCPFlags & ((0x02) | (0x04)))
 30899  012DBA  C133  F129         	movff	SendTCP@vTCPFlags,??_SendTCP
 30900  012DBE  0E06               	movlw	6
 30901  012DC0  0101               	movlb	1	; () banked
 30902  012DC2  1729               	andwf	??_SendTCP& (0+255),f,b
 30903  012DC4  B4D8               	btfsc	status,2,c
 30904  012DC6  D007               	goto	l11696
 30905                           
 30906                           ; BSR set to: 1
 30907                           ;tcp.c: 2929: {
 30908                           ;tcp.c: 2931: len = 0;
 30909  012DC8  0E00               	movlw	0
 30910  012DCA  0101               	movlb	1	; () banked
 30911  012DCC  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 30912  012DCE  0E00               	movlw	0
 30913  012DD0  0101               	movlb	1	; () banked
 30914  012DD2  6F34               	movwf	SendTCP@len& (0+255),b
 30915                           
 30916                           ;tcp.c: 2932: }
 30917  012DD4  D18C               	goto	l11754
 30918  012DD6                     l11696:
 30919                           
 30920                           ; BSR set to: 1
 30921                           ;tcp.c: 2933: else
 30922                           ;tcp.c: 2934: {
 30923                           ;tcp.c: 2936: if(MyTCBStub.txHead == MyTCB.txUnackedTail)
 30924  012DD6  0101               	movlb	1	; () banked
 30925  012DD8  EE21  F0C5         	lfsr	2,_MyTCB+12
 30926  012DDC  0101               	movlb	1	; () banked
 30927  012DDE  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 30928  012DE2  52E6               	movf	postinc1,f,c
 30929  012DE4  52DE               	movf	postinc2,f,c
 30930  012DE6  50DD               	movf	postdec2,w,c
 30931  012DE8  18E5               	xorwf	postdec1,w,c
 30932  012DEA  CFDF FFE8          	movff	indf2,wreg
 30933  012DEE  B4D8               	btfsc	status,2,c
 30934  012DF0  18E7               	xorwf	indf1,w,c
 30935  012DF2  A4D8               	btfss	status,2,c
 30936  012DF4  D007               	goto	l11700
 30937                           
 30938                           ; BSR set to: 1
 30939                           ;tcp.c: 2937: {
 30940                           ;tcp.c: 2939: len = 0;
 30941  012DF6  0E00               	movlw	0
 30942  012DF8  0101               	movlb	1	; () banked
 30943  012DFA  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 30944  012DFC  0E00               	movlw	0
 30945  012DFE  0101               	movlb	1	; () banked
 30946  012E00  6F34               	movwf	SendTCP@len& (0+255),b
 30947                           
 30948                           ;tcp.c: 2940: }
 30949  012E02  D152               	goto	l11746
 30950  012E04                     l11700:
 30951                           
 30952                           ; BSR set to: 1
 30953                           ;tcp.c: 2941: else if(MyTCBStub.txHead > MyTCB.txUnackedTail)
 30954  012E04  0101               	movlb	1	; () banked
 30955  012E06  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 30956  012E08  0101               	movlb	1	; () banked
 30957  012E0A  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 30958  012E0C  0101               	movlb	1	; () banked
 30959  012E0E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 30960  012E10  0101               	movlb	1	; () banked
 30961  012E12  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 30962  012E14  B0D8               	btfsc	status,0,c
 30963  012E16  D054               	goto	l11716
 30964                           
 30965                           ; BSR set to: 1
 30966                           ;tcp.c: 2942: {
 30967                           ;tcp.c: 2943: len = MyTCBStub.txHead - MyTCB.txUnackedTail;
 30968  012E18  0101               	movlb	1	; () banked
 30969  012E1A  EE21  F0C5         	lfsr	2,_MyTCB+12
 30970  012E1E  CFDE F129          	movff	postinc2,??_SendTCP
 30971  012E22  CFDD F12A          	movff	postdec2,??_SendTCP+1
 30972  012E26  0101               	movlb	1	; () banked
 30973  012E28  1F29               	comf	??_SendTCP& (0+255),f,b
 30974  012E2A  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 30975  012E2C  4B29               	infsnz	??_SendTCP& (0+255),f,b
 30976  012E2E  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 30977  012E30  0101               	movlb	1	; () banked
 30978  012E32  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 30979  012E34  0101               	movlb	1	; () banked
 30980  012E36  2529               	addwf	??_SendTCP& (0+255),w,b
 30981  012E38  0101               	movlb	1	; () banked
 30982  012E3A  6F34               	movwf	SendTCP@len& (0+255),b
 30983  012E3C  0101               	movlb	1	; () banked
 30984  012E3E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 30985  012E40  0101               	movlb	1	; () banked
 30986  012E42  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 30987  012E44  0101               	movlb	1	; () banked
 30988  012E46  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 30989                           
 30990                           ; BSR set to: 1
 30991                           ;tcp.c: 2945: if(len > MyTCB.remoteWindow)
 30992  012E48  0101               	movlb	1	; () banked
 30993  012E4A  5134               	movf	SendTCP@len& (0+255),w,b
 30994  012E4C  0101               	movlb	1	; () banked
 30995  012E4E  5DCB               	subwf	(_MyTCB+18)& (0+255),w,b
 30996  012E50  0101               	movlb	1	; () banked
 30997  012E52  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 30998  012E54  0101               	movlb	1	; () banked
 30999  012E56  59CC               	subwfb	(_MyTCB+19)& (0+255),w,b
 31000  012E58  B0D8               	btfsc	status,0,c
 31001  012E5A  D004               	goto	l11708
 31002                           
 31003                           ; BSR set to: 1
 31004                           ;tcp.c: 2946: len = MyTCB.remoteWindow;
 31005  012E5C  C1CB  F134         	movff	_MyTCB+18,SendTCP@len
 31006  012E60  C1CC  F135         	movff	_MyTCB+19,SendTCP@len+1
 31007  012E64                     l11708:
 31008                           
 31009                           ; BSR set to: 1
 31010                           ;tcp.c: 2948: if(len > MyTCB.wRemoteMSS)
 31011  012E64  0101               	movlb	1	; () banked
 31012  012E66  5134               	movf	SendTCP@len& (0+255),w,b
 31013  012E68  0101               	movlb	1	; () banked
 31014  012E6A  5DDC               	subwf	(_MyTCB+35)& (0+255),w,b
 31015  012E6C  0101               	movlb	1	; () banked
 31016  012E6E  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31017  012E70  0101               	movlb	1	; () banked
 31018  012E72  59DD               	subwfb	(_MyTCB+36)& (0+255),w,b
 31019  012E74  B0D8               	btfsc	status,0,c
 31020  012E76  D006               	goto	l11712
 31021                           
 31022                           ; BSR set to: 1
 31023                           ;tcp.c: 2949: {
 31024                           ;tcp.c: 2950: len = MyTCB.wRemoteMSS;
 31025  012E78  C1DC  F134         	movff	_MyTCB+35,SendTCP@len
 31026  012E7C  C1DD  F135         	movff	_MyTCB+36,SendTCP@len+1
 31027                           
 31028                           ;tcp.c: 2951: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 31029  012E80  0101               	movlb	1	; () banked
 31030  012E82  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 31031  012E84                     l11712:
 31032                           
 31033                           ; BSR set to: 1
 31034                           ;tcp.c: 2952: }
 31035                           ;tcp.c: 2955: TCPRAMCopy((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1ul)+
      +                          sizeof(ETHER_HEADER)+sizeof(IP_HEADER)+sizeof(TCP_HEADER), 0u, MyTCB.txUnackedTail, MyTC
      +                          BStub.vMemoryMedium, len);
 31036  012E84  0E12               	movlw	18
 31037  012E86  0101               	movlb	1	; () banked
 31038  012E88  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 31039  012E8A  0EDD               	movlw	221
 31040  012E8C  0101               	movlb	1	; () banked
 31041  012E8E  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 31042  012E90  0E00               	movlw	0
 31043  012E92  0101               	movlb	1	; () banked
 31044  012E94  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 31045  012E96  C1C5  F121         	movff	_MyTCB+12,TCPRAMCopy@ptrSource
 31046  012E9A  C1C6  F122         	movff	_MyTCB+13,TCPRAMCopy@ptrSource+1
 31047  012E9E  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 31048  012EA2  C134  F124         	movff	SendTCP@len,TCPRAMCopy@wLength
 31049  012EA6  C135  F125         	movff	SendTCP@len+1,TCPRAMCopy@wLength+1
 31050  012EAA  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 31051                           
 31052                           ;tcp.c: 2956: MyTCB.txUnackedTail += len;
 31053  012EAE  0101               	movlb	1	; () banked
 31054  012EB0  5134               	movf	SendTCP@len& (0+255),w,b
 31055  012EB2  0101               	movlb	1	; () banked
 31056  012EB4  27C5               	addwf	(_MyTCB+12)& (0+255),f,b
 31057  012EB6  0101               	movlb	1	; () banked
 31058  012EB8  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31059  012EBA  0101               	movlb	1	; () banked
 31060  012EBC  23C6               	addwfc	(_MyTCB+13)& (0+255),f,b
 31061                           
 31062                           ;tcp.c: 2957: }
 31063  012EBE  D0F4               	goto	l11746
 31064  012EC0                     l11716:
 31065                           
 31066                           ; BSR set to: 1
 31067                           ;tcp.c: 2958: else
 31068                           ;tcp.c: 2959: {
 31069                           ;tcp.c: 2960: pseudoHeader.Length = MyTCBStub.bufferRxStart - MyTCB.txUnackedTail;
 31070  012EC0  0101               	movlb	1	; () banked
 31071  012EC2  EE21  F0C5         	lfsr	2,_MyTCB+12
 31072  012EC6  CFDE F129          	movff	postinc2,??_SendTCP
 31073  012ECA  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31074  012ECE  0101               	movlb	1	; () banked
 31075  012ED0  1F29               	comf	??_SendTCP& (0+255),f,b
 31076  012ED2  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31077  012ED4  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31078  012ED6  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31079  012ED8  0101               	movlb	1	; () banked
 31080  012EDA  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31081  012EDC  0101               	movlb	1	; () banked
 31082  012EDE  2529               	addwf	??_SendTCP& (0+255),w,b
 31083  012EE0  0101               	movlb	1	; () banked
 31084  012EE2  6F40               	movwf	(SendTCP@pseudoHeader+10)& (0+255),b
 31085  012EE4  0101               	movlb	1	; () banked
 31086  012EE6  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31087  012EE8  0101               	movlb	1	; () banked
 31088  012EEA  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31089  012EEC  0101               	movlb	1	; () banked
 31090  012EEE  6F41               	movwf	(SendTCP@pseudoHeader+11)& (0+255),b
 31091                           
 31092                           ; BSR set to: 1
 31093                           ;tcp.c: 2961: len = pseudoHeader.Length + MyTCBStub.txHead - MyTCBStub.bufferTxStart;
 31094  012EF0  0101               	movlb	1	; () banked
 31095  012EF2  C1E0  F129         	movff	_MyTCBStub,??_SendTCP
 31096  012EF6  0101               	movlb	1	; () banked
 31097  012EF8  C1E1  F12A         	movff	_MyTCBStub+1,??_SendTCP+1
 31098  012EFC  0101               	movlb	1	; () banked
 31099  012EFE  1F29               	comf	??_SendTCP& (0+255),f,b
 31100  012F00  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31101  012F02  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31102  012F04  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31103  012F06  0101               	movlb	1	; () banked
 31104  012F08  5140               	movf	(SendTCP@pseudoHeader+10)& (0+255),w,b
 31105  012F0A  0101               	movlb	1	; () banked
 31106  012F0C  2729               	addwf	??_SendTCP& (0+255),f,b
 31107  012F0E  0101               	movlb	1	; () banked
 31108  012F10  5141               	movf	(SendTCP@pseudoHeader+11)& (0+255),w,b
 31109  012F12  0101               	movlb	1	; () banked
 31110  012F14  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31111  012F16  0101               	movlb	1	; () banked
 31112  012F18  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 31113  012F1A  0101               	movlb	1	; () banked
 31114  012F1C  2529               	addwf	??_SendTCP& (0+255),w,b
 31115  012F1E  0101               	movlb	1	; () banked
 31116  012F20  6F34               	movwf	SendTCP@len& (0+255),b
 31117  012F22  0101               	movlb	1	; () banked
 31118  012F24  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 31119  012F26  0101               	movlb	1	; () banked
 31120  012F28  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31121  012F2A  0101               	movlb	1	; () banked
 31122  012F2C  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31123                           
 31124                           ; BSR set to: 1
 31125                           ;tcp.c: 2963: if(len > MyTCB.remoteWindow)
 31126  012F2E  0101               	movlb	1	; () banked
 31127  012F30  5134               	movf	SendTCP@len& (0+255),w,b
 31128  012F32  0101               	movlb	1	; () banked
 31129  012F34  5DCB               	subwf	(_MyTCB+18)& (0+255),w,b
 31130  012F36  0101               	movlb	1	; () banked
 31131  012F38  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31132  012F3A  0101               	movlb	1	; () banked
 31133  012F3C  59CC               	subwfb	(_MyTCB+19)& (0+255),w,b
 31134  012F3E  B0D8               	btfsc	status,0,c
 31135  012F40  D004               	goto	l11724
 31136                           
 31137                           ; BSR set to: 1
 31138                           ;tcp.c: 2964: len = MyTCB.remoteWindow;
 31139  012F42  C1CB  F134         	movff	_MyTCB+18,SendTCP@len
 31140  012F46  C1CC  F135         	movff	_MyTCB+19,SendTCP@len+1
 31141  012F4A                     l11724:
 31142                           
 31143                           ; BSR set to: 1
 31144                           ;tcp.c: 2966: if(len > MyTCB.wRemoteMSS)
 31145  012F4A  0101               	movlb	1	; () banked
 31146  012F4C  5134               	movf	SendTCP@len& (0+255),w,b
 31147  012F4E  0101               	movlb	1	; () banked
 31148  012F50  5DDC               	subwf	(_MyTCB+35)& (0+255),w,b
 31149  012F52  0101               	movlb	1	; () banked
 31150  012F54  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31151  012F56  0101               	movlb	1	; () banked
 31152  012F58  59DD               	subwfb	(_MyTCB+36)& (0+255),w,b
 31153  012F5A  B0D8               	btfsc	status,0,c
 31154  012F5C  D006               	goto	l11728
 31155                           
 31156                           ; BSR set to: 1
 31157                           ;tcp.c: 2967: {
 31158                           ;tcp.c: 2968: len = MyTCB.wRemoteMSS;
 31159  012F5E  C1DC  F134         	movff	_MyTCB+35,SendTCP@len
 31160  012F62  C1DD  F135         	movff	_MyTCB+36,SendTCP@len+1
 31161                           
 31162                           ;tcp.c: 2969: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 31163  012F66  0101               	movlb	1	; () banked
 31164  012F68  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 31165  012F6A                     l11728:
 31166                           
 31167                           ; BSR set to: 1
 31168                           ;tcp.c: 2970: }
 31169                           ;tcp.c: 2972: if(pseudoHeader.Length > len)
 31170  012F6A  0101               	movlb	1	; () banked
 31171  012F6C  5140               	movf	(SendTCP@pseudoHeader+10)& (0+255),w,b
 31172  012F6E  0101               	movlb	1	; () banked
 31173  012F70  5D34               	subwf	SendTCP@len& (0+255),w,b
 31174  012F72  0101               	movlb	1	; () banked
 31175  012F74  5141               	movf	(SendTCP@pseudoHeader+11)& (0+255),w,b
 31176  012F76  0101               	movlb	1	; () banked
 31177  012F78  5935               	subwfb	(SendTCP@len+1)& (0+255),w,b
 31178  012F7A  B0D8               	btfsc	status,0,c
 31179  012F7C  D004               	goto	l11732
 31180                           
 31181                           ; BSR set to: 1
 31182                           ;tcp.c: 2973: pseudoHeader.Length = len;
 31183  012F7E  C134  F140         	movff	SendTCP@len,SendTCP@pseudoHeader+10
 31184  012F82  C135  F141         	movff	SendTCP@len+1,SendTCP@pseudoHeader+11
 31185  012F86                     l11732:
 31186                           
 31187                           ; BSR set to: 1
 31188                           ;tcp.c: 2976: TCPRAMCopy((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1ul)+
      +                          sizeof(ETHER_HEADER)+sizeof(IP_HEADER)+sizeof(TCP_HEADER), 0u, MyTCB.txUnackedTail, MyTC
      +                          BStub.vMemoryMedium, pseudoHeader.Length);
 31189  012F86  0E12               	movlw	18
 31190  012F88  0101               	movlb	1	; () banked
 31191  012F8A  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 31192  012F8C  0EDD               	movlw	221
 31193  012F8E  0101               	movlb	1	; () banked
 31194  012F90  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 31195  012F92  0E00               	movlw	0
 31196  012F94  0101               	movlb	1	; () banked
 31197  012F96  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 31198  012F98  C1C5  F121         	movff	_MyTCB+12,TCPRAMCopy@ptrSource
 31199  012F9C  C1C6  F122         	movff	_MyTCB+13,TCPRAMCopy@ptrSource+1
 31200  012FA0  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 31201  012FA4  C140  F124         	movff	SendTCP@pseudoHeader+10,TCPRAMCopy@wLength
 31202  012FA8  C141  F125         	movff	SendTCP@pseudoHeader+11,TCPRAMCopy@wLength+1
 31203  012FAC  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 31204                           
 31205                           ;tcp.c: 2977: pseudoHeader.Length = len - pseudoHeader.Length;
 31206  012FB0  0101               	movlb	1	; () banked
 31207  012FB2  EE21  F040         	lfsr	2,SendTCP@pseudoHeader+10
 31208  012FB6  CFDE F129          	movff	postinc2,??_SendTCP
 31209  012FBA  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31210  012FBE  0101               	movlb	1	; () banked
 31211  012FC0  1F29               	comf	??_SendTCP& (0+255),f,b
 31212  012FC2  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31213  012FC4  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31214  012FC6  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31215  012FC8  0101               	movlb	1	; () banked
 31216  012FCA  5134               	movf	SendTCP@len& (0+255),w,b
 31217  012FCC  0101               	movlb	1	; () banked
 31218  012FCE  2529               	addwf	??_SendTCP& (0+255),w,b
 31219  012FD0  0101               	movlb	1	; () banked
 31220  012FD2  6F40               	movwf	(SendTCP@pseudoHeader+10)& (0+255),b
 31221  012FD4  0101               	movlb	1	; () banked
 31222  012FD6  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31223  012FD8  0101               	movlb	1	; () banked
 31224  012FDA  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31225  012FDC  0101               	movlb	1	; () banked
 31226  012FDE  6F41               	movwf	(SendTCP@pseudoHeader+11)& (0+255),b
 31227                           
 31228                           ; BSR set to: 1
 31229                           ;tcp.c: 2980: if(pseudoHeader.Length)
 31230  012FE0  0101               	movlb	1	; () banked
 31231  012FE2  5141               	movf	(SendTCP@pseudoHeader+11)& (0+255),w,b
 31232  012FE4  1140               	iorwf	(SendTCP@pseudoHeader+10)& (0+255),w,b
 31233  012FE6  B4D8               	btfsc	status,2,c
 31234  012FE8  D02D               	goto	l11740
 31235                           
 31236                           ; BSR set to: 1
 31237                           ;tcp.c: 2981: {
 31238                           ;tcp.c: 2982: TCPRAMCopy((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1ul)+
      +                          sizeof(ETHER_HEADER)+sizeof(IP_HEADER)+sizeof(TCP_HEADER)+(MyTCBStub.bufferRxStart-MyTCB
      +                          .txUnackedTail), 0u, MyTCBStub.bufferTxStart, MyTCBStub.vMemoryMedium, pseudoHeader.Leng
 31239  012FEA  0101               	movlb	1	; () banked
 31240  012FEC  EE21  F0C5         	lfsr	2,_MyTCB+12
 31241  012FF0  CFDE F129          	movff	postinc2,??_SendTCP
 31242  012FF4  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31243  012FF8  0101               	movlb	1	; () banked
 31244  012FFA  1F29               	comf	??_SendTCP& (0+255),f,b
 31245  012FFC  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31246  012FFE  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31247  013000  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31248  013002  0101               	movlb	1	; () banked
 31249  013004  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31250  013006  0101               	movlb	1	; () banked
 31251  013008  2729               	addwf	??_SendTCP& (0+255),f,b
 31252  01300A  0101               	movlb	1	; () banked
 31253  01300C  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31254  01300E  0101               	movlb	1	; () banked
 31255  013010  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31256  013012  0EDD               	movlw	221
 31257  013014  0101               	movlb	1	; () banked
 31258  013016  2529               	addwf	??_SendTCP& (0+255),w,b
 31259  013018  0101               	movlb	1	; () banked
 31260  01301A  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 31261  01301C  0E12               	movlw	18
 31262  01301E  0101               	movlb	1	; () banked
 31263  013020  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31264  013022  0101               	movlb	1	; () banked
 31265  013024  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 31266  013026  0E00               	movlw	0
 31267  013028  0101               	movlb	1	; () banked
 31268  01302A  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 31269  01302C  C1E0  F121         	movff	_MyTCBStub,TCPRAMCopy@ptrSource
 31270  013030  C1E1  F122         	movff	_MyTCBStub+1,TCPRAMCopy@ptrSource+1
 31271  013034  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 31272  013038  C140  F124         	movff	SendTCP@pseudoHeader+10,TCPRAMCopy@wLength
 31273  01303C  C141  F125         	movff	SendTCP@pseudoHeader+11,TCPRAMCopy@wLength+1
 31274  013040  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 31275  013044                     l11740:
 31276                           
 31277                           ;tcp.c: 2983: }
 31278                           ;tcp.c: 2985: MyTCB.txUnackedTail += len;
 31279  013044  0101               	movlb	1	; () banked
 31280  013046  5134               	movf	SendTCP@len& (0+255),w,b
 31281  013048  0101               	movlb	1	; () banked
 31282  01304A  27C5               	addwf	(_MyTCB+12)& (0+255),f,b
 31283  01304C  0101               	movlb	1	; () banked
 31284  01304E  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31285  013050  0101               	movlb	1	; () banked
 31286  013052  23C6               	addwfc	(_MyTCB+13)& (0+255),f,b
 31287                           
 31288                           ; BSR set to: 1
 31289                           ;tcp.c: 2986: if(MyTCB.txUnackedTail >= MyTCBStub.bufferRxStart)
 31290  013054  0101               	movlb	1	; () banked
 31291  013056  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 31292  01305A  0101               	movlb	1	; () banked
 31293  01305C  EE11  F0C5         	lfsr	1,_MyTCB+12
 31294  013060  52E6               	movf	postinc1,f,c
 31295  013062  52DE               	movf	postinc2,f,c
 31296  013064  50DD               	movf	postdec2,w,c
 31297  013066  5CE5               	subwf	postdec1,w,c
 31298  013068  E102               	bnz	u12785
 31299  01306A  50DF               	movf	indf2,w,c
 31300  01306C  5CE7               	subwf	indf1,w,c
 31301  01306E                     u12785:
 31302  01306E  A0D8               	btfss	status,0,c
 31303  013070  D01B               	goto	l11746
 31304                           
 31305                           ; BSR set to: 1
 31306                           ;tcp.c: 2987: MyTCB.txUnackedTail -= MyTCBStub.bufferRxStart-MyTCBStub.bufferTxStart;
 31307  013072  0101               	movlb	1	; () banked
 31308  013074  C1E0  F129         	movff	_MyTCBStub,??_SendTCP
 31309  013078  0101               	movlb	1	; () banked
 31310  01307A  C1E1  F12A         	movff	_MyTCBStub+1,??_SendTCP+1
 31311  01307E  0101               	movlb	1	; () banked
 31312  013080  1F29               	comf	??_SendTCP& (0+255),f,b
 31313  013082  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31314  013084  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31315  013086  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31316  013088  0101               	movlb	1	; () banked
 31317  01308A  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31318  01308C  0101               	movlb	1	; () banked
 31319  01308E  2729               	addwf	??_SendTCP& (0+255),f,b
 31320  013090  0101               	movlb	1	; () banked
 31321  013092  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31322  013094  0101               	movlb	1	; () banked
 31323  013096  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31324  013098  0101               	movlb	1	; () banked
 31325  01309A  5129               	movf	??_SendTCP& (0+255),w,b
 31326  01309C  0101               	movlb	1	; () banked
 31327  01309E  5FC5               	subwf	(_MyTCB+12)& (0+255),f,b
 31328  0130A0  0101               	movlb	1	; () banked
 31329  0130A2  512A               	movf	(??_SendTCP+1)& (0+255),w,b
 31330  0130A4  0101               	movlb	1	; () banked
 31331  0130A6  5BC6               	subwfb	(_MyTCB+13)& (0+255),f,b
 31332  0130A8                     l11746:
 31333                           
 31334                           ; BSR set to: 1
 31335                           ;tcp.c: 2988: }
 31336                           ;tcp.c: 2991: if(MyTCBStub.Flags.bTXFIN)
 31337  0130A8  0101               	movlb	1	; () banked
 31338  0130AA  A7F8               	btfss	(_MyTCBStub+24)& (0+255),3,b
 31339  0130AC  D020               	goto	l11754
 31340                           
 31341                           ; BSR set to: 1
 31342                           ;tcp.c: 2992: {
 31343                           ;tcp.c: 2993: if((len != MyTCB.remoteWindow) && (len != MyTCB.wRemoteMSS))
 31344  0130AE  0101               	movlb	1	; () banked
 31345  0130B0  EE21  F0CB         	lfsr	2,_MyTCB+18
 31346  0130B4  0101               	movlb	1	; () banked
 31347  0130B6  52DE               	movf	postinc2,f,c
 31348  0130B8  0101               	movlb	1	; () banked
 31349  0130BA  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31350  0130BC  18DD               	xorwf	postdec2,w,c
 31351  0130BE  0101               	movlb	1	; () banked
 31352  0130C0  C134  FFE8         	movff	SendTCP@len,wreg
 31353  0130C4  B4D8               	btfsc	status,2,c
 31354  0130C6  18DF               	xorwf	indf2,w,c
 31355  0130C8  B4D8               	btfsc	status,2,c
 31356  0130CA  D011               	goto	l11754
 31357                           
 31358                           ; BSR set to: 1
 31359  0130CC  0101               	movlb	1	; () banked
 31360  0130CE  EE21  F0DC         	lfsr	2,_MyTCB+35
 31361  0130D2  0101               	movlb	1	; () banked
 31362  0130D4  52DE               	movf	postinc2,f,c
 31363  0130D6  0101               	movlb	1	; () banked
 31364  0130D8  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31365  0130DA  18DD               	xorwf	postdec2,w,c
 31366  0130DC  0101               	movlb	1	; () banked
 31367  0130DE  C134  FFE8         	movff	SendTCP@len,wreg
 31368  0130E2  B4D8               	btfsc	status,2,c
 31369  0130E4  18DF               	xorwf	indf2,w,c
 31370  0130E6  B4D8               	btfsc	status,2,c
 31371  0130E8  D002               	goto	l11754
 31372                           
 31373                           ; BSR set to: 1
 31374                           ;tcp.c: 2994: vTCPFlags |= (0x01);
 31375  0130EA  0101               	movlb	1	; () banked
 31376  0130EC  8133               	bsf	SendTCP@vTCPFlags& (0+255),0,b
 31377  0130EE                     l11754:
 31378                           
 31379                           ; BSR set to: 1
 31380                           ;tcp.c: 2995: }
 31381                           ;tcp.c: 2996: }
 31382                           ;tcp.c: 3001: if(len || (vTCPFlags & ((0x02) | (0x01))))
 31383  0130EE  0101               	movlb	1	; () banked
 31384  0130F0  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31385  0130F2  1134               	iorwf	SendTCP@len& (0+255),w,b
 31386  0130F4  A4D8               	btfss	status,2,c
 31387  0130F6  D007               	goto	l11758
 31388                           
 31389                           ; BSR set to: 1
 31390  0130F8  C133  F129         	movff	SendTCP@vTCPFlags,??_SendTCP
 31391  0130FC  0E03               	movlw	3
 31392  0130FE  0101               	movlb	1	; () banked
 31393  013100  1729               	andwf	??_SendTCP& (0+255),f,b
 31394  013102  B4D8               	btfsc	status,2,c
 31395  013104  D046               	goto	l1218
 31396  013106                     l11758:
 31397                           
 31398                           ; BSR set to: 1
 31399                           ;tcp.c: 3002: {
 31400                           ;tcp.c: 3005: MyTCB.remoteWindow -= len;
 31401  013106  0101               	movlb	1	; () banked
 31402  013108  5134               	movf	SendTCP@len& (0+255),w,b
 31403  01310A  0101               	movlb	1	; () banked
 31404  01310C  5FCB               	subwf	(_MyTCB+18)& (0+255),f,b
 31405  01310E  0101               	movlb	1	; () banked
 31406  013110  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31407  013112  0101               	movlb	1	; () banked
 31408  013114  5BCC               	subwfb	(_MyTCB+19)& (0+255),f,b
 31409                           
 31410                           ;tcp.c: 3009: if(len)
 31411  013116  0101               	movlb	1	; () banked
 31412  013118  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31413  01311A  1134               	iorwf	SendTCP@len& (0+255),w,b
 31414  01311C  B4D8               	btfsc	status,2,c
 31415  01311E  D002               	goto	l11762
 31416                           
 31417                           ; BSR set to: 1
 31418                           ;tcp.c: 3010: vTCPFlags |= (0x08);
 31419  013120  0101               	movlb	1	; () banked
 31420  013122  8733               	bsf	SendTCP@vTCPFlags& (0+255),3,b
 31421  013124                     l11762:
 31422                           
 31423                           ; BSR set to: 1
 31424                           ;tcp.c: 3012: if(vSendFlags & 0x01)
 31425  013124  0101               	movlb	1	; () banked
 31426  013126  A128               	btfss	SendTCP@vSendFlags& (0+255),0,b
 31427  013128  D00F               	goto	l11766
 31428                           
 31429                           ; BSR set to: 1
 31430                           ;tcp.c: 3013: {
 31431                           ;tcp.c: 3014: MyTCB.retryCount = 0;
 31432  01312A  0E00               	movlw	0
 31433  01312C  0101               	movlb	1	; () banked
 31434  01312E  6FDE               	movwf	(_MyTCB+37)& (0+255),b
 31435                           
 31436                           ;tcp.c: 3015: MyTCB.retryInterval = ((uint32_t)(((((40000000ul)/4)+128ull)/256ull))*1);
 31437  013130  0E97               	movlw	151
 31438  013132  0101               	movlb	1	; () banked
 31439  013134  6FB9               	movwf	_MyTCB& (0+255),b
 31440  013136  0E98               	movlw	152
 31441  013138  0101               	movlb	1	; () banked
 31442  01313A  6FBA               	movwf	(_MyTCB+1)& (0+255),b
 31443  01313C  0E00               	movlw	0
 31444  01313E  0101               	movlb	1	; () banked
 31445  013140  6FBB               	movwf	(_MyTCB+2)& (0+255),b
 31446  013142  0E00               	movlw	0
 31447  013144  0101               	movlb	1	; () banked
 31448  013146  6FBC               	movwf	(_MyTCB+3)& (0+255),b
 31449  013148                     l11766:
 31450                           
 31451                           ; BSR set to: 1
 31452                           ;tcp.c: 3016: }
 31453                           ;tcp.c: 3018: MyTCBStub.eventTime = TickGet() + MyTCB.retryInterval;
 31454  013148  EC5D  F0DB         	call	_TickGet	;wreg free
 31455  01314C  C100  F129         	movff	?_TickGet,??_SendTCP
 31456  013150  C101  F12A         	movff	?_TickGet+1,??_SendTCP+1
 31457  013154  C102  F12B         	movff	?_TickGet+2,??_SendTCP+2
 31458  013158  C103  F12C         	movff	?_TickGet+3,??_SendTCP+3
 31459  01315C  0101               	movlb	1	; () banked
 31460  01315E  51B9               	movf	_MyTCB& (0+255),w,b
 31461  013160  0101               	movlb	1	; () banked
 31462  013162  2529               	addwf	??_SendTCP& (0+255),w,b
 31463  013164  0101               	movlb	1	; () banked
 31464  013166  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 31465  013168  0101               	movlb	1	; () banked
 31466  01316A  51BA               	movf	(_MyTCB+1)& (0+255),w,b
 31467  01316C  0101               	movlb	1	; () banked
 31468  01316E  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31469  013170  0101               	movlb	1	; () banked
 31470  013172  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 31471  013174  0101               	movlb	1	; () banked
 31472  013176  51BB               	movf	(_MyTCB+2)& (0+255),w,b
 31473  013178  0101               	movlb	1	; () banked
 31474  01317A  212B               	addwfc	(??_SendTCP+2)& (0+255),w,b
 31475  01317C  0101               	movlb	1	; () banked
 31476  01317E  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 31477  013180  0101               	movlb	1	; () banked
 31478  013182  51BC               	movf	(_MyTCB+3)& (0+255),w,b
 31479  013184  0101               	movlb	1	; () banked
 31480  013186  212C               	addwfc	(??_SendTCP+3)& (0+255),w,b
 31481  013188  0101               	movlb	1	; () banked
 31482  01318A  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 31483                           
 31484                           ; BSR set to: 1
 31485                           ;tcp.c: 3019: MyTCBStub.Flags.bTimerEnabled = 1;
 31486  01318C  0101               	movlb	1	; () banked
 31487  01318E  89F7               	bsf	(_MyTCBStub+23)& (0+255),4,b
 31488                           
 31489                           ;tcp.c: 3020: }
 31490  013190  D060               	goto	l11782
 31491  013192                     l1218:
 31492                           
 31493                           ; BSR set to: 1
 31494                           ;tcp.c: 3021: else if(vSendFlags & 0x02)
 31495  013192  0101               	movlb	1	; () banked
 31496  013194  A328               	btfss	SendTCP@vSendFlags& (0+255),1,b
 31497  013196  D025               	goto	l1224
 31498                           
 31499                           ; BSR set to: 1
 31500                           ;tcp.c: 3022: {
 31501                           ;tcp.c: 3024: MyTCBStub.Flags.vUnackedKeepalives++;
 31502  013198  0E01               	movlw	1
 31503  01319A  0101               	movlb	1	; () banked
 31504  01319C  6F29               	movwf	??_SendTCP& (0+255),b
 31505  01319E  0101               	movlb	1	; () banked
 31506  0131A0  51F7               	movf	(_MyTCBStub+23)& (0+255),w,b
 31507  0131A2  0B07               	andlw	7
 31508  0131A4  0101               	movlb	1	; () banked
 31509  0131A6  6F2A               	movwf	(??_SendTCP+1)& (0+255),b
 31510  0131A8  0101               	movlb	1	; () banked
 31511  0131AA  5129               	movf	??_SendTCP& (0+255),w,b
 31512  0131AC  0101               	movlb	1	; () banked
 31513  0131AE  272A               	addwf	(??_SendTCP+1)& (0+255),f,b
 31514  0131B0  0101               	movlb	1	; () banked
 31515  0131B2  51F7               	movf	(_MyTCBStub+23)& (0+255),w,b
 31516  0131B4  0101               	movlb	1	; () banked
 31517  0131B6  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 31518  0131B8  0BF8               	andlw	-8
 31519  0131BA  0101               	movlb	1	; () banked
 31520  0131BC  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 31521  0131BE  0101               	movlb	1	; () banked
 31522  0131C0  6FF7               	movwf	(_MyTCBStub+23)& (0+255),b
 31523                           
 31524                           ;tcp.c: 3027: MyTCB.MySEQ -= 1;
 31525  0131C2  0101               	movlb	1	; () banked
 31526  0131C4  07BD               	decf	(_MyTCB+4)& (0+255),f,b
 31527  0131C6  0E00               	movlw	0
 31528  0131C8  0101               	movlb	1	; () banked
 31529  0131CA  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 31530  0131CC  0101               	movlb	1	; () banked
 31531  0131CE  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 31532  0131D0  0101               	movlb	1	; () banked
 31533  0131D2  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 31534                           
 31535                           ; BSR set to: 1
 31536                           ;tcp.c: 3028: len = 1;
 31537  0131D4  0E00               	movlw	0
 31538  0131D6  0101               	movlb	1	; () banked
 31539  0131D8  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31540  0131DA  0E01               	movlw	1
 31541  0131DC  0101               	movlb	1	; () banked
 31542  0131DE  6F34               	movwf	SendTCP@len& (0+255),b
 31543                           
 31544                           ;tcp.c: 3029: }
 31545  0131E0  D038               	goto	l11782
 31546  0131E2                     l1224:
 31547                           
 31548                           ; BSR set to: 1
 31549                           ;tcp.c: 3030: else if(MyTCBStub.Flags.bTimerEnabled)
 31550  0131E2  0101               	movlb	1	; () banked
 31551  0131E4  A9F7               	btfss	(_MyTCBStub+23)& (0+255),4,b
 31552  0131E6  D035               	goto	l11782
 31553                           
 31554                           ; BSR set to: 1
 31555                           ;tcp.c: 3031: {
 31556                           ;tcp.c: 3036: if(!(vSendFlags & 0x01))
 31557  0131E8  0101               	movlb	1	; () banked
 31558  0131EA  B128               	btfsc	SendTCP@vSendFlags& (0+255),0,b
 31559  0131EC  D010               	goto	l11780
 31560                           
 31561                           ; BSR set to: 1
 31562                           ;tcp.c: 3037: {
 31563                           ;tcp.c: 3040: if(MyTCB.retryCount)
 31564  0131EE  0101               	movlb	1	; () banked
 31565  0131F0  51DE               	movf	(_MyTCB+37)& (0+255),w,b
 31566  0131F2  B4D8               	btfsc	status,2,c
 31567  0131F4  D00C               	goto	l11780
 31568                           
 31569                           ; BSR set to: 1
 31570                           ;tcp.c: 3041: {
 31571                           ;tcp.c: 3042: MyTCB.retryCount--;
 31572  0131F6  0101               	movlb	1	; () banked
 31573  0131F8  07DE               	decf	(_MyTCB+37)& (0+255),f,b
 31574                           
 31575                           ;tcp.c: 3043: MyTCB.retryInterval >>= 1;
 31576  0131FA  0101               	movlb	1	; () banked
 31577  0131FC  90D8               	bcf	status,0,c
 31578  0131FE  0101               	movlb	1	; () banked
 31579  013200  33BC               	rrcf	(_MyTCB+3)& (0+255),f,b
 31580  013202  0101               	movlb	1	; () banked
 31581  013204  33BB               	rrcf	(_MyTCB+2)& (0+255),f,b
 31582  013206  0101               	movlb	1	; () banked
 31583  013208  33BA               	rrcf	(_MyTCB+1)& (0+255),f,b
 31584  01320A  0101               	movlb	1	; () banked
 31585  01320C  33B9               	rrcf	_MyTCB& (0+255),f,b
 31586  01320E                     l11780:
 31587                           
 31588                           ; BSR set to: 1
 31589                           ;tcp.c: 3044: }
 31590                           ;tcp.c: 3045: }
 31591                           ;tcp.c: 3047: MyTCBStub.eventTime = TickGet() + MyTCB.retryInterval;
 31592  01320E  EC5D  F0DB         	call	_TickGet	;wreg free
 31593  013212  C100  F129         	movff	?_TickGet,??_SendTCP
 31594  013216  C101  F12A         	movff	?_TickGet+1,??_SendTCP+1
 31595  01321A  C102  F12B         	movff	?_TickGet+2,??_SendTCP+2
 31596  01321E  C103  F12C         	movff	?_TickGet+3,??_SendTCP+3
 31597  013222  0101               	movlb	1	; () banked
 31598  013224  51B9               	movf	_MyTCB& (0+255),w,b
 31599  013226  0101               	movlb	1	; () banked
 31600  013228  2529               	addwf	??_SendTCP& (0+255),w,b
 31601  01322A  0101               	movlb	1	; () banked
 31602  01322C  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 31603  01322E  0101               	movlb	1	; () banked
 31604  013230  51BA               	movf	(_MyTCB+1)& (0+255),w,b
 31605  013232  0101               	movlb	1	; () banked
 31606  013234  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31607  013236  0101               	movlb	1	; () banked
 31608  013238  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 31609  01323A  0101               	movlb	1	; () banked
 31610  01323C  51BB               	movf	(_MyTCB+2)& (0+255),w,b
 31611  01323E  0101               	movlb	1	; () banked
 31612  013240  212B               	addwfc	(??_SendTCP+2)& (0+255),w,b
 31613  013242  0101               	movlb	1	; () banked
 31614  013244  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 31615  013246  0101               	movlb	1	; () banked
 31616  013248  51BC               	movf	(_MyTCB+3)& (0+255),w,b
 31617  01324A  0101               	movlb	1	; () banked
 31618  01324C  212C               	addwfc	(??_SendTCP+3)& (0+255),w,b
 31619  01324E  0101               	movlb	1	; () banked
 31620  013250  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 31621  013252                     l11782:
 31622                           
 31623                           ; BSR set to: 1
 31624                           ;tcp.c: 3048: }
 31625                           ;tcp.c: 3051: header.SourcePort = MyTCB.localPort.Val;
 31626  013252  C1C9  F142         	movff	_MyTCB+16,SendTCP@header
 31627  013256  C1CA  F143         	movff	_MyTCB+17,SendTCP@header+1
 31628                           
 31629                           ; BSR set to: 1
 31630                           ;tcp.c: 3052: header.DestPort = MyTCB.remotePort.Val;
 31631  01325A  C1C7  F144         	movff	_MyTCB+14,SendTCP@header+2
 31632  01325E  C1C8  F145         	movff	_MyTCB+15,SendTCP@header+3
 31633                           
 31634                           ; BSR set to: 1
 31635                           ;tcp.c: 3053: header.SeqNumber = MyTCB.MySEQ;
 31636  013262  C1BD  F146         	movff	_MyTCB+4,SendTCP@header+4
 31637  013266  C1BE  F147         	movff	_MyTCB+5,SendTCP@header+5
 31638  01326A  C1BF  F148         	movff	_MyTCB+6,SendTCP@header+6
 31639  01326E  C1C0  F149         	movff	_MyTCB+7,SendTCP@header+7
 31640                           
 31641                           ; BSR set to: 1
 31642                           ;tcp.c: 3054: header.AckNumber = MyTCB.RemoteSEQ;
 31643  013272  C1C1  F14A         	movff	_MyTCB+8,SendTCP@header+8
 31644  013276  C1C2  F14B         	movff	_MyTCB+9,SendTCP@header+9
 31645  01327A  C1C3  F14C         	movff	_MyTCB+10,SendTCP@header+10
 31646  01327E  C1C4  F14D         	movff	_MyTCB+11,SendTCP@header+11
 31647                           
 31648                           ; BSR set to: 1
 31649                           ;tcp.c: 3055: header.Flags.bits.Reserved2 = 0;
 31650  013282  0E3F               	movlw	-193
 31651  013284  0101               	movlb	1	; () banked
 31652  013286  174F               	andwf	(SendTCP@header+13)& (0+255),f,b
 31653                           
 31654                           ; BSR set to: 1
 31655                           ;tcp.c: 3056: header.DataOffset.Reserved3 = 0;
 31656  013288  0101               	movlb	1	; () banked
 31657  01328A  914E               	bcf	(SendTCP@header+12)& (0+255),0,b
 31658  01328C  0101               	movlb	1	; () banked
 31659  01328E  934E               	bcf	(SendTCP@header+12)& (0+255),1,b
 31660  013290  0101               	movlb	1	; () banked
 31661  013292  954E               	bcf	(SendTCP@header+12)& (0+255),2,b
 31662  013294  0101               	movlb	1	; () banked
 31663  013296  974E               	bcf	(SendTCP@header+12)& (0+255),3,b
 31664                           
 31665                           ; BSR set to: 1
 31666                           ;tcp.c: 3057: header.Flags.byte = vTCPFlags;
 31667  013298  C133  F14F         	movff	SendTCP@vTCPFlags,SendTCP@header+13
 31668                           
 31669                           ; BSR set to: 1
 31670                           ;tcp.c: 3058: header.UrgentPointer = 0;
 31671  01329C  0E00               	movlw	0
 31672  01329E  0101               	movlb	1	; () banked
 31673  0132A0  6F55               	movwf	(SendTCP@header+19)& (0+255),b
 31674  0132A2  0E00               	movlw	0
 31675  0132A4  0101               	movlb	1	; () banked
 31676  0132A6  6F54               	movwf	(SendTCP@header+18)& (0+255),b
 31677                           
 31678                           ; BSR set to: 1
 31679                           ;tcp.c: 3062: MyTCB.MySEQ += (uint32_t)len;
 31680  0132A8  0101               	movlb	1	; () banked
 31681  0132AA  5134               	movf	SendTCP@len& (0+255),w,b
 31682  0132AC  0101               	movlb	1	; () banked
 31683  0132AE  27BD               	addwf	(_MyTCB+4)& (0+255),f,b
 31684  0132B0  0101               	movlb	1	; () banked
 31685  0132B2  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31686  0132B4  0101               	movlb	1	; () banked
 31687  0132B6  23BE               	addwfc	(_MyTCB+5)& (0+255),f,b
 31688  0132B8  0E00               	movlw	0
 31689  0132BA  0101               	movlb	1	; () banked
 31690  0132BC  23BF               	addwfc	(_MyTCB+6)& (0+255),f,b
 31691  0132BE  0E00               	movlw	0
 31692  0132C0  0101               	movlb	1	; () banked
 31693  0132C2  23C0               	addwfc	(_MyTCB+7)& (0+255),f,b
 31694                           
 31695                           ; BSR set to: 1
 31696                           ;tcp.c: 3063: if(vTCPFlags & (0x02))
 31697  0132C4  0101               	movlb	1	; () banked
 31698  0132C6  A333               	btfss	SendTCP@vTCPFlags& (0+255),1,b
 31699  0132C8  D028               	goto	l11814
 31700                           
 31701                           ; BSR set to: 1
 31702                           ;tcp.c: 3064: {
 31703                           ;tcp.c: 3068: if(!(vTCPFlags & (0x10)))
 31704  0132CA  0101               	movlb	1	; () banked
 31705  0132CC  B933               	btfsc	SendTCP@vTCPFlags& (0+255),4,b
 31706  0132CE  D00C               	goto	l11806
 31707                           
 31708                           ; BSR set to: 1
 31709                           ;tcp.c: 3069: header.AckNumber = 0x00000000;
 31710  0132D0  0E00               	movlw	0
 31711  0132D2  0101               	movlb	1	; () banked
 31712  0132D4  6F4A               	movwf	(SendTCP@header+8)& (0+255),b
 31713  0132D6  0E00               	movlw	0
 31714  0132D8  0101               	movlb	1	; () banked
 31715  0132DA  6F4B               	movwf	(SendTCP@header+9)& (0+255),b
 31716  0132DC  0E00               	movlw	0
 31717  0132DE  0101               	movlb	1	; () banked
 31718  0132E0  6F4C               	movwf	(SendTCP@header+10)& (0+255),b
 31719  0132E2  0E00               	movlw	0
 31720  0132E4  0101               	movlb	1	; () banked
 31721  0132E6  6F4D               	movwf	(SendTCP@header+11)& (0+255),b
 31722  0132E8                     l11806:
 31723                           
 31724                           ; BSR set to: 1
 31725                           ;tcp.c: 3071: if(MyTCB.flags.bSYNSent)
 31726  0132E8  0101               	movlb	1	; () banked
 31727  0132EA  A3DB               	btfss	(_MyTCB+34)& (0+255),1,b
 31728  0132EC  D00A               	goto	l11810
 31729                           
 31730                           ; BSR set to: 1
 31731                           ;tcp.c: 3072: header.SeqNumber--;
 31732  0132EE  0101               	movlb	1	; () banked
 31733  0132F0  0746               	decf	(SendTCP@header+4)& (0+255),f,b
 31734  0132F2  0E00               	movlw	0
 31735  0132F4  0101               	movlb	1	; () banked
 31736  0132F6  5B47               	subwfb	(SendTCP@header+5)& (0+255),f,b
 31737  0132F8  0101               	movlb	1	; () banked
 31738  0132FA  5B48               	subwfb	(SendTCP@header+6)& (0+255),f,b
 31739  0132FC  0101               	movlb	1	; () banked
 31740  0132FE  5B49               	subwfb	(SendTCP@header+7)& (0+255),f,b
 31741  013300  D00C               	goto	l11814
 31742  013302                     l11810:
 31743                           
 31744                           ; BSR set to: 1
 31745                           ;tcp.c: 3073: else
 31746                           ;tcp.c: 3074: {
 31747                           ;tcp.c: 3075: MyTCB.MySEQ++;
 31748  013302  0E01               	movlw	1
 31749  013304  0101               	movlb	1	; () banked
 31750  013306  27BD               	addwf	(_MyTCB+4)& (0+255),f,b
 31751  013308  0E00               	movlw	0
 31752  01330A  0101               	movlb	1	; () banked
 31753  01330C  23BE               	addwfc	(_MyTCB+5)& (0+255),f,b
 31754  01330E  0101               	movlb	1	; () banked
 31755  013310  23BF               	addwfc	(_MyTCB+6)& (0+255),f,b
 31756  013312  0101               	movlb	1	; () banked
 31757  013314  23C0               	addwfc	(_MyTCB+7)& (0+255),f,b
 31758                           
 31759                           ; BSR set to: 1
 31760                           ;tcp.c: 3076: MyTCB.flags.bSYNSent = 1;
 31761  013316  0101               	movlb	1	; () banked
 31762  013318  83DB               	bsf	(_MyTCB+34)& (0+255),1,b
 31763  01331A                     l11814:
 31764                           
 31765                           ; BSR set to: 1
 31766                           ;tcp.c: 3077: }
 31767                           ;tcp.c: 3078: }
 31768                           ;tcp.c: 3079: if(vTCPFlags & (0x01))
 31769  01331A  0101               	movlb	1	; () banked
 31770  01331C  A133               	btfss	SendTCP@vTCPFlags& (0+255),0,b
 31771  01331E  D002               	goto	l11818
 31772                           
 31773                           ; BSR set to: 1
 31774                           ;tcp.c: 3080: {
 31775                           ;tcp.c: 3081: MyTCB.flags.bFINSent = 1;
 31776  013320  0101               	movlb	1	; () banked
 31777  013322  81DB               	bsf	(_MyTCB+34)& (0+255),0,b
 31778  013324                     l11818:
 31779                           
 31780                           ; BSR set to: 1
 31781                           ;tcp.c: 3082: }
 31782                           ;tcp.c: 3085: if(MyTCBStub.rxHead >= MyTCBStub.rxTail)
 31783  013324  0101               	movlb	1	; () banked
 31784  013326  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 31785  01332A  0101               	movlb	1	; () banked
 31786  01332C  EE11  F0EA         	lfsr	1,_MyTCBStub+10
 31787  013330  52E6               	movf	postinc1,f,c
 31788  013332  52DE               	movf	postinc2,f,c
 31789  013334  50DD               	movf	postdec2,w,c
 31790  013336  5CE5               	subwf	postdec1,w,c
 31791  013338  E102               	bnz	u12945
 31792  01333A  50DF               	movf	indf2,w,c
 31793  01333C  5CE7               	subwf	indf1,w,c
 31794  01333E                     u12945:
 31795  01333E  A0D8               	btfss	status,0,c
 31796  013340  D02A               	goto	l11822
 31797                           
 31798                           ; BSR set to: 1
 31799                           ;tcp.c: 3086: header.Window = (MyTCBStub.bufferEnd - MyTCBStub.bufferRxStart) - (MyTCBSt
      +                          ub.rxHead - MyTCBStub.rxTail);
 31800  013342  0101               	movlb	1	; () banked
 31801  013344  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 31802  013348  CFDE F129          	movff	postinc2,??_SendTCP
 31803  01334C  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31804  013350  0101               	movlb	1	; () banked
 31805  013352  1F29               	comf	??_SendTCP& (0+255),f,b
 31806  013354  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31807  013356  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31808  013358  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31809  01335A  0101               	movlb	1	; () banked
 31810  01335C  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 31811  01335E  0101               	movlb	1	; () banked
 31812  013360  2729               	addwf	??_SendTCP& (0+255),f,b
 31813  013362  0101               	movlb	1	; () banked
 31814  013364  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 31815  013366  0101               	movlb	1	; () banked
 31816  013368  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31817  01336A  0101               	movlb	1	; () banked
 31818  01336C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31819  01336E  0101               	movlb	1	; () banked
 31820  013370  2729               	addwf	??_SendTCP& (0+255),f,b
 31821  013372  0101               	movlb	1	; () banked
 31822  013374  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31823  013376  0101               	movlb	1	; () banked
 31824  013378  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31825  01337A  0101               	movlb	1	; () banked
 31826  01337C  1F29               	comf	??_SendTCP& (0+255),f,b
 31827  01337E  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31828  013380  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31829  013382  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31830  013384  0101               	movlb	1	; () banked
 31831  013386  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 31832  013388  0101               	movlb	1	; () banked
 31833  01338A  2529               	addwf	??_SendTCP& (0+255),w,b
 31834  01338C  0101               	movlb	1	; () banked
 31835  01338E  6F50               	movwf	(SendTCP@header+14)& (0+255),b
 31836  013390  0101               	movlb	1	; () banked
 31837  013392  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 31838  013394  D01A               	goto	L36
 31839  013396                     l11822:
 31840                           
 31841                           ; BSR set to: 1
 31842                           ;tcp.c: 3087: else
 31843                           ;tcp.c: 3088: header.Window = MyTCBStub.rxTail - MyTCBStub.rxHead - 1;
 31844  013396  0101               	movlb	1	; () banked
 31845  013398  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 31846  01339C  CFDE F129          	movff	postinc2,??_SendTCP
 31847  0133A0  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31848  0133A4  0101               	movlb	1	; () banked
 31849  0133A6  1F29               	comf	??_SendTCP& (0+255),f,b
 31850  0133A8  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31851  0133AA  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31852  0133AC  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31853  0133AE  0101               	movlb	1	; () banked
 31854  0133B0  51EC               	movf	(_MyTCBStub+12)& (0+255),w,b
 31855  0133B2  0101               	movlb	1	; () banked
 31856  0133B4  2729               	addwf	??_SendTCP& (0+255),f,b
 31857  0133B6  0101               	movlb	1	; () banked
 31858  0133B8  51ED               	movf	(_MyTCBStub+13)& (0+255),w,b
 31859  0133BA  0101               	movlb	1	; () banked
 31860  0133BC  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31861  0133BE  0EFF               	movlw	255
 31862  0133C0  0101               	movlb	1	; () banked
 31863  0133C2  2529               	addwf	??_SendTCP& (0+255),w,b
 31864  0133C4  0101               	movlb	1	; () banked
 31865  0133C6  6F50               	movwf	(SendTCP@header+14)& (0+255),b
 31866  0133C8  0EFF               	movlw	255
 31867  0133CA                     L36:
 31868  0133CA  0101               	movlb	1	; () banked
 31869  0133CC  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31870  0133CE  0101               	movlb	1	; () banked
 31871  0133D0  6F51               	movwf	(SendTCP@header+15)& (0+255),b
 31872                           
 31873                           ; BSR set to: 1
 31874                           ;tcp.c: 3091: wVal.Val = MACGetFreeRxSize();
 31875                           
 31876                           ; BSR set to: 1
 31877  0133D2  ECB1  F0CA         	call	_MACGetFreeRxSize	;wreg free
 31878  0133D6  0101               	movlb	1	; () banked
 31879  0133D8  C100  F131         	movff	?_MACGetFreeRxSize,SendTCP@wVal
 31880  0133DC  0101               	movlb	1	; () banked
 31881  0133DE  C101  F132         	movff	?_MACGetFreeRxSize+1,SendTCP@wVal+1
 31882                           
 31883                           ; BSR set to: 1
 31884                           ;tcp.c: 3092: if(wVal.Val < 64)
 31885  0133E2  0E40               	movlw	64
 31886  0133E4  0101               	movlb	1	; () banked
 31887  0133E6  5D31               	subwf	SendTCP@wVal& (0+255),w,b
 31888  0133E8  0E00               	movlw	0
 31889  0133EA  0101               	movlb	1	; () banked
 31890  0133EC  5932               	subwfb	(SendTCP@wVal+1)& (0+255),w,b
 31891  0133EE  B0D8               	btfsc	status,0,c
 31892  0133F0  D007               	goto	l11830
 31893                           
 31894                           ; BSR set to: 1
 31895                           ;tcp.c: 3093: {
 31896                           ;tcp.c: 3094: wVal.Val = 0;
 31897  0133F2  0E00               	movlw	0
 31898  0133F4  0101               	movlb	1	; () banked
 31899  0133F6  6F32               	movwf	(SendTCP@wVal+1)& (0+255),b
 31900  0133F8  0E00               	movlw	0
 31901  0133FA  0101               	movlb	1	; () banked
 31902  0133FC  6F31               	movwf	SendTCP@wVal& (0+255),b
 31903                           
 31904                           ;tcp.c: 3095: }
 31905  0133FE  D006               	goto	l1237
 31906  013400                     l11830:
 31907                           
 31908                           ; BSR set to: 1
 31909                           ;tcp.c: 3096: else
 31910                           ;tcp.c: 3097: {
 31911                           ;tcp.c: 3098: wVal.Val -= 64;
 31912  013400  0E40               	movlw	64
 31913  013402  0101               	movlb	1	; () banked
 31914  013404  5F31               	subwf	SendTCP@wVal& (0+255),f,b
 31915  013406  0E00               	movlw	0
 31916  013408  0101               	movlb	1	; () banked
 31917  01340A  5B32               	subwfb	(SendTCP@wVal+1)& (0+255),f,b
 31918  01340C                     l1237:
 31919                           
 31920                           ; BSR set to: 1
 31921                           ;tcp.c: 3099: }
 31922                           ;tcp.c: 3101: if(header.Window > wVal.Val)
 31923  01340C  0101               	movlb	1	; () banked
 31924  01340E  5150               	movf	(SendTCP@header+14)& (0+255),w,b
 31925  013410  0101               	movlb	1	; () banked
 31926  013412  5D31               	subwf	SendTCP@wVal& (0+255),w,b
 31927  013414  0101               	movlb	1	; () banked
 31928  013416  5151               	movf	(SendTCP@header+15)& (0+255),w,b
 31929  013418  0101               	movlb	1	; () banked
 31930  01341A  5932               	subwfb	(SendTCP@wVal+1)& (0+255),w,b
 31931  01341C  B0D8               	btfsc	status,0,c
 31932  01341E  D004               	goto	l11834
 31933                           
 31934                           ; BSR set to: 1
 31935                           ;tcp.c: 3102: header.Window = wVal.Val;
 31936  013420  C131  F150         	movff	SendTCP@wVal,SendTCP@header+14
 31937  013424  C132  F151         	movff	SendTCP@wVal+1,SendTCP@header+15
 31938  013428                     l11834:
 31939                           
 31940                           ; BSR set to: 1
 31941                           ;tcp.c: 3104: SwapTCPHeader(&header);
 31942  013428  0101               	movlb	1	; () banked
 31943  01342A  0E01               	movlw	high SendTCP@header
 31944  01342C  0101               	movlb	1	; () banked
 31945  01342E  6F06               	movwf	(SwapTCPHeader@header+1)& (0+255),b
 31946  013430  0101               	movlb	1	; () banked
 31947  013432  0E42               	movlw	low SendTCP@header
 31948  013434  0101               	movlb	1	; () banked
 31949  013436  6F05               	movwf	SwapTCPHeader@header& (0+255),b
 31950  013438  EC92  F0B0         	call	_SwapTCPHeader	;wreg free
 31951                           
 31952                           ;tcp.c: 3107: len += sizeof(header);
 31953  01343C  0E14               	movlw	20
 31954  01343E  0101               	movlb	1	; () banked
 31955  013440  2734               	addwf	SendTCP@len& (0+255),f,b
 31956  013442  0E00               	movlw	0
 31957  013444  0101               	movlb	1	; () banked
 31958  013446  2335               	addwfc	(SendTCP@len+1)& (0+255),f,b
 31959                           
 31960                           ; BSR set to: 1
 31961                           ;tcp.c: 3108: header.DataOffset.Val = sizeof(header) >> 2;
 31962  013448  0101               	movlb	1	; () banked
 31963  01344A  514E               	movf	(SendTCP@header+12)& (0+255),w,b
 31964  01344C  0B0F               	andlw	-241
 31965  01344E  0950               	iorlw	80
 31966  013450  0101               	movlb	1	; () banked
 31967  013452  6F4E               	movwf	(SendTCP@header+12)& (0+255),b
 31968                           
 31969                           ; BSR set to: 1
 31970                           ;tcp.c: 3111: if(vTCPFlags & (0x02))
 31971  013454  0101               	movlb	1	; () banked
 31972  013456  A333               	btfss	SendTCP@vTCPFlags& (0+255),1,b
 31973  013458  D029               	goto	l11852
 31974                           
 31975                           ; BSR set to: 1
 31976                           ;tcp.c: 3112: {
 31977                           ;tcp.c: 3113: len += sizeof(options);
 31978  01345A  0E04               	movlw	4
 31979  01345C  0101               	movlb	1	; () banked
 31980  01345E  2734               	addwf	SendTCP@len& (0+255),f,b
 31981  013460  0E00               	movlw	0
 31982  013462  0101               	movlb	1	; () banked
 31983  013464  2335               	addwfc	(SendTCP@len+1)& (0+255),f,b
 31984                           
 31985                           ; BSR set to: 1
 31986                           ;tcp.c: 3114: options.Kind = (0x02u);
 31987  013466  0E02               	movlw	2
 31988  013468  0101               	movlb	1	; () banked
 31989  01346A  6F2D               	movwf	SendTCP@options& (0+255),b
 31990                           
 31991                           ; BSR set to: 1
 31992                           ;tcp.c: 3115: options.Length = 0x04;
 31993  01346C  0E04               	movlw	4
 31994  01346E  0101               	movlb	1	; () banked
 31995  013470  6F2E               	movwf	(SendTCP@options+1)& (0+255),b
 31996                           
 31997                           ; BSR set to: 1
 31998                           ;tcp.c: 3118: options.MaxSegSize.Val = ((((536u))&0x00FF)<<8) | ((((536u))&0xFF00)>>8);
 31999  013472  0E18               	movlw	24
 32000  013474  0101               	movlb	1	; () banked
 32001  013476  6F30               	movwf	(SendTCP@options+3)& (0+255),b
 32002  013478  0E02               	movlw	2
 32003  01347A  0101               	movlb	1	; () banked
 32004  01347C  6F2F               	movwf	(SendTCP@options+2)& (0+255),b
 32005                           
 32006                           ; BSR set to: 1
 32007                           ;tcp.c: 3120: header.DataOffset.Val += sizeof(options) >> 2;
 32008  01347E  0E01               	movlw	1
 32009  013480  0101               	movlb	1	; () banked
 32010  013482  6F29               	movwf	??_SendTCP& (0+255),b
 32011  013484  0101               	movlb	1	; () banked
 32012  013486  394E               	swapf	(SendTCP@header+12)& (0+255),w,b
 32013  013488  0B0F               	andlw	15
 32014  01348A  0101               	movlb	1	; () banked
 32015  01348C  6F2A               	movwf	(??_SendTCP+1)& (0+255),b
 32016  01348E  0101               	movlb	1	; () banked
 32017  013490  5129               	movf	??_SendTCP& (0+255),w,b
 32018  013492  0101               	movlb	1	; () banked
 32019  013494  272A               	addwf	(??_SendTCP+1)& (0+255),f,b
 32020  013496  0101               	movlb	1	; () banked
 32021  013498  3B2A               	swapf	(??_SendTCP+1)& (0+255),f,b
 32022  01349A  0101               	movlb	1	; () banked
 32023  01349C  514E               	movf	(SendTCP@header+12)& (0+255),w,b
 32024  01349E  0101               	movlb	1	; () banked
 32025  0134A0  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 32026  0134A2  0B0F               	andlw	-241
 32027  0134A4  0101               	movlb	1	; () banked
 32028  0134A6  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 32029  0134A8  0101               	movlb	1	; () banked
 32030  0134AA  6F4E               	movwf	(SendTCP@header+12)& (0+255),b
 32031  0134AC                     l11852:
 32032                           
 32033                           ; BSR set to: 1
 32034                           ;tcp.c: 3121: }
 32035                           ;tcp.c: 3124: pseudoHeader.SourceAddress = AppConfig.MyIPAddr;
 32036  0134AC  C23C  F136         	movff	_AppConfig,SendTCP@pseudoHeader
 32037  0134B0  C23D  F137         	movff	_AppConfig+1,SendTCP@pseudoHeader+1
 32038  0134B4  C23E  F138         	movff	_AppConfig+2,SendTCP@pseudoHeader+2
 32039  0134B8  C23F  F139         	movff	_AppConfig+3,SendTCP@pseudoHeader+3
 32040                           
 32041                           ; BSR set to: 1
 32042                           ;tcp.c: 3125: pseudoHeader.DestAddress = MyTCB.remote.niRemoteMACIP.IPAddr;
 32043  0134BC  C1CF  F13A         	movff	_MyTCB+22,SendTCP@pseudoHeader+4
 32044  0134C0  C1D0  F13B         	movff	_MyTCB+23,SendTCP@pseudoHeader+5
 32045  0134C4  C1D1  F13C         	movff	_MyTCB+24,SendTCP@pseudoHeader+6
 32046  0134C8  C1D2  F13D         	movff	_MyTCB+25,SendTCP@pseudoHeader+7
 32047                           
 32048                           ;tcp.c: 3126: pseudoHeader.Zero = 0x0;
 32049  0134CC  0E00               	movlw	0
 32050  0134CE  0101               	movlb	1	; () banked
 32051  0134D0  6F3E               	movwf	(SendTCP@pseudoHeader+8)& (0+255),b
 32052                           
 32053                           ;tcp.c: 3127: pseudoHeader.Protocol = (6u);
 32054  0134D2  0E06               	movlw	6
 32055  0134D4  0101               	movlb	1	; () banked
 32056  0134D6  6F3F               	movwf	(SendTCP@pseudoHeader+9)& (0+255),b
 32057                           
 32058                           ; BSR set to: 1
 32059                           ;tcp.c: 3128: pseudoHeader.Length = len;
 32060  0134D8  C134  F140         	movff	SendTCP@len,SendTCP@pseudoHeader+10
 32061  0134DC  C135  F141         	movff	SendTCP@len+1,SendTCP@pseudoHeader+11
 32062                           
 32063                           ; BSR set to: 1
 32064                           ;tcp.c: 3129: (pseudoHeader.Length = swaps(pseudoHeader.Length));
 32065  0134E0  C140  F100         	movff	SendTCP@pseudoHeader+10,swaps@v
 32066  0134E4  C141  F101         	movff	SendTCP@pseudoHeader+11,swaps@v+1
 32067  0134E8  EC42  F0DC         	call	_swaps	;wreg free
 32068  0134EC  0101               	movlb	1	; () banked
 32069  0134EE  C100  F140         	movff	?_swaps,SendTCP@pseudoHeader+10
 32070  0134F2  0101               	movlb	1	; () banked
 32071  0134F4  C101  F141         	movff	?_swaps+1,SendTCP@pseudoHeader+11
 32072                           
 32073                           ; BSR set to: 1
 32074                           ;tcp.c: 3130: header.Checksum = ~CalcIPChecksum((uint8_t*)&pseudoHeader, sizeof(pseudoHe
      +                          ader));
 32075  0134F8  0101               	movlb	1	; () banked
 32076  0134FA  0E01               	movlw	high SendTCP@pseudoHeader
 32077  0134FC  0101               	movlb	1	; () banked
 32078  0134FE  6F01               	movwf	(CalcIPChecksum@buffer+1)& (0+255),b
 32079  013500  0101               	movlb	1	; () banked
 32080  013502  0E36               	movlw	low SendTCP@pseudoHeader
 32081  013504  0101               	movlb	1	; () banked
 32082  013506  6F00               	movwf	CalcIPChecksum@buffer& (0+255),b
 32083  013508  0E00               	movlw	0
 32084  01350A  0101               	movlb	1	; () banked
 32085  01350C  6F03               	movwf	(CalcIPChecksum@count+1)& (0+255),b
 32086  01350E  0E0C               	movlw	12
 32087  013510  0101               	movlb	1	; () banked
 32088  013512  6F02               	movwf	CalcIPChecksum@count& (0+255),b
 32089  013514  EC77  F0C7         	call	_CalcIPChecksum	;wreg free
 32090  013518  0101               	movlb	1	; () banked
 32091  01351A  1D00               	comf	?_CalcIPChecksum& (0+255),w,b
 32092  01351C  0101               	movlb	1	; () banked
 32093  01351E  6F52               	movwf	(SendTCP@header+16)& (0+255),b
 32094  013520  0101               	movlb	1	; () banked
 32095  013522  1D01               	comf	(?_CalcIPChecksum+1)& (0+255),w,b
 32096  013524  0101               	movlb	1	; () banked
 32097  013526  6F53               	movwf	(SendTCP@header+17)& (0+255),b
 32098                           
 32099                           ; BSR set to: 1
 32100                           ;tcp.c: 3133: MACSetWritePtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1
      +                          ul) + sizeof(ETHER_HEADER));
 32101  013528  0E12               	movlw	18
 32102  01352A  0101               	movlb	1	; () banked
 32103  01352C  6F01               	movwf	(MACSetWritePtr@address+1)& (0+255),b
 32104  01352E  0EB5               	movlw	181
 32105  013530  0101               	movlb	1	; () banked
 32106  013532  6F00               	movwf	MACSetWritePtr@address& (0+255),b
 32107  013534  ECFE  F0DC         	call	_MACSetWritePtr	;wreg free
 32108                           
 32109                           ;tcp.c: 3134: IPPutHeader(&MyTCB.remote.niRemoteMACIP, (6u), len);
 32110  013538  0101               	movlb	1	; () banked
 32111  01353A  0E01               	movlw	high (_MyTCB+22)
 32112  01353C  0101               	movlb	1	; () banked
 32113  01353E  6F0F               	movwf	(IPPutHeader@remote+1)& (0+255),b
 32114  013540  0101               	movlb	1	; () banked
 32115  013542  0ECF               	movlw	low (_MyTCB+22)
 32116  013544  0101               	movlb	1	; () banked
 32117  013546  6F0E               	movwf	IPPutHeader@remote& (0+255),b
 32118  013548  0E06               	movlw	6
 32119  01354A  0101               	movlb	1	; () banked
 32120  01354C  6F10               	movwf	IPPutHeader@protocol& (0+255),b
 32121  01354E  C134  F111         	movff	SendTCP@len,IPPutHeader@len
 32122  013552  C135  F112         	movff	SendTCP@len+1,IPPutHeader@len+1
 32123  013556  ECC2  F0C2         	call	_IPPutHeader	;wreg free
 32124                           
 32125                           ;tcp.c: 3135: MACPutArray((uint8_t*)&header, sizeof(header));
 32126  01355A  0101               	movlb	1	; () banked
 32127  01355C  0E01               	movlw	high SendTCP@header
 32128  01355E  0101               	movlb	1	; () banked
 32129  013560  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 32130  013562  0101               	movlb	1	; () banked
 32131  013564  0E42               	movlw	low SendTCP@header
 32132  013566  0101               	movlb	1	; () banked
 32133  013568  6F00               	movwf	MACPutArray@val& (0+255),b
 32134  01356A  0E00               	movlw	0
 32135  01356C  0101               	movlb	1	; () banked
 32136  01356E  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 32137  013570  0E14               	movlw	20
 32138  013572  0101               	movlb	1	; () banked
 32139  013574  6F02               	movwf	MACPutArray@len& (0+255),b
 32140  013576  ECE4  F0FF         	call	_MACPutArray	;wreg free
 32141                           
 32142                           ;tcp.c: 3136: if(vTCPFlags & (0x02))
 32143  01357A  0101               	movlb	1	; () banked
 32144  01357C  A333               	btfss	SendTCP@vTCPFlags& (0+255),1,b
 32145  01357E  D010               	goto	l11868
 32146                           
 32147                           ; BSR set to: 1
 32148                           ;tcp.c: 3137: MACPutArray((uint8_t*)&options, sizeof(options));
 32149  013580  0101               	movlb	1	; () banked
 32150  013582  0E01               	movlw	high SendTCP@options
 32151  013584  0101               	movlb	1	; () banked
 32152  013586  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 32153  013588  0101               	movlb	1	; () banked
 32154  01358A  0E2D               	movlw	low SendTCP@options
 32155  01358C  0101               	movlb	1	; () banked
 32156  01358E  6F00               	movwf	MACPutArray@val& (0+255),b
 32157  013590  0E00               	movlw	0
 32158  013592  0101               	movlb	1	; () banked
 32159  013594  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 32160  013596  0E04               	movlw	4
 32161  013598  0101               	movlb	1	; () banked
 32162  01359A  6F02               	movwf	MACPutArray@len& (0+255),b
 32163  01359C  ECE4  F0FF         	call	_MACPutArray	;wreg free
 32164  0135A0                     l11868:
 32165                           
 32166                           ;tcp.c: 3140: MACSetReadPtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1u
      +                          l) + sizeof(ETHER_HEADER) + sizeof(IP_HEADER));
 32167  0135A0  0E12               	movlw	18
 32168  0135A2  0101               	movlb	1	; () banked
 32169  0135A4  6F01               	movwf	(MACSetReadPtr@address+1)& (0+255),b
 32170  0135A6  0EC9               	movlw	201
 32171  0135A8  0101               	movlb	1	; () banked
 32172  0135AA  6F00               	movwf	MACSetReadPtr@address& (0+255),b
 32173  0135AC  EC07  F0DD         	call	_MACSetReadPtr	;wreg free
 32174                           
 32175                           ;tcp.c: 3141: wVal.Val = CalcIPBufferChecksum(len);
 32176  0135B0  C134  F106         	movff	SendTCP@len,CalcIPBufferChecksum@len
 32177  0135B4  C135  F107         	movff	SendTCP@len+1,CalcIPBufferChecksum@len+1
 32178  0135B8  EC81  F0BE         	call	_CalcIPBufferChecksum	;wreg free
 32179  0135BC  0101               	movlb	1	; () banked
 32180  0135BE  C106  F131         	movff	?_CalcIPBufferChecksum,SendTCP@wVal
 32181  0135C2  0101               	movlb	1	; () banked
 32182  0135C4  C107  F132         	movff	?_CalcIPBufferChecksum+1,SendTCP@wVal+1
 32183                           
 32184                           ;tcp.c: 3149: MACSetWritePtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1
      +                          ul) + sizeof(ETHER_HEADER) + sizeof(IP_HEADER) + 16);
 32185  0135C8  0E12               	movlw	18
 32186  0135CA  0101               	movlb	1	; () banked
 32187  0135CC  6F01               	movwf	(MACSetWritePtr@address+1)& (0+255),b
 32188  0135CE  0ED9               	movlw	217
 32189  0135D0  0101               	movlb	1	; () banked
 32190  0135D2  6F00               	movwf	MACSetWritePtr@address& (0+255),b
 32191  0135D4  ECFE  F0DC         	call	_MACSetWritePtr	;wreg free
 32192                           
 32193                           ;tcp.c: 3150: MACPutArray((uint8_t*)&wVal, sizeof(uint16_t));
 32194  0135D8  0101               	movlb	1	; () banked
 32195  0135DA  0E01               	movlw	high SendTCP@wVal
 32196  0135DC  0101               	movlb	1	; () banked
 32197  0135DE  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 32198  0135E0  0101               	movlb	1	; () banked
 32199  0135E2  0E31               	movlw	low SendTCP@wVal
 32200  0135E4  0101               	movlb	1	; () banked
 32201  0135E6  6F00               	movwf	MACPutArray@val& (0+255),b
 32202  0135E8  0E00               	movlw	0
 32203  0135EA  0101               	movlb	1	; () banked
 32204  0135EC  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 32205  0135EE  0E02               	movlw	2
 32206  0135F0  0101               	movlb	1	; () banked
 32207  0135F2  6F02               	movwf	MACPutArray@len& (0+255),b
 32208  0135F4  ECE4  F0FF         	call	_MACPutArray	;wreg free
 32209                           
 32210                           ;tcp.c: 3153: MACFlush();
 32211  0135F8  ECBD  F0D9         	call	_MACFlush	;wreg free
 32212  0135FC  0012               	return	
 32213  0135FE                     __end_of_SendTCP:
 32214                           	opt stack 0
 32215                           tblptru	equ	0xFF8
 32216                           tblptrh	equ	0xFF7
 32217                           tblptrl	equ	0xFF6
 32218                           tablat	equ	0xFF5
 32219                           prodh	equ	0xFF4
 32220                           prodl	equ	0xFF3
 32221                           intcon	equ	0xFF2
 32222                           indf0	equ	0xFEF
 32223                           postinc0	equ	0xFEE
 32224                           fsr0h	equ	0xFEA
 32225                           fsr0l	equ	0xFE9
 32226                           wreg	equ	0xFE8
 32227                           indf1	equ	0xFE7
 32228                           postinc1	equ	0xFE6
 32229                           postdec1	equ	0xFE5
 32230                           fsr1h	equ	0xFE2
 32231                           fsr1l	equ	0xFE1
 32232                           indf2	equ	0xFDF
 32233                           postinc2	equ	0xFDE
 32234                           postdec2	equ	0xFDD
 32235                           fsr2h	equ	0xFDA
 32236                           fsr2l	equ	0xFD9
 32237                           status	equ	0xFD8
 32238                           
 32239 ;; *************** function _SwapTCPHeader *****************
 32240 ;; Defined at:
 32241 ;;		line 3361 in file "../tcpip/tcp.c"
 32242 ;; Parameters:    Size  Location     Type
 32243 ;;  header          2    5[BANK1 ] PTR struct .
 32244 ;;		 -> SendTCP@header(20), TCPProcess@TCPHeader(20), 
 32245 ;; Auto vars:     Size  Location     Type
 32246 ;;		None
 32247 ;; Return value:  Size  Location     Type
 32248 ;;		None               void
 32249 ;; Registers used:
 32250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32251 ;; Tracked objects:
 32252 ;;		On entry : 0/0
 32253 ;;		On exit  : 0/0
 32254 ;;		Unchanged: 0/0
 32255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32256 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32258 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32259 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32260 ;;Total ram usage:        6 bytes
 32261 ;; Hardware stack levels used:    1
 32262 ;; Hardware stack levels required when called:   11
 32263 ;; This function calls:
 32264 ;;		_swapl
 32265 ;;		_swaps
 32266 ;; This function is called by:
 32267 ;;		_TCPProcess
 32268 ;;		_SendTCP
 32269 ;; This function uses a non-reentrant model
 32270 ;;
 32271                           
 32272                           	psect	text54
 32273  016124                     __ptext54:
 32274                           	opt stack 0
 32275  016124                     _SwapTCPHeader:
 32276                           	opt stack 14
 32277                           
 32278                           ;tcp.c: 3363: header->SourcePort = swaps(header->SourcePort);
 32279                           
 32280                           ;incstack = 0
 32281  016124  C105  FFD9         	movff	SwapTCPHeader@header,fsr2l
 32282  016128  C106  FFDA         	movff	SwapTCPHeader@header+1,fsr2h
 32283  01612C  0101               	movlb	1	; () banked
 32284  01612E  CFDE F100          	movff	postinc2,swaps@v
 32285  016132  0101               	movlb	1	; () banked
 32286  016134  CFDD F101          	movff	postdec2,swaps@v+1
 32287  016138  EC42  F0DC         	call	_swaps	;wreg free
 32288  01613C  C105  FFD9         	movff	SwapTCPHeader@header,fsr2l
 32289  016140  C106  FFDA         	movff	SwapTCPHeader@header+1,fsr2h
 32290  016144  0101               	movlb	1	; () banked
 32291  016146  C100  FFDE         	movff	?_swaps,postinc2
 32292  01614A  0101               	movlb	1	; () banked
 32293  01614C  C101  FFDD         	movff	?_swaps+1,postdec2
 32294                           
 32295                           ; BSR set to: 1
 32296                           ;tcp.c: 3364: header->DestPort = swaps(header->DestPort);
 32297  016150  0101               	movlb	1	; () banked
 32298  016152  EE20 F002          	lfsr	2,2
 32299  016156  0101               	movlb	1	; () banked
 32300  016158  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32301  01615A  26D9               	addwf	fsr2l,f,c
 32302  01615C  0101               	movlb	1	; () banked
 32303  01615E  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32304  016160  22DA               	addwfc	fsr2h,f,c
 32305  016162  0101               	movlb	1	; () banked
 32306  016164  CFDE F100          	movff	postinc2,swaps@v
 32307  016168  0101               	movlb	1	; () banked
 32308  01616A  CFDD F101          	movff	postdec2,swaps@v+1
 32309  01616E  EC42  F0DC         	call	_swaps	;wreg free
 32310  016172  0101               	movlb	1	; () banked
 32311  016174  EE20 F002          	lfsr	2,2
 32312  016178  0101               	movlb	1	; () banked
 32313  01617A  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32314  01617C  26D9               	addwf	fsr2l,f,c
 32315  01617E  0101               	movlb	1	; () banked
 32316  016180  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32317  016182  22DA               	addwfc	fsr2h,f,c
 32318  016184  0101               	movlb	1	; () banked
 32319  016186  C100  FFDE         	movff	?_swaps,postinc2
 32320  01618A  0101               	movlb	1	; () banked
 32321  01618C  C101  FFDD         	movff	?_swaps+1,postdec2
 32322                           
 32323                           ; BSR set to: 1
 32324                           ;tcp.c: 3365: header->SeqNumber = swapl(header->SeqNumber);
 32325  016190  0101               	movlb	1	; () banked
 32326  016192  EE20 F004          	lfsr	2,4
 32327  016196  0101               	movlb	1	; () banked
 32328  016198  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32329  01619A  26D9               	addwf	fsr2l,f,c
 32330  01619C  0101               	movlb	1	; () banked
 32331  01619E  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32332  0161A0  22DA               	addwfc	fsr2h,f,c
 32333  0161A2  0101               	movlb	1	; () banked
 32334  0161A4  CFDE F100          	movff	postinc2,swapl@v
 32335  0161A8  0101               	movlb	1	; () banked
 32336  0161AA  CFDE F101          	movff	postinc2,swapl@v+1
 32337  0161AE  0101               	movlb	1	; () banked
 32338  0161B0  CFDE F102          	movff	postinc2,swapl@v+2
 32339  0161B4  0101               	movlb	1	; () banked
 32340  0161B6  CFDE F103          	movff	postinc2,swapl@v+3
 32341  0161BA  EC02  F0D9         	call	_swapl	;wreg free
 32342  0161BE  C100  F107         	movff	?_swapl,??_SwapTCPHeader
 32343  0161C2  C101  F108         	movff	?_swapl+1,??_SwapTCPHeader+1
 32344  0161C6  C102  F109         	movff	?_swapl+2,??_SwapTCPHeader+2
 32345  0161CA  C103  F10A         	movff	?_swapl+3,??_SwapTCPHeader+3
 32346  0161CE  0101               	movlb	1	; () banked
 32347  0161D0  EE20 F004          	lfsr	2,4
 32348  0161D4  0101               	movlb	1	; () banked
 32349  0161D6  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32350  0161D8  26D9               	addwf	fsr2l,f,c
 32351  0161DA  0101               	movlb	1	; () banked
 32352  0161DC  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32353  0161DE  22DA               	addwfc	fsr2h,f,c
 32354  0161E0  C107  FFDE         	movff	??_SwapTCPHeader,postinc2
 32355  0161E4  C108  FFDE         	movff	??_SwapTCPHeader+1,postinc2
 32356  0161E8  C109  FFDE         	movff	??_SwapTCPHeader+2,postinc2
 32357  0161EC  C10A  FFDD         	movff	??_SwapTCPHeader+3,postdec2
 32358  0161F0  06D9               	decf	fsr2l,f,c
 32359  0161F2  06D9               	decf	fsr2l,f,c
 32360                           
 32361                           ; BSR set to: 1
 32362                           ;tcp.c: 3366: header->AckNumber = swapl(header->AckNumber);
 32363  0161F4  0101               	movlb	1	; () banked
 32364  0161F6  EE20 F008          	lfsr	2,8
 32365  0161FA  0101               	movlb	1	; () banked
 32366  0161FC  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32367  0161FE  26D9               	addwf	fsr2l,f,c
 32368  016200  0101               	movlb	1	; () banked
 32369  016202  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32370  016204  22DA               	addwfc	fsr2h,f,c
 32371  016206  0101               	movlb	1	; () banked
 32372  016208  CFDE F100          	movff	postinc2,swapl@v
 32373  01620C  0101               	movlb	1	; () banked
 32374  01620E  CFDE F101          	movff	postinc2,swapl@v+1
 32375  016212  0101               	movlb	1	; () banked
 32376  016214  CFDE F102          	movff	postinc2,swapl@v+2
 32377  016218  0101               	movlb	1	; () banked
 32378  01621A  CFDE F103          	movff	postinc2,swapl@v+3
 32379  01621E  EC02  F0D9         	call	_swapl	;wreg free
 32380  016222  C100  F107         	movff	?_swapl,??_SwapTCPHeader
 32381  016226  C101  F108         	movff	?_swapl+1,??_SwapTCPHeader+1
 32382  01622A  C102  F109         	movff	?_swapl+2,??_SwapTCPHeader+2
 32383  01622E  C103  F10A         	movff	?_swapl+3,??_SwapTCPHeader+3
 32384  016232  0101               	movlb	1	; () banked
 32385  016234  EE20 F008          	lfsr	2,8
 32386  016238  0101               	movlb	1	; () banked
 32387  01623A  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32388  01623C  26D9               	addwf	fsr2l,f,c
 32389  01623E  0101               	movlb	1	; () banked
 32390  016240  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32391  016242  22DA               	addwfc	fsr2h,f,c
 32392  016244  C107  FFDE         	movff	??_SwapTCPHeader,postinc2
 32393  016248  C108  FFDE         	movff	??_SwapTCPHeader+1,postinc2
 32394  01624C  C109  FFDE         	movff	??_SwapTCPHeader+2,postinc2
 32395  016250  C10A  FFDD         	movff	??_SwapTCPHeader+3,postdec2
 32396  016254  06D9               	decf	fsr2l,f,c
 32397  016256  06D9               	decf	fsr2l,f,c
 32398                           
 32399                           ; BSR set to: 1
 32400                           ;tcp.c: 3367: header->Window = swaps(header->Window);
 32401  016258  0101               	movlb	1	; () banked
 32402  01625A  EE20 F00E          	lfsr	2,14
 32403  01625E  0101               	movlb	1	; () banked
 32404  016260  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32405  016262  26D9               	addwf	fsr2l,f,c
 32406  016264  0101               	movlb	1	; () banked
 32407  016266  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32408  016268  22DA               	addwfc	fsr2h,f,c
 32409  01626A  0101               	movlb	1	; () banked
 32410  01626C  CFDE F100          	movff	postinc2,swaps@v
 32411  016270  0101               	movlb	1	; () banked
 32412  016272  CFDD F101          	movff	postdec2,swaps@v+1
 32413  016276  EC42  F0DC         	call	_swaps	;wreg free
 32414  01627A  0101               	movlb	1	; () banked
 32415  01627C  EE20 F00E          	lfsr	2,14
 32416  016280  0101               	movlb	1	; () banked
 32417  016282  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32418  016284  26D9               	addwf	fsr2l,f,c
 32419  016286  0101               	movlb	1	; () banked
 32420  016288  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32421  01628A  22DA               	addwfc	fsr2h,f,c
 32422  01628C  0101               	movlb	1	; () banked
 32423  01628E  C100  FFDE         	movff	?_swaps,postinc2
 32424  016292  0101               	movlb	1	; () banked
 32425  016294  C101  FFDD         	movff	?_swaps+1,postdec2
 32426                           
 32427                           ; BSR set to: 1
 32428                           ;tcp.c: 3368: header->Checksum = swaps(header->Checksum);
 32429  016298  0101               	movlb	1	; () banked
 32430  01629A  EE20 F010          	lfsr	2,16
 32431  01629E  0101               	movlb	1	; () banked
 32432  0162A0  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32433  0162A2  26D9               	addwf	fsr2l,f,c
 32434  0162A4  0101               	movlb	1	; () banked
 32435  0162A6  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32436  0162A8  22DA               	addwfc	fsr2h,f,c
 32437  0162AA  0101               	movlb	1	; () banked
 32438  0162AC  CFDE F100          	movff	postinc2,swaps@v
 32439  0162B0  0101               	movlb	1	; () banked
 32440  0162B2  CFDD F101          	movff	postdec2,swaps@v+1
 32441  0162B6  EC42  F0DC         	call	_swaps	;wreg free
 32442  0162BA  0101               	movlb	1	; () banked
 32443  0162BC  EE20 F010          	lfsr	2,16
 32444  0162C0  0101               	movlb	1	; () banked
 32445  0162C2  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32446  0162C4  26D9               	addwf	fsr2l,f,c
 32447  0162C6  0101               	movlb	1	; () banked
 32448  0162C8  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32449  0162CA  22DA               	addwfc	fsr2h,f,c
 32450  0162CC  0101               	movlb	1	; () banked
 32451  0162CE  C100  FFDE         	movff	?_swaps,postinc2
 32452  0162D2  0101               	movlb	1	; () banked
 32453  0162D4  C101  FFDD         	movff	?_swaps+1,postdec2
 32454                           
 32455                           ; BSR set to: 1
 32456                           ;tcp.c: 3369: header->UrgentPointer = swaps(header->UrgentPointer);
 32457  0162D8  0101               	movlb	1	; () banked
 32458  0162DA  EE20 F012          	lfsr	2,18
 32459  0162DE  0101               	movlb	1	; () banked
 32460  0162E0  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32461  0162E2  26D9               	addwf	fsr2l,f,c
 32462  0162E4  0101               	movlb	1	; () banked
 32463  0162E6  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32464  0162E8  22DA               	addwfc	fsr2h,f,c
 32465  0162EA  0101               	movlb	1	; () banked
 32466  0162EC  CFDE F100          	movff	postinc2,swaps@v
 32467  0162F0  0101               	movlb	1	; () banked
 32468  0162F2  CFDD F101          	movff	postdec2,swaps@v+1
 32469  0162F6  EC42  F0DC         	call	_swaps	;wreg free
 32470  0162FA  0101               	movlb	1	; () banked
 32471  0162FC  EE20 F012          	lfsr	2,18
 32472  016300  0101               	movlb	1	; () banked
 32473  016302  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32474  016304  26D9               	addwf	fsr2l,f,c
 32475  016306  0101               	movlb	1	; () banked
 32476  016308  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32477  01630A  22DA               	addwfc	fsr2h,f,c
 32478  01630C  0101               	movlb	1	; () banked
 32479  01630E  C100  FFDE         	movff	?_swaps,postinc2
 32480  016312  0101               	movlb	1	; () banked
 32481  016314  C101  FFDD         	movff	?_swaps+1,postdec2
 32482                           
 32483                           ; BSR set to: 1
 32484  016318  0012               	return	
 32485  01631A                     __end_of_SwapTCPHeader:
 32486                           	opt stack 0
 32487                           tblptru	equ	0xFF8
 32488                           tblptrh	equ	0xFF7
 32489                           tblptrl	equ	0xFF6
 32490                           tablat	equ	0xFF5
 32491                           prodh	equ	0xFF4
 32492                           prodl	equ	0xFF3
 32493                           intcon	equ	0xFF2
 32494                           indf0	equ	0xFEF
 32495                           postinc0	equ	0xFEE
 32496                           fsr0h	equ	0xFEA
 32497                           fsr0l	equ	0xFE9
 32498                           wreg	equ	0xFE8
 32499                           indf1	equ	0xFE7
 32500                           postinc1	equ	0xFE6
 32501                           postdec1	equ	0xFE5
 32502                           fsr1h	equ	0xFE2
 32503                           fsr1l	equ	0xFE1
 32504                           indf2	equ	0xFDF
 32505                           postinc2	equ	0xFDE
 32506                           postdec2	equ	0xFDD
 32507                           fsr2h	equ	0xFDA
 32508                           fsr2l	equ	0xFD9
 32509                           status	equ	0xFD8
 32510                           
 32511 ;; *************** function _swapl *****************
 32512 ;; Defined at:
 32513 ;;		line 1103 in file "../tcpip/helpers.c"
 32514 ;; Parameters:    Size  Location     Type
 32515 ;;  v               4    0[BANK1 ] unsigned long 
 32516 ;; Auto vars:     Size  Location     Type
 32517 ;;		None
 32518 ;; Return value:  Size  Location     Type
 32519 ;;                  4    0[BANK1 ] unsigned long 
 32520 ;; Registers used:
 32521 ;;		wreg, status,2, status,0
 32522 ;; Tracked objects:
 32523 ;;		On entry : 0/0
 32524 ;;		On exit  : 0/0
 32525 ;;		Unchanged: 0/0
 32526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32527 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32530 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32531 ;;Total ram usage:        4 bytes
 32532 ;; Hardware stack levels used:    1
 32533 ;; Hardware stack levels required when called:   10
 32534 ;; This function calls:
 32535 ;;		Nothing
 32536 ;; This function is called by:
 32537 ;;		_SwapTCPHeader
 32538 ;; This function uses a non-reentrant model
 32539 ;;
 32540                           
 32541                           	psect	text55
 32542  01B204                     __ptext55:
 32543                           	opt stack 0
 32544  01B204                     _swapl:
 32545                           	opt stack 14
 32546                           
 32547                           ;helpers.c: 1107: ((TCPIP_UINT32_VAL*)&v)->v[0] ^= ((TCPIP_UINT32_VAL*)&v)->v[3];
 32548                           
 32549                           ; BSR set to: 1
 32550                           ;incstack = 0
 32551  01B204  0101               	movlb	1	; () banked
 32552  01B206  5103               	movf	(swapl@v+3)& (0+255),w,b
 32553  01B208  0101               	movlb	1	; () banked
 32554  01B20A  1B00               	xorwf	swapl@v& (0+255),f,b
 32555                           
 32556                           ;helpers.c: 1108: ((TCPIP_UINT32_VAL*)&v)->v[3] ^= ((TCPIP_UINT32_VAL*)&v)->v[0];
 32557  01B20C  0101               	movlb	1	; () banked
 32558  01B20E  5100               	movf	swapl@v& (0+255),w,b
 32559  01B210  0101               	movlb	1	; () banked
 32560  01B212  1B03               	xorwf	(swapl@v+3)& (0+255),f,b
 32561                           
 32562                           ;helpers.c: 1109: ((TCPIP_UINT32_VAL*)&v)->v[0] ^= ((TCPIP_UINT32_VAL*)&v)->v[3];
 32563  01B214  0101               	movlb	1	; () banked
 32564  01B216  5103               	movf	(swapl@v+3)& (0+255),w,b
 32565  01B218  0101               	movlb	1	; () banked
 32566  01B21A  1B00               	xorwf	swapl@v& (0+255),f,b
 32567                           
 32568                           ;helpers.c: 1112: ((TCPIP_UINT32_VAL*)&v)->v[1] ^= ((TCPIP_UINT32_VAL*)&v)->v[2];
 32569  01B21C  0101               	movlb	1	; () banked
 32570  01B21E  5102               	movf	(swapl@v+2)& (0+255),w,b
 32571  01B220  0101               	movlb	1	; () banked
 32572  01B222  1B01               	xorwf	(swapl@v+1)& (0+255),f,b
 32573                           
 32574                           ;helpers.c: 1113: ((TCPIP_UINT32_VAL*)&v)->v[2] ^= ((TCPIP_UINT32_VAL*)&v)->v[1];
 32575  01B224  0101               	movlb	1	; () banked
 32576  01B226  5101               	movf	(swapl@v+1)& (0+255),w,b
 32577  01B228  0101               	movlb	1	; () banked
 32578  01B22A  1B02               	xorwf	(swapl@v+2)& (0+255),f,b
 32579                           
 32580                           ;helpers.c: 1114: ((TCPIP_UINT32_VAL*)&v)->v[1] ^= ((TCPIP_UINT32_VAL*)&v)->v[2];
 32581  01B22C  0101               	movlb	1	; () banked
 32582  01B22E  5102               	movf	(swapl@v+2)& (0+255),w,b
 32583  01B230  0101               	movlb	1	; () banked
 32584  01B232  1B01               	xorwf	(swapl@v+1)& (0+255),f,b
 32585                           
 32586                           ; BSR set to: 1
 32587                           ;helpers.c: 1116: return v;
 32588  01B234  C100  F100         	movff	swapl@v,?_swapl
 32589  01B238  C101  F101         	movff	swapl@v+1,?_swapl+1
 32590  01B23C  C102  F102         	movff	swapl@v+2,?_swapl+2
 32591  01B240  C103  F103         	movff	swapl@v+3,?_swapl+3
 32592  01B244  0012               	return	
 32593  01B246                     __end_of_swapl:
 32594                           	opt stack 0
 32595                           tblptru	equ	0xFF8
 32596                           tblptrh	equ	0xFF7
 32597                           tblptrl	equ	0xFF6
 32598                           tablat	equ	0xFF5
 32599                           prodh	equ	0xFF4
 32600                           prodl	equ	0xFF3
 32601                           intcon	equ	0xFF2
 32602                           indf0	equ	0xFEF
 32603                           postinc0	equ	0xFEE
 32604                           fsr0h	equ	0xFEA
 32605                           fsr0l	equ	0xFE9
 32606                           wreg	equ	0xFE8
 32607                           indf1	equ	0xFE7
 32608                           postinc1	equ	0xFE6
 32609                           postdec1	equ	0xFE5
 32610                           fsr1h	equ	0xFE2
 32611                           fsr1l	equ	0xFE1
 32612                           indf2	equ	0xFDF
 32613                           postinc2	equ	0xFDE
 32614                           postdec2	equ	0xFDD
 32615                           fsr2h	equ	0xFDA
 32616                           fsr2l	equ	0xFD9
 32617                           status	equ	0xFD8
 32618                           
 32619 ;; *************** function _MACGetFreeRxSize *****************
 32620 ;; Defined at:
 32621 ;;		line 371 in file "../tcpip/ETH97J60.c"
 32622 ;; Parameters:    Size  Location     Type
 32623 ;;		None
 32624 ;; Auto vars:     Size  Location     Type
 32625 ;;  ReadPT          2    6[BANK1 ] struct .
 32626 ;;  WritePT         2    4[BANK1 ] struct .
 32627 ;; Return value:  Size  Location     Type
 32628 ;;                  2    0[BANK1 ] unsigned int 
 32629 ;; Registers used:
 32630 ;;		wreg, status,2, status,0
 32631 ;; Tracked objects:
 32632 ;;		On entry : 0/0
 32633 ;;		On exit  : 0/0
 32634 ;;		Unchanged: 0/0
 32635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32636 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32637 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32638 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32639 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32640 ;;Total ram usage:        8 bytes
 32641 ;; Hardware stack levels used:    1
 32642 ;; Hardware stack levels required when called:   10
 32643 ;; This function calls:
 32644 ;;		Nothing
 32645 ;; This function is called by:
 32646 ;;		_SendTCP
 32647 ;; This function uses a non-reentrant model
 32648 ;;
 32649                           
 32650                           	psect	text56
 32651  019562                     __ptext56:
 32652                           	opt stack 0
 32653  019562                     _MACGetFreeRxSize:
 32654                           	opt stack 15
 32655  019562                     l276:
 32656                           
 32657                           ;ETH97J60.c: 381: ReadPT.v[0] = EPKTCNT;
 32658  019562  CED9 F106          	movff	3801,MACGetFreeRxSize@ReadPT	;volatile
 32659                           
 32660                           ;ETH97J60.c: 383: WritePT.Val = ERXWRPT;
 32661  019566  CEEE F104          	movff	3822,MACGetFreeRxSize@WritePT	;volatile
 32662  01956A  CEEF F105          	movff	3823,MACGetFreeRxSize@WritePT+1	;volatile
 32663                           
 32664                           ;ETH97J60.c: 384: } while(EPKTCNT != ReadPT.v[0]);
 32665  01956E  010E               	movlb	14	; () banked
 32666  019570  51D9               	movf	217,w,b	;volatile
 32667  019572  0101               	movlb	1	; () banked
 32668  019574  6306               	cpfseq	MACGetFreeRxSize@ReadPT& (0+255),b
 32669  019576  D7F5               	goto	l276
 32670                           
 32671                           ; BSR set to: 1
 32672                           ;ETH97J60.c: 387: ReadPT.Val = ERXRDPT;
 32673  019578  CEEC F106          	movff	3820,MACGetFreeRxSize@ReadPT	;volatile
 32674  01957C  CEED F107          	movff	3821,MACGetFreeRxSize@ReadPT+1	;volatile
 32675                           
 32676                           ; BSR set to: 1
 32677                           ;ETH97J60.c: 392: if(WritePT.Val > ReadPT.Val)
 32678  019580  0101               	movlb	1	; () banked
 32679  019582  5104               	movf	MACGetFreeRxSize@WritePT& (0+255),w,b
 32680  019584  0101               	movlb	1	; () banked
 32681  019586  5D06               	subwf	MACGetFreeRxSize@ReadPT& (0+255),w,b
 32682  019588  0101               	movlb	1	; () banked
 32683  01958A  5105               	movf	(MACGetFreeRxSize@WritePT+1)& (0+255),w,b
 32684  01958C  0101               	movlb	1	; () banked
 32685  01958E  5907               	subwfb	(MACGetFreeRxSize@ReadPT+1)& (0+255),w,b
 32686  019590  B0D8               	btfsc	status,0,c
 32687  019592  D023               	goto	l10852
 32688                           
 32689                           ; BSR set to: 1
 32690                           ;ETH97J60.c: 393: {
 32691                           ;ETH97J60.c: 394: return (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) 
      +                          | 0x0001ul) - (0ul)) - (WritePT.Val - ReadPT.Val);
 32692  019594  0101               	movlb	1	; () banked
 32693  019596  C106  F102         	movff	MACGetFreeRxSize@ReadPT,??_MACGetFreeRxSize
 32694  01959A  0101               	movlb	1	; () banked
 32695  01959C  C107  F103         	movff	MACGetFreeRxSize@ReadPT+1,??_MACGetFreeRxSize+1
 32696  0195A0  0101               	movlb	1	; () banked
 32697  0195A2  1F02               	comf	??_MACGetFreeRxSize& (0+255),f,b
 32698  0195A4  1F03               	comf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32699  0195A6  4B02               	infsnz	??_MACGetFreeRxSize& (0+255),f,b
 32700  0195A8  2B03               	incf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32701  0195AA  0101               	movlb	1	; () banked
 32702  0195AC  5104               	movf	MACGetFreeRxSize@WritePT& (0+255),w,b
 32703  0195AE  0101               	movlb	1	; () banked
 32704  0195B0  2702               	addwf	??_MACGetFreeRxSize& (0+255),f,b
 32705  0195B2  0101               	movlb	1	; () banked
 32706  0195B4  5105               	movf	(MACGetFreeRxSize@WritePT+1)& (0+255),w,b
 32707  0195B6  0101               	movlb	1	; () banked
 32708  0195B8  2303               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32709  0195BA  0101               	movlb	1	; () banked
 32710  0195BC  1F02               	comf	??_MACGetFreeRxSize& (0+255),f,b
 32711  0195BE  1F03               	comf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32712  0195C0  4B02               	infsnz	??_MACGetFreeRxSize& (0+255),f,b
 32713  0195C2  2B03               	incf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32714  0195C4  0EA5               	movlw	165
 32715  0195C6  0101               	movlb	1	; () banked
 32716  0195C8  2502               	addwf	??_MACGetFreeRxSize& (0+255),w,b
 32717  0195CA  0101               	movlb	1	; () banked
 32718  0195CC  6F00               	movwf	?_MACGetFreeRxSize& (0+255),b
 32719  0195CE  0E12               	movlw	18
 32720  0195D0  0101               	movlb	1	; () banked
 32721  0195D2  2103               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),w,b
 32722  0195D4  0101               	movlb	1	; () banked
 32723  0195D6  6F01               	movwf	(?_MACGetFreeRxSize+1)& (0+255),b
 32724  0195D8  0012               	return	
 32725  0195DA                     l10852:
 32726                           
 32727                           ; BSR set to: 1
 32728                           ;ETH97J60.c: 396: else if(WritePT.Val == ReadPT.Val)
 32729  0195DA  0101               	movlb	1	; () banked
 32730  0195DC  5107               	movf	(MACGetFreeRxSize@ReadPT+1)& (0+255),w,b
 32731  0195DE  0101               	movlb	1	; () banked
 32732  0195E0  1905               	xorwf	(MACGetFreeRxSize@WritePT+1)& (0+255),w,b
 32733  0195E2  E104               	bnz	u11695
 32734  0195E4  0101               	movlb	1	; () banked
 32735  0195E6  5106               	movf	MACGetFreeRxSize@ReadPT& (0+255),w,b
 32736  0195E8  0101               	movlb	1	; () banked
 32737  0195EA  1904               	xorwf	MACGetFreeRxSize@WritePT& (0+255),w,b
 32738  0195EC                     u11695:
 32739  0195EC  A4D8               	btfss	status,2,c
 32740  0195EE  D007               	goto	l10860
 32741                           
 32742                           ; BSR set to: 1
 32743                           ;ETH97J60.c: 397: {
 32744                           ;ETH97J60.c: 398: return (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) 
      +                          | 0x0001ul)-(0ul)+1ul) - 1;
 32745  0195F0  0E12               	movlw	18
 32746  0195F2  0101               	movlb	1	; () banked
 32747  0195F4  6F01               	movwf	(?_MACGetFreeRxSize+1)& (0+255),b
 32748  0195F6  0EA5               	movlw	165
 32749  0195F8  0101               	movlb	1	; () banked
 32750  0195FA  6F00               	movwf	?_MACGetFreeRxSize& (0+255),b
 32751  0195FC  0012               	return	
 32752  0195FE                     l10860:
 32753                           
 32754                           ; BSR set to: 1
 32755                           ;ETH97J60.c: 400: else
 32756                           ;ETH97J60.c: 401: {
 32757                           ;ETH97J60.c: 402: return ReadPT.Val - WritePT.Val - 1;
 32758  0195FE  0101               	movlb	1	; () banked
 32759  019600  C104  F102         	movff	MACGetFreeRxSize@WritePT,??_MACGetFreeRxSize
 32760  019604  0101               	movlb	1	; () banked
 32761  019606  C105  F103         	movff	MACGetFreeRxSize@WritePT+1,??_MACGetFreeRxSize+1
 32762  01960A  0101               	movlb	1	; () banked
 32763  01960C  1F02               	comf	??_MACGetFreeRxSize& (0+255),f,b
 32764  01960E  1F03               	comf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32765  019610  4B02               	infsnz	??_MACGetFreeRxSize& (0+255),f,b
 32766  019612  2B03               	incf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32767  019614  0101               	movlb	1	; () banked
 32768  019616  5106               	movf	MACGetFreeRxSize@ReadPT& (0+255),w,b
 32769  019618  0101               	movlb	1	; () banked
 32770  01961A  2702               	addwf	??_MACGetFreeRxSize& (0+255),f,b
 32771  01961C  0101               	movlb	1	; () banked
 32772  01961E  5107               	movf	(MACGetFreeRxSize@ReadPT+1)& (0+255),w,b
 32773  019620  0101               	movlb	1	; () banked
 32774  019622  2303               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32775  019624  0EFF               	movlw	255
 32776  019626  0101               	movlb	1	; () banked
 32777  019628  2502               	addwf	??_MACGetFreeRxSize& (0+255),w,b
 32778  01962A  0101               	movlb	1	; () banked
 32779  01962C  6F00               	movwf	?_MACGetFreeRxSize& (0+255),b
 32780  01962E  0EFF               	movlw	255
 32781  019630  0101               	movlb	1	; () banked
 32782  019632  2103               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),w,b
 32783  019634  0101               	movlb	1	; () banked
 32784  019636  6F01               	movwf	(?_MACGetFreeRxSize+1)& (0+255),b
 32785  019638  0012               	return	
 32786  01963A                     __end_of_MACGetFreeRxSize:
 32787                           	opt stack 0
 32788                           tblptru	equ	0xFF8
 32789                           tblptrh	equ	0xFF7
 32790                           tblptrl	equ	0xFF6
 32791                           tablat	equ	0xFF5
 32792                           prodh	equ	0xFF4
 32793                           prodl	equ	0xFF3
 32794                           intcon	equ	0xFF2
 32795                           indf0	equ	0xFEF
 32796                           postinc0	equ	0xFEE
 32797                           fsr0h	equ	0xFEA
 32798                           fsr0l	equ	0xFE9
 32799                           wreg	equ	0xFE8
 32800                           indf1	equ	0xFE7
 32801                           postinc1	equ	0xFE6
 32802                           postdec1	equ	0xFE5
 32803                           fsr1h	equ	0xFE2
 32804                           fsr1l	equ	0xFE1
 32805                           indf2	equ	0xFDF
 32806                           postinc2	equ	0xFDE
 32807                           postdec2	equ	0xFDD
 32808                           fsr2h	equ	0xFDA
 32809                           fsr2l	equ	0xFD9
 32810                           status	equ	0xFD8
 32811                           
 32812 ;; *************** function _IPPutHeader *****************
 32813 ;; Defined at:
 32814 ;;		line 234 in file "../tcpip/ip.c"
 32815 ;; Parameters:    Size  Location     Type
 32816 ;;  remote          2   14[BANK1 ] PTR struct .
 32817 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 32818 ;;  protocol        1   16[BANK1 ] unsigned char 
 32819 ;;  len             2   17[BANK1 ] unsigned int 
 32820 ;; Auto vars:     Size  Location     Type
 32821 ;;  header         20   19[BANK1 ] struct _IP_HEADER
 32822 ;; Return value:  Size  Location     Type
 32823 ;;                  2   14[BANK1 ] unsigned int 
 32824 ;; Registers used:
 32825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32826 ;; Tracked objects:
 32827 ;;		On entry : 0/0
 32828 ;;		On exit  : 0/0
 32829 ;;		Unchanged: 0/0
 32830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32831 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32832 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32834 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32835 ;;Total ram usage:       25 bytes
 32836 ;; Hardware stack levels used:    1
 32837 ;; Hardware stack levels required when called:   12
 32838 ;; This function calls:
 32839 ;;		_CalcIPChecksum
 32840 ;;		_MACPutArray
 32841 ;;		_MACPutHeader
 32842 ;;		_SwapIPHeader
 32843 ;; This function is called by:
 32844 ;;		_SendTCP
 32845 ;; This function uses a non-reentrant model
 32846 ;;
 32847                           
 32848                           	psect	text57
 32849  018584                     __ptext57:
 32850                           	opt stack 0
 32851  018584                     _IPPutHeader:
 32852                           	opt stack 13
 32853                           
 32854                           ;ip.c: 238: IP_HEADER header;
 32855                           ;ip.c: 240: IPHeaderLen = sizeof(IP_HEADER);
 32856                           
 32857                           ; BSR set to: 1
 32858                           ;incstack = 0
 32859  018584  0E14               	movlw	20
 32860  018586  0101               	movlb	1	; () banked
 32861  018588  6FB5               	movwf	_IPHeaderLen& (0+255),b
 32862                           
 32863                           ;ip.c: 242: header.VersionIHL = (0x40u) | (0x05);
 32864  01858A  0E45               	movlw	69
 32865  01858C  0101               	movlb	1	; () banked
 32866  01858E  6F13               	movwf	IPPutHeader@header& (0+255),b
 32867                           
 32868                           ;ip.c: 243: header.TypeOfService = ((0x00) | (0x00));
 32869  018590  0E00               	movlw	0
 32870  018592  0101               	movlb	1	; () banked
 32871  018594  6F14               	movwf	(IPPutHeader@header+1)& (0+255),b
 32872                           
 32873                           ; BSR set to: 1
 32874                           ;ip.c: 244: header.TotalLength = sizeof(header) + len;
 32875  018596  0E14               	movlw	20
 32876  018598  0101               	movlb	1	; () banked
 32877  01859A  2511               	addwf	IPPutHeader@len& (0+255),w,b
 32878  01859C  0101               	movlb	1	; () banked
 32879  01859E  6F15               	movwf	(IPPutHeader@header+2)& (0+255),b
 32880  0185A0  0E00               	movlw	0
 32881  0185A2  0101               	movlb	1	; () banked
 32882  0185A4  2112               	addwfc	(IPPutHeader@len+1)& (0+255),w,b
 32883  0185A6  0101               	movlb	1	; () banked
 32884  0185A8  6F16               	movwf	(IPPutHeader@header+3)& (0+255),b
 32885                           
 32886                           ; BSR set to: 1
 32887                           ;ip.c: 245: header.Identification = ++_Identifier;
 32888  0185AA  0100               	movlb	0	; () banked
 32889  0185AC  4BE7               	infsnz	__Identifier& (0+255),f,b
 32890  0185AE  2BE8               	incf	(__Identifier+1)& (0+255),f,b
 32891  0185B0  C0E7  F117         	movff	__Identifier,IPPutHeader@header+4
 32892  0185B4  C0E8  F118         	movff	__Identifier+1,IPPutHeader@header+5
 32893                           
 32894                           ; BSR set to: 0
 32895                           ;ip.c: 246: header.FragmentInfo = 0;
 32896  0185B8  0E00               	movlw	0
 32897  0185BA  0101               	movlb	1	; () banked
 32898  0185BC  6F1A               	movwf	(IPPutHeader@header+7)& (0+255),b
 32899  0185BE  0E00               	movlw	0
 32900  0185C0  0101               	movlb	1	; () banked
 32901  0185C2  6F19               	movwf	(IPPutHeader@header+6)& (0+255),b
 32902                           
 32903                           ; BSR set to: 1
 32904                           ;ip.c: 247: header.TimeToLive = (100);
 32905  0185C4  0E64               	movlw	100
 32906  0185C6  0101               	movlb	1	; () banked
 32907  0185C8  6F1B               	movwf	(IPPutHeader@header+8)& (0+255),b
 32908                           
 32909                           ; BSR set to: 1
 32910                           ;ip.c: 248: header.Protocol = protocol;
 32911  0185CA  C110  F11C         	movff	IPPutHeader@protocol,IPPutHeader@header+9
 32912                           
 32913                           ; BSR set to: 1
 32914                           ;ip.c: 249: header.HeaderChecksum = 0;
 32915  0185CE  0E00               	movlw	0
 32916  0185D0  0101               	movlb	1	; () banked
 32917  0185D2  6F1E               	movwf	(IPPutHeader@header+11)& (0+255),b
 32918  0185D4  0E00               	movlw	0
 32919  0185D6  0101               	movlb	1	; () banked
 32920  0185D8  6F1D               	movwf	(IPPutHeader@header+10)& (0+255),b
 32921                           
 32922                           ; BSR set to: 1
 32923                           ;ip.c: 250: header.SourceAddress = AppConfig.MyIPAddr;
 32924  0185DA  C23C  F11F         	movff	_AppConfig,IPPutHeader@header+12
 32925  0185DE  C23D  F120         	movff	_AppConfig+1,IPPutHeader@header+13
 32926  0185E2  C23E  F121         	movff	_AppConfig+2,IPPutHeader@header+14
 32927  0185E6  C23F  F122         	movff	_AppConfig+3,IPPutHeader@header+15
 32928                           
 32929                           ; BSR set to: 1
 32930                           ;ip.c: 252: header.DestAddress.Val = remote->IPAddr.Val;
 32931  0185EA  C10E  FFD9         	movff	IPPutHeader@remote,fsr2l
 32932  0185EE  C10F  FFDA         	movff	IPPutHeader@remote+1,fsr2h
 32933  0185F2  0101               	movlb	1	; () banked
 32934  0185F4  CFDE F123          	movff	postinc2,IPPutHeader@header+16
 32935  0185F8  0101               	movlb	1	; () banked
 32936  0185FA  CFDE F124          	movff	postinc2,IPPutHeader@header+17
 32937  0185FE  0101               	movlb	1	; () banked
 32938  018600  CFDE F125          	movff	postinc2,IPPutHeader@header+18
 32939  018604  0101               	movlb	1	; () banked
 32940  018606  CFDE F126          	movff	postinc2,IPPutHeader@header+19
 32941                           
 32942                           ; BSR set to: 1
 32943                           ;ip.c: 254: SwapIPHeader(&header);
 32944  01860A  0101               	movlb	1	; () banked
 32945  01860C  0E01               	movlw	high IPPutHeader@header
 32946  01860E  0101               	movlb	1	; () banked
 32947  018610  6F06               	movwf	(SwapIPHeader@h+1)& (0+255),b
 32948  018612  0101               	movlb	1	; () banked
 32949  018614  0E13               	movlw	low IPPutHeader@header
 32950  018616  0101               	movlb	1	; () banked
 32951  018618  6F05               	movwf	SwapIPHeader@h& (0+255),b
 32952  01861A  EC28  F0CF         	call	_SwapIPHeader	;wreg free
 32953                           
 32954                           ;ip.c: 256: header.HeaderChecksum = CalcIPChecksum((uint8_t*)&header, sizeof(header));
 32955  01861E  0101               	movlb	1	; () banked
 32956  018620  0E01               	movlw	high IPPutHeader@header
 32957  018622  0101               	movlb	1	; () banked
 32958  018624  6F01               	movwf	(CalcIPChecksum@buffer+1)& (0+255),b
 32959  018626  0101               	movlb	1	; () banked
 32960  018628  0E13               	movlw	low IPPutHeader@header
 32961  01862A  0101               	movlb	1	; () banked
 32962  01862C  6F00               	movwf	CalcIPChecksum@buffer& (0+255),b
 32963  01862E  0E00               	movlw	0
 32964  018630  0101               	movlb	1	; () banked
 32965  018632  6F03               	movwf	(CalcIPChecksum@count+1)& (0+255),b
 32966  018634  0E14               	movlw	20
 32967  018636  0101               	movlb	1	; () banked
 32968  018638  6F02               	movwf	CalcIPChecksum@count& (0+255),b
 32969  01863A  EC77  F0C7         	call	_CalcIPChecksum	;wreg free
 32970  01863E  0101               	movlb	1	; () banked
 32971  018640  C100  F11D         	movff	?_CalcIPChecksum,IPPutHeader@header+10
 32972  018644  0101               	movlb	1	; () banked
 32973  018646  C101  F11E         	movff	?_CalcIPChecksum+1,IPPutHeader@header+11
 32974                           
 32975                           ; BSR set to: 1
 32976                           ;ip.c: 258: MACPutHeader(&remote->MACAddr, (0x00u), (sizeof(header)+len));
 32977  01864A  0E04               	movlw	4
 32978  01864C  0101               	movlb	1	; () banked
 32979  01864E  250E               	addwf	IPPutHeader@remote& (0+255),w,b
 32980  018650  0101               	movlb	1	; () banked
 32981  018652  6F04               	movwf	MACPutHeader@remote& (0+255),b
 32982  018654  0E00               	movlw	0
 32983  018656  0101               	movlb	1	; () banked
 32984  018658  210F               	addwfc	(IPPutHeader@remote+1)& (0+255),w,b
 32985  01865A  0101               	movlb	1	; () banked
 32986  01865C  6F05               	movwf	(MACPutHeader@remote+1)& (0+255),b
 32987  01865E  0E00               	movlw	0
 32988  018660  0101               	movlb	1	; () banked
 32989  018662  6F06               	movwf	MACPutHeader@type& (0+255),b
 32990  018664  0E14               	movlw	20
 32991  018666  0101               	movlb	1	; () banked
 32992  018668  2511               	addwf	IPPutHeader@len& (0+255),w,b
 32993  01866A  0101               	movlb	1	; () banked
 32994  01866C  6F07               	movwf	MACPutHeader@dataLen& (0+255),b
 32995  01866E  0E00               	movlw	0
 32996  018670  0101               	movlb	1	; () banked
 32997  018672  2112               	addwfc	(IPPutHeader@len+1)& (0+255),w,b
 32998  018674  0101               	movlb	1	; () banked
 32999  018676  6F08               	movwf	(MACPutHeader@dataLen+1)& (0+255),b
 33000  018678  EC9E  F0D3         	call	_MACPutHeader	;wreg free
 33001                           
 33002                           ;ip.c: 259: MACPutArray((uint8_t*)&header, sizeof(header));
 33003  01867C  0101               	movlb	1	; () banked
 33004  01867E  0E01               	movlw	high IPPutHeader@header
 33005  018680  0101               	movlb	1	; () banked
 33006  018682  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 33007  018684  0101               	movlb	1	; () banked
 33008  018686  0E13               	movlw	low IPPutHeader@header
 33009  018688  0101               	movlb	1	; () banked
 33010  01868A  6F00               	movwf	MACPutArray@val& (0+255),b
 33011  01868C  0E00               	movlw	0
 33012  01868E  0101               	movlb	1	; () banked
 33013  018690  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 33014  018692  0E14               	movlw	20
 33015  018694  0101               	movlb	1	; () banked
 33016  018696  6F02               	movwf	MACPutArray@len& (0+255),b
 33017  018698  ECE4  F0FF         	call	_MACPutArray	;wreg free
 33018  01869C  0012               	return	
 33019  01869E                     __end_of_IPPutHeader:
 33020                           	opt stack 0
 33021                           tblptru	equ	0xFF8
 33022                           tblptrh	equ	0xFF7
 33023                           tblptrl	equ	0xFF6
 33024                           tablat	equ	0xFF5
 33025                           prodh	equ	0xFF4
 33026                           prodl	equ	0xFF3
 33027                           intcon	equ	0xFF2
 33028                           indf0	equ	0xFEF
 33029                           postinc0	equ	0xFEE
 33030                           fsr0h	equ	0xFEA
 33031                           fsr0l	equ	0xFE9
 33032                           wreg	equ	0xFE8
 33033                           indf1	equ	0xFE7
 33034                           postinc1	equ	0xFE6
 33035                           postdec1	equ	0xFE5
 33036                           fsr1h	equ	0xFE2
 33037                           fsr1l	equ	0xFE1
 33038                           indf2	equ	0xFDF
 33039                           postinc2	equ	0xFDE
 33040                           postdec2	equ	0xFDD
 33041                           fsr2h	equ	0xFDA
 33042                           fsr2l	equ	0xFD9
 33043                           status	equ	0xFD8
 33044                           
 33045 ;; *************** function _CalcIPChecksum *****************
 33046 ;; Defined at:
 33047 ;;		line 1146 in file "../tcpip/helpers.c"
 33048 ;; Parameters:    Size  Location     Type
 33049 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 33050 ;;		 -> SendTCP@pseudoHeader(12), TCPProcess@pseudoHeader(12), IPPutHeader@header(20), 
 33051 ;;  count           2    2[BANK1 ] unsigned int 
 33052 ;; Auto vars:     Size  Location     Type
 33053 ;;  sum             4   10[BANK1 ] struct .
 33054 ;;  val             2    8[BANK1 ] PTR unsigned int 
 33055 ;;		 -> SendTCP@pseudoHeader(12), TCPProcess@pseudoHeader(12), IPPutHeader@header(20), 
 33056 ;;  i               2    6[BANK1 ] unsigned int 
 33057 ;; Return value:  Size  Location     Type
 33058 ;;                  2    0[BANK1 ] unsigned int 
 33059 ;; Registers used:
 33060 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33061 ;; Tracked objects:
 33062 ;;		On entry : 0/0
 33063 ;;		On exit  : 0/0
 33064 ;;		Unchanged: 0/0
 33065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33066 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33067 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33068 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33069 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33070 ;;Total ram usage:       14 bytes
 33071 ;; Hardware stack levels used:    1
 33072 ;; Hardware stack levels required when called:   10
 33073 ;; This function calls:
 33074 ;;		Nothing
 33075 ;; This function is called by:
 33076 ;;		_IPPutHeader
 33077 ;;		_TCPProcess
 33078 ;;		_SendTCP
 33079 ;; This function uses a non-reentrant model
 33080 ;;
 33081                           
 33082                           	psect	text58
 33083  018EEE                     __ptext58:
 33084                           	opt stack 0
 33085  018EEE                     _CalcIPChecksum:
 33086                           	opt stack 14
 33087                           
 33088                           ;helpers.c: 1148: uint16_t i;
 33089                           ;helpers.c: 1149: uint16_t *val;
 33090                           ;helpers.c: 1150: union
 33091                           ;helpers.c: 1151: {
 33092                           ;helpers.c: 1152: uint16_t w[2];
 33093                           ;helpers.c: 1153: uint32_t dw;
 33094                           ;helpers.c: 1154: } sum;
 33095                           ;helpers.c: 1156: i = count >> 1;
 33096                           
 33097                           ;incstack = 0
 33098  018EEE  90D8               	bcf	status,0,c
 33099  018EF0  0101               	movlb	1	; () banked
 33100  018EF2  3103               	rrcf	(CalcIPChecksum@count+1)& (0+255),w,b
 33101  018EF4  0101               	movlb	1	; () banked
 33102  018EF6  6F07               	movwf	(CalcIPChecksum@i+1)& (0+255),b
 33103  018EF8  0101               	movlb	1	; () banked
 33104  018EFA  3102               	rrcf	CalcIPChecksum@count& (0+255),w,b
 33105  018EFC  0101               	movlb	1	; () banked
 33106  018EFE  6F06               	movwf	CalcIPChecksum@i& (0+255),b
 33107                           
 33108                           ;helpers.c: 1157: val = (uint16_t*)buffer;
 33109  018F00  0101               	movlb	1	; () banked
 33110  018F02  C101  F109         	movff	CalcIPChecksum@buffer+1,CalcIPChecksum@val+1
 33111  018F06  0101               	movlb	1	; () banked
 33112  018F08  C100  F108         	movff	CalcIPChecksum@buffer,CalcIPChecksum@val
 33113                           
 33114                           ; BSR set to: 1
 33115                           ;helpers.c: 1160: sum.dw = 0x00000000ul;
 33116  018F0C  0E00               	movlw	0
 33117  018F0E  0101               	movlb	1	; () banked
 33118  018F10  6F0A               	movwf	CalcIPChecksum@sum& (0+255),b
 33119  018F12  0E00               	movlw	0
 33120  018F14  0101               	movlb	1	; () banked
 33121  018F16  6F0B               	movwf	(CalcIPChecksum@sum+1)& (0+255),b
 33122  018F18  0E00               	movlw	0
 33123  018F1A  0101               	movlb	1	; () banked
 33124  018F1C  6F0C               	movwf	(CalcIPChecksum@sum+2)& (0+255),b
 33125  018F1E  0E00               	movlw	0
 33126  018F20  0101               	movlb	1	; () banked
 33127  018F22  6F0D               	movwf	(CalcIPChecksum@sum+3)& (0+255),b
 33128                           
 33129                           ;helpers.c: 1161: while(i--)
 33130  018F24  D01C               	goto	l10282
 33131  018F26                     l10278:
 33132                           
 33133                           ; BSR set to: 1
 33134                           ;helpers.c: 1162: sum.dw += (uint32_t)*val++;
 33135  018F26  C108  FFD9         	movff	CalcIPChecksum@val,fsr2l
 33136  018F2A  C109  FFDA         	movff	CalcIPChecksum@val+1,fsr2h
 33137  018F2E  CFDE F104          	movff	postinc2,??_CalcIPChecksum
 33138  018F32  CFDD F105          	movff	postdec2,??_CalcIPChecksum+1
 33139  018F36  0101               	movlb	1	; () banked
 33140  018F38  5104               	movf	??_CalcIPChecksum& (0+255),w,b
 33141  018F3A  0101               	movlb	1	; () banked
 33142  018F3C  270A               	addwf	CalcIPChecksum@sum& (0+255),f,b
 33143  018F3E  0101               	movlb	1	; () banked
 33144  018F40  5105               	movf	(??_CalcIPChecksum+1)& (0+255),w,b
 33145  018F42  0101               	movlb	1	; () banked
 33146  018F44  230B               	addwfc	(CalcIPChecksum@sum+1)& (0+255),f,b
 33147  018F46  0E00               	movlw	0
 33148  018F48  0101               	movlb	1	; () banked
 33149  018F4A  230C               	addwfc	(CalcIPChecksum@sum+2)& (0+255),f,b
 33150  018F4C  0E00               	movlw	0
 33151  018F4E  0101               	movlb	1	; () banked
 33152  018F50  230D               	addwfc	(CalcIPChecksum@sum+3)& (0+255),f,b
 33153                           
 33154                           ; BSR set to: 1
 33155  018F52  0E02               	movlw	2
 33156  018F54  0101               	movlb	1	; () banked
 33157  018F56  2708               	addwf	CalcIPChecksum@val& (0+255),f,b
 33158  018F58  0E00               	movlw	0
 33159  018F5A  0101               	movlb	1	; () banked
 33160  018F5C  2309               	addwfc	(CalcIPChecksum@val+1)& (0+255),f,b
 33161  018F5E                     l10282:
 33162                           
 33163                           ; BSR set to: 1
 33164  018F5E  0101               	movlb	1	; () banked
 33165  018F60  0706               	decf	CalcIPChecksum@i& (0+255),f,b
 33166  018F62  A0D8               	btfss	status,0,c
 33167  018F64  0707               	decf	(CalcIPChecksum@i+1)& (0+255),f,b
 33168  018F66  0101               	movlb	1	; () banked
 33169  018F68  2906               	incf	CalcIPChecksum@i& (0+255),w,b
 33170  018F6A  B4D8               	btfsc	status,2,c
 33171  018F6C  2907               	incf	(CalcIPChecksum@i+1)& (0+255),w,b
 33172  018F6E  A4D8               	btfss	status,2,c
 33173  018F70  D7DA               	goto	l10278
 33174                           
 33175                           ; BSR set to: 1
 33176                           ;helpers.c: 1165: if(count & 0x1)
 33177  018F72  0101               	movlb	1	; () banked
 33178  018F74  A102               	btfss	CalcIPChecksum@count& (0+255),0,b
 33179  018F76  D012               	goto	l10286
 33180                           
 33181                           ; BSR set to: 1
 33182                           ;helpers.c: 1166: sum.dw += (uint32_t)*(uint8_t*)val;
 33183  018F78  C108  FFD9         	movff	CalcIPChecksum@val,fsr2l
 33184  018F7C  C109  FFDA         	movff	CalcIPChecksum@val+1,fsr2h
 33185  018F80  50DF               	movf	indf2,w,c
 33186  018F82  0101               	movlb	1	; () banked
 33187  018F84  6F04               	movwf	??_CalcIPChecksum& (0+255),b
 33188  018F86  0101               	movlb	1	; () banked
 33189  018F88  5104               	movf	??_CalcIPChecksum& (0+255),w,b
 33190  018F8A  0101               	movlb	1	; () banked
 33191  018F8C  270A               	addwf	CalcIPChecksum@sum& (0+255),f,b
 33192  018F8E  0E00               	movlw	0
 33193  018F90  0101               	movlb	1	; () banked
 33194  018F92  230B               	addwfc	(CalcIPChecksum@sum+1)& (0+255),f,b
 33195  018F94  0101               	movlb	1	; () banked
 33196  018F96  230C               	addwfc	(CalcIPChecksum@sum+2)& (0+255),f,b
 33197  018F98  0101               	movlb	1	; () banked
 33198  018F9A  230D               	addwfc	(CalcIPChecksum@sum+3)& (0+255),f,b
 33199  018F9C                     l10286:
 33200                           
 33201                           ; BSR set to: 1
 33202                           ;helpers.c: 1169: sum.dw = (uint32_t)sum.w[0] + (uint32_t)sum.w[1];
 33203  018F9C  0101               	movlb	1	; () banked
 33204  018F9E  510A               	movf	CalcIPChecksum@sum& (0+255),w,b
 33205  018FA0  0101               	movlb	1	; () banked
 33206  018FA2  250C               	addwf	(CalcIPChecksum@sum+2)& (0+255),w,b
 33207  018FA4  0101               	movlb	1	; () banked
 33208  018FA6  6F0A               	movwf	CalcIPChecksum@sum& (0+255),b
 33209  018FA8  0101               	movlb	1	; () banked
 33210  018FAA  510B               	movf	(CalcIPChecksum@sum+1)& (0+255),w,b
 33211  018FAC  0101               	movlb	1	; () banked
 33212  018FAE  210D               	addwfc	(CalcIPChecksum@sum+3)& (0+255),w,b
 33213  018FB0  0101               	movlb	1	; () banked
 33214  018FB2  6F0B               	movwf	(CalcIPChecksum@sum+1)& (0+255),b
 33215  018FB4  0101               	movlb	1	; () banked
 33216  018FB6  6B0C               	clrf	(CalcIPChecksum@sum+2)& (0+255),b
 33217  018FB8  B0D8               	btfsc	status,0,c
 33218  018FBA  2B0C               	incf	(CalcIPChecksum@sum+2)& (0+255),f,b
 33219  018FBC  0101               	movlb	1	; () banked
 33220  018FBE  6B0D               	clrf	(CalcIPChecksum@sum+3)& (0+255),b
 33221                           
 33222                           ; BSR set to: 1
 33223                           ;helpers.c: 1173: sum.w[0] += sum.w[1];
 33224  018FC0  0101               	movlb	1	; () banked
 33225  018FC2  EE21  F00C         	lfsr	2,CalcIPChecksum@sum+2
 33226  018FC6  50DE               	movf	postinc2,w,c
 33227  018FC8  0101               	movlb	1	; () banked
 33228  018FCA  270A               	addwf	CalcIPChecksum@sum& (0+255),f,b
 33229  018FCC  50DD               	movf	postdec2,w,c
 33230  018FCE  0101               	movlb	1	; () banked
 33231  018FD0  230B               	addwfc	(CalcIPChecksum@sum+1)& (0+255),f,b
 33232                           
 33233                           ;helpers.c: 1176: return ~sum.w[0];
 33234  018FD2  0101               	movlb	1	; () banked
 33235  018FD4  1D0A               	comf	CalcIPChecksum@sum& (0+255),w,b
 33236  018FD6  0101               	movlb	1	; () banked
 33237  018FD8  6F00               	movwf	?_CalcIPChecksum& (0+255),b
 33238  018FDA  0101               	movlb	1	; () banked
 33239  018FDC  1D0B               	comf	(CalcIPChecksum@sum+1)& (0+255),w,b
 33240  018FDE  0101               	movlb	1	; () banked
 33241  018FE0  6F01               	movwf	(?_CalcIPChecksum+1)& (0+255),b
 33242  018FE2  0012               	return	
 33243  018FE4                     __end_of_CalcIPChecksum:
 33244                           	opt stack 0
 33245                           tblptru	equ	0xFF8
 33246                           tblptrh	equ	0xFF7
 33247                           tblptrl	equ	0xFF6
 33248                           tablat	equ	0xFF5
 33249                           prodh	equ	0xFF4
 33250                           prodl	equ	0xFF3
 33251                           intcon	equ	0xFF2
 33252                           indf0	equ	0xFEF
 33253                           postinc0	equ	0xFEE
 33254                           fsr0h	equ	0xFEA
 33255                           fsr0l	equ	0xFE9
 33256                           wreg	equ	0xFE8
 33257                           indf1	equ	0xFE7
 33258                           postinc1	equ	0xFE6
 33259                           postdec1	equ	0xFE5
 33260                           fsr1h	equ	0xFE2
 33261                           fsr1l	equ	0xFE1
 33262                           indf2	equ	0xFDF
 33263                           postinc2	equ	0xFDE
 33264                           postdec2	equ	0xFDD
 33265                           fsr2h	equ	0xFDA
 33266                           fsr2l	equ	0xFD9
 33267                           status	equ	0xFD8
 33268                           
 33269 ;; *************** function _GetMaxSegSizeOption *****************
 33270 ;; Defined at:
 33271 ;;		line 3477 in file "../tcpip/tcp.c"
 33272 ;; Parameters:    Size  Location     Type
 33273 ;;		None
 33274 ;; Auto vars:     Size  Location     Type
 33275 ;;  wMSS            2   10[BANK1 ] unsigned int 
 33276 ;;  vOption         1   13[BANK1 ] unsigned char 
 33277 ;;  vOptionsByte    1   12[BANK1 ] unsigned char 
 33278 ;; Return value:  Size  Location     Type
 33279 ;;                  2    8[BANK1 ] unsigned int 
 33280 ;; Registers used:
 33281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33282 ;; Tracked objects:
 33283 ;;		On entry : 0/0
 33284 ;;		On exit  : 0/0
 33285 ;;		Unchanged: 0/0
 33286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33287 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33288 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33290 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33291 ;;Total ram usage:        6 bytes
 33292 ;; Hardware stack levels used:    1
 33293 ;; Hardware stack levels required when called:   12
 33294 ;; This function calls:
 33295 ;;		_IPSetRxBuffer
 33296 ;;		_MACGet
 33297 ;;		_MACGetArray
 33298 ;; This function is called by:
 33299 ;;		_HandleTCPSeg
 33300 ;; This function uses a non-reentrant model
 33301 ;;
 33302                           
 33303                           	psect	text59
 33304  017E4C                     __ptext59:
 33305                           	opt stack 0
 33306  017E4C                     _GetMaxSegSizeOption:
 33307                           	opt stack 14
 33308                           
 33309                           ;tcp.c: 3479: uint8_t vOptionsBytes;
 33310                           ;tcp.c: 3480: uint8_t vOption;
 33311                           ;tcp.c: 3481: uint16_t wMSS;
 33312                           ;tcp.c: 3484: IPSetRxBuffer(2+2+4+4);
 33313                           
 33314                           ; BSR set to: 1
 33315                           ;incstack = 0
 33316  017E4C  0E00               	movlw	0
 33317  017E4E  0101               	movlb	1	; () banked
 33318  017E50  6F07               	movwf	(IPSetRxBuffer@Offset+1)& (0+255),b
 33319  017E52  0E0C               	movlw	12
 33320  017E54  0101               	movlb	1	; () banked
 33321  017E56  6F06               	movwf	IPSetRxBuffer@Offset& (0+255),b
 33322  017E58  EC51  F0DC         	call	_IPSetRxBuffer	;wreg free
 33323                           
 33324                           ;tcp.c: 3485: vOptionsBytes = MACGet();
 33325  017E5C  EC34  F0DD         	call	_MACGet	;wreg free
 33326  017E60  0101               	movlb	1	; () banked
 33327  017E62  6F0C               	movwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),b
 33328                           
 33329                           ; BSR set to: 1
 33330                           ;tcp.c: 3486: vOptionsBytes = ((vOptionsBytes&0xF0)>>2) - sizeof(TCP_HEADER);
 33331  017E64  0101               	movlb	1	; () banked
 33332  017E66  410C               	rrncf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33333  017E68  42E8               	rrncf	wreg,f,c
 33334  017E6A  0B3F               	andlw	63
 33335  017E6C  0B3C               	andlw	60
 33336  017E6E  0FEC               	addlw	236
 33337  017E70  0101               	movlb	1	; () banked
 33338  017E72  6F0C               	movwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),b
 33339                           
 33340                           ; BSR set to: 1
 33341                           ;tcp.c: 3490: if(vOptionsBytes == 0u)
 33342  017E74  0101               	movlb	1	; () banked
 33343  017E76  670C               	tstfsz	GetMaxSegSizeOption@vOptionsBytes& (0+255),b
 33344  017E78  D007               	goto	l11902
 33345                           
 33346                           ; BSR set to: 1
 33347                           ;tcp.c: 3491: return 536;
 33348  017E7A  0E02               	movlw	2
 33349  017E7C  0101               	movlb	1	; () banked
 33350  017E7E  6F09               	movwf	(?_GetMaxSegSizeOption+1)& (0+255),b
 33351  017E80  0E18               	movlw	24
 33352  017E82  0101               	movlb	1	; () banked
 33353  017E84  6F08               	movwf	?_GetMaxSegSizeOption& (0+255),b
 33354  017E86  0012               	return	
 33355  017E88                     l11902:
 33356                           
 33357                           ; BSR set to: 1
 33358                           ;tcp.c: 3494: MACGetArray((0), 7);
 33359  017E88  0E00               	movlw	0
 33360  017E8A  0101               	movlb	1	; () banked
 33361  017E8C  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 33362  017E8E  0E00               	movlw	0
 33363  017E90  0101               	movlb	1	; () banked
 33364  017E92  6F00               	movwf	MACGetArray@val& (0+255),b
 33365  017E94  0E00               	movlw	0
 33366  017E96  0101               	movlb	1	; () banked
 33367  017E98  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 33368  017E9A  0E07               	movlw	7
 33369  017E9C  0101               	movlb	1	; () banked
 33370  017E9E  6F02               	movwf	MACGetArray@len& (0+255),b
 33371  017EA0  EC42  F0D7         	call	_MACGetArray	;wreg free
 33372                           
 33373                           ;tcp.c: 3497: while(vOptionsBytes--)
 33374  017EA4  D069               	goto	l11954
 33375  017EA6                     l11904:
 33376                           
 33377                           ;tcp.c: 3498: {
 33378                           ;tcp.c: 3499: vOption = MACGet();
 33379  017EA6  EC34  F0DD         	call	_MACGet	;wreg free
 33380  017EAA  0101               	movlb	1	; () banked
 33381  017EAC  6F0D               	movwf	GetMaxSegSizeOption@vOption& (0+255),b
 33382                           
 33383                           ; BSR set to: 1
 33384                           ;tcp.c: 3501: if(vOption == 0u)
 33385  017EAE  0101               	movlb	1	; () banked
 33386  017EB0  670D               	tstfsz	GetMaxSegSizeOption@vOption& (0+255),b
 33387  017EB2  D001               	goto	l11910
 33388  017EB4  D067               	goto	l11956
 33389  017EB6                     l11910:
 33390                           
 33391                           ; BSR set to: 1
 33392                           ;tcp.c: 3504: if(vOption == 1u)
 33393  017EB6  0101               	movlb	1	; () banked
 33394  017EB8  050D               	decf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33395  017EBA  B4D8               	btfsc	status,2,c
 33396  017EBC  D05D               	goto	l11954
 33397                           
 33398                           ; BSR set to: 1
 33399                           ;tcp.c: 3507: if(vOption == 2u)
 33400                           
 33401                           ; BSR set to: 1
 33402                           
 33403                           ; BSR set to: 1
 33404                           ;tcp.c: 3505: continue;
 33405  017EBE  0101               	movlb	1	; () banked
 33406  017EC0  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33407  017EC2  0A02               	xorlw	2
 33408  017EC4  A4D8               	btfss	status,2,c
 33409  017EC6  D038               	goto	l11940
 33410                           
 33411                           ; BSR set to: 1
 33412                           ;tcp.c: 3508: {
 33413                           ;tcp.c: 3509: if(vOptionsBytes < 3u)
 33414  017EC8  0E03               	movlw	3
 33415  017ECA  0101               	movlb	1	; () banked
 33416  017ECC  5D0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33417  017ECE  A0D8               	btfss	status,0,c
 33418  017ED0  D059               	goto	l11956
 33419                           
 33420                           ; BSR set to: 1
 33421                           ;tcp.c: 3512: wMSS = 0;
 33422                           
 33423                           ; BSR set to: 1
 33424                           
 33425                           ; BSR set to: 1
 33426                           ;tcp.c: 3510: break;
 33427  017ED2  0E00               	movlw	0
 33428  017ED4  0101               	movlb	1	; () banked
 33429  017ED6  6F0B               	movwf	(GetMaxSegSizeOption@wMSS+1)& (0+255),b
 33430  017ED8  0E00               	movlw	0
 33431  017EDA  0101               	movlb	1	; () banked
 33432  017EDC  6F0A               	movwf	GetMaxSegSizeOption@wMSS& (0+255),b
 33433                           
 33434                           ; BSR set to: 1
 33435                           ;tcp.c: 3515: vOption = MACGet();
 33436  017EDE  EC34  F0DD         	call	_MACGet	;wreg free
 33437  017EE2  0101               	movlb	1	; () banked
 33438  017EE4  6F0D               	movwf	GetMaxSegSizeOption@vOption& (0+255),b
 33439                           
 33440                           ; BSR set to: 1
 33441                           ;tcp.c: 3516: if(vOption == 4u)
 33442  017EE6  0101               	movlb	1	; () banked
 33443  017EE8  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33444  017EEA  0A04               	xorlw	4
 33445  017EEC  A4D8               	btfss	status,2,c
 33446  017EEE  D008               	goto	l11928
 33447                           
 33448                           ; BSR set to: 1
 33449                           ;tcp.c: 3517: {
 33450                           ;tcp.c: 3518: ((uint8_t*)&wMSS)[1] = MACGet();
 33451  017EF0  EC34  F0DD         	call	_MACGet	;wreg free
 33452  017EF4  0101               	movlb	1	; () banked
 33453  017EF6  6F0B               	movwf	(GetMaxSegSizeOption@wMSS+1)& (0+255),b
 33454                           
 33455                           ;tcp.c: 3519: ((uint8_t*)&wMSS)[0] = MACGet();
 33456  017EF8  EC34  F0DD         	call	_MACGet	;wreg free
 33457  017EFC  0101               	movlb	1	; () banked
 33458  017EFE  6F0A               	movwf	GetMaxSegSizeOption@wMSS& (0+255),b
 33459  017F00                     l11928:
 33460                           
 33461                           ; BSR set to: 1
 33462                           ;tcp.c: 3520: }
 33463                           ;tcp.c: 3522: if(wMSS < 536u)
 33464  017F00  0E18               	movlw	24
 33465  017F02  0101               	movlb	1	; () banked
 33466  017F04  5D0A               	subwf	GetMaxSegSizeOption@wMSS& (0+255),w,b
 33467  017F06  0E02               	movlw	2
 33468  017F08  0101               	movlb	1	; () banked
 33469  017F0A  590B               	subwfb	(GetMaxSegSizeOption@wMSS+1)& (0+255),w,b
 33470  017F0C  A0D8               	btfss	status,0,c
 33471  017F0E  D03A               	goto	l11956
 33472                           
 33473                           ; BSR set to: 1
 33474                           ;tcp.c: 3524: if(wMSS > (1460u))
 33475                           
 33476                           ; BSR set to: 1
 33477                           
 33478                           ; BSR set to: 1
 33479                           ;tcp.c: 3523: break;
 33480  017F10  0EB5               	movlw	181
 33481  017F12  0101               	movlb	1	; () banked
 33482  017F14  5D0A               	subwf	GetMaxSegSizeOption@wMSS& (0+255),w,b
 33483  017F16  0E05               	movlw	5
 33484  017F18  0101               	movlb	1	; () banked
 33485  017F1A  590B               	subwfb	(GetMaxSegSizeOption@wMSS+1)& (0+255),w,b
 33486  017F1C  A0D8               	btfss	status,0,c
 33487  017F1E  D007               	goto	l1295
 33488                           
 33489                           ; BSR set to: 1
 33490                           ;tcp.c: 3525: return (1460u);
 33491  017F20  0E05               	movlw	5
 33492  017F22  0101               	movlb	1	; () banked
 33493  017F24  6F09               	movwf	(?_GetMaxSegSizeOption+1)& (0+255),b
 33494  017F26  0EB4               	movlw	180
 33495  017F28  0101               	movlb	1	; () banked
 33496  017F2A  6F08               	movwf	?_GetMaxSegSizeOption& (0+255),b
 33497  017F2C  0012               	return	
 33498  017F2E                     l1295:
 33499                           
 33500                           ; BSR set to: 1
 33501                           ;tcp.c: 3526: else
 33502                           ;tcp.c: 3527: return wMSS;
 33503  017F2E  C10A  F108         	movff	GetMaxSegSizeOption@wMSS,?_GetMaxSegSizeOption
 33504  017F32  C10B  F109         	movff	GetMaxSegSizeOption@wMSS+1,?_GetMaxSegSizeOption+1
 33505  017F36  0012               	return	
 33506  017F38                     l11940:
 33507                           
 33508                           ; BSR set to: 1
 33509                           ;tcp.c: 3529: else
 33510                           ;tcp.c: 3530: {
 33511                           ;tcp.c: 3531: if(vOptionsBytes < 2u)
 33512  017F38  0E02               	movlw	2
 33513  017F3A  0101               	movlb	1	; () banked
 33514  017F3C  5D0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33515  017F3E  A0D8               	btfss	status,0,c
 33516  017F40  D021               	goto	l11956
 33517                           
 33518                           ; BSR set to: 1
 33519                           ;tcp.c: 3533: vOption = MACGet();
 33520                           
 33521                           ; BSR set to: 1
 33522                           
 33523                           ; BSR set to: 1
 33524                           ;tcp.c: 3532: break;
 33525  017F42  EC34  F0DD         	call	_MACGet	;wreg free
 33526  017F46  0101               	movlb	1	; () banked
 33527  017F48  6F0D               	movwf	GetMaxSegSizeOption@vOption& (0+255),b
 33528                           
 33529                           ; BSR set to: 1
 33530                           ;tcp.c: 3534: if(vOptionsBytes < vOption)
 33531  017F4A  0101               	movlb	1	; () banked
 33532  017F4C  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33533  017F4E  0101               	movlb	1	; () banked
 33534  017F50  5D0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33535  017F52  A0D8               	btfss	status,0,c
 33536  017F54  D017               	goto	l11956
 33537                           
 33538                           ; BSR set to: 1
 33539                           ;tcp.c: 3536: MACGetArray((0), vOption);
 33540                           
 33541                           ; BSR set to: 1
 33542                           
 33543                           ; BSR set to: 1
 33544                           ;tcp.c: 3535: break;
 33545  017F56  0E00               	movlw	0
 33546  017F58  0101               	movlb	1	; () banked
 33547  017F5A  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 33548  017F5C  0E00               	movlw	0
 33549  017F5E  0101               	movlb	1	; () banked
 33550  017F60  6F00               	movwf	MACGetArray@val& (0+255),b
 33551  017F62  0101               	movlb	1	; () banked
 33552  017F64  C10D  F102         	movff	GetMaxSegSizeOption@vOption,MACGetArray@len
 33553  017F68  0101               	movlb	1	; () banked
 33554  017F6A  6B03               	clrf	(MACGetArray@len+1)& (0+255),b
 33555  017F6C  EC42  F0D7         	call	_MACGetArray	;wreg free
 33556                           
 33557                           ;tcp.c: 3537: vOptionsBytes -= vOption;
 33558  017F70  0101               	movlb	1	; () banked
 33559  017F72  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33560  017F74  0101               	movlb	1	; () banked
 33561  017F76  5F0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),f,b
 33562  017F78                     l11954:
 33563  017F78  0101               	movlb	1	; () banked
 33564  017F7A  070C               	decf	GetMaxSegSizeOption@vOptionsBytes& (0+255),f,b
 33565  017F7C  0101               	movlb	1	; () banked
 33566  017F7E  290C               	incf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33567  017F80  A4D8               	btfss	status,2,c
 33568  017F82  D791               	goto	l11904
 33569  017F84                     l11956:
 33570                           
 33571                           ; BSR set to: 1
 33572                           ;tcp.c: 3538: }
 33573                           ;tcp.c: 3540: }
 33574                           ;tcp.c: 3543: return 536;
 33575  017F84  0E02               	movlw	2
 33576  017F86  0101               	movlb	1	; () banked
 33577  017F88  6F09               	movwf	(?_GetMaxSegSizeOption+1)& (0+255),b
 33578  017F8A  0E18               	movlw	24
 33579  017F8C  0101               	movlb	1	; () banked
 33580  017F8E  6F08               	movwf	?_GetMaxSegSizeOption& (0+255),b
 33581  017F90  0012               	return	
 33582  017F92                     __end_of_GetMaxSegSizeOption:
 33583                           	opt stack 0
 33584                           tblptru	equ	0xFF8
 33585                           tblptrh	equ	0xFF7
 33586                           tblptrl	equ	0xFF6
 33587                           tablat	equ	0xFF5
 33588                           prodh	equ	0xFF4
 33589                           prodl	equ	0xFF3
 33590                           intcon	equ	0xFF2
 33591                           indf0	equ	0xFEF
 33592                           postinc0	equ	0xFEE
 33593                           fsr0h	equ	0xFEA
 33594                           fsr0l	equ	0xFE9
 33595                           wreg	equ	0xFE8
 33596                           indf1	equ	0xFE7
 33597                           postinc1	equ	0xFE6
 33598                           postdec1	equ	0xFE5
 33599                           fsr1h	equ	0xFE2
 33600                           fsr1l	equ	0xFE1
 33601                           indf2	equ	0xFDF
 33602                           postinc2	equ	0xFDE
 33603                           postdec2	equ	0xFDD
 33604                           fsr2h	equ	0xFDA
 33605                           fsr2l	equ	0xFD9
 33606                           status	equ	0xFD8
 33607                           
 33608 ;; *************** function _IPSetRxBuffer *****************
 33609 ;; Defined at:
 33610 ;;		line 281 in file "../tcpip/ip.c"
 33611 ;; Parameters:    Size  Location     Type
 33612 ;;  Offset          2    6[BANK1 ] unsigned int 
 33613 ;; Auto vars:     Size  Location     Type
 33614 ;;		None
 33615 ;; Return value:  Size  Location     Type
 33616 ;;		None               void
 33617 ;; Registers used:
 33618 ;;		wreg, status,2, status,0, cstack
 33619 ;; Tracked objects:
 33620 ;;		On entry : 0/0
 33621 ;;		On exit  : 0/0
 33622 ;;		Unchanged: 0/0
 33623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33624 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33627 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33628 ;;Total ram usage:        2 bytes
 33629 ;; Hardware stack levels used:    1
 33630 ;; Hardware stack levels required when called:   11
 33631 ;; This function calls:
 33632 ;;		_MACSetReadPtrInRx
 33633 ;; This function is called by:
 33634 ;;		_TCPProcess
 33635 ;;		_GetMaxSegSizeOption
 33636 ;;		_HandleTCPSeg
 33637 ;; This function uses a non-reentrant model
 33638 ;;
 33639                           
 33640                           	psect	text60
 33641  01B8A2                     __ptext60:
 33642                           	opt stack 0
 33643  01B8A2                     _IPSetRxBuffer:
 33644                           	opt stack 16
 33645                           
 33646                           ;ip.c: 283: MACSetReadPtrInRx(Offset+IPHeaderLen);
 33647                           
 33648                           ; BSR set to: 1
 33649                           ;incstack = 0
 33650  01B8A2  0101               	movlb	1	; () banked
 33651  01B8A4  51B5               	movf	_IPHeaderLen& (0+255),w,b
 33652  01B8A6  0101               	movlb	1	; () banked
 33653  01B8A8  2506               	addwf	IPSetRxBuffer@Offset& (0+255),w,b
 33654  01B8AA  0101               	movlb	1	; () banked
 33655  01B8AC  6F00               	movwf	MACSetReadPtrInRx@offset& (0+255),b
 33656  01B8AE  0E00               	movlw	0
 33657  01B8B0  0101               	movlb	1	; () banked
 33658  01B8B2  2107               	addwfc	(IPSetRxBuffer@Offset+1)& (0+255),w,b
 33659  01B8B4  0101               	movlb	1	; () banked
 33660  01B8B6  6F01               	movwf	(MACSetReadPtrInRx@offset+1)& (0+255),b
 33661  01B8B8  EC25  F0D8         	call	_MACSetReadPtrInRx	;wreg free
 33662  01B8BC  0012               	return	
 33663  01B8BE                     __end_of_IPSetRxBuffer:
 33664                           	opt stack 0
 33665                           tblptru	equ	0xFF8
 33666                           tblptrh	equ	0xFF7
 33667                           tblptrl	equ	0xFF6
 33668                           tablat	equ	0xFF5
 33669                           prodh	equ	0xFF4
 33670                           prodl	equ	0xFF3
 33671                           intcon	equ	0xFF2
 33672                           indf0	equ	0xFEF
 33673                           postinc0	equ	0xFEE
 33674                           fsr0h	equ	0xFEA
 33675                           fsr0l	equ	0xFE9
 33676                           wreg	equ	0xFE8
 33677                           indf1	equ	0xFE7
 33678                           postinc1	equ	0xFE6
 33679                           postdec1	equ	0xFE5
 33680                           fsr1h	equ	0xFE2
 33681                           fsr1l	equ	0xFE1
 33682                           indf2	equ	0xFDF
 33683                           postinc2	equ	0xFDE
 33684                           postdec2	equ	0xFDD
 33685                           fsr2h	equ	0xFDA
 33686                           fsr2l	equ	0xFD9
 33687                           status	equ	0xFD8
 33688                           
 33689 ;; *************** function _FindMatchingSocket *****************
 33690 ;; Defined at:
 33691 ;;		line 3180 in file "../tcpip/tcp.c"
 33692 ;; Parameters:    Size  Location     Type
 33693 ;;  h               2   40[BANK1 ] PTR struct .
 33694 ;;		 -> TCPProcess@TCPHeader(20), 
 33695 ;;  remote          2   42[BANK1 ] PTR struct .
 33696 ;;		 -> remoteNode(10), 
 33697 ;; Auto vars:     Size  Location     Type
 33698 ;;  wQueueInsert    2   56[BANK1 ] unsigned int 
 33699 ;;  hash            2   52[BANK1 ] unsigned int 
 33700 ;;  hTCP            1   55[BANK1 ] unsigned char 
 33701 ;;  partialMatch    1   54[BANK1 ] unsigned char 
 33702 ;; Return value:  Size  Location     Type
 33703 ;;                  1    wreg      unsigned char 
 33704 ;; Registers used:
 33705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33706 ;; Tracked objects:
 33707 ;;		On entry : 0/0
 33708 ;;		On exit  : 0/0
 33709 ;;		Unchanged: 0/0
 33710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33711 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33712 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33713 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33714 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33715 ;;Total ram usage:       18 bytes
 33716 ;; Hardware stack levels used:    1
 33717 ;; Hardware stack levels required when called:   14
 33718 ;; This function calls:
 33719 ;;		_SyncTCB
 33720 ;;		_SyncTCBStub
 33721 ;;		_TickGetDiv256
 33722 ;;		___wmul
 33723 ;;		_memcpy
 33724 ;; This function is called by:
 33725 ;;		_TCPProcess
 33726 ;; This function uses a non-reentrant model
 33727 ;;
 33728                           
 33729                           	psect	text61
 33730  0135FE                     __ptext61:
 33731                           	opt stack 0
 33732  0135FE                     _FindMatchingSocket:
 33733                           	opt stack 13
 33734                           
 33735                           ;tcp.c: 3182: TCP_SOCKET hTCP;
 33736                           ;tcp.c: 3183: TCP_SOCKET partialMatch;
 33737                           ;tcp.c: 3184: uint16_t hash;
 33738                           ;tcp.c: 3187: if(h->DestPort == 0u)
 33739                           
 33740                           ;incstack = 0
 33741  0135FE  0101               	movlb	1	; () banked
 33742  013600  EE20 F002          	lfsr	2,2
 33743  013604  0101               	movlb	1	; () banked
 33744  013606  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 33745  013608  26D9               	addwf	fsr2l,f,c
 33746  01360A  0101               	movlb	1	; () banked
 33747  01360C  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 33748  01360E  22DA               	addwfc	fsr2h,f,c
 33749  013610  50DE               	movf	postinc2,w,c
 33750  013612  10DD               	iorwf	postdec2,w,c
 33751  013614  A4D8               	btfss	status,2,c
 33752  013616  D002               	goto	l12622
 33753                           
 33754                           ; BSR set to: 1
 33755                           ;tcp.c: 3188: return 0;
 33756  013618  0E00               	movlw	0
 33757  01361A  0012               	return	
 33758  01361C                     l12622:
 33759                           
 33760                           ; BSR set to: 1
 33761                           ;tcp.c: 3190: partialMatch = (0xFE);
 33762  01361C  0EFE               	movlw	254
 33763  01361E  0101               	movlb	1	; () banked
 33764  013620  6F36               	movwf	FindMatchingSocket@partialMatch& (0+255),b
 33765                           
 33766                           ; BSR set to: 1
 33767                           ;tcp.c: 3191: hash = (remote->IPAddr.w[1]+remote->IPAddr.w[0] + h->SourcePort) ^ h->Dest
      +                          Port;
 33768  013622  0101               	movlb	1	; () banked
 33769  013624  EE20 F002          	lfsr	2,2
 33770  013628  0101               	movlb	1	; () banked
 33771  01362A  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 33772  01362C  26D9               	addwf	fsr2l,f,c
 33773  01362E  0101               	movlb	1	; () banked
 33774  013630  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 33775  013632  22DA               	addwfc	fsr2h,f,c
 33776  013634  CFDE F12C          	movff	postinc2,??_FindMatchingSocket
 33777  013638  CFDD F12D          	movff	postdec2,??_FindMatchingSocket+1
 33778  01363C  C12A  FFD9         	movff	FindMatchingSocket@remote,fsr2l
 33779  013640  C12B  FFDA         	movff	FindMatchingSocket@remote+1,fsr2h
 33780  013644  CFDE F12E          	movff	postinc2,??_FindMatchingSocket+2
 33781  013648  CFDD F12F          	movff	postdec2,??_FindMatchingSocket+3
 33782  01364C  0101               	movlb	1	; () banked
 33783  01364E  EE20 F002          	lfsr	2,2
 33784  013652  0101               	movlb	1	; () banked
 33785  013654  512A               	movf	FindMatchingSocket@remote& (0+255),w,b
 33786  013656  26D9               	addwf	fsr2l,f,c
 33787  013658  0101               	movlb	1	; () banked
 33788  01365A  512B               	movf	(FindMatchingSocket@remote+1)& (0+255),w,b
 33789  01365C  22DA               	addwfc	fsr2h,f,c
 33790  01365E  CFDE F130          	movff	postinc2,??_FindMatchingSocket+4
 33791  013662  CFDD F131          	movff	postdec2,??_FindMatchingSocket+5
 33792  013666  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 33793  01366A  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 33794  01366E  CFDE F132          	movff	postinc2,??_FindMatchingSocket+6
 33795  013672  CFDD F133          	movff	postdec2,??_FindMatchingSocket+7
 33796  013676  0101               	movlb	1	; () banked
 33797  013678  5130               	movf	(??_FindMatchingSocket+4)& (0+255),w,b
 33798  01367A  0101               	movlb	1	; () banked
 33799  01367C  2732               	addwf	(??_FindMatchingSocket+6)& (0+255),f,b
 33800  01367E  0101               	movlb	1	; () banked
 33801  013680  5131               	movf	(??_FindMatchingSocket+5)& (0+255),w,b
 33802  013682  0101               	movlb	1	; () banked
 33803  013684  2333               	addwfc	(??_FindMatchingSocket+7)& (0+255),f,b
 33804  013686  0101               	movlb	1	; () banked
 33805  013688  512E               	movf	(??_FindMatchingSocket+2)& (0+255),w,b
 33806  01368A  0101               	movlb	1	; () banked
 33807  01368C  2732               	addwf	(??_FindMatchingSocket+6)& (0+255),f,b
 33808  01368E  0101               	movlb	1	; () banked
 33809  013690  512F               	movf	(??_FindMatchingSocket+3)& (0+255),w,b
 33810  013692  0101               	movlb	1	; () banked
 33811  013694  2333               	addwfc	(??_FindMatchingSocket+7)& (0+255),f,b
 33812  013696  0101               	movlb	1	; () banked
 33813  013698  512C               	movf	??_FindMatchingSocket& (0+255),w,b
 33814  01369A  0101               	movlb	1	; () banked
 33815  01369C  1932               	xorwf	(??_FindMatchingSocket+6)& (0+255),w,b
 33816  01369E  0101               	movlb	1	; () banked
 33817  0136A0  6F34               	movwf	FindMatchingSocket@hash& (0+255),b
 33818  0136A2  0101               	movlb	1	; () banked
 33819  0136A4  512D               	movf	(??_FindMatchingSocket+1)& (0+255),w,b
 33820  0136A6  0101               	movlb	1	; () banked
 33821  0136A8  1933               	xorwf	(??_FindMatchingSocket+7)& (0+255),w,b
 33822  0136AA  0101               	movlb	1	; () banked
 33823  0136AC  6F35               	movwf	(FindMatchingSocket@hash+1)& (0+255),b
 33824                           
 33825                           ; BSR set to: 1
 33826                           ;tcp.c: 3195: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitial
      +                          izer[0])); hTCP++ )
 33827  0136AE  0E00               	movlw	0
 33828  0136B0  0101               	movlb	1	; () banked
 33829  0136B2  6F37               	movwf	FindMatchingSocket@hTCP& (0+255),b
 33830  0136B4                     
 33831                           ; BSR set to: 1
 33832  0136B4  0101               	movlb	1	; () banked
 33833  0136B6  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 33834  0136B8  A4D8               	btfss	status,2,c
 33835  0136BA  D085               	goto	l12668
 33836                           
 33837                           ; BSR set to: 1
 33838                           ;tcp.c: 3196: {
 33839                           ;tcp.c: 3197: SyncTCBStub(hTCP);
 33840                           
 33841                           ; BSR set to: 1
 33842                           
 33843                           ; BSR set to: 1
 33844  0136BC  0101               	movlb	1	; () banked
 33845  0136BE  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 33846  0136C0  EC3D  F0D0         	call	_SyncTCBStub
 33847                           
 33848                           ;tcp.c: 3199: if(MyTCBStub.smState == TCP_CLOSED)
 33849  0136C4  0101               	movlb	1	; () banked
 33850  0136C6  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 33851  0136C8  0A0D               	xorlw	13
 33852  0136CA  B4D8               	btfsc	status,2,c
 33853  0136CC  D079               	goto	l12664
 33854                           
 33855                           ; BSR set to: 1
 33856                           ;tcp.c: 3203: else if(MyTCBStub.smState == TCP_LISTEN)
 33857                           
 33858                           ; BSR set to: 1
 33859                           
 33860                           ; BSR set to: 1
 33861                           ;tcp.c: 3202: }
 33862                           
 33863                           ; BSR set to: 1
 33864                           ;tcp.c: 3200: {
 33865                           ;tcp.c: 3201: continue;
 33866  0136CE  0101               	movlb	1	; () banked
 33867  0136D0  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 33868  0136D2  0A04               	xorlw	4
 33869  0136D4  A4D8               	btfss	status,2,c
 33870  0136D6  D019               	goto	l12648
 33871                           
 33872                           ; BSR set to: 1
 33873                           ;tcp.c: 3204: {
 33874                           ;tcp.c: 3205: if(MyTCBStub.remoteHash.Val == h->DestPort)
 33875  0136D8  0101               	movlb	1	; () banked
 33876  0136DA  EE20 F002          	lfsr	2,2
 33877  0136DE  0101               	movlb	1	; () banked
 33878  0136E0  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 33879  0136E2  26D9               	addwf	fsr2l,f,c
 33880  0136E4  0101               	movlb	1	; () banked
 33881  0136E6  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 33882  0136E8  22DA               	addwfc	fsr2h,f,c
 33883  0136EA  0101               	movlb	1	; () banked
 33884  0136EC  EE11  F0F9         	lfsr	1,_MyTCBStub+25
 33885  0136F0  52E6               	movf	postinc1,f,c
 33886  0136F2  52DE               	movf	postinc2,f,c
 33887  0136F4  50DD               	movf	postdec2,w,c
 33888  0136F6  18E5               	xorwf	postdec1,w,c
 33889  0136F8  CFDF FFE8          	movff	indf2,wreg
 33890  0136FC  B4D8               	btfsc	status,2,c
 33891  0136FE  18E7               	xorwf	indf1,w,c
 33892  013700  A4D8               	btfss	status,2,c
 33893  013702  D05E               	goto	l12664
 33894                           
 33895                           ; BSR set to: 1
 33896                           ;tcp.c: 3206: partialMatch = hTCP;
 33897  013704  C137  F136         	movff	FindMatchingSocket@hTCP,FindMatchingSocket@partialMatch
 33898  013708  D05B               	goto	l12664
 33899  01370A                     l12648:
 33900                           
 33901                           ; BSR set to: 1
 33902                           ;tcp.c: 3217: else if(MyTCBStub.remoteHash.Val != hash)
 33903  01370A  0101               	movlb	1	; () banked
 33904  01370C  EE21  F0F9         	lfsr	2,_MyTCBStub+25
 33905  013710  0101               	movlb	1	; () banked
 33906  013712  52DE               	movf	postinc2,f,c
 33907  013714  0101               	movlb	1	; () banked
 33908  013716  5135               	movf	(FindMatchingSocket@hash+1)& (0+255),w,b
 33909  013718  18DD               	xorwf	postdec2,w,c
 33910  01371A  0101               	movlb	1	; () banked
 33911  01371C  C134  FFE8         	movff	FindMatchingSocket@hash,wreg
 33912  013720  B4D8               	btfsc	status,2,c
 33913  013722  18DF               	xorwf	indf2,w,c
 33914  013724  A4D8               	btfss	status,2,c
 33915  013726  D04C               	goto	l12664
 33916                           
 33917                           ; BSR set to: 1
 33918                           ;tcp.c: 3220: }
 33919                           ;tcp.c: 3222: SyncTCB();
 33920                           
 33921                           ; BSR set to: 1
 33922                           
 33923                           ; BSR set to: 1
 33924                           
 33925                           ; BSR set to: 1
 33926                           
 33927                           ; BSR set to: 1
 33928                           ;tcp.c: 3218: {
 33929                           ;tcp.c: 3219: continue;
 33930  013728  EC1D  F0CB         	call	_SyncTCB	;wreg free
 33931                           
 33932                           ;tcp.c: 3223: if( h->DestPort == MyTCB.localPort.Val &&
 33933                           ;tcp.c: 3224: h->SourcePort == MyTCB.remotePort.Val &&
 33934                           ;tcp.c: 3225: remote->IPAddr.Val == MyTCB.remote.niRemoteMACIP.IPAddr.Val)
 33935  01372C  0101               	movlb	1	; () banked
 33936  01372E  EE21  F0C9         	lfsr	2,_MyTCB+16
 33937  013732  0101               	movlb	1	; () banked
 33938  013734  EE10 F002          	lfsr	1,2
 33939  013738  0101               	movlb	1	; () banked
 33940  01373A  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 33941  01373C  26E1               	addwf	fsr1l,f,c
 33942  01373E  0101               	movlb	1	; () banked
 33943  013740  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 33944  013742  22E2               	addwfc	fsr1h,f,c
 33945  013744  52E6               	movf	postinc1,f,c
 33946  013746  52DE               	movf	postinc2,f,c
 33947  013748  50DD               	movf	postdec2,w,c
 33948  01374A  18E5               	xorwf	postdec1,w,c
 33949  01374C  CFDF FFE8          	movff	indf2,wreg
 33950  013750  B4D8               	btfsc	status,2,c
 33951  013752  18E7               	xorwf	indf1,w,c
 33952  013754  A4D8               	btfss	status,2,c
 33953  013756  D034               	goto	l12664
 33954                           
 33955                           ; BSR set to: 1
 33956  013758  0101               	movlb	1	; () banked
 33957  01375A  EE21  F0C7         	lfsr	2,_MyTCB+14
 33958  01375E  C128  FFE1         	movff	FindMatchingSocket@h,fsr1l
 33959  013762  C129  FFE2         	movff	FindMatchingSocket@h+1,fsr1h
 33960  013766  52E6               	movf	postinc1,f,c
 33961  013768  52DE               	movf	postinc2,f,c
 33962  01376A  50DD               	movf	postdec2,w,c
 33963  01376C  18E5               	xorwf	postdec1,w,c
 33964  01376E  CFDF FFE8          	movff	indf2,wreg
 33965  013772  B4D8               	btfsc	status,2,c
 33966  013774  18E7               	xorwf	indf1,w,c
 33967  013776  A4D8               	btfss	status,2,c
 33968  013778  D023               	goto	l12664
 33969                           
 33970                           ; BSR set to: 1
 33971  01377A  C12A  FFD9         	movff	FindMatchingSocket@remote,fsr2l
 33972  01377E  C12B  FFDA         	movff	FindMatchingSocket@remote+1,fsr2h
 33973  013782  CFDE F12C          	movff	postinc2,??_FindMatchingSocket
 33974  013786  CFDE F12D          	movff	postinc2,??_FindMatchingSocket+1
 33975  01378A  CFDE F12E          	movff	postinc2,??_FindMatchingSocket+2
 33976  01378E  CFDE F12F          	movff	postinc2,??_FindMatchingSocket+3
 33977  013792  0101               	movlb	1	; () banked
 33978  013794  51D2               	movf	(_MyTCB+25)& (0+255),w,b
 33979  013796  0101               	movlb	1	; () banked
 33980  013798  192F               	xorwf	(??_FindMatchingSocket+3)& (0+255),w,b
 33981  01379A  E10E               	bnz	u14005
 33982  01379C  0101               	movlb	1	; () banked
 33983  01379E  51D1               	movf	(_MyTCB+24)& (0+255),w,b
 33984  0137A0  0101               	movlb	1	; () banked
 33985  0137A2  192E               	xorwf	(??_FindMatchingSocket+2)& (0+255),w,b
 33986  0137A4  E109               	bnz	u14005
 33987  0137A6  0101               	movlb	1	; () banked
 33988  0137A8  51D0               	movf	(_MyTCB+23)& (0+255),w,b
 33989  0137AA  0101               	movlb	1	; () banked
 33990  0137AC  192D               	xorwf	(??_FindMatchingSocket+1)& (0+255),w,b
 33991  0137AE  E104               	bnz	u14005
 33992  0137B0  0101               	movlb	1	; () banked
 33993  0137B2  51CF               	movf	(_MyTCB+22)& (0+255),w,b
 33994  0137B4  0101               	movlb	1	; () banked
 33995  0137B6  192C               	xorwf	??_FindMatchingSocket& (0+255),w,b
 33996  0137B8                     u14005:
 33997  0137B8  A4D8               	btfss	status,2,c
 33998  0137BA  D002               	goto	l12664
 33999                           
 34000                           ; BSR set to: 1
 34001                           ;tcp.c: 3226: {
 34002                           ;tcp.c: 3227: return 1;
 34003  0137BC  0E01               	movlw	1
 34004  0137BE  0012               	return	
 34005  0137C0                     l12664:
 34006                           
 34007                           ; BSR set to: 1
 34008  0137C0  0101               	movlb	1	; () banked
 34009  0137C2  2B37               	incf	FindMatchingSocket@hTCP& (0+255),f,b
 34010  0137C4  D777               	goto	L37
 34011  0137C6                     l12668:
 34012                           
 34013                           ; BSR set to: 1
 34014                           ;tcp.c: 3228: }
 34015                           ;tcp.c: 3229: }
 34016                           ;tcp.c: 3236: if(partialMatch != (0xFE))
 34017  0137C6  0101               	movlb	1	; () banked
 34018  0137C8  5136               	movf	FindMatchingSocket@partialMatch& (0+255),w,b
 34019  0137CA  0AFE               	xorlw	254
 34020  0137CC  B4D8               	btfsc	status,2,c
 34021  0137CE  D044               	goto	l12688
 34022                           
 34023                           ; BSR set to: 1
 34024                           ;tcp.c: 3237: {
 34025                           ;tcp.c: 3238: SyncTCBStub(partialMatch);
 34026  0137D0  0101               	movlb	1	; () banked
 34027  0137D2  5136               	movf	FindMatchingSocket@partialMatch& (0+255),w,b
 34028  0137D4  EC3D  F0D0         	call	_SyncTCBStub
 34029                           
 34030                           ;tcp.c: 3239: SyncTCB();
 34031  0137D8  EC1D  F0CB         	call	_SyncTCB	;wreg free
 34032                           
 34033                           ;tcp.c: 3255: if(partialMatch != (0xFE))
 34034  0137DC  0101               	movlb	1	; () banked
 34035  0137DE  5136               	movf	FindMatchingSocket@partialMatch& (0+255),w,b
 34036  0137E0  0AFE               	xorlw	254
 34037  0137E2  B4D8               	btfsc	status,2,c
 34038  0137E4  D039               	goto	l12688
 34039                           
 34040                           ; BSR set to: 1
 34041                           ;tcp.c: 3256: {
 34042                           ;tcp.c: 3257: MyTCBStub.remoteHash.Val = hash;
 34043  0137E6  C134  F1F9         	movff	FindMatchingSocket@hash,_MyTCBStub+25
 34044  0137EA  C135  F1FA         	movff	FindMatchingSocket@hash+1,_MyTCBStub+26
 34045                           
 34046                           ; BSR set to: 1
 34047                           ;tcp.c: 3259: memcpy((void*)&MyTCB.remote, (void*)remote, sizeof(NODE_INFO));
 34048  0137EE  0101               	movlb	1	; () banked
 34049  0137F0  0E01               	movlw	high (_MyTCB+22)
 34050  0137F2  0101               	movlb	1	; () banked
 34051  0137F4  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 34052  0137F6  0101               	movlb	1	; () banked
 34053  0137F8  0ECF               	movlw	low (_MyTCB+22)
 34054  0137FA  0101               	movlb	1	; () banked
 34055  0137FC  6F14               	movwf	memcpy@d1& (0+255),b
 34056  0137FE  0101               	movlb	1	; () banked
 34057  013800  C12B  F117         	movff	FindMatchingSocket@remote+1,memcpy@s1+1
 34058  013804  0101               	movlb	1	; () banked
 34059  013806  C12A  F116         	movff	FindMatchingSocket@remote,memcpy@s1
 34060  01380A  0E00               	movlw	0
 34061  01380C  0101               	movlb	1	; () banked
 34062  01380E  6F19               	movwf	(memcpy@n+1)& (0+255),b
 34063  013810  0E0A               	movlw	10
 34064  013812  0101               	movlb	1	; () banked
 34065  013814  6F18               	movwf	memcpy@n& (0+255),b
 34066  013816  ECDC  F0D5         	call	_memcpy	;wreg free
 34067                           
 34068                           ;tcp.c: 3260: MyTCB.remotePort.Val = h->SourcePort;
 34069  01381A  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34070  01381E  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34071  013822  0101               	movlb	1	; () banked
 34072  013824  CFDE F1C7          	movff	postinc2,_MyTCB+14
 34073  013828  0101               	movlb	1	; () banked
 34074  01382A  CFDD F1C8          	movff	postdec2,_MyTCB+15
 34075                           
 34076                           ; BSR set to: 1
 34077                           ;tcp.c: 3261: MyTCB.localPort.Val = h->DestPort;
 34078  01382E  0101               	movlb	1	; () banked
 34079  013830  EE20 F002          	lfsr	2,2
 34080  013834  0101               	movlb	1	; () banked
 34081  013836  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34082  013838  26D9               	addwf	fsr2l,f,c
 34083  01383A  0101               	movlb	1	; () banked
 34084  01383C  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34085  01383E  22DA               	addwfc	fsr2h,f,c
 34086  013840  0101               	movlb	1	; () banked
 34087  013842  CFDE F1C9          	movff	postinc2,_MyTCB+16
 34088  013846  0101               	movlb	1	; () banked
 34089  013848  CFDD F1CA          	movff	postdec2,_MyTCB+17
 34090                           
 34091                           ; BSR set to: 1
 34092                           ;tcp.c: 3262: MyTCB.txUnackedTail = MyTCBStub.bufferTxStart;
 34093  01384C  C1E0  F1C5         	movff	_MyTCBStub,_MyTCB+12
 34094  013850  C1E1  F1C6         	movff	_MyTCBStub+1,_MyTCB+13
 34095                           
 34096                           ; BSR set to: 1
 34097                           ;tcp.c: 3265: return 1;
 34098  013854  0E01               	movlw	1
 34099  013856  0012               	return	
 34100  013858                     l12688:
 34101                           
 34102                           ; BSR set to: 1
 34103                           ;tcp.c: 3266: }
 34104                           ;tcp.c: 3267: }
 34105                           ;tcp.c: 3274: {
 34106                           ;tcp.c: 3275: uint16_t wQueueInsertPos;
 34107                           ;tcp.c: 3278: if(!h->Flags.bits.flagSYN)
 34108  013858  0101               	movlb	1	; () banked
 34109  01385A  EE20 F00D          	lfsr	2,13
 34110  01385E  0101               	movlb	1	; () banked
 34111  013860  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34112  013862  26D9               	addwf	fsr2l,f,c
 34113  013864  0101               	movlb	1	; () banked
 34114  013866  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34115  013868  22DA               	addwfc	fsr2h,f,c
 34116  01386A  B2DF               	btfsc	indf2,1,c
 34117  01386C  D002               	goto	l12694
 34118                           
 34119                           ; BSR set to: 1
 34120                           ;tcp.c: 3279: return 0;
 34121  01386E  0E00               	movlw	0
 34122  013870  0012               	return	
 34123  013872                     l12694:
 34124                           
 34125                           ; BSR set to: 1
 34126                           ;tcp.c: 3282: if(SYNQueue[(3u)-1].wDestPort)
 34127  013872  0102               	movlb	2	; () banked
 34128  013874  5139               	movf	(_SYNQueue+57)& (0+255),w,b
 34129  013876  1138               	iorwf	(_SYNQueue+56)& (0+255),w,b
 34130  013878  B4D8               	btfsc	status,2,c
 34131  01387A  D002               	goto	l12700
 34132                           
 34133                           ; BSR set to: 2
 34134                           ;tcp.c: 3283: return 0;
 34135  01387C  0E00               	movlw	0
 34136  01387E  0012               	return	
 34137  013880                     l12700:
 34138                           
 34139                           ; BSR set to: 2
 34140                           ;tcp.c: 3288: for(wQueueInsertPos = 0; wQueueInsertPos < (3u); wQueueInsertPos++)
 34141  013880  0E00               	movlw	0
 34142  013882  0101               	movlb	1	; () banked
 34143  013884  6F39               	movwf	(FindMatchingSocket@wQueueInsertPos+1)& (0+255),b
 34144  013886  0E00               	movlw	0
 34145  013888  0101               	movlb	1	; () banked
 34146  01388A  6F38               	movwf	FindMatchingSocket@wQueueInsertPos& (0+255),b
 34147  01388C                     
 34148                           ; BSR set to: 1
 34149  01388C  0E03               	movlw	3
 34150  01388E  0101               	movlb	1	; () banked
 34151  013890  5D38               	subwf	FindMatchingSocket@wQueueInsertPos& (0+255),w,b
 34152  013892  0E00               	movlw	0
 34153  013894  0101               	movlb	1	; () banked
 34154  013896  5939               	subwfb	(FindMatchingSocket@wQueueInsertPos+1)& (0+255),w,b
 34155  013898  B0D8               	btfsc	status,0,c
 34156  01389A  D0E8               	goto	l12732
 34157                           
 34158                           ; BSR set to: 1
 34159                           ;tcp.c: 3289: {
 34160                           ;tcp.c: 3291: if(SYNQueue[wQueueInsertPos].wDestPort == 0u)
 34161                           
 34162                           ; BSR set to: 1
 34163                           
 34164                           ; BSR set to: 1
 34165  01389C  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34166  0138A0  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34167  0138A4  0E00               	movlw	0
 34168  0138A6  0101               	movlb	1	; () banked
 34169  0138A8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34170  0138AA  0E14               	movlw	20
 34171  0138AC  0101               	movlb	1	; () banked
 34172  0138AE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34173  0138B0  ECF5  F0D9         	call	___wmul	;wreg free
 34174  0138B4  0E10               	movlw	16
 34175  0138B6  0101               	movlb	1	; () banked
 34176  0138B8  270E               	addwf	?___wmul& (0+255),f,b
 34177  0138BA  0E00               	movlw	0
 34178  0138BC  0101               	movlb	1	; () banked
 34179  0138BE  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34180  0138C0  0102               	movlb	2	; () banked
 34181  0138C2  0E00               	movlw	low _SYNQueue
 34182  0138C4  0101               	movlb	1	; () banked
 34183  0138C6  250E               	addwf	?___wmul& (0+255),w,b
 34184  0138C8  6ED9               	movwf	fsr2l,c
 34185  0138CA  0102               	movlb	2	; () banked
 34186  0138CC  0E02               	movlw	high _SYNQueue
 34187  0138CE  0101               	movlb	1	; () banked
 34188  0138D0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34189  0138D2  6EDA               	movwf	fsr2h,c
 34190  0138D4  50DE               	movf	postinc2,w,c
 34191  0138D6  10DD               	iorwf	postdec2,w,c
 34192  0138D8  B4D8               	btfsc	status,2,c
 34193  0138DA  D0C8               	goto	l12732
 34194                           
 34195                           ; BSR set to: 1
 34196                           ;tcp.c: 3295: if(SYNQueue[wQueueInsertPos].wDestPort != h->DestPort)
 34197                           
 34198                           ; BSR set to: 1
 34199                           
 34200                           ; BSR set to: 1
 34201                           ;tcp.c: 3292: break;
 34202  0138DC  0101               	movlb	1	; () banked
 34203  0138DE  EE20 F002          	lfsr	2,2
 34204  0138E2  0101               	movlb	1	; () banked
 34205  0138E4  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34206  0138E6  26D9               	addwf	fsr2l,f,c
 34207  0138E8  0101               	movlb	1	; () banked
 34208  0138EA  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34209  0138EC  22DA               	addwfc	fsr2h,f,c
 34210  0138EE  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34211  0138F2  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34212  0138F6  0E00               	movlw	0
 34213  0138F8  0101               	movlb	1	; () banked
 34214  0138FA  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34215  0138FC  0E14               	movlw	20
 34216  0138FE  0101               	movlb	1	; () banked
 34217  013900  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34218  013902  ECF5  F0D9         	call	___wmul	;wreg free
 34219  013906  0E10               	movlw	16
 34220  013908  0101               	movlb	1	; () banked
 34221  01390A  270E               	addwf	?___wmul& (0+255),f,b
 34222  01390C  0E00               	movlw	0
 34223  01390E  0101               	movlb	1	; () banked
 34224  013910  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34225  013912  0102               	movlb	2	; () banked
 34226  013914  0E00               	movlw	low _SYNQueue
 34227  013916  0101               	movlb	1	; () banked
 34228  013918  250E               	addwf	?___wmul& (0+255),w,b
 34229  01391A  6EE1               	movwf	fsr1l,c
 34230  01391C  0102               	movlb	2	; () banked
 34231  01391E  0E02               	movlw	high _SYNQueue
 34232  013920  0101               	movlb	1	; () banked
 34233  013922  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34234  013924  6EE2               	movwf	fsr1h,c
 34235  013926  52E6               	movf	postinc1,f,c
 34236  013928  52DE               	movf	postinc2,f,c
 34237  01392A  50DD               	movf	postdec2,w,c
 34238  01392C  18E5               	xorwf	postdec1,w,c
 34239  01392E  CFDF FFE8          	movff	indf2,wreg
 34240  013932  B4D8               	btfsc	status,2,c
 34241  013934  18E7               	xorwf	indf1,w,c
 34242  013936  A4D8               	btfss	status,2,c
 34243  013938  D095               	goto	l12728
 34244                           
 34245                           ; BSR set to: 1
 34246                           ;tcp.c: 3297: if(SYNQueue[wQueueInsertPos].wSourcePort != h->SourcePort)
 34247                           
 34248                           ; BSR set to: 1
 34249                           
 34250                           ; BSR set to: 1
 34251                           ;tcp.c: 3296: continue;
 34252  01393A  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34253  01393E  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34254  013942  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34255  013946  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34256  01394A  0E00               	movlw	0
 34257  01394C  0101               	movlb	1	; () banked
 34258  01394E  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34259  013950  0E14               	movlw	20
 34260  013952  0101               	movlb	1	; () banked
 34261  013954  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34262  013956  ECF5  F0D9         	call	___wmul	;wreg free
 34263  01395A  0E0A               	movlw	10
 34264  01395C  0101               	movlb	1	; () banked
 34265  01395E  270E               	addwf	?___wmul& (0+255),f,b
 34266  013960  0E00               	movlw	0
 34267  013962  0101               	movlb	1	; () banked
 34268  013964  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34269  013966  0102               	movlb	2	; () banked
 34270  013968  0E00               	movlw	low _SYNQueue
 34271  01396A  0101               	movlb	1	; () banked
 34272  01396C  250E               	addwf	?___wmul& (0+255),w,b
 34273  01396E  6EE1               	movwf	fsr1l,c
 34274  013970  0102               	movlb	2	; () banked
 34275  013972  0E02               	movlw	high _SYNQueue
 34276  013974  0101               	movlb	1	; () banked
 34277  013976  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34278  013978  6EE2               	movwf	fsr1h,c
 34279  01397A  52E6               	movf	postinc1,f,c
 34280  01397C  52DE               	movf	postinc2,f,c
 34281  01397E  50DD               	movf	postdec2,w,c
 34282  013980  18E5               	xorwf	postdec1,w,c
 34283  013982  CFDF FFE8          	movff	indf2,wreg
 34284  013986  B4D8               	btfsc	status,2,c
 34285  013988  18E7               	xorwf	indf1,w,c
 34286  01398A  A4D8               	btfss	status,2,c
 34287  01398C  D06B               	goto	l12728
 34288                           
 34289                           ; BSR set to: 1
 34290                           ;tcp.c: 3299: if(SYNQueue[wQueueInsertPos].niSourceAddress.IPAddr.Val != remote->IPAddr.
      +                          Val)
 34291                           
 34292                           ; BSR set to: 1
 34293                           
 34294                           ; BSR set to: 1
 34295                           ;tcp.c: 3298: continue;
 34296  01398E  C12A  FFD9         	movff	FindMatchingSocket@remote,fsr2l
 34297  013992  C12B  FFDA         	movff	FindMatchingSocket@remote+1,fsr2h
 34298  013996  CFDE F12C          	movff	postinc2,??_FindMatchingSocket
 34299  01399A  CFDE F12D          	movff	postinc2,??_FindMatchingSocket+1
 34300  01399E  CFDE F12E          	movff	postinc2,??_FindMatchingSocket+2
 34301  0139A2  CFDE F12F          	movff	postinc2,??_FindMatchingSocket+3
 34302  0139A6  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34303  0139AA  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34304  0139AE  0E00               	movlw	0
 34305  0139B0  0101               	movlb	1	; () banked
 34306  0139B2  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34307  0139B4  0E14               	movlw	20
 34308  0139B6  0101               	movlb	1	; () banked
 34309  0139B8  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34310  0139BA  ECF5  F0D9         	call	___wmul	;wreg free
 34311  0139BE  0102               	movlb	2	; () banked
 34312  0139C0  0E00               	movlw	low _SYNQueue
 34313  0139C2  0101               	movlb	1	; () banked
 34314  0139C4  250E               	addwf	?___wmul& (0+255),w,b
 34315  0139C6  6ED9               	movwf	fsr2l,c
 34316  0139C8  0102               	movlb	2	; () banked
 34317  0139CA  0E02               	movlw	high _SYNQueue
 34318  0139CC  0101               	movlb	1	; () banked
 34319  0139CE  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34320  0139D0  6EDA               	movwf	fsr2h,c
 34321  0139D2  CFDE F130          	movff	postinc2,??_FindMatchingSocket+4
 34322  0139D6  CFDE F131          	movff	postinc2,??_FindMatchingSocket+5
 34323  0139DA  CFDE F132          	movff	postinc2,??_FindMatchingSocket+6
 34324  0139DE  CFDE F133          	movff	postinc2,??_FindMatchingSocket+7
 34325  0139E2  0101               	movlb	1	; () banked
 34326  0139E4  512F               	movf	(??_FindMatchingSocket+3)& (0+255),w,b
 34327  0139E6  0101               	movlb	1	; () banked
 34328  0139E8  1933               	xorwf	(??_FindMatchingSocket+7)& (0+255),w,b
 34329  0139EA  E10E               	bnz	u14105
 34330  0139EC  0101               	movlb	1	; () banked
 34331  0139EE  512E               	movf	(??_FindMatchingSocket+2)& (0+255),w,b
 34332  0139F0  0101               	movlb	1	; () banked
 34333  0139F2  1932               	xorwf	(??_FindMatchingSocket+6)& (0+255),w,b
 34334  0139F4  E109               	bnz	u14105
 34335  0139F6  0101               	movlb	1	; () banked
 34336  0139F8  512D               	movf	(??_FindMatchingSocket+1)& (0+255),w,b
 34337  0139FA  0101               	movlb	1	; () banked
 34338  0139FC  1931               	xorwf	(??_FindMatchingSocket+5)& (0+255),w,b
 34339  0139FE  E104               	bnz	u14105
 34340  013A00  0101               	movlb	1	; () banked
 34341  013A02  512C               	movf	??_FindMatchingSocket& (0+255),w,b
 34342  013A04  0101               	movlb	1	; () banked
 34343  013A06  1930               	xorwf	(??_FindMatchingSocket+4)& (0+255),w,b
 34344  013A08                     u14105:
 34345  013A08  A4D8               	btfss	status,2,c
 34346  013A0A  D02C               	goto	l12728
 34347                           
 34348                           ; BSR set to: 1
 34349                           ;tcp.c: 3303: SYNQueue[wQueueInsertPos].wTimestamp = TickGetDiv256();
 34350                           
 34351                           ; BSR set to: 1
 34352                           
 34353                           ; BSR set to: 1
 34354                           ;tcp.c: 3300: continue;
 34355  013A0C  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 34356  013A10  C100  F12C         	movff	?_TickGetDiv256,??_FindMatchingSocket
 34357  013A14  C101  F12D         	movff	?_TickGetDiv256+1,??_FindMatchingSocket+1
 34358  013A18  C102  F12E         	movff	?_TickGetDiv256+2,??_FindMatchingSocket+2
 34359  013A1C  C103  F12F         	movff	?_TickGetDiv256+3,??_FindMatchingSocket+3
 34360  013A20  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34361  013A24  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34362  013A28  0E00               	movlw	0
 34363  013A2A  0101               	movlb	1	; () banked
 34364  013A2C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34365  013A2E  0E14               	movlw	20
 34366  013A30  0101               	movlb	1	; () banked
 34367  013A32  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34368  013A34  ECF5  F0D9         	call	___wmul	;wreg free
 34369  013A38  0E12               	movlw	18
 34370  013A3A  0101               	movlb	1	; () banked
 34371  013A3C  270E               	addwf	?___wmul& (0+255),f,b
 34372  013A3E  0E00               	movlw	0
 34373  013A40  0101               	movlb	1	; () banked
 34374  013A42  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34375  013A44  0102               	movlb	2	; () banked
 34376  013A46  0E00               	movlw	low _SYNQueue
 34377  013A48  0101               	movlb	1	; () banked
 34378  013A4A  250E               	addwf	?___wmul& (0+255),w,b
 34379  013A4C  6ED9               	movwf	fsr2l,c
 34380  013A4E  0102               	movlb	2	; () banked
 34381  013A50  0E02               	movlw	high _SYNQueue
 34382  013A52  0101               	movlb	1	; () banked
 34383  013A54  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34384  013A56  6EDA               	movwf	fsr2h,c
 34385  013A58  C12C  FFDE         	movff	??_FindMatchingSocket,postinc2
 34386  013A5C  C12D  FFDD         	movff	??_FindMatchingSocket+1,postdec2
 34387                           
 34388                           ; BSR set to: 1
 34389                           ;tcp.c: 3304: return 0;
 34390  013A60  0E00               	movlw	0
 34391  013A62  0012               	return	
 34392  013A64                     l12728:
 34393                           
 34394                           ; BSR set to: 1
 34395  013A64  0101               	movlb	1	; () banked
 34396  013A66  4B38               	infsnz	FindMatchingSocket@wQueueInsertPos& (0+255),f,b
 34397  013A68  2B39               	incf	(FindMatchingSocket@wQueueInsertPos+1)& (0+255),f,b
 34398  013A6A  D710               	goto	L38
 34399  013A6C                     l12732:
 34400                           
 34401                           ; BSR set to: 1
 34402                           ;tcp.c: 3305: }
 34403                           ;tcp.c: 3310: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitial
      +                          izer[0])); hTCP++)
 34404  013A6C  0E00               	movlw	0
 34405  013A6E  0101               	movlb	1	; () banked
 34406  013A70  6F37               	movwf	FindMatchingSocket@hTCP& (0+255),b
 34407  013A72  0101               	movlb	1	; () banked
 34408  013A74  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 34409  013A76  A4D8               	btfss	status,2,c
 34410  013A78  D0F0               	goto	l12766
 34411                           
 34412                           ; BSR set to: 1
 34413                           ;tcp.c: 3311: {
 34414                           ;tcp.c: 3312: SyncTCBStub(hTCP);
 34415                           
 34416                           ; BSR set to: 1
 34417                           
 34418                           ; BSR set to: 1
 34419  013A7A  0101               	movlb	1	; () banked
 34420  013A7C  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 34421  013A7E  EC3D  F0D0         	call	_SyncTCBStub
 34422                           
 34423                           ;tcp.c: 3313: if(!MyTCBStub.Flags.bServer)
 34424  013A82  0101               	movlb	1	; () banked
 34425  013A84  A7F7               	btfss	(_MyTCBStub+23)& (0+255),3,b
 34426  013A86  D0E6               	goto	l12762
 34427                           
 34428                           ; BSR set to: 1
 34429                           ;tcp.c: 3316: SyncTCB();
 34430                           
 34431                           ; BSR set to: 1
 34432                           
 34433                           ; BSR set to: 1
 34434                           ;tcp.c: 3314: continue;
 34435  013A88  EC1D  F0CB         	call	_SyncTCB	;wreg free
 34436                           
 34437                           ;tcp.c: 3320: if(MyTCB.localPort.Val != h->DestPort)
 34438  013A8C  0101               	movlb	1	; () banked
 34439  013A8E  EE20 F002          	lfsr	2,2
 34440  013A92  0101               	movlb	1	; () banked
 34441  013A94  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34442  013A96  26D9               	addwf	fsr2l,f,c
 34443  013A98  0101               	movlb	1	; () banked
 34444  013A9A  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34445  013A9C  22DA               	addwfc	fsr2h,f,c
 34446  013A9E  0101               	movlb	1	; () banked
 34447  013AA0  EE11  F0C9         	lfsr	1,_MyTCB+16
 34448  013AA4  52E6               	movf	postinc1,f,c
 34449  013AA6  52DE               	movf	postinc2,f,c
 34450  013AA8  50DD               	movf	postdec2,w,c
 34451  013AAA  18E5               	xorwf	postdec1,w,c
 34452  013AAC  CFDF FFE8          	movff	indf2,wreg
 34453  013AB0  B4D8               	btfsc	status,2,c
 34454  013AB2  18E7               	xorwf	indf1,w,c
 34455  013AB4  A4D8               	btfss	status,2,c
 34456  013AB6  D0CE               	goto	l12762
 34457                           
 34458                           ; BSR set to: 1
 34459                           ;tcp.c: 3325: memcpy((void*)&SYNQueue[wQueueInsertPos].niSourceAddress, (void*)remote, s
      +                          izeof(NODE_INFO));
 34460                           
 34461                           ; BSR set to: 1
 34462                           
 34463                           ; BSR set to: 1
 34464                           ;tcp.c: 3322: continue;
 34465  013AB8  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34466  013ABC  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34467  013AC0  0E00               	movlw	0
 34468  013AC2  0101               	movlb	1	; () banked
 34469  013AC4  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34470  013AC6  0E14               	movlw	20
 34471  013AC8  0101               	movlb	1	; () banked
 34472  013ACA  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34473  013ACC  ECF5  F0D9         	call	___wmul	;wreg free
 34474  013AD0  0102               	movlb	2	; () banked
 34475  013AD2  0E00               	movlw	low _SYNQueue
 34476  013AD4  0101               	movlb	1	; () banked
 34477  013AD6  250E               	addwf	?___wmul& (0+255),w,b
 34478  013AD8  0101               	movlb	1	; () banked
 34479  013ADA  6F14               	movwf	memcpy@d1& (0+255),b
 34480  013ADC  0102               	movlb	2	; () banked
 34481  013ADE  0E02               	movlw	high _SYNQueue
 34482  013AE0  0101               	movlb	1	; () banked
 34483  013AE2  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34484  013AE4  0101               	movlb	1	; () banked
 34485  013AE6  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 34486  013AE8  0101               	movlb	1	; () banked
 34487  013AEA  C12B  F117         	movff	FindMatchingSocket@remote+1,memcpy@s1+1
 34488  013AEE  0101               	movlb	1	; () banked
 34489  013AF0  C12A  F116         	movff	FindMatchingSocket@remote,memcpy@s1
 34490  013AF4  0E00               	movlw	0
 34491  013AF6  0101               	movlb	1	; () banked
 34492  013AF8  6F19               	movwf	(memcpy@n+1)& (0+255),b
 34493  013AFA  0E0A               	movlw	10
 34494  013AFC  0101               	movlb	1	; () banked
 34495  013AFE  6F18               	movwf	memcpy@n& (0+255),b
 34496  013B00  ECDC  F0D5         	call	_memcpy	;wreg free
 34497                           
 34498                           ;tcp.c: 3326: SYNQueue[wQueueInsertPos].wSourcePort = h->SourcePort;
 34499  013B04  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34500  013B08  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34501  013B0C  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34502  013B10  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34503  013B14  0E00               	movlw	0
 34504  013B16  0101               	movlb	1	; () banked
 34505  013B18  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34506  013B1A  0E14               	movlw	20
 34507  013B1C  0101               	movlb	1	; () banked
 34508  013B1E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34509  013B20  ECF5  F0D9         	call	___wmul	;wreg free
 34510  013B24  0E0A               	movlw	10
 34511  013B26  0101               	movlb	1	; () banked
 34512  013B28  270E               	addwf	?___wmul& (0+255),f,b
 34513  013B2A  0E00               	movlw	0
 34514  013B2C  0101               	movlb	1	; () banked
 34515  013B2E  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34516  013B30  0102               	movlb	2	; () banked
 34517  013B32  0E00               	movlw	low _SYNQueue
 34518  013B34  0101               	movlb	1	; () banked
 34519  013B36  250E               	addwf	?___wmul& (0+255),w,b
 34520  013B38  6EE1               	movwf	fsr1l,c
 34521  013B3A  0102               	movlb	2	; () banked
 34522  013B3C  0E02               	movlw	high _SYNQueue
 34523  013B3E  0101               	movlb	1	; () banked
 34524  013B40  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34525  013B42  6EE2               	movwf	fsr1h,c
 34526  013B44  CFDE FFE6          	movff	postinc2,postinc1
 34527  013B48  CFDD FFE5          	movff	postdec2,postdec1
 34528                           
 34529                           ; BSR set to: 1
 34530                           ;tcp.c: 3327: SYNQueue[wQueueInsertPos].dwSourceSEQ = h->SeqNumber;
 34531  013B4C  0101               	movlb	1	; () banked
 34532  013B4E  EE20 F004          	lfsr	2,4
 34533  013B52  0101               	movlb	1	; () banked
 34534  013B54  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34535  013B56  26D9               	addwf	fsr2l,f,c
 34536  013B58  0101               	movlb	1	; () banked
 34537  013B5A  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34538  013B5C  22DA               	addwfc	fsr2h,f,c
 34539  013B5E  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34540  013B62  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34541  013B66  0E00               	movlw	0
 34542  013B68  0101               	movlb	1	; () banked
 34543  013B6A  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34544  013B6C  0E14               	movlw	20
 34545  013B6E  0101               	movlb	1	; () banked
 34546  013B70  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34547  013B72  ECF5  F0D9         	call	___wmul	;wreg free
 34548  013B76  0E0C               	movlw	12
 34549  013B78  0101               	movlb	1	; () banked
 34550  013B7A  270E               	addwf	?___wmul& (0+255),f,b
 34551  013B7C  0E00               	movlw	0
 34552  013B7E  0101               	movlb	1	; () banked
 34553  013B80  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34554  013B82  0102               	movlb	2	; () banked
 34555  013B84  0E00               	movlw	low _SYNQueue
 34556  013B86  0101               	movlb	1	; () banked
 34557  013B88  250E               	addwf	?___wmul& (0+255),w,b
 34558  013B8A  6EE1               	movwf	fsr1l,c
 34559  013B8C  0102               	movlb	2	; () banked
 34560  013B8E  0E02               	movlw	high _SYNQueue
 34561  013B90  0101               	movlb	1	; () banked
 34562  013B92  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34563  013B94  6EE2               	movwf	fsr1h,c
 34564  013B96  CFDE FFE6          	movff	postinc2,postinc1
 34565  013B9A  CFDE FFE6          	movff	postinc2,postinc1
 34566  013B9E  CFDE FFE6          	movff	postinc2,postinc1
 34567  013BA2  CFDD FFE5          	movff	postdec2,postdec1
 34568  013BA6  52E5               	movf	postdec1,f,c
 34569  013BA8  52E5               	movf	postdec1,f,c
 34570                           
 34571                           ; BSR set to: 1
 34572                           ;tcp.c: 3328: SYNQueue[wQueueInsertPos].wDestPort = h->DestPort;
 34573  013BAA  0101               	movlb	1	; () banked
 34574  013BAC  EE20 F002          	lfsr	2,2
 34575  013BB0  0101               	movlb	1	; () banked
 34576  013BB2  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34577  013BB4  26D9               	addwf	fsr2l,f,c
 34578  013BB6  0101               	movlb	1	; () banked
 34579  013BB8  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34580  013BBA  22DA               	addwfc	fsr2h,f,c
 34581  013BBC  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34582  013BC0  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34583  013BC4  0E00               	movlw	0
 34584  013BC6  0101               	movlb	1	; () banked
 34585  013BC8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34586  013BCA  0E14               	movlw	20
 34587  013BCC  0101               	movlb	1	; () banked
 34588  013BCE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34589  013BD0  ECF5  F0D9         	call	___wmul	;wreg free
 34590  013BD4  0E10               	movlw	16
 34591  013BD6  0101               	movlb	1	; () banked
 34592  013BD8  270E               	addwf	?___wmul& (0+255),f,b
 34593  013BDA  0E00               	movlw	0
 34594  013BDC  0101               	movlb	1	; () banked
 34595  013BDE  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34596  013BE0  0102               	movlb	2	; () banked
 34597  013BE2  0E00               	movlw	low _SYNQueue
 34598  013BE4  0101               	movlb	1	; () banked
 34599  013BE6  250E               	addwf	?___wmul& (0+255),w,b
 34600  013BE8  6EE1               	movwf	fsr1l,c
 34601  013BEA  0102               	movlb	2	; () banked
 34602  013BEC  0E02               	movlw	high _SYNQueue
 34603  013BEE  0101               	movlb	1	; () banked
 34604  013BF0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34605  013BF2  6EE2               	movwf	fsr1h,c
 34606  013BF4  CFDE FFE6          	movff	postinc2,postinc1
 34607  013BF8  CFDD FFE5          	movff	postdec2,postdec1
 34608                           
 34609                           ; BSR set to: 1
 34610                           ;tcp.c: 3329: SYNQueue[wQueueInsertPos].wTimestamp = TickGetDiv256();
 34611  013BFC  EC4A  F0DB         	call	_TickGetDiv256	;wreg free
 34612  013C00  C100  F12C         	movff	?_TickGetDiv256,??_FindMatchingSocket
 34613  013C04  C101  F12D         	movff	?_TickGetDiv256+1,??_FindMatchingSocket+1
 34614  013C08  C102  F12E         	movff	?_TickGetDiv256+2,??_FindMatchingSocket+2
 34615  013C0C  C103  F12F         	movff	?_TickGetDiv256+3,??_FindMatchingSocket+3
 34616  013C10  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34617  013C14  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34618  013C18  0E00               	movlw	0
 34619  013C1A  0101               	movlb	1	; () banked
 34620  013C1C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34621  013C1E  0E14               	movlw	20
 34622  013C20  0101               	movlb	1	; () banked
 34623  013C22  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34624  013C24  ECF5  F0D9         	call	___wmul	;wreg free
 34625  013C28  0E12               	movlw	18
 34626  013C2A  0101               	movlb	1	; () banked
 34627  013C2C  270E               	addwf	?___wmul& (0+255),f,b
 34628  013C2E  0E00               	movlw	0
 34629  013C30  0101               	movlb	1	; () banked
 34630  013C32  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34631  013C34  0102               	movlb	2	; () banked
 34632  013C36  0E00               	movlw	low _SYNQueue
 34633  013C38  0101               	movlb	1	; () banked
 34634  013C3A  250E               	addwf	?___wmul& (0+255),w,b
 34635  013C3C  6ED9               	movwf	fsr2l,c
 34636  013C3E  0102               	movlb	2	; () banked
 34637  013C40  0E02               	movlw	high _SYNQueue
 34638  013C42  0101               	movlb	1	; () banked
 34639  013C44  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34640  013C46  6EDA               	movwf	fsr2h,c
 34641  013C48  C12C  FFDE         	movff	??_FindMatchingSocket,postinc2
 34642  013C4C  C12D  FFDD         	movff	??_FindMatchingSocket+1,postdec2
 34643                           
 34644                           ; BSR set to: 1
 34645                           ;tcp.c: 3331: return 0;
 34646  013C50  0E00               	movlw	0
 34647  013C52  0012               	return	
 34648  013C54                     l12762:
 34649                           
 34650                           ; BSR set to: 1
 34651  013C54  0101               	movlb	1	; () banked
 34652  013C56  2B37               	incf	FindMatchingSocket@hTCP& (0+255),f,b
 34653  013C58  D70C               	goto	L39
 34654  013C5A                     l12766:
 34655                           
 34656                           ; BSR set to: 1
 34657                           ;tcp.c: 3332: }
 34658                           ;tcp.c: 3333: }
 34659                           ;tcp.c: 3336: return 0;
 34660  013C5A  0E00               	movlw	0
 34661  013C5C  0012               	return	
 34662  013C5E                     __end_of_FindMatchingSocket:
 34663                           	opt stack 0
 34664                           tblptru	equ	0xFF8
 34665                           tblptrh	equ	0xFF7
 34666                           tblptrl	equ	0xFF6
 34667                           tablat	equ	0xFF5
 34668                           prodh	equ	0xFF4
 34669                           prodl	equ	0xFF3
 34670                           intcon	equ	0xFF2
 34671                           indf0	equ	0xFEF
 34672                           postinc0	equ	0xFEE
 34673                           fsr0h	equ	0xFEA
 34674                           fsr0l	equ	0xFE9
 34675                           wreg	equ	0xFE8
 34676                           indf1	equ	0xFE7
 34677                           postinc1	equ	0xFE6
 34678                           postdec1	equ	0xFE5
 34679                           fsr1h	equ	0xFE2
 34680                           fsr1l	equ	0xFE1
 34681                           indf2	equ	0xFDF
 34682                           postinc2	equ	0xFDE
 34683                           postdec2	equ	0xFDD
 34684                           fsr2h	equ	0xFDA
 34685                           fsr2l	equ	0xFD9
 34686                           status	equ	0xFD8
 34687                           
 34688 ;; *************** function ___wmul *****************
 34689 ;; Defined at:
 34690 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 34691 ;; Parameters:    Size  Location     Type
 34692 ;;  multiplier      2   14[BANK1 ] unsigned int 
 34693 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 34694 ;; Auto vars:     Size  Location     Type
 34695 ;;  product         2   18[BANK1 ] unsigned int 
 34696 ;; Return value:  Size  Location     Type
 34697 ;;                  2   14[BANK1 ] unsigned int 
 34698 ;; Registers used:
 34699 ;;		wreg, status,2, status,0, prodl, prodh
 34700 ;; Tracked objects:
 34701 ;;		On entry : 0/0
 34702 ;;		On exit  : 0/0
 34703 ;;		Unchanged: 0/0
 34704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 34705 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34706 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34708 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34709 ;;Total ram usage:        6 bytes
 34710 ;; Hardware stack levels used:    1
 34711 ;; Hardware stack levels required when called:   10
 34712 ;; This function calls:
 34713 ;;		Nothing
 34714 ;; This function is called by:
 34715 ;;		_TCPTick
 34716 ;;		_FindMatchingSocket
 34717 ;;		_fround
 34718 ;;		_scale
 34719 ;;		_sprintf
 34720 ;;		_uitoa
 34721 ;; This function uses a non-reentrant model
 34722 ;;
 34723                           
 34724                           	psect	text62
 34725  01B3EA                     __ptext62:
 34726                           	opt stack 0
 34727  01B3EA                     ___wmul:
 34728                           	opt stack 16
 34729                           
 34730                           ;incstack = 0
 34731  01B3EA  0101               	movlb	1	; () banked
 34732  01B3EC  510E               	movf	___wmul@multiplier& (0+255),w,b
 34733  01B3EE  0101               	movlb	1	; () banked
 34734  01B3F0  0310               	mulwf	___wmul@multiplicand& (0+255),b
 34735  01B3F2  CFF3 F112          	movff	prodl,___wmul@product
 34736  01B3F6  CFF4 F113          	movff	prodh,___wmul@product+1
 34737  01B3FA  0101               	movlb	1	; () banked
 34738  01B3FC  510E               	movf	___wmul@multiplier& (0+255),w,b
 34739  01B3FE  0101               	movlb	1	; () banked
 34740  01B400  0311               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34741  01B402  50F3               	movf	prodl,w,c
 34742  01B404  0101               	movlb	1	; () banked
 34743  01B406  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 34744  01B408  0101               	movlb	1	; () banked
 34745  01B40A  510F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34746  01B40C  0101               	movlb	1	; () banked
 34747  01B40E  0310               	mulwf	___wmul@multiplicand& (0+255),b
 34748  01B410  50F3               	movf	prodl,w,c
 34749  01B412  0101               	movlb	1	; () banked
 34750  01B414  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 34751                           
 34752                           ; BSR set to: 1
 34753  01B416  C112  F10E         	movff	___wmul@product,?___wmul
 34754  01B41A  C113  F10F         	movff	___wmul@product+1,?___wmul+1
 34755  01B41E  0012               	return	
 34756  01B420                     __end_of___wmul:
 34757                           	opt stack 0
 34758                           tblptru	equ	0xFF8
 34759                           tblptrh	equ	0xFF7
 34760                           tblptrl	equ	0xFF6
 34761                           tablat	equ	0xFF5
 34762                           prodh	equ	0xFF4
 34763                           prodl	equ	0xFF3
 34764                           intcon	equ	0xFF2
 34765                           indf0	equ	0xFEF
 34766                           postinc0	equ	0xFEE
 34767                           fsr0h	equ	0xFEA
 34768                           fsr0l	equ	0xFE9
 34769                           wreg	equ	0xFE8
 34770                           indf1	equ	0xFE7
 34771                           postinc1	equ	0xFE6
 34772                           postdec1	equ	0xFE5
 34773                           fsr1h	equ	0xFE2
 34774                           fsr1l	equ	0xFE1
 34775                           indf2	equ	0xFDF
 34776                           postinc2	equ	0xFDE
 34777                           postdec2	equ	0xFDD
 34778                           fsr2h	equ	0xFDA
 34779                           fsr2l	equ	0xFD9
 34780                           status	equ	0xFD8
 34781                           
 34782 ;; *************** function _TickGetDiv256 *****************
 34783 ;; Defined at:
 34784 ;;		line 290 in file "../tcpip/tick.c"
 34785 ;; Parameters:    Size  Location     Type
 34786 ;;		None
 34787 ;; Auto vars:     Size  Location     Type
 34788 ;;  dw              4    4[BANK1 ] unsigned long 
 34789 ;; Return value:  Size  Location     Type
 34790 ;;                  4    0[BANK1 ] unsigned long 
 34791 ;; Registers used:
 34792 ;;		fsr2l, fsr2h, cstack
 34793 ;; Tracked objects:
 34794 ;;		On entry : 0/0
 34795 ;;		On exit  : 0/0
 34796 ;;		Unchanged: 0/0
 34797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 34798 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34799 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34801 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34802 ;;Total ram usage:        8 bytes
 34803 ;; Hardware stack levels used:    1
 34804 ;; Hardware stack levels required when called:   11
 34805 ;; This function calls:
 34806 ;;		_GetTickCopy
 34807 ;; This function is called by:
 34808 ;;		_TCPPutArray
 34809 ;;		_TCPGetArray
 34810 ;;		_TCPTick
 34811 ;;		_FindMatchingSocket
 34812 ;;		_HandleTCPSeg
 34813 ;;		_TCPPut
 34814 ;;		_TCPPutROMArray
 34815 ;;		_TCPGet
 34816 ;; This function uses a non-reentrant model
 34817 ;;
 34818                           
 34819                           	psect	text63
 34820  01B694                     __ptext63:
 34821                           	opt stack 0
 34822  01B694                     _TickGetDiv256:
 34823                           	opt stack 16
 34824                           
 34825                           ;tick.c: 292: uint32_t dw;
 34826                           ;tick.c: 294: GetTickCopy();
 34827                           
 34828                           ; BSR set to: 1
 34829                           ;incstack = 0
 34830  01B694  EC2B  F0DA         	call	_GetTickCopy	;wreg free
 34831                           
 34832                           ;tick.c: 295: ((uint8_t*)&dw)[0] = vTickReading[1];
 34833  01B698  C0C8  F104         	movff	_vTickReading+1,TickGetDiv256@dw	;volatile
 34834                           
 34835                           ;tick.c: 296: ((uint8_t*)&dw)[1] = vTickReading[2];
 34836  01B69C  C0C9  F105         	movff	_vTickReading+2,TickGetDiv256@dw+1	;volatile
 34837                           
 34838                           ;tick.c: 297: ((uint8_t*)&dw)[2] = vTickReading[3];
 34839  01B6A0  C0CA  F106         	movff	_vTickReading+3,TickGetDiv256@dw+2	;volatile
 34840                           
 34841                           ;tick.c: 298: ((uint8_t*)&dw)[3] = vTickReading[4];
 34842  01B6A4  C0CB  F107         	movff	_vTickReading+4,TickGetDiv256@dw+3	;volatile
 34843                           
 34844                           ;tick.c: 300: return dw;
 34845  01B6A8  C104  F100         	movff	TickGetDiv256@dw,?_TickGetDiv256
 34846  01B6AC  C105  F101         	movff	TickGetDiv256@dw+1,?_TickGetDiv256+1
 34847  01B6B0  C106  F102         	movff	TickGetDiv256@dw+2,?_TickGetDiv256+2
 34848  01B6B4  C107  F103         	movff	TickGetDiv256@dw+3,?_TickGetDiv256+3
 34849  01B6B8  0012               	return	
 34850  01B6BA                     __end_of_TickGetDiv256:
 34851                           	opt stack 0
 34852                           tblptru	equ	0xFF8
 34853                           tblptrh	equ	0xFF7
 34854                           tblptrl	equ	0xFF6
 34855                           tablat	equ	0xFF5
 34856                           prodh	equ	0xFF4
 34857                           prodl	equ	0xFF3
 34858                           intcon	equ	0xFF2
 34859                           indf0	equ	0xFEF
 34860                           postinc0	equ	0xFEE
 34861                           fsr0h	equ	0xFEA
 34862                           fsr0l	equ	0xFE9
 34863                           wreg	equ	0xFE8
 34864                           indf1	equ	0xFE7
 34865                           postinc1	equ	0xFE6
 34866                           postdec1	equ	0xFE5
 34867                           fsr1h	equ	0xFE2
 34868                           fsr1l	equ	0xFE1
 34869                           indf2	equ	0xFDF
 34870                           postinc2	equ	0xFDE
 34871                           postdec2	equ	0xFDD
 34872                           fsr2h	equ	0xFDA
 34873                           fsr2l	equ	0xFD9
 34874                           status	equ	0xFD8
 34875                           
 34876 ;; *************** function _MACGetHeader *****************
 34877 ;; Defined at:
 34878 ;;		line 429 in file "../tcpip/ETH97J60.c"
 34879 ;; Parameters:    Size  Location     Type
 34880 ;;  remote          2   30[BANK1 ] PTR struct .
 34881 ;;		 -> remoteNode(10), 
 34882 ;;  type            2   32[BANK1 ] PTR unsigned char 
 34883 ;;		 -> StackTask@cFrameType(1), 
 34884 ;; Auto vars:     Size  Location     Type
 34885 ;;  header         20   36[BANK1 ] struct .
 34886 ;; Return value:  Size  Location     Type
 34887 ;;                  1    wreg      unsigned char 
 34888 ;; Registers used:
 34889 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34890 ;; Tracked objects:
 34891 ;;		On entry : 0/0
 34892 ;;		On exit  : 0/0
 34893 ;;		Unchanged: 0/0
 34894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 34895 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34896 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34897 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34898 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34899 ;;Total ram usage:       26 bytes
 34900 ;; Hardware stack levels used:    1
 34901 ;; Hardware stack levels required when called:   11
 34902 ;; This function calls:
 34903 ;;		_MACDiscardRx
 34904 ;;		_MACGetArray
 34905 ;;		_memcpy
 34906 ;;		_swaps
 34907 ;; This function is called by:
 34908 ;;		_StackTask
 34909 ;; This function uses a non-reentrant model
 34910 ;;
 34911                           
 34912                           	psect	text64
 34913  0187B2                     __ptext64:
 34914                           	opt stack 0
 34915  0187B2                     _MACGetHeader:
 34916                           	opt stack 17
 34917                           
 34918                           ;ETH97J60.c: 431: ENC_PREAMBLE header;
 34919                           ;ETH97J60.c: 434: if(EPKTCNT == 0u)
 34920                           
 34921                           ;incstack = 0
 34922  0187B2  010E               	movlb	14	; () banked
 34923  0187B4  67D9               	tstfsz	217,b	;volatile
 34924  0187B6  D002               	goto	l285
 34925                           
 34926                           ; BSR set to: 14
 34927                           ;ETH97J60.c: 435: {
 34928                           ;ETH97J60.c: 471: return FALSE;
 34929  0187B8  0E00               	movlw	0
 34930  0187BA  0012               	return	
 34931  0187BC                     l285:
 34932                           
 34933                           ; BSR set to: 14
 34934                           ;ETH97J60.c: 472: }
 34935                           ;ETH97J60.c: 476: flags.bits.bRXPolarityValid = 1;
 34936  0187BC  0101               	movlb	1	; () banked
 34937  0187BE  83B6               	bsf	_flags& (0+255),1,b
 34938                           
 34939                           ;ETH97J60.c: 479: if(flags.bits.bWasDiscarded == 0u)
 34940  0187C0  0101               	movlb	1	; () banked
 34941  0187C2  B1B6               	btfsc	_flags& (0+255),0,b
 34942  0187C4  D004               	goto	l287
 34943                           
 34944                           ; BSR set to: 1
 34945                           ;ETH97J60.c: 480: {
 34946                           ;ETH97J60.c: 481: MACDiscardRx();
 34947  0187C6  EC51  F0D8         	call	_MACDiscardRx	;wreg free
 34948                           
 34949                           ;ETH97J60.c: 482: return FALSE;
 34950  0187CA  0E00               	movlw	0
 34951  0187CC  0012               	return	
 34952  0187CE                     l287:
 34953                           
 34954                           ; BSR set to: 1
 34955                           ;ETH97J60.c: 483: }
 34956                           ;ETH97J60.c: 485: CurrentPacketLocation.Val = NextPacketLocation.Val;
 34957  0187CE  C0E3  F0E1         	movff	_NextPacketLocation,_CurrentPacketLocation
 34958  0187D2  C0E4  F0E2         	movff	_NextPacketLocation+1,_CurrentPacketLocation+1
 34959                           
 34960                           ;ETH97J60.c: 488: ERDPT = CurrentPacketLocation.Val;
 34961  0187D6  C0E1  FF7A         	movff	_CurrentPacketLocation,3962	;volatile
 34962  0187DA  C0E2  FF7B         	movff	_CurrentPacketLocation+1,3963	;volatile
 34963                           
 34964                           ; BSR set to: 1
 34965                           ;ETH97J60.c: 491: MACGetArray((BYTE*)&header, sizeof(header));
 34966  0187DE  0101               	movlb	1	; () banked
 34967  0187E0  0E01               	movlw	high MACGetHeader@header
 34968  0187E2  0101               	movlb	1	; () banked
 34969  0187E4  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 34970  0187E6  0101               	movlb	1	; () banked
 34971  0187E8  0E24               	movlw	low MACGetHeader@header
 34972  0187EA  0101               	movlb	1	; () banked
 34973  0187EC  6F00               	movwf	MACGetArray@val& (0+255),b
 34974  0187EE  0E00               	movlw	0
 34975  0187F0  0101               	movlb	1	; () banked
 34976  0187F2  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 34977  0187F4  0E14               	movlw	20
 34978  0187F6  0101               	movlb	1	; () banked
 34979  0187F8  6F02               	movwf	MACGetArray@len& (0+255),b
 34980  0187FA  EC42  F0D7         	call	_MACGetArray	;wreg free
 34981                           
 34982                           ;ETH97J60.c: 495: header.Type.Val = swaps(header.Type.Val);
 34983  0187FE  C136  F100         	movff	MACGetHeader@header+18,swaps@v
 34984  018802  C137  F101         	movff	MACGetHeader@header+19,swaps@v+1
 34985  018806  EC42  F0DC         	call	_swaps	;wreg free
 34986  01880A  0101               	movlb	1	; () banked
 34987  01880C  C100  F136         	movff	?_swaps,MACGetHeader@header+18
 34988  018810  0101               	movlb	1	; () banked
 34989  018812  C101  F137         	movff	?_swaps+1,MACGetHeader@header+19
 34990                           
 34991                           ; BSR set to: 1
 34992                           ;ETH97J60.c: 499: if(header.NextPacketPointer > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892
      +                          ul) - 0ul - 0ul)-2ul) | 0x0001ul) || ((BYTE_VAL*)(&header.NextPacketPointer))->bits.b0 |
      +                          |
 34993                           ;ETH97J60.c: 500: header.StatusVector.bits.Zero ||
 34994                           ;ETH97J60.c: 501: header.StatusVector.bits.CRCError ||
 34995                           ;ETH97J60.c: 502: header.StatusVector.bits.ByteCount > 1518u ||
 34996                           ;ETH97J60.c: 503: !header.StatusVector.bits.ReceiveOk)
 34997  018816  0EA6               	movlw	166
 34998  018818  0101               	movlb	1	; () banked
 34999  01881A  5D24               	subwf	MACGetHeader@header& (0+255),w,b
 35000  01881C  0E12               	movlw	18
 35001  01881E  0101               	movlb	1	; () banked
 35002  018820  5925               	subwfb	(MACGetHeader@header+1)& (0+255),w,b
 35003  018822  B0D8               	btfsc	status,0,c
 35004  018824  D013               	goto	l290
 35005                           
 35006                           ; BSR set to: 1
 35007  018826  0101               	movlb	1	; () banked
 35008  018828  B124               	btfsc	MACGetHeader@header& (0+255),0,b
 35009  01882A  D010               	goto	l290
 35010                           
 35011                           ; BSR set to: 1
 35012  01882C  0101               	movlb	1	; () banked
 35013  01882E  BF29               	btfsc	(MACGetHeader@header+5)& (0+255),7,b
 35014  018830  D00D               	goto	l290
 35015                           
 35016                           ; BSR set to: 1
 35017  018832  0101               	movlb	1	; () banked
 35018  018834  B928               	btfsc	(MACGetHeader@header+4)& (0+255),4,b
 35019  018836  D00A               	goto	l290
 35020                           
 35021                           ; BSR set to: 1
 35022  018838  0EEF               	movlw	239
 35023  01883A  0101               	movlb	1	; () banked
 35024  01883C  5D26               	subwf	(MACGetHeader@header+2)& (0+255),w,b
 35025  01883E  0E05               	movlw	5
 35026  018840  0101               	movlb	1	; () banked
 35027  018842  5927               	subwfb	(MACGetHeader@header+3)& (0+255),w,b
 35028  018844  B0D8               	btfsc	status,0,c
 35029  018846  D002               	goto	l290
 35030                           
 35031                           ; BSR set to: 1
 35032  018848  0101               	movlb	1	; () banked
 35033  01884A  AF28               	btfss	(MACGetHeader@header+4)& (0+255),7,b
 35034  01884C                     l290:
 35035                           
 35036                           ; BSR set to: 1
 35037  01884C  00FF               	reset		;# 
 35038                           
 35039                           ;ETH97J60.c: 506: }
 35040                           ;ETH97J60.c: 509: NextPacketLocation.Val = header.NextPacketPointer;
 35041  01884E  C124  F0E3         	movff	MACGetHeader@header,_NextPacketLocation
 35042  018852  C125  F0E4         	movff	MACGetHeader@header+1,_NextPacketLocation+1
 35043                           
 35044                           ;ETH97J60.c: 514: memcpy((void*)remote->v, (void*)header.SourceMACAddr.v, sizeof(*remote
      +                          ));
 35045  018856  0101               	movlb	1	; () banked
 35046  018858  C11F  F115         	movff	MACGetHeader@remote+1,memcpy@d1+1
 35047  01885C  0101               	movlb	1	; () banked
 35048  01885E  C11E  F114         	movff	MACGetHeader@remote,memcpy@d1
 35049  018862  0E30               	movlw	low (MACGetHeader@header+12)
 35050  018864  0101               	movlb	1	; () banked
 35051  018866  6F22               	movwf	??_MACGetHeader& (0+255),b
 35052  018868  0E01               	movlw	high (MACGetHeader@header+12)
 35053  01886A  6F23               	movwf	(??_MACGetHeader+1)& (0+255),b
 35054  01886C  C122  F116         	movff	??_MACGetHeader,memcpy@s1
 35055  018870  C123  F117         	movff	??_MACGetHeader+1,memcpy@s1+1
 35056  018874  0E00               	movlw	0
 35057  018876  0101               	movlb	1	; () banked
 35058  018878  6F19               	movwf	(memcpy@n+1)& (0+255),b
 35059  01887A  0E06               	movlw	6
 35060  01887C  0101               	movlb	1	; () banked
 35061  01887E  6F18               	movwf	memcpy@n& (0+255),b
 35062  018880  ECDC  F0D5         	call	_memcpy	;wreg free
 35063                           
 35064                           ;ETH97J60.c: 517: *type = (0xFFu);
 35065  018884  C120  FFD9         	movff	MACGetHeader@type,fsr2l
 35066  018888  C121  FFDA         	movff	MACGetHeader@type+1,fsr2h
 35067  01888C  0EFF               	movlw	255
 35068  01888E  6EDF               	movwf	indf2,c
 35069                           
 35070                           ;ETH97J60.c: 518: if( (header.Type.v[1] == 0x08u) &&
 35071                           ;ETH97J60.c: 519: ((header.Type.v[0] == (0x00u)) || (header.Type.v[0] == (0x06u))) )
 35072  018890  0101               	movlb	1	; () banked
 35073  018892  5137               	movf	(MACGetHeader@header+19)& (0+255),w,b
 35074  018894  0A08               	xorlw	8
 35075  018896  A4D8               	btfss	status,2,c
 35076  018898  D010               	goto	l13790
 35077                           
 35078                           ; BSR set to: 1
 35079  01889A  0101               	movlb	1	; () banked
 35080  01889C  5136               	movf	(MACGetHeader@header+18)& (0+255),w,b
 35081  01889E  B4D8               	btfsc	status,2,c
 35082  0188A0  D005               	goto	l13788
 35083                           
 35084                           ; BSR set to: 1
 35085  0188A2  0101               	movlb	1	; () banked
 35086  0188A4  5136               	movf	(MACGetHeader@header+18)& (0+255),w,b
 35087  0188A6  0A06               	xorlw	6
 35088  0188A8  A4D8               	btfss	status,2,c
 35089  0188AA  D007               	goto	l13790
 35090  0188AC                     l13788:
 35091                           
 35092                           ; BSR set to: 1
 35093                           ;ETH97J60.c: 520: {
 35094                           ;ETH97J60.c: 521: *type = header.Type.v[0];
 35095  0188AC  C120  FFD9         	movff	MACGetHeader@type,fsr2l
 35096  0188B0  C121  FFDA         	movff	MACGetHeader@type+1,fsr2h
 35097  0188B4  0101               	movlb	1	; () banked
 35098  0188B6  C136  FFDF         	movff	MACGetHeader@header+18,indf2
 35099  0188BA                     l13790:
 35100                           
 35101                           ; BSR set to: 1
 35102                           ;ETH97J60.c: 522: }
 35103                           ;ETH97J60.c: 525: flags.bits.bWasDiscarded = 0;
 35104  0188BA  0101               	movlb	1	; () banked
 35105  0188BC  91B6               	bcf	_flags& (0+255),0,b
 35106                           
 35107                           ; BSR set to: 1
 35108                           ;ETH97J60.c: 526: return TRUE;
 35109  0188BE  0E01               	movlw	1
 35110  0188C0  0012               	return	
 35111  0188C2                     __end_of_MACGetHeader:
 35112                           	opt stack 0
 35113                           tblptru	equ	0xFF8
 35114                           tblptrh	equ	0xFF7
 35115                           tblptrl	equ	0xFF6
 35116                           tablat	equ	0xFF5
 35117                           prodh	equ	0xFF4
 35118                           prodl	equ	0xFF3
 35119                           intcon	equ	0xFF2
 35120                           indf0	equ	0xFEF
 35121                           postinc0	equ	0xFEE
 35122                           fsr0h	equ	0xFEA
 35123                           fsr0l	equ	0xFE9
 35124                           wreg	equ	0xFE8
 35125                           indf1	equ	0xFE7
 35126                           postinc1	equ	0xFE6
 35127                           postdec1	equ	0xFE5
 35128                           fsr1h	equ	0xFE2
 35129                           fsr1l	equ	0xFE1
 35130                           indf2	equ	0xFDF
 35131                           postinc2	equ	0xFDE
 35132                           postdec2	equ	0xFDD
 35133                           fsr2h	equ	0xFDA
 35134                           fsr2l	equ	0xFD9
 35135                           status	equ	0xFD8
 35136                           
 35137 ;; *************** function _IPGetHeader *****************
 35138 ;; Defined at:
 35139 ;;		line 118 in file "../tcpip/ip.c"
 35140 ;; Parameters:    Size  Location     Type
 35141 ;;  localIP         2   50[BANK1 ] PTR struct .
 35142 ;;		 -> StackTask@tempLocalIP(4), 
 35143 ;;  remote          2   52[BANK1 ] PTR struct .
 35144 ;;		 -> remoteNode(10), 
 35145 ;;  protocol        2   54[BANK1 ] PTR unsigned char 
 35146 ;;		 -> StackTask@cIPFrameType(1), 
 35147 ;;  len             2   56[BANK1 ] PTR unsigned int 
 35148 ;;		 -> StackTask@dataCount(2), 
 35149 ;; Auto vars:     Size  Location     Type
 35150 ;;  header         20   64[BANK1 ] struct _IP_HEADER
 35151 ;;  CalcChecksum    2   62[BANK1 ] struct .
 35152 ;; Return value:  Size  Location     Type
 35153 ;;                  1    wreg      unsigned char 
 35154 ;; Registers used:
 35155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35156 ;; Tracked objects:
 35157 ;;		On entry : 0/0
 35158 ;;		On exit  : 0/0
 35159 ;;		Unchanged: 0/0
 35160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35161 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35162 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35163 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35164 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35165 ;;Total ram usage:       34 bytes
 35166 ;; Hardware stack levels used:    1
 35167 ;; Hardware stack levels required when called:   13
 35168 ;; This function calls:
 35169 ;;		_MACCalcRxChecksum
 35170 ;;		_MACGetArray
 35171 ;;		_MACSetReadPtrInRx
 35172 ;;		_SwapIPHeader
 35173 ;; This function is called by:
 35174 ;;		_StackTask
 35175 ;; This function uses a non-reentrant model
 35176 ;;
 35177                           
 35178                           	psect	text65
 35179  0178D4                     __ptext65:
 35180                           	opt stack 0
 35181  0178D4                     _IPGetHeader:
 35182                           	opt stack 15
 35183                           
 35184                           ;ip.c: 123: TCPIP_UINT16_VAL CalcChecksum;
 35185                           ;ip.c: 124: IP_HEADER header;
 35186                           ;ip.c: 135: MACGetArray((uint8_t*)&header, sizeof(header));
 35187                           
 35188                           ;incstack = 0
 35189  0178D4  0101               	movlb	1	; () banked
 35190  0178D6  0E01               	movlw	high IPGetHeader@header
 35191  0178D8  0101               	movlb	1	; () banked
 35192  0178DA  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 35193  0178DC  0101               	movlb	1	; () banked
 35194  0178DE  0E40               	movlw	low IPGetHeader@header
 35195  0178E0  0101               	movlb	1	; () banked
 35196  0178E2  6F00               	movwf	MACGetArray@val& (0+255),b
 35197  0178E4  0E00               	movlw	0
 35198  0178E6  0101               	movlb	1	; () banked
 35199  0178E8  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 35200  0178EA  0E14               	movlw	20
 35201  0178EC  0101               	movlb	1	; () banked
 35202  0178EE  6F02               	movwf	MACGetArray@len& (0+255),b
 35203  0178F0  EC42  F0D7         	call	_MACGetArray	;wreg free
 35204                           
 35205                           ;ip.c: 138: if((header.VersionIHL & 0xf0) != (0x40u))
 35206  0178F4  C140  F13A         	movff	IPGetHeader@header,??_IPGetHeader
 35207  0178F8  0EF0               	movlw	240
 35208  0178FA  0101               	movlb	1	; () banked
 35209  0178FC  173A               	andwf	??_IPGetHeader& (0+255),f,b
 35210  0178FE  0101               	movlb	1	; () banked
 35211  017900  513A               	movf	??_IPGetHeader& (0+255),w,b
 35212  017902  0A40               	xorlw	64
 35213  017904  B4D8               	btfsc	status,2,c
 35214  017906  D002               	goto	l13850
 35215                           
 35216                           ; BSR set to: 1
 35217                           ;ip.c: 139: return 0;
 35218  017908  0E00               	movlw	0
 35219  01790A  0012               	return	
 35220  01790C                     l13850:
 35221                           
 35222                           ; BSR set to: 1
 35223                           ;ip.c: 143: if(header.FragmentInfo & 0xFF1F)
 35224  01790C  0E1F               	movlw	31
 35225  01790E  0101               	movlb	1	; () banked
 35226  017910  6F3A               	movwf	??_IPGetHeader& (0+255),b
 35227  017912  0EFF               	movlw	255
 35228  017914  6F3B               	movwf	(??_IPGetHeader+1)& (0+255),b
 35229  017916  0101               	movlb	1	; () banked
 35230  017918  EE21  F046         	lfsr	2,IPGetHeader@header+6
 35231  01791C  CFDE F13C          	movff	postinc2,??_IPGetHeader+2
 35232  017920  CFDD F13D          	movff	postdec2,??_IPGetHeader+3
 35233  017924  0101               	movlb	1	; () banked
 35234  017926  513A               	movf	??_IPGetHeader& (0+255),w,b
 35235  017928  0101               	movlb	1	; () banked
 35236  01792A  173C               	andwf	(??_IPGetHeader+2)& (0+255),f,b
 35237  01792C  0101               	movlb	1	; () banked
 35238  01792E  513B               	movf	(??_IPGetHeader+1)& (0+255),w,b
 35239  017930  0101               	movlb	1	; () banked
 35240  017932  173D               	andwf	(??_IPGetHeader+3)& (0+255),f,b
 35241  017934  0101               	movlb	1	; () banked
 35242  017936  513D               	movf	(??_IPGetHeader+3)& (0+255),w,b
 35243  017938  113C               	iorwf	(??_IPGetHeader+2)& (0+255),w,b
 35244  01793A  B4D8               	btfsc	status,2,c
 35245  01793C  D002               	goto	l13856
 35246                           
 35247                           ; BSR set to: 1
 35248                           ;ip.c: 144: return 0;
 35249  01793E  0E00               	movlw	0
 35250  017940  0012               	return	
 35251  017942                     l13856:
 35252                           
 35253                           ; BSR set to: 1
 35254                           ;ip.c: 146: IPHeaderLen = (header.VersionIHL & 0x0f) << 2;
 35255  017942  C140  F13A         	movff	IPGetHeader@header,??_IPGetHeader
 35256  017946  0E0F               	movlw	15
 35257  017948  0101               	movlb	1	; () banked
 35258  01794A  173A               	andwf	??_IPGetHeader& (0+255),f,b
 35259  01794C  0101               	movlb	1	; () banked
 35260  01794E  90D8               	bcf	status,0,c
 35261  017950  373A               	rlcf	??_IPGetHeader& (0+255),f,b
 35262  017952  0101               	movlb	1	; () banked
 35263  017954  90D8               	bcf	status,0,c
 35264  017956  353A               	rlcf	??_IPGetHeader& (0+255),w,b
 35265  017958  0101               	movlb	1	; () banked
 35266  01795A  6FB5               	movwf	_IPHeaderLen& (0+255),b
 35267                           
 35268                           ; BSR set to: 1
 35269                           ;ip.c: 153: CalcChecksum.Val = MACCalcRxChecksum(0, IPHeaderLen);
 35270  01795C  0E00               	movlw	0
 35271  01795E  0101               	movlb	1	; () banked
 35272  017960  6F29               	movwf	(MACCalcRxChecksum@offset+1)& (0+255),b
 35273  017962  0E00               	movlw	0
 35274  017964  0101               	movlb	1	; () banked
 35275  017966  6F28               	movwf	MACCalcRxChecksum@offset& (0+255),b
 35276  017968  0101               	movlb	1	; () banked
 35277  01796A  C1B5  F12A         	movff	_IPHeaderLen,MACCalcRxChecksum@len
 35278  01796E  0101               	movlb	1	; () banked
 35279  017970  6B2B               	clrf	(MACCalcRxChecksum@len+1)& (0+255),b
 35280  017972  ECE4  F0D3         	call	_MACCalcRxChecksum	;wreg free
 35281  017976  0101               	movlb	1	; () banked
 35282  017978  C128  F13E         	movff	?_MACCalcRxChecksum,IPGetHeader@CalcChecksum
 35283  01797C  0101               	movlb	1	; () banked
 35284  01797E  C129  F13F         	movff	?_MACCalcRxChecksum+1,IPGetHeader@CalcChecksum+1
 35285                           
 35286                           ; BSR set to: 1
 35287                           ;ip.c: 156: MACSetReadPtrInRx(IPHeaderLen);
 35288  017982  0101               	movlb	1	; () banked
 35289  017984  C1B5  F100         	movff	_IPHeaderLen,MACSetReadPtrInRx@offset
 35290  017988  0101               	movlb	1	; () banked
 35291  01798A  6B01               	clrf	(MACSetReadPtrInRx@offset+1)& (0+255),b
 35292  01798C  EC25  F0D8         	call	_MACSetReadPtrInRx	;wreg free
 35293                           
 35294                           ;ip.c: 158: if(CalcChecksum.Val)
 35295  017990  0101               	movlb	1	; () banked
 35296  017992  513F               	movf	(IPGetHeader@CalcChecksum+1)& (0+255),w,b
 35297  017994  113E               	iorwf	IPGetHeader@CalcChecksum& (0+255),w,b
 35298  017996  B4D8               	btfsc	status,2,c
 35299  017998  D002               	goto	l13868
 35300                           
 35301                           ; BSR set to: 1
 35302                           ;ip.c: 192: {
 35303                           ;ip.c: 195: return 0;
 35304  01799A  0E00               	movlw	0
 35305  01799C  0012               	return	
 35306  01799E                     l13868:
 35307                           
 35308                           ; BSR set to: 1
 35309                           ;ip.c: 196: }
 35310                           ;ip.c: 199: SwapIPHeader(&header);
 35311  01799E  0101               	movlb	1	; () banked
 35312  0179A0  0E01               	movlw	high IPGetHeader@header
 35313  0179A2  0101               	movlb	1	; () banked
 35314  0179A4  6F06               	movwf	(SwapIPHeader@h+1)& (0+255),b
 35315  0179A6  0101               	movlb	1	; () banked
 35316  0179A8  0E40               	movlw	low IPGetHeader@header
 35317  0179AA  0101               	movlb	1	; () banked
 35318  0179AC  6F05               	movwf	SwapIPHeader@h& (0+255),b
 35319  0179AE  EC28  F0CF         	call	_SwapIPHeader	;wreg free
 35320                           
 35321                           ;ip.c: 203: if ( localIP )
 35322  0179B2  0101               	movlb	1	; () banked
 35323  0179B4  5133               	movf	(IPGetHeader@localIP+1)& (0+255),w,b
 35324  0179B6  1132               	iorwf	IPGetHeader@localIP& (0+255),w,b
 35325  0179B8  B4D8               	btfsc	status,2,c
 35326  0179BA  D010               	goto	l719
 35327                           
 35328                           ; BSR set to: 1
 35329                           ;ip.c: 204: localIP->Val = header.DestAddress.Val;
 35330  0179BC  C132  FFD9         	movff	IPGetHeader@localIP,fsr2l
 35331  0179C0  C133  FFDA         	movff	IPGetHeader@localIP+1,fsr2h
 35332  0179C4  0101               	movlb	1	; () banked
 35333  0179C6  C150  FFDE         	movff	IPGetHeader@header+16,postinc2
 35334  0179CA  0101               	movlb	1	; () banked
 35335  0179CC  C151  FFDE         	movff	IPGetHeader@header+17,postinc2
 35336  0179D0  0101               	movlb	1	; () banked
 35337  0179D2  C152  FFDE         	movff	IPGetHeader@header+18,postinc2
 35338  0179D6  0101               	movlb	1	; () banked
 35339  0179D8  C153  FFDE         	movff	IPGetHeader@header+19,postinc2
 35340  0179DC                     l719:
 35341                           
 35342                           ; BSR set to: 1
 35343                           ;ip.c: 206: remote->IPAddr.Val = header.SourceAddress.Val;
 35344  0179DC  C134  FFD9         	movff	IPGetHeader@remote,fsr2l
 35345  0179E0  C135  FFDA         	movff	IPGetHeader@remote+1,fsr2h
 35346  0179E4  0101               	movlb	1	; () banked
 35347  0179E6  C14C  FFDE         	movff	IPGetHeader@header+12,postinc2
 35348  0179EA  0101               	movlb	1	; () banked
 35349  0179EC  C14D  FFDE         	movff	IPGetHeader@header+13,postinc2
 35350  0179F0  0101               	movlb	1	; () banked
 35351  0179F2  C14E  FFDE         	movff	IPGetHeader@header+14,postinc2
 35352  0179F6  0101               	movlb	1	; () banked
 35353  0179F8  C14F  FFDE         	movff	IPGetHeader@header+15,postinc2
 35354                           
 35355                           ;ip.c: 207: *protocol = header.Protocol;
 35356  0179FC  C136  FFD9         	movff	IPGetHeader@protocol,fsr2l
 35357  017A00  C137  FFDA         	movff	IPGetHeader@protocol+1,fsr2h
 35358  017A04  0101               	movlb	1	; () banked
 35359  017A06  C149  FFDF         	movff	IPGetHeader@header+9,indf2
 35360                           
 35361                           ; BSR set to: 1
 35362                           ;ip.c: 208: *len = header.TotalLength - IPHeaderLen;
 35363  017A0A  0101               	movlb	1	; () banked
 35364  017A0C  51B5               	movf	_IPHeaderLen& (0+255),w,b
 35365  017A0E  0101               	movlb	1	; () banked
 35366  017A10  6F3A               	movwf	??_IPGetHeader& (0+255),b
 35367  017A12  6B3B               	clrf	(??_IPGetHeader+1)& (0+255),b
 35368  017A14  0101               	movlb	1	; () banked
 35369  017A16  1F3A               	comf	??_IPGetHeader& (0+255),f,b
 35370  017A18  1F3B               	comf	(??_IPGetHeader+1)& (0+255),f,b
 35371  017A1A  4B3A               	infsnz	??_IPGetHeader& (0+255),f,b
 35372  017A1C  2B3B               	incf	(??_IPGetHeader+1)& (0+255),f,b
 35373  017A1E  0101               	movlb	1	; () banked
 35374  017A20  5142               	movf	(IPGetHeader@header+2)& (0+255),w,b
 35375  017A22  0101               	movlb	1	; () banked
 35376  017A24  273A               	addwf	??_IPGetHeader& (0+255),f,b
 35377  017A26  0101               	movlb	1	; () banked
 35378  017A28  5143               	movf	(IPGetHeader@header+3)& (0+255),w,b
 35379  017A2A  0101               	movlb	1	; () banked
 35380  017A2C  233B               	addwfc	(??_IPGetHeader+1)& (0+255),f,b
 35381  017A2E  C138  FFD9         	movff	IPGetHeader@len,fsr2l
 35382  017A32  C139  FFDA         	movff	IPGetHeader@len+1,fsr2h
 35383  017A36  C13A  FFDE         	movff	??_IPGetHeader,postinc2
 35384  017A3A  C13B  FFDD         	movff	??_IPGetHeader+1,postdec2
 35385                           
 35386                           ; BSR set to: 1
 35387                           ;ip.c: 210: return 1;
 35388  017A3E  0E01               	movlw	1
 35389  017A40  0012               	return	
 35390  017A42                     __end_of_IPGetHeader:
 35391                           	opt stack 0
 35392                           tblptru	equ	0xFF8
 35393                           tblptrh	equ	0xFF7
 35394                           tblptrl	equ	0xFF6
 35395                           tablat	equ	0xFF5
 35396                           prodh	equ	0xFF4
 35397                           prodl	equ	0xFF3
 35398                           intcon	equ	0xFF2
 35399                           indf0	equ	0xFEF
 35400                           postinc0	equ	0xFEE
 35401                           fsr0h	equ	0xFEA
 35402                           fsr0l	equ	0xFE9
 35403                           wreg	equ	0xFE8
 35404                           indf1	equ	0xFE7
 35405                           postinc1	equ	0xFE6
 35406                           postdec1	equ	0xFE5
 35407                           fsr1h	equ	0xFE2
 35408                           fsr1l	equ	0xFE1
 35409                           indf2	equ	0xFDF
 35410                           postinc2	equ	0xFDE
 35411                           postdec2	equ	0xFDD
 35412                           fsr2h	equ	0xFDA
 35413                           fsr2l	equ	0xFD9
 35414                           status	equ	0xFD8
 35415                           
 35416 ;; *************** function _SwapIPHeader *****************
 35417 ;; Defined at:
 35418 ;;		line 288 in file "../tcpip/ip.c"
 35419 ;; Parameters:    Size  Location     Type
 35420 ;;  h               2    5[BANK1 ] PTR struct _IP_HEADER
 35421 ;;		 -> IPPutHeader@header(20), IPGetHeader@header(20), 
 35422 ;; Auto vars:     Size  Location     Type
 35423 ;;		None
 35424 ;; Return value:  Size  Location     Type
 35425 ;;		None               void
 35426 ;; Registers used:
 35427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35428 ;; Tracked objects:
 35429 ;;		On entry : 0/0
 35430 ;;		On exit  : 0/0
 35431 ;;		Unchanged: 0/0
 35432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35433 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35436 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35437 ;;Total ram usage:        2 bytes
 35438 ;; Hardware stack levels used:    1
 35439 ;; Hardware stack levels required when called:   11
 35440 ;; This function calls:
 35441 ;;		_swaps
 35442 ;; This function is called by:
 35443 ;;		_IPGetHeader
 35444 ;;		_IPPutHeader
 35445 ;; This function uses a non-reentrant model
 35446 ;;
 35447                           
 35448                           	psect	text66
 35449  019E50                     __ptext66:
 35450                           	opt stack 0
 35451  019E50                     _SwapIPHeader:
 35452                           	opt stack 13
 35453                           
 35454                           ;ip.c: 290: h->TotalLength = swaps(h->TotalLength);
 35455                           
 35456                           ; BSR set to: 1
 35457                           ;incstack = 0
 35458  019E50  0101               	movlb	1	; () banked
 35459  019E52  EE20 F002          	lfsr	2,2
 35460  019E56  0101               	movlb	1	; () banked
 35461  019E58  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35462  019E5A  26D9               	addwf	fsr2l,f,c
 35463  019E5C  0101               	movlb	1	; () banked
 35464  019E5E  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35465  019E60  22DA               	addwfc	fsr2h,f,c
 35466  019E62  0101               	movlb	1	; () banked
 35467  019E64  CFDE F100          	movff	postinc2,swaps@v
 35468  019E68  0101               	movlb	1	; () banked
 35469  019E6A  CFDD F101          	movff	postdec2,swaps@v+1
 35470  019E6E  EC42  F0DC         	call	_swaps	;wreg free
 35471  019E72  0101               	movlb	1	; () banked
 35472  019E74  EE20 F002          	lfsr	2,2
 35473  019E78  0101               	movlb	1	; () banked
 35474  019E7A  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35475  019E7C  26D9               	addwf	fsr2l,f,c
 35476  019E7E  0101               	movlb	1	; () banked
 35477  019E80  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35478  019E82  22DA               	addwfc	fsr2h,f,c
 35479  019E84  0101               	movlb	1	; () banked
 35480  019E86  C100  FFDE         	movff	?_swaps,postinc2
 35481  019E8A  0101               	movlb	1	; () banked
 35482  019E8C  C101  FFDD         	movff	?_swaps+1,postdec2
 35483                           
 35484                           ;ip.c: 291: h->Identification = swaps(h->Identification);
 35485  019E90  0101               	movlb	1	; () banked
 35486  019E92  EE20 F004          	lfsr	2,4
 35487  019E96  0101               	movlb	1	; () banked
 35488  019E98  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35489  019E9A  26D9               	addwf	fsr2l,f,c
 35490  019E9C  0101               	movlb	1	; () banked
 35491  019E9E  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35492  019EA0  22DA               	addwfc	fsr2h,f,c
 35493  019EA2  0101               	movlb	1	; () banked
 35494  019EA4  CFDE F100          	movff	postinc2,swaps@v
 35495  019EA8  0101               	movlb	1	; () banked
 35496  019EAA  CFDD F101          	movff	postdec2,swaps@v+1
 35497  019EAE  EC42  F0DC         	call	_swaps	;wreg free
 35498  019EB2  0101               	movlb	1	; () banked
 35499  019EB4  EE20 F004          	lfsr	2,4
 35500  019EB8  0101               	movlb	1	; () banked
 35501  019EBA  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35502  019EBC  26D9               	addwf	fsr2l,f,c
 35503  019EBE  0101               	movlb	1	; () banked
 35504  019EC0  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35505  019EC2  22DA               	addwfc	fsr2h,f,c
 35506  019EC4  0101               	movlb	1	; () banked
 35507  019EC6  C100  FFDE         	movff	?_swaps,postinc2
 35508  019ECA  0101               	movlb	1	; () banked
 35509  019ECC  C101  FFDD         	movff	?_swaps+1,postdec2
 35510                           
 35511                           ;ip.c: 292: h->HeaderChecksum = swaps(h->HeaderChecksum);
 35512  019ED0  0101               	movlb	1	; () banked
 35513  019ED2  EE20 F00A          	lfsr	2,10
 35514  019ED6  0101               	movlb	1	; () banked
 35515  019ED8  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35516  019EDA  26D9               	addwf	fsr2l,f,c
 35517  019EDC  0101               	movlb	1	; () banked
 35518  019EDE  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35519  019EE0  22DA               	addwfc	fsr2h,f,c
 35520  019EE2  0101               	movlb	1	; () banked
 35521  019EE4  CFDE F100          	movff	postinc2,swaps@v
 35522  019EE8  0101               	movlb	1	; () banked
 35523  019EEA  CFDD F101          	movff	postdec2,swaps@v+1
 35524  019EEE  EC42  F0DC         	call	_swaps	;wreg free
 35525  019EF2  0101               	movlb	1	; () banked
 35526  019EF4  EE20 F00A          	lfsr	2,10
 35527  019EF8  0101               	movlb	1	; () banked
 35528  019EFA  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35529  019EFC  26D9               	addwf	fsr2l,f,c
 35530  019EFE  0101               	movlb	1	; () banked
 35531  019F00  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35532  019F02  22DA               	addwfc	fsr2h,f,c
 35533  019F04  0101               	movlb	1	; () banked
 35534  019F06  C100  FFDE         	movff	?_swaps,postinc2
 35535  019F0A  0101               	movlb	1	; () banked
 35536  019F0C  C101  FFDD         	movff	?_swaps+1,postdec2
 35537                           
 35538                           ; BSR set to: 1
 35539  019F10  0012               	return	
 35540  019F12                     __end_of_SwapIPHeader:
 35541                           	opt stack 0
 35542                           tblptru	equ	0xFF8
 35543                           tblptrh	equ	0xFF7
 35544                           tblptrl	equ	0xFF6
 35545                           tablat	equ	0xFF5
 35546                           prodh	equ	0xFF4
 35547                           prodl	equ	0xFF3
 35548                           intcon	equ	0xFF2
 35549                           indf0	equ	0xFEF
 35550                           postinc0	equ	0xFEE
 35551                           fsr0h	equ	0xFEA
 35552                           fsr0l	equ	0xFE9
 35553                           wreg	equ	0xFE8
 35554                           indf1	equ	0xFE7
 35555                           postinc1	equ	0xFE6
 35556                           postdec1	equ	0xFE5
 35557                           fsr1h	equ	0xFE2
 35558                           fsr1l	equ	0xFE1
 35559                           indf2	equ	0xFDF
 35560                           postinc2	equ	0xFDE
 35561                           postdec2	equ	0xFDD
 35562                           fsr2h	equ	0xFDA
 35563                           fsr2l	equ	0xFD9
 35564                           status	equ	0xFD8
 35565                           
 35566 ;; *************** function _MACSetReadPtrInRx *****************
 35567 ;; Defined at:
 35568 ;;		line 671 in file "../tcpip/ETH97J60.c"
 35569 ;; Parameters:    Size  Location     Type
 35570 ;;  offset          2    0[BANK1 ] unsigned int 
 35571 ;; Auto vars:     Size  Location     Type
 35572 ;;  ReadPT          2    4[BANK1 ] struct .
 35573 ;; Return value:  Size  Location     Type
 35574 ;;		None               void
 35575 ;; Registers used:
 35576 ;;		wreg, status,2, status,0
 35577 ;; Tracked objects:
 35578 ;;		On entry : 0/0
 35579 ;;		On exit  : 0/0
 35580 ;;		Unchanged: 0/0
 35581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35582 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35583 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35584 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35585 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35586 ;;Total ram usage:        6 bytes
 35587 ;; Hardware stack levels used:    1
 35588 ;; Hardware stack levels required when called:   10
 35589 ;; This function calls:
 35590 ;;		Nothing
 35591 ;; This function is called by:
 35592 ;;		_IPGetHeader
 35593 ;;		_IPSetRxBuffer
 35594 ;; This function uses a non-reentrant model
 35595 ;;
 35596                           
 35597                           	psect	text67
 35598  01B04A                     __ptext67:
 35599                           	opt stack 0
 35600  01B04A                     _MACSetReadPtrInRx:
 35601                           	opt stack 16
 35602                           
 35603                           ;ETH97J60.c: 673: WORD_VAL ReadPT;
 35604                           ;ETH97J60.c: 677: ReadPT.Val = CurrentPacketLocation.Val + sizeof(ENC_PREAMBLE) + offset
      +                          ;
 35605                           
 35606                           ; BSR set to: 1
 35607                           ;incstack = 0
 35608  01B04A  0100               	movlb	0	; () banked
 35609  01B04C  C0E1  F102         	movff	_CurrentPacketLocation,??_MACSetReadPtrInRx
 35610  01B050  0100               	movlb	0	; () banked
 35611  01B052  C0E2  F103         	movff	_CurrentPacketLocation+1,??_MACSetReadPtrInRx+1
 35612  01B056  0101               	movlb	1	; () banked
 35613  01B058  5100               	movf	MACSetReadPtrInRx@offset& (0+255),w,b
 35614  01B05A  0101               	movlb	1	; () banked
 35615  01B05C  2702               	addwf	??_MACSetReadPtrInRx& (0+255),f,b
 35616  01B05E  0101               	movlb	1	; () banked
 35617  01B060  5101               	movf	(MACSetReadPtrInRx@offset+1)& (0+255),w,b
 35618  01B062  0101               	movlb	1	; () banked
 35619  01B064  2303               	addwfc	(??_MACSetReadPtrInRx+1)& (0+255),f,b
 35620  01B066  0E14               	movlw	20
 35621  01B068  0101               	movlb	1	; () banked
 35622  01B06A  2502               	addwf	??_MACSetReadPtrInRx& (0+255),w,b
 35623  01B06C  0101               	movlb	1	; () banked
 35624  01B06E  6F04               	movwf	MACSetReadPtrInRx@ReadPT& (0+255),b
 35625  01B070  0E00               	movlw	0
 35626  01B072  0101               	movlb	1	; () banked
 35627  01B074  2103               	addwfc	(??_MACSetReadPtrInRx+1)& (0+255),w,b
 35628  01B076  0101               	movlb	1	; () banked
 35629  01B078  6F05               	movwf	(MACSetReadPtrInRx@ReadPT+1)& (0+255),b
 35630                           
 35631                           ;ETH97J60.c: 680: if(ReadPT.Val > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0u
      +                          l)-2ul) | 0x0001ul))
 35632  01B07A  0EA6               	movlw	166
 35633  01B07C  0101               	movlb	1	; () banked
 35634  01B07E  5D04               	subwf	MACSetReadPtrInRx@ReadPT& (0+255),w,b
 35635  01B080  0E12               	movlw	18
 35636  01B082  0101               	movlb	1	; () banked
 35637  01B084  5905               	subwfb	(MACSetReadPtrInRx@ReadPT+1)& (0+255),w,b
 35638  01B086  A0D8               	btfss	status,0,c
 35639  01B088  D007               	goto	l10254
 35640                           
 35641                           ; BSR set to: 1
 35642                           ;ETH97J60.c: 681: ReadPT.Val -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul
      +                          )-2ul) | 0x0001ul)-(0ul)+1ul);
 35643  01B08A  0101               	movlb	1	; () banked
 35644  01B08C  0EA6               	movlw	166
 35645  01B08E  0101               	movlb	1	; () banked
 35646  01B090  5F04               	subwf	MACSetReadPtrInRx@ReadPT& (0+255),f,b
 35647  01B092  0E12               	movlw	18
 35648  01B094  0101               	movlb	1	; () banked
 35649  01B096  5B05               	subwfb	(MACSetReadPtrInRx@ReadPT+1)& (0+255),f,b
 35650  01B098                     l10254:
 35651                           
 35652                           ; BSR set to: 1
 35653                           ;ETH97J60.c: 684: ERDPTL = ReadPT.v[0];
 35654  01B098  C104  FF7A         	movff	MACSetReadPtrInRx@ReadPT,3962	;volatile
 35655                           
 35656                           ; BSR set to: 1
 35657                           ;ETH97J60.c: 685: ERDPTH = ReadPT.v[1];
 35658  01B09C  C105  FF7B         	movff	MACSetReadPtrInRx@ReadPT+1,3963	;volatile
 35659                           
 35660                           ; BSR set to: 1
 35661  01B0A0  0012               	return	
 35662  01B0A2                     __end_of_MACSetReadPtrInRx:
 35663                           	opt stack 0
 35664                           tblptru	equ	0xFF8
 35665                           tblptrh	equ	0xFF7
 35666                           tblptrl	equ	0xFF6
 35667                           tablat	equ	0xFF5
 35668                           prodh	equ	0xFF4
 35669                           prodl	equ	0xFF3
 35670                           intcon	equ	0xFF2
 35671                           indf0	equ	0xFEF
 35672                           postinc0	equ	0xFEE
 35673                           fsr0h	equ	0xFEA
 35674                           fsr0l	equ	0xFE9
 35675                           wreg	equ	0xFE8
 35676                           indf1	equ	0xFE7
 35677                           postinc1	equ	0xFE6
 35678                           postdec1	equ	0xFE5
 35679                           fsr1h	equ	0xFE2
 35680                           fsr1l	equ	0xFE1
 35681                           indf2	equ	0xFDF
 35682                           postinc2	equ	0xFDE
 35683                           postdec2	equ	0xFDD
 35684                           fsr2h	equ	0xFDA
 35685                           fsr2l	equ	0xFD9
 35686                           status	equ	0xFD8
 35687                           
 35688 ;; *************** function _MACCalcRxChecksum *****************
 35689 ;; Defined at:
 35690 ;;		line 759 in file "../tcpip/ETH97J60.c"
 35691 ;; Parameters:    Size  Location     Type
 35692 ;;  offset          2   40[BANK1 ] unsigned int 
 35693 ;;  len             2   42[BANK1 ] unsigned int 
 35694 ;; Auto vars:     Size  Location     Type
 35695 ;;  temp            2   48[BANK1 ] unsigned short 
 35696 ;;  RDSave          2   46[BANK1 ] unsigned short 
 35697 ;; Return value:  Size  Location     Type
 35698 ;;                  2   40[BANK1 ] unsigned int 
 35699 ;; Registers used:
 35700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35701 ;; Tracked objects:
 35702 ;;		On entry : 0/0
 35703 ;;		On exit  : 0/0
 35704 ;;		Unchanged: 0/0
 35705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35706 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35707 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35708 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35709 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35710 ;;Total ram usage:       10 bytes
 35711 ;; Hardware stack levels used:    1
 35712 ;; Hardware stack levels required when called:   12
 35713 ;; This function calls:
 35714 ;;		_CalcIPBufferChecksum
 35715 ;; This function is called by:
 35716 ;;		_IPGetHeader
 35717 ;; This function uses a non-reentrant model
 35718 ;;
 35719                           
 35720                           	psect	text68
 35721  01A7C8                     __ptext68:
 35722                           	opt stack 0
 35723  01A7C8                     _MACCalcRxChecksum:
 35724                           	opt stack 15
 35725                           
 35726                           ;ETH97J60.c: 761: WORD temp;
 35727                           ;ETH97J60.c: 762: WORD RDSave;
 35728                           ;ETH97J60.c: 765: temp = CurrentPacketLocation.Val + sizeof(ENC_PREAMBLE) + offset;
 35729                           
 35730                           ; BSR set to: 1
 35731                           ;incstack = 0
 35732  01A7C8  0100               	movlb	0	; () banked
 35733  01A7CA  C0E1  F12C         	movff	_CurrentPacketLocation,??_MACCalcRxChecksum
 35734  01A7CE  0100               	movlb	0	; () banked
 35735  01A7D0  C0E2  F12D         	movff	_CurrentPacketLocation+1,??_MACCalcRxChecksum+1
 35736  01A7D4  0101               	movlb	1	; () banked
 35737  01A7D6  5128               	movf	MACCalcRxChecksum@offset& (0+255),w,b
 35738  01A7D8  0101               	movlb	1	; () banked
 35739  01A7DA  272C               	addwf	??_MACCalcRxChecksum& (0+255),f,b
 35740  01A7DC  0101               	movlb	1	; () banked
 35741  01A7DE  5129               	movf	(MACCalcRxChecksum@offset+1)& (0+255),w,b
 35742  01A7E0  0101               	movlb	1	; () banked
 35743  01A7E2  232D               	addwfc	(??_MACCalcRxChecksum+1)& (0+255),f,b
 35744  01A7E4  0E14               	movlw	20
 35745  01A7E6  0101               	movlb	1	; () banked
 35746  01A7E8  252C               	addwf	??_MACCalcRxChecksum& (0+255),w,b
 35747  01A7EA  0101               	movlb	1	; () banked
 35748  01A7EC  6F30               	movwf	MACCalcRxChecksum@temp& (0+255),b
 35749  01A7EE  0E00               	movlw	0
 35750  01A7F0  0101               	movlb	1	; () banked
 35751  01A7F2  212D               	addwfc	(??_MACCalcRxChecksum+1)& (0+255),w,b
 35752  01A7F4  0101               	movlb	1	; () banked
 35753  01A7F6  6F31               	movwf	(MACCalcRxChecksum@temp+1)& (0+255),b
 35754                           
 35755                           ;ETH97J60.c: 766: if(temp > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul
      +                          ) | 0x0001ul))
 35756  01A7F8  0EA6               	movlw	166
 35757  01A7FA  0101               	movlb	1	; () banked
 35758  01A7FC  5D30               	subwf	MACCalcRxChecksum@temp& (0+255),w,b
 35759  01A7FE  0E12               	movlw	18
 35760  01A800  0101               	movlb	1	; () banked
 35761  01A802  5931               	subwfb	(MACCalcRxChecksum@temp+1)& (0+255),w,b
 35762  01A804  A0D8               	btfss	status,0,c
 35763  01A806  D007               	goto	l12400
 35764                           
 35765                           ; BSR set to: 1
 35766                           ;ETH97J60.c: 767: {
 35767                           ;ETH97J60.c: 768: temp -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul)
      +                           | 0x0001ul)-(0ul)+1ul);
 35768  01A808  0101               	movlb	1	; () banked
 35769  01A80A  0EA6               	movlw	166
 35770  01A80C  0101               	movlb	1	; () banked
 35771  01A80E  5F30               	subwf	MACCalcRxChecksum@temp& (0+255),f,b
 35772  01A810  0E12               	movlw	18
 35773  01A812  0101               	movlb	1	; () banked
 35774  01A814  5B31               	subwfb	(MACCalcRxChecksum@temp+1)& (0+255),f,b
 35775  01A816                     l12400:
 35776                           
 35777                           ; BSR set to: 1
 35778                           ;ETH97J60.c: 769: }
 35779                           ;ETH97J60.c: 771: RDSave = ERDPT;
 35780  01A816  CF7A F12E          	movff	3962,MACCalcRxChecksum@RDSave	;volatile
 35781  01A81A  CF7B F12F          	movff	3963,MACCalcRxChecksum@RDSave+1	;volatile
 35782                           
 35783                           ; BSR set to: 1
 35784                           ;ETH97J60.c: 772: ERDPT = temp;
 35785  01A81E  C130  FF7A         	movff	MACCalcRxChecksum@temp,3962	;volatile
 35786  01A822  C131  FF7B         	movff	MACCalcRxChecksum@temp+1,3963	;volatile
 35787                           
 35788                           ; BSR set to: 1
 35789                           ;ETH97J60.c: 773: temp = CalcIPBufferChecksum(len);
 35790  01A826  C12A  F106         	movff	MACCalcRxChecksum@len,CalcIPBufferChecksum@len
 35791  01A82A  C12B  F107         	movff	MACCalcRxChecksum@len+1,CalcIPBufferChecksum@len+1
 35792  01A82E  EC81  F0BE         	call	_CalcIPBufferChecksum	;wreg free
 35793  01A832  0101               	movlb	1	; () banked
 35794  01A834  C106  F130         	movff	?_CalcIPBufferChecksum,MACCalcRxChecksum@temp
 35795  01A838  0101               	movlb	1	; () banked
 35796  01A83A  C107  F131         	movff	?_CalcIPBufferChecksum+1,MACCalcRxChecksum@temp+1
 35797                           
 35798                           ; BSR set to: 1
 35799                           ;ETH97J60.c: 774: ERDPT = RDSave;
 35800  01A83E  C12E  FF7A         	movff	MACCalcRxChecksum@RDSave,3962	;volatile
 35801  01A842  C12F  FF7B         	movff	MACCalcRxChecksum@RDSave+1,3963	;volatile
 35802                           
 35803                           ; BSR set to: 1
 35804                           ;ETH97J60.c: 776: return temp;
 35805  01A846  C130  F128         	movff	MACCalcRxChecksum@temp,?_MACCalcRxChecksum
 35806  01A84A  C131  F129         	movff	MACCalcRxChecksum@temp+1,?_MACCalcRxChecksum+1
 35807  01A84E  0012               	return	
 35808  01A850                     __end_of_MACCalcRxChecksum:
 35809                           	opt stack 0
 35810                           tblptru	equ	0xFF8
 35811                           tblptrh	equ	0xFF7
 35812                           tblptrl	equ	0xFF6
 35813                           tablat	equ	0xFF5
 35814                           prodh	equ	0xFF4
 35815                           prodl	equ	0xFF3
 35816                           intcon	equ	0xFF2
 35817                           indf0	equ	0xFEF
 35818                           postinc0	equ	0xFEE
 35819                           fsr0h	equ	0xFEA
 35820                           fsr0l	equ	0xFE9
 35821                           wreg	equ	0xFE8
 35822                           indf1	equ	0xFE7
 35823                           postinc1	equ	0xFE6
 35824                           postdec1	equ	0xFE5
 35825                           fsr1h	equ	0xFE2
 35826                           fsr1l	equ	0xFE1
 35827                           indf2	equ	0xFDF
 35828                           postinc2	equ	0xFDE
 35829                           postdec2	equ	0xFDD
 35830                           fsr2h	equ	0xFDA
 35831                           fsr2l	equ	0xFD9
 35832                           status	equ	0xFD8
 35833                           
 35834 ;; *************** function _CalcIPBufferChecksum *****************
 35835 ;; Defined at:
 35836 ;;		line 880 in file "../tcpip/ETH97J60.c"
 35837 ;; Parameters:    Size  Location     Type
 35838 ;;  len             2    6[BANK1 ] unsigned int 
 35839 ;; Auto vars:     Size  Location     Type
 35840 ;;  DataBuffer     20   10[BANK1 ] unsigned char [20]
 35841 ;;  Checksum        4   34[BANK1 ] struct .
 35842 ;;  ChunkLen        2   38[BANK1 ] unsigned short 
 35843 ;;  DataPtr         2   32[BANK1 ] PTR unsigned short 
 35844 ;;		 -> CalcIPBufferChecksum@DataBuffer(20), 
 35845 ;;  Start           2   30[BANK1 ] unsigned short 
 35846 ;; Return value:  Size  Location     Type
 35847 ;;                  2    6[BANK1 ] unsigned int 
 35848 ;; Registers used:
 35849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35850 ;; Tracked objects:
 35851 ;;		On entry : 0/0
 35852 ;;		On exit  : 0/0
 35853 ;;		Unchanged: 0/0
 35854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35855 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35856 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35857 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35858 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35859 ;;Total ram usage:       34 bytes
 35860 ;; Hardware stack levels used:    1
 35861 ;; Hardware stack levels required when called:   11
 35862 ;; This function calls:
 35863 ;;		_MACGetArray
 35864 ;; This function is called by:
 35865 ;;		_MACCalcRxChecksum
 35866 ;;		_TCPProcess
 35867 ;;		_SendTCP
 35868 ;; This function uses a non-reentrant model
 35869 ;;
 35870                           
 35871                           	psect	text69
 35872  017D02                     __ptext69:
 35873                           	opt stack 0
 35874  017D02                     _CalcIPBufferChecksum:
 35875                           	opt stack 14
 35876                           
 35877                           ;ETH97J60.c: 882: WORD Start;
 35878                           ;ETH97J60.c: 883: DWORD_VAL Checksum = {0x00000000ul};
 35879                           
 35880                           ; BSR set to: 1
 35881                           ;incstack = 0
 35882  017D02  C0CD  F122         	movff	CalcIPBufferChecksum@F7102,CalcIPBufferChecksum@Checksum
 35883  017D06  C0CE  F123         	movff	CalcIPBufferChecksum@F7102+1,CalcIPBufferChecksum@Checksum+1
 35884  017D0A  C0CF  F124         	movff	CalcIPBufferChecksum@F7102+2,CalcIPBufferChecksum@Checksum+2
 35885  017D0E  C0D0  F125         	movff	CalcIPBufferChecksum@F7102+3,CalcIPBufferChecksum@Checksum+3
 35886                           
 35887                           ;ETH97J60.c: 884: WORD ChunkLen;
 35888                           ;ETH97J60.c: 885: BYTE DataBuffer[20];
 35889                           ;ETH97J60.c: 886: WORD *DataPtr;
 35890                           ;ETH97J60.c: 889: Start = ERDPT;
 35891  017D12  CF7A F11E          	movff	3962,CalcIPBufferChecksum@Start	;volatile
 35892  017D16  CF7B F11F          	movff	3963,CalcIPBufferChecksum@Start+1	;volatile
 35893                           
 35894                           ;ETH97J60.c: 891: while(len)
 35895  017D1A  D06B               	goto	l10892
 35896  017D1C                     l10866:
 35897                           
 35898                           ;ETH97J60.c: 892: {
 35899                           ;ETH97J60.c: 895: ChunkLen = len > sizeof(DataBuffer) ? sizeof(DataBuffer) : len;
 35900  017D1C  0E15               	movlw	21
 35901  017D1E  0101               	movlb	1	; () banked
 35902  017D20  5D06               	subwf	CalcIPBufferChecksum@len& (0+255),w,b
 35903  017D22  0E00               	movlw	0
 35904  017D24  0101               	movlb	1	; () banked
 35905  017D26  5907               	subwfb	(CalcIPBufferChecksum@len+1)& (0+255),w,b
 35906  017D28  B0D8               	btfsc	status,0,c
 35907  017D2A  D005               	goto	l10870
 35908                           
 35909                           ; BSR set to: 1
 35910  017D2C  C106  F126         	movff	CalcIPBufferChecksum@len,CalcIPBufferChecksum@ChunkLen
 35911  017D30  C107  F127         	movff	CalcIPBufferChecksum@len+1,CalcIPBufferChecksum@ChunkLen+1
 35912  017D34  D006               	goto	l10872
 35913  017D36                     l10870:
 35914                           
 35915                           ; BSR set to: 1
 35916  017D36  0E00               	movlw	0
 35917  017D38  0101               	movlb	1	; () banked
 35918  017D3A  6F27               	movwf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),b
 35919  017D3C  0E14               	movlw	20
 35920  017D3E  0101               	movlb	1	; () banked
 35921  017D40  6F26               	movwf	CalcIPBufferChecksum@ChunkLen& (0+255),b
 35922  017D42                     l10872:
 35923                           
 35924                           ; BSR set to: 1
 35925                           ;ETH97J60.c: 896: MACGetArray(DataBuffer, ChunkLen);
 35926  017D42  0101               	movlb	1	; () banked
 35927  017D44  0E01               	movlw	high CalcIPBufferChecksum@DataBuffer
 35928  017D46  0101               	movlb	1	; () banked
 35929  017D48  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 35930  017D4A  0101               	movlb	1	; () banked
 35931  017D4C  0E0A               	movlw	low CalcIPBufferChecksum@DataBuffer
 35932  017D4E  0101               	movlb	1	; () banked
 35933  017D50  6F00               	movwf	MACGetArray@val& (0+255),b
 35934  017D52  C126  F102         	movff	CalcIPBufferChecksum@ChunkLen,MACGetArray@len
 35935  017D56  C127  F103         	movff	CalcIPBufferChecksum@ChunkLen+1,MACGetArray@len+1
 35936  017D5A  EC42  F0D7         	call	_MACGetArray	;wreg free
 35937                           
 35938                           ;ETH97J60.c: 898: len -= ChunkLen;
 35939  017D5E  0101               	movlb	1	; () banked
 35940  017D60  5126               	movf	CalcIPBufferChecksum@ChunkLen& (0+255),w,b
 35941  017D62  0101               	movlb	1	; () banked
 35942  017D64  5F06               	subwf	CalcIPBufferChecksum@len& (0+255),f,b
 35943  017D66  0101               	movlb	1	; () banked
 35944  017D68  5127               	movf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),w,b
 35945  017D6A  0101               	movlb	1	; () banked
 35946  017D6C  5B07               	subwfb	(CalcIPBufferChecksum@len+1)& (0+255),f,b
 35947                           
 35948                           ; BSR set to: 1
 35949                           ;ETH97J60.c: 901: if(((WORD_VAL*)&ChunkLen)->bits.b0)
 35950  017D6E  0101               	movlb	1	; () banked
 35951  017D70  A126               	btfss	CalcIPBufferChecksum@ChunkLen& (0+255),0,b
 35952  017D72  D00F               	goto	l10882
 35953                           
 35954                           ; BSR set to: 1
 35955                           ;ETH97J60.c: 902: {
 35956                           ;ETH97J60.c: 903: DataBuffer[ChunkLen] = 0x00;
 35957  017D74  0101               	movlb	1	; () banked
 35958  017D76  0E0A               	movlw	low CalcIPBufferChecksum@DataBuffer
 35959  017D78  0101               	movlb	1	; () banked
 35960  017D7A  2526               	addwf	CalcIPBufferChecksum@ChunkLen& (0+255),w,b
 35961  017D7C  6ED9               	movwf	fsr2l,c
 35962  017D7E  0101               	movlb	1	; () banked
 35963  017D80  0E01               	movlw	high CalcIPBufferChecksum@DataBuffer
 35964  017D82  0101               	movlb	1	; () banked
 35965  017D84  2127               	addwfc	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),w,b
 35966  017D86  6EDA               	movwf	fsr2h,c
 35967  017D88  0E00               	movlw	0
 35968  017D8A  6EDF               	movwf	indf2,c
 35969                           
 35970                           ; BSR set to: 1
 35971                           ;ETH97J60.c: 904: ChunkLen++;
 35972  017D8C  0101               	movlb	1	; () banked
 35973  017D8E  4B26               	infsnz	CalcIPBufferChecksum@ChunkLen& (0+255),f,b
 35974  017D90  2B27               	incf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),f,b
 35975  017D92                     l10882:
 35976                           
 35977                           ; BSR set to: 1
 35978                           ;ETH97J60.c: 905: }
 35979                           ;ETH97J60.c: 908: DataPtr = (WORD*)&DataBuffer[0];
 35980  017D92  0101               	movlb	1	; () banked
 35981  017D94  0E01               	movlw	high CalcIPBufferChecksum@DataBuffer
 35982  017D96  0101               	movlb	1	; () banked
 35983  017D98  6F21               	movwf	(CalcIPBufferChecksum@DataPtr+1)& (0+255),b
 35984  017D9A  0101               	movlb	1	; () banked
 35985  017D9C  0E0A               	movlw	low CalcIPBufferChecksum@DataBuffer
 35986  017D9E  0101               	movlb	1	; () banked
 35987  017DA0  6F20               	movwf	CalcIPBufferChecksum@DataPtr& (0+255),b
 35988                           
 35989                           ;ETH97J60.c: 909: while(ChunkLen)
 35990  017DA2  D022               	goto	l10890
 35991  017DA4                     l10884:
 35992                           
 35993                           ; BSR set to: 1
 35994                           ;ETH97J60.c: 910: {
 35995                           ;ETH97J60.c: 911: Checksum.Val += *DataPtr++;
 35996  017DA4  C120  FFD9         	movff	CalcIPBufferChecksum@DataPtr,fsr2l
 35997  017DA8  C121  FFDA         	movff	CalcIPBufferChecksum@DataPtr+1,fsr2h
 35998  017DAC  CFDE F108          	movff	postinc2,??_CalcIPBufferChecksum
 35999  017DB0  CFDD F109          	movff	postdec2,??_CalcIPBufferChecksum+1
 36000  017DB4  0101               	movlb	1	; () banked
 36001  017DB6  5108               	movf	??_CalcIPBufferChecksum& (0+255),w,b
 36002  017DB8  0101               	movlb	1	; () banked
 36003  017DBA  2722               	addwf	CalcIPBufferChecksum@Checksum& (0+255),f,b
 36004  017DBC  0101               	movlb	1	; () banked
 36005  017DBE  5109               	movf	(??_CalcIPBufferChecksum+1)& (0+255),w,b
 36006  017DC0  0101               	movlb	1	; () banked
 36007  017DC2  2323               	addwfc	(CalcIPBufferChecksum@Checksum+1)& (0+255),f,b
 36008  017DC4  0E00               	movlw	0
 36009  017DC6  0101               	movlb	1	; () banked
 36010  017DC8  2324               	addwfc	(CalcIPBufferChecksum@Checksum+2)& (0+255),f,b
 36011  017DCA  0E00               	movlw	0
 36012  017DCC  0101               	movlb	1	; () banked
 36013  017DCE  2325               	addwfc	(CalcIPBufferChecksum@Checksum+3)& (0+255),f,b
 36014                           
 36015                           ; BSR set to: 1
 36016  017DD0  0E02               	movlw	2
 36017  017DD2  0101               	movlb	1	; () banked
 36018  017DD4  2720               	addwf	CalcIPBufferChecksum@DataPtr& (0+255),f,b
 36019  017DD6  0E00               	movlw	0
 36020  017DD8  0101               	movlb	1	; () banked
 36021  017DDA  2321               	addwfc	(CalcIPBufferChecksum@DataPtr+1)& (0+255),f,b
 36022                           
 36023                           ; BSR set to: 1
 36024                           ;ETH97J60.c: 912: ChunkLen -= 2;
 36025  017DDC  0E02               	movlw	2
 36026  017DDE  0101               	movlb	1	; () banked
 36027  017DE0  5F26               	subwf	CalcIPBufferChecksum@ChunkLen& (0+255),f,b
 36028  017DE2  0E00               	movlw	0
 36029  017DE4  0101               	movlb	1	; () banked
 36030  017DE6  5B27               	subwfb	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),f,b
 36031  017DE8                     l10890:
 36032                           
 36033                           ; BSR set to: 1
 36034  017DE8  0101               	movlb	1	; () banked
 36035  017DEA  5127               	movf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),w,b
 36036  017DEC  1126               	iorwf	CalcIPBufferChecksum@ChunkLen& (0+255),w,b
 36037  017DEE  A4D8               	btfss	status,2,c
 36038  017DF0  D7D9               	goto	l10884
 36039  017DF2                     l10892:
 36040  017DF2  0101               	movlb	1	; () banked
 36041  017DF4  5107               	movf	(CalcIPBufferChecksum@len+1)& (0+255),w,b
 36042  017DF6  1106               	iorwf	CalcIPBufferChecksum@len& (0+255),w,b
 36043  017DF8  A4D8               	btfss	status,2,c
 36044  017DFA  D790               	goto	l10866
 36045                           
 36046                           ; BSR set to: 1
 36047                           ;ETH97J60.c: 913: }
 36048                           ;ETH97J60.c: 914: }
 36049                           ;ETH97J60.c: 917: ERDPT = Start;
 36050  017DFC  C11E  FF7A         	movff	CalcIPBufferChecksum@Start,3962	;volatile
 36051  017E00  C11F  FF7B         	movff	CalcIPBufferChecksum@Start+1,3963	;volatile
 36052                           
 36053                           ; BSR set to: 1
 36054                           ;ETH97J60.c: 920: Checksum.Val = (DWORD)Checksum.w[0] + (DWORD)Checksum.w[1];
 36055  017E04  0101               	movlb	1	; () banked
 36056  017E06  5122               	movf	CalcIPBufferChecksum@Checksum& (0+255),w,b
 36057  017E08  0101               	movlb	1	; () banked
 36058  017E0A  2524               	addwf	(CalcIPBufferChecksum@Checksum+2)& (0+255),w,b
 36059  017E0C  0101               	movlb	1	; () banked
 36060  017E0E  6F22               	movwf	CalcIPBufferChecksum@Checksum& (0+255),b
 36061  017E10  0101               	movlb	1	; () banked
 36062  017E12  5123               	movf	(CalcIPBufferChecksum@Checksum+1)& (0+255),w,b
 36063  017E14  0101               	movlb	1	; () banked
 36064  017E16  2125               	addwfc	(CalcIPBufferChecksum@Checksum+3)& (0+255),w,b
 36065  017E18  0101               	movlb	1	; () banked
 36066  017E1A  6F23               	movwf	(CalcIPBufferChecksum@Checksum+1)& (0+255),b
 36067  017E1C  0101               	movlb	1	; () banked
 36068  017E1E  6B24               	clrf	(CalcIPBufferChecksum@Checksum+2)& (0+255),b
 36069  017E20  B0D8               	btfsc	status,0,c
 36070  017E22  2B24               	incf	(CalcIPBufferChecksum@Checksum+2)& (0+255),f,b
 36071  017E24  0101               	movlb	1	; () banked
 36072  017E26  6B25               	clrf	(CalcIPBufferChecksum@Checksum+3)& (0+255),b
 36073                           
 36074                           ; BSR set to: 1
 36075                           ;ETH97J60.c: 924: Checksum.w[0] += Checksum.w[1];
 36076  017E28  0101               	movlb	1	; () banked
 36077  017E2A  EE21  F024         	lfsr	2,CalcIPBufferChecksum@Checksum+2
 36078  017E2E  50DE               	movf	postinc2,w,c
 36079  017E30  0101               	movlb	1	; () banked
 36080  017E32  2722               	addwf	CalcIPBufferChecksum@Checksum& (0+255),f,b
 36081  017E34  50DD               	movf	postdec2,w,c
 36082  017E36  0101               	movlb	1	; () banked
 36083  017E38  2323               	addwfc	(CalcIPBufferChecksum@Checksum+1)& (0+255),f,b
 36084                           
 36085                           ; BSR set to: 1
 36086                           ;ETH97J60.c: 927: return ~Checksum.w[0];
 36087  017E3A  0101               	movlb	1	; () banked
 36088  017E3C  1D22               	comf	CalcIPBufferChecksum@Checksum& (0+255),w,b
 36089  017E3E  0101               	movlb	1	; () banked
 36090  017E40  6F06               	movwf	?_CalcIPBufferChecksum& (0+255),b
 36091  017E42  0101               	movlb	1	; () banked
 36092  017E44  1D23               	comf	(CalcIPBufferChecksum@Checksum+1)& (0+255),w,b
 36093  017E46  0101               	movlb	1	; () banked
 36094  017E48  6F07               	movwf	(?_CalcIPBufferChecksum+1)& (0+255),b
 36095  017E4A  0012               	return	
 36096  017E4C                     __end_of_CalcIPBufferChecksum:
 36097                           	opt stack 0
 36098                           tblptru	equ	0xFF8
 36099                           tblptrh	equ	0xFF7
 36100                           tblptrl	equ	0xFF6
 36101                           tablat	equ	0xFF5
 36102                           prodh	equ	0xFF4
 36103                           prodl	equ	0xFF3
 36104                           intcon	equ	0xFF2
 36105                           indf0	equ	0xFEF
 36106                           postinc0	equ	0xFEE
 36107                           fsr0h	equ	0xFEA
 36108                           fsr0l	equ	0xFE9
 36109                           wreg	equ	0xFE8
 36110                           indf1	equ	0xFE7
 36111                           postinc1	equ	0xFE6
 36112                           postdec1	equ	0xFE5
 36113                           fsr1h	equ	0xFE2
 36114                           fsr1l	equ	0xFE1
 36115                           indf2	equ	0xFDF
 36116                           postinc2	equ	0xFDE
 36117                           postdec2	equ	0xFDD
 36118                           fsr2h	equ	0xFDA
 36119                           fsr2l	equ	0xFD9
 36120                           status	equ	0xFD8
 36121                           
 36122 ;; *************** function _ARPProcess *****************
 36123 ;; Defined at:
 36124 ;;		line 413 in file "../tcpip/arp.c"
 36125 ;; Parameters:    Size  Location     Type
 36126 ;;		None
 36127 ;; Auto vars:     Size  Location     Type
 36128 ;;  packet         28   32[BANK1 ] struct .
 36129 ;; Return value:  Size  Location     Type
 36130 ;;                  1    wreg      unsigned char 
 36131 ;; Registers used:
 36132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36133 ;; Tracked objects:
 36134 ;;		On entry : 0/0
 36135 ;;		On exit  : 0/0
 36136 ;;		Unchanged: 0/0
 36137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36139 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36141 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36142 ;;Total ram usage:       28 bytes
 36143 ;; Hardware stack levels used:    1
 36144 ;; Hardware stack levels required when called:   15
 36145 ;; This function calls:
 36146 ;;		_ARPPut
 36147 ;;		_MACDiscardRx
 36148 ;;		_MACGetArray
 36149 ;;		_SwapARPPacket
 36150 ;; This function is called by:
 36151 ;;		_StackTask
 36152 ;; This function uses a non-reentrant model
 36153 ;;
 36154                           
 36155                           	psect	text70
 36156  017F92                     __ptext70:
 36157                           	opt stack 0
 36158  017F92                     _ARPProcess:
 36159                           	opt stack 13
 36160                           
 36161                           ;arp.c: 415: ARP_PACKET packet;
 36162                           ;arp.c: 416: static NODE_INFO Target;
 36163                           ;arp.c: 420: static enum
 36164                           ;arp.c: 421: {
 36165                           ;arp.c: 422: SM_ARP_IDLE = 0,
 36166                           ;arp.c: 423: SM_ARP_REPLY
 36167                           ;arp.c: 424: } smARP = SM_ARP_IDLE;
 36168                           ;arp.c: 426: switch(smARP)
 36169                           
 36170                           ; BSR set to: 1
 36171                           ;incstack = 0
 36172  017F92  D099               	goto	l13840
 36173  017F94                     l13798:
 36174                           
 36175                           ;arp.c: 430: MACGetArray((uint8_t*)&packet, sizeof(packet));
 36176  017F94  0101               	movlb	1	; () banked
 36177  017F96  0E01               	movlw	high ARPProcess@packet
 36178  017F98  0101               	movlb	1	; () banked
 36179  017F9A  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 36180  017F9C  0101               	movlb	1	; () banked
 36181  017F9E  0E20               	movlw	low ARPProcess@packet
 36182  017FA0  0101               	movlb	1	; () banked
 36183  017FA2  6F00               	movwf	MACGetArray@val& (0+255),b
 36184  017FA4  0E00               	movlw	0
 36185  017FA6  0101               	movlb	1	; () banked
 36186  017FA8  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 36187  017FAA  0E1C               	movlw	28
 36188  017FAC  0101               	movlb	1	; () banked
 36189  017FAE  6F02               	movwf	MACGetArray@len& (0+255),b
 36190  017FB0  EC42  F0D7         	call	_MACGetArray	;wreg free
 36191                           
 36192                           ;arp.c: 431: MACDiscardRx();
 36193  017FB4  EC51  F0D8         	call	_MACDiscardRx	;wreg free
 36194                           
 36195                           ;arp.c: 432: SwapARPPacket(&packet);
 36196  017FB8  0101               	movlb	1	; () banked
 36197  017FBA  0E01               	movlw	high ARPProcess@packet
 36198  017FBC  0101               	movlb	1	; () banked
 36199  017FBE  6F06               	movwf	(SwapARPPacket@p+1)& (0+255),b
 36200  017FC0  0101               	movlb	1	; () banked
 36201  017FC2  0E20               	movlw	low ARPProcess@packet
 36202  017FC4  0101               	movlb	1	; () banked
 36203  017FC6  6F05               	movwf	SwapARPPacket@p& (0+255),b
 36204  017FC8  ECE6  F0CF         	call	_SwapARPPacket	;wreg free
 36205                           
 36206                           ;arp.c: 435: if ( packet.HardwareType != (0x0001u) ||
 36207                           ;arp.c: 436: packet.MACAddrLen != sizeof(MAC_ADDR) ||
 36208                           ;arp.c: 437: packet.ProtocolLen != sizeof(TCPIP_UINT32_VAL) )
 36209  017FCC  0101               	movlb	1	; () banked
 36210  017FCE  0520               	decf	ARPProcess@packet& (0+255),w,b
 36211  017FD0  1121               	iorwf	(ARPProcess@packet+1)& (0+255),w,b
 36212  017FD2  A4D8               	btfss	status,2,c
 36213  017FD4  0012               	return	
 36214                           
 36215                           ; BSR set to: 1
 36216  017FD6  0101               	movlb	1	; () banked
 36217  017FD8  5124               	movf	(ARPProcess@packet+4)& (0+255),w,b
 36218  017FDA  0A06               	xorlw	6
 36219  017FDC  A4D8               	btfss	status,2,c
 36220  017FDE  0012               	return	
 36221                           
 36222                           ; BSR set to: 1
 36223  017FE0  0101               	movlb	1	; () banked
 36224  017FE2  5125               	movf	(ARPProcess@packet+5)& (0+255),w,b
 36225  017FE4  0A04               	xorlw	4
 36226  017FE6  A4D8               	btfss	status,2,c
 36227  017FE8  0012               	return	
 36228                           
 36229                           ; BSR set to: 1
 36230                           ;arp.c: 440: }
 36231                           ;arp.c: 455: if(packet.Operation == 0x0002u)
 36232                           
 36233                           ; BSR set to: 1
 36234                           
 36235                           ; BSR set to: 1
 36236                           ;arp.c: 438: {
 36237                           ;arp.c: 439: return 1;
 36238                           ;	Return value of _ARPProcess is never used
 36239  017FEA  0101               	movlb	1	; () banked
 36240  017FEC  5126               	movf	(ARPProcess@packet+6)& (0+255),w,b
 36241  017FEE  0A02               	xorlw	2
 36242  017FF0  1127               	iorwf	(ARPProcess@packet+7)& (0+255),w,b
 36243  017FF2  A4D8               	btfss	status,2,c
 36244  017FF4  D012               	goto	l13818
 36245                           
 36246                           ; BSR set to: 1
 36247                           ;arp.c: 456: {
 36248                           ;arp.c: 462: Cache.MACAddr = packet.SenderMACAddr;
 36249  017FF6  EE21  F028         	lfsr	2,ARPProcess@packet+8
 36250  017FFA  EE10  F0C1         	lfsr	1,_Cache+4
 36251  017FFE  0E06               	movlw	6
 36252  018000                     u15961:
 36253  018000  CFDE FFE6          	movff	postinc2,postinc1
 36254  018004  2EE8               	decfsz	wreg,f,c
 36255  018006  D7FC               	goto	u15961
 36256                           
 36257                           ; BSR set to: 1
 36258                           ;arp.c: 463: Cache.IPAddr = packet.SenderIPAddr;
 36259  018008  C12E  F0BD         	movff	ARPProcess@packet+14,_Cache
 36260  01800C  C12F  F0BE         	movff	ARPProcess@packet+15,_Cache+1
 36261  018010  C130  F0BF         	movff	ARPProcess@packet+16,_Cache+2
 36262  018014  C131  F0C0         	movff	ARPProcess@packet+17,_Cache+3
 36263  018018  0012               	return	
 36264  01801A                     l13818:
 36265                           
 36266                           ; BSR set to: 1
 36267                           ;arp.c: 467: }
 36268                           ;arp.c: 471: if(packet.Operation == 0x0001u)
 36269  01801A  0101               	movlb	1	; () banked
 36270  01801C  0526               	decf	(ARPProcess@packet+6)& (0+255),w,b
 36271  01801E  1127               	iorwf	(ARPProcess@packet+7)& (0+255),w,b
 36272  018020  A4D8               	btfss	status,2,c
 36273  018022  D029               	goto	l13828
 36274                           
 36275                           ; BSR set to: 1
 36276                           ;arp.c: 472: {
 36277                           ;arp.c: 473: if(packet.TargetIPAddr.Val != AppConfig.MyIPAddr.Val)
 36278  018024  0102               	movlb	2	; () banked
 36279  018026  513F               	movf	(_AppConfig+3)& (0+255),w,b
 36280  018028  0101               	movlb	1	; () banked
 36281  01802A  193B               	xorwf	(ARPProcess@packet+27)& (0+255),w,b
 36282  01802C  E10E               	bnz	u15985
 36283  01802E  0102               	movlb	2	; () banked
 36284  018030  513E               	movf	(_AppConfig+2)& (0+255),w,b
 36285  018032  0101               	movlb	1	; () banked
 36286  018034  193A               	xorwf	(ARPProcess@packet+26)& (0+255),w,b
 36287  018036  E109               	bnz	u15985
 36288  018038  0102               	movlb	2	; () banked
 36289  01803A  513D               	movf	(_AppConfig+1)& (0+255),w,b
 36290  01803C  0101               	movlb	1	; () banked
 36291  01803E  1939               	xorwf	(ARPProcess@packet+25)& (0+255),w,b
 36292  018040  E104               	bnz	u15985
 36293  018042  0102               	movlb	2	; () banked
 36294  018044  513C               	movf	_AppConfig& (0+255),w,b
 36295  018046  0101               	movlb	1	; () banked
 36296  018048  1938               	xorwf	(ARPProcess@packet+24)& (0+255),w,b
 36297  01804A                     u15985:
 36298  01804A  A4D8               	btfss	status,2,c
 36299  01804C  0012               	return	
 36300                           
 36301                           ; BSR set to: 1
 36302                           ;arp.c: 476: }
 36303                           ;arp.c: 497: Target.IPAddr = packet.SenderIPAddr;
 36304                           
 36305                           ; BSR set to: 1
 36306                           ;arp.c: 474: {
 36307                           ;arp.c: 475: return 1;
 36308                           ;	Return value of _ARPProcess is never used
 36309  01804E  C12E  F0B3         	movff	ARPProcess@packet+14,ARPProcess@Target
 36310  018052  C12F  F0B4         	movff	ARPProcess@packet+15,ARPProcess@Target+1
 36311  018056  C130  F0B5         	movff	ARPProcess@packet+16,ARPProcess@Target+2
 36312  01805A  C131  F0B6         	movff	ARPProcess@packet+17,ARPProcess@Target+3
 36313                           
 36314                           ; BSR set to: 1
 36315                           ;arp.c: 498: Target.MACAddr = packet.SenderMACAddr;
 36316  01805E  EE21  F028         	lfsr	2,ARPProcess@packet+8
 36317  018062  EE10  F0B7         	lfsr	1,ARPProcess@Target+4
 36318  018066  0E06               	movlw	6
 36319  018068                     u15991:
 36320  018068  CFDE FFE6          	movff	postinc2,postinc1
 36321  01806C  2EE8               	decfsz	wreg,f,c
 36322  01806E  D7FC               	goto	u15991
 36323                           
 36324                           ; BSR set to: 1
 36325                           ;arp.c: 502: smARP = SM_ARP_REPLY;
 36326  018070  0E01               	movlw	1
 36327  018072  0101               	movlb	1	; () banked
 36328  018074  6FB3               	movwf	ARPProcess@smARP& (0+255),b
 36329  018076                     l13828:
 36330                           
 36331                           ; BSR set to: 1
 36332                           ;arp.c: 507: packet.Operation = 0x0002u;
 36333  018076  0E00               	movlw	0
 36334  018078  0101               	movlb	1	; () banked
 36335  01807A  6F27               	movwf	(ARPProcess@packet+7)& (0+255),b
 36336  01807C  0E02               	movlw	2
 36337  01807E  0101               	movlb	1	; () banked
 36338  018080  6F26               	movwf	(ARPProcess@packet+6)& (0+255),b
 36339                           
 36340                           ;arp.c: 520: packet.TargetMACAddr = Target.MACAddr;
 36341  018082  EE20  F0B7         	lfsr	2,ARPProcess@Target+4
 36342  018086  EE11  F032         	lfsr	1,ARPProcess@packet+18
 36343  01808A  0E06               	movlw	6
 36344  01808C                     u16001:
 36345  01808C  CFDE FFE6          	movff	postinc2,postinc1
 36346  018090  2EE8               	decfsz	wreg,f,c
 36347  018092  D7FC               	goto	u16001
 36348                           
 36349                           ; BSR set to: 1
 36350                           ;arp.c: 521: packet.TargetIPAddr = Target.IPAddr;
 36351  018094  C0B3  F138         	movff	ARPProcess@Target,ARPProcess@packet+24
 36352  018098  C0B4  F139         	movff	ARPProcess@Target+1,ARPProcess@packet+25
 36353  01809C  C0B5  F13A         	movff	ARPProcess@Target+2,ARPProcess@packet+26
 36354  0180A0  C0B6  F13B         	movff	ARPProcess@Target+3,ARPProcess@packet+27
 36355                           
 36356                           ; BSR set to: 1
 36357                           ;arp.c: 528: if(!ARPPut(&packet))
 36358  0180A4  0101               	movlb	1	; () banked
 36359  0180A6  0E01               	movlw	high ARPProcess@packet
 36360  0180A8  0101               	movlb	1	; () banked
 36361  0180AA  6F1F               	movwf	(ARPPut@packet+1)& (0+255),b
 36362  0180AC  0101               	movlb	1	; () banked
 36363  0180AE  0E20               	movlw	low ARPProcess@packet
 36364  0180B0  0101               	movlb	1	; () banked
 36365  0180B2  6F1E               	movwf	ARPPut@packet& (0+255),b
 36366  0180B4  EC05  F0C1         	call	_ARPPut	;wreg free
 36367  0180B8  0900               	iorlw	0
 36368  0180BA  B4D8               	btfsc	status,2,c
 36369  0180BC  0012               	return	
 36370                           
 36371                           ;arp.c: 531: }
 36372                           ;arp.c: 534: smARP = SM_ARP_IDLE;
 36373                           
 36374                           ;arp.c: 529: {
 36375                           ;arp.c: 530: return 0;
 36376                           ;	Return value of _ARPProcess is never used
 36377  0180BE  0E00               	movlw	0
 36378  0180C0  0101               	movlb	1	; () banked
 36379  0180C2  6FB3               	movwf	ARPProcess@smARP& (0+255),b
 36380                           
 36381                           ;arp.c: 535: break;
 36382  0180C4  0012               	return	
 36383  0180C6                     l13840:
 36384  0180C6  0101               	movlb	1	; () banked
 36385  0180C8  51B3               	movf	ARPProcess@smARP& (0+255),w,b
 36386                           
 36387                           ; Switch size 1, requested type "space"
 36388                           ; Number of cases is 2, Range of values is 0 to 1
 36389                           ; switch strategies available:
 36390                           ; Name         Instructions Cycles
 36391                           ; simple_byte            7     4 (average)
 36392                           ;	Chosen strategy is simple_byte
 36393  0180CA  0A00               	xorlw	0	; case 0
 36394  0180CC  B4D8               	btfsc	status,2,c
 36395  0180CE  D762               	goto	l13798
 36396  0180D0  0A01               	xorlw	1	; case 1
 36397  0180D2  A4D8               	btfss	status,2,c
 36398  0180D4  0012               	return	
 36399  0180D6  D7CF               	goto	l13828
 36400  0180D8                     __end_of_ARPProcess:
 36401                           	opt stack 0
 36402                           tblptru	equ	0xFF8
 36403                           tblptrh	equ	0xFF7
 36404                           tblptrl	equ	0xFF6
 36405                           tablat	equ	0xFF5
 36406                           prodh	equ	0xFF4
 36407                           prodl	equ	0xFF3
 36408                           intcon	equ	0xFF2
 36409                           indf0	equ	0xFEF
 36410                           postinc0	equ	0xFEE
 36411                           fsr0h	equ	0xFEA
 36412                           fsr0l	equ	0xFE9
 36413                           wreg	equ	0xFE8
 36414                           indf1	equ	0xFE7
 36415                           postinc1	equ	0xFE6
 36416                           postdec1	equ	0xFE5
 36417                           fsr1h	equ	0xFE2
 36418                           fsr1l	equ	0xFE1
 36419                           indf2	equ	0xFDF
 36420                           postinc2	equ	0xFDE
 36421                           postdec2	equ	0xFDD
 36422                           fsr2h	equ	0xFDA
 36423                           fsr2l	equ	0xFD9
 36424                           status	equ	0xFD8
 36425                           
 36426 ;; *************** function _MACDiscardRx *****************
 36427 ;; Defined at:
 36428 ;;		line 321 in file "../tcpip/ETH97J60.c"
 36429 ;; Parameters:    Size  Location     Type
 36430 ;;		None
 36431 ;; Auto vars:     Size  Location     Type
 36432 ;;  NewRXRDLocat    2    0[BANK1 ] struct .
 36433 ;; Return value:  Size  Location     Type
 36434 ;;		None               void
 36435 ;; Registers used:
 36436 ;;		wreg, status,2, status,0
 36437 ;; Tracked objects:
 36438 ;;		On entry : 0/0
 36439 ;;		On exit  : 0/0
 36440 ;;		Unchanged: 0/0
 36441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36443 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36445 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36446 ;;Total ram usage:        2 bytes
 36447 ;; Hardware stack levels used:    1
 36448 ;; Hardware stack levels required when called:   10
 36449 ;; This function calls:
 36450 ;;		Nothing
 36451 ;; This function is called by:
 36452 ;;		_MACGetHeader
 36453 ;;		_ARPProcess
 36454 ;;		_TCPProcess
 36455 ;; This function uses a non-reentrant model
 36456 ;;
 36457                           
 36458                           	psect	text71
 36459  01B0A2                     __ptext71:
 36460                           	opt stack 0
 36461  01B0A2                     _MACDiscardRx:
 36462                           	opt stack 17
 36463                           
 36464                           ;ETH97J60.c: 323: WORD_VAL NewRXRDLocation;
 36465                           ;ETH97J60.c: 326: if(flags.bits.bWasDiscarded)
 36466                           
 36467                           ;incstack = 0
 36468  01B0A2  0101               	movlb	1	; () banked
 36469  01B0A4  B1B6               	btfsc	_flags& (0+255),0,b
 36470  01B0A6  0012               	return	
 36471                           
 36472                           ; BSR set to: 1
 36473                           ;ETH97J60.c: 328: flags.bits.bWasDiscarded = 1;
 36474                           
 36475                           ; BSR set to: 1
 36476                           ;ETH97J60.c: 327: return;
 36477  01B0A8  0101               	movlb	1	; () banked
 36478  01B0AA  81B6               	bsf	_flags& (0+255),0,b
 36479                           
 36480                           ; BSR set to: 1
 36481                           ;ETH97J60.c: 334: NewRXRDLocation.Val = NextPacketLocation.Val - 1;
 36482  01B0AC  0EFF               	movlw	255
 36483  01B0AE  0100               	movlb	0	; () banked
 36484  01B0B0  25E3               	addwf	_NextPacketLocation& (0+255),w,b
 36485  01B0B2  0101               	movlb	1	; () banked
 36486  01B0B4  6F00               	movwf	MACDiscardRx@NewRXRDLocation& (0+255),b
 36487  01B0B6  0EFF               	movlw	255
 36488  01B0B8  0100               	movlb	0	; () banked
 36489  01B0BA  21E4               	addwfc	(_NextPacketLocation+1)& (0+255),w,b
 36490  01B0BC  0101               	movlb	1	; () banked
 36491  01B0BE  6F01               	movwf	(MACDiscardRx@NewRXRDLocation+1)& (0+255),b
 36492                           
 36493                           ;ETH97J60.c: 338: if((NewRXRDLocation.Val < (0ul)) || (NewRXRDLocation.Val > ((((8*1024u
      +                          l) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) | 0x0001ul)))
 36494  01B0C0  0EA6               	movlw	166
 36495  01B0C2  0101               	movlb	1	; () banked
 36496  01B0C4  5D00               	subwf	MACDiscardRx@NewRXRDLocation& (0+255),w,b
 36497  01B0C6  0E12               	movlw	18
 36498  01B0C8  0101               	movlb	1	; () banked
 36499  01B0CA  5901               	subwfb	(MACDiscardRx@NewRXRDLocation+1)& (0+255),w,b
 36500  01B0CC  A0D8               	btfss	status,0,c
 36501  01B0CE  D006               	goto	l12390
 36502                           
 36503                           ; BSR set to: 1
 36504                           ;ETH97J60.c: 340: {
 36505                           ;ETH97J60.c: 341: NewRXRDLocation.Val = ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0u
      +                          l - 0ul)-2ul) | 0x0001ul);
 36506  01B0D0  0E12               	movlw	18
 36507  01B0D2  0101               	movlb	1	; () banked
 36508  01B0D4  6F01               	movwf	(MACDiscardRx@NewRXRDLocation+1)& (0+255),b
 36509  01B0D6  0EA5               	movlw	165
 36510  01B0D8  0101               	movlb	1	; () banked
 36511  01B0DA  6F00               	movwf	MACDiscardRx@NewRXRDLocation& (0+255),b
 36512  01B0DC                     l12390:
 36513                           
 36514                           ; BSR set to: 1
 36515                           ;ETH97J60.c: 342: }
 36516                           ;ETH97J60.c: 345: ECON2bits.PKTDEC = 1;
 36517  01B0DC  010E               	movlb	14	; () banked
 36518  01B0DE  8DFE               	bsf	254,6,b	;volatile
 36519                           
 36520                           ; BSR set to: 14
 36521                           ;ETH97J60.c: 350: ERXRDPTL = NewRXRDLocation.v[0];
 36522  01B0E0  C100  FEEC         	movff	MACDiscardRx@NewRXRDLocation,3820	;volatile
 36523                           
 36524                           ; BSR set to: 14
 36525                           ;ETH97J60.c: 351: ERXRDPTH = NewRXRDLocation.v[1];
 36526  01B0E4  C101  FEED         	movff	MACDiscardRx@NewRXRDLocation+1,3821	;volatile
 36527  01B0E8  0012               	return	
 36528  01B0EA                     __end_of_MACDiscardRx:
 36529                           	opt stack 0
 36530                           tblptru	equ	0xFF8
 36531                           tblptrh	equ	0xFF7
 36532                           tblptrl	equ	0xFF6
 36533                           tablat	equ	0xFF5
 36534                           prodh	equ	0xFF4
 36535                           prodl	equ	0xFF3
 36536                           intcon	equ	0xFF2
 36537                           indf0	equ	0xFEF
 36538                           postinc0	equ	0xFEE
 36539                           fsr0h	equ	0xFEA
 36540                           fsr0l	equ	0xFE9
 36541                           wreg	equ	0xFE8
 36542                           indf1	equ	0xFE7
 36543                           postinc1	equ	0xFE6
 36544                           postdec1	equ	0xFE5
 36545                           fsr1h	equ	0xFE2
 36546                           fsr1l	equ	0xFE1
 36547                           indf2	equ	0xFDF
 36548                           postinc2	equ	0xFDE
 36549                           postdec2	equ	0xFDD
 36550                           fsr2h	equ	0xFDA
 36551                           fsr2l	equ	0xFD9
 36552                           status	equ	0xFD8
 36553                           
 36554 ;; *************** function _ARPPut *****************
 36555 ;; Defined at:
 36556 ;;		line 320 in file "../tcpip/arp.c"
 36557 ;; Parameters:    Size  Location     Type
 36558 ;;  packet          2   30[BANK1 ] PTR struct .
 36559 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), 
 36560 ;; Auto vars:     Size  Location     Type
 36561 ;;		None
 36562 ;; Return value:  Size  Location     Type
 36563 ;;                  1    wreg      unsigned char 
 36564 ;; Registers used:
 36565 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36566 ;; Tracked objects:
 36567 ;;		On entry : 0/0
 36568 ;;		On exit  : 0/0
 36569 ;;		Unchanged: 0/0
 36570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36571 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36574 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36575 ;;Total ram usage:        2 bytes
 36576 ;; Hardware stack levels used:    1
 36577 ;; Hardware stack levels required when called:   14
 36578 ;; This function calls:
 36579 ;;		_MACFlush
 36580 ;;		_MACIsTxReady
 36581 ;;		_MACPutArray
 36582 ;;		_MACPutHeader
 36583 ;;		_MACSetWritePtr
 36584 ;;		_SwapARPPacket
 36585 ;;		_memcpy
 36586 ;; This function is called by:
 36587 ;;		_ARPProcess
 36588 ;;		_ARPResolve
 36589 ;;		_ARPSendPkt
 36590 ;; This function uses a non-reentrant model
 36591 ;;
 36592                           
 36593                           	psect	text72
 36594  01820A                     __ptext72:
 36595                           	opt stack 0
 36596  01820A                     _ARPPut:
 36597                           	opt stack 12
 36598  01820A                     l11512:
 36599  01820A  ECCB  F0D7         	call	_MACIsTxReady	;wreg free
 36600  01820E  0900               	iorlw	0
 36601  018210  B4D8               	btfsc	status,2,c
 36602  018212  D7FB               	goto	l11512
 36603                           
 36604                           ;arp.c: 323: MACSetWritePtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1u
      +                          l));
 36605  018214  0E12               	movlw	18
 36606  018216  0101               	movlb	1	; () banked
 36607  018218  6F01               	movwf	(MACSetWritePtr@address+1)& (0+255),b
 36608  01821A  0EA7               	movlw	167
 36609  01821C  0101               	movlb	1	; () banked
 36610  01821E  6F00               	movwf	MACSetWritePtr@address& (0+255),b
 36611  018220  ECFE  F0DC         	call	_MACSetWritePtr	;wreg free
 36612                           
 36613                           ;arp.c: 326: packet->HardwareType = (0x0001u);
 36614  018224  C11E  FFD9         	movff	ARPPut@packet,fsr2l
 36615  018228  C11F  FFDA         	movff	ARPPut@packet+1,fsr2h
 36616  01822C  0E01               	movlw	1
 36617  01822E  6EDE               	movwf	postinc2,c
 36618  018230  0E00               	movlw	0
 36619  018232  6EDD               	movwf	postdec2,c
 36620                           
 36621                           ;arp.c: 327: packet->Protocol = (0x0800u);
 36622  018234  0101               	movlb	1	; () banked
 36623  018236  EE20 F002          	lfsr	2,2
 36624  01823A  0101               	movlb	1	; () banked
 36625  01823C  511E               	movf	ARPPut@packet& (0+255),w,b
 36626  01823E  26D9               	addwf	fsr2l,f,c
 36627  018240  0101               	movlb	1	; () banked
 36628  018242  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36629  018244  22DA               	addwfc	fsr2h,f,c
 36630  018246  0E00               	movlw	0
 36631  018248  6EDE               	movwf	postinc2,c
 36632  01824A  0E08               	movlw	8
 36633  01824C  6EDD               	movwf	postdec2,c
 36634                           
 36635                           ; BSR set to: 1
 36636                           ;arp.c: 328: packet->MACAddrLen = sizeof(MAC_ADDR);
 36637  01824E  0101               	movlb	1	; () banked
 36638  018250  EE20 F004          	lfsr	2,4
 36639  018254  0101               	movlb	1	; () banked
 36640  018256  511E               	movf	ARPPut@packet& (0+255),w,b
 36641  018258  26D9               	addwf	fsr2l,f,c
 36642  01825A  0101               	movlb	1	; () banked
 36643  01825C  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36644  01825E  22DA               	addwfc	fsr2h,f,c
 36645  018260  0E06               	movlw	6
 36646  018262  6EDF               	movwf	indf2,c
 36647                           
 36648                           ; BSR set to: 1
 36649                           ;arp.c: 329: packet->ProtocolLen = sizeof(TCPIP_UINT32_VAL);
 36650  018264  0101               	movlb	1	; () banked
 36651  018266  EE20 F005          	lfsr	2,5
 36652  01826A  0101               	movlb	1	; () banked
 36653  01826C  511E               	movf	ARPPut@packet& (0+255),w,b
 36654  01826E  26D9               	addwf	fsr2l,f,c
 36655  018270  0101               	movlb	1	; () banked
 36656  018272  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36657  018274  22DA               	addwfc	fsr2h,f,c
 36658  018276  0E04               	movlw	4
 36659  018278  6EDF               	movwf	indf2,c
 36660                           
 36661                           ; BSR set to: 1
 36662                           ;arp.c: 331: memcpy(&packet->SenderMACAddr, (void*)&AppConfig.MyMACAddr, sizeof(packet->
      +                          SenderMACAddr));
 36663  01827A  0E08               	movlw	8
 36664  01827C  0101               	movlb	1	; () banked
 36665  01827E  251E               	addwf	ARPPut@packet& (0+255),w,b
 36666  018280  0101               	movlb	1	; () banked
 36667  018282  6F14               	movwf	memcpy@d1& (0+255),b
 36668  018284  0E00               	movlw	0
 36669  018286  0101               	movlb	1	; () banked
 36670  018288  211F               	addwfc	(ARPPut@packet+1)& (0+255),w,b
 36671  01828A  0101               	movlb	1	; () banked
 36672  01828C  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 36673  01828E  0102               	movlb	2	; () banked
 36674  018290  0E02               	movlw	high (_AppConfig+45)
 36675  018292  0101               	movlb	1	; () banked
 36676  018294  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 36677  018296  0102               	movlb	2	; () banked
 36678  018298  0E69               	movlw	low (_AppConfig+45)
 36679  01829A  0101               	movlb	1	; () banked
 36680  01829C  6F16               	movwf	memcpy@s1& (0+255),b
 36681  01829E  0E00               	movlw	0
 36682  0182A0  0101               	movlb	1	; () banked
 36683  0182A2  6F19               	movwf	(memcpy@n+1)& (0+255),b
 36684  0182A4  0E06               	movlw	6
 36685  0182A6  0101               	movlb	1	; () banked
 36686  0182A8  6F18               	movwf	memcpy@n& (0+255),b
 36687  0182AA  ECDC  F0D5         	call	_memcpy	;wreg free
 36688                           
 36689                           ;arp.c: 335: packet->SenderIPAddr = AppConfig.MyIPAddr;
 36690  0182AE  0101               	movlb	1	; () banked
 36691  0182B0  EE20 F00E          	lfsr	2,14
 36692  0182B4  0101               	movlb	1	; () banked
 36693  0182B6  511E               	movf	ARPPut@packet& (0+255),w,b
 36694  0182B8  26D9               	addwf	fsr2l,f,c
 36695  0182BA  0101               	movlb	1	; () banked
 36696  0182BC  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36697  0182BE  22DA               	addwfc	fsr2h,f,c
 36698  0182C0  0102               	movlb	2	; () banked
 36699  0182C2  C23C  FFDE         	movff	_AppConfig,postinc2
 36700  0182C6  0102               	movlb	2	; () banked
 36701  0182C8  C23D  FFDE         	movff	_AppConfig+1,postinc2
 36702  0182CC  0102               	movlb	2	; () banked
 36703  0182CE  C23E  FFDE         	movff	_AppConfig+2,postinc2
 36704  0182D2  0102               	movlb	2	; () banked
 36705  0182D4  C23F  FFDE         	movff	_AppConfig+3,postinc2
 36706                           
 36707                           ; BSR set to: 2
 36708                           ;arp.c: 338: SwapARPPacket(packet);
 36709  0182D8  0101               	movlb	1	; () banked
 36710  0182DA  C11F  F106         	movff	ARPPut@packet+1,SwapARPPacket@p+1
 36711  0182DE  0101               	movlb	1	; () banked
 36712  0182E0  C11E  F105         	movff	ARPPut@packet,SwapARPPacket@p
 36713  0182E4  ECE6  F0CF         	call	_SwapARPPacket	;wreg free
 36714                           
 36715                           ;arp.c: 340: MACPutHeader(&packet->TargetMACAddr, (0x06u), sizeof(*packet));
 36716  0182E8  0E12               	movlw	18
 36717  0182EA  0101               	movlb	1	; () banked
 36718  0182EC  251E               	addwf	ARPPut@packet& (0+255),w,b
 36719  0182EE  0101               	movlb	1	; () banked
 36720  0182F0  6F04               	movwf	MACPutHeader@remote& (0+255),b
 36721  0182F2  0E00               	movlw	0
 36722  0182F4  0101               	movlb	1	; () banked
 36723  0182F6  211F               	addwfc	(ARPPut@packet+1)& (0+255),w,b
 36724  0182F8  0101               	movlb	1	; () banked
 36725  0182FA  6F05               	movwf	(MACPutHeader@remote+1)& (0+255),b
 36726  0182FC  0E06               	movlw	6
 36727  0182FE  0101               	movlb	1	; () banked
 36728  018300  6F06               	movwf	MACPutHeader@type& (0+255),b
 36729  018302  0E00               	movlw	0
 36730  018304  0101               	movlb	1	; () banked
 36731  018306  6F08               	movwf	(MACPutHeader@dataLen+1)& (0+255),b
 36732  018308  0E1C               	movlw	28
 36733  01830A  0101               	movlb	1	; () banked
 36734  01830C  6F07               	movwf	MACPutHeader@dataLen& (0+255),b
 36735  01830E  EC9E  F0D3         	call	_MACPutHeader	;wreg free
 36736                           
 36737                           ;arp.c: 341: MACPutArray((uint8_t*)packet, sizeof(*packet));
 36738  018312  0101               	movlb	1	; () banked
 36739  018314  C11F  F101         	movff	ARPPut@packet+1,MACPutArray@val+1
 36740  018318  0101               	movlb	1	; () banked
 36741  01831A  C11E  F100         	movff	ARPPut@packet,MACPutArray@val
 36742  01831E  0E00               	movlw	0
 36743  018320  0101               	movlb	1	; () banked
 36744  018322  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 36745  018324  0E1C               	movlw	28
 36746  018326  0101               	movlb	1	; () banked
 36747  018328  6F02               	movwf	MACPutArray@len& (0+255),b
 36748  01832A  ECE4  F0FF         	call	_MACPutArray	;wreg free
 36749                           
 36750                           ;arp.c: 342: MACFlush();
 36751  01832E  ECBD  F0D9         	call	_MACFlush	;wreg free
 36752                           
 36753                           ;arp.c: 344: return 1;
 36754  018332  0E01               	movlw	1
 36755  018334  0012               	return	
 36756  018336                     __end_of_ARPPut:
 36757                           	opt stack 0
 36758                           tblptru	equ	0xFF8
 36759                           tblptrh	equ	0xFF7
 36760                           tblptrl	equ	0xFF6
 36761                           tablat	equ	0xFF5
 36762                           prodh	equ	0xFF4
 36763                           prodl	equ	0xFF3
 36764                           intcon	equ	0xFF2
 36765                           indf0	equ	0xFEF
 36766                           postinc0	equ	0xFEE
 36767                           fsr0h	equ	0xFEA
 36768                           fsr0l	equ	0xFE9
 36769                           wreg	equ	0xFE8
 36770                           indf1	equ	0xFE7
 36771                           postinc1	equ	0xFE6
 36772                           postdec1	equ	0xFE5
 36773                           fsr1h	equ	0xFE2
 36774                           fsr1l	equ	0xFE1
 36775                           indf2	equ	0xFDF
 36776                           postinc2	equ	0xFDE
 36777                           postdec2	equ	0xFDD
 36778                           fsr2h	equ	0xFDA
 36779                           fsr2l	equ	0xFD9
 36780                           status	equ	0xFD8
 36781                           
 36782 ;; *************** function _SwapARPPacket *****************
 36783 ;; Defined at:
 36784 ;;		line 688 in file "../tcpip/arp.c"
 36785 ;; Parameters:    Size  Location     Type
 36786 ;;  p               2    5[BANK1 ] PTR struct .
 36787 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), 
 36788 ;; Auto vars:     Size  Location     Type
 36789 ;;		None
 36790 ;; Return value:  Size  Location     Type
 36791 ;;		None               void
 36792 ;; Registers used:
 36793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36794 ;; Tracked objects:
 36795 ;;		On entry : 0/0
 36796 ;;		On exit  : 0/0
 36797 ;;		Unchanged: 0/0
 36798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36799 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36802 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36803 ;;Total ram usage:        2 bytes
 36804 ;; Hardware stack levels used:    1
 36805 ;; Hardware stack levels required when called:   11
 36806 ;; This function calls:
 36807 ;;		_swaps
 36808 ;; This function is called by:
 36809 ;;		_ARPPut
 36810 ;;		_ARPProcess
 36811 ;; This function uses a non-reentrant model
 36812 ;;
 36813                           
 36814                           	psect	text73
 36815  019FCC                     __ptext73:
 36816                           	opt stack 0
 36817  019FCC                     _SwapARPPacket:
 36818                           	opt stack 14
 36819                           
 36820                           ;arp.c: 690: p->HardwareType = swaps(p->HardwareType);
 36821                           
 36822                           ;incstack = 0
 36823  019FCC  C105  FFD9         	movff	SwapARPPacket@p,fsr2l
 36824  019FD0  C106  FFDA         	movff	SwapARPPacket@p+1,fsr2h
 36825  019FD4  0101               	movlb	1	; () banked
 36826  019FD6  CFDE F100          	movff	postinc2,swaps@v
 36827  019FDA  0101               	movlb	1	; () banked
 36828  019FDC  CFDD F101          	movff	postdec2,swaps@v+1
 36829  019FE0  EC42  F0DC         	call	_swaps	;wreg free
 36830  019FE4  C105  FFD9         	movff	SwapARPPacket@p,fsr2l
 36831  019FE8  C106  FFDA         	movff	SwapARPPacket@p+1,fsr2h
 36832  019FEC  0101               	movlb	1	; () banked
 36833  019FEE  C100  FFDE         	movff	?_swaps,postinc2
 36834  019FF2  0101               	movlb	1	; () banked
 36835  019FF4  C101  FFDD         	movff	?_swaps+1,postdec2
 36836                           
 36837                           ; BSR set to: 1
 36838                           ;arp.c: 691: p->Protocol = swaps(p->Protocol);
 36839  019FF8  0101               	movlb	1	; () banked
 36840  019FFA  EE20 F002          	lfsr	2,2
 36841  019FFE  0101               	movlb	1	; () banked
 36842  01A000  5105               	movf	SwapARPPacket@p& (0+255),w,b
 36843  01A002  26D9               	addwf	fsr2l,f,c
 36844  01A004  0101               	movlb	1	; () banked
 36845  01A006  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 36846  01A008  22DA               	addwfc	fsr2h,f,c
 36847  01A00A  0101               	movlb	1	; () banked
 36848  01A00C  CFDE F100          	movff	postinc2,swaps@v
 36849  01A010  0101               	movlb	1	; () banked
 36850  01A012  CFDD F101          	movff	postdec2,swaps@v+1
 36851  01A016  EC42  F0DC         	call	_swaps	;wreg free
 36852  01A01A  0101               	movlb	1	; () banked
 36853  01A01C  EE20 F002          	lfsr	2,2
 36854  01A020  0101               	movlb	1	; () banked
 36855  01A022  5105               	movf	SwapARPPacket@p& (0+255),w,b
 36856  01A024  26D9               	addwf	fsr2l,f,c
 36857  01A026  0101               	movlb	1	; () banked
 36858  01A028  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 36859  01A02A  22DA               	addwfc	fsr2h,f,c
 36860  01A02C  0101               	movlb	1	; () banked
 36861  01A02E  C100  FFDE         	movff	?_swaps,postinc2
 36862  01A032  0101               	movlb	1	; () banked
 36863  01A034  C101  FFDD         	movff	?_swaps+1,postdec2
 36864                           
 36865                           ; BSR set to: 1
 36866                           ;arp.c: 692: p->Operation = swaps(p->Operation);
 36867  01A038  0101               	movlb	1	; () banked
 36868  01A03A  EE20 F006          	lfsr	2,6
 36869  01A03E  0101               	movlb	1	; () banked
 36870  01A040  5105               	movf	SwapARPPacket@p& (0+255),w,b
 36871  01A042  26D9               	addwf	fsr2l,f,c
 36872  01A044  0101               	movlb	1	; () banked
 36873  01A046  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 36874  01A048  22DA               	addwfc	fsr2h,f,c
 36875  01A04A  0101               	movlb	1	; () banked
 36876  01A04C  CFDE F100          	movff	postinc2,swaps@v
 36877  01A050  0101               	movlb	1	; () banked
 36878  01A052  CFDD F101          	movff	postdec2,swaps@v+1
 36879  01A056  EC42  F0DC         	call	_swaps	;wreg free
 36880  01A05A  0101               	movlb	1	; () banked
 36881  01A05C  EE20 F006          	lfsr	2,6
 36882  01A060  0101               	movlb	1	; () banked
 36883  01A062  5105               	movf	SwapARPPacket@p& (0+255),w,b
 36884  01A064  26D9               	addwf	fsr2l,f,c
 36885  01A066  0101               	movlb	1	; () banked
 36886  01A068  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 36887  01A06A  22DA               	addwfc	fsr2h,f,c
 36888  01A06C  0101               	movlb	1	; () banked
 36889  01A06E  C100  FFDE         	movff	?_swaps,postinc2
 36890  01A072  0101               	movlb	1	; () banked
 36891  01A074  C101  FFDD         	movff	?_swaps+1,postdec2
 36892                           
 36893                           ; BSR set to: 1
 36894  01A078  0012               	return	
 36895  01A07A                     __end_of_SwapARPPacket:
 36896                           	opt stack 0
 36897                           tblptru	equ	0xFF8
 36898                           tblptrh	equ	0xFF7
 36899                           tblptrl	equ	0xFF6
 36900                           tablat	equ	0xFF5
 36901                           prodh	equ	0xFF4
 36902                           prodl	equ	0xFF3
 36903                           intcon	equ	0xFF2
 36904                           indf0	equ	0xFEF
 36905                           postinc0	equ	0xFEE
 36906                           fsr0h	equ	0xFEA
 36907                           fsr0l	equ	0xFE9
 36908                           wreg	equ	0xFE8
 36909                           indf1	equ	0xFE7
 36910                           postinc1	equ	0xFE6
 36911                           postdec1	equ	0xFE5
 36912                           fsr1h	equ	0xFE2
 36913                           fsr1l	equ	0xFE1
 36914                           indf2	equ	0xFDF
 36915                           postinc2	equ	0xFDE
 36916                           postdec2	equ	0xFDD
 36917                           fsr2h	equ	0xFDA
 36918                           fsr2l	equ	0xFD9
 36919                           status	equ	0xFD8
 36920                           
 36921 ;; *************** function _swaps *****************
 36922 ;; Defined at:
 36923 ;;		line 1071 in file "../tcpip/helpers.c"
 36924 ;; Parameters:    Size  Location     Type
 36925 ;;  v               2    0[BANK1 ] unsigned int 
 36926 ;; Auto vars:     Size  Location     Type
 36927 ;;  t               2    3[BANK1 ] struct .
 36928 ;;  b               1    2[BANK1 ] unsigned char 
 36929 ;; Return value:  Size  Location     Type
 36930 ;;                  2    0[BANK1 ] unsigned int 
 36931 ;; Registers used:
 36932 ;;		None
 36933 ;; Tracked objects:
 36934 ;;		On entry : 0/0
 36935 ;;		On exit  : 0/0
 36936 ;;		Unchanged: 0/0
 36937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36938 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36939 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36941 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36942 ;;Total ram usage:        5 bytes
 36943 ;; Hardware stack levels used:    1
 36944 ;; Hardware stack levels required when called:   10
 36945 ;; This function calls:
 36946 ;;		Nothing
 36947 ;; This function is called by:
 36948 ;;		_MACGetHeader
 36949 ;;		_SwapARPPacket
 36950 ;;		_SwapIPHeader
 36951 ;;		_TCPProcess
 36952 ;;		_SendTCP
 36953 ;;		_SwapTCPHeader
 36954 ;; This function uses a non-reentrant model
 36955 ;;
 36956                           
 36957                           	psect	text74
 36958  01B884                     __ptext74:
 36959                           	opt stack 0
 36960  01B884                     _swaps:
 36961                           	opt stack 15
 36962                           
 36963                           ;helpers.c: 1073: TCPIP_UINT16_VAL t;
 36964                           ;helpers.c: 1074: uint8_t b;
 36965                           ;helpers.c: 1076: t.Val = v;
 36966                           
 36967                           ; BSR set to: 1
 36968                           ;incstack = 0
 36969  01B884  C100  F103         	movff	swaps@v,swaps@t
 36970  01B888  C101  F104         	movff	swaps@v+1,swaps@t+1
 36971                           
 36972                           ;helpers.c: 1077: b = t.v[1];
 36973  01B88C  C104  F102         	movff	swaps@t+1,swaps@b
 36974                           
 36975                           ;helpers.c: 1078: t.v[1] = t.v[0];
 36976  01B890  C103  F104         	movff	swaps@t,swaps@t+1
 36977                           
 36978                           ;helpers.c: 1079: t.v[0] = b;
 36979  01B894  C102  F103         	movff	swaps@b,swaps@t
 36980                           
 36981                           ;helpers.c: 1081: return t.Val;
 36982  01B898  C103  F100         	movff	swaps@t,?_swaps
 36983  01B89C  C104  F101         	movff	swaps@t+1,?_swaps+1
 36984  01B8A0  0012               	return	
 36985  01B8A2                     __end_of_swaps:
 36986                           	opt stack 0
 36987                           tblptru	equ	0xFF8
 36988                           tblptrh	equ	0xFF7
 36989                           tblptrl	equ	0xFF6
 36990                           tablat	equ	0xFF5
 36991                           prodh	equ	0xFF4
 36992                           prodl	equ	0xFF3
 36993                           intcon	equ	0xFF2
 36994                           indf0	equ	0xFEF
 36995                           postinc0	equ	0xFEE
 36996                           fsr0h	equ	0xFEA
 36997                           fsr0l	equ	0xFE9
 36998                           wreg	equ	0xFE8
 36999                           indf1	equ	0xFE7
 37000                           postinc1	equ	0xFE6
 37001                           postdec1	equ	0xFE5
 37002                           fsr1h	equ	0xFE2
 37003                           fsr1l	equ	0xFE1
 37004                           indf2	equ	0xFDF
 37005                           postinc2	equ	0xFDE
 37006                           postdec2	equ	0xFDD
 37007                           fsr2h	equ	0xFDA
 37008                           fsr2l	equ	0xFD9
 37009                           status	equ	0xFD8
 37010                           
 37011 ;; *************** function _MACPutHeader *****************
 37012 ;; Defined at:
 37013 ;;		line 554 in file "../tcpip/ETH97J60.c"
 37014 ;; Parameters:    Size  Location     Type
 37015 ;;  remote          2    4[BANK1 ] PTR struct .
 37016 ;;		 -> MyTCB.remote(10), MyTCB(39), ARPResolve@packet(28), ARPProcess@packet(28), 
 37017 ;;		 -> ARPSendPkt@packet(28), 
 37018 ;;  type            1    6[BANK1 ] unsigned char 
 37019 ;;  dataLen         2    7[BANK1 ] unsigned int 
 37020 ;; Auto vars:     Size  Location     Type
 37021 ;;		None
 37022 ;; Return value:  Size  Location     Type
 37023 ;;		None               void
 37024 ;; Registers used:
 37025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37026 ;; Tracked objects:
 37027 ;;		On entry : 0/0
 37028 ;;		On exit  : 0/0
 37029 ;;		Unchanged: 0/0
 37030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37031 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37032 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37034 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37035 ;;Total ram usage:        7 bytes
 37036 ;; Hardware stack levels used:    1
 37037 ;; Hardware stack levels required when called:   11
 37038 ;; This function calls:
 37039 ;;		_MACPut
 37040 ;;		_MACPutArray
 37041 ;; This function is called by:
 37042 ;;		_ARPPut
 37043 ;;		_IPPutHeader
 37044 ;; This function uses a non-reentrant model
 37045 ;;
 37046                           
 37047                           	psect	text75
 37048  01A73C                     __ptext75:
 37049                           	opt stack 0
 37050  01A73C                     _MACPutHeader:
 37051                           	opt stack 13
 37052                           
 37053                           ;ETH97J60.c: 557: EWRPT = ((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1;
 37054                           
 37055                           ;incstack = 0
 37056  01A73C  0E12               	movlw	18
 37057  01A73E  010E               	movlb	14	; () banked
 37058  01A740  6FE3               	movwf	227,b	;volatile
 37059  01A742  0EA7               	movlw	167
 37060  01A744  010E               	movlb	14	; () banked
 37061  01A746  6FE2               	movwf	226,b	;volatile
 37062                           
 37063                           ; BSR set to: 14
 37064                           ;ETH97J60.c: 560: dataLen += (WORD)sizeof(ETHER_HEADER) + ((8*1024ul) - (1ul+1518ul+7ul)
      +                           - (1892ul) - 0ul - 0ul);
 37065  01A748  0101               	movlb	1	; () banked
 37066  01A74A  0EB4               	movlw	180
 37067  01A74C  0101               	movlb	1	; () banked
 37068  01A74E  2707               	addwf	MACPutHeader@dataLen& (0+255),f,b
 37069  01A750  0E12               	movlw	18
 37070  01A752  0101               	movlb	1	; () banked
 37071  01A754  2308               	addwfc	(MACPutHeader@dataLen+1)& (0+255),f,b
 37072                           
 37073                           ; BSR set to: 1
 37074                           ;ETH97J60.c: 563: ETXND = dataLen;
 37075  01A756  C107  FEE6         	movff	MACPutHeader@dataLen,3814	;volatile
 37076  01A75A  C108  FEE7         	movff	MACPutHeader@dataLen+1,3815	;volatile
 37077                           
 37078                           ; BSR set to: 1
 37079                           ;ETH97J60.c: 567: MACPutArray((BYTE*)remote, sizeof(*remote));
 37080  01A75E  0101               	movlb	1	; () banked
 37081  01A760  C105  F101         	movff	MACPutHeader@remote+1,MACPutArray@val+1
 37082  01A764  0101               	movlb	1	; () banked
 37083  01A766  C104  F100         	movff	MACPutHeader@remote,MACPutArray@val
 37084  01A76A  0E00               	movlw	0
 37085  01A76C  0101               	movlb	1	; () banked
 37086  01A76E  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 37087  01A770  0E06               	movlw	6
 37088  01A772  0101               	movlb	1	; () banked
 37089  01A774  6F02               	movwf	MACPutArray@len& (0+255),b
 37090  01A776  ECE4  F0FF         	call	_MACPutArray	;wreg free
 37091                           
 37092                           ;ETH97J60.c: 570: MACPutArray((BYTE*)&AppConfig.MyMACAddr, sizeof(AppConfig.MyMACAddr));
 37093  01A77A  0102               	movlb	2	; () banked
 37094  01A77C  0E02               	movlw	high (_AppConfig+45)
 37095  01A77E  0101               	movlb	1	; () banked
 37096  01A780  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 37097  01A782  0102               	movlb	2	; () banked
 37098  01A784  0E69               	movlw	low (_AppConfig+45)
 37099  01A786  0101               	movlb	1	; () banked
 37100  01A788  6F00               	movwf	MACPutArray@val& (0+255),b
 37101  01A78A  0E00               	movlw	0
 37102  01A78C  0101               	movlb	1	; () banked
 37103  01A78E  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 37104  01A790  0E06               	movlw	6
 37105  01A792  0101               	movlb	1	; () banked
 37106  01A794  6F02               	movwf	MACPutArray@len& (0+255),b
 37107  01A796  ECE4  F0FF         	call	_MACPutArray	;wreg free
 37108                           
 37109                           ;ETH97J60.c: 573: MACPut(0x08);
 37110  01A79A  0E08               	movlw	8
 37111  01A79C  EC21  F0DD         	call	_MACPut
 37112                           
 37113                           ;ETH97J60.c: 574: MACPut((type == (0x00u)) ? (0x00u) : (0x06u));
 37114  01A7A0  0101               	movlb	1	; () banked
 37115  01A7A2  5106               	movf	MACPutHeader@type& (0+255),w,b
 37116  01A7A4  B4D8               	btfsc	status,2,c
 37117  01A7A6  D005               	goto	l10246
 37118                           
 37119                           ; BSR set to: 1
 37120  01A7A8  0E00               	movlw	0
 37121  01A7AA  0101               	movlb	1	; () banked
 37122  01A7AC  6F0A               	movwf	(_MACPutHeader$1874+1)& (0+255),b
 37123  01A7AE  0E06               	movlw	6
 37124  01A7B0  D004               	goto	L40
 37125  01A7B2                     l10246:
 37126                           
 37127                           ; BSR set to: 1
 37128  01A7B2  0E00               	movlw	0
 37129  01A7B4  0101               	movlb	1	; () banked
 37130  01A7B6  6F0A               	movwf	(_MACPutHeader$1874+1)& (0+255),b
 37131  01A7B8  0E00               	movlw	0
 37132  01A7BA                     L40:
 37133  01A7BA  0101               	movlb	1	; () banked
 37134  01A7BC  6F09               	movwf	_MACPutHeader$1874& (0+255),b
 37135                           
 37136                           ; BSR set to: 1
 37137                           
 37138                           ; BSR set to: 1
 37139  01A7BE  0101               	movlb	1	; () banked
 37140  01A7C0  5109               	movf	_MACPutHeader$1874& (0+255),w,b
 37141  01A7C2  EC21  F0DD         	call	_MACPut
 37142  01A7C6  0012               	return	
 37143  01A7C8                     __end_of_MACPutHeader:
 37144                           	opt stack 0
 37145                           tblptru	equ	0xFF8
 37146                           tblptrh	equ	0xFF7
 37147                           tblptrl	equ	0xFF6
 37148                           tablat	equ	0xFF5
 37149                           prodh	equ	0xFF4
 37150                           prodl	equ	0xFF3
 37151                           intcon	equ	0xFF2
 37152                           indf0	equ	0xFEF
 37153                           postinc0	equ	0xFEE
 37154                           fsr0h	equ	0xFEA
 37155                           fsr0l	equ	0xFE9
 37156                           wreg	equ	0xFE8
 37157                           indf1	equ	0xFE7
 37158                           postinc1	equ	0xFE6
 37159                           postdec1	equ	0xFE5
 37160                           fsr1h	equ	0xFE2
 37161                           fsr1l	equ	0xFE1
 37162                           indf2	equ	0xFDF
 37163                           postinc2	equ	0xFDE
 37164                           postdec2	equ	0xFDD
 37165                           fsr2h	equ	0xFDA
 37166                           fsr2l	equ	0xFD9
 37167                           status	equ	0xFD8
 37168                           
 37169 ;; *************** function _MACIsTxReady *****************
 37170 ;; Defined at:
 37171 ;;		line 285 in file "../tcpip/ETH97J60.c"
 37172 ;; Parameters:    Size  Location     Type
 37173 ;;		None
 37174 ;; Auto vars:     Size  Location     Type
 37175 ;;		None
 37176 ;; Return value:  Size  Location     Type
 37177 ;;                  1    wreg      unsigned char 
 37178 ;; Registers used:
 37179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37180 ;; Tracked objects:
 37181 ;;		On entry : 0/0
 37182 ;;		On exit  : 0/0
 37183 ;;		Unchanged: 0/0
 37184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37187 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37188 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37189 ;;Total ram usage:        6 bytes
 37190 ;; Hardware stack levels used:    1
 37191 ;; Hardware stack levels required when called:   13
 37192 ;; This function calls:
 37193 ;;		_MACFlush
 37194 ;;		_TickGet
 37195 ;; This function is called by:
 37196 ;;		_ARPPut
 37197 ;;		_TCPTick
 37198 ;;		_SendTCP
 37199 ;; This function uses a non-reentrant model
 37200 ;;
 37201                           
 37202                           	psect	text76
 37203  01AF96                     __ptext76:
 37204                           	opt stack 0
 37205  01AF96                     _MACIsTxReady:
 37206                           	opt stack 12
 37207                           
 37208                           ;ETH97J60.c: 287: if(!ECON1bits.TXRTS)
 37209                           
 37210                           ;incstack = 0
 37211  01AF96  B6D2               	btfsc	4050,3,c	;volatile
 37212  01AF98  D002               	goto	l10832
 37213                           
 37214                           ;ETH97J60.c: 288: return TRUE;
 37215  01AF9A  0E01               	movlw	1
 37216  01AF9C  0012               	return	
 37217  01AF9E                     l10832:
 37218                           
 37219                           ;ETH97J60.c: 292: if((WORD)TickGet() - wTXWatchdog >= (3ull*(((((40000000ul)/4)+128ull)/
      +                          256ull))/1000ull))
 37220  01AF9E  0100               	movlb	0	; () banked
 37221  01AFA0  C0EB  F10D         	movff	_wTXWatchdog,??_MACIsTxReady
 37222  01AFA4  0100               	movlb	0	; () banked
 37223  01AFA6  C0EC  F10E         	movff	_wTXWatchdog+1,??_MACIsTxReady+1
 37224  01AFAA  0101               	movlb	1	; () banked
 37225  01AFAC  1F0D               	comf	??_MACIsTxReady& (0+255),f,b
 37226  01AFAE  1F0E               	comf	(??_MACIsTxReady+1)& (0+255),f,b
 37227  01AFB0  4B0D               	infsnz	??_MACIsTxReady& (0+255),f,b
 37228  01AFB2  2B0E               	incf	(??_MACIsTxReady+1)& (0+255),f,b
 37229  01AFB4  EC5D  F0DB         	call	_TickGet	;wreg free
 37230  01AFB8  C100  F10F         	movff	?_TickGet,??_MACIsTxReady+2
 37231  01AFBC  C101  F110         	movff	?_TickGet+1,??_MACIsTxReady+3
 37232  01AFC0  C102  F111         	movff	?_TickGet+2,??_MACIsTxReady+4
 37233  01AFC4  C103  F112         	movff	?_TickGet+3,??_MACIsTxReady+5
 37234  01AFC8  0101               	movlb	1	; () banked
 37235  01AFCA  510D               	movf	??_MACIsTxReady& (0+255),w,b
 37236  01AFCC  0101               	movlb	1	; () banked
 37237  01AFCE  270F               	addwf	(??_MACIsTxReady+2)& (0+255),f,b
 37238  01AFD0  0101               	movlb	1	; () banked
 37239  01AFD2  510E               	movf	(??_MACIsTxReady+1)& (0+255),w,b
 37240  01AFD4  0101               	movlb	1	; () banked
 37241  01AFD6  2310               	addwfc	(??_MACIsTxReady+3)& (0+255),f,b
 37242  01AFD8  0E75               	movlw	117
 37243  01AFDA  0101               	movlb	1	; () banked
 37244  01AFDC  5D0F               	subwf	(??_MACIsTxReady+2)& (0+255),w,b
 37245  01AFDE  0E00               	movlw	0
 37246  01AFE0  5910               	subwfb	(??_MACIsTxReady+3)& (0+255),w,b
 37247  01AFE2  A0D8               	btfss	status,0,c
 37248  01AFE4  D003               	goto	l10838
 37249                           
 37250                           ; BSR set to: 1
 37251                           ;ETH97J60.c: 293: {
 37252                           ;ETH97J60.c: 294: ECON1bits.TXRTS = 0;
 37253  01AFE6  96D2               	bcf	4050,3,c	;volatile
 37254                           
 37255                           ; BSR set to: 1
 37256                           ;ETH97J60.c: 295: MACFlush();
 37257  01AFE8  ECBD  F0D9         	call	_MACFlush	;wreg free
 37258  01AFEC                     l10838:
 37259                           
 37260                           ;ETH97J60.c: 296: }
 37261                           ;ETH97J60.c: 298: return FALSE;
 37262  01AFEC  0E00               	movlw	0
 37263  01AFEE  0012               	return	
 37264  01AFF0                     __end_of_MACIsTxReady:
 37265                           	opt stack 0
 37266                           tblptru	equ	0xFF8
 37267                           tblptrh	equ	0xFF7
 37268                           tblptrl	equ	0xFF6
 37269                           tablat	equ	0xFF5
 37270                           prodh	equ	0xFF4
 37271                           prodl	equ	0xFF3
 37272                           intcon	equ	0xFF2
 37273                           indf0	equ	0xFEF
 37274                           postinc0	equ	0xFEE
 37275                           fsr0h	equ	0xFEA
 37276                           fsr0l	equ	0xFE9
 37277                           wreg	equ	0xFE8
 37278                           indf1	equ	0xFE7
 37279                           postinc1	equ	0xFE6
 37280                           postdec1	equ	0xFE5
 37281                           fsr1h	equ	0xFE2
 37282                           fsr1l	equ	0xFE1
 37283                           indf2	equ	0xFDF
 37284                           postinc2	equ	0xFDE
 37285                           postdec2	equ	0xFDD
 37286                           fsr2h	equ	0xFDA
 37287                           fsr2l	equ	0xFD9
 37288                           status	equ	0xFD8
 37289                           
 37290 ;; *************** function _MACFlush *****************
 37291 ;; Defined at:
 37292 ;;		line 600 in file "../tcpip/ETH97J60.c"
 37293 ;; Parameters:    Size  Location     Type
 37294 ;;		None
 37295 ;; Auto vars:     Size  Location     Type
 37296 ;;  i               1   12[BANK1 ] volatile unsigned char 
 37297 ;; Return value:  Size  Location     Type
 37298 ;;		None               void
 37299 ;; Registers used:
 37300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37301 ;; Tracked objects:
 37302 ;;		On entry : 0/0
 37303 ;;		On exit  : 0/0
 37304 ;;		Unchanged: 0/0
 37305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37307 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37308 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37309 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37310 ;;Total ram usage:        5 bytes
 37311 ;; Hardware stack levels used:    1
 37312 ;; Hardware stack levels required when called:   12
 37313 ;; This function calls:
 37314 ;;		_TickGet
 37315 ;; This function is called by:
 37316 ;;		_MACIsTxReady
 37317 ;;		_ARPPut
 37318 ;;		_SendTCP
 37319 ;; This function uses a non-reentrant model
 37320 ;;
 37321                           
 37322                           	psect	text77
 37323  01B37A                     __ptext77:
 37324                           	opt stack 0
 37325  01B37A                     _MACFlush:
 37326                           	opt stack 12
 37327                           
 37328                           ;ETH97J60.c: 605: ECON1bits.TXRST = 1;
 37329                           
 37330                           ;incstack = 0
 37331  01B37A  8ED2               	bsf	4050,7,c	;volatile
 37332                           
 37333                           ;ETH97J60.c: 606: ECON1bits.TXRST = 0;
 37334  01B37C  9ED2               	bcf	4050,7,c	;volatile
 37335                           
 37336                           ;ETH97J60.c: 610: {volatile BYTE i = 8; while(i--);}
 37337  01B37E  0E08               	movlw	8
 37338  01B380  0101               	movlb	1	; () banked
 37339  01B382  6F0C               	movwf	MACFlush@i& (0+255),b	;volatile
 37340  01B384                     l10226:
 37341                           
 37342                           ; BSR set to: 1
 37343  01B384  0101               	movlb	1	; () banked
 37344  01B386  070C               	decf	MACFlush@i& (0+255),f,b	;volatile
 37345  01B388  0101               	movlb	1	; () banked
 37346  01B38A  290C               	incf	MACFlush@i& (0+255),w,b	;volatile
 37347  01B38C  A4D8               	btfss	status,2,c
 37348  01B38E  D7FA               	goto	l10226
 37349                           
 37350                           ; BSR set to: 1
 37351                           ;ETH97J60.c: 611: EIRbits.TXERIF = 0;
 37352  01B390  9260               	bcf	3936,1,c	;volatile
 37353                           
 37354                           ;ETH97J60.c: 644: ECON1bits.TXRTS = 1;
 37355  01B392  86D2               	bsf	4050,3,c	;volatile
 37356                           
 37357                           ; BSR set to: 1
 37358                           ;ETH97J60.c: 645: wTXWatchdog = TickGet();
 37359  01B394  EC5D  F0DB         	call	_TickGet	;wreg free
 37360  01B398  C100  F108         	movff	?_TickGet,??_MACFlush
 37361  01B39C  C101  F109         	movff	?_TickGet+1,??_MACFlush+1
 37362  01B3A0  C102  F10A         	movff	?_TickGet+2,??_MACFlush+2
 37363  01B3A4  C103  F10B         	movff	?_TickGet+3,??_MACFlush+3
 37364  01B3A8  C108  F0EB         	movff	??_MACFlush,_wTXWatchdog
 37365  01B3AC  C109  F0EC         	movff	??_MACFlush+1,_wTXWatchdog+1
 37366  01B3B0  0012               	return	
 37367  01B3B2                     __end_of_MACFlush:
 37368                           	opt stack 0
 37369                           tblptru	equ	0xFF8
 37370                           tblptrh	equ	0xFF7
 37371                           tblptrl	equ	0xFF6
 37372                           tablat	equ	0xFF5
 37373                           prodh	equ	0xFF4
 37374                           prodl	equ	0xFF3
 37375                           intcon	equ	0xFF2
 37376                           indf0	equ	0xFEF
 37377                           postinc0	equ	0xFEE
 37378                           fsr0h	equ	0xFEA
 37379                           fsr0l	equ	0xFE9
 37380                           wreg	equ	0xFE8
 37381                           indf1	equ	0xFE7
 37382                           postinc1	equ	0xFE6
 37383                           postdec1	equ	0xFE5
 37384                           fsr1h	equ	0xFE2
 37385                           fsr1l	equ	0xFE1
 37386                           indf2	equ	0xFDF
 37387                           postinc2	equ	0xFDE
 37388                           postdec2	equ	0xFDD
 37389                           fsr2h	equ	0xFDA
 37390                           fsr2l	equ	0xFD9
 37391                           status	equ	0xFD8
 37392                           
 37393 ;; *************** function _TickGet *****************
 37394 ;; Defined at:
 37395 ;;		line 254 in file "../tcpip/tick.c"
 37396 ;; Parameters:    Size  Location     Type
 37397 ;;		None
 37398 ;; Auto vars:     Size  Location     Type
 37399 ;;  dw              4    4[BANK1 ] unsigned long 
 37400 ;; Return value:  Size  Location     Type
 37401 ;;                  4    0[BANK1 ] unsigned long 
 37402 ;; Registers used:
 37403 ;;		fsr2l, fsr2h, cstack
 37404 ;; Tracked objects:
 37405 ;;		On entry : 0/0
 37406 ;;		On exit  : 0/0
 37407 ;;		Unchanged: 0/0
 37408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37409 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37410 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37412 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37413 ;;Total ram usage:        8 bytes
 37414 ;; Hardware stack levels used:    1
 37415 ;; Hardware stack levels required when called:   11
 37416 ;; This function calls:
 37417 ;;		_GetTickCopy
 37418 ;; This function is called by:
 37419 ;;		_MACIsTxReady
 37420 ;;		_MACFlush
 37421 ;;		_TCPOpen
 37422 ;;		_TCPTick
 37423 ;;		_SendTCP
 37424 ;;		_HandleTCPSeg
 37425 ;; This function uses a non-reentrant model
 37426 ;;
 37427                           
 37428                           	psect	text78
 37429  01B6BA                     __ptext78:
 37430                           	opt stack 0
 37431  01B6BA                     _TickGet:
 37432                           	opt stack 14
 37433                           
 37434                           ;tick.c: 256: uint32_t dw;
 37435                           ;tick.c: 258: GetTickCopy();
 37436                           
 37437                           ;incstack = 0
 37438  01B6BA  EC2B  F0DA         	call	_GetTickCopy	;wreg free
 37439                           
 37440                           ;tick.c: 259: ((uint8_t*)&dw)[0] = vTickReading[0];
 37441  01B6BE  C0C7  F104         	movff	_vTickReading,TickGet@dw	;volatile
 37442                           
 37443                           ;tick.c: 260: ((uint8_t*)&dw)[1] = vTickReading[1];
 37444  01B6C2  C0C8  F105         	movff	_vTickReading+1,TickGet@dw+1	;volatile
 37445                           
 37446                           ;tick.c: 261: ((uint8_t*)&dw)[2] = vTickReading[2];
 37447  01B6C6  C0C9  F106         	movff	_vTickReading+2,TickGet@dw+2	;volatile
 37448                           
 37449                           ;tick.c: 262: ((uint8_t*)&dw)[3] = vTickReading[3];
 37450  01B6CA  C0CA  F107         	movff	_vTickReading+3,TickGet@dw+3	;volatile
 37451                           
 37452                           ;tick.c: 263: return dw;
 37453  01B6CE  C104  F100         	movff	TickGet@dw,?_TickGet
 37454  01B6D2  C105  F101         	movff	TickGet@dw+1,?_TickGet+1
 37455  01B6D6  C106  F102         	movff	TickGet@dw+2,?_TickGet+2
 37456  01B6DA  C107  F103         	movff	TickGet@dw+3,?_TickGet+3
 37457  01B6DE  0012               	return	
 37458  01B6E0                     __end_of_TickGet:
 37459                           	opt stack 0
 37460                           tblptru	equ	0xFF8
 37461                           tblptrh	equ	0xFF7
 37462                           tblptrl	equ	0xFF6
 37463                           tablat	equ	0xFF5
 37464                           prodh	equ	0xFF4
 37465                           prodl	equ	0xFF3
 37466                           intcon	equ	0xFF2
 37467                           indf0	equ	0xFEF
 37468                           postinc0	equ	0xFEE
 37469                           fsr0h	equ	0xFEA
 37470                           fsr0l	equ	0xFE9
 37471                           wreg	equ	0xFE8
 37472                           indf1	equ	0xFE7
 37473                           postinc1	equ	0xFE6
 37474                           postdec1	equ	0xFE5
 37475                           fsr1h	equ	0xFE2
 37476                           fsr1l	equ	0xFE1
 37477                           indf2	equ	0xFDF
 37478                           postinc2	equ	0xFDE
 37479                           postdec2	equ	0xFDD
 37480                           fsr2h	equ	0xFDA
 37481                           fsr2l	equ	0xFD9
 37482                           status	equ	0xFD8
 37483                           
 37484 ;; *************** function _GetTickCopy *****************
 37485 ;; Defined at:
 37486 ;;		line 140 in file "../tcpip/tick.c"
 37487 ;; Parameters:    Size  Location     Type
 37488 ;;		None
 37489 ;; Auto vars:     Size  Location     Type
 37490 ;;		None
 37491 ;; Return value:  Size  Location     Type
 37492 ;;		None               void
 37493 ;; Registers used:
 37494 ;;		fsr2l, fsr2h
 37495 ;; Tracked objects:
 37496 ;;		On entry : 0/0
 37497 ;;		On exit  : 0/0
 37498 ;;		Unchanged: 0/0
 37499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37504 ;;Total ram usage:        0 bytes
 37505 ;; Hardware stack levels used:    1
 37506 ;; Hardware stack levels required when called:   10
 37507 ;; This function calls:
 37508 ;;		Nothing
 37509 ;; This function is called by:
 37510 ;;		_TickGet
 37511 ;;		_TickGetDiv256
 37512 ;;		_TickGetDiv64K
 37513 ;; This function uses a non-reentrant model
 37514 ;;
 37515                           
 37516                           	psect	text79
 37517  01B456                     __ptext79:
 37518                           	opt stack 0
 37519  01B456                     _GetTickCopy:
 37520                           	opt stack 16
 37521  01B456                     l1506:
 37522                           
 37523                           ;tick.c: 146: {
 37524                           ;tick.c: 147: INTCONbits.TMR0IE = 1;
 37525  01B456  8AF2               	bsf	intcon,5,c	;volatile
 37526                           
 37527                           ;tick.c: 148: __nop();
 37528  01B458  F000               	nop	
 37529                           
 37530                           ;tick.c: 149: INTCONbits.TMR0IE = 0;
 37531  01B45A  9AF2               	bcf	intcon,5,c	;volatile
 37532                           
 37533                           ;tick.c: 150: vTickReading[0] = TMR0L;
 37534  01B45C  CFD6 F0C7          	movff	4054,_vTickReading	;volatile
 37535                           
 37536                           ;tick.c: 151: vTickReading[1] = TMR0H;
 37537  01B460  CFD7 F0C8          	movff	4055,_vTickReading+1	;volatile
 37538                           
 37539                           ;tick.c: 152: *((uint32_t*)&vTickReading[2]) = dwInternalTicks;
 37540  01B464  0100               	movlb	0	; () banked
 37541  01B466  EE20  F0C9         	lfsr	2,_vTickReading+2	;volatile
 37542  01B46A  0100               	movlb	0	; () banked
 37543  01B46C  C0D1  FFDE         	movff	_dwInternalTicks,postinc2	;volatile
 37544  01B470  0100               	movlb	0	; () banked
 37545  01B472  C0D2  FFDE         	movff	_dwInternalTicks+1,postinc2	;volatile
 37546  01B476  0100               	movlb	0	; () banked
 37547  01B478  C0D3  FFDE         	movff	_dwInternalTicks+2,postinc2	;volatile
 37548  01B47C  0100               	movlb	0	; () banked
 37549  01B47E  C0D4  FFDE         	movff	_dwInternalTicks+3,postinc2	;volatile
 37550                           
 37551                           ; BSR set to: 0
 37552                           ;tick.c: 153: } while(INTCONbits.TMR0IF);
 37553  01B482  B4F2               	btfsc	intcon,2,c	;volatile
 37554  01B484  D7E8               	goto	l1506
 37555                           
 37556                           ; BSR set to: 0
 37557                           ;tick.c: 154: INTCONbits.TMR0IE = 1;
 37558  01B486  8AF2               	bsf	intcon,5,c	;volatile
 37559                           
 37560                           ; BSR set to: 0
 37561  01B488  0012               	return	
 37562  01B48A                     __end_of_GetTickCopy:
 37563                           	opt stack 0
 37564                           tblptru	equ	0xFF8
 37565                           tblptrh	equ	0xFF7
 37566                           tblptrl	equ	0xFF6
 37567                           tablat	equ	0xFF5
 37568                           prodh	equ	0xFF4
 37569                           prodl	equ	0xFF3
 37570                           intcon	equ	0xFF2
 37571                           indf0	equ	0xFEF
 37572                           postinc0	equ	0xFEE
 37573                           fsr0h	equ	0xFEA
 37574                           fsr0l	equ	0xFE9
 37575                           wreg	equ	0xFE8
 37576                           indf1	equ	0xFE7
 37577                           postinc1	equ	0xFE6
 37578                           postdec1	equ	0xFE5
 37579                           fsr1h	equ	0xFE2
 37580                           fsr1l	equ	0xFE1
 37581                           indf2	equ	0xFDF
 37582                           postinc2	equ	0xFDE
 37583                           postdec2	equ	0xFDD
 37584                           fsr2h	equ	0xFDA
 37585                           fsr2l	equ	0xFD9
 37586                           status	equ	0xFD8
 37587                           
 37588 ;; *************** function _RestoreFromFlash *****************
 37589 ;; Defined at:
 37590 ;;		line 35 in file "Persistence.c"
 37591 ;; Parameters:    Size  Location     Type
 37592 ;;		None
 37593 ;; Auto vars:     Size  Location     Type
 37594 ;;  chSum           1   28[BANK1 ] unsigned char 
 37595 ;;  addr            4   29[BANK1 ] unsigned long 
 37596 ;;  addrStop        4   24[BANK1 ] unsigned long 
 37597 ;; Return value:  Size  Location     Type
 37598 ;;		None               void
 37599 ;; Registers used:
 37600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37601 ;; Tracked objects:
 37602 ;;		On entry : 0/0
 37603 ;;		On exit  : 0/0
 37604 ;;		Unchanged: 0/0
 37605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37607 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37608 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37609 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37610 ;;Total ram usage:       17 bytes
 37611 ;; Hardware stack levels used:    1
 37612 ;; Hardware stack levels required when called:   11
 37613 ;; This function calls:
 37614 ;;		_GetCheckSum
 37615 ;;		_ReadFlash
 37616 ;;		_memset
 37617 ;; This function is called by:
 37618 ;;		_main
 37619 ;; This function uses a non-reentrant model
 37620 ;;
 37621                           
 37622                           	psect	text80
 37623  016DE2                     __ptext80:
 37624                           	opt stack 0
 37625  016DE2                     _RestoreFromFlash:
 37626                           	opt stack 18
 37627                           
 37628                           ;Persistence.c: 37: unsigned long addr = SETTINGS_ADDR;
 37629                           
 37630                           ; BSR set to: 0
 37631                           ;incstack = 0
 37632  016DE2  0E11               	movlw	low _SETTINGS_ADDR
 37633  016DE4  6EF6               	movwf	tblptrl,c
 37634  016DE6                     	if	1	;There is more than 1 active tblptr byte
 37635  016DE6  0EFF               	movlw	high _SETTINGS_ADDR
 37636  016DE8  6EF7               	movwf	tblptrh,c
 37637  016DEA                     	endif
 37638  016DEA                     	if	1	;There are 3 active tblptr bytes
 37639  016DEA  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 37640  016DEC  6EF8               	movwf	tblptru,c
 37641  016DEE                     	endif
 37642  016DEE  0009               	tblrd		*+
 37643  016DF0  0101               	movlb	1	; () banked
 37644  016DF2  CFF5 F11D          	movff	tablat,RestoreFromFlash@addr
 37645  016DF6  0009               	tblrd		*+
 37646  016DF8  0101               	movlb	1	; () banked
 37647  016DFA  CFF5 F11E          	movff	tablat,RestoreFromFlash@addr+1
 37648  016DFE  0009               	tblrd		*+
 37649  016E00  0101               	movlb	1	; () banked
 37650  016E02  CFF5 F11F          	movff	tablat,RestoreFromFlash@addr+2
 37651  016E06  000A               	tblrd		*-
 37652  016E08  0101               	movlb	1	; () banked
 37653  016E0A  CFF5 F120          	movff	tablat,RestoreFromFlash@addr+3
 37654                           
 37655                           ; BSR set to: 1
 37656                           ;Persistence.c: 38: unsigned long addrStop = SETTINGS_ADDR + SETTINGS_LEN;
 37657  016E0E  0E15               	movlw	low _SETTINGS_LEN
 37658  016E10  6EF6               	movwf	tblptrl,c
 37659  016E12                     	if	1	;There is more than 1 active tblptr byte
 37660  016E12  0EFF               	movlw	high _SETTINGS_LEN
 37661  016E14  6EF7               	movwf	tblptrh,c
 37662  016E16                     	endif
 37663  016E16                     	if	1	;There are 3 active tblptr bytes
 37664  016E16  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 37665  016E18  6EF8               	movwf	tblptru,c
 37666  016E1A                     	endif
 37667  016E1A  0009               	tblrd		*+
 37668  016E1C  CFF5 F110          	movff	tablat,??_RestoreFromFlash
 37669  016E20  0009               	tblrd		*+
 37670  016E22  CFF5 F111          	movff	tablat,??_RestoreFromFlash+1
 37671  016E26  0009               	tblrd		*+
 37672  016E28  CFF5 F112          	movff	tablat,??_RestoreFromFlash+2
 37673  016E2C  0009               	tblrd		*+
 37674  016E2E  CFF5 F113          	movff	tablat,??_RestoreFromFlash+3
 37675  016E32  0E11               	movlw	low _SETTINGS_ADDR
 37676  016E34  6EF6               	movwf	tblptrl,c
 37677  016E36                     	if	1	;There is more than 1 active tblptr byte
 37678  016E36  0EFF               	movlw	high _SETTINGS_ADDR
 37679  016E38  6EF7               	movwf	tblptrh,c
 37680  016E3A                     	endif
 37681  016E3A                     	if	1	;There are 3 active tblptr bytes
 37682  016E3A  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 37683  016E3C  6EF8               	movwf	tblptru,c
 37684  016E3E                     	endif
 37685  016E3E  0009               	tblrd		*+
 37686  016E40  CFF5 F114          	movff	tablat,??_RestoreFromFlash+4
 37687  016E44  0009               	tblrd		*+
 37688  016E46  CFF5 F115          	movff	tablat,??_RestoreFromFlash+5
 37689  016E4A  0009               	tblrd		*+
 37690  016E4C  CFF5 F116          	movff	tablat,??_RestoreFromFlash+6
 37691  016E50  0009               	tblrd		*+
 37692  016E52  CFF5 F117          	movff	tablat,??_RestoreFromFlash+7
 37693  016E56  0101               	movlb	1	; () banked
 37694  016E58  5110               	movf	??_RestoreFromFlash& (0+255),w,b
 37695  016E5A  0101               	movlb	1	; () banked
 37696  016E5C  2514               	addwf	(??_RestoreFromFlash+4)& (0+255),w,b
 37697  016E5E  0101               	movlb	1	; () banked
 37698  016E60  6F18               	movwf	RestoreFromFlash@addrStop& (0+255),b
 37699  016E62  0101               	movlb	1	; () banked
 37700  016E64  5111               	movf	(??_RestoreFromFlash+1)& (0+255),w,b
 37701  016E66  0101               	movlb	1	; () banked
 37702  016E68  2115               	addwfc	(??_RestoreFromFlash+5)& (0+255),w,b
 37703  016E6A  0101               	movlb	1	; () banked
 37704  016E6C  6F19               	movwf	(RestoreFromFlash@addrStop+1)& (0+255),b
 37705  016E6E  0101               	movlb	1	; () banked
 37706  016E70  5112               	movf	(??_RestoreFromFlash+2)& (0+255),w,b
 37707  016E72  0101               	movlb	1	; () banked
 37708  016E74  2116               	addwfc	(??_RestoreFromFlash+6)& (0+255),w,b
 37709  016E76  0101               	movlb	1	; () banked
 37710  016E78  6F1A               	movwf	(RestoreFromFlash@addrStop+2)& (0+255),b
 37711  016E7A  0101               	movlb	1	; () banked
 37712  016E7C  5113               	movf	(??_RestoreFromFlash+3)& (0+255),w,b
 37713  016E7E  0101               	movlb	1	; () banked
 37714  016E80  2117               	addwfc	(??_RestoreFromFlash+7)& (0+255),w,b
 37715  016E82  0101               	movlb	1	; () banked
 37716  016E84  6F1B               	movwf	(RestoreFromFlash@addrStop+3)& (0+255),b
 37717                           
 37718                           ; BSR set to: 1
 37719                           ;Persistence.c: 40: memset(&s_dacSettings.ChannelScaling, 0, sizeof(s_dacSettings.Channe
      +                          lScaling));
 37720  016E86  0102               	movlb	2	; () banked
 37721  016E88  0E02               	movlw	high (_s_dacSettings+3)
 37722  016E8A  0101               	movlb	1	; () banked
 37723  016E8C  6F01               	movwf	(memset@p1+1)& (0+255),b
 37724  016E8E  0102               	movlb	2	; () banked
 37725  016E90  0ED6               	movlw	low (_s_dacSettings+3)
 37726  016E92  0101               	movlb	1	; () banked
 37727  016E94  6F00               	movwf	memset@p1& (0+255),b
 37728  016E96  0E00               	movlw	0
 37729  016E98  0101               	movlb	1	; () banked
 37730  016E9A  6F03               	movwf	(memset@c+1)& (0+255),b
 37731  016E9C  0E00               	movlw	0
 37732  016E9E  0101               	movlb	1	; () banked
 37733  016EA0  6F02               	movwf	memset@c& (0+255),b
 37734  016EA2  0E00               	movlw	0
 37735  016EA4  0101               	movlb	1	; () banked
 37736  016EA6  6F05               	movwf	(memset@n+1)& (0+255),b
 37737  016EA8  0E10               	movlw	16
 37738  016EAA  0101               	movlb	1	; () banked
 37739  016EAC  6F04               	movwf	memset@n& (0+255),b
 37740  016EAE  ECD9  F0D9         	call	_memset	;wreg free
 37741                           
 37742                           ;Persistence.c: 41: s_dacSettings.Volume = 80;
 37743  016EB2  0E50               	movlw	80
 37744  016EB4  0102               	movlb	2	; () banked
 37745  016EB6  6FD5               	movwf	(_s_dacSettings+2)& (0+255),b
 37746                           
 37747                           ; BSR set to: 2
 37748                           ;Persistence.c: 42: s_dacSettings.SampleRate = 4;
 37749  016EB8  0E04               	movlw	4
 37750  016EBA  0102               	movlb	2	; () banked
 37751  016EBC  6FD4               	movwf	(_s_dacSettings+1)& (0+255),b
 37752                           
 37753                           ; BSR set to: 2
 37754                           ;Persistence.c: 43: s_dacSettings.Sequence= 0xFF;
 37755  016EBE  0102               	movlb	2	; () banked
 37756  016EC0  69D3               	setf	_s_dacSettings& (0+255),b
 37757                           
 37758                           ;Persistence.c: 45: while(addr < addrStop)
 37759  016EC2  D050               	goto	l15182
 37760  016EC4                     l15170:
 37761                           
 37762                           ;Persistence.c: 46: {
 37763                           ;Persistence.c: 47: ReadFlash(addr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_dacSet
      +                          tingsTmp);
 37764  016EC4  C11D  F100         	movff	RestoreFromFlash@addr,ReadFlash@startaddr
 37765  016EC8  C11E  F101         	movff	RestoreFromFlash@addr+1,ReadFlash@startaddr+1
 37766  016ECC  C11F  F102         	movff	RestoreFromFlash@addr+2,ReadFlash@startaddr+2
 37767  016ED0  C120  F103         	movff	RestoreFromFlash@addr+3,ReadFlash@startaddr+3
 37768  016ED4  0E00               	movlw	0
 37769  016ED6  0101               	movlb	1	; () banked
 37770  016ED8  6F05               	movwf	(ReadFlash@num_bytes+1)& (0+255),b
 37771  016EDA  0E14               	movlw	20
 37772  016EDC  0101               	movlb	1	; () banked
 37773  016EDE  6F04               	movwf	ReadFlash@num_bytes& (0+255),b
 37774  016EE0  0102               	movlb	2	; () banked
 37775  016EE2  0E02               	movlw	high _s_dacSettingsTmp
 37776  016EE4  0101               	movlb	1	; () banked
 37777  016EE6  6F07               	movwf	(ReadFlash@flash_array+1)& (0+255),b
 37778  016EE8  0102               	movlb	2	; () banked
 37779  016EEA  0EE7               	movlw	low _s_dacSettingsTmp
 37780  016EEC  0101               	movlb	1	; () banked
 37781  016EEE  6F06               	movwf	ReadFlash@flash_array& (0+255),b
 37782  016EF0  ECE2  F0D6         	call	_ReadFlash	;wreg free
 37783                           
 37784                           ;Persistence.c: 48: if (s_dacSettingsTmp.Sequence < s_dacSettings.Sequence)
 37785  016EF4  0102               	movlb	2	; () banked
 37786  016EF6  51D3               	movf	_s_dacSettings& (0+255),w,b
 37787  016EF8  0102               	movlb	2	; () banked
 37788  016EFA  5DE7               	subwf	_s_dacSettingsTmp& (0+255),w,b
 37789  016EFC  B0D8               	btfsc	status,0,c
 37790  016EFE  D028               	goto	l15180
 37791                           
 37792                           ; BSR set to: 2
 37793                           ;Persistence.c: 49: {
 37794                           ;Persistence.c: 50: uint8_t chSum = GetCheckSum((unsigned char *)&s_dacSettingsTmp, size
      +                          of(s_dacSettingsTmp) - 1);
 37795  016F00  0102               	movlb	2	; () banked
 37796  016F02  0E02               	movlw	high _s_dacSettingsTmp
 37797  016F04  0101               	movlb	1	; () banked
 37798  016F06  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 37799  016F08  0102               	movlb	2	; () banked
 37800  016F0A  0EE7               	movlw	low _s_dacSettingsTmp
 37801  016F0C  0101               	movlb	1	; () banked
 37802  016F0E  6F00               	movwf	GetCheckSum@data& (0+255),b
 37803  016F10  0E13               	movlw	19
 37804  016F12  0101               	movlb	1	; () banked
 37805  016F14  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 37806  016F16  EC23  F0D9         	call	_GetCheckSum	;wreg free
 37807  016F1A  0101               	movlb	1	; () banked
 37808  016F1C  6F1C               	movwf	RestoreFromFlash@chSum& (0+255),b
 37809                           
 37810                           ; BSR set to: 1
 37811                           ;Persistence.c: 51: if (s_dacSettingsTmp.CheckSum == chSum)
 37812  016F1E  0101               	movlb	1	; () banked
 37813  016F20  511C               	movf	RestoreFromFlash@chSum& (0+255),w,b
 37814  016F22  0102               	movlb	2	; () banked
 37815  016F24  EE22  F0FA         	lfsr	2,_s_dacSettingsTmp+19
 37816  016F28  62DF               	cpfseq	indf2,c
 37817  016F2A  D012               	goto	l15180
 37818                           
 37819                           ; BSR set to: 2
 37820                           ;Persistence.c: 52: {
 37821                           ;Persistence.c: 53: s_dacSettings = s_dacSettingsTmp;
 37822  016F2C  EE22  F0E7         	lfsr	2,_s_dacSettingsTmp
 37823  016F30  EE12  F0D3         	lfsr	1,_s_dacSettings
 37824  016F34  0E14               	movlw	20
 37825  016F36                     u17681:
 37826  016F36  CFDE FFE6          	movff	postinc2,postinc1
 37827  016F3A  2EE8               	decfsz	wreg,f,c
 37828  016F3C  D7FC               	goto	u17681
 37829                           
 37830                           ;Persistence.c: 54: s_dacSettingsOriginal = s_dacSettingsTmp;
 37831  016F3E  EE22  F0E7         	lfsr	2,_s_dacSettingsTmp
 37832  016F42  EE13  F000         	lfsr	1,_s_dacSettingsOriginal
 37833  016F46  0E14               	movlw	20
 37834  016F48                     u17691:
 37835  016F48  CFDE FFE6          	movff	postinc2,postinc1
 37836  016F4C  2EE8               	decfsz	wreg,f,c
 37837  016F4E  D7FC               	goto	u17691
 37838  016F50                     l15180:
 37839                           
 37840                           ; BSR set to: 2
 37841                           ;Persistence.c: 55: }
 37842                           ;Persistence.c: 56: }
 37843                           ;Persistence.c: 57: addr += 0x40;
 37844  016F50  0E40               	movlw	64
 37845  016F52  0101               	movlb	1	; () banked
 37846  016F54  271D               	addwf	RestoreFromFlash@addr& (0+255),f,b
 37847  016F56  0E00               	movlw	0
 37848  016F58  0101               	movlb	1	; () banked
 37849  016F5A  231E               	addwfc	(RestoreFromFlash@addr+1)& (0+255),f,b
 37850  016F5C  0101               	movlb	1	; () banked
 37851  016F5E  231F               	addwfc	(RestoreFromFlash@addr+2)& (0+255),f,b
 37852  016F60  0101               	movlb	1	; () banked
 37853  016F62  2320               	addwfc	(RestoreFromFlash@addr+3)& (0+255),f,b
 37854  016F64                     l15182:
 37855  016F64  0101               	movlb	1	; () banked
 37856  016F66  5118               	movf	RestoreFromFlash@addrStop& (0+255),w,b
 37857  016F68  0101               	movlb	1	; () banked
 37858  016F6A  5D1D               	subwf	RestoreFromFlash@addr& (0+255),w,b
 37859  016F6C  0101               	movlb	1	; () banked
 37860  016F6E  5119               	movf	(RestoreFromFlash@addrStop+1)& (0+255),w,b
 37861  016F70  0101               	movlb	1	; () banked
 37862  016F72  591E               	subwfb	(RestoreFromFlash@addr+1)& (0+255),w,b
 37863  016F74  0101               	movlb	1	; () banked
 37864  016F76  511A               	movf	(RestoreFromFlash@addrStop+2)& (0+255),w,b
 37865  016F78  0101               	movlb	1	; () banked
 37866  016F7A  591F               	subwfb	(RestoreFromFlash@addr+2)& (0+255),w,b
 37867  016F7C  0101               	movlb	1	; () banked
 37868  016F7E  511B               	movf	(RestoreFromFlash@addrStop+3)& (0+255),w,b
 37869  016F80  0101               	movlb	1	; () banked
 37870  016F82  5920               	subwfb	(RestoreFromFlash@addr+3)& (0+255),w,b
 37871  016F84  B0D8               	btfsc	status,0,c
 37872                           
 37873                           ; BSR set to: 1
 37874                           
 37875                           ; BSR set to: 1
 37876  016F86  0012               	return	
 37877  016F88  D79D               	goto	l15170
 37878  016F8A                     __end_of_RestoreFromFlash:
 37879                           	opt stack 0
 37880                           tblptru	equ	0xFF8
 37881                           tblptrh	equ	0xFF7
 37882                           tblptrl	equ	0xFF6
 37883                           tablat	equ	0xFF5
 37884                           prodh	equ	0xFF4
 37885                           prodl	equ	0xFF3
 37886                           intcon	equ	0xFF2
 37887                           indf0	equ	0xFEF
 37888                           postinc0	equ	0xFEE
 37889                           fsr0h	equ	0xFEA
 37890                           fsr0l	equ	0xFE9
 37891                           wreg	equ	0xFE8
 37892                           indf1	equ	0xFE7
 37893                           postinc1	equ	0xFE6
 37894                           postdec1	equ	0xFE5
 37895                           fsr1h	equ	0xFE2
 37896                           fsr1l	equ	0xFE1
 37897                           indf2	equ	0xFDF
 37898                           postinc2	equ	0xFDE
 37899                           postdec2	equ	0xFDD
 37900                           fsr2h	equ	0xFDA
 37901                           fsr2l	equ	0xFD9
 37902                           status	equ	0xFD8
 37903                           
 37904 ;; *************** function _ReadFlash *****************
 37905 ;; Defined at:
 37906 ;;		line 23 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\ReadFlash.c"
 37907 ;; Parameters:    Size  Location     Type
 37908 ;;  startaddr       4    0[BANK1 ] unsigned long 
 37909 ;;  num_bytes       2    4[BANK1 ] unsigned int 
 37910 ;;  flash_array     2    6[BANK1 ] PTR unsigned char 
 37911 ;;		 -> s_dacSettingsTmp(20), 
 37912 ;; Auto vars:     Size  Location     Type
 37913 ;;  tblptr_save     4   12[BANK1 ] struct .
 37914 ;;  flash_addr      4    8[BANK1 ] struct .
 37915 ;; Return value:  Size  Location     Type
 37916 ;;		None               void
 37917 ;; Registers used:
 37918 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37919 ;; Tracked objects:
 37920 ;;		On entry : 0/0
 37921 ;;		On exit  : 0/0
 37922 ;;		Unchanged: 0/0
 37923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37924 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37925 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37927 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37928 ;;Total ram usage:       16 bytes
 37929 ;; Hardware stack levels used:    1
 37930 ;; Hardware stack levels required when called:   10
 37931 ;; This function calls:
 37932 ;;		Nothing
 37933 ;; This function is called by:
 37934 ;;		_RestoreFromFlash
 37935 ;;		_FindEmpty
 37936 ;;		_SaveToFlash
 37937 ;; This function uses a non-reentrant model
 37938 ;;
 37939                           
 37940                           	psect	text81
 37941  01ADC4                     __ptext81:
 37942                           	opt stack 0
 37943  01ADC4                     _ReadFlash:
 37944                           	opt stack 17
 37945                           
 37946                           ; BSR set to: 1
 37947                           ;incstack = 0
 37948  01ADC4  C100  F108         	movff	ReadFlash@startaddr,ReadFlash@flash_addr
 37949  01ADC8  C101  F109         	movff	ReadFlash@startaddr+1,ReadFlash@flash_addr+1
 37950  01ADCC  C102  F10A         	movff	ReadFlash@startaddr+2,ReadFlash@flash_addr+2
 37951  01ADD0  C103  F10B         	movff	ReadFlash@startaddr+3,ReadFlash@flash_addr+3
 37952  01ADD4  CFF8 F10E          	movff	tblptru,ReadFlash@tblptr_save+2	;volatile
 37953  01ADD8  CFF7 F10D          	movff	tblptrh,ReadFlash@tblptr_save+1	;volatile
 37954  01ADDC  CFF6 F10C          	movff	tblptrl,ReadFlash@tblptr_save	;volatile
 37955  01ADE0  C10A  FFF8         	movff	ReadFlash@flash_addr+2,tblptru	;volatile
 37956  01ADE4  C109  FFF7         	movff	ReadFlash@flash_addr+1,tblptrh	;volatile
 37957  01ADE8  C108  FFF6         	movff	ReadFlash@flash_addr,tblptrl	;volatile
 37958  01ADEC  D00A               	goto	l11970
 37959  01ADEE                     l2129:
 37960                           
 37961                           ; BSR set to: 1
 37962  01ADEE  0009               	tblrd		*+	;# 
 37963  01ADF0  C106  FFD9         	movff	ReadFlash@flash_array,fsr2l
 37964  01ADF4  C107  FFDA         	movff	ReadFlash@flash_array+1,fsr2h
 37965  01ADF8  CFF5 FFDF          	movff	tablat,indf2	;volatile
 37966  01ADFC  0101               	movlb	1	; () banked
 37967  01ADFE  4B06               	infsnz	ReadFlash@flash_array& (0+255),f,b
 37968  01AE00  2B07               	incf	(ReadFlash@flash_array+1)& (0+255),f,b
 37969  01AE02                     l11970:
 37970  01AE02  0101               	movlb	1	; () banked
 37971  01AE04  0704               	decf	ReadFlash@num_bytes& (0+255),f,b
 37972  01AE06  A0D8               	btfss	status,0,c
 37973  01AE08  0705               	decf	(ReadFlash@num_bytes+1)& (0+255),f,b
 37974  01AE0A  0101               	movlb	1	; () banked
 37975  01AE0C  2904               	incf	ReadFlash@num_bytes& (0+255),w,b
 37976  01AE0E  B4D8               	btfsc	status,2,c
 37977  01AE10  2905               	incf	(ReadFlash@num_bytes+1)& (0+255),w,b
 37978  01AE12  A4D8               	btfss	status,2,c
 37979  01AE14  D7EC               	goto	l2129
 37980                           
 37981                           ; BSR set to: 1
 37982  01AE16  C10E  FFF8         	movff	ReadFlash@tblptr_save+2,tblptru	;volatile
 37983  01AE1A  C10D  FFF7         	movff	ReadFlash@tblptr_save+1,tblptrh	;volatile
 37984  01AE1E  C10C  FFF6         	movff	ReadFlash@tblptr_save,tblptrl	;volatile
 37985                           
 37986                           ; BSR set to: 1
 37987  01AE22  0012               	return	
 37988  01AE24                     __end_of_ReadFlash:
 37989                           	opt stack 0
 37990                           tblptru	equ	0xFF8
 37991                           tblptrh	equ	0xFF7
 37992                           tblptrl	equ	0xFF6
 37993                           tablat	equ	0xFF5
 37994                           prodh	equ	0xFF4
 37995                           prodl	equ	0xFF3
 37996                           intcon	equ	0xFF2
 37997                           indf0	equ	0xFEF
 37998                           postinc0	equ	0xFEE
 37999                           fsr0h	equ	0xFEA
 38000                           fsr0l	equ	0xFE9
 38001                           wreg	equ	0xFE8
 38002                           indf1	equ	0xFE7
 38003                           postinc1	equ	0xFE6
 38004                           postdec1	equ	0xFE5
 38005                           fsr1h	equ	0xFE2
 38006                           fsr1l	equ	0xFE1
 38007                           indf2	equ	0xFDF
 38008                           postinc2	equ	0xFDE
 38009                           postdec2	equ	0xFDD
 38010                           fsr2h	equ	0xFDA
 38011                           fsr2l	equ	0xFD9
 38012                           status	equ	0xFD8
 38013                           
 38014 ;; *************** function _GetCheckSum *****************
 38015 ;; Defined at:
 38016 ;;		line 122 in file "Persistence.c"
 38017 ;; Parameters:    Size  Location     Type
 38018 ;;  data            2    0[BANK1 ] PTR unsigned char 
 38019 ;;		 -> s_dacSettingsTmp(20), TCPServer@cmdBytes(18), s_dacSettings(20), 
 38020 ;;  dataLen         1    2[BANK1 ] unsigned char 
 38021 ;; Auto vars:     Size  Location     Type
 38022 ;;  i               1    4[BANK1 ] unsigned char 
 38023 ;;  res             1    3[BANK1 ] unsigned char 
 38024 ;; Return value:  Size  Location     Type
 38025 ;;                  1    wreg      unsigned char 
 38026 ;; Registers used:
 38027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38028 ;; Tracked objects:
 38029 ;;		On entry : 0/0
 38030 ;;		On exit  : 0/0
 38031 ;;		Unchanged: 0/0
 38032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38033 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38034 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38036 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38037 ;;Total ram usage:        5 bytes
 38038 ;; Hardware stack levels used:    1
 38039 ;; Hardware stack levels required when called:   10
 38040 ;; This function calls:
 38041 ;;		Nothing
 38042 ;; This function is called by:
 38043 ;;		_TCPServer
 38044 ;;		_RestoreFromFlash
 38045 ;;		_SaveToFlash
 38046 ;; This function uses a non-reentrant model
 38047 ;;
 38048                           
 38049                           	psect	text82
 38050  01B246                     __ptext82:
 38051                           	opt stack 0
 38052  01B246                     _GetCheckSum:
 38053                           	opt stack 17
 38054                           
 38055                           ;Persistence.c: 124: uint8_t res = (*data) ^ 0xFF;
 38056                           
 38057                           ; BSR set to: 1
 38058                           ;incstack = 0
 38059  01B246  C100  FFD9         	movff	GetCheckSum@data,fsr2l
 38060  01B24A  C101  FFDA         	movff	GetCheckSum@data+1,fsr2h
 38061  01B24E  50DF               	movf	indf2,w,c
 38062  01B250  0AFF               	xorlw	255
 38063  01B252  0101               	movlb	1	; () banked
 38064  01B254  6F03               	movwf	GetCheckSum@res& (0+255),b
 38065                           
 38066                           ; BSR set to: 1
 38067                           ;Persistence.c: 125: for(uint8_t i = 1; i < dataLen; i ++)
 38068  01B256  0E01               	movlw	1
 38069  01B258  0101               	movlb	1	; () banked
 38070  01B25A  6F04               	movwf	GetCheckSum@i& (0+255),b
 38071  01B25C  D00C               	goto	l13238
 38072  01B25E                     l13232:
 38073                           
 38074                           ; BSR set to: 1
 38075                           ;Persistence.c: 126: {
 38076                           ;Persistence.c: 127: data ++;
 38077  01B25E  0101               	movlb	1	; () banked
 38078  01B260  4B00               	infsnz	GetCheckSum@data& (0+255),f,b
 38079  01B262  2B01               	incf	(GetCheckSum@data+1)& (0+255),f,b
 38080                           
 38081                           ; BSR set to: 1
 38082                           ;Persistence.c: 128: res += *data;
 38083  01B264  C100  FFD9         	movff	GetCheckSum@data,fsr2l
 38084  01B268  C101  FFDA         	movff	GetCheckSum@data+1,fsr2h
 38085  01B26C  50DF               	movf	indf2,w,c
 38086  01B26E  0101               	movlb	1	; () banked
 38087  01B270  2703               	addwf	GetCheckSum@res& (0+255),f,b
 38088                           
 38089                           ; BSR set to: 1
 38090  01B272  0101               	movlb	1	; () banked
 38091  01B274  2B04               	incf	GetCheckSum@i& (0+255),f,b
 38092  01B276                     l13238:
 38093                           
 38094                           ; BSR set to: 1
 38095  01B276  0101               	movlb	1	; () banked
 38096  01B278  5102               	movf	GetCheckSum@dataLen& (0+255),w,b
 38097  01B27A  0101               	movlb	1	; () banked
 38098  01B27C  5D04               	subwf	GetCheckSum@i& (0+255),w,b
 38099  01B27E  A0D8               	btfss	status,0,c
 38100  01B280  D7EE               	goto	l13232
 38101                           
 38102                           ; BSR set to: 1
 38103                           ;Persistence.c: 129: }
 38104                           ;Persistence.c: 130: return res;
 38105                           
 38106                           ; BSR set to: 1
 38107  01B282  0101               	movlb	1	; () banked
 38108  01B284  5103               	movf	GetCheckSum@res& (0+255),w,b
 38109  01B286  0012               	return	
 38110  01B288                     __end_of_GetCheckSum:
 38111                           	opt stack 0
 38112                           tblptru	equ	0xFF8
 38113                           tblptrh	equ	0xFF7
 38114                           tblptrl	equ	0xFF6
 38115                           tablat	equ	0xFF5
 38116                           prodh	equ	0xFF4
 38117                           prodl	equ	0xFF3
 38118                           intcon	equ	0xFF2
 38119                           indf0	equ	0xFEF
 38120                           postinc0	equ	0xFEE
 38121                           fsr0h	equ	0xFEA
 38122                           fsr0l	equ	0xFE9
 38123                           wreg	equ	0xFE8
 38124                           indf1	equ	0xFE7
 38125                           postinc1	equ	0xFE6
 38126                           postdec1	equ	0xFE5
 38127                           fsr1h	equ	0xFE2
 38128                           fsr1l	equ	0xFE1
 38129                           indf2	equ	0xFDF
 38130                           postinc2	equ	0xFDE
 38131                           postdec2	equ	0xFDD
 38132                           fsr2h	equ	0xFDA
 38133                           fsr2l	equ	0xFD9
 38134                           status	equ	0xFD8
 38135                           
 38136 ;; *************** function _OpenSLCD *****************
 38137 ;; Defined at:
 38138 ;;		line 19 in file "SLCD/openslcd.c"
 38139 ;; Parameters:    Size  Location     Type
 38140 ;;  lcdtype         1    wreg     unsigned char 
 38141 ;; Auto vars:     Size  Location     Type
 38142 ;;  lcdtype         1    2[BANK1 ] unsigned char 
 38143 ;; Return value:  Size  Location     Type
 38144 ;;		None               void
 38145 ;; Registers used:
 38146 ;;		wreg, status,2, status,0, cstack
 38147 ;; Tracked objects:
 38148 ;;		On entry : 0/0
 38149 ;;		On exit  : 0/0
 38150 ;;		Unchanged: 0/0
 38151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38153 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38155 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38156 ;;Total ram usage:        1 bytes
 38157 ;; Hardware stack levels used:    1
 38158 ;; Hardware stack levels required when called:   13
 38159 ;; This function calls:
 38160 ;;		_BusySLCD
 38161 ;;		_Delay10KTCYx
 38162 ;;		_DelayPORSLCD
 38163 ;;		_SLCDSetDDRamAddr
 38164 ;;		_WriteCmdSLCD
 38165 ;; This function is called by:
 38166 ;;		_main
 38167 ;; This function uses a non-reentrant model
 38168 ;;
 38169                           
 38170                           	psect	text83
 38171  01A588                     __ptext83:
 38172                           	opt stack 0
 38173  01A588                     _OpenSLCD:
 38174                           	opt stack 16
 38175                           
 38176                           ; BSR set to: 1
 38177                           ;incstack = 0
 38178                           ;OpenSLCD@lcdtype stored from wreg
 38179  01A588  0101               	movlb	1	; () banked
 38180  01A58A  6F02               	movwf	OpenSLCD@lcdtype& (0+255),b
 38181                           
 38182                           ; BSR set to: 1
 38183                           ;openslcd.c: 24: LATC = 0;
 38184  01A58C  0E00               	movlw	0
 38185  01A58E  6E8B               	movwf	3979,c	;volatile
 38186                           
 38187                           ;openslcd.c: 25: TRISC = 0x00;
 38188  01A590  0E00               	movlw	0
 38189  01A592  6E94               	movwf	3988,c	;volatile
 38190                           
 38191                           ; BSR set to: 1
 38192                           ;openslcd.c: 35: TRISAbits.TRISA4 = 0;
 38193  01A594  9892               	bcf	3986,4,c	;volatile
 38194                           
 38195                           ; BSR set to: 1
 38196                           ;openslcd.c: 36: TRISAbits.TRISA3 = 0;
 38197  01A596  9692               	bcf	3986,3,c	;volatile
 38198                           
 38199                           ; BSR set to: 1
 38200                           ;openslcd.c: 37: TRISAbits.TRISA5 = 0;
 38201  01A598  9A92               	bcf	3986,5,c	;volatile
 38202                           
 38203                           ; BSR set to: 1
 38204                           ;openslcd.c: 38: LATAbits.LATA4 = 0;
 38205  01A59A  9889               	bcf	3977,4,c	;volatile
 38206                           
 38207                           ; BSR set to: 1
 38208                           ;openslcd.c: 39: LATAbits.LATA3 = 0;
 38209  01A59C  9689               	bcf	3977,3,c	;volatile
 38210                           
 38211                           ; BSR set to: 1
 38212                           ;openslcd.c: 40: LATAbits.LATA5 = 0;
 38213  01A59E  9A89               	bcf	3977,5,c	;volatile
 38214                           
 38215                           ; BSR set to: 1
 38216                           ;openslcd.c: 43: DelayPORSLCD();
 38217  01A5A0  EC39  F0DD         	call	_DelayPORSLCD	;wreg free
 38218                           
 38219                           ;openslcd.c: 45: WriteCmdSLCD(0x30);
 38220  01A5A4  0E30               	movlw	48
 38221  01A5A6  ECA9  F0DB         	call	_WriteCmdSLCD
 38222                           
 38223                           ;openslcd.c: 46: Delay10KTCYx(0x05);
 38224  01A5AA  0E05               	movlw	5
 38225  01A5AC  EC5F  F0DC         	call	_Delay10KTCYx
 38226                           
 38227                           ;openslcd.c: 48: WriteCmdSLCD(0x30);
 38228  01A5B0  0E30               	movlw	48
 38229  01A5B2  ECA9  F0DB         	call	_WriteCmdSLCD
 38230                           
 38231                           ;openslcd.c: 49: Delay10KTCYx(0x01);
 38232  01A5B6  0E01               	movlw	1
 38233  01A5B8  EC5F  F0DC         	call	_Delay10KTCYx
 38234                           
 38235                           ;openslcd.c: 52: WriteCmdSLCD(0x32);
 38236  01A5BC  0E32               	movlw	50
 38237  01A5BE  ECA9  F0DB         	call	_WriteCmdSLCD
 38238  01A5C2                     l14684:
 38239  01A5C2  ECEF  F0DB         	call	_BusySLCD	;wreg free
 38240  01A5C6  0900               	iorlw	0
 38241  01A5C8  A4D8               	btfss	status,2,c
 38242  01A5CA  D7FB               	goto	l14684
 38243                           
 38244                           ;openslcd.c: 58: WriteCmdSLCD(lcdtype);
 38245  01A5CC  0101               	movlb	1	; () banked
 38246  01A5CE  5102               	movf	OpenSLCD@lcdtype& (0+255),w,b
 38247  01A5D0  ECA9  F0DB         	call	_WriteCmdSLCD
 38248  01A5D4                     l14688:
 38249  01A5D4  ECEF  F0DB         	call	_BusySLCD	;wreg free
 38250  01A5D8  0900               	iorlw	0
 38251  01A5DA  A4D8               	btfss	status,2,c
 38252  01A5DC  D7FB               	goto	l14688
 38253                           
 38254                           ;openslcd.c: 62: WriteCmdSLCD(0b00001011&0b00001101&0b00001110);
 38255  01A5DE  0E08               	movlw	8
 38256  01A5E0  ECA9  F0DB         	call	_WriteCmdSLCD
 38257  01A5E4                     l14692:
 38258  01A5E4  ECEF  F0DB         	call	_BusySLCD	;wreg free
 38259  01A5E8  0900               	iorlw	0
 38260  01A5EA  A4D8               	btfss	status,2,c
 38261  01A5EC  D7FB               	goto	l14692
 38262                           
 38263                           ;openslcd.c: 64: WriteCmdSLCD(0b00001111&0b00001111&0b00001111);
 38264  01A5EE  0E0F               	movlw	15
 38265  01A5F0  ECA9  F0DB         	call	_WriteCmdSLCD
 38266  01A5F4                     l14696:
 38267  01A5F4  ECEF  F0DB         	call	_BusySLCD	;wreg free
 38268  01A5F8  0900               	iorlw	0
 38269  01A5FA  A4D8               	btfss	status,2,c
 38270  01A5FC  D7FB               	goto	l14696
 38271                           
 38272                           ;openslcd.c: 68: WriteCmdSLCD(0x01);
 38273  01A5FE  0E01               	movlw	1
 38274  01A600  ECA9  F0DB         	call	_WriteCmdSLCD
 38275  01A604                     l14700:
 38276  01A604  ECEF  F0DB         	call	_BusySLCD	;wreg free
 38277  01A608  0900               	iorlw	0
 38278  01A60A  A4D8               	btfss	status,2,c
 38279  01A60C  D7FB               	goto	l14700
 38280                           
 38281                           ;openslcd.c: 72: WriteCmdSLCD(0b00000110);
 38282  01A60E  0E06               	movlw	6
 38283  01A610  ECA9  F0DB         	call	_WriteCmdSLCD
 38284                           
 38285                           ;openslcd.c: 75: SLCDSetDDRamAddr(0x00);
 38286  01A614  0E00               	movlw	0
 38287  01A616  EC7B  F0DC         	call	_SLCDSetDDRamAddr
 38288  01A61A  0012               	return	
 38289  01A61C                     __end_of_OpenSLCD:
 38290                           	opt stack 0
 38291                           tblptru	equ	0xFF8
 38292                           tblptrh	equ	0xFF7
 38293                           tblptrl	equ	0xFF6
 38294                           tablat	equ	0xFF5
 38295                           prodh	equ	0xFF4
 38296                           prodl	equ	0xFF3
 38297                           intcon	equ	0xFF2
 38298                           indf0	equ	0xFEF
 38299                           postinc0	equ	0xFEE
 38300                           fsr0h	equ	0xFEA
 38301                           fsr0l	equ	0xFE9
 38302                           wreg	equ	0xFE8
 38303                           indf1	equ	0xFE7
 38304                           postinc1	equ	0xFE6
 38305                           postdec1	equ	0xFE5
 38306                           fsr1h	equ	0xFE2
 38307                           fsr1l	equ	0xFE1
 38308                           indf2	equ	0xFDF
 38309                           postinc2	equ	0xFDE
 38310                           postdec2	equ	0xFDD
 38311                           fsr2h	equ	0xFDA
 38312                           fsr2l	equ	0xFD9
 38313                           status	equ	0xFD8
 38314                           
 38315 ;; *************** function _SLCDSetDDRamAddr *****************
 38316 ;; Defined at:
 38317 ;;		line 13 in file "SLCD/setddram.c"
 38318 ;; Parameters:    Size  Location     Type
 38319 ;;  DDaddr          1    wreg     unsigned char 
 38320 ;; Auto vars:     Size  Location     Type
 38321 ;;  DDaddr          1    1[BANK1 ] unsigned char 
 38322 ;; Return value:  Size  Location     Type
 38323 ;;		None               void
 38324 ;; Registers used:
 38325 ;;		wreg, status,2, status,0, cstack
 38326 ;; Tracked objects:
 38327 ;;		On entry : 0/0
 38328 ;;		On exit  : 0/0
 38329 ;;		Unchanged: 0/0
 38330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38332 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38334 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38335 ;;Total ram usage:        1 bytes
 38336 ;; Hardware stack levels used:    1
 38337 ;; Hardware stack levels required when called:   12
 38338 ;; This function calls:
 38339 ;;		_BusySLCD
 38340 ;;		_WriteCmdSLCD
 38341 ;; This function is called by:
 38342 ;;		_OpenSLCD
 38343 ;;		_RefreshLine1Ex
 38344 ;;		_RefreshLine2Ex
 38345 ;; This function uses a non-reentrant model
 38346 ;;
 38347                           
 38348                           	psect	text84
 38349  01B8F6                     __ptext84:
 38350                           	opt stack 0
 38351  01B8F6                     _SLCDSetDDRamAddr:
 38352                           	opt stack 15
 38353                           
 38354                           ;incstack = 0
 38355                           ;SLCDSetDDRamAddr@DDaddr stored from wreg
 38356  01B8F6  0101               	movlb	1	; () banked
 38357  01B8F8  6F01               	movwf	SLCDSetDDRamAddr@DDaddr& (0+255),b
 38358  01B8FA                     l10812:
 38359  01B8FA  ECEF  F0DB         	call	_BusySLCD	;wreg free
 38360  01B8FE  0900               	iorlw	0
 38361  01B900  A4D8               	btfss	status,2,c
 38362  01B902  D7FB               	goto	l10812
 38363                           
 38364                           ;setddram.c: 16: WriteCmdSLCD(DDaddr | 0b10000000);
 38365  01B904  0101               	movlb	1	; () banked
 38366  01B906  5101               	movf	SLCDSetDDRamAddr@DDaddr& (0+255),w,b
 38367  01B908  0980               	iorlw	128
 38368  01B90A  ECA9  F0DB         	call	_WriteCmdSLCD
 38369  01B90E  0012               	return	
 38370  01B910                     __end_of_SLCDSetDDRamAddr:
 38371                           	opt stack 0
 38372                           tblptru	equ	0xFF8
 38373                           tblptrh	equ	0xFF7
 38374                           tblptrl	equ	0xFF6
 38375                           tablat	equ	0xFF5
 38376                           prodh	equ	0xFF4
 38377                           prodl	equ	0xFF3
 38378                           intcon	equ	0xFF2
 38379                           indf0	equ	0xFEF
 38380                           postinc0	equ	0xFEE
 38381                           fsr0h	equ	0xFEA
 38382                           fsr0l	equ	0xFE9
 38383                           wreg	equ	0xFE8
 38384                           indf1	equ	0xFE7
 38385                           postinc1	equ	0xFE6
 38386                           postdec1	equ	0xFE5
 38387                           fsr1h	equ	0xFE2
 38388                           fsr1l	equ	0xFE1
 38389                           indf2	equ	0xFDF
 38390                           postinc2	equ	0xFDE
 38391                           postdec2	equ	0xFDD
 38392                           fsr2h	equ	0xFDA
 38393                           fsr2l	equ	0xFD9
 38394                           status	equ	0xFD8
 38395                           
 38396 ;; *************** function _WriteCmdSLCD *****************
 38397 ;; Defined at:
 38398 ;;		line 13 in file "SLCD/wcmdslcd.c"
 38399 ;; Parameters:    Size  Location     Type
 38400 ;;  cmd             1    wreg     unsigned char 
 38401 ;; Auto vars:     Size  Location     Type
 38402 ;;  cmd             1    0[BANK1 ] unsigned char 
 38403 ;; Return value:  Size  Location     Type
 38404 ;;		None               void
 38405 ;; Registers used:
 38406 ;;		wreg, status,2, cstack
 38407 ;; Tracked objects:
 38408 ;;		On entry : 0/0
 38409 ;;		On exit  : 0/0
 38410 ;;		Unchanged: 0/0
 38411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38413 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38415 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38416 ;;Total ram usage:        1 bytes
 38417 ;; Hardware stack levels used:    1
 38418 ;; Hardware stack levels required when called:   11
 38419 ;; This function calls:
 38420 ;;		_DelayFor18TCY
 38421 ;; This function is called by:
 38422 ;;		_SLCDSetDDRamAddr
 38423 ;;		_OpenSLCD
 38424 ;;		_main
 38425 ;; This function uses a non-reentrant model
 38426 ;;
 38427                           
 38428                           	psect	text85
 38429  01B752                     __ptext85:
 38430                           	opt stack 0
 38431  01B752                     _WriteCmdSLCD:
 38432                           	opt stack 18
 38433                           
 38434                           ;incstack = 0
 38435                           ;WriteCmdSLCD@cmd stored from wreg
 38436  01B752  0101               	movlb	1	; () banked
 38437  01B754  6F00               	movwf	WriteCmdSLCD@cmd& (0+255),b
 38438                           
 38439                           ; BSR set to: 1
 38440                           ;wcmdslcd.c: 16: TRISC = 0;
 38441  01B756  0E00               	movlw	0
 38442  01B758  6E94               	movwf	3988,c	;volatile
 38443                           
 38444                           ; BSR set to: 1
 38445                           ;wcmdslcd.c: 17: LATC = cmd;
 38446  01B75A  C100  FF8B         	movff	WriteCmdSLCD@cmd,3979	;volatile
 38447                           
 38448                           ; BSR set to: 1
 38449                           ;wcmdslcd.c: 19: LATAbits.LATA4 = 0;
 38450  01B75E  9889               	bcf	3977,4,c	;volatile
 38451                           
 38452                           ; BSR set to: 1
 38453                           ;wcmdslcd.c: 20: LATAbits.LATA3 = 0;
 38454  01B760  9689               	bcf	3977,3,c	;volatile
 38455                           
 38456                           ; BSR set to: 1
 38457                           ;wcmdslcd.c: 21: DelayFor18TCY();
 38458  01B762  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 38459                           
 38460                           ;wcmdslcd.c: 22: LATAbits.LATA5 = 1;
 38461  01B766  8A89               	bsf	3977,5,c	;volatile
 38462                           
 38463                           ;wcmdslcd.c: 23: DelayFor18TCY();
 38464  01B768  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 38465                           
 38466                           ;wcmdslcd.c: 24: LATAbits.LATA5 = 0;
 38467  01B76C  9A89               	bcf	3977,5,c	;volatile
 38468                           
 38469                           ;wcmdslcd.c: 25: DelayFor18TCY();
 38470  01B76E  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 38471                           
 38472                           ;wcmdslcd.c: 26: TRISC = 0xff;
 38473  01B772  6894               	setf	3988,c	;volatile
 38474  01B774  0012               	return	
 38475  01B776                     __end_of_WriteCmdSLCD:
 38476                           	opt stack 0
 38477                           tblptru	equ	0xFF8
 38478                           tblptrh	equ	0xFF7
 38479                           tblptrl	equ	0xFF6
 38480                           tablat	equ	0xFF5
 38481                           prodh	equ	0xFF4
 38482                           prodl	equ	0xFF3
 38483                           intcon	equ	0xFF2
 38484                           indf0	equ	0xFEF
 38485                           postinc0	equ	0xFEE
 38486                           fsr0h	equ	0xFEA
 38487                           fsr0l	equ	0xFE9
 38488                           wreg	equ	0xFE8
 38489                           indf1	equ	0xFE7
 38490                           postinc1	equ	0xFE6
 38491                           postdec1	equ	0xFE5
 38492                           fsr1h	equ	0xFE2
 38493                           fsr1l	equ	0xFE1
 38494                           indf2	equ	0xFDF
 38495                           postinc2	equ	0xFDE
 38496                           postdec2	equ	0xFDD
 38497                           fsr2h	equ	0xFDA
 38498                           fsr2l	equ	0xFD9
 38499                           status	equ	0xFD8
 38500                           
 38501 ;; *************** function _BusySLCD *****************
 38502 ;; Defined at:
 38503 ;;		line 11 in file "SLCD/busyslcd.c"
 38504 ;; Parameters:    Size  Location     Type
 38505 ;;		None
 38506 ;; Auto vars:     Size  Location     Type
 38507 ;;		None
 38508 ;; Return value:  Size  Location     Type
 38509 ;;                  1    wreg      unsigned char 
 38510 ;; Registers used:
 38511 ;;		wreg, cstack
 38512 ;; Tracked objects:
 38513 ;;		On entry : 0/0
 38514 ;;		On exit  : 0/0
 38515 ;;		Unchanged: 0/0
 38516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38521 ;;Total ram usage:        0 bytes
 38522 ;; Hardware stack levels used:    1
 38523 ;; Hardware stack levels required when called:   11
 38524 ;; This function calls:
 38525 ;;		_DelayFor18TCY
 38526 ;; This function is called by:
 38527 ;;		_SLCDSetDDRamAddr
 38528 ;;		_OpenSLCD
 38529 ;;		_PutsSLCD
 38530 ;;		_main
 38531 ;;		_PutrsSLCD
 38532 ;; This function uses a non-reentrant model
 38533 ;;
 38534                           
 38535                           	psect	text86
 38536  01B7DE                     __ptext86:
 38537                           	opt stack 0
 38538  01B7DE                     _BusySLCD:
 38539                           	opt stack 15
 38540                           
 38541                           ;busyslcd.c: 13: LATAbits.LATA4 = 1;
 38542                           
 38543                           ;incstack = 0
 38544  01B7DE  8889               	bsf	3977,4,c	;volatile
 38545                           
 38546                           ;busyslcd.c: 14: LATAbits.LATA3 = 0;
 38547  01B7E0  9689               	bcf	3977,3,c	;volatile
 38548                           
 38549                           ;busyslcd.c: 15: DelayFor18TCY();
 38550  01B7E2  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 38551                           
 38552                           ;busyslcd.c: 16: LATAbits.LATA5 = 1;
 38553  01B7E6  8A89               	bsf	3977,5,c	;volatile
 38554                           
 38555                           ;busyslcd.c: 17: DelayFor18TCY();
 38556  01B7E8  EC92  F0DA         	call	_DelayFor18TCY	;wreg free
 38557                           
 38558                           ;busyslcd.c: 19: if(PORTC&0x80)
 38559  01B7EC  AE82               	btfss	3970,7,c	;volatile
 38560  01B7EE  D004               	goto	l59
 38561                           
 38562                           ;busyslcd.c: 20: {
 38563                           ;busyslcd.c: 21: LATAbits.LATA5 = 0;
 38564  01B7F0  9A89               	bcf	3977,5,c	;volatile
 38565                           
 38566                           ;busyslcd.c: 22: LATAbits.LATA4 = 0;
 38567  01B7F2  9889               	bcf	3977,4,c	;volatile
 38568                           
 38569                           ;busyslcd.c: 23: return 1;
 38570  01B7F4  0E01               	movlw	1
 38571  01B7F6  0012               	return	
 38572  01B7F8                     l59:
 38573                           
 38574                           ;busyslcd.c: 25: else
 38575                           ;busyslcd.c: 26: {
 38576                           ;busyslcd.c: 27: LATAbits.LATA5 = 0;
 38577  01B7F8  9A89               	bcf	3977,5,c	;volatile
 38578                           
 38579                           ;busyslcd.c: 28: LATAbits.LATA4 = 0;
 38580  01B7FA  9889               	bcf	3977,4,c	;volatile
 38581                           
 38582                           ;busyslcd.c: 29: return 0;
 38583  01B7FC  0E00               	movlw	0
 38584  01B7FE  0012               	return	
 38585  01B800                     __end_of_BusySLCD:
 38586                           	opt stack 0
 38587                           tblptru	equ	0xFF8
 38588                           tblptrh	equ	0xFF7
 38589                           tblptrl	equ	0xFF6
 38590                           tablat	equ	0xFF5
 38591                           prodh	equ	0xFF4
 38592                           prodl	equ	0xFF3
 38593                           intcon	equ	0xFF2
 38594                           indf0	equ	0xFEF
 38595                           postinc0	equ	0xFEE
 38596                           fsr0h	equ	0xFEA
 38597                           fsr0l	equ	0xFE9
 38598                           wreg	equ	0xFE8
 38599                           indf1	equ	0xFE7
 38600                           postinc1	equ	0xFE6
 38601                           postdec1	equ	0xFE5
 38602                           fsr1h	equ	0xFE2
 38603                           fsr1l	equ	0xFE1
 38604                           indf2	equ	0xFDF
 38605                           postinc2	equ	0xFDE
 38606                           postdec2	equ	0xFDD
 38607                           fsr2h	equ	0xFDA
 38608                           fsr2l	equ	0xFD9
 38609                           status	equ	0xFD8
 38610                           
 38611 ;; *************** function _DelayFor18TCY *****************
 38612 ;; Defined at:
 38613 ;;		line 16 in file "LCDDelay.c"
 38614 ;; Parameters:    Size  Location     Type
 38615 ;;		None
 38616 ;; Auto vars:     Size  Location     Type
 38617 ;;		None
 38618 ;; Return value:  Size  Location     Type
 38619 ;;		None               void
 38620 ;; Registers used:
 38621 ;;		None
 38622 ;; Tracked objects:
 38623 ;;		On entry : 0/0
 38624 ;;		On exit  : 0/0
 38625 ;;		Unchanged: 0/0
 38626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38631 ;;Total ram usage:        0 bytes
 38632 ;; Hardware stack levels used:    1
 38633 ;; Hardware stack levels required when called:   10
 38634 ;; This function calls:
 38635 ;;		Nothing
 38636 ;; This function is called by:
 38637 ;;		_WriteDataSLCD
 38638 ;;		_BusySLCD
 38639 ;;		_WriteCmdSLCD
 38640 ;;		_ReadAddrSLCD
 38641 ;;		_ReadDataSLCD
 38642 ;;		_SetCGRamAddr
 38643 ;; This function uses a non-reentrant model
 38644 ;;
 38645                           
 38646                           	psect	text87
 38647  01B524                     __ptext87:
 38648                           	opt stack 0
 38649  01B524                     _DelayFor18TCY:
 38650                           	opt stack 18
 38651                           
 38652                           ;LCDDelay.c: 18: __nop();
 38653                           
 38654                           ;incstack = 0
 38655  01B524  F000               	nop	
 38656                           
 38657                           ;LCDDelay.c: 19: __nop();
 38658  01B526  F000               	nop	
 38659                           
 38660                           ;LCDDelay.c: 20: __nop();
 38661  01B528  F000               	nop	
 38662                           
 38663                           ;LCDDelay.c: 21: __nop();
 38664  01B52A  F000               	nop	
 38665                           
 38666                           ;LCDDelay.c: 22: __nop();
 38667  01B52C  F000               	nop	
 38668                           
 38669                           ;LCDDelay.c: 23: __nop();
 38670  01B52E  F000               	nop	
 38671                           
 38672                           ;LCDDelay.c: 24: __nop();
 38673  01B530  F000               	nop	
 38674                           
 38675                           ;LCDDelay.c: 25: __nop();
 38676  01B532  F000               	nop	
 38677                           
 38678                           ;LCDDelay.c: 26: __nop();
 38679  01B534  F000               	nop	
 38680                           
 38681                           ;LCDDelay.c: 27: __nop();
 38682  01B536  F000               	nop	
 38683                           
 38684                           ;LCDDelay.c: 28: __nop();
 38685  01B538  F000               	nop	
 38686                           
 38687                           ;LCDDelay.c: 29: __nop();
 38688  01B53A  F000               	nop	
 38689                           
 38690                           ;LCDDelay.c: 30: __nop();
 38691  01B53C  F000               	nop	
 38692                           
 38693                           ;LCDDelay.c: 31: __nop();
 38694  01B53E  F000               	nop	
 38695                           
 38696                           ;LCDDelay.c: 32: __nop();
 38697  01B540  F000               	nop	
 38698                           
 38699                           ;LCDDelay.c: 33: __nop();
 38700  01B542  F000               	nop	
 38701                           
 38702                           ;LCDDelay.c: 34: __nop();
 38703  01B544  F000               	nop	
 38704                           
 38705                           ;LCDDelay.c: 35: __nop();
 38706  01B546  F000               	nop	
 38707                           
 38708                           ;LCDDelay.c: 37: __nop();
 38709  01B548  F000               	nop	
 38710                           
 38711                           ;LCDDelay.c: 38: __nop();
 38712  01B54A  F000               	nop	
 38713                           
 38714                           ;LCDDelay.c: 39: __nop();
 38715  01B54C  F000               	nop	
 38716                           
 38717                           ;LCDDelay.c: 40: __nop();
 38718  01B54E  F000               	nop	
 38719                           
 38720                           ;LCDDelay.c: 41: __nop();
 38721  01B550  F000               	nop	
 38722                           
 38723                           ;LCDDelay.c: 42: __nop();
 38724  01B552  F000               	nop	
 38725  01B554  0012               	return	
 38726  01B556                     __end_of_DelayFor18TCY:
 38727                           	opt stack 0
 38728                           tblptru	equ	0xFF8
 38729                           tblptrh	equ	0xFF7
 38730                           tblptrl	equ	0xFF6
 38731                           tablat	equ	0xFF5
 38732                           prodh	equ	0xFF4
 38733                           prodl	equ	0xFF3
 38734                           intcon	equ	0xFF2
 38735                           indf0	equ	0xFEF
 38736                           postinc0	equ	0xFEE
 38737                           fsr0h	equ	0xFEA
 38738                           fsr0l	equ	0xFE9
 38739                           wreg	equ	0xFE8
 38740                           indf1	equ	0xFE7
 38741                           postinc1	equ	0xFE6
 38742                           postdec1	equ	0xFE5
 38743                           fsr1h	equ	0xFE2
 38744                           fsr1l	equ	0xFE1
 38745                           indf2	equ	0xFDF
 38746                           postinc2	equ	0xFDE
 38747                           postdec2	equ	0xFDD
 38748                           fsr2h	equ	0xFDA
 38749                           fsr2l	equ	0xFD9
 38750                           status	equ	0xFD8
 38751                           
 38752 ;; *************** function _DelayPORSLCD *****************
 38753 ;; Defined at:
 38754 ;;		line 5 in file "LCDDelay.c"
 38755 ;; Parameters:    Size  Location     Type
 38756 ;;		None
 38757 ;; Auto vars:     Size  Location     Type
 38758 ;;		None
 38759 ;; Return value:  Size  Location     Type
 38760 ;;		None               void
 38761 ;; Registers used:
 38762 ;;		wreg, cstack
 38763 ;; Tracked objects:
 38764 ;;		On entry : 0/0
 38765 ;;		On exit  : 0/0
 38766 ;;		Unchanged: 0/0
 38767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38772 ;;Total ram usage:        0 bytes
 38773 ;; Hardware stack levels used:    1
 38774 ;; Hardware stack levels required when called:   11
 38775 ;; This function calls:
 38776 ;;		_Delay1KTCYx
 38777 ;; This function is called by:
 38778 ;;		_OpenSLCD
 38779 ;; This function uses a non-reentrant model
 38780 ;;
 38781                           
 38782                           	psect	text88
 38783  01BA72                     __ptext88:
 38784                           	opt stack 0
 38785  01BA72                     _DelayPORSLCD:
 38786                           	opt stack 17
 38787                           
 38788                           ;LCDDelay.c: 8: Delay1KTCYx(15);
 38789                           
 38790                           ;incstack = 0
 38791  01BA72  0E0F               	movlw	15
 38792  01BA74  ECCC  F0DC         	call	_Delay1KTCYx
 38793  01BA78  0012               	return	
 38794  01BA7A                     __end_of_DelayPORSLCD:
 38795                           	opt stack 0
 38796                           tblptru	equ	0xFF8
 38797                           tblptrh	equ	0xFF7
 38798                           tblptrl	equ	0xFF6
 38799                           tablat	equ	0xFF5
 38800                           prodh	equ	0xFF4
 38801                           prodl	equ	0xFF3
 38802                           intcon	equ	0xFF2
 38803                           indf0	equ	0xFEF
 38804                           postinc0	equ	0xFEE
 38805                           fsr0h	equ	0xFEA
 38806                           fsr0l	equ	0xFE9
 38807                           wreg	equ	0xFE8
 38808                           indf1	equ	0xFE7
 38809                           postinc1	equ	0xFE6
 38810                           postdec1	equ	0xFE5
 38811                           fsr1h	equ	0xFE2
 38812                           fsr1l	equ	0xFE1
 38813                           indf2	equ	0xFDF
 38814                           postinc2	equ	0xFDE
 38815                           postdec2	equ	0xFDD
 38816                           fsr2h	equ	0xFDA
 38817                           fsr2l	equ	0xFD9
 38818                           status	equ	0xFD8
 38819                           
 38820 ;; *************** function _Delay1KTCYx *****************
 38821 ;; Defined at:
 38822 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
 38823 ;; Parameters:    Size  Location     Type
 38824 ;;  unit            1    wreg     unsigned char 
 38825 ;; Auto vars:     Size  Location     Type
 38826 ;;  unit            1    0[BANK1 ] unsigned char 
 38827 ;; Return value:  Size  Location     Type
 38828 ;;		None               void
 38829 ;; Registers used:
 38830 ;;		wreg
 38831 ;; Tracked objects:
 38832 ;;		On entry : 0/0
 38833 ;;		On exit  : 0/0
 38834 ;;		Unchanged: 0/0
 38835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38837 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38839 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38840 ;;Total ram usage:        1 bytes
 38841 ;; Hardware stack levels used:    1
 38842 ;; Hardware stack levels required when called:   10
 38843 ;; This function calls:
 38844 ;;		Nothing
 38845 ;; This function is called by:
 38846 ;;		_DelayPORSLCD
 38847 ;;		_DelaySLCD
 38848 ;; This function uses a non-reentrant model
 38849 ;;
 38850                           
 38851                           	psect	text89
 38852  01B998                     __ptext89:
 38853                           	opt stack 0
 38854  01B998                     _Delay1KTCYx:
 38855                           	opt stack 17
 38856                           
 38857                           ;incstack = 0
 38858                           ;Delay1KTCYx@unit stored from wreg
 38859  01B998  0101               	movlb	1	; () banked
 38860  01B99A  6F00               	movwf	Delay1KTCYx@unit& (0+255),b
 38861  01B99C                     l2381:
 38862                           
 38863                           ; BSR set to: 1
 38864                           
 38865                           ; BSR set to: 1
 38866  01B99C  0EFA               	movlw	250
 38867  01B99E                     u18677:
 38868  01B99E  F000               	nop	
 38869  01B9A0  2EE8               	decfsz	wreg,f,c
 38870  01B9A2  D7FD               	goto	u18677
 38871  01B9A4  0101               	movlb	1	; () banked
 38872  01B9A6  2F00               	decfsz	Delay1KTCYx@unit& (0+255),f,b
 38873  01B9A8  D7F9               	goto	l2381
 38874  01B9AA  0012               	return	
 38875  01B9AC                     __end_of_Delay1KTCYx:
 38876                           	opt stack 0
 38877                           tblptru	equ	0xFF8
 38878                           tblptrh	equ	0xFF7
 38879                           tblptrl	equ	0xFF6
 38880                           tablat	equ	0xFF5
 38881                           prodh	equ	0xFF4
 38882                           prodl	equ	0xFF3
 38883                           intcon	equ	0xFF2
 38884                           indf0	equ	0xFEF
 38885                           postinc0	equ	0xFEE
 38886                           fsr0h	equ	0xFEA
 38887                           fsr0l	equ	0xFE9
 38888                           wreg	equ	0xFE8
 38889                           indf1	equ	0xFE7
 38890                           postinc1	equ	0xFE6
 38891                           postdec1	equ	0xFE5
 38892                           fsr1h	equ	0xFE2
 38893                           fsr1l	equ	0xFE1
 38894                           indf2	equ	0xFDF
 38895                           postinc2	equ	0xFDE
 38896                           postdec2	equ	0xFDD
 38897                           fsr2h	equ	0xFDA
 38898                           fsr2l	equ	0xFD9
 38899                           status	equ	0xFD8
 38900                           
 38901 ;; *************** function _Delay10KTCYx *****************
 38902 ;; Defined at:
 38903 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
 38904 ;; Parameters:    Size  Location     Type
 38905 ;;  unit            1    wreg     unsigned char 
 38906 ;; Auto vars:     Size  Location     Type
 38907 ;;  unit            1    1[BANK1 ] unsigned char 
 38908 ;; Return value:  Size  Location     Type
 38909 ;;		None               void
 38910 ;; Registers used:
 38911 ;;		wreg
 38912 ;; Tracked objects:
 38913 ;;		On entry : 0/0
 38914 ;;		On exit  : 0/0
 38915 ;;		Unchanged: 0/0
 38916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38918 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38919 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38920 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38921 ;;Total ram usage:        2 bytes
 38922 ;; Hardware stack levels used:    1
 38923 ;; Hardware stack levels required when called:   10
 38924 ;; This function calls:
 38925 ;;		Nothing
 38926 ;; This function is called by:
 38927 ;;		_OpenSLCD
 38928 ;; This function uses a non-reentrant model
 38929 ;;
 38930                           
 38931                           	psect	text90
 38932  01B8BE                     __ptext90:
 38933                           	opt stack 0
 38934  01B8BE                     _Delay10KTCYx:
 38935                           	opt stack 18
 38936                           
 38937                           ; BSR set to: 1
 38938                           ;incstack = 0
 38939                           ;Delay10KTCYx@unit stored from wreg
 38940  01B8BE  0101               	movlb	1	; () banked
 38941  01B8C0  6F01               	movwf	Delay10KTCYx@unit& (0+255),b
 38942  01B8C2                     l2374:
 38943                           
 38944                           ; BSR set to: 1
 38945                           
 38946                           ; BSR set to: 1
 38947  01B8C2  0E0D               	movlw	13
 38948  01B8C4  0101               	movlb	1	; () banked
 38949  01B8C6  6F00               	movwf	??_Delay10KTCYx& (0+255),b
 38950  01B8C8  0EFC               	movlw	252
 38951  01B8CA                     u18687:
 38952  01B8CA  2EE8               	decfsz	wreg,f,c
 38953  01B8CC  D7FE               	goto	u18687
 38954  01B8CE  2F00               	decfsz	??_Delay10KTCYx& (0+255),f,b
 38955  01B8D0  D7FC               	goto	u18687
 38956  01B8D2  0101               	movlb	1	; () banked
 38957  01B8D4  2F01               	decfsz	Delay10KTCYx@unit& (0+255),f,b
 38958  01B8D6  D7F5               	goto	l2374
 38959  01B8D8  0012               	return	
 38960  01B8DA                     __end_of_Delay10KTCYx:
 38961                           	opt stack 0
 38962                           tblptru	equ	0xFF8
 38963                           tblptrh	equ	0xFF7
 38964                           tblptrl	equ	0xFF6
 38965                           tablat	equ	0xFF5
 38966                           prodh	equ	0xFF4
 38967                           prodl	equ	0xFF3
 38968                           intcon	equ	0xFF2
 38969                           indf0	equ	0xFEF
 38970                           postinc0	equ	0xFEE
 38971                           fsr0h	equ	0xFEA
 38972                           fsr0l	equ	0xFE9
 38973                           wreg	equ	0xFE8
 38974                           indf1	equ	0xFE7
 38975                           postinc1	equ	0xFE6
 38976                           postdec1	equ	0xFE5
 38977                           fsr1h	equ	0xFE2
 38978                           fsr1l	equ	0xFE1
 38979                           indf2	equ	0xFDF
 38980                           postinc2	equ	0xFDE
 38981                           postdec2	equ	0xFDD
 38982                           fsr2h	equ	0xFDA
 38983                           fsr2l	equ	0xFD9
 38984                           status	equ	0xFD8
 38985                           
 38986 ;; *************** function _Configure *****************
 38987 ;; Defined at:
 38988 ;;		line 105 in file "main.c"
 38989 ;; Parameters:    Size  Location     Type
 38990 ;;		None
 38991 ;; Auto vars:     Size  Location     Type
 38992 ;;		None
 38993 ;; Return value:  Size  Location     Type
 38994 ;;		None               void
 38995 ;; Registers used:
 38996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38997 ;; Tracked objects:
 38998 ;;		On entry : 0/0
 38999 ;;		On exit  : 0/0
 39000 ;;		Unchanged: 0/0
 39001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39006 ;;Total ram usage:        0 bytes
 39007 ;; Hardware stack levels used:    1
 39008 ;; Hardware stack levels required when called:   17
 39009 ;; This function calls:
 39010 ;;		_InitAppConfig
 39011 ;;		_InitrIR
 39012 ;;		_StackInit
 39013 ;;		_TickInit
 39014 ;; This function is called by:
 39015 ;;		_main
 39016 ;; This function uses a non-reentrant model
 39017 ;;
 39018                           
 39019                           	psect	text91
 39020  01AC8E                     __ptext91:
 39021                           	opt stack 0
 39022  01AC8E                     _Configure:
 39023                           	opt stack 12
 39024                           
 39025                           ;main.c: 107: OSCTUNE = 0;
 39026                           
 39027                           ; BSR set to: 1
 39028                           ;incstack = 0
 39029  01AC8E  0E00               	movlw	0
 39030  01AC90  6E9B               	movwf	3995,c	;volatile
 39031                           
 39032                           ;main.c: 108: OSCCONbits.IDLEN = 1;
 39033  01AC92  8ED3               	bsf	4051,7,c	;volatile
 39034                           
 39035                           ;main.c: 109: OSCCONbits.SCS1 = 1;
 39036  01AC94  82D3               	bsf	4051,1,c	;volatile
 39037                           
 39038                           ;main.c: 110: OSCCONbits.SCS0 = 0;
 39039  01AC96  90D3               	bcf	4051,0,c	;volatile
 39040                           
 39041                           ;main.c: 112: RCONbits.IPEN = 0;
 39042  01AC98  9ED0               	bcf	4048,7,c	;volatile
 39043                           
 39044                           ;main.c: 114: ADCON1 = 0x0F;
 39045  01AC9A  0E0F               	movlw	15
 39046  01AC9C  6EC1               	movwf	4033,c	;volatile
 39047                           
 39048                           ;main.c: 115: CMCON = 0x0F;
 39049  01AC9E  0E0F               	movlw	15
 39050  01ACA0  6EB4               	movwf	4020,c	;volatile
 39051                           
 39052                           ;main.c: 117: LATDbits.LD0 = 0;
 39053  01ACA2  908C               	bcf	3980,0,c	;volatile
 39054                           
 39055                           ;main.c: 118: LATDbits.LD2 = 1;
 39056  01ACA4  848C               	bsf	3980,2,c	;volatile
 39057                           
 39058                           ;main.c: 119: LATBbits.LATB5 = 1;
 39059  01ACA6  8A8A               	bsf	3978,5,c	;volatile
 39060                           
 39061                           ;main.c: 122: TRISA = 0b00000100;
 39062  01ACA8  0E04               	movlw	4
 39063  01ACAA  6E92               	movwf	3986,c	;volatile
 39064                           
 39065                           ;main.c: 123: TRISB = 0b11011111;
 39066  01ACAC  0EDF               	movlw	223
 39067  01ACAE  6E93               	movwf	3987,c	;volatile
 39068                           
 39069                           ;main.c: 124: TRISC = 0x00;
 39070  01ACB0  0E00               	movlw	0
 39071  01ACB2  6E94               	movwf	3988,c	;volatile
 39072                           
 39073                           ;main.c: 125: TRISD = 0x00;
 39074  01ACB4  0E00               	movlw	0
 39075  01ACB6  6E95               	movwf	3989,c	;volatile
 39076                           
 39077                           ;main.c: 126: TRISE = 0x00;
 39078  01ACB8  0E00               	movlw	0
 39079  01ACBA  6E96               	movwf	3990,c	;volatile
 39080                           
 39081                           ;main.c: 127: TRISF = 0x00;
 39082  01ACBC  0E00               	movlw	0
 39083  01ACBE  6E97               	movwf	3991,c	;volatile
 39084                           
 39085                           ;main.c: 129: TRISG = 0x00;
 39086  01ACC0  0E00               	movlw	0
 39087  01ACC2  6E98               	movwf	3992,c	;volatile
 39088                           
 39089                           ;main.c: 131: LATA = 0;
 39090  01ACC4  0E00               	movlw	0
 39091  01ACC6  6E89               	movwf	3977,c	;volatile
 39092                           
 39093                           ;main.c: 132: LATB = 0;
 39094  01ACC8  0E00               	movlw	0
 39095  01ACCA  6E8A               	movwf	3978,c	;volatile
 39096                           
 39097                           ;main.c: 133: LATC = 0;
 39098  01ACCC  0E00               	movlw	0
 39099  01ACCE  6E8B               	movwf	3979,c	;volatile
 39100                           
 39101                           ;main.c: 134: LATD = 0;
 39102  01ACD0  0E00               	movlw	0
 39103  01ACD2  6E8C               	movwf	3980,c	;volatile
 39104                           
 39105                           ;main.c: 135: LATE = 0;
 39106  01ACD4  0E00               	movlw	0
 39107  01ACD6  6E8D               	movwf	3981,c	;volatile
 39108                           
 39109                           ;main.c: 137: INTCON2 = 0;
 39110  01ACD8  0E00               	movlw	0
 39111  01ACDA  6EF1               	movwf	intcon2,c	;volatile
 39112                           
 39113                           ;main.c: 138: INTCON3 = 0x10 | 0x8 | 0x20;
 39114  01ACDC  0E38               	movlw	56
 39115  01ACDE  6EF0               	movwf	intcon3,c	;volatile
 39116                           
 39117                           ;main.c: 140: TickInit();
 39118  01ACE0  ECD6  F0DC         	call	_TickInit	;wreg free
 39119                           
 39120                           ;main.c: 141: InitAppConfig();
 39121  01ACE4  EC61  F0C4         	call	_InitAppConfig	;wreg free
 39122                           
 39123                           ;main.c: 142: StackInit();
 39124  01ACE8  ECE0  F0D8         	call	_StackInit	;wreg free
 39125                           
 39126                           ;main.c: 143: InitrIR();
 39127  01ACEC  EC6D  F0D5         	call	_InitrIR	;wreg free
 39128                           
 39129                           ;main.c: 145: INTCON = 0x40 | 0x8 | 0x10;
 39130  01ACF0  0E58               	movlw	88
 39131  01ACF2  6EF2               	movwf	intcon,c	;volatile
 39132  01ACF4  0012               	return	
 39133  01ACF6                     __end_of_Configure:
 39134                           	opt stack 0
 39135                           tblptru	equ	0xFF8
 39136                           tblptrh	equ	0xFF7
 39137                           tblptrl	equ	0xFF6
 39138                           tablat	equ	0xFF5
 39139                           prodh	equ	0xFF4
 39140                           prodl	equ	0xFF3
 39141                           intcon	equ	0xFF2
 39142                           intcon2	equ	0xFF1
 39143                           intcon3	equ	0xFF0
 39144                           indf0	equ	0xFEF
 39145                           postinc0	equ	0xFEE
 39146                           fsr0h	equ	0xFEA
 39147                           fsr0l	equ	0xFE9
 39148                           wreg	equ	0xFE8
 39149                           indf1	equ	0xFE7
 39150                           postinc1	equ	0xFE6
 39151                           postdec1	equ	0xFE5
 39152                           fsr1h	equ	0xFE2
 39153                           fsr1l	equ	0xFE1
 39154                           indf2	equ	0xFDF
 39155                           postinc2	equ	0xFDE
 39156                           postdec2	equ	0xFDD
 39157                           fsr2h	equ	0xFDA
 39158                           fsr2l	equ	0xFD9
 39159                           status	equ	0xFD8
 39160                           
 39161 ;; *************** function _TickInit *****************
 39162 ;; Defined at:
 39163 ;;		line 79 in file "../tcpip/tick.c"
 39164 ;; Parameters:    Size  Location     Type
 39165 ;;		None
 39166 ;; Auto vars:     Size  Location     Type
 39167 ;;		None
 39168 ;; Return value:  Size  Location     Type
 39169 ;;		None               void
 39170 ;; Registers used:
 39171 ;;		wreg, status,2
 39172 ;; Tracked objects:
 39173 ;;		On entry : 0/0
 39174 ;;		On exit  : 0/0
 39175 ;;		Unchanged: 0/0
 39176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39181 ;;Total ram usage:        0 bytes
 39182 ;; Hardware stack levels used:    1
 39183 ;; Hardware stack levels required when called:   10
 39184 ;; This function calls:
 39185 ;;		Nothing
 39186 ;; This function is called by:
 39187 ;;		_Configure
 39188 ;; This function uses a non-reentrant model
 39189 ;;
 39190                           
 39191                           	psect	text92
 39192  01B9AC                     __ptext92:
 39193                           	opt stack 0
 39194  01B9AC                     _TickInit:
 39195                           	opt stack 18
 39196                           
 39197                           ;tick.c: 84: TMR0H = 0;
 39198                           
 39199                           ;incstack = 0
 39200  01B9AC  0E00               	movlw	0
 39201  01B9AE  6ED7               	movwf	4055,c	;volatile
 39202                           
 39203                           ;tick.c: 85: TMR0L = 0;
 39204  01B9B0  0E00               	movlw	0
 39205  01B9B2  6ED6               	movwf	4054,c	;volatile
 39206                           
 39207                           ;tick.c: 88: INTCON2bits.TMR0IP = 0;
 39208  01B9B4  94F1               	bcf	intcon2,2,c	;volatile
 39209                           
 39210                           ;tick.c: 89: INTCONbits.TMR0IF = 0;
 39211  01B9B6  94F2               	bcf	intcon,2,c	;volatile
 39212                           
 39213                           ;tick.c: 90: INTCONbits.TMR0IE = 1;
 39214  01B9B8  8AF2               	bsf	intcon,5,c	;volatile
 39215                           
 39216                           ;tick.c: 93: T0CON = 0x87;
 39217  01B9BA  0E87               	movlw	135
 39218  01B9BC  6ED5               	movwf	4053,c	;volatile
 39219  01B9BE  0012               	return	
 39220  01B9C0                     __end_of_TickInit:
 39221                           	opt stack 0
 39222                           tblptru	equ	0xFF8
 39223                           tblptrh	equ	0xFF7
 39224                           tblptrl	equ	0xFF6
 39225                           tablat	equ	0xFF5
 39226                           prodh	equ	0xFF4
 39227                           prodl	equ	0xFF3
 39228                           intcon	equ	0xFF2
 39229                           intcon2	equ	0xFF1
 39230                           intcon3	equ	0xFF0
 39231                           indf0	equ	0xFEF
 39232                           postinc0	equ	0xFEE
 39233                           fsr0h	equ	0xFEA
 39234                           fsr0l	equ	0xFE9
 39235                           wreg	equ	0xFE8
 39236                           indf1	equ	0xFE7
 39237                           postinc1	equ	0xFE6
 39238                           postdec1	equ	0xFE5
 39239                           fsr1h	equ	0xFE2
 39240                           fsr1l	equ	0xFE1
 39241                           indf2	equ	0xFDF
 39242                           postinc2	equ	0xFDE
 39243                           postdec2	equ	0xFDD
 39244                           fsr2h	equ	0xFDA
 39245                           fsr2l	equ	0xFD9
 39246                           status	equ	0xFD8
 39247                           
 39248 ;; *************** function _StackInit *****************
 39249 ;; Defined at:
 39250 ;;		line 94 in file "../tcpip/stack_task.c"
 39251 ;; Parameters:    Size  Location     Type
 39252 ;;		None
 39253 ;; Auto vars:     Size  Location     Type
 39254 ;;		None
 39255 ;; Return value:  Size  Location     Type
 39256 ;;		None               void
 39257 ;; Registers used:
 39258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39259 ;; Tracked objects:
 39260 ;;		On entry : 0/0
 39261 ;;		On exit  : 0/0
 39262 ;;		Unchanged: 0/0
 39263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39265 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39267 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39268 ;;Total ram usage:        4 bytes
 39269 ;; Hardware stack levels used:    1
 39270 ;; Hardware stack levels required when called:   16
 39271 ;; This function calls:
 39272 ;;		_ARPInit
 39273 ;;		_GenerateRandomDWORD
 39274 ;;		_LFSRSeedRand
 39275 ;;		_MACInit
 39276 ;;		_TCPInit
 39277 ;; This function is called by:
 39278 ;;		_Configure
 39279 ;; This function uses a non-reentrant model
 39280 ;;
 39281                           
 39282                           	psect	text93
 39283  01B1C0                     __ptext93:
 39284                           	opt stack 0
 39285  01B1C0                     _StackInit:
 39286                           	opt stack 12
 39287                           
 39288                           ;stack_task.c: 96: static bool once = 0;
 39289                           ;stack_task.c: 97: smStack = SM_STACK_IDLE;
 39290                           
 39291                           ;incstack = 0
 39292  01B1C0  0E00               	movlw	0
 39293  01B1C2  0100               	movlb	0	; () banked
 39294  01B1C4  6FEE               	movwf	_smStack& (0+255),b
 39295                           
 39296                           ; BSR set to: 0
 39297                           ;stack_task.c: 112: if (!once) {
 39298  01B1C6  665F               	tstfsz	StackInit@once,c
 39299  01B1C8  D016               	goto	l13888
 39300                           
 39301                           ; BSR set to: 0
 39302                           ;stack_task.c: 114: LFSRSeedRand(GenerateRandomDWORD());
 39303  01B1CA  ECC5  F0B7         	call	_GenerateRandomDWORD	;wreg free
 39304  01B1CE  C118  F143         	movff	?_GenerateRandomDWORD,_StackInit$10823
 39305  01B1D2  C119  F144         	movff	?_GenerateRandomDWORD+1,_StackInit$10823+1
 39306  01B1D6  C11A  F145         	movff	?_GenerateRandomDWORD+2,_StackInit$10823+2
 39307  01B1DA  C11B  F146         	movff	?_GenerateRandomDWORD+3,_StackInit$10823+3
 39308                           
 39309                           ;stack_task.c: 114: LFSRSeedRand(GenerateRandomDWORD());
 39310  01B1DE  C143  F10F         	movff	_StackInit$10823,LFSRSeedRand@dwSeed
 39311  01B1E2  C144  F110         	movff	_StackInit$10823+1,LFSRSeedRand@dwSeed+1
 39312  01B1E6  C145  F111         	movff	_StackInit$10823+2,LFSRSeedRand@dwSeed+2
 39313  01B1EA  C146  F112         	movff	_StackInit$10823+3,LFSRSeedRand@dwSeed+3
 39314  01B1EE  EC7B  F0D6         	call	_LFSRSeedRand	;wreg free
 39315                           
 39316                           ;stack_task.c: 115: once = 1;
 39317  01B1F2  0E01               	movlw	1
 39318  01B1F4  6E5F               	movwf	StackInit@once,c
 39319  01B1F6                     l13888:
 39320                           
 39321                           ;stack_task.c: 116: }
 39322                           ;stack_task.c: 118: MACInit();
 39323  01B1F6  ECF3  F0C5         	call	_MACInit	;wreg free
 39324                           
 39325                           ;stack_task.c: 124: ARPInit();
 39326  01B1FA  EC35  F0DB         	call	_ARPInit	;wreg free
 39327                           
 39328                           ;stack_task.c: 135: TCPInit();
 39329  01B1FE  EC77  F0AD         	call	_TCPInit	;wreg free
 39330  01B202  0012               	return	
 39331  01B204                     __end_of_StackInit:
 39332                           	opt stack 0
 39333                           tblptru	equ	0xFF8
 39334                           tblptrh	equ	0xFF7
 39335                           tblptrl	equ	0xFF6
 39336                           tablat	equ	0xFF5
 39337                           prodh	equ	0xFF4
 39338                           prodl	equ	0xFF3
 39339                           intcon	equ	0xFF2
 39340                           intcon2	equ	0xFF1
 39341                           intcon3	equ	0xFF0
 39342                           indf0	equ	0xFEF
 39343                           postinc0	equ	0xFEE
 39344                           fsr0h	equ	0xFEA
 39345                           fsr0l	equ	0xFE9
 39346                           wreg	equ	0xFE8
 39347                           indf1	equ	0xFE7
 39348                           postinc1	equ	0xFE6
 39349                           postdec1	equ	0xFE5
 39350                           fsr1h	equ	0xFE2
 39351                           fsr1l	equ	0xFE1
 39352                           indf2	equ	0xFDF
 39353                           postinc2	equ	0xFDE
 39354                           postdec2	equ	0xFDD
 39355                           fsr2h	equ	0xFDA
 39356                           fsr2l	equ	0xFD9
 39357                           status	equ	0xFD8
 39358                           
 39359 ;; *************** function _TCPInit *****************
 39360 ;; Defined at:
 39361 ;;		line 332 in file "../tcpip/tcp.c"
 39362 ;; Parameters:    Size  Location     Type
 39363 ;;		None
 39364 ;; Auto vars:     Size  Location     Type
 39365 ;;  wCurrentETHA    2   63[BANK1 ] unsigned int 
 39366 ;;  wRXSize         2   61[BANK1 ] unsigned int 
 39367 ;;  wTXSize         2   59[BANK1 ] unsigned int 
 39368 ;;  ptrBaseAddre    2   57[BANK1 ] unsigned short 
 39369 ;;  i               1   66[BANK1 ] unsigned char 
 39370 ;;  vMedium         1   65[BANK1 ] unsigned char 
 39371 ;;  vSocketsAllo    1   56[BANK1 ] unsigned char 
 39372 ;; Return value:  Size  Location     Type
 39373 ;;		None               void
 39374 ;; Registers used:
 39375 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39376 ;; Tracked objects:
 39377 ;;		On entry : 0/0
 39378 ;;		On exit  : 0/0
 39379 ;;		Unchanged: 0/0
 39380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39382 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39383 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39384 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39385 ;;Total ram usage:       17 bytes
 39386 ;; Hardware stack levels used:    1
 39387 ;; Hardware stack levels required when called:   15
 39388 ;; This function calls:
 39389 ;;		_CloseSocket
 39390 ;;		_GenerateRandomDWORD
 39391 ;;		_SyncTCB
 39392 ;;		_SyncTCBStub
 39393 ;;		_memset
 39394 ;; This function is called by:
 39395 ;;		_StackInit
 39396 ;; This function uses a non-reentrant model
 39397 ;;
 39398                           
 39399                           	psect	text94
 39400  015AEE                     __ptext94:
 39401                           	opt stack 0
 39402  015AEE                     _TCPInit:
 39403                           	opt stack 12
 39404                           
 39405                           ;tcp.c: 334: uint8_t i;
 39406                           ;tcp.c: 335: uint8_t vSocketsAllocated;
 39407                           ;tcp.c: 336: uint16_t wTXSize, wRXSize;
 39408                           ;tcp.c: 337: unsigned short ptrBaseAddress;
 39409                           ;tcp.c: 338: uint8_t vMedium;
 39410                           ;tcp.c: 340: uint16_t wCurrentETHAddress = (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) 
      +                          - 0ul - 0ul) + 1ul) + (1514ul+7ul)));
 39411                           
 39412                           ;incstack = 0
 39413  015AEE  0E18               	movlw	24
 39414  015AF0  0101               	movlb	1	; () banked
 39415  015AF2  6F40               	movwf	(TCPInit@wCurrentETHAddress+1)& (0+255),b
 39416  015AF4  0E98               	movlw	152
 39417  015AF6  0101               	movlb	1	; () banked
 39418  015AF8  6F3F               	movwf	TCPInit@wCurrentETHAddress& (0+255),b
 39419                           
 39420                           ; BSR set to: 1
 39421                           ;tcp.c: 355: if(NextPort == 0u)
 39422  015AFA  0100               	movlb	0	; () banked
 39423  015AFC  51E6               	movf	(_NextPort+1)& (0+255),w,b
 39424  015AFE  11E5               	iorwf	_NextPort& (0+255),w,b
 39425  015B00  A4D8               	btfss	status,2,c
 39426  015B02  D021               	goto	l12476
 39427                           
 39428                           ; BSR set to: 0
 39429                           ;tcp.c: 356: NextPort = (((uint16_t)GenerateRandomDWORD()) & 0x07FFu) + (1024u);
 39430  015B04  0EFF               	movlw	255
 39431  015B06  0101               	movlb	1	; () banked
 39432  015B08  6F32               	movwf	??_TCPInit& (0+255),b
 39433  015B0A  0E07               	movlw	7
 39434  015B0C  6F33               	movwf	(??_TCPInit+1)& (0+255),b
 39435  015B0E  ECC5  F0B7         	call	_GenerateRandomDWORD	;wreg free
 39436  015B12  C118  F134         	movff	?_GenerateRandomDWORD,??_TCPInit+2
 39437  015B16  C119  F135         	movff	?_GenerateRandomDWORD+1,??_TCPInit+3
 39438  015B1A  C11A  F136         	movff	?_GenerateRandomDWORD+2,??_TCPInit+4
 39439  015B1E  C11B  F137         	movff	?_GenerateRandomDWORD+3,??_TCPInit+5
 39440  015B22  0101               	movlb	1	; () banked
 39441  015B24  5132               	movf	??_TCPInit& (0+255),w,b
 39442  015B26  0101               	movlb	1	; () banked
 39443  015B28  1734               	andwf	(??_TCPInit+2)& (0+255),f,b
 39444  015B2A  0101               	movlb	1	; () banked
 39445  015B2C  5133               	movf	(??_TCPInit+1)& (0+255),w,b
 39446  015B2E  0101               	movlb	1	; () banked
 39447  015B30  1735               	andwf	(??_TCPInit+3)& (0+255),f,b
 39448  015B32  0E00               	movlw	0
 39449  015B34  0101               	movlb	1	; () banked
 39450  015B36  2534               	addwf	(??_TCPInit+2)& (0+255),w,b
 39451  015B38  0100               	movlb	0	; () banked
 39452  015B3A  6FE5               	movwf	_NextPort& (0+255),b
 39453  015B3C  0E04               	movlw	4
 39454  015B3E  0101               	movlb	1	; () banked
 39455  015B40  2135               	addwfc	(??_TCPInit+3)& (0+255),w,b
 39456  015B42  0100               	movlb	0	; () banked
 39457  015B44  6FE6               	movwf	(_NextPort+1)& (0+255),b
 39458  015B46                     l12476:
 39459                           
 39460                           ; BSR set to: 0
 39461                           ;tcp.c: 362: memset((void*)SYNQueue, 0x00, sizeof(SYNQueue));
 39462  015B46  0102               	movlb	2	; () banked
 39463  015B48  0E02               	movlw	high _SYNQueue
 39464  015B4A  0101               	movlb	1	; () banked
 39465  015B4C  6F01               	movwf	(memset@p1+1)& (0+255),b
 39466  015B4E  0102               	movlb	2	; () banked
 39467  015B50  0E00               	movlw	low _SYNQueue
 39468  015B52  0101               	movlb	1	; () banked
 39469  015B54  6F00               	movwf	memset@p1& (0+255),b
 39470  015B56  0E00               	movlw	0
 39471  015B58  0101               	movlb	1	; () banked
 39472  015B5A  6F03               	movwf	(memset@c+1)& (0+255),b
 39473  015B5C  0E00               	movlw	0
 39474  015B5E  0101               	movlb	1	; () banked
 39475  015B60  6F02               	movwf	memset@c& (0+255),b
 39476  015B62  0E00               	movlw	0
 39477  015B64  0101               	movlb	1	; () banked
 39478  015B66  6F05               	movwf	(memset@n+1)& (0+255),b
 39479  015B68  0E3C               	movlw	60
 39480  015B6A  0101               	movlb	1	; () banked
 39481  015B6C  6F04               	movwf	memset@n& (0+255),b
 39482  015B6E  ECD9  F0D9         	call	_memset	;wreg free
 39483                           
 39484                           ;tcp.c: 366: vSocketsAllocated = 0;
 39485  015B72  0E00               	movlw	0
 39486  015B74  0101               	movlb	1	; () banked
 39487  015B76  6F38               	movwf	TCPInit@vSocketsAllocated& (0+255),b
 39488                           
 39489                           ; BSR set to: 1
 39490                           ;tcp.c: 367: for(i = 0; i < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0]
      +                          )); i++)
 39491  015B78  0E00               	movlw	0
 39492  015B7A  0101               	movlb	1	; () banked
 39493  015B7C  6F42               	movwf	TCPInit@i& (0+255),b
 39494  015B7E                     
 39495                           ; BSR set to: 1
 39496  015B7E  0101               	movlb	1	; () banked
 39497  015B80  5142               	movf	TCPInit@i& (0+255),w,b
 39498  015B82  A4D8               	btfss	status,2,c
 39499  015B84  0012               	return	
 39500                           
 39501                           ; BSR set to: 1
 39502                           ;tcp.c: 368: {
 39503                           ;tcp.c: 370: SyncTCBStub(i);
 39504                           
 39505                           ; BSR set to: 1
 39506                           
 39507                           ; BSR set to: 1
 39508  015B86  0101               	movlb	1	; () banked
 39509  015B88  5142               	movf	TCPInit@i& (0+255),w,b
 39510  015B8A  EC3D  F0D0         	call	_SyncTCBStub
 39511                           
 39512                           ;tcp.c: 372: vMedium = TCPSocketInitializer[i].vMemoryMedium;
 39513  015B8E  0101               	movlb	1	; () banked
 39514  015B90  5142               	movf	TCPInit@i& (0+255),w,b
 39515  015B92  0D06               	mullw	6
 39516  015B94  0E01               	movlw	1
 39517  015B96  26F3               	addwf	prodl,f,c
 39518  015B98  0E00               	movlw	0
 39519  015B9A  22F4               	addwfc	prodh,f,c
 39520  015B9C  0E0B               	movlw	low _TCPSocketInitializer
 39521  015B9E  24F3               	addwf	prodl,w,c
 39522  015BA0  6EF6               	movwf	tblptrl,c
 39523  015BA2  0EFF               	movlw	high _TCPSocketInitializer
 39524  015BA4  20F4               	addwfc	prodh,w,c
 39525  015BA6  6EF7               	movwf	tblptrh,c
 39526  015BA8                     	if	1	;There are 3 active tblptr bytes
 39527  015BA8  6AF8               	clrf	tblptru,c
 39528  015BAA  0E00               	movlw	low (__mediumconst shr (0+16))
 39529  015BAC  22F8               	addwfc	tblptru,f,c
 39530  015BAE                     	endif
 39531  015BAE  0008               	tblrd		*
 39532  015BB0  0101               	movlb	1	; () banked
 39533  015BB2  CFF5 F141          	movff	tablat,TCPInit@vMedium
 39534                           
 39535                           ; BSR set to: 1
 39536                           ;tcp.c: 373: wTXSize = TCPSocketInitializer[i].wTXBufferSize;
 39537  015BB6  0101               	movlb	1	; () banked
 39538  015BB8  5142               	movf	TCPInit@i& (0+255),w,b
 39539  015BBA  0D06               	mullw	6
 39540  015BBC  0E02               	movlw	2
 39541  015BBE  26F3               	addwf	prodl,f,c
 39542  015BC0  0E00               	movlw	0
 39543  015BC2  22F4               	addwfc	prodh,f,c
 39544  015BC4  0E0B               	movlw	low _TCPSocketInitializer
 39545  015BC6  24F3               	addwf	prodl,w,c
 39546  015BC8  6EF6               	movwf	tblptrl,c
 39547  015BCA  0EFF               	movlw	high _TCPSocketInitializer
 39548  015BCC  20F4               	addwfc	prodh,w,c
 39549  015BCE  6EF7               	movwf	tblptrh,c
 39550  015BD0                     	if	1	;There are 3 active tblptr bytes
 39551  015BD0  6AF8               	clrf	tblptru,c
 39552  015BD2  0E00               	movlw	low (__mediumconst shr (0+16))
 39553  015BD4  22F8               	addwfc	tblptru,f,c
 39554  015BD6                     	endif
 39555  015BD6  0009               	tblrd		*+
 39556  015BD8  0101               	movlb	1	; () banked
 39557  015BDA  CFF5 F13B          	movff	tablat,TCPInit@wTXSize
 39558  015BDE  000A               	tblrd		*-
 39559  015BE0  0101               	movlb	1	; () banked
 39560  015BE2  CFF5 F13C          	movff	tablat,TCPInit@wTXSize+1
 39561                           
 39562                           ; BSR set to: 1
 39563                           ;tcp.c: 374: wRXSize = TCPSocketInitializer[i].wRXBufferSize;
 39564  015BE6  0101               	movlb	1	; () banked
 39565  015BE8  5142               	movf	TCPInit@i& (0+255),w,b
 39566  015BEA  0D06               	mullw	6
 39567  015BEC  0E04               	movlw	4
 39568  015BEE  26F3               	addwf	prodl,f,c
 39569  015BF0  0E00               	movlw	0
 39570  015BF2  22F4               	addwfc	prodh,f,c
 39571  015BF4  0E0B               	movlw	low _TCPSocketInitializer
 39572  015BF6  24F3               	addwf	prodl,w,c
 39573  015BF8  6EF6               	movwf	tblptrl,c
 39574  015BFA  0EFF               	movlw	high _TCPSocketInitializer
 39575  015BFC  20F4               	addwfc	prodh,w,c
 39576  015BFE  6EF7               	movwf	tblptrh,c
 39577  015C00                     	if	1	;There are 3 active tblptr bytes
 39578  015C00  6AF8               	clrf	tblptru,c
 39579  015C02  0E00               	movlw	low (__mediumconst shr (0+16))
 39580  015C04  22F8               	addwfc	tblptru,f,c
 39581  015C06                     	endif
 39582  015C06  0009               	tblrd		*+
 39583  015C08  0101               	movlb	1	; () banked
 39584  015C0A  CFF5 F13D          	movff	tablat,TCPInit@wRXSize
 39585  015C0E  000A               	tblrd		*-
 39586  015C10  0101               	movlb	1	; () banked
 39587  015C12  CFF5 F13E          	movff	tablat,TCPInit@wRXSize+1
 39588                           
 39589                           ;tcp.c: 376: switch(vMedium)
 39590  015C16  D029               	goto	l12498
 39591  015C18                     l878:
 39592                           
 39593                           ; BSR set to: 1
 39594                           ;tcp.c: 380: ptrBaseAddress = wCurrentETHAddress;
 39595  015C18  C13F  F139         	movff	TCPInit@wCurrentETHAddress,TCPInit@ptrBaseAddress
 39596  015C1C  C140  F13A         	movff	TCPInit@wCurrentETHAddress+1,TCPInit@ptrBaseAddress+1
 39597                           
 39598                           ; BSR set to: 1
 39599                           ;tcp.c: 381: wCurrentETHAddress += sizeof(TCB) + wTXSize+1 + wRXSize+1;
 39600  015C20  0101               	movlb	1	; () banked
 39601  015C22  C13B  F132         	movff	TCPInit@wTXSize,??_TCPInit
 39602  015C26  0101               	movlb	1	; () banked
 39603  015C28  C13C  F133         	movff	TCPInit@wTXSize+1,??_TCPInit+1
 39604  015C2C  0101               	movlb	1	; () banked
 39605  015C2E  513D               	movf	TCPInit@wRXSize& (0+255),w,b
 39606  015C30  0101               	movlb	1	; () banked
 39607  015C32  2732               	addwf	??_TCPInit& (0+255),f,b
 39608  015C34  0101               	movlb	1	; () banked
 39609  015C36  513E               	movf	(TCPInit@wRXSize+1)& (0+255),w,b
 39610  015C38  0101               	movlb	1	; () banked
 39611  015C3A  2333               	addwfc	(??_TCPInit+1)& (0+255),f,b
 39612  015C3C  0E29               	movlw	41
 39613  015C3E  0101               	movlb	1	; () banked
 39614  015C40  2732               	addwf	??_TCPInit& (0+255),f,b
 39615  015C42  0E00               	movlw	0
 39616  015C44  2333               	addwfc	(??_TCPInit+1)& (0+255),f,b
 39617  015C46  0101               	movlb	1	; () banked
 39618  015C48  5132               	movf	??_TCPInit& (0+255),w,b
 39619  015C4A  0101               	movlb	1	; () banked
 39620  015C4C  273F               	addwf	TCPInit@wCurrentETHAddress& (0+255),f,b
 39621  015C4E  0101               	movlb	1	; () banked
 39622  015C50  5133               	movf	(??_TCPInit+1)& (0+255),w,b
 39623  015C52  0101               	movlb	1	; () banked
 39624  015C54  2340               	addwfc	(TCPInit@wCurrentETHAddress+1)& (0+255),f,b
 39625  015C56                     l12496:
 39626                           
 39627                           ; BSR set to: 1
 39628  015C56  0EFD               	movlw	253
 39629  015C58  0101               	movlb	1	; () banked
 39630  015C5A  5D3F               	subwf	TCPInit@wCurrentETHAddress& (0+255),w,b
 39631  015C5C  0E1F               	movlw	31
 39632  015C5E  0101               	movlb	1	; () banked
 39633  015C60  5940               	subwfb	(TCPInit@wCurrentETHAddress+1)& (0+255),w,b
 39634  015C62  A0D8               	btfss	status,0,c
 39635  015C64  D008               	goto	l882
 39636  015C66  D7F7               	goto	l12496
 39637  015C68                     l884:
 39638  015C68  D7FF               	goto	l884
 39639  015C6A                     l12498:
 39640  015C6A  0101               	movlb	1	; () banked
 39641  015C6C  5141               	movf	TCPInit@vMedium& (0+255),w,b
 39642                           
 39643                           ; Switch size 1, requested type "space"
 39644                           ; Number of cases is 1, Range of values is 0 to 0
 39645                           ; switch strategies available:
 39646                           ; Name         Instructions Cycles
 39647                           ; simple_byte            4     3 (average)
 39648                           ;	Chosen strategy is simple_byte
 39649  015C6E  0A00               	xorlw	0	; case 0
 39650  015C70  B4D8               	btfsc	status,2,c
 39651  015C72  D7D2               	goto	l878
 39652  015C74  D7F9               	goto	l884
 39653  015C76                     l882:
 39654                           
 39655                           ;tcp.c: 416: MyTCBStub.vMemoryMedium = vMedium;
 39656  015C76  C141  F1FB         	movff	TCPInit@vMedium,_MyTCBStub+27
 39657                           
 39658                           ;tcp.c: 417: MyTCBStub.bufferTxStart = ptrBaseAddress + sizeof(TCB);
 39659  015C7A  0E27               	movlw	39
 39660  015C7C  0101               	movlb	1	; () banked
 39661  015C7E  2539               	addwf	TCPInit@ptrBaseAddress& (0+255),w,b
 39662  015C80  0101               	movlb	1	; () banked
 39663  015C82  6FE0               	movwf	_MyTCBStub& (0+255),b
 39664  015C84  0E00               	movlw	0
 39665  015C86  0101               	movlb	1	; () banked
 39666  015C88  213A               	addwfc	(TCPInit@ptrBaseAddress+1)& (0+255),w,b
 39667  015C8A  0101               	movlb	1	; () banked
 39668  015C8C  6FE1               	movwf	(_MyTCBStub+1)& (0+255),b
 39669                           
 39670                           ;tcp.c: 418: MyTCBStub.bufferRxStart = MyTCBStub.bufferTxStart + wTXSize + 1;
 39671  015C8E  0101               	movlb	1	; () banked
 39672  015C90  C1E0  F132         	movff	_MyTCBStub,??_TCPInit
 39673  015C94  0101               	movlb	1	; () banked
 39674  015C96  C1E1  F133         	movff	_MyTCBStub+1,??_TCPInit+1
 39675  015C9A  0101               	movlb	1	; () banked
 39676  015C9C  513B               	movf	TCPInit@wTXSize& (0+255),w,b
 39677  015C9E  0101               	movlb	1	; () banked
 39678  015CA0  2732               	addwf	??_TCPInit& (0+255),f,b
 39679  015CA2  0101               	movlb	1	; () banked
 39680  015CA4  513C               	movf	(TCPInit@wTXSize+1)& (0+255),w,b
 39681  015CA6  0101               	movlb	1	; () banked
 39682  015CA8  2333               	addwfc	(??_TCPInit+1)& (0+255),f,b
 39683  015CAA  0E01               	movlw	1
 39684  015CAC  0101               	movlb	1	; () banked
 39685  015CAE  2532               	addwf	??_TCPInit& (0+255),w,b
 39686  015CB0  0101               	movlb	1	; () banked
 39687  015CB2  6FE2               	movwf	(_MyTCBStub+2)& (0+255),b
 39688  015CB4  0E00               	movlw	0
 39689  015CB6  0101               	movlb	1	; () banked
 39690  015CB8  2133               	addwfc	(??_TCPInit+1)& (0+255),w,b
 39691  015CBA  0101               	movlb	1	; () banked
 39692  015CBC  6FE3               	movwf	(_MyTCBStub+3)& (0+255),b
 39693                           
 39694                           ;tcp.c: 419: MyTCBStub.bufferEnd = MyTCBStub.bufferRxStart + wRXSize;
 39695  015CBE  0101               	movlb	1	; () banked
 39696  015CC0  513D               	movf	TCPInit@wRXSize& (0+255),w,b
 39697  015CC2  0101               	movlb	1	; () banked
 39698  015CC4  25E2               	addwf	(_MyTCBStub+2)& (0+255),w,b
 39699  015CC6  0101               	movlb	1	; () banked
 39700  015CC8  6FE4               	movwf	(_MyTCBStub+4)& (0+255),b
 39701  015CCA  0101               	movlb	1	; () banked
 39702  015CCC  513E               	movf	(TCPInit@wRXSize+1)& (0+255),w,b
 39703  015CCE  0101               	movlb	1	; () banked
 39704  015CD0  21E3               	addwfc	(_MyTCBStub+3)& (0+255),w,b
 39705  015CD2  0101               	movlb	1	; () banked
 39706  015CD4  6FE5               	movwf	(_MyTCBStub+5)& (0+255),b
 39707                           
 39708                           ; BSR set to: 1
 39709                           ;tcp.c: 420: MyTCBStub.smState = TCP_CLOSED;
 39710  015CD6  0E0D               	movlw	13
 39711  015CD8  0101               	movlb	1	; () banked
 39712  015CDA  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 39713                           
 39714                           ; BSR set to: 1
 39715                           ;tcp.c: 421: MyTCBStub.Flags.bServer = 0;
 39716  015CDC  0101               	movlb	1	; () banked
 39717  015CDE  97F7               	bcf	(_MyTCBStub+23)& (0+255),3,b
 39718                           
 39719                           ; BSR set to: 1
 39720                           ;tcp.c: 426: SyncTCB();
 39721  015CE0  EC1D  F0CB         	call	_SyncTCB	;wreg free
 39722                           
 39723                           ;tcp.c: 427: MyTCB.vSocketPurpose = TCPSocketInitializer[i].vSocketPurpose;
 39724  015CE4  0101               	movlb	1	; () banked
 39725  015CE6  5142               	movf	TCPInit@i& (0+255),w,b
 39726  015CE8  0D06               	mullw	6
 39727  015CEA  0E0B               	movlw	low _TCPSocketInitializer
 39728  015CEC  24F3               	addwf	prodl,w,c
 39729  015CEE  6EF6               	movwf	tblptrl,c
 39730  015CF0  0EFF               	movlw	high _TCPSocketInitializer
 39731  015CF2  20F4               	addwfc	prodh,w,c
 39732  015CF4  6EF7               	movwf	tblptrh,c
 39733  015CF6                     	if	1	;There are 3 active tblptr bytes
 39734  015CF6  6AF8               	clrf	tblptru,c
 39735  015CF8  0E00               	movlw	low (__mediumconst shr (0+16))
 39736  015CFA  22F8               	addwfc	tblptru,f,c
 39737  015CFC                     	endif
 39738  015CFC  0008               	tblrd		*
 39739  015CFE  0101               	movlb	1	; () banked
 39740  015D00  CFF5 F1DF          	movff	tablat,_MyTCB+38
 39741                           
 39742                           ; BSR set to: 1
 39743                           ;tcp.c: 428: CloseSocket();
 39744  015D04  ECFD  F0CD         	call	_CloseSocket	;wreg free
 39745  015D08  0101               	movlb	1	; () banked
 39746  015D0A  2B42               	incf	TCPInit@i& (0+255),f,b
 39747  015D0C  D738               	goto	L41
 39748  015D0E                     __end_of_TCPInit:
 39749                           	opt stack 0
 39750                           tblptru	equ	0xFF8
 39751                           tblptrh	equ	0xFF7
 39752                           tblptrl	equ	0xFF6
 39753                           tablat	equ	0xFF5
 39754                           prodh	equ	0xFF4
 39755                           prodl	equ	0xFF3
 39756                           intcon	equ	0xFF2
 39757                           intcon2	equ	0xFF1
 39758                           intcon3	equ	0xFF0
 39759                           indf0	equ	0xFEF
 39760                           postinc0	equ	0xFEE
 39761                           fsr0h	equ	0xFEA
 39762                           fsr0l	equ	0xFE9
 39763                           wreg	equ	0xFE8
 39764                           indf1	equ	0xFE7
 39765                           postinc1	equ	0xFE6
 39766                           postdec1	equ	0xFE5
 39767                           fsr1h	equ	0xFE2
 39768                           fsr1l	equ	0xFE1
 39769                           indf2	equ	0xFDF
 39770                           postinc2	equ	0xFDE
 39771                           postdec2	equ	0xFDD
 39772                           fsr2h	equ	0xFDA
 39773                           fsr2l	equ	0xFD9
 39774                           status	equ	0xFD8
 39775                           
 39776 ;; *************** function _SyncTCBStub *****************
 39777 ;; Defined at:
 39778 ;;		line 257 in file "../tcpip/tcp.c"
 39779 ;; Parameters:    Size  Location     Type
 39780 ;;  hTCP            1    wreg     unsigned char 
 39781 ;; Auto vars:     Size  Location     Type
 39782 ;;  hTCP            1   32[BANK1 ] unsigned char 
 39783 ;; Return value:  Size  Location     Type
 39784 ;;		None               void
 39785 ;; Registers used:
 39786 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39787 ;; Tracked objects:
 39788 ;;		On entry : 0/0
 39789 ;;		On exit  : 0/0
 39790 ;;		Unchanged: 0/0
 39791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39793 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39794 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39795 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39796 ;;Total ram usage:        3 bytes
 39797 ;; Hardware stack levels used:    1
 39798 ;; Hardware stack levels required when called:   11
 39799 ;; This function calls:
 39800 ;;		_memcpy
 39801 ;; This function is called by:
 39802 ;;		_TCPInit
 39803 ;;		_TCPOpen
 39804 ;;		_TCPIsConnected
 39805 ;;		_TCPDisconnect
 39806 ;;		_TCPClose
 39807 ;;		_TCPFlush
 39808 ;;		_TCPIsPutReady
 39809 ;;		_TCPPutArray
 39810 ;;		_TCPIsGetReady
 39811 ;;		_TCPGetArray
 39812 ;;		_TCPTick
 39813 ;;		_FindMatchingSocket
 39814 ;;		_TCPWasReset
 39815 ;;		_TCPGetRemoteInfo
 39816 ;;		_TCPPut
 39817 ;;		_TCPPutROMArray
 39818 ;;		_TCPGetTxFIFOFull
 39819 ;;		_TCPDiscard
 39820 ;;		_TCPGet
 39821 ;;		_TCPGetRxFIFOFree
 39822 ;;		_TCPPeekArray
 39823 ;;		_TCPFindArrayEx
 39824 ;;		_TCPFindROMArrayEx
 39825 ;;		_TCPAdjustFIFOSize
 39826 ;; This function uses a non-reentrant model
 39827 ;;
 39828                           
 39829                           	psect	text95
 39830  01A07A                     __ptext95:
 39831                           	opt stack 0
 39832  01A07A                     _SyncTCBStub:
 39833                           	opt stack 15
 39834                           
 39835                           ; BSR set to: 1
 39836                           ;incstack = 0
 39837                           ;SyncTCBStub@hTCP stored from wreg
 39838  01A07A  0101               	movlb	1	; () banked
 39839  01A07C  6F20               	movwf	SyncTCBStub@hTCP& (0+255),b
 39840                           
 39841                           ; BSR set to: 1
 39842                           ;tcp.c: 259: if(hCurrentTCP == hTCP)
 39843  01A07E  0101               	movlb	1	; () banked
 39844  01A080  5120               	movf	SyncTCBStub@hTCP& (0+255),w,b
 39845  01A082  0101               	movlb	1	; () banked
 39846  01A084  63FD               	cpfseq	_hCurrentTCP& (0+255),b
 39847  01A086  D001               	goto	l11594
 39848  01A088  0012               	return	
 39849  01A08A                     l11594:
 39850                           
 39851                           ; BSR set to: 1
 39852                           ;tcp.c: 262: if(hCurrentTCP != (0xFE))
 39853  01A08A  0101               	movlb	1	; () banked
 39854  01A08C  51FD               	movf	_hCurrentTCP& (0+255),w,b
 39855  01A08E  0AFE               	xorlw	254
 39856  01A090  B4D8               	btfsc	status,2,c
 39857  01A092  D01D               	goto	l11598
 39858                           
 39859                           ; BSR set to: 1
 39860                           ;tcp.c: 263: {
 39861                           ;tcp.c: 265: memcpy((void*)&TCBStubs[hCurrentTCP], (void*)&MyTCBStub, sizeof(MyTCBStub))
      +                          ;
 39862  01A094  0101               	movlb	1	; () banked
 39863  01A096  51FD               	movf	_hCurrentTCP& (0+255),w,b
 39864  01A098  0D1C               	mullw	28
 39865  01A09A  0102               	movlb	2	; () banked
 39866  01A09C  0E6F               	movlw	low _TCBStubs
 39867  01A09E  24F3               	addwf	prodl,w,c
 39868  01A0A0  0101               	movlb	1	; () banked
 39869  01A0A2  6F14               	movwf	memcpy@d1& (0+255),b
 39870  01A0A4  0102               	movlb	2	; () banked
 39871  01A0A6  0E02               	movlw	high _TCBStubs
 39872  01A0A8  20F4               	addwfc	prodh,w,c
 39873  01A0AA  0101               	movlb	1	; () banked
 39874  01A0AC  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 39875  01A0AE  0101               	movlb	1	; () banked
 39876  01A0B0  0E01               	movlw	high _MyTCBStub
 39877  01A0B2  0101               	movlb	1	; () banked
 39878  01A0B4  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 39879  01A0B6  0101               	movlb	1	; () banked
 39880  01A0B8  0EE0               	movlw	low _MyTCBStub
 39881  01A0BA  0101               	movlb	1	; () banked
 39882  01A0BC  6F16               	movwf	memcpy@s1& (0+255),b
 39883  01A0BE  0E00               	movlw	0
 39884  01A0C0  0101               	movlb	1	; () banked
 39885  01A0C2  6F19               	movwf	(memcpy@n+1)& (0+255),b
 39886  01A0C4  0E1C               	movlw	28
 39887  01A0C6  0101               	movlb	1	; () banked
 39888  01A0C8  6F18               	movwf	memcpy@n& (0+255),b
 39889  01A0CA  ECDC  F0D5         	call	_memcpy	;wreg free
 39890  01A0CE                     l11598:
 39891                           
 39892                           ;tcp.c: 266: }
 39893                           ;tcp.c: 268: hCurrentTCP = hTCP;
 39894  01A0CE  C120  F1FD         	movff	SyncTCBStub@hTCP,_hCurrentTCP
 39895                           
 39896                           ;tcp.c: 270: if(hTCP == (0xFE))
 39897  01A0D2  0101               	movlb	1	; () banked
 39898  01A0D4  5120               	movf	SyncTCBStub@hTCP& (0+255),w,b
 39899  01A0D6  0AFE               	xorlw	254
 39900  01A0D8  B4D8               	btfsc	status,2,c
 39901  01A0DA  0012               	return	
 39902                           
 39903                           ; BSR set to: 1
 39904                           ;tcp.c: 274: memcpy((void*)&MyTCBStub, (void*)&TCBStubs[hTCP], sizeof(MyTCBStub));
 39905                           
 39906                           ; BSR set to: 1
 39907                           
 39908                           ; BSR set to: 1
 39909                           ;tcp.c: 271: return;
 39910  01A0DC  0101               	movlb	1	; () banked
 39911  01A0DE  0E01               	movlw	high _MyTCBStub
 39912  01A0E0  0101               	movlb	1	; () banked
 39913  01A0E2  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 39914  01A0E4  0101               	movlb	1	; () banked
 39915  01A0E6  0EE0               	movlw	low _MyTCBStub
 39916  01A0E8  0101               	movlb	1	; () banked
 39917  01A0EA  6F14               	movwf	memcpy@d1& (0+255),b
 39918  01A0EC  0101               	movlb	1	; () banked
 39919  01A0EE  5120               	movf	SyncTCBStub@hTCP& (0+255),w,b
 39920  01A0F0  0D1C               	mullw	28
 39921  01A0F2  0E6F               	movlw	low _TCBStubs
 39922  01A0F4  0101               	movlb	1	; () banked
 39923  01A0F6  6F1E               	movwf	??_SyncTCBStub& (0+255),b
 39924  01A0F8  0E02               	movlw	high _TCBStubs
 39925  01A0FA  6F1F               	movwf	(??_SyncTCBStub+1)& (0+255),b
 39926  01A0FC  50F3               	movf	prodl,w,c
 39927  01A0FE  0101               	movlb	1	; () banked
 39928  01A100  271E               	addwf	??_SyncTCBStub& (0+255),f,b
 39929  01A102  50F4               	movf	prodh,w,c
 39930  01A104  0101               	movlb	1	; () banked
 39931  01A106  231F               	addwfc	(??_SyncTCBStub+1)& (0+255),f,b
 39932  01A108  C11E  F116         	movff	??_SyncTCBStub,memcpy@s1
 39933  01A10C  C11F  F117         	movff	??_SyncTCBStub+1,memcpy@s1+1
 39934  01A110  0E00               	movlw	0
 39935  01A112  0101               	movlb	1	; () banked
 39936  01A114  6F19               	movwf	(memcpy@n+1)& (0+255),b
 39937  01A116  0E1C               	movlw	28
 39938  01A118  0101               	movlb	1	; () banked
 39939  01A11A  6F18               	movwf	memcpy@n& (0+255),b
 39940  01A11C  ECDC  F0D5         	call	_memcpy	;wreg free
 39941  01A120  0012               	return	
 39942  01A122                     __end_of_SyncTCBStub:
 39943                           	opt stack 0
 39944                           tblptru	equ	0xFF8
 39945                           tblptrh	equ	0xFF7
 39946                           tblptrl	equ	0xFF6
 39947                           tablat	equ	0xFF5
 39948                           prodh	equ	0xFF4
 39949                           prodl	equ	0xFF3
 39950                           intcon	equ	0xFF2
 39951                           intcon2	equ	0xFF1
 39952                           intcon3	equ	0xFF0
 39953                           indf0	equ	0xFEF
 39954                           postinc0	equ	0xFEE
 39955                           fsr0h	equ	0xFEA
 39956                           fsr0l	equ	0xFE9
 39957                           wreg	equ	0xFE8
 39958                           indf1	equ	0xFE7
 39959                           postinc1	equ	0xFE6
 39960                           postdec1	equ	0xFE5
 39961                           fsr1h	equ	0xFE2
 39962                           fsr1l	equ	0xFE1
 39963                           indf2	equ	0xFDF
 39964                           postinc2	equ	0xFDE
 39965                           postdec2	equ	0xFDD
 39966                           fsr2h	equ	0xFDA
 39967                           fsr2l	equ	0xFD9
 39968                           status	equ	0xFD8
 39969                           
 39970 ;; *************** function _GenerateRandomDWORD *****************
 39971 ;; Defined at:
 39972 ;;		line 196 in file "../tcpip/helpers.c"
 39973 ;; Parameters:    Size  Location     Type
 39974 ;;		None
 39975 ;; Auto vars:     Size  Location     Type
 39976 ;;  TMR0LSave       1   41[BANK1 ] unsigned char 
 39977 ;;  TMR0HSave       1   40[BANK1 ] unsigned char 
 39978 ;;  T0CONSave       1   39[BANK1 ] unsigned char 
 39979 ;;  ADCON2Save      1   38[BANK1 ] unsigned char 
 39980 ;;  ADCON0Save      1   37[BANK1 ] unsigned char 
 39981 ;;  randomResult    4   44[BANK1 ] struct .
 39982 ;;  dwTotalTime     4   32[BANK1 ] unsigned long 
 39983 ;;  wTime           2   48[BANK1 ] unsigned int 
 39984 ;;  wLastValue      2   42[BANK1 ] unsigned int 
 39985 ;;  w               2   30[BANK1 ] unsigned int 
 39986 ;;  vBitCount       1   36[BANK1 ] unsigned char 
 39987 ;; Return value:  Size  Location     Type
 39988 ;;                  4   24[BANK1 ] unsigned long 
 39989 ;; Registers used:
 39990 ;;		wreg, status,2, status,0, cstack
 39991 ;; Tracked objects:
 39992 ;;		On entry : 0/0
 39993 ;;		On exit  : 0/0
 39994 ;;		Unchanged: 0/0
 39995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39996 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39997 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39998 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39999 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40000 ;;Total ram usage:       26 bytes
 40001 ;; Hardware stack levels used:    1
 40002 ;; Hardware stack levels required when called:   12
 40003 ;; This function calls:
 40004 ;;		_LFSRRand
 40005 ;;		_LFSRSeedRand
 40006 ;; This function is called by:
 40007 ;;		_StackInit
 40008 ;;		_TCPInit
 40009 ;; This function uses a non-reentrant model
 40010 ;;
 40011                           
 40012                           	psect	text96
 40013  016F8A                     __ptext96:
 40014                           	opt stack 0
 40015  016F8A                     _GenerateRandomDWORD:
 40016                           	opt stack 14
 40017                           
 40018                           ;helpers.c: 198: uint8_t vBitCount;
 40019                           ;helpers.c: 199: uint16_t w, wTime, wLastValue;
 40020                           ;helpers.c: 200: uint32_t dwTotalTime;
 40021                           ;helpers.c: 201: union
 40022                           ;helpers.c: 202: {
 40023                           ;helpers.c: 203: uint32_t dw;
 40024                           ;helpers.c: 204: uint16_t w[2];
 40025                           ;helpers.c: 205: } randomResult;
 40026                           ;helpers.c: 208: {
 40027                           ;helpers.c: 209: uint8_t ADCON0Save, ADCON2Save;
 40028                           ;helpers.c: 210: uint8_t T0CONSave, TMR0HSave, TMR0LSave;
 40029                           ;helpers.c: 213: ADCON0Save = ADCON0;
 40030                           
 40031                           ;incstack = 0
 40032  016F8A  CFC2 F125          	movff	4034,GenerateRandomDWORD@ADCON0Save	;volatile
 40033                           
 40034                           ;helpers.c: 214: ADCON2Save = ADCON2;
 40035  016F8E  CFC0 F126          	movff	4032,GenerateRandomDWORD@ADCON2Save	;volatile
 40036                           
 40037                           ;helpers.c: 215: T0CONSave = T0CON;
 40038  016F92  CFD5 F127          	movff	4053,GenerateRandomDWORD@T0CONSave	;volatile
 40039                           
 40040                           ;helpers.c: 216: TMR0LSave = TMR0L;
 40041  016F96  CFD6 F129          	movff	4054,GenerateRandomDWORD@TMR0LSave	;volatile
 40042                           
 40043                           ;helpers.c: 217: TMR0HSave = TMR0H;
 40044  016F9A  CFD7 F128          	movff	4055,GenerateRandomDWORD@TMR0HSave	;volatile
 40045                           
 40046                           ;helpers.c: 220: ADCON0 = 0x01;
 40047  016F9E  0E01               	movlw	1
 40048  016FA0  6EC2               	movwf	4034,c	;volatile
 40049                           
 40050                           ;helpers.c: 221: ADCON2 = 0x3F;
 40051  016FA2  0E3F               	movlw	63
 40052  016FA4  6EC0               	movwf	4032,c	;volatile
 40053                           
 40054                           ;helpers.c: 222: T0CON = 0x88;
 40055  016FA6  0E88               	movlw	136
 40056  016FA8  6ED5               	movwf	4053,c	;volatile
 40057                           
 40058                           ;helpers.c: 223: vBitCount = 0;
 40059  016FAA  0E00               	movlw	0
 40060  016FAC  0101               	movlb	1	; () banked
 40061  016FAE  6F24               	movwf	GenerateRandomDWORD@vBitCount& (0+255),b
 40062                           
 40063                           ;helpers.c: 224: dwTotalTime = 0;
 40064  016FB0  0E00               	movlw	0
 40065  016FB2  0101               	movlb	1	; () banked
 40066  016FB4  6F20               	movwf	GenerateRandomDWORD@dwTotalTime& (0+255),b
 40067  016FB6  0E00               	movlw	0
 40068  016FB8  0101               	movlb	1	; () banked
 40069  016FBA  6F21               	movwf	(GenerateRandomDWORD@dwTotalTime+1)& (0+255),b
 40070  016FBC  0E00               	movlw	0
 40071  016FBE  0101               	movlb	1	; () banked
 40072  016FC0  6F22               	movwf	(GenerateRandomDWORD@dwTotalTime+2)& (0+255),b
 40073  016FC2  0E00               	movlw	0
 40074  016FC4  0101               	movlb	1	; () banked
 40075  016FC6  6F23               	movwf	(GenerateRandomDWORD@dwTotalTime+3)& (0+255),b
 40076                           
 40077                           ;helpers.c: 225: wLastValue = 0;
 40078  016FC8  0E00               	movlw	0
 40079  016FCA  0101               	movlb	1	; () banked
 40080  016FCC  6F2B               	movwf	(GenerateRandomDWORD@wLastValue+1)& (0+255),b
 40081  016FCE  0E00               	movlw	0
 40082  016FD0  0101               	movlb	1	; () banked
 40083  016FD2  6F2A               	movwf	GenerateRandomDWORD@wLastValue& (0+255),b
 40084                           
 40085                           ; BSR set to: 1
 40086                           ;helpers.c: 226: randomResult.dw = LFSRRand();
 40087  016FD4  EC88  F0CB         	call	_LFSRRand	;wreg free
 40088  016FD8  0101               	movlb	1	; () banked
 40089  016FDA  C100  F12C         	movff	?_LFSRRand,GenerateRandomDWORD@randomResult
 40090  016FDE  0101               	movlb	1	; () banked
 40091  016FE0  C101  F12D         	movff	?_LFSRRand+1,GenerateRandomDWORD@randomResult+1
 40092  016FE4  0101               	movlb	1	; () banked
 40093  016FE6  6B2E               	clrf	(GenerateRandomDWORD@randomResult+2)& (0+255),b
 40094  016FE8  0101               	movlb	1	; () banked
 40095  016FEA  6B2F               	clrf	(GenerateRandomDWORD@randomResult+3)& (0+255),b
 40096  016FEC                     l11546:
 40097                           
 40098                           ; BSR set to: 1
 40099                           ;helpers.c: 228: {
 40100                           ;helpers.c: 230: TMR0H = 0x00;
 40101  016FEC  0E00               	movlw	0
 40102  016FEE  6ED7               	movwf	4055,c	;volatile
 40103                           
 40104                           ; BSR set to: 1
 40105                           ;helpers.c: 231: TMR0L = 0x00;
 40106  016FF0  0E00               	movlw	0
 40107  016FF2  6ED6               	movwf	4054,c	;volatile
 40108                           
 40109                           ; BSR set to: 1
 40110                           ;helpers.c: 232: ADCON0bits.GO = 1;
 40111  016FF4  82C2               	bsf	4034,1,c	;volatile
 40112  016FF6  0004               	clrwdt		;# 
 40113  016FF8                     l542:
 40114  016FF8  B2C2               	btfsc	4034,1,c	;volatile
 40115  016FFA  D7FE               	goto	l542
 40116                           
 40117                           ;helpers.c: 235: ((uint8_t*)&wTime)[0] = TMR0L;
 40118  016FFC  CFD6 F130          	movff	4054,GenerateRandomDWORD@wTime	;volatile
 40119                           
 40120                           ;helpers.c: 236: ((uint8_t*)&wTime)[1] = TMR0H;
 40121  017000  CFD7 F131          	movff	4055,GenerateRandomDWORD@wTime+1	;volatile
 40122                           
 40123                           ;helpers.c: 237: w = LFSRRand();
 40124  017004  EC88  F0CB         	call	_LFSRRand	;wreg free
 40125  017008  0101               	movlb	1	; () banked
 40126  01700A  C100  F11E         	movff	?_LFSRRand,GenerateRandomDWORD@w
 40127  01700E  0101               	movlb	1	; () banked
 40128  017010  C101  F11F         	movff	?_LFSRRand+1,GenerateRandomDWORD@w+1
 40129                           
 40130                           ; BSR set to: 1
 40131                           ;helpers.c: 240: dwTotalTime += wTime;
 40132  017014  0101               	movlb	1	; () banked
 40133  017016  5130               	movf	GenerateRandomDWORD@wTime& (0+255),w,b
 40134  017018  0101               	movlb	1	; () banked
 40135  01701A  2720               	addwf	GenerateRandomDWORD@dwTotalTime& (0+255),f,b
 40136  01701C  0101               	movlb	1	; () banked
 40137  01701E  5131               	movf	(GenerateRandomDWORD@wTime+1)& (0+255),w,b
 40138  017020  0101               	movlb	1	; () banked
 40139  017022  2321               	addwfc	(GenerateRandomDWORD@dwTotalTime+1)& (0+255),f,b
 40140  017024  0E00               	movlw	0
 40141  017026  0101               	movlb	1	; () banked
 40142  017028  2322               	addwfc	(GenerateRandomDWORD@dwTotalTime+2)& (0+255),f,b
 40143  01702A  0E00               	movlw	0
 40144  01702C  0101               	movlb	1	; () banked
 40145  01702E  2323               	addwfc	(GenerateRandomDWORD@dwTotalTime+3)& (0+255),f,b
 40146                           
 40147                           ; BSR set to: 1
 40148                           ;helpers.c: 241: if(dwTotalTime >= ((40000000ul)/4))
 40149  017030  0E80               	movlw	128
 40150  017032  0101               	movlb	1	; () banked
 40151  017034  5D20               	subwf	GenerateRandomDWORD@dwTotalTime& (0+255),w,b
 40152  017036  0E96               	movlw	150
 40153  017038  0101               	movlb	1	; () banked
 40154  01703A  5921               	subwfb	(GenerateRandomDWORD@dwTotalTime+1)& (0+255),w,b
 40155  01703C  0E98               	movlw	152
 40156  01703E  0101               	movlb	1	; () banked
 40157  017040  5922               	subwfb	(GenerateRandomDWORD@dwTotalTime+2)& (0+255),w,b
 40158  017042  0E00               	movlw	0
 40159  017044  0101               	movlb	1	; () banked
 40160  017046  5923               	subwfb	(GenerateRandomDWORD@dwTotalTime+3)& (0+255),w,b
 40161  017048  A0D8               	btfss	status,0,c
 40162  01704A  D015               	goto	l11560
 40163                           
 40164                           ; BSR set to: 1
 40165                           ;helpers.c: 242: {
 40166                           ;helpers.c: 243: randomResult.w[0] ^= LFSRRand();
 40167  01704C  EC88  F0CB         	call	_LFSRRand	;wreg free
 40168  017050  0101               	movlb	1	; () banked
 40169  017052  5100               	movf	?_LFSRRand& (0+255),w,b
 40170  017054  0101               	movlb	1	; () banked
 40171  017056  1B2C               	xorwf	GenerateRandomDWORD@randomResult& (0+255),f,b
 40172  017058  0101               	movlb	1	; () banked
 40173  01705A  5101               	movf	(?_LFSRRand+1)& (0+255),w,b
 40174  01705C  0101               	movlb	1	; () banked
 40175  01705E  1B2D               	xorwf	(GenerateRandomDWORD@randomResult+1)& (0+255),f,b
 40176                           
 40177                           ;helpers.c: 244: randomResult.w[1] ^= LFSRRand();
 40178  017060  EC88  F0CB         	call	_LFSRRand	;wreg free
 40179  017064  0101               	movlb	1	; () banked
 40180  017066  5100               	movf	?_LFSRRand& (0+255),w,b
 40181  017068  0101               	movlb	1	; () banked
 40182  01706A  1B2E               	xorwf	(GenerateRandomDWORD@randomResult+2)& (0+255),f,b
 40183  01706C  0101               	movlb	1	; () banked
 40184  01706E  5101               	movf	(?_LFSRRand+1)& (0+255),w,b
 40185  017070  0101               	movlb	1	; () banked
 40186  017072  1B2F               	xorwf	(GenerateRandomDWORD@randomResult+3)& (0+255),f,b
 40187                           
 40188                           ;helpers.c: 245: break;
 40189  017074  D04A               	goto	l546
 40190  017076                     l11560:
 40191                           
 40192                           ; BSR set to: 1
 40193                           ;helpers.c: 246: }
 40194                           ;helpers.c: 249: if(wLastValue == wTime)
 40195  017076  0101               	movlb	1	; () banked
 40196  017078  5131               	movf	(GenerateRandomDWORD@wTime+1)& (0+255),w,b
 40197  01707A  0101               	movlb	1	; () banked
 40198  01707C  192B               	xorwf	(GenerateRandomDWORD@wLastValue+1)& (0+255),w,b
 40199  01707E  E104               	bnz	u12575
 40200  017080  0101               	movlb	1	; () banked
 40201  017082  5130               	movf	GenerateRandomDWORD@wTime& (0+255),w,b
 40202  017084  0101               	movlb	1	; () banked
 40203  017086  192A               	xorwf	GenerateRandomDWORD@wLastValue& (0+255),w,b
 40204  017088                     u12575:
 40205  017088  B4D8               	btfsc	status,2,c
 40206  01708A  D7B0               	goto	l11546
 40207                           
 40208                           ; BSR set to: 1
 40209                           ;helpers.c: 253: LFSRSeedRand(w + (wLastValue - wTime));
 40210                           
 40211                           ; BSR set to: 1
 40212                           
 40213                           ; BSR set to: 1
 40214                           ;helpers.c: 250: continue;
 40215  01708C  0101               	movlb	1	; () banked
 40216  01708E  C130  F11C         	movff	GenerateRandomDWORD@wTime,??_GenerateRandomDWORD
 40217  017092  0101               	movlb	1	; () banked
 40218  017094  C131  F11D         	movff	GenerateRandomDWORD@wTime+1,??_GenerateRandomDWORD+1
 40219  017098  0101               	movlb	1	; () banked
 40220  01709A  1F1C               	comf	??_GenerateRandomDWORD& (0+255),f,b
 40221  01709C  1F1D               	comf	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40222  01709E  4B1C               	infsnz	??_GenerateRandomDWORD& (0+255),f,b
 40223  0170A0  2B1D               	incf	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40224  0170A2  0101               	movlb	1	; () banked
 40225  0170A4  512A               	movf	GenerateRandomDWORD@wLastValue& (0+255),w,b
 40226  0170A6  0101               	movlb	1	; () banked
 40227  0170A8  271C               	addwf	??_GenerateRandomDWORD& (0+255),f,b
 40228  0170AA  0101               	movlb	1	; () banked
 40229  0170AC  512B               	movf	(GenerateRandomDWORD@wLastValue+1)& (0+255),w,b
 40230  0170AE  0101               	movlb	1	; () banked
 40231  0170B0  231D               	addwfc	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40232  0170B2  0101               	movlb	1	; () banked
 40233  0170B4  511E               	movf	GenerateRandomDWORD@w& (0+255),w,b
 40234  0170B6  0101               	movlb	1	; () banked
 40235  0170B8  271C               	addwf	??_GenerateRandomDWORD& (0+255),f,b
 40236  0170BA  0101               	movlb	1	; () banked
 40237  0170BC  511F               	movf	(GenerateRandomDWORD@w+1)& (0+255),w,b
 40238  0170BE  0101               	movlb	1	; () banked
 40239  0170C0  231D               	addwfc	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40240  0170C2  0101               	movlb	1	; () banked
 40241  0170C4  C11C  F10F         	movff	??_GenerateRandomDWORD,LFSRSeedRand@dwSeed
 40242  0170C8  0101               	movlb	1	; () banked
 40243  0170CA  C11D  F110         	movff	??_GenerateRandomDWORD+1,LFSRSeedRand@dwSeed+1
 40244  0170CE  0101               	movlb	1	; () banked
 40245  0170D0  6B11               	clrf	(LFSRSeedRand@dwSeed+2)& (0+255),b
 40246  0170D2  0101               	movlb	1	; () banked
 40247  0170D4  6B12               	clrf	(LFSRSeedRand@dwSeed+3)& (0+255),b
 40248  0170D6  EC7B  F0D6         	call	_LFSRSeedRand	;wreg free
 40249                           
 40250                           ;helpers.c: 254: wLastValue = wTime;
 40251  0170DA  C130  F12A         	movff	GenerateRandomDWORD@wTime,GenerateRandomDWORD@wLastValue
 40252  0170DE  C131  F12B         	movff	GenerateRandomDWORD@wTime+1,GenerateRandomDWORD@wLastValue+1
 40253                           
 40254                           ;helpers.c: 257: randomResult.dw <<= 1;
 40255  0170E2  0101               	movlb	1	; () banked
 40256  0170E4  90D8               	bcf	status,0,c
 40257  0170E6  0101               	movlb	1	; () banked
 40258  0170E8  372C               	rlcf	GenerateRandomDWORD@randomResult& (0+255),f,b
 40259  0170EA  0101               	movlb	1	; () banked
 40260  0170EC  372D               	rlcf	(GenerateRandomDWORD@randomResult+1)& (0+255),f,b
 40261  0170EE  0101               	movlb	1	; () banked
 40262  0170F0  372E               	rlcf	(GenerateRandomDWORD@randomResult+2)& (0+255),f,b
 40263  0170F2  0101               	movlb	1	; () banked
 40264  0170F4  372F               	rlcf	(GenerateRandomDWORD@randomResult+3)& (0+255),f,b
 40265                           
 40266                           ; BSR set to: 1
 40267                           ;helpers.c: 258: if(LFSRRand() & 0x0080)
 40268  0170F6  EC88  F0CB         	call	_LFSRRand	;wreg free
 40269  0170FA  0101               	movlb	1	; () banked
 40270  0170FC  AF00               	btfss	?_LFSRRand& (0+255),7,b
 40271  0170FE  D002               	goto	l11574
 40272                           
 40273                           ; BSR set to: 1
 40274                           ;helpers.c: 259: randomResult.w[0] |= 0x1;
 40275  017100  0101               	movlb	1	; () banked
 40276  017102  812C               	bsf	GenerateRandomDWORD@randomResult& (0+255),0,b
 40277  017104                     l11574:
 40278                           
 40279                           ; BSR set to: 1
 40280                           ;helpers.c: 262: if(++vBitCount == 0u)
 40281  017104  0101               	movlb	1	; () banked
 40282  017106  3F24               	incfsz	GenerateRandomDWORD@vBitCount& (0+255),f,b
 40283  017108  D771               	goto	l11546
 40284  01710A                     l546:
 40285                           
 40286                           ; BSR set to: 1
 40287                           ;helpers.c: 264: }
 40288                           ;helpers.c: 267: ADCON0 = ADCON0Save;
 40289  01710A  C125  FFC2         	movff	GenerateRandomDWORD@ADCON0Save,4034	;volatile
 40290                           
 40291                           ;helpers.c: 268: ADCON2 = ADCON2Save;
 40292  01710E  C126  FFC0         	movff	GenerateRandomDWORD@ADCON2Save,4032	;volatile
 40293                           
 40294                           ;helpers.c: 269: TMR0H = TMR0HSave;
 40295  017112  C128  FFD7         	movff	GenerateRandomDWORD@TMR0HSave,4055	;volatile
 40296                           
 40297                           ;helpers.c: 270: TMR0L = TMR0LSave;
 40298  017116  C129  FFD6         	movff	GenerateRandomDWORD@TMR0LSave,4054	;volatile
 40299                           
 40300                           ;helpers.c: 271: T0CON = T0CONSave;
 40301  01711A  C127  FFD5         	movff	GenerateRandomDWORD@T0CONSave,4053	;volatile
 40302                           
 40303                           ;helpers.c: 272: }
 40304                           ;helpers.c: 352: return randomResult.dw;
 40305  01711E  C12C  F118         	movff	GenerateRandomDWORD@randomResult,?_GenerateRandomDWORD
 40306  017122  C12D  F119         	movff	GenerateRandomDWORD@randomResult+1,?_GenerateRandomDWORD+1
 40307  017126  C12E  F11A         	movff	GenerateRandomDWORD@randomResult+2,?_GenerateRandomDWORD+2
 40308  01712A  C12F  F11B         	movff	GenerateRandomDWORD@randomResult+3,?_GenerateRandomDWORD+3
 40309                           
 40310                           ; BSR set to: 1
 40311  01712E  0012               	return	
 40312  017130                     __end_of_GenerateRandomDWORD:
 40313                           	opt stack 0
 40314                           tblptru	equ	0xFF8
 40315                           tblptrh	equ	0xFF7
 40316                           tblptrl	equ	0xFF6
 40317                           tablat	equ	0xFF5
 40318                           prodh	equ	0xFF4
 40319                           prodl	equ	0xFF3
 40320                           intcon	equ	0xFF2
 40321                           intcon2	equ	0xFF1
 40322                           intcon3	equ	0xFF0
 40323                           indf0	equ	0xFEF
 40324                           postinc0	equ	0xFEE
 40325                           fsr0h	equ	0xFEA
 40326                           fsr0l	equ	0xFE9
 40327                           wreg	equ	0xFE8
 40328                           indf1	equ	0xFE7
 40329                           postinc1	equ	0xFE6
 40330                           postdec1	equ	0xFE5
 40331                           fsr1h	equ	0xFE2
 40332                           fsr1l	equ	0xFE1
 40333                           indf2	equ	0xFDF
 40334                           postinc2	equ	0xFDE
 40335                           postdec2	equ	0xFDD
 40336                           fsr2h	equ	0xFDA
 40337                           fsr2l	equ	0xFD9
 40338                           status	equ	0xFD8
 40339                           
 40340 ;; *************** function _LFSRSeedRand *****************
 40341 ;; Defined at:
 40342 ;;		line 84 in file "../tcpip/helpers.c"
 40343 ;; Parameters:    Size  Location     Type
 40344 ;;  dwSeed          4   15[BANK1 ] unsigned long 
 40345 ;; Auto vars:     Size  Location     Type
 40346 ;;  dwOldSeed       4   19[BANK1 ] unsigned long 
 40347 ;;  i               1   23[BANK1 ] unsigned char 
 40348 ;; Return value:  Size  Location     Type
 40349 ;;                  4   15[BANK1 ] unsigned long 
 40350 ;; Registers used:
 40351 ;;		wreg, status,2, status,0, cstack
 40352 ;; Tracked objects:
 40353 ;;		On entry : 0/0
 40354 ;;		On exit  : 0/0
 40355 ;;		Unchanged: 0/0
 40356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40357 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40358 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40360 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40361 ;;Total ram usage:        9 bytes
 40362 ;; Hardware stack levels used:    1
 40363 ;; Hardware stack levels required when called:   11
 40364 ;; This function calls:
 40365 ;;		_LFSRRand
 40366 ;; This function is called by:
 40367 ;;		_GenerateRandomDWORD
 40368 ;;		_StackInit
 40369 ;; This function uses a non-reentrant model
 40370 ;;
 40371                           
 40372                           	psect	text97
 40373  01ACF6                     __ptext97:
 40374                           	opt stack 0
 40375  01ACF6                     _LFSRSeedRand:
 40376                           	opt stack 14
 40377                           
 40378                           ;helpers.c: 86: uint32_t dwOldSeed;
 40379                           ;helpers.c: 87: uint8_t i;
 40380                           ;helpers.c: 90: dwOldSeed = dwLFSRRandSeed;
 40381                           
 40382                           ; BSR set to: 1
 40383                           ;incstack = 0
 40384  01ACF6  C0F3  F113         	movff	_dwLFSRRandSeed,LFSRSeedRand@dwOldSeed
 40385  01ACFA  C0F4  F114         	movff	_dwLFSRRandSeed+1,LFSRSeedRand@dwOldSeed+1
 40386  01ACFE  C0F5  F115         	movff	_dwLFSRRandSeed+2,LFSRSeedRand@dwOldSeed+2
 40387  01AD02  C0F6  F116         	movff	_dwLFSRRandSeed+3,LFSRSeedRand@dwOldSeed+3
 40388                           
 40389                           ;helpers.c: 94: if(dwSeed == 0u)
 40390  01AD06  0101               	movlb	1	; () banked
 40391  01AD08  5112               	movf	(LFSRSeedRand@dwSeed+3)& (0+255),w,b
 40392  01AD0A  110F               	iorwf	LFSRSeedRand@dwSeed& (0+255),w,b
 40393  01AD0C  1110               	iorwf	(LFSRSeedRand@dwSeed+1)& (0+255),w,b
 40394  01AD0E  1111               	iorwf	(LFSRSeedRand@dwSeed+2)& (0+255),w,b
 40395  01AD10  A4D8               	btfss	status,2,c
 40396  01AD12  D00C               	goto	l10914
 40397                           
 40398                           ; BSR set to: 1
 40399                           ;helpers.c: 95: dwSeed = 1;
 40400  01AD14  0E01               	movlw	1
 40401  01AD16  0101               	movlb	1	; () banked
 40402  01AD18  6F0F               	movwf	LFSRSeedRand@dwSeed& (0+255),b
 40403  01AD1A  0E00               	movlw	0
 40404  01AD1C  0101               	movlb	1	; () banked
 40405  01AD1E  6F10               	movwf	(LFSRSeedRand@dwSeed+1)& (0+255),b
 40406  01AD20  0E00               	movlw	0
 40407  01AD22  0101               	movlb	1	; () banked
 40408  01AD24  6F11               	movwf	(LFSRSeedRand@dwSeed+2)& (0+255),b
 40409  01AD26  0E00               	movlw	0
 40410  01AD28  0101               	movlb	1	; () banked
 40411  01AD2A  6F12               	movwf	(LFSRSeedRand@dwSeed+3)& (0+255),b
 40412  01AD2C                     l10914:
 40413                           
 40414                           ; BSR set to: 1
 40415                           ;helpers.c: 98: dwLFSRRandSeed = dwSeed;
 40416  01AD2C  C10F  F0F3         	movff	LFSRSeedRand@dwSeed,_dwLFSRRandSeed
 40417  01AD30  C110  F0F4         	movff	LFSRSeedRand@dwSeed+1,_dwLFSRRandSeed+1
 40418  01AD34  C111  F0F5         	movff	LFSRSeedRand@dwSeed+2,_dwLFSRRandSeed+2
 40419  01AD38  C112  F0F6         	movff	LFSRSeedRand@dwSeed+3,_dwLFSRRandSeed+3
 40420                           
 40421                           ;helpers.c: 102: for(i = 0; i < 16; i++)
 40422  01AD3C  0E00               	movlw	0
 40423  01AD3E  0101               	movlb	1	; () banked
 40424  01AD40  6F17               	movwf	LFSRSeedRand@i& (0+255),b
 40425                           
 40426                           ; BSR set to: 1
 40427  01AD42  0E0F               	movlw	15
 40428  01AD44  0101               	movlb	1	; () banked
 40429  01AD46  6517               	cpfsgt	LFSRSeedRand@i& (0+255),b
 40430  01AD48  D001               	goto	l10920
 40431  01AD4A  0012               	return	
 40432  01AD4C                     l10920:
 40433                           
 40434                           ; BSR set to: 1
 40435                           ;helpers.c: 103: LFSRRand();
 40436  01AD4C  EC88  F0CB         	call	_LFSRRand	;wreg free
 40437  01AD50  0101               	movlb	1	; () banked
 40438  01AD52  2B17               	incf	LFSRSeedRand@i& (0+255),f,b
 40439                           
 40440                           ; BSR set to: 1
 40441  01AD54  0E0F               	movlw	15
 40442  01AD56  0101               	movlb	1	; () banked
 40443  01AD58  6517               	cpfsgt	LFSRSeedRand@i& (0+255),b
 40444  01AD5A  D7F8               	goto	l10920
 40445  01AD5C  0012               	return	
 40446  01AD5E                     __end_of_LFSRSeedRand:
 40447                           	opt stack 0
 40448                           tblptru	equ	0xFF8
 40449                           tblptrh	equ	0xFF7
 40450                           tblptrl	equ	0xFF6
 40451                           tablat	equ	0xFF5
 40452                           prodh	equ	0xFF4
 40453                           prodl	equ	0xFF3
 40454                           intcon	equ	0xFF2
 40455                           intcon2	equ	0xFF1
 40456                           intcon3	equ	0xFF0
 40457                           indf0	equ	0xFEF
 40458                           postinc0	equ	0xFEE
 40459                           fsr0h	equ	0xFEA
 40460                           fsr0l	equ	0xFE9
 40461                           wreg	equ	0xFE8
 40462                           indf1	equ	0xFE7
 40463                           postinc1	equ	0xFE6
 40464                           postdec1	equ	0xFE5
 40465                           fsr1h	equ	0xFE2
 40466                           fsr1l	equ	0xFE1
 40467                           indf2	equ	0xFDF
 40468                           postinc2	equ	0xFDE
 40469                           postdec2	equ	0xFDD
 40470                           fsr2h	equ	0xFDA
 40471                           fsr2l	equ	0xFD9
 40472                           status	equ	0xFD8
 40473                           
 40474 ;; *************** function _CloseSocket *****************
 40475 ;; Defined at:
 40476 ;;		line 3395 in file "../tcpip/tcp.c"
 40477 ;; Parameters:    Size  Location     Type
 40478 ;;		None
 40479 ;; Auto vars:     Size  Location     Type
 40480 ;;		None
 40481 ;; Return value:  Size  Location     Type
 40482 ;;		None               void
 40483 ;; Registers used:
 40484 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40485 ;; Tracked objects:
 40486 ;;		On entry : 0/0
 40487 ;;		On exit  : 0/0
 40488 ;;		Unchanged: 0/0
 40489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40491 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40493 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40494 ;;Total ram usage:        2 bytes
 40495 ;; Hardware stack levels used:    1
 40496 ;; Hardware stack levels required when called:   14
 40497 ;; This function calls:
 40498 ;;		_LFSRRand
 40499 ;;		_SyncTCB
 40500 ;; This function is called by:
 40501 ;;		_TCPInit
 40502 ;;		_TCPDisconnect
 40503 ;;		_TCPTick
 40504 ;;		_HandleTCPSeg
 40505 ;; This function uses a non-reentrant model
 40506 ;;
 40507                           
 40508                           	psect	text98
 40509  019BFA                     __ptext98:
 40510                           	opt stack 0
 40511  019BFA                     _CloseSocket:
 40512                           	opt stack 12
 40513                           
 40514                           ;tcp.c: 3397: SyncTCB();
 40515                           
 40516                           ; BSR set to: 1
 40517                           ;incstack = 0
 40518  019BFA  EC1D  F0CB         	call	_SyncTCB	;wreg free
 40519                           
 40520                           ;tcp.c: 3399: MyTCBStub.remoteHash.Val = MyTCB.localPort.Val;
 40521  019BFE  C1C9  F1F9         	movff	_MyTCB+16,_MyTCBStub+25
 40522  019C02  C1CA  F1FA         	movff	_MyTCB+17,_MyTCBStub+26
 40523                           
 40524                           ;tcp.c: 3400: MyTCBStub.txHead = MyTCBStub.bufferTxStart;
 40525  019C06  C1E0  F1E6         	movff	_MyTCBStub,_MyTCBStub+6
 40526  019C0A  C1E1  F1E7         	movff	_MyTCBStub+1,_MyTCBStub+7
 40527                           
 40528                           ;tcp.c: 3401: MyTCBStub.txTail = MyTCBStub.bufferTxStart;
 40529  019C0E  C1E0  F1E8         	movff	_MyTCBStub,_MyTCBStub+8
 40530  019C12  C1E1  F1E9         	movff	_MyTCBStub+1,_MyTCBStub+9
 40531                           
 40532                           ;tcp.c: 3402: MyTCBStub.rxHead = MyTCBStub.bufferRxStart;
 40533  019C16  C1E2  F1EA         	movff	_MyTCBStub+2,_MyTCBStub+10
 40534  019C1A  C1E3  F1EB         	movff	_MyTCBStub+3,_MyTCBStub+11
 40535                           
 40536                           ;tcp.c: 3403: MyTCBStub.rxTail = MyTCBStub.bufferRxStart;
 40537  019C1E  C1E2  F1EC         	movff	_MyTCBStub+2,_MyTCBStub+12
 40538  019C22  C1E3  F1ED         	movff	_MyTCBStub+3,_MyTCBStub+13
 40539                           
 40540                           ;tcp.c: 3404: MyTCBStub.smState = MyTCBStub.Flags.bServer ? TCP_LISTEN : TCP_CLOSED;
 40541  019C26  0101               	movlb	1	; () banked
 40542  019C28  B7F7               	btfsc	(_MyTCBStub+23)& (0+255),3,b
 40543  019C2A  D005               	goto	l11630
 40544                           
 40545                           ; BSR set to: 1
 40546  019C2C  0E00               	movlw	0
 40547  019C2E  0101               	movlb	1	; () banked
 40548  019C30  6F29               	movwf	(_CloseSocket$7622+1)& (0+255),b
 40549  019C32  0E0D               	movlw	13
 40550  019C34  D004               	goto	L42
 40551  019C36                     l11630:
 40552                           
 40553                           ; BSR set to: 1
 40554  019C36  0E00               	movlw	0
 40555  019C38  0101               	movlb	1	; () banked
 40556  019C3A  6F29               	movwf	(_CloseSocket$7622+1)& (0+255),b
 40557  019C3C  0E04               	movlw	4
 40558  019C3E                     L42:
 40559  019C3E  0101               	movlb	1	; () banked
 40560  019C40  6F28               	movwf	_CloseSocket$7622& (0+255),b
 40561                           
 40562                           ; BSR set to: 1
 40563                           
 40564                           ; BSR set to: 1
 40565  019C42  C128  F1F6         	movff	_CloseSocket$7622,_MyTCBStub+22
 40566                           
 40567                           ; BSR set to: 1
 40568                           ;tcp.c: 3405: MyTCBStub.Flags.vUnackedKeepalives = 0;
 40569  019C46  0101               	movlb	1	; () banked
 40570  019C48  91F7               	bcf	(_MyTCBStub+23)& (0+255),0,b
 40571  019C4A  0101               	movlb	1	; () banked
 40572  019C4C  93F7               	bcf	(_MyTCBStub+23)& (0+255),1,b
 40573  019C4E  0101               	movlb	1	; () banked
 40574  019C50  95F7               	bcf	(_MyTCBStub+23)& (0+255),2,b
 40575                           
 40576                           ; BSR set to: 1
 40577                           ;tcp.c: 3406: MyTCBStub.Flags.bTimerEnabled = 0;
 40578  019C52  0101               	movlb	1	; () banked
 40579  019C54  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 40580                           
 40581                           ; BSR set to: 1
 40582                           ;tcp.c: 3407: MyTCBStub.Flags.bTimer2Enabled = 0;
 40583  019C56  0101               	movlb	1	; () banked
 40584  019C58  9BF7               	bcf	(_MyTCBStub+23)& (0+255),5,b
 40585                           
 40586                           ; BSR set to: 1
 40587                           ;tcp.c: 3408: MyTCBStub.Flags.bDelayedACKTimerEnabled = 0;
 40588  019C5A  0101               	movlb	1	; () banked
 40589  019C5C  9DF7               	bcf	(_MyTCBStub+23)& (0+255),6,b
 40590                           
 40591                           ; BSR set to: 1
 40592                           ;tcp.c: 3409: MyTCBStub.Flags.bOneSegmentReceived = 0;
 40593  019C5E  0101               	movlb	1	; () banked
 40594  019C60  9FF7               	bcf	(_MyTCBStub+23)& (0+255),7,b
 40595                           
 40596                           ; BSR set to: 1
 40597                           ;tcp.c: 3410: MyTCBStub.Flags.bHalfFullFlush = 0;
 40598  019C62  0101               	movlb	1	; () banked
 40599  019C64  91F8               	bcf	(_MyTCBStub+24)& (0+255),0,b
 40600                           
 40601                           ; BSR set to: 1
 40602                           ;tcp.c: 3411: MyTCBStub.Flags.bTXASAP = 0;
 40603  019C66  0101               	movlb	1	; () banked
 40604  019C68  93F8               	bcf	(_MyTCBStub+24)& (0+255),1,b
 40605                           
 40606                           ; BSR set to: 1
 40607                           ;tcp.c: 3412: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 0;
 40608  019C6A  0101               	movlb	1	; () banked
 40609  019C6C  95F8               	bcf	(_MyTCBStub+24)& (0+255),2,b
 40610                           
 40611                           ; BSR set to: 1
 40612                           ;tcp.c: 3413: MyTCBStub.Flags.bTXFIN = 0;
 40613  019C6E  0101               	movlb	1	; () banked
 40614  019C70  97F8               	bcf	(_MyTCBStub+24)& (0+255),3,b
 40615                           
 40616                           ; BSR set to: 1
 40617                           ;tcp.c: 3414: MyTCBStub.Flags.bSocketReset = 1;
 40618  019C72  0101               	movlb	1	; () banked
 40619  019C74  89F8               	bsf	(_MyTCBStub+24)& (0+255),4,b
 40620                           
 40621                           ; BSR set to: 1
 40622                           ;tcp.c: 3438: MyTCB.flags.bFINSent = 0;
 40623  019C76  0101               	movlb	1	; () banked
 40624  019C78  91DB               	bcf	(_MyTCB+34)& (0+255),0,b
 40625                           
 40626                           ; BSR set to: 1
 40627                           ;tcp.c: 3439: MyTCB.flags.bSYNSent = 0;
 40628  019C7A  0101               	movlb	1	; () banked
 40629  019C7C  93DB               	bcf	(_MyTCB+34)& (0+255),1,b
 40630                           
 40631                           ; BSR set to: 1
 40632                           ;tcp.c: 3440: MyTCB.flags.bRXNoneACKed1 = 0;
 40633  019C7E  0101               	movlb	1	; () banked
 40634  019C80  97DB               	bcf	(_MyTCB+34)& (0+255),3,b
 40635                           
 40636                           ; BSR set to: 1
 40637                           ;tcp.c: 3441: MyTCB.flags.bRXNoneACKed2 = 0;
 40638  019C82  0101               	movlb	1	; () banked
 40639  019C84  99DB               	bcf	(_MyTCB+34)& (0+255),4,b
 40640                           
 40641                           ; BSR set to: 1
 40642                           ;tcp.c: 3442: MyTCB.txUnackedTail = MyTCBStub.bufferTxStart;
 40643  019C86  C1E0  F1C5         	movff	_MyTCBStub,_MyTCB+12
 40644  019C8A  C1E1  F1C6         	movff	_MyTCBStub+1,_MyTCB+13
 40645                           
 40646                           ; BSR set to: 1
 40647                           ;tcp.c: 3443: ((TCPIP_UINT32_VAL*)(&MyTCB.MySEQ))->w[0] = LFSRRand();
 40648  019C8E  EC88  F0CB         	call	_LFSRRand	;wreg free
 40649  019C92  0101               	movlb	1	; () banked
 40650  019C94  C100  F1BD         	movff	?_LFSRRand,_MyTCB+4
 40651  019C98  0101               	movlb	1	; () banked
 40652  019C9A  C101  F1BE         	movff	?_LFSRRand+1,_MyTCB+5
 40653                           
 40654                           ; BSR set to: 1
 40655                           ;tcp.c: 3444: ((TCPIP_UINT32_VAL*)(&MyTCB.MySEQ))->w[1] = LFSRRand();
 40656  019C9E  EC88  F0CB         	call	_LFSRRand	;wreg free
 40657  019CA2  0101               	movlb	1	; () banked
 40658  019CA4  C100  F1BF         	movff	?_LFSRRand,_MyTCB+6
 40659  019CA8  0101               	movlb	1	; () banked
 40660  019CAA  C101  F1C0         	movff	?_LFSRRand+1,_MyTCB+7
 40661                           
 40662                           ; BSR set to: 1
 40663                           ;tcp.c: 3445: MyTCB.sHoleSize = -1;
 40664  019CAE  0101               	movlb	1	; () banked
 40665  019CB0  69D9               	setf	(_MyTCB+32)& (0+255),b
 40666  019CB2  0101               	movlb	1	; () banked
 40667  019CB4  69DA               	setf	(_MyTCB+33)& (0+255),b
 40668                           
 40669                           ;tcp.c: 3446: MyTCB.remoteWindow = 1;
 40670  019CB6  0E00               	movlw	0
 40671  019CB8  0101               	movlb	1	; () banked
 40672  019CBA  6FCC               	movwf	(_MyTCB+19)& (0+255),b
 40673  019CBC  0E01               	movlw	1
 40674  019CBE  0101               	movlb	1	; () banked
 40675  019CC0  6FCB               	movwf	(_MyTCB+18)& (0+255),b
 40676                           
 40677                           ; BSR set to: 1
 40678  019CC2  0012               	return	
 40679  019CC4                     __end_of_CloseSocket:
 40680                           	opt stack 0
 40681                           tblptru	equ	0xFF8
 40682                           tblptrh	equ	0xFF7
 40683                           tblptrl	equ	0xFF6
 40684                           tablat	equ	0xFF5
 40685                           prodh	equ	0xFF4
 40686                           prodl	equ	0xFF3
 40687                           intcon	equ	0xFF2
 40688                           intcon2	equ	0xFF1
 40689                           intcon3	equ	0xFF0
 40690                           indf0	equ	0xFEF
 40691                           postinc0	equ	0xFEE
 40692                           fsr0h	equ	0xFEA
 40693                           fsr0l	equ	0xFE9
 40694                           wreg	equ	0xFE8
 40695                           indf1	equ	0xFE7
 40696                           postinc1	equ	0xFE6
 40697                           postdec1	equ	0xFE5
 40698                           fsr1h	equ	0xFE2
 40699                           fsr1l	equ	0xFE1
 40700                           indf2	equ	0xFDF
 40701                           postinc2	equ	0xFDE
 40702                           postdec2	equ	0xFDD
 40703                           fsr2h	equ	0xFDA
 40704                           fsr2l	equ	0xFD9
 40705                           status	equ	0xFD8
 40706                           
 40707 ;; *************** function _SyncTCB *****************
 40708 ;; Defined at:
 40709 ;;		line 288 in file "../tcpip/tcp.c"
 40710 ;; Parameters:    Size  Location     Type
 40711 ;;		None
 40712 ;; Auto vars:     Size  Location     Type
 40713 ;;		None
 40714 ;; Return value:  Size  Location     Type
 40715 ;;		None               void
 40716 ;; Registers used:
 40717 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40718 ;; Tracked objects:
 40719 ;;		On entry : 0/0
 40720 ;;		On exit  : 0/0
 40721 ;;		Unchanged: 0/0
 40722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40725 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40726 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40727 ;;Total ram usage:        2 bytes
 40728 ;; Hardware stack levels used:    1
 40729 ;; Hardware stack levels required when called:   13
 40730 ;; This function calls:
 40731 ;;		_TCPRAMCopy
 40732 ;; This function is called by:
 40733 ;;		_TCPInit
 40734 ;;		_TCPOpen
 40735 ;;		_TCPFlush
 40736 ;;		_TCPTick
 40737 ;;		_SendTCP
 40738 ;;		_FindMatchingSocket
 40739 ;;		_CloseSocket
 40740 ;;		_HandleTCPSeg
 40741 ;;		_TCPGetRemoteInfo
 40742 ;;		_TCPAdjustFIFOSize
 40743 ;; This function uses a non-reentrant model
 40744 ;;
 40745                           
 40746                           	psect	text99
 40747  01963A                     __ptext99:
 40748                           	opt stack 0
 40749  01963A                     _SyncTCB:
 40750                           	opt stack 13
 40751                           
 40752                           ;tcp.c: 290: static TCP_SOCKET hLastTCB = (0xFE);
 40753                           ;tcp.c: 292: if(hLastTCB == hCurrentTCP)
 40754                           
 40755                           ; BSR set to: 1
 40756                           ;incstack = 0
 40757  01963A  0101               	movlb	1	; () banked
 40758  01963C  51FD               	movf	_hCurrentTCP& (0+255),w,b
 40759  01963E  0101               	movlb	1	; () banked
 40760  019640  63FC               	cpfseq	SyncTCB@hLastTCB& (0+255),b
 40761  019642  D001               	goto	l10960
 40762  019644  0012               	return	
 40763  019646                     l10960:
 40764                           
 40765                           ; BSR set to: 1
 40766                           ;tcp.c: 295: if(hLastTCB != (0xFE))
 40767  019646  0101               	movlb	1	; () banked
 40768  019648  51FC               	movf	SyncTCB@hLastTCB& (0+255),w,b
 40769  01964A  0AFE               	xorlw	254
 40770  01964C  B4D8               	btfsc	status,2,c
 40771  01964E  D03E               	goto	l10964
 40772                           
 40773                           ; BSR set to: 1
 40774                           ;tcp.c: 296: {
 40775                           ;tcp.c: 298: TCPRAMCopy(TCBStubs[hLastTCB].bufferTxStart - sizeof(MyTCB), TCBStubs[hLast
      +                          TCB].vMemoryMedium, (unsigned short)&MyTCB, 1u, sizeof(MyTCB));
 40776  019650  0101               	movlb	1	; () banked
 40777  019652  51FC               	movf	SyncTCB@hLastTCB& (0+255),w,b
 40778  019654  0D1C               	mullw	28
 40779  019656  0102               	movlb	2	; () banked
 40780  019658  0E6F               	movlw	low _TCBStubs
 40781  01965A  24F3               	addwf	prodl,w,c
 40782  01965C  6ED9               	movwf	fsr2l,c
 40783  01965E  0102               	movlb	2	; () banked
 40784  019660  0E02               	movlw	high _TCBStubs
 40785  019662  20F4               	addwfc	prodh,w,c
 40786  019664  6EDA               	movwf	fsr2h,c
 40787  019666  CFDE F126          	movff	postinc2,??_SyncTCB
 40788  01966A  CFDD F127          	movff	postdec2,??_SyncTCB+1
 40789  01966E  0ED9               	movlw	217
 40790  019670  0101               	movlb	1	; () banked
 40791  019672  2526               	addwf	??_SyncTCB& (0+255),w,b
 40792  019674  0101               	movlb	1	; () banked
 40793  019676  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 40794  019678  0EFF               	movlw	255
 40795  01967A  0101               	movlb	1	; () banked
 40796  01967C  2127               	addwfc	(??_SyncTCB+1)& (0+255),w,b
 40797  01967E  0101               	movlb	1	; () banked
 40798  019680  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 40799  019682  0101               	movlb	1	; () banked
 40800  019684  51FC               	movf	SyncTCB@hLastTCB& (0+255),w,b
 40801  019686  0D1C               	mullw	28
 40802  019688  0E1B               	movlw	27
 40803  01968A  26F3               	addwf	prodl,f,c
 40804  01968C  0E00               	movlw	0
 40805  01968E  22F4               	addwfc	prodh,f,c
 40806  019690  0102               	movlb	2	; () banked
 40807  019692  0E6F               	movlw	low _TCBStubs
 40808  019694  24F3               	addwf	prodl,w,c
 40809  019696  6ED9               	movwf	fsr2l,c
 40810  019698  0102               	movlb	2	; () banked
 40811  01969A  0E02               	movlw	high _TCBStubs
 40812  01969C  20F4               	addwfc	prodh,w,c
 40813  01969E  6EDA               	movwf	fsr2h,c
 40814  0196A0  50DF               	movf	indf2,w,c
 40815  0196A2  0101               	movlb	1	; () banked
 40816  0196A4  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 40817  0196A6  0101               	movlb	1	; () banked
 40818  0196A8  0E01               	movlw	high _MyTCB
 40819  0196AA  0101               	movlb	1	; () banked
 40820  0196AC  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 40821  0196AE  0101               	movlb	1	; () banked
 40822  0196B0  0EB9               	movlw	low _MyTCB
 40823  0196B2  0101               	movlb	1	; () banked
 40824  0196B4  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 40825  0196B6  0E01               	movlw	1
 40826  0196B8  0101               	movlb	1	; () banked
 40827  0196BA  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 40828  0196BC  0E00               	movlw	0
 40829  0196BE  0101               	movlb	1	; () banked
 40830  0196C0  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 40831  0196C2  0E27               	movlw	39
 40832  0196C4  0101               	movlb	1	; () banked
 40833  0196C6  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 40834  0196C8  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 40835  0196CC                     l10964:
 40836                           
 40837                           ;tcp.c: 299: }
 40838                           ;tcp.c: 302: hLastTCB = hCurrentTCP;
 40839  0196CC  C1FD  F1FC         	movff	_hCurrentTCP,SyncTCB@hLastTCB
 40840                           
 40841                           ;tcp.c: 303: TCPRAMCopy((unsigned short)&MyTCB, 1u, MyTCBStub.bufferTxStart - sizeof(MyT
      +                          CB), MyTCBStub.vMemoryMedium, sizeof(MyTCB));
 40842  0196D0  0101               	movlb	1	; () banked
 40843  0196D2  0E01               	movlw	high _MyTCB
 40844  0196D4  0101               	movlb	1	; () banked
 40845  0196D6  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 40846  0196D8  0101               	movlb	1	; () banked
 40847  0196DA  0EB9               	movlw	low _MyTCB
 40848  0196DC  0101               	movlb	1	; () banked
 40849  0196DE  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 40850  0196E0  0E01               	movlw	1
 40851  0196E2  0101               	movlb	1	; () banked
 40852  0196E4  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 40853  0196E6  0ED9               	movlw	217
 40854  0196E8  0101               	movlb	1	; () banked
 40855  0196EA  25E0               	addwf	_MyTCBStub& (0+255),w,b
 40856  0196EC  0101               	movlb	1	; () banked
 40857  0196EE  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 40858  0196F0  0EFF               	movlw	255
 40859  0196F2  0101               	movlb	1	; () banked
 40860  0196F4  21E1               	addwfc	(_MyTCBStub+1)& (0+255),w,b
 40861  0196F6  0101               	movlb	1	; () banked
 40862  0196F8  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 40863  0196FA  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 40864  0196FE  0E00               	movlw	0
 40865  019700  0101               	movlb	1	; () banked
 40866  019702  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 40867  019704  0E27               	movlw	39
 40868  019706  0101               	movlb	1	; () banked
 40869  019708  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 40870  01970A  ECE5  F0C8         	call	_TCPRAMCopy	;wreg free
 40871  01970E  0012               	return	
 40872  019710                     __end_of_SyncTCB:
 40873                           	opt stack 0
 40874                           tblptru	equ	0xFF8
 40875                           tblptrh	equ	0xFF7
 40876                           tblptrl	equ	0xFF6
 40877                           tablat	equ	0xFF5
 40878                           prodh	equ	0xFF4
 40879                           prodl	equ	0xFF3
 40880                           intcon	equ	0xFF2
 40881                           intcon2	equ	0xFF1
 40882                           intcon3	equ	0xFF0
 40883                           indf0	equ	0xFEF
 40884                           postinc0	equ	0xFEE
 40885                           fsr0h	equ	0xFEA
 40886                           fsr0l	equ	0xFE9
 40887                           wreg	equ	0xFE8
 40888                           indf1	equ	0xFE7
 40889                           postinc1	equ	0xFE6
 40890                           postdec1	equ	0xFE5
 40891                           fsr1h	equ	0xFE2
 40892                           fsr1l	equ	0xFE1
 40893                           indf2	equ	0xFDF
 40894                           postinc2	equ	0xFDE
 40895                           postdec2	equ	0xFDD
 40896                           fsr2h	equ	0xFDA
 40897                           fsr2l	equ	0xFD9
 40898                           status	equ	0xFD8
 40899                           
 40900 ;; *************** function _TCPRAMCopy *****************
 40901 ;; Defined at:
 40902 ;;		line 4510 in file "../tcpip/tcp.c"
 40903 ;; Parameters:    Size  Location     Type
 40904 ;;  ptrDest         2   30[BANK1 ] unsigned short 
 40905 ;;  vDestType       1   32[BANK1 ] unsigned char 
 40906 ;;  ptrSource       2   33[BANK1 ] unsigned short 
 40907 ;;  vSourceType     1   35[BANK1 ] unsigned char 
 40908 ;;  wLength         2   36[BANK1 ] unsigned int 
 40909 ;; Auto vars:     Size  Location     Type
 40910 ;;		None
 40911 ;; Return value:  Size  Location     Type
 40912 ;;		None               void
 40913 ;; Registers used:
 40914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40915 ;; Tracked objects:
 40916 ;;		On entry : 0/0
 40917 ;;		On exit  : 0/0
 40918 ;;		Unchanged: 0/0
 40919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40920 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40923 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40924 ;;Total ram usage:        8 bytes
 40925 ;; Hardware stack levels used:    1
 40926 ;; Hardware stack levels required when called:   12
 40927 ;; This function calls:
 40928 ;;		_MACGetArray
 40929 ;;		_MACIsMemCopyDone
 40930 ;;		_MACMemCopyAsync
 40931 ;;		_MACPutArray
 40932 ;;		_MACSetReadPtr
 40933 ;;		_MACSetWritePtr
 40934 ;;		_memcpy
 40935 ;; This function is called by:
 40936 ;;		_SyncTCB
 40937 ;;		_TCPPutArray
 40938 ;;		_TCPGetArray
 40939 ;;		_TCPTick
 40940 ;;		_SendTCP
 40941 ;;		_HandleTCPSeg
 40942 ;;		_TCPPut
 40943 ;;		_TCPGet
 40944 ;;		_TCPPeekArray
 40945 ;;		_TCPFindArrayEx
 40946 ;;		_TCPFindROMArrayEx
 40947 ;;		_TCPAdjustFIFOSize
 40948 ;; This function uses a non-reentrant model
 40949 ;;
 40950                           
 40951                           	psect	text100
 40952  0191CA                     __ptext100:
 40953                           	opt stack 0
 40954  0191CA                     _TCPRAMCopy:
 40955                           	opt stack 15
 40956                           
 40957                           ;tcp.c: 4517: switch(vSourceType)
 40958                           
 40959                           ;incstack = 0
 40960  0191CA  D06B               	goto	l10324
 40961  0191CC                     l10296:
 40962                           
 40963                           ;tcp.c: 4523: memcpy((void*)(uint8_t*)ptrDest, (void*)(uint8_t*)ptrSource, wLength);
 40964  0191CC  0101               	movlb	1	; () banked
 40965  0191CE  C11F  F115         	movff	TCPRAMCopy@ptrDest+1,memcpy@d1+1
 40966  0191D2  0101               	movlb	1	; () banked
 40967  0191D4  C11E  F114         	movff	TCPRAMCopy@ptrDest,memcpy@d1
 40968  0191D8  0101               	movlb	1	; () banked
 40969  0191DA  C122  F117         	movff	TCPRAMCopy@ptrSource+1,memcpy@s1+1
 40970  0191DE  0101               	movlb	1	; () banked
 40971  0191E0  C121  F116         	movff	TCPRAMCopy@ptrSource,memcpy@s1
 40972  0191E4  C124  F118         	movff	TCPRAMCopy@wLength,memcpy@n
 40973  0191E8  C125  F119         	movff	TCPRAMCopy@wLength+1,memcpy@n+1
 40974  0191EC  ECDC  F0D5         	call	_memcpy	;wreg free
 40975                           
 40976                           ;tcp.c: 4524: break;
 40977  0191F0  0012               	return	
 40978  0191F2                     l10298:
 40979                           
 40980                           ;tcp.c: 4527: if(ptrDest!=(unsigned short)-1)
 40981  0191F2  0101               	movlb	1	; () banked
 40982  0191F4  291E               	incf	TCPRAMCopy@ptrDest& (0+255),w,b
 40983  0191F6  B4D8               	btfsc	status,2,c
 40984  0191F8  291F               	incf	(TCPRAMCopy@ptrDest+1)& (0+255),w,b
 40985  0191FA  B4D8               	btfsc	status,2,c
 40986  0191FC  D006               	goto	l10302
 40987                           
 40988                           ; BSR set to: 1
 40989                           ;tcp.c: 4528: MACSetWritePtr(ptrDest);
 40990  0191FE  C11E  F100         	movff	TCPRAMCopy@ptrDest,MACSetWritePtr@address
 40991  019202  C11F  F101         	movff	TCPRAMCopy@ptrDest+1,MACSetWritePtr@address+1
 40992  019206  ECFE  F0DC         	call	_MACSetWritePtr	;wreg free
 40993  01920A                     l10302:
 40994                           
 40995                           ;tcp.c: 4529: MACPutArray((uint8_t*)ptrSource, wLength);
 40996  01920A  0101               	movlb	1	; () banked
 40997  01920C  C122  F101         	movff	TCPRAMCopy@ptrSource+1,MACPutArray@val+1
 40998  019210  0101               	movlb	1	; () banked
 40999  019212  C121  F100         	movff	TCPRAMCopy@ptrSource,MACPutArray@val
 41000  019216  C124  F102         	movff	TCPRAMCopy@wLength,MACPutArray@len
 41001  01921A  C125  F103         	movff	TCPRAMCopy@wLength+1,MACPutArray@len+1
 41002  01921E  ECE4  F0FF         	call	_MACPutArray	;wreg free
 41003                           
 41004                           ;tcp.c: 4530: break;
 41005  019222  0012               	return	
 41006  019224                     l10306:
 41007  019224  0101               	movlb	1	; () banked
 41008  019226  5120               	movf	TCPRAMCopy@vDestType& (0+255),w,b
 41009                           
 41010                           ; Switch size 1, requested type "space"
 41011                           ; Number of cases is 2, Range of values is 0 to 1
 41012                           ; switch strategies available:
 41013                           ; Name         Instructions Cycles
 41014                           ; simple_byte            7     4 (average)
 41015                           ;	Chosen strategy is simple_byte
 41016  019228  0A00               	xorlw	0	; case 0
 41017  01922A  B4D8               	btfsc	status,2,c
 41018  01922C  D7E2               	goto	l10298
 41019  01922E  0A01               	xorlw	1	; case 1
 41020  019230  A4D8               	btfss	status,2,c
 41021  019232  0012               	return	
 41022  019234  D7CB               	goto	l10296
 41023  019236                     l10308:
 41024                           
 41025                           ; BSR set to: 1
 41026                           ;tcp.c: 4544: if(ptrSource!=(unsigned short)-1)
 41027  019236  0101               	movlb	1	; () banked
 41028  019238  2921               	incf	TCPRAMCopy@ptrSource& (0+255),w,b
 41029  01923A  B4D8               	btfsc	status,2,c
 41030  01923C  2922               	incf	(TCPRAMCopy@ptrSource+1)& (0+255),w,b
 41031  01923E  B4D8               	btfsc	status,2,c
 41032  019240  D006               	goto	l10312
 41033                           
 41034                           ; BSR set to: 1
 41035                           ;tcp.c: 4545: MACSetReadPtr(ptrSource);
 41036  019242  C121  F100         	movff	TCPRAMCopy@ptrSource,MACSetReadPtr@address
 41037  019246  C122  F101         	movff	TCPRAMCopy@ptrSource+1,MACSetReadPtr@address+1
 41038  01924A  EC07  F0DD         	call	_MACSetReadPtr	;wreg free
 41039  01924E                     l10312:
 41040                           
 41041                           ;tcp.c: 4546: MACGetArray((uint8_t*)ptrDest, wLength);
 41042  01924E  0101               	movlb	1	; () banked
 41043  019250  C11F  F101         	movff	TCPRAMCopy@ptrDest+1,MACGetArray@val+1
 41044  019254  0101               	movlb	1	; () banked
 41045  019256  C11E  F100         	movff	TCPRAMCopy@ptrDest,MACGetArray@val
 41046  01925A  C124  F102         	movff	TCPRAMCopy@wLength,MACGetArray@len
 41047  01925E  C125  F103         	movff	TCPRAMCopy@wLength+1,MACGetArray@len+1
 41048  019262  EC42  F0D7         	call	_MACGetArray	;wreg free
 41049                           
 41050                           ;tcp.c: 4547: break;
 41051  019266  0012               	return	
 41052  019268                     l10314:
 41053                           
 41054                           ;tcp.c: 4550: MACMemCopyAsync(ptrDest, ptrSource, wLength);
 41055  019268  C11E  F101         	movff	TCPRAMCopy@ptrDest,MACMemCopyAsync@destAddr
 41056  01926C  C11F  F102         	movff	TCPRAMCopy@ptrDest+1,MACMemCopyAsync@destAddr+1
 41057  019270  C121  F103         	movff	TCPRAMCopy@ptrSource,MACMemCopyAsync@sourceAddr
 41058  019274  C122  F104         	movff	TCPRAMCopy@ptrSource+1,MACMemCopyAsync@sourceAddr+1
 41059  019278  C124  F105         	movff	TCPRAMCopy@wLength,MACMemCopyAsync@len
 41060  01927C  C125  F106         	movff	TCPRAMCopy@wLength+1,MACMemCopyAsync@len+1
 41061  019280  EC98  F0B8         	call	_MACMemCopyAsync	;wreg free
 41062  019284                     l10316:
 41063  019284  EC28  F0DD         	call	_MACIsMemCopyDone	;wreg free
 41064  019288  0900               	iorlw	0
 41065  01928A  A4D8               	btfss	status,2,c
 41066  01928C  0012               	return	
 41067  01928E  D7FA               	goto	l10316
 41068  019290                     l10320:
 41069  019290  0101               	movlb	1	; () banked
 41070  019292  5120               	movf	TCPRAMCopy@vDestType& (0+255),w,b
 41071                           
 41072                           ; Switch size 1, requested type "space"
 41073                           ; Number of cases is 2, Range of values is 0 to 1
 41074                           ; switch strategies available:
 41075                           ; Name         Instructions Cycles
 41076                           ; simple_byte            7     4 (average)
 41077                           ;	Chosen strategy is simple_byte
 41078  019294  0A00               	xorlw	0	; case 0
 41079  019296  B4D8               	btfsc	status,2,c
 41080  019298  D7E7               	goto	l10314
 41081  01929A  0A01               	xorlw	1	; case 1
 41082  01929C  A4D8               	btfss	status,2,c
 41083  01929E  0012               	return	
 41084  0192A0  D7CA               	goto	l10308
 41085  0192A2                     l10324:
 41086  0192A2  0101               	movlb	1	; () banked
 41087  0192A4  5123               	movf	TCPRAMCopy@vSourceType& (0+255),w,b
 41088                           
 41089                           ; Switch size 1, requested type "space"
 41090                           ; Number of cases is 2, Range of values is 0 to 1
 41091                           ; switch strategies available:
 41092                           ; Name         Instructions Cycles
 41093                           ; simple_byte            7     4 (average)
 41094                           ;	Chosen strategy is simple_byte
 41095  0192A6  0A00               	xorlw	0	; case 0
 41096  0192A8  B4D8               	btfsc	status,2,c
 41097  0192AA  D7F2               	goto	l10320
 41098  0192AC  0A01               	xorlw	1	; case 1
 41099  0192AE  A4D8               	btfss	status,2,c
 41100  0192B0  0012               	return	
 41101  0192B2  D7B8               	goto	l10306
 41102  0192B4                     __end_of_TCPRAMCopy:
 41103                           	opt stack 0
 41104                           tblptru	equ	0xFF8
 41105                           tblptrh	equ	0xFF7
 41106                           tblptrl	equ	0xFF6
 41107                           tablat	equ	0xFF5
 41108                           prodh	equ	0xFF4
 41109                           prodl	equ	0xFF3
 41110                           intcon	equ	0xFF2
 41111                           intcon2	equ	0xFF1
 41112                           intcon3	equ	0xFF0
 41113                           indf0	equ	0xFEF
 41114                           postinc0	equ	0xFEE
 41115                           fsr0h	equ	0xFEA
 41116                           fsr0l	equ	0xFE9
 41117                           wreg	equ	0xFE8
 41118                           indf1	equ	0xFE7
 41119                           postinc1	equ	0xFE6
 41120                           postdec1	equ	0xFE5
 41121                           fsr1h	equ	0xFE2
 41122                           fsr1l	equ	0xFE1
 41123                           indf2	equ	0xFDF
 41124                           postinc2	equ	0xFDE
 41125                           postdec2	equ	0xFDD
 41126                           fsr2h	equ	0xFDA
 41127                           fsr2l	equ	0xFD9
 41128                           status	equ	0xFD8
 41129                           
 41130 ;; *************** function _MACSetWritePtr *****************
 41131 ;; Defined at:
 41132 ;;		line 705 in file "../tcpip/ETH97J60.c"
 41133 ;; Parameters:    Size  Location     Type
 41134 ;;  address         2    0[BANK1 ] unsigned short 
 41135 ;; Auto vars:     Size  Location     Type
 41136 ;;  oldVal          2    2[BANK1 ] unsigned short 
 41137 ;; Return value:  Size  Location     Type
 41138 ;;                  2    0[BANK1 ] unsigned short 
 41139 ;; Registers used:
 41140 ;;		None
 41141 ;; Tracked objects:
 41142 ;;		On entry : 0/0
 41143 ;;		On exit  : 0/0
 41144 ;;		Unchanged: 0/0
 41145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41146 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41147 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41149 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41150 ;;Total ram usage:        4 bytes
 41151 ;; Hardware stack levels used:    1
 41152 ;; Hardware stack levels required when called:   10
 41153 ;; This function calls:
 41154 ;;		Nothing
 41155 ;; This function is called by:
 41156 ;;		_ARPPut
 41157 ;;		_SendTCP
 41158 ;;		_TCPRAMCopy
 41159 ;;		_TCPRAMCopyROM
 41160 ;; This function uses a non-reentrant model
 41161 ;;
 41162                           
 41163                           	psect	text101
 41164  01B9FC                     __ptext101:
 41165                           	opt stack 0
 41166  01B9FC                     _MACSetWritePtr:
 41167                           	opt stack 16
 41168                           
 41169                           ;ETH97J60.c: 707: WORD oldVal;
 41170                           ;ETH97J60.c: 709: oldVal = EWRPT;
 41171                           
 41172                           ;incstack = 0
 41173  01B9FC  CEE2 F102          	movff	3810,MACSetWritePtr@oldVal	;volatile
 41174  01BA00  CEE3 F103          	movff	3811,MACSetWritePtr@oldVal+1	;volatile
 41175                           
 41176                           ;ETH97J60.c: 710: EWRPT = address;
 41177  01BA04  C100  FEE2         	movff	MACSetWritePtr@address,3810	;volatile
 41178  01BA08  C101  FEE3         	movff	MACSetWritePtr@address+1,3811	;volatile
 41179                           
 41180                           ;ETH97J60.c: 711: return oldVal;
 41181                           ;	Return value of _MACSetWritePtr is never used
 41182  01BA0C  0012               	return	
 41183  01BA0E                     __end_of_MACSetWritePtr:
 41184                           	opt stack 0
 41185                           tblptru	equ	0xFF8
 41186                           tblptrh	equ	0xFF7
 41187                           tblptrl	equ	0xFF6
 41188                           tablat	equ	0xFF5
 41189                           prodh	equ	0xFF4
 41190                           prodl	equ	0xFF3
 41191                           intcon	equ	0xFF2
 41192                           intcon2	equ	0xFF1
 41193                           intcon3	equ	0xFF0
 41194                           indf0	equ	0xFEF
 41195                           postinc0	equ	0xFEE
 41196                           fsr0h	equ	0xFEA
 41197                           fsr0l	equ	0xFE9
 41198                           wreg	equ	0xFE8
 41199                           indf1	equ	0xFE7
 41200                           postinc1	equ	0xFE6
 41201                           postdec1	equ	0xFE5
 41202                           fsr1h	equ	0xFE2
 41203                           fsr1l	equ	0xFE1
 41204                           indf2	equ	0xFDF
 41205                           postinc2	equ	0xFDE
 41206                           postdec2	equ	0xFDD
 41207                           fsr2h	equ	0xFDA
 41208                           fsr2l	equ	0xFD9
 41209                           status	equ	0xFD8
 41210                           
 41211 ;; *************** function _MACSetReadPtr *****************
 41212 ;; Defined at:
 41213 ;;		line 730 in file "../tcpip/ETH97J60.c"
 41214 ;; Parameters:    Size  Location     Type
 41215 ;;  address         2    0[BANK1 ] unsigned short 
 41216 ;; Auto vars:     Size  Location     Type
 41217 ;;  oldVal          2    2[BANK1 ] unsigned short 
 41218 ;; Return value:  Size  Location     Type
 41219 ;;                  2    0[BANK1 ] unsigned short 
 41220 ;; Registers used:
 41221 ;;		None
 41222 ;; Tracked objects:
 41223 ;;		On entry : 0/0
 41224 ;;		On exit  : 0/0
 41225 ;;		Unchanged: 0/0
 41226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41227 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41228 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41230 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41231 ;;Total ram usage:        4 bytes
 41232 ;; Hardware stack levels used:    1
 41233 ;; Hardware stack levels required when called:   10
 41234 ;; This function calls:
 41235 ;;		Nothing
 41236 ;; This function is called by:
 41237 ;;		_SendTCP
 41238 ;;		_TCPRAMCopy
 41239 ;; This function uses a non-reentrant model
 41240 ;;
 41241                           
 41242                           	psect	text102
 41243  01BA0E                     __ptext102:
 41244                           	opt stack 0
 41245  01BA0E                     _MACSetReadPtr:
 41246                           	opt stack 16
 41247                           
 41248                           ;ETH97J60.c: 732: WORD oldVal;
 41249                           ;ETH97J60.c: 734: oldVal = ERDPT;
 41250                           
 41251                           ;incstack = 0
 41252  01BA0E  CF7A F102          	movff	3962,MACSetReadPtr@oldVal	;volatile
 41253  01BA12  CF7B F103          	movff	3963,MACSetReadPtr@oldVal+1	;volatile
 41254                           
 41255                           ;ETH97J60.c: 735: ERDPT = address;
 41256  01BA16  C100  FF7A         	movff	MACSetReadPtr@address,3962	;volatile
 41257  01BA1A  C101  FF7B         	movff	MACSetReadPtr@address+1,3963	;volatile
 41258                           
 41259                           ;ETH97J60.c: 736: return oldVal;
 41260                           ;	Return value of _MACSetReadPtr is never used
 41261  01BA1E  0012               	return	
 41262  01BA20                     __end_of_MACSetReadPtr:
 41263                           	opt stack 0
 41264                           tblptru	equ	0xFF8
 41265                           tblptrh	equ	0xFF7
 41266                           tblptrl	equ	0xFF6
 41267                           tablat	equ	0xFF5
 41268                           prodh	equ	0xFF4
 41269                           prodl	equ	0xFF3
 41270                           intcon	equ	0xFF2
 41271                           intcon2	equ	0xFF1
 41272                           intcon3	equ	0xFF0
 41273                           indf0	equ	0xFEF
 41274                           postinc0	equ	0xFEE
 41275                           fsr0h	equ	0xFEA
 41276                           fsr0l	equ	0xFE9
 41277                           wreg	equ	0xFE8
 41278                           indf1	equ	0xFE7
 41279                           postinc1	equ	0xFE6
 41280                           postdec1	equ	0xFE5
 41281                           fsr1h	equ	0xFE2
 41282                           fsr1l	equ	0xFE1
 41283                           indf2	equ	0xFDF
 41284                           postinc2	equ	0xFDE
 41285                           postdec2	equ	0xFDD
 41286                           fsr2h	equ	0xFDA
 41287                           fsr2l	equ	0xFD9
 41288                           status	equ	0xFD8
 41289                           
 41290 ;; *************** function _MACPutArray *****************
 41291 ;; Defined at:
 41292 ;;		line 1194 in file "../tcpip/ETH97J60.c"
 41293 ;; Parameters:    Size  Location     Type
 41294 ;;  val             2    0[BANK1 ] PTR unsigned char 
 41295 ;;		 -> TCPRAMCopyROM@vBuffer(16), SendTCP@options(4), SendTCP@wVal(2), SendTCP@header(20), 
 41296 ;;		 -> RAM(3935), MyTCB.remote(10), MyTCB(39), IPPutHeader@header(20), 
 41297 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), AppConfig(51), 
 41298 ;;  len             2    2[BANK1 ] unsigned int 
 41299 ;; Auto vars:     Size  Location     Type
 41300 ;;		None
 41301 ;; Return value:  Size  Location     Type
 41302 ;;		None               void
 41303 ;; Registers used:
 41304 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41305 ;; Tracked objects:
 41306 ;;		On entry : 0/0
 41307 ;;		On exit  : 0/0
 41308 ;;		Unchanged: 0/0
 41309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41310 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41313 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41314 ;;Total ram usage:        4 bytes
 41315 ;; Hardware stack levels used:    1
 41316 ;; Hardware stack levels required when called:   10
 41317 ;; This function calls:
 41318 ;;		Nothing
 41319 ;; This function is called by:
 41320 ;;		_MACPutHeader
 41321 ;;		_ARPPut
 41322 ;;		_IPPutHeader
 41323 ;;		_SendTCP
 41324 ;;		_TCPRAMCopy
 41325 ;;		_TCPRAMCopyROM
 41326 ;; This function uses a non-reentrant model
 41327 ;;
 41328                           
 41329                           	psect	text103
 41330  01FFC8                     __ptext103:
 41331                           	opt stack 0
 41332  01FFC8                     _MACPutArray:
 41333                           	opt stack 16
 41334                           
 41335                           ;ETH97J60.c: 1196: while(len--)
 41336                           
 41337                           ;incstack = 0
 41338  01FFC8  D00C               	goto	l9884
 41339  01FFCA                     l9880:
 41340                           
 41341                           ;ETH97J60.c: 1197: {
 41342                           ;ETH97J60.c: 1202: errataTempL = *val++;
 41343  01FFCA  C100  FFD9         	movff	MACPutArray@val,fsr2l
 41344  01FFCE  C101  FFDA         	movff	MACPutArray@val+1,fsr2h
 41345  01FFD2  50DF               	movf	indf2,w,c
 41346  01FFD4  010E               	movlb	14	; () banked
 41347  01FFD6  6F7E               	movwf	126,b
 41348                           
 41349                           ; BSR set to: 14
 41350  01FFD8  0101               	movlb	1	; () banked
 41351  01FFDA  4B00               	infsnz	MACPutArray@val& (0+255),f,b
 41352  01FFDC  2B01               	incf	(MACPutArray@val+1)& (0+255),f,b
 41353  01FFDE  CE7E FF61          	movff	3710,3937	;# 
 41354  01FFE2                     l9884:
 41355  01FFE2  0101               	movlb	1	; () banked
 41356  01FFE4  0702               	decf	MACPutArray@len& (0+255),f,b
 41357  01FFE6  A0D8               	btfss	status,0,c
 41358  01FFE8  0703               	decf	(MACPutArray@len+1)& (0+255),f,b
 41359  01FFEA  0101               	movlb	1	; () banked
 41360  01FFEC  2902               	incf	MACPutArray@len& (0+255),w,b
 41361  01FFEE  B4D8               	btfsc	status,2,c
 41362  01FFF0  2903               	incf	(MACPutArray@len+1)& (0+255),w,b
 41363  01FFF2  B4D8               	btfsc	status,2,c
 41364                           
 41365                           ; BSR set to: 1
 41366                           
 41367                           ; BSR set to: 1
 41368  01FFF4  0012               	return	
 41369  01FFF6  D7E9               	goto	l9880
 41370  01FFF8                     __end_of_MACPutArray:
 41371                           	opt stack 0
 41372                           tblptru	equ	0xFF8
 41373                           tblptrh	equ	0xFF7
 41374                           tblptrl	equ	0xFF6
 41375                           tablat	equ	0xFF5
 41376                           prodh	equ	0xFF4
 41377                           prodl	equ	0xFF3
 41378                           intcon	equ	0xFF2
 41379                           intcon2	equ	0xFF1
 41380                           intcon3	equ	0xFF0
 41381                           indf0	equ	0xFEF
 41382                           postinc0	equ	0xFEE
 41383                           fsr0h	equ	0xFEA
 41384                           fsr0l	equ	0xFE9
 41385                           wreg	equ	0xFE8
 41386                           indf1	equ	0xFE7
 41387                           postinc1	equ	0xFE6
 41388                           postdec1	equ	0xFE5
 41389                           fsr1h	equ	0xFE2
 41390                           fsr1l	equ	0xFE1
 41391                           indf2	equ	0xFDF
 41392                           postinc2	equ	0xFDE
 41393                           postdec2	equ	0xFDD
 41394                           fsr2h	equ	0xFDA
 41395                           fsr2l	equ	0xFD9
 41396                           status	equ	0xFD8
 41397                           
 41398 ;; *************** function _MACMemCopyAsync *****************
 41399 ;; Defined at:
 41400 ;;		line 954 in file "../tcpip/ETH97J60.c"
 41401 ;; Parameters:    Size  Location     Type
 41402 ;;  destAddr        2    1[BANK1 ] unsigned short 
 41403 ;;  sourceAddr      2    3[BANK1 ] unsigned short 
 41404 ;;  len             2    5[BANK1 ] unsigned int 
 41405 ;; Auto vars:     Size  Location     Type
 41406 ;;  WriteSave       2   13[BANK1 ] struct .
 41407 ;;  ReadSave        2   11[BANK1 ] struct .
 41408 ;;  UpdateReadPo    1   16[BANK1 ] enum E5595
 41409 ;;  UpdateWriteP    1   15[BANK1 ] enum E5595
 41410 ;; Return value:  Size  Location     Type
 41411 ;;		None               void
 41412 ;; Registers used:
 41413 ;;		wreg, status,2, status,0, cstack
 41414 ;; Tracked objects:
 41415 ;;		On entry : 0/0
 41416 ;;		On exit  : 0/0
 41417 ;;		Unchanged: 0/0
 41418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41419 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41420 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41421 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41422 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41423 ;;Total ram usage:       16 bytes
 41424 ;; Hardware stack levels used:    1
 41425 ;; Hardware stack levels required when called:   11
 41426 ;; This function calls:
 41427 ;;		_MACGet
 41428 ;;		_MACPut
 41429 ;; This function is called by:
 41430 ;;		_TCPRAMCopy
 41431 ;; This function uses a non-reentrant model
 41432 ;;
 41433                           
 41434                           	psect	text104
 41435  017130                     __ptext104:
 41436                           	opt stack 0
 41437  017130                     _MACMemCopyAsync:
 41438                           	opt stack 15
 41439                           
 41440                           ;ETH97J60.c: 956: WORD_VAL ReadSave, WriteSave;
 41441                           ;ETH97J60.c: 957: BOOL UpdateWritePointer = FALSE;
 41442                           
 41443                           ; BSR set to: 1
 41444                           ;incstack = 0
 41445  017130  0E00               	movlw	0
 41446  017132  0101               	movlb	1	; () banked
 41447  017134  6F0F               	movwf	MACMemCopyAsync@UpdateWritePointer& (0+255),b
 41448                           
 41449                           ;ETH97J60.c: 958: BOOL UpdateReadPointer = FALSE;
 41450  017136  0E00               	movlw	0
 41451  017138  0101               	movlb	1	; () banked
 41452  01713A  6F10               	movwf	MACMemCopyAsync@UpdateReadPointer& (0+255),b
 41453                           
 41454                           ; BSR set to: 1
 41455                           ;ETH97J60.c: 960: if(destAddr == (unsigned short)-1)
 41456  01713C  0101               	movlb	1	; () banked
 41457  01713E  2901               	incf	MACMemCopyAsync@destAddr& (0+255),w,b
 41458  017140  B4D8               	btfsc	status,2,c
 41459  017142  2902               	incf	(MACMemCopyAsync@destAddr+1)& (0+255),w,b
 41460  017144  A4D8               	btfss	status,2,c
 41461  017146  D007               	goto	l9898
 41462                           
 41463                           ; BSR set to: 1
 41464                           ;ETH97J60.c: 961: {
 41465                           ;ETH97J60.c: 962: UpdateWritePointer = TRUE;
 41466  017148  0E01               	movlw	1
 41467  01714A  0101               	movlb	1	; () banked
 41468  01714C  6F0F               	movwf	MACMemCopyAsync@UpdateWritePointer& (0+255),b
 41469                           
 41470                           ; BSR set to: 1
 41471                           ;ETH97J60.c: 963: destAddr = EWRPT;
 41472  01714E  CEE2 F101          	movff	3810,MACMemCopyAsync@destAddr	;volatile
 41473  017152  CEE3 F102          	movff	3811,MACMemCopyAsync@destAddr+1	;volatile
 41474  017156                     l9898:
 41475                           
 41476                           ; BSR set to: 1
 41477                           ;ETH97J60.c: 964: }
 41478                           ;ETH97J60.c: 965: if(sourceAddr == (unsigned short)-1)
 41479  017156  0101               	movlb	1	; () banked
 41480  017158  2903               	incf	MACMemCopyAsync@sourceAddr& (0+255),w,b
 41481  01715A  B4D8               	btfsc	status,2,c
 41482  01715C  2904               	incf	(MACMemCopyAsync@sourceAddr+1)& (0+255),w,b
 41483  01715E  A4D8               	btfss	status,2,c
 41484  017160  D007               	goto	l9904
 41485                           
 41486                           ; BSR set to: 1
 41487                           ;ETH97J60.c: 966: {
 41488                           ;ETH97J60.c: 967: UpdateReadPointer = TRUE;
 41489  017162  0E01               	movlw	1
 41490  017164  0101               	movlb	1	; () banked
 41491  017166  6F10               	movwf	MACMemCopyAsync@UpdateReadPointer& (0+255),b
 41492                           
 41493                           ; BSR set to: 1
 41494                           ;ETH97J60.c: 968: sourceAddr = ERDPT;
 41495  017168  CF7A F103          	movff	3962,MACMemCopyAsync@sourceAddr	;volatile
 41496  01716C  CF7B F104          	movff	3963,MACMemCopyAsync@sourceAddr+1	;volatile
 41497  017170                     l9904:
 41498                           
 41499                           ; BSR set to: 1
 41500                           ;ETH97J60.c: 969: }
 41501                           ;ETH97J60.c: 973: if(len <= 1u)
 41502  017170  0E02               	movlw	2
 41503  017172  0101               	movlb	1	; () banked
 41504  017174  5D05               	subwf	MACMemCopyAsync@len& (0+255),w,b
 41505  017176  0E00               	movlw	0
 41506  017178  0101               	movlb	1	; () banked
 41507  01717A  5906               	subwfb	(MACMemCopyAsync@len+1)& (0+255),w,b
 41508  01717C  B0D8               	btfsc	status,0,c
 41509  01717E  D02E               	goto	l9916
 41510                           
 41511                           ; BSR set to: 1
 41512                           ;ETH97J60.c: 974: {
 41513                           ;ETH97J60.c: 975: ReadSave.Val = ERDPT;
 41514  017180  CF7A F10B          	movff	3962,MACMemCopyAsync@ReadSave	;volatile
 41515  017184  CF7B F10C          	movff	3963,MACMemCopyAsync@ReadSave+1	;volatile
 41516                           
 41517                           ;ETH97J60.c: 976: WriteSave.Val = EWRPT;
 41518  017188  CEE2 F10D          	movff	3810,MACMemCopyAsync@WriteSave	;volatile
 41519  01718C  CEE3 F10E          	movff	3811,MACMemCopyAsync@WriteSave+1	;volatile
 41520                           
 41521                           ;ETH97J60.c: 977: ERDPT = sourceAddr;
 41522  017190  C103  FF7A         	movff	MACMemCopyAsync@sourceAddr,3962	;volatile
 41523  017194  C104  FF7B         	movff	MACMemCopyAsync@sourceAddr+1,3963	;volatile
 41524                           
 41525                           ;ETH97J60.c: 978: EWRPT = destAddr;
 41526  017198  C101  FEE2         	movff	MACMemCopyAsync@destAddr,3810	;volatile
 41527  01719C  C102  FEE3         	movff	MACMemCopyAsync@destAddr+1,3811	;volatile
 41528                           
 41529                           ;ETH97J60.c: 979: while(len--)
 41530  0171A0  D004               	goto	l9910
 41531  0171A2                     l9908:
 41532                           
 41533                           ; BSR set to: 1
 41534                           ;ETH97J60.c: 980: MACPut(MACGet());
 41535  0171A2  EC34  F0DD         	call	_MACGet	;wreg free
 41536  0171A6  EC21  F0DD         	call	_MACPut
 41537  0171AA                     l9910:
 41538  0171AA  0101               	movlb	1	; () banked
 41539  0171AC  0705               	decf	MACMemCopyAsync@len& (0+255),f,b
 41540  0171AE  A0D8               	btfss	status,0,c
 41541  0171B0  0706               	decf	(MACMemCopyAsync@len+1)& (0+255),f,b
 41542  0171B2  0101               	movlb	1	; () banked
 41543  0171B4  2905               	incf	MACMemCopyAsync@len& (0+255),w,b
 41544  0171B6  B4D8               	btfsc	status,2,c
 41545  0171B8  2906               	incf	(MACMemCopyAsync@len+1)& (0+255),w,b
 41546  0171BA  A4D8               	btfss	status,2,c
 41547  0171BC  D7F2               	goto	l9908
 41548                           
 41549                           ; BSR set to: 1
 41550                           ;ETH97J60.c: 981: if(!UpdateReadPointer)
 41551  0171BE  0101               	movlb	1	; () banked
 41552  0171C0  6710               	tstfsz	MACMemCopyAsync@UpdateReadPointer& (0+255),b
 41553  0171C2  D004               	goto	l345
 41554                           
 41555                           ; BSR set to: 1
 41556                           ;ETH97J60.c: 982: {
 41557                           ;ETH97J60.c: 983: ERDPT = ReadSave.Val;
 41558  0171C4  C10B  FF7A         	movff	MACMemCopyAsync@ReadSave,3962	;volatile
 41559  0171C8  C10C  FF7B         	movff	MACMemCopyAsync@ReadSave+1,3963	;volatile
 41560  0171CC                     l345:
 41561                           
 41562                           ; BSR set to: 1
 41563                           ;ETH97J60.c: 984: }
 41564                           ;ETH97J60.c: 985: if(!UpdateWritePointer)
 41565  0171CC  0101               	movlb	1	; () banked
 41566  0171CE  670F               	tstfsz	MACMemCopyAsync@UpdateWritePointer& (0+255),b
 41567  0171D0  0012               	return	
 41568                           
 41569                           ; BSR set to: 1
 41570                           ;ETH97J60.c: 986: {
 41571                           ;ETH97J60.c: 987: EWRPT = WriteSave.Val;
 41572  0171D2  C10D  FEE2         	movff	MACMemCopyAsync@WriteSave,3810	;volatile
 41573  0171D6  C10E  FEE3         	movff	MACMemCopyAsync@WriteSave+1,3811	;volatile
 41574  0171DA  0012               	return	
 41575  0171DC                     l9916:
 41576                           
 41577                           ; BSR set to: 1
 41578                           ;ETH97J60.c: 990: else
 41579                           ;ETH97J60.c: 991: {
 41580                           ;ETH97J60.c: 992: if(UpdateWritePointer)
 41581  0171DC  0101               	movlb	1	; () banked
 41582  0171DE  510F               	movf	MACMemCopyAsync@UpdateWritePointer& (0+255),w,b
 41583  0171E0  B4D8               	btfsc	status,2,c
 41584  0171E2  D010               	goto	l348
 41585                           
 41586                           ; BSR set to: 1
 41587                           ;ETH97J60.c: 993: {
 41588                           ;ETH97J60.c: 994: WriteSave.Val = destAddr + len;
 41589  0171E4  0101               	movlb	1	; () banked
 41590  0171E6  5105               	movf	MACMemCopyAsync@len& (0+255),w,b
 41591  0171E8  0101               	movlb	1	; () banked
 41592  0171EA  2501               	addwf	MACMemCopyAsync@destAddr& (0+255),w,b
 41593  0171EC  0101               	movlb	1	; () banked
 41594  0171EE  6F0D               	movwf	MACMemCopyAsync@WriteSave& (0+255),b
 41595  0171F0  0101               	movlb	1	; () banked
 41596  0171F2  5106               	movf	(MACMemCopyAsync@len+1)& (0+255),w,b
 41597  0171F4  0101               	movlb	1	; () banked
 41598  0171F6  2102               	addwfc	(MACMemCopyAsync@destAddr+1)& (0+255),w,b
 41599  0171F8  0101               	movlb	1	; () banked
 41600  0171FA  6F0E               	movwf	(MACMemCopyAsync@WriteSave+1)& (0+255),b
 41601                           
 41602                           ; BSR set to: 1
 41603                           ;ETH97J60.c: 995: EWRPT = WriteSave.Val;
 41604  0171FC  C10D  FEE2         	movff	MACMemCopyAsync@WriteSave,3810	;volatile
 41605  017200  C10E  FEE3         	movff	MACMemCopyAsync@WriteSave+1,3811	;volatile
 41606  017204                     l348:
 41607                           
 41608                           ; BSR set to: 1
 41609                           ;ETH97J60.c: 996: }
 41610                           ;ETH97J60.c: 997: len += sourceAddr - 1;
 41611  017204  0EFF               	movlw	255
 41612  017206  0101               	movlb	1	; () banked
 41613  017208  6F07               	movwf	??_MACMemCopyAsync& (0+255),b
 41614  01720A  0EFF               	movlw	255
 41615  01720C  6F08               	movwf	(??_MACMemCopyAsync+1)& (0+255),b
 41616  01720E  0101               	movlb	1	; () banked
 41617  017210  C103  F109         	movff	MACMemCopyAsync@sourceAddr,??_MACMemCopyAsync+2
 41618  017214  0101               	movlb	1	; () banked
 41619  017216  C104  F10A         	movff	MACMemCopyAsync@sourceAddr+1,??_MACMemCopyAsync+3
 41620  01721A  0101               	movlb	1	; () banked
 41621  01721C  5107               	movf	??_MACMemCopyAsync& (0+255),w,b
 41622  01721E  0101               	movlb	1	; () banked
 41623  017220  2709               	addwf	(??_MACMemCopyAsync+2)& (0+255),f,b
 41624  017222  0101               	movlb	1	; () banked
 41625  017224  5108               	movf	(??_MACMemCopyAsync+1)& (0+255),w,b
 41626  017226  0101               	movlb	1	; () banked
 41627  017228  230A               	addwfc	(??_MACMemCopyAsync+3)& (0+255),f,b
 41628  01722A  0101               	movlb	1	; () banked
 41629  01722C  5109               	movf	(??_MACMemCopyAsync+2)& (0+255),w,b
 41630  01722E  0101               	movlb	1	; () banked
 41631  017230  2705               	addwf	MACMemCopyAsync@len& (0+255),f,b
 41632  017232  0101               	movlb	1	; () banked
 41633  017234  510A               	movf	(??_MACMemCopyAsync+3)& (0+255),w,b
 41634  017236  0101               	movlb	1	; () banked
 41635  017238  2306               	addwfc	(MACMemCopyAsync@len+1)& (0+255),f,b
 41636  01723A                     l349:
 41637  01723A  BAD2               	btfsc	4050,5,c	;volatile
 41638  01723C  D7FE               	goto	l349
 41639                           
 41640                           ;ETH97J60.c: 999: EDMAST = sourceAddr;
 41641  01723E  C103  FEF0         	movff	MACMemCopyAsync@sourceAddr,3824	;volatile
 41642  017242  C104  FEF1         	movff	MACMemCopyAsync@sourceAddr+1,3825	;volatile
 41643                           
 41644                           ;ETH97J60.c: 1000: EDMADST = destAddr;
 41645  017246  C101  FEF4         	movff	MACMemCopyAsync@destAddr,3828	;volatile
 41646  01724A  C102  FEF5         	movff	MACMemCopyAsync@destAddr+1,3829	;volatile
 41647                           
 41648                           ;ETH97J60.c: 1001: if((sourceAddr <= ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul -
      +                           0ul)-2ul) | 0x0001ul)) && (len > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0u
      +                          l)-2ul) | 0x0001ul)))
 41649  01724E  0EA6               	movlw	166
 41650  017250  0101               	movlb	1	; () banked
 41651  017252  5D03               	subwf	MACMemCopyAsync@sourceAddr& (0+255),w,b
 41652  017254  0E12               	movlw	18
 41653  017256  0101               	movlb	1	; () banked
 41654  017258  5904               	subwfb	(MACMemCopyAsync@sourceAddr+1)& (0+255),w,b
 41655  01725A  B0D8               	btfsc	status,0,c
 41656  01725C  D00F               	goto	l9928
 41657                           
 41658                           ; BSR set to: 1
 41659  01725E  0EA6               	movlw	166
 41660  017260  0101               	movlb	1	; () banked
 41661  017262  5D05               	subwf	MACMemCopyAsync@len& (0+255),w,b
 41662  017264  0E12               	movlw	18
 41663  017266  0101               	movlb	1	; () banked
 41664  017268  5906               	subwfb	(MACMemCopyAsync@len+1)& (0+255),w,b
 41665  01726A  A0D8               	btfss	status,0,c
 41666  01726C  D007               	goto	l9928
 41667                           
 41668                           ; BSR set to: 1
 41669                           ;ETH97J60.c: 1002: len -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul)
      +                           | 0x0001ul)-(0ul)+1ul);
 41670  01726E  0101               	movlb	1	; () banked
 41671  017270  0EA6               	movlw	166
 41672  017272  0101               	movlb	1	; () banked
 41673  017274  5F05               	subwf	MACMemCopyAsync@len& (0+255),f,b
 41674  017276  0E12               	movlw	18
 41675  017278  0101               	movlb	1	; () banked
 41676  01727A  5B06               	subwfb	(MACMemCopyAsync@len+1)& (0+255),f,b
 41677  01727C                     l9928:
 41678                           
 41679                           ; BSR set to: 1
 41680                           ;ETH97J60.c: 1003: EDMAND = len;
 41681  01727C  C105  FEF2         	movff	MACMemCopyAsync@len,3826	;volatile
 41682  017280  C106  FEF3         	movff	MACMemCopyAsync@len+1,3827	;volatile
 41683                           
 41684                           ; BSR set to: 1
 41685                           ;ETH97J60.c: 1004: ECON1bits.CSUMEN = 0;
 41686  017284  98D2               	bcf	4050,4,c	;volatile
 41687                           
 41688                           ; BSR set to: 1
 41689                           ;ETH97J60.c: 1005: ECON1bits.DMAST = 1;
 41690  017286  8AD2               	bsf	4050,5,c	;volatile
 41691  017288                     l353:
 41692  017288  BAD2               	btfsc	4050,5,c	;volatile
 41693  01728A  D7FE               	goto	l353
 41694                           
 41695                           ;ETH97J60.c: 1008: if(UpdateReadPointer)
 41696  01728C  0101               	movlb	1	; () banked
 41697  01728E  5110               	movf	MACMemCopyAsync@UpdateReadPointer& (0+255),w,b
 41698  017290  B4D8               	btfsc	status,2,c
 41699  017292  0012               	return	
 41700                           
 41701                           ; BSR set to: 1
 41702                           ;ETH97J60.c: 1009: {
 41703                           ;ETH97J60.c: 1010: len++;
 41704  017294  0101               	movlb	1	; () banked
 41705  017296  4B05               	infsnz	MACMemCopyAsync@len& (0+255),f,b
 41706  017298  2B06               	incf	(MACMemCopyAsync@len+1)& (0+255),f,b
 41707                           
 41708                           ; BSR set to: 1
 41709                           ;ETH97J60.c: 1011: if((sourceAddr <= ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul -
      +                           0ul)-2ul) | 0x0001ul)) && (len > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0u
      +                          l)-2ul) | 0x0001ul)))
 41710  01729A  0EA6               	movlw	166
 41711  01729C  0101               	movlb	1	; () banked
 41712  01729E  5D03               	subwf	MACMemCopyAsync@sourceAddr& (0+255),w,b
 41713  0172A0  0E12               	movlw	18
 41714  0172A2  0101               	movlb	1	; () banked
 41715  0172A4  5904               	subwfb	(MACMemCopyAsync@sourceAddr+1)& (0+255),w,b
 41716  0172A6  B0D8               	btfsc	status,0,c
 41717  0172A8  D00F               	goto	l9944
 41718                           
 41719                           ; BSR set to: 1
 41720  0172AA  0EA6               	movlw	166
 41721  0172AC  0101               	movlb	1	; () banked
 41722  0172AE  5D05               	subwf	MACMemCopyAsync@len& (0+255),w,b
 41723  0172B0  0E12               	movlw	18
 41724  0172B2  0101               	movlb	1	; () banked
 41725  0172B4  5906               	subwfb	(MACMemCopyAsync@len+1)& (0+255),w,b
 41726  0172B6  A0D8               	btfss	status,0,c
 41727  0172B8  D007               	goto	l9944
 41728                           
 41729                           ; BSR set to: 1
 41730                           ;ETH97J60.c: 1012: len -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul)
      +                           | 0x0001ul)-(0ul)+1ul);
 41731  0172BA  0101               	movlb	1	; () banked
 41732  0172BC  0EA6               	movlw	166
 41733  0172BE  0101               	movlb	1	; () banked
 41734  0172C0  5F05               	subwf	MACMemCopyAsync@len& (0+255),f,b
 41735  0172C2  0E12               	movlw	18
 41736  0172C4  0101               	movlb	1	; () banked
 41737  0172C6  5B06               	subwfb	(MACMemCopyAsync@len+1)& (0+255),f,b
 41738  0172C8                     l9944:
 41739                           
 41740                           ; BSR set to: 1
 41741                           ;ETH97J60.c: 1013: ERDPT = len;
 41742  0172C8  C105  FF7A         	movff	MACMemCopyAsync@len,3962	;volatile
 41743  0172CC  C106  FF7B         	movff	MACMemCopyAsync@len+1,3963	;volatile
 41744  0172D0  0012               	return	
 41745  0172D2                     __end_of_MACMemCopyAsync:
 41746                           	opt stack 0
 41747                           tblptru	equ	0xFF8
 41748                           tblptrh	equ	0xFF7
 41749                           tblptrl	equ	0xFF6
 41750                           tablat	equ	0xFF5
 41751                           prodh	equ	0xFF4
 41752                           prodl	equ	0xFF3
 41753                           intcon	equ	0xFF2
 41754                           intcon2	equ	0xFF1
 41755                           intcon3	equ	0xFF0
 41756                           indf0	equ	0xFEF
 41757                           postinc0	equ	0xFEE
 41758                           fsr0h	equ	0xFEA
 41759                           fsr0l	equ	0xFE9
 41760                           wreg	equ	0xFE8
 41761                           indf1	equ	0xFE7
 41762                           postinc1	equ	0xFE6
 41763                           postdec1	equ	0xFE5
 41764                           fsr1h	equ	0xFE2
 41765                           fsr1l	equ	0xFE1
 41766                           indf2	equ	0xFDF
 41767                           postinc2	equ	0xFDE
 41768                           postdec2	equ	0xFDD
 41769                           fsr2h	equ	0xFDA
 41770                           fsr2l	equ	0xFD9
 41771                           status	equ	0xFD8
 41772                           
 41773 ;; *************** function _MACGet *****************
 41774 ;; Defined at:
 41775 ;;		line 1079 in file "../tcpip/ETH97J60.c"
 41776 ;; Parameters:    Size  Location     Type
 41777 ;;		None
 41778 ;; Auto vars:     Size  Location     Type
 41779 ;;		None
 41780 ;; Return value:  Size  Location     Type
 41781 ;;                  1    wreg      unsigned char 
 41782 ;; Registers used:
 41783 ;;		wreg, status,2
 41784 ;; Tracked objects:
 41785 ;;		On entry : 0/0
 41786 ;;		On exit  : 0/0
 41787 ;;		Unchanged: 0/0
 41788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41793 ;;Total ram usage:        0 bytes
 41794 ;; Hardware stack levels used:    1
 41795 ;; Hardware stack levels required when called:   10
 41796 ;; This function calls:
 41797 ;;		Nothing
 41798 ;; This function is called by:
 41799 ;;		_MACMemCopyAsync
 41800 ;;		_GetMaxSegSizeOption
 41801 ;; This function uses a non-reentrant model
 41802 ;;
 41803                           
 41804                           	psect	text105
 41805  01BA68                     __ptext105:
 41806                           	opt stack 0
 41807  01BA68                     _MACGet:
 41808                           	opt stack 15
 41809                           
 41810                           ; BSR set to: 1
 41811                           ;incstack = 0
 41812  01BA68  CF61 FE7E          	movff	3937,3710	;# 
 41813                           
 41814                           ;ETH97J60.c: 1083: return errataTempL;
 41815  01BA6C  010E               	movlb	14	; () banked
 41816  01BA6E  517E               	movf	126,w,b
 41817  01BA70  0012               	return	
 41818  01BA72                     __end_of_MACGet:
 41819                           	opt stack 0
 41820                           tblptru	equ	0xFF8
 41821                           tblptrh	equ	0xFF7
 41822                           tblptrl	equ	0xFF6
 41823                           tablat	equ	0xFF5
 41824                           prodh	equ	0xFF4
 41825                           prodl	equ	0xFF3
 41826                           intcon	equ	0xFF2
 41827                           intcon2	equ	0xFF1
 41828                           intcon3	equ	0xFF0
 41829                           indf0	equ	0xFEF
 41830                           postinc0	equ	0xFEE
 41831                           fsr0h	equ	0xFEA
 41832                           fsr0l	equ	0xFE9
 41833                           wreg	equ	0xFE8
 41834                           indf1	equ	0xFE7
 41835                           postinc1	equ	0xFE6
 41836                           postdec1	equ	0xFE5
 41837                           fsr1h	equ	0xFE2
 41838                           fsr1l	equ	0xFE1
 41839                           indf2	equ	0xFDF
 41840                           postinc2	equ	0xFDE
 41841                           postdec2	equ	0xFDD
 41842                           fsr2h	equ	0xFDA
 41843                           fsr2l	equ	0xFD9
 41844                           status	equ	0xFD8
 41845                           
 41846 ;; *************** function _MACIsMemCopyDone *****************
 41847 ;; Defined at:
 41848 ;;		line 1056 in file "../tcpip/ETH97J60.c"
 41849 ;; Parameters:    Size  Location     Type
 41850 ;;		None
 41851 ;; Auto vars:     Size  Location     Type
 41852 ;;		None
 41853 ;; Return value:  Size  Location     Type
 41854 ;;                  1    wreg      unsigned char 
 41855 ;; Registers used:
 41856 ;;		wreg
 41857 ;; Tracked objects:
 41858 ;;		On entry : 0/0
 41859 ;;		On exit  : 0/0
 41860 ;;		Unchanged: 0/0
 41861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41866 ;;Total ram usage:        0 bytes
 41867 ;; Hardware stack levels used:    1
 41868 ;; Hardware stack levels required when called:   10
 41869 ;; This function calls:
 41870 ;;		Nothing
 41871 ;; This function is called by:
 41872 ;;		_TCPRAMCopy
 41873 ;; This function uses a non-reentrant model
 41874 ;;
 41875                           
 41876                           	psect	text106
 41877  01BA50                     __ptext106:
 41878                           	opt stack 0
 41879  01BA50                     _MACIsMemCopyDone:
 41880                           	opt stack 16
 41881                           
 41882                           ;ETH97J60.c: 1058: return !ECON1bits.DMAST;
 41883                           
 41884                           ; BSR set to: 14
 41885                           ;incstack = 0
 41886  01BA50  BAD2               	btfsc	4050,5,c	;volatile
 41887  01BA52  D002               	goto	u10290
 41888  01BA54  0E01               	movlw	1
 41889  01BA56  0012               	return	
 41890  01BA58                     u10290:
 41891  01BA58  0E00               	movlw	0
 41892  01BA5A  0012               	return	
 41893  01BA5C                     __end_of_MACIsMemCopyDone:
 41894                           	opt stack 0
 41895                           tblptru	equ	0xFF8
 41896                           tblptrh	equ	0xFF7
 41897                           tblptrl	equ	0xFF6
 41898                           tablat	equ	0xFF5
 41899                           prodh	equ	0xFF4
 41900                           prodl	equ	0xFF3
 41901                           intcon	equ	0xFF2
 41902                           intcon2	equ	0xFF1
 41903                           intcon3	equ	0xFF0
 41904                           indf0	equ	0xFEF
 41905                           postinc0	equ	0xFEE
 41906                           fsr0h	equ	0xFEA
 41907                           fsr0l	equ	0xFE9
 41908                           wreg	equ	0xFE8
 41909                           indf1	equ	0xFE7
 41910                           postinc1	equ	0xFE6
 41911                           postdec1	equ	0xFE5
 41912                           fsr1h	equ	0xFE2
 41913                           fsr1l	equ	0xFE1
 41914                           indf2	equ	0xFDF
 41915                           postinc2	equ	0xFDE
 41916                           postdec2	equ	0xFDD
 41917                           fsr2h	equ	0xFDA
 41918                           fsr2l	equ	0xFD9
 41919                           status	equ	0xFD8
 41920                           
 41921 ;; *************** function _MACGetArray *****************
 41922 ;; Defined at:
 41923 ;;		line 1108 in file "../tcpip/ETH97J60.c"
 41924 ;; Parameters:    Size  Location     Type
 41925 ;;  val             2    0[BANK1 ] PTR unsigned char 
 41926 ;;		 -> TCPProcess@TCPHeader(20), RAM(3935), IPGetHeader@header(20), ARPProcess@packet(28), 
 41927 ;;		 -> NULL(0), CalcIPBufferChecksum@DataBuffer(20), MACGetHeader@header(20), 
 41928 ;;  len             2    2[BANK1 ] unsigned int 
 41929 ;; Auto vars:     Size  Location     Type
 41930 ;;  w               2    4[BANK1 ] unsigned short 
 41931 ;; Return value:  Size  Location     Type
 41932 ;;                  2    0[BANK1 ] unsigned int 
 41933 ;; Registers used:
 41934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41935 ;; Tracked objects:
 41936 ;;		On entry : 0/0
 41937 ;;		On exit  : 0/0
 41938 ;;		Unchanged: 0/0
 41939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41940 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41941 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41943 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41944 ;;Total ram usage:        6 bytes
 41945 ;; Hardware stack levels used:    1
 41946 ;; Hardware stack levels required when called:   10
 41947 ;; This function calls:
 41948 ;;		Nothing
 41949 ;; This function is called by:
 41950 ;;		_MACGetHeader
 41951 ;;		_CalcIPBufferChecksum
 41952 ;;		_ARPProcess
 41953 ;;		_IPGetHeader
 41954 ;;		_TCPProcess
 41955 ;;		_GetMaxSegSizeOption
 41956 ;;		_TCPRAMCopy
 41957 ;; This function uses a non-reentrant model
 41958 ;;
 41959                           
 41960                           	psect	text107
 41961  01AE84                     __ptext107:
 41962                           	opt stack 0
 41963  01AE84                     _MACGetArray:
 41964                           	opt stack 16
 41965                           
 41966                           ;ETH97J60.c: 1110: WORD w;
 41967                           ;ETH97J60.c: 1112: w = len;
 41968                           
 41969                           ;incstack = 0
 41970  01AE84  C102  F104         	movff	MACGetArray@len,MACGetArray@w
 41971  01AE88  C103  F105         	movff	MACGetArray@len+1,MACGetArray@w+1
 41972                           
 41973                           ;ETH97J60.c: 1113: if(val)
 41974  01AE8C  0101               	movlb	1	; () banked
 41975  01AE8E  5101               	movf	(MACGetArray@val+1)& (0+255),w,b
 41976  01AE90  1100               	iorwf	MACGetArray@val& (0+255),w,b
 41977  01AE92  A4D8               	btfss	status,2,c
 41978  01AE94  D00D               	goto	l9862
 41979  01AE96  D019               	goto	l9864
 41980  01AE98                     l369:
 41981                           
 41982                           ; BSR set to: 1
 41983  01AE98  CF61 FE7E          	movff	3937,3710	;# 
 41984                           
 41985                           ;ETH97J60.c: 1119: *val++ = errataTempL;
 41986  01AE9C  C100  FFD9         	movff	MACGetArray@val,fsr2l
 41987  01AEA0  C101  FFDA         	movff	MACGetArray@val+1,fsr2h
 41988  01AEA4  010E               	movlb	14	; () banked
 41989  01AEA6  CE7E FFDF          	movff	3710,indf2
 41990                           
 41991                           ; BSR set to: 14
 41992  01AEAA  0101               	movlb	1	; () banked
 41993  01AEAC  4B00               	infsnz	MACGetArray@val& (0+255),f,b
 41994  01AEAE  2B01               	incf	(MACGetArray@val+1)& (0+255),f,b
 41995  01AEB0                     l9862:
 41996                           
 41997                           ; BSR set to: 1
 41998  01AEB0  0101               	movlb	1	; () banked
 41999  01AEB2  0704               	decf	MACGetArray@w& (0+255),f,b
 42000  01AEB4  A0D8               	btfss	status,0,c
 42001  01AEB6  0705               	decf	(MACGetArray@w+1)& (0+255),f,b
 42002  01AEB8  0101               	movlb	1	; () banked
 42003  01AEBA  2904               	incf	MACGetArray@w& (0+255),w,b
 42004  01AEBC  B4D8               	btfsc	status,2,c
 42005  01AEBE  2905               	incf	(MACGetArray@w+1)& (0+255),w,b
 42006  01AEC0  B4D8               	btfsc	status,2,c
 42007  01AEC2  0012               	return	
 42008  01AEC4  D7E9               	goto	l369
 42009  01AEC6                     l373:
 42010                           
 42011                           ; BSR set to: 1
 42012  01AEC6  CF61 FE7E          	movff	3937,3710	;# 
 42013  01AECA                     l9864:
 42014  01AECA  0101               	movlb	1	; () banked
 42015  01AECC  0704               	decf	MACGetArray@w& (0+255),f,b
 42016  01AECE  A0D8               	btfss	status,0,c
 42017  01AED0  0705               	decf	(MACGetArray@w+1)& (0+255),f,b
 42018  01AED2  0101               	movlb	1	; () banked
 42019  01AED4  2904               	incf	MACGetArray@w& (0+255),w,b
 42020  01AED6  B4D8               	btfsc	status,2,c
 42021  01AED8  2905               	incf	(MACGetArray@w+1)& (0+255),w,b
 42022  01AEDA  B4D8               	btfsc	status,2,c
 42023                           
 42024                           ; BSR set to: 1
 42025                           
 42026                           ; BSR set to: 1
 42027                           ;ETH97J60.c: 1132: }
 42028                           ;ETH97J60.c: 1138: }
 42029                           ;ETH97J60.c: 1139: }
 42030                           ;ETH97J60.c: 1141: return len;
 42031                           ;	Return value of _MACGetArray is never used
 42032                           
 42033                           ; BSR set to: 1
 42034  01AEDC  0012               	return	
 42035  01AEDE  D7F3               	goto	l373
 42036  01AEE0                     __end_of_MACGetArray:
 42037                           	opt stack 0
 42038                           tblptru	equ	0xFF8
 42039                           tblptrh	equ	0xFF7
 42040                           tblptrl	equ	0xFF6
 42041                           tablat	equ	0xFF5
 42042                           prodh	equ	0xFF4
 42043                           prodl	equ	0xFF3
 42044                           intcon	equ	0xFF2
 42045                           intcon2	equ	0xFF1
 42046                           intcon3	equ	0xFF0
 42047                           indf0	equ	0xFEF
 42048                           postinc0	equ	0xFEE
 42049                           fsr0h	equ	0xFEA
 42050                           fsr0l	equ	0xFE9
 42051                           wreg	equ	0xFE8
 42052                           indf1	equ	0xFE7
 42053                           postinc1	equ	0xFE6
 42054                           postdec1	equ	0xFE5
 42055                           fsr1h	equ	0xFE2
 42056                           fsr1l	equ	0xFE1
 42057                           indf2	equ	0xFDF
 42058                           postinc2	equ	0xFDE
 42059                           postdec2	equ	0xFDD
 42060                           fsr2h	equ	0xFDA
 42061                           fsr2l	equ	0xFD9
 42062                           status	equ	0xFD8
 42063                           
 42064 ;; *************** function _LFSRRand *****************
 42065 ;; Defined at:
 42066 ;;		line 142 in file "../tcpip/helpers.c"
 42067 ;; Parameters:    Size  Location     Type
 42068 ;;		None
 42069 ;; Auto vars:     Size  Location     Type
 42070 ;;  i               1   14[BANK1 ] unsigned char 
 42071 ;; Return value:  Size  Location     Type
 42072 ;;                  2    0[BANK1 ] unsigned int 
 42073 ;; Registers used:
 42074 ;;		wreg, status,2, status,0
 42075 ;; Tracked objects:
 42076 ;;		On entry : 0/0
 42077 ;;		On exit  : 0/0
 42078 ;;		Unchanged: 0/0
 42079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42080 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42081 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42082 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42083 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42084 ;;Total ram usage:       15 bytes
 42085 ;; Hardware stack levels used:    1
 42086 ;; Hardware stack levels required when called:   10
 42087 ;; This function calls:
 42088 ;;		Nothing
 42089 ;; This function is called by:
 42090 ;;		_LFSRSeedRand
 42091 ;;		_GenerateRandomDWORD
 42092 ;;		_CloseSocket
 42093 ;; This function uses a non-reentrant model
 42094 ;;
 42095                           
 42096                           	psect	text108
 42097  019710                     __ptext108:
 42098                           	opt stack 0
 42099  019710                     _LFSRRand:
 42100                           	opt stack 15
 42101                           
 42102                           ;helpers.c: 144: uint8_t i;
 42103                           ;helpers.c: 149: for(i = 0; i < 15; i++)
 42104                           
 42105                           ; BSR set to: 1
 42106                           ;incstack = 0
 42107  019710  0E00               	movlw	0
 42108  019712  0101               	movlb	1	; () banked
 42109  019714  6F0E               	movwf	LFSRRand@i& (0+255),b
 42110  019716  D05E               	goto	L43
 42111  019718                     l10264:
 42112                           
 42113                           ; BSR set to: 1
 42114                           ;helpers.c: 150: dwLFSRRandSeed = (dwLFSRRandSeed >> 1) ^ ((0ul - (dwLFSRRandSeed & 1ul)
      +                          ) & 0xD0000001ul);
 42115  019718  0E01               	movlw	1
 42116  01971A  0100               	movlb	0	; () banked
 42117  01971C  15F3               	andwf	_dwLFSRRandSeed& (0+255),w,b
 42118  01971E  0101               	movlb	1	; () banked
 42119  019720  6F02               	movwf	??_LFSRRand& (0+255),b
 42120  019722  0E00               	movlw	0
 42121  019724  0100               	movlb	0	; () banked
 42122  019726  15F4               	andwf	(_dwLFSRRandSeed+1)& (0+255),w,b
 42123  019728  0101               	movlb	1	; () banked
 42124  01972A  6F03               	movwf	(??_LFSRRand+1)& (0+255),b
 42125  01972C  0E00               	movlw	0
 42126  01972E  0100               	movlb	0	; () banked
 42127  019730  15F5               	andwf	(_dwLFSRRandSeed+2)& (0+255),w,b
 42128  019732  0101               	movlb	1	; () banked
 42129  019734  6F04               	movwf	(??_LFSRRand+2)& (0+255),b
 42130  019736  0E00               	movlw	0
 42131  019738  0100               	movlb	0	; () banked
 42132  01973A  15F6               	andwf	(_dwLFSRRandSeed+3)& (0+255),w,b
 42133  01973C  0101               	movlb	1	; () banked
 42134  01973E  6F05               	movwf	(??_LFSRRand+3)& (0+255),b
 42135  019740  0101               	movlb	1	; () banked
 42136  019742  1F02               	comf	??_LFSRRand& (0+255),f,b
 42137  019744  1F03               	comf	(??_LFSRRand+1)& (0+255),f,b
 42138  019746  1F04               	comf	(??_LFSRRand+2)& (0+255),f,b
 42139  019748  1F05               	comf	(??_LFSRRand+3)& (0+255),f,b
 42140  01974A  2B02               	incf	??_LFSRRand& (0+255),f,b
 42141  01974C  0E00               	movlw	0
 42142  01974E  2303               	addwfc	(??_LFSRRand+1)& (0+255),f,b
 42143  019750  2304               	addwfc	(??_LFSRRand+2)& (0+255),f,b
 42144  019752  2305               	addwfc	(??_LFSRRand+3)& (0+255),f,b
 42145  019754  0E01               	movlw	1
 42146  019756  0101               	movlb	1	; () banked
 42147  019758  1502               	andwf	??_LFSRRand& (0+255),w,b
 42148  01975A  0101               	movlb	1	; () banked
 42149  01975C  6F06               	movwf	(??_LFSRRand+4)& (0+255),b
 42150  01975E  0E00               	movlw	0
 42151  019760  0101               	movlb	1	; () banked
 42152  019762  1503               	andwf	(??_LFSRRand+1)& (0+255),w,b
 42153  019764  0101               	movlb	1	; () banked
 42154  019766  6F07               	movwf	(??_LFSRRand+5)& (0+255),b
 42155  019768  0E00               	movlw	0
 42156  01976A  0101               	movlb	1	; () banked
 42157  01976C  1504               	andwf	(??_LFSRRand+2)& (0+255),w,b
 42158  01976E  0101               	movlb	1	; () banked
 42159  019770  6F08               	movwf	(??_LFSRRand+6)& (0+255),b
 42160  019772  0ED0               	movlw	208
 42161  019774  0101               	movlb	1	; () banked
 42162  019776  1505               	andwf	(??_LFSRRand+3)& (0+255),w,b
 42163  019778  0101               	movlb	1	; () banked
 42164  01977A  6F09               	movwf	(??_LFSRRand+7)& (0+255),b
 42165  01977C  0100               	movlb	0	; () banked
 42166  01977E  C0F3  F10A         	movff	_dwLFSRRandSeed,??_LFSRRand+8
 42167  019782  0100               	movlb	0	; () banked
 42168  019784  C0F4  F10B         	movff	_dwLFSRRandSeed+1,??_LFSRRand+9
 42169  019788  0100               	movlb	0	; () banked
 42170  01978A  C0F5  F10C         	movff	_dwLFSRRandSeed+2,??_LFSRRand+10
 42171  01978E  0100               	movlb	0	; () banked
 42172  019790  C0F6  F10D         	movff	_dwLFSRRandSeed+3,??_LFSRRand+11
 42173  019794  0101               	movlb	1	; () banked
 42174  019796  90D8               	bcf	status,0,c
 42175  019798  330D               	rrcf	(??_LFSRRand+11)& (0+255),f,b
 42176  01979A  330C               	rrcf	(??_LFSRRand+10)& (0+255),f,b
 42177  01979C  330B               	rrcf	(??_LFSRRand+9)& (0+255),f,b
 42178  01979E  330A               	rrcf	(??_LFSRRand+8)& (0+255),f,b
 42179  0197A0  0101               	movlb	1	; () banked
 42180  0197A2  5106               	movf	(??_LFSRRand+4)& (0+255),w,b
 42181  0197A4  0101               	movlb	1	; () banked
 42182  0197A6  190A               	xorwf	(??_LFSRRand+8)& (0+255),w,b
 42183  0197A8  0100               	movlb	0	; () banked
 42184  0197AA  6FF3               	movwf	_dwLFSRRandSeed& (0+255),b
 42185  0197AC  0101               	movlb	1	; () banked
 42186  0197AE  5107               	movf	(??_LFSRRand+5)& (0+255),w,b
 42187  0197B0  0101               	movlb	1	; () banked
 42188  0197B2  190B               	xorwf	(??_LFSRRand+9)& (0+255),w,b
 42189  0197B4  0100               	movlb	0	; () banked
 42190  0197B6  6FF4               	movwf	(_dwLFSRRandSeed+1)& (0+255),b
 42191  0197B8  0101               	movlb	1	; () banked
 42192  0197BA  5108               	movf	(??_LFSRRand+6)& (0+255),w,b
 42193  0197BC  0101               	movlb	1	; () banked
 42194  0197BE  190C               	xorwf	(??_LFSRRand+10)& (0+255),w,b
 42195  0197C0  0100               	movlb	0	; () banked
 42196  0197C2  6FF5               	movwf	(_dwLFSRRandSeed+2)& (0+255),b
 42197  0197C4  0101               	movlb	1	; () banked
 42198  0197C6  5109               	movf	(??_LFSRRand+7)& (0+255),w,b
 42199  0197C8  0101               	movlb	1	; () banked
 42200  0197CA  190D               	xorwf	(??_LFSRRand+11)& (0+255),w,b
 42201  0197CC  0100               	movlb	0	; () banked
 42202  0197CE  6FF6               	movwf	(_dwLFSRRandSeed+3)& (0+255),b
 42203                           
 42204                           ; BSR set to: 0
 42205  0197D0  0101               	movlb	1	; () banked
 42206  0197D2  2B0E               	incf	LFSRRand@i& (0+255),f,b
 42207  0197D4                     L43:
 42208  0197D4  0E0E               	movlw	14
 42209  0197D6  0101               	movlb	1	; () banked
 42210  0197D8  650E               	cpfsgt	LFSRRand@i& (0+255),b
 42211  0197DA  D79E               	goto	l10264
 42212                           
 42213                           ; BSR set to: 1
 42214                           ;helpers.c: 153: return (uint16_t)dwLFSRRandSeed;
 42215  0197DC  C0F3  F100         	movff	_dwLFSRRandSeed,?_LFSRRand
 42216  0197E0  C0F4  F101         	movff	_dwLFSRRandSeed+1,?_LFSRRand+1
 42217                           
 42218                           ; BSR set to: 1
 42219  0197E4  0012               	return	
 42220  0197E6                     __end_of_LFSRRand:
 42221                           	opt stack 0
 42222                           tblptru	equ	0xFF8
 42223                           tblptrh	equ	0xFF7
 42224                           tblptrl	equ	0xFF6
 42225                           tablat	equ	0xFF5
 42226                           prodh	equ	0xFF4
 42227                           prodl	equ	0xFF3
 42228                           intcon	equ	0xFF2
 42229                           intcon2	equ	0xFF1
 42230                           intcon3	equ	0xFF0
 42231                           indf0	equ	0xFEF
 42232                           postinc0	equ	0xFEE
 42233                           fsr0h	equ	0xFEA
 42234                           fsr0l	equ	0xFE9
 42235                           wreg	equ	0xFE8
 42236                           indf1	equ	0xFE7
 42237                           postinc1	equ	0xFE6
 42238                           postdec1	equ	0xFE5
 42239                           fsr1h	equ	0xFE2
 42240                           fsr1l	equ	0xFE1
 42241                           indf2	equ	0xFDF
 42242                           postinc2	equ	0xFDE
 42243                           postdec2	equ	0xFDD
 42244                           fsr2h	equ	0xFDA
 42245                           fsr2l	equ	0xFD9
 42246                           status	equ	0xFD8
 42247                           
 42248 ;; *************** function _MACInit *****************
 42249 ;; Defined at:
 42250 ;;		line 145 in file "../tcpip/ETH97J60.c"
 42251 ;; Parameters:    Size  Location     Type
 42252 ;;		None
 42253 ;; Auto vars:     Size  Location     Type
 42254 ;;  i               1    0        unsigned char 
 42255 ;; Return value:  Size  Location     Type
 42256 ;;		None               void
 42257 ;; Registers used:
 42258 ;;		wreg, status,2, status,0, cstack
 42259 ;; Tracked objects:
 42260 ;;		On entry : 0/0
 42261 ;;		On exit  : 0/0
 42262 ;;		Unchanged: 0/0
 42263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42268 ;;Total ram usage:        0 bytes
 42269 ;; Hardware stack levels used:    1
 42270 ;; Hardware stack levels required when called:   11
 42271 ;; This function calls:
 42272 ;;		_MACPut
 42273 ;;		_WritePHYReg
 42274 ;; This function is called by:
 42275 ;;		_StackInit
 42276 ;; This function uses a non-reentrant model
 42277 ;;
 42278                           
 42279                           	psect	text109
 42280  018BE6                     __ptext109:
 42281                           	opt stack 0
 42282  018BE6                     _MACInit:
 42283                           	opt stack 16
 42284                           
 42285                           ;ETH97J60.c: 147: BYTE i;
 42286                           ;ETH97J60.c: 149: TRISA &= 0xFC;
 42287                           
 42288                           ; BSR set to: 1
 42289                           ;incstack = 0
 42290  018BE6  0EFC               	movlw	252
 42291  018BE8  1692               	andwf	3986,f,c	;volatile
 42292                           
 42293                           ;ETH97J60.c: 150: ECON2bits.ETHEN = 1;
 42294  018BEA  010E               	movlb	14	; () banked
 42295  018BEC  8BFE               	bsf	254,5,b	;volatile
 42296  018BEE                     l257:
 42297                           
 42298                           ; BSR set to: 14
 42299  018BEE  010E               	movlb	14	; () banked
 42300  018BF0  A1FD               	btfss	253,0,b	;volatile
 42301  018BF2  D7FD               	goto	l257
 42302                           
 42303                           ; BSR set to: 14
 42304                           ;ETH97J60.c: 164: flags.v = 0;
 42305                           
 42306                           ; BSR set to: 14
 42307  018BF4  0E00               	movlw	0
 42308  018BF6  0101               	movlb	1	; () banked
 42309  018BF8  6FB6               	movwf	_flags& (0+255),b
 42310                           
 42311                           ; BSR set to: 1
 42312                           ;ETH97J60.c: 165: flags.bits.bWasDiscarded = 1;
 42313  018BFA  0101               	movlb	1	; () banked
 42314  018BFC  81B6               	bsf	_flags& (0+255),0,b
 42315                           
 42316                           ;ETH97J60.c: 166: NextPacketLocation.Val = (0ul);
 42317  018BFE  0E00               	movlw	0
 42318  018C00  0100               	movlb	0	; () banked
 42319  018C02  6FE4               	movwf	(_NextPacketLocation+1)& (0+255),b
 42320  018C04  0E00               	movlw	0
 42321  018C06  0100               	movlb	0	; () banked
 42322  018C08  6FE3               	movwf	_NextPacketLocation& (0+255),b
 42323                           
 42324                           ;ETH97J60.c: 167: ERXST = (0ul);
 42325  018C0A  0E00               	movlw	0
 42326  018C0C  010E               	movlb	14	; () banked
 42327  018C0E  6FE9               	movwf	233,b	;volatile
 42328  018C10  0E00               	movlw	0
 42329  018C12  010E               	movlb	14	; () banked
 42330  018C14  6FE8               	movwf	232,b	;volatile
 42331                           
 42332                           ;ETH97J60.c: 168: ERXRDPTL = (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2
      +                          ul) | 0x0001ul) & 0xFF);
 42333  018C16  0EA5               	movlw	165
 42334  018C18  010E               	movlb	14	; () banked
 42335  018C1A  6FEC               	movwf	236,b	;volatile
 42336                           
 42337                           ;ETH97J60.c: 169: ERXRDPTH = ((((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-
      +                          2ul) | 0x0001ul)>>8) & 0xFF);
 42338  018C1C  0E12               	movlw	18
 42339  018C1E  010E               	movlb	14	; () banked
 42340  018C20  6FED               	movwf	237,b	;volatile
 42341                           
 42342                           ;ETH97J60.c: 170: ERXND = ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) 
      +                          | 0x0001ul);
 42343  018C22  0E12               	movlw	18
 42344  018C24  010E               	movlb	14	; () banked
 42345  018C26  6FEB               	movwf	235,b	;volatile
 42346  018C28  0EA5               	movlw	165
 42347  018C2A  010E               	movlb	14	; () banked
 42348  018C2C  6FEA               	movwf	234,b	;volatile
 42349                           
 42350                           ;ETH97J60.c: 171: ETXST = ((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul);
 42351  018C2E  0E12               	movlw	18
 42352  018C30  010E               	movlb	14	; () banked
 42353  018C32  6FE5               	movwf	229,b	;volatile
 42354  018C34  0EA6               	movlw	166
 42355  018C36  010E               	movlb	14	; () banked
 42356  018C38  6FE4               	movwf	228,b	;volatile
 42357                           
 42358                           ;ETH97J60.c: 174: EWRPT = ((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul);
 42359  018C3A  0E12               	movlw	18
 42360  018C3C  010E               	movlb	14	; () banked
 42361  018C3E  6FE3               	movwf	227,b	;volatile
 42362  018C40  0EA6               	movlw	166
 42363  018C42  010E               	movlb	14	; () banked
 42364  018C44  6FE2               	movwf	226,b	;volatile
 42365                           
 42366                           ; BSR set to: 14
 42367                           ;ETH97J60.c: 175: MACPut(0x00);
 42368  018C46  0E00               	movlw	0
 42369  018C48  EC21  F0DD         	call	_MACPut
 42370                           
 42371                           ;ETH97J60.c: 184: MACON1 = (1<<3) | (1<<2) | (1); __nop();
 42372  018C4C  0E0D               	movlw	13
 42373  018C4E  010E               	movlb	14	; () banked
 42374  018C50  6FA0               	movwf	160,b	;volatile
 42375                           
 42376                           ; BSR set to: 14
 42377  018C52  F000               	nop	
 42378                           
 42379                           ;ETH97J60.c: 191: MACON3 = (1<<5) | (1<<4) | (1<<1); __nop();
 42380  018C54  0E32               	movlw	50
 42381  018C56  010E               	movlb	14	; () banked
 42382  018C58  6FA2               	movwf	162,b	;volatile
 42383                           
 42384                           ; BSR set to: 14
 42385  018C5A  F000               	nop	
 42386                           
 42387                           ;ETH97J60.c: 192: MABBIPG = 0x12; __nop();
 42388  018C5C  0E12               	movlw	18
 42389  018C5E  010E               	movlb	14	; () banked
 42390  018C60  6FA4               	movwf	164,b	;volatile
 42391                           
 42392                           ; BSR set to: 14
 42393  018C62  F000               	nop	
 42394                           
 42395                           ;ETH97J60.c: 198: MACON4 = (1<<6); __nop();
 42396  018C64  0E40               	movlw	64
 42397  018C66  010E               	movlb	14	; () banked
 42398  018C68  6FA3               	movwf	163,b	;volatile
 42399                           
 42400                           ; BSR set to: 14
 42401  018C6A  F000               	nop	
 42402                           
 42403                           ;ETH97J60.c: 203: MAIPGL = 0x12; __nop();
 42404  018C6C  0E12               	movlw	18
 42405  018C6E  010E               	movlb	14	; () banked
 42406  018C70  6FA6               	movwf	166,b	;volatile
 42407                           
 42408                           ; BSR set to: 14
 42409  018C72  F000               	nop	
 42410                           
 42411                           ;ETH97J60.c: 204: MAIPGH = 0x0C; __nop();
 42412  018C74  0E0C               	movlw	12
 42413  018C76  010E               	movlb	14	; () banked
 42414  018C78  6FA7               	movwf	167,b	;volatile
 42415                           
 42416                           ; BSR set to: 14
 42417  018C7A  F000               	nop	
 42418                           
 42419                           ;ETH97J60.c: 207: MAMXFLL = (6+6+2+1500+4 & 0xFF); __nop();
 42420  018C7C  0EEE               	movlw	238
 42421  018C7E  010E               	movlb	14	; () banked
 42422  018C80  6FAA               	movwf	170,b	;volatile
 42423                           
 42424                           ; BSR set to: 14
 42425  018C82  F000               	nop	
 42426                           
 42427                           ;ETH97J60.c: 208: MAMXFLH = ((6+6+2+1500+4>>8) & 0xFF); __nop();
 42428  018C84  0E05               	movlw	5
 42429  018C86  010E               	movlb	14	; () banked
 42430  018C88  6FAB               	movwf	171,b	;volatile
 42431                           
 42432                           ; BSR set to: 14
 42433  018C8A  F000               	nop	
 42434                           
 42435                           ;ETH97J60.c: 211: MAADR1 = AppConfig.MyMACAddr.v[0]; __nop();
 42436  018C8C  C269  FE84         	movff	_AppConfig+45,3716	;volatile
 42437  018C90  F000               	nop	
 42438                           
 42439                           ;ETH97J60.c: 212: MAADR2 = AppConfig.MyMACAddr.v[1]; __nop();
 42440  018C92  C26A  FE85         	movff	_AppConfig+46,3717	;volatile
 42441  018C96  F000               	nop	
 42442                           
 42443                           ;ETH97J60.c: 213: MAADR3 = AppConfig.MyMACAddr.v[2]; __nop();
 42444  018C98  C26B  FE82         	movff	_AppConfig+47,3714	;volatile
 42445  018C9C  F000               	nop	
 42446                           
 42447                           ;ETH97J60.c: 214: MAADR4 = AppConfig.MyMACAddr.v[3]; __nop();
 42448  018C9E  C26C  FE83         	movff	_AppConfig+48,3715	;volatile
 42449  018CA2  F000               	nop	
 42450                           
 42451                           ;ETH97J60.c: 215: MAADR5 = AppConfig.MyMACAddr.v[4]; __nop();
 42452  018CA4  C26D  FE80         	movff	_AppConfig+49,3712	;volatile
 42453  018CA8  F000               	nop	
 42454                           
 42455                           ;ETH97J60.c: 216: MAADR6 = AppConfig.MyMACAddr.v[5]; __nop();
 42456  018CAA  C26E  FE81         	movff	_AppConfig+50,3713	;volatile
 42457  018CAE  F000               	nop	
 42458                           
 42459                           ;ETH97J60.c: 219: WritePHYReg(0x10, (1ul<<8) | (1ul<<4));
 42460  018CB0  0E01               	movlw	1
 42461  018CB2  0101               	movlb	1	; () banked
 42462  018CB4  6F01               	movwf	(WritePHYReg@Data+1)& (0+255),b
 42463  018CB6  0E10               	movlw	16
 42464  018CB8  0101               	movlb	1	; () banked
 42465  018CBA  6F00               	movwf	WritePHYReg@Data& (0+255),b
 42466  018CBC  0E10               	movlw	16
 42467  018CBE  EC45  F0DA         	call	_WritePHYReg
 42468                           
 42469                           ;ETH97J60.c: 222: WritePHYReg(0x14, 0x3472);
 42470  018CC2  0E34               	movlw	52
 42471  018CC4  0101               	movlb	1	; () banked
 42472  018CC6  6F01               	movwf	(WritePHYReg@Data+1)& (0+255),b
 42473  018CC8  0E72               	movlw	114
 42474  018CCA  0101               	movlb	1	; () banked
 42475  018CCC  6F00               	movwf	WritePHYReg@Data& (0+255),b
 42476  018CCE  0E14               	movlw	20
 42477  018CD0  EC45  F0DA         	call	_WritePHYReg
 42478                           
 42479                           ;ETH97J60.c: 228: WritePHYReg(0x00, 0x0000);
 42480  018CD4  0E00               	movlw	0
 42481  018CD6  0101               	movlb	1	; () banked
 42482  018CD8  6F01               	movwf	(WritePHYReg@Data+1)& (0+255),b
 42483  018CDA  0E00               	movlw	0
 42484  018CDC  0101               	movlb	1	; () banked
 42485  018CDE  6F00               	movwf	WritePHYReg@Data& (0+255),b
 42486  018CE0  0E00               	movlw	0
 42487  018CE2  EC45  F0DA         	call	_WritePHYReg
 42488                           
 42489                           ;ETH97J60.c: 232: ECON1bits.RXEN = 1;
 42490  018CE6  84D2               	bsf	4050,2,c	;volatile
 42491  018CE8  0012               	return	
 42492  018CEA                     __end_of_MACInit:
 42493                           	opt stack 0
 42494                           tblptru	equ	0xFF8
 42495                           tblptrh	equ	0xFF7
 42496                           tblptrl	equ	0xFF6
 42497                           tablat	equ	0xFF5
 42498                           prodh	equ	0xFF4
 42499                           prodl	equ	0xFF3
 42500                           intcon	equ	0xFF2
 42501                           intcon2	equ	0xFF1
 42502                           intcon3	equ	0xFF0
 42503                           indf0	equ	0xFEF
 42504                           postinc0	equ	0xFEE
 42505                           fsr0h	equ	0xFEA
 42506                           fsr0l	equ	0xFE9
 42507                           wreg	equ	0xFE8
 42508                           indf1	equ	0xFE7
 42509                           postinc1	equ	0xFE6
 42510                           postdec1	equ	0xFE5
 42511                           fsr1h	equ	0xFE2
 42512                           fsr1l	equ	0xFE1
 42513                           indf2	equ	0xFDF
 42514                           postinc2	equ	0xFDE
 42515                           postdec2	equ	0xFDD
 42516                           fsr2h	equ	0xFDA
 42517                           fsr2l	equ	0xFD9
 42518                           status	equ	0xFD8
 42519                           
 42520 ;; *************** function _WritePHYReg *****************
 42521 ;; Defined at:
 42522 ;;		line 1288 in file "../tcpip/ETH97J60.c"
 42523 ;; Parameters:    Size  Location     Type
 42524 ;;  Register        1    wreg     unsigned char 
 42525 ;;  Data            2    0[BANK1 ] unsigned int 
 42526 ;; Auto vars:     Size  Location     Type
 42527 ;;  Register        1    2[BANK1 ] unsigned char 
 42528 ;;  GIESave         1    3[BANK1 ] unsigned char 
 42529 ;; Return value:  Size  Location     Type
 42530 ;;		None               void
 42531 ;; Registers used:
 42532 ;;		wreg, status,2, status,0
 42533 ;; Tracked objects:
 42534 ;;		On entry : 0/0
 42535 ;;		On exit  : 0/0
 42536 ;;		Unchanged: 0/0
 42537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42538 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42539 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42541 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42542 ;;Total ram usage:        4 bytes
 42543 ;; Hardware stack levels used:    1
 42544 ;; Hardware stack levels required when called:   10
 42545 ;; This function calls:
 42546 ;;		Nothing
 42547 ;; This function is called by:
 42548 ;;		_MACInit
 42549 ;; This function uses a non-reentrant model
 42550 ;;
 42551                           
 42552                           	psect	text110
 42553  01B48A                     __ptext110:
 42554                           	opt stack 0
 42555  01B48A                     _WritePHYReg:
 42556                           	opt stack 16
 42557                           
 42558                           ;incstack = 0
 42559                           ;WritePHYReg@Register stored from wreg
 42560  01B48A  0101               	movlb	1	; () banked
 42561  01B48C  6F02               	movwf	WritePHYReg@Register& (0+255),b
 42562                           
 42563                           ; BSR set to: 1
 42564                           ;ETH97J60.c: 1290: BYTE GIESave;
 42565                           ;ETH97J60.c: 1293: MIREGADR = Register;
 42566  01B48E  C102  FEB4         	movff	WritePHYReg@Register,3764	;volatile
 42567                           
 42568                           ; BSR set to: 1
 42569                           ;ETH97J60.c: 1306: errataTempL = ((BYTE*)&Data)[0];
 42570  01B492  C100  FE7E         	movff	WritePHYReg@Data,3710
 42571                           
 42572                           ; BSR set to: 1
 42573                           ;ETH97J60.c: 1307: errataTempH = ((BYTE*)&Data)[1];
 42574  01B496  C101  FE7F         	movff	WritePHYReg@Data+1,3711
 42575                           
 42576                           ; BSR set to: 1
 42577                           ;ETH97J60.c: 1308: GIESave = INTCON & 0xC0;
 42578  01B49A  50F2               	movf	intcon,w,c	;volatile
 42579  01B49C  0BC0               	andlw	192
 42580  01B49E  0101               	movlb	1	; () banked
 42581  01B4A0  6F03               	movwf	WritePHYReg@GIESave& (0+255),b
 42582                           
 42583                           ; BSR set to: 1
 42584                           ;ETH97J60.c: 1309: INTCON &= 0x3F;
 42585  01B4A2  0E3F               	movlw	63
 42586  01B4A4  16F2               	andwf	intcon,f,c	;volatile
 42587  01B4A6  CE7E FEB6          	movff	3710,3766	;# 
 42588  01B4AA  F000               	nop		;# 
 42589  01B4AC  CE7F FEB7          	movff	3711,3767	;# 
 42590                           
 42591                           ;ETH97J60.c: 1324: INTCON |= GIESave;
 42592  01B4B0  0101               	movlb	1	; () banked
 42593  01B4B2  5103               	movf	WritePHYReg@GIESave& (0+255),w,b
 42594  01B4B4  12F2               	iorwf	intcon,f,c	;volatile
 42595  01B4B6                     l399:
 42596  01B4B6  010E               	movlb	14	; () banked
 42597  01B4B8  A18A               	btfss	138,0,b	;volatile
 42598                           
 42599                           ; BSR set to: 14
 42600                           
 42601                           ; BSR set to: 14
 42602  01B4BA  0012               	return	
 42603  01B4BC  D7FC               	goto	l399
 42604  01B4BE                     __end_of_WritePHYReg:
 42605                           	opt stack 0
 42606                           tblptru	equ	0xFF8
 42607                           tblptrh	equ	0xFF7
 42608                           tblptrl	equ	0xFF6
 42609                           tablat	equ	0xFF5
 42610                           prodh	equ	0xFF4
 42611                           prodl	equ	0xFF3
 42612                           intcon	equ	0xFF2
 42613                           intcon2	equ	0xFF1
 42614                           intcon3	equ	0xFF0
 42615                           indf0	equ	0xFEF
 42616                           postinc0	equ	0xFEE
 42617                           fsr0h	equ	0xFEA
 42618                           fsr0l	equ	0xFE9
 42619                           wreg	equ	0xFE8
 42620                           indf1	equ	0xFE7
 42621                           postinc1	equ	0xFE6
 42622                           postdec1	equ	0xFE5
 42623                           fsr1h	equ	0xFE2
 42624                           fsr1l	equ	0xFE1
 42625                           indf2	equ	0xFDF
 42626                           postinc2	equ	0xFDE
 42627                           postdec2	equ	0xFDD
 42628                           fsr2h	equ	0xFDA
 42629                           fsr2l	equ	0xFD9
 42630                           status	equ	0xFD8
 42631                           
 42632 ;; *************** function _MACPut *****************
 42633 ;; Defined at:
 42634 ;;		line 1161 in file "../tcpip/ETH97J60.c"
 42635 ;; Parameters:    Size  Location     Type
 42636 ;;  val             1    wreg     unsigned char 
 42637 ;; Auto vars:     Size  Location     Type
 42638 ;;  val             1    0[BANK1 ] unsigned char 
 42639 ;; Return value:  Size  Location     Type
 42640 ;;		None               void
 42641 ;; Registers used:
 42642 ;;		wreg
 42643 ;; Tracked objects:
 42644 ;;		On entry : 0/0
 42645 ;;		On exit  : 0/0
 42646 ;;		Unchanged: 0/0
 42647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42649 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42651 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42652 ;;Total ram usage:        1 bytes
 42653 ;; Hardware stack levels used:    1
 42654 ;; Hardware stack levels required when called:   10
 42655 ;; This function calls:
 42656 ;;		Nothing
 42657 ;; This function is called by:
 42658 ;;		_MACInit
 42659 ;;		_MACPutHeader
 42660 ;;		_MACMemCopyAsync
 42661 ;; This function uses a non-reentrant model
 42662 ;;
 42663                           
 42664                           	psect	text111
 42665  01BA42                     __ptext111:
 42666                           	opt stack 0
 42667  01BA42                     _MACPut:
 42668                           	opt stack 15
 42669                           
 42670                           ; BSR set to: 14
 42671                           ;incstack = 0
 42672                           ;MACPut@val stored from wreg
 42673  01BA42  0101               	movlb	1	; () banked
 42674  01BA44  6F00               	movwf	MACPut@val& (0+255),b
 42675                           
 42676                           ; BSR set to: 1
 42677                           ;ETH97J60.c: 1167: errataTempL = val;
 42678  01BA46  C100  FE7E         	movff	MACPut@val,3710
 42679  01BA4A  CE7E FF61          	movff	3710,3937	;# 
 42680  01BA4E  0012               	return	
 42681  01BA50                     __end_of_MACPut:
 42682                           	opt stack 0
 42683                           tblptru	equ	0xFF8
 42684                           tblptrh	equ	0xFF7
 42685                           tblptrl	equ	0xFF6
 42686                           tablat	equ	0xFF5
 42687                           prodh	equ	0xFF4
 42688                           prodl	equ	0xFF3
 42689                           intcon	equ	0xFF2
 42690                           intcon2	equ	0xFF1
 42691                           intcon3	equ	0xFF0
 42692                           indf0	equ	0xFEF
 42693                           postinc0	equ	0xFEE
 42694                           fsr0h	equ	0xFEA
 42695                           fsr0l	equ	0xFE9
 42696                           wreg	equ	0xFE8
 42697                           indf1	equ	0xFE7
 42698                           postinc1	equ	0xFE6
 42699                           postdec1	equ	0xFE5
 42700                           fsr1h	equ	0xFE2
 42701                           fsr1l	equ	0xFE1
 42702                           indf2	equ	0xFDF
 42703                           postinc2	equ	0xFDE
 42704                           postdec2	equ	0xFDD
 42705                           fsr2h	equ	0xFDA
 42706                           fsr2l	equ	0xFD9
 42707                           status	equ	0xFD8
 42708                           
 42709 ;; *************** function _ARPInit *****************
 42710 ;; Defined at:
 42711 ;;		line 374 in file "../tcpip/arp.c"
 42712 ;; Parameters:    Size  Location     Type
 42713 ;;		None
 42714 ;; Auto vars:     Size  Location     Type
 42715 ;;		None
 42716 ;; Return value:  Size  Location     Type
 42717 ;;		None               void
 42718 ;; Registers used:
 42719 ;;		None
 42720 ;; Tracked objects:
 42721 ;;		On entry : 0/0
 42722 ;;		On exit  : 0/0
 42723 ;;		Unchanged: 0/0
 42724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42729 ;;Total ram usage:        0 bytes
 42730 ;; Hardware stack levels used:    1
 42731 ;; Hardware stack levels required when called:   10
 42732 ;; This function calls:
 42733 ;;		Nothing
 42734 ;; This function is called by:
 42735 ;;		_StackInit
 42736 ;; This function uses a non-reentrant model
 42737 ;;
 42738                           
 42739                           	psect	text112
 42740  01B66A                     __ptext112:
 42741                           	opt stack 0
 42742  01B66A                     _ARPInit:
 42743                           	opt stack 17
 42744                           
 42745                           ;arp.c: 376: Cache.MACAddr.v[0] = 0xff;
 42746                           
 42747                           ;incstack = 0
 42748  01B66A  0100               	movlb	0	; () banked
 42749  01B66C  69C1               	setf	(_Cache+4)& (0+255),b
 42750                           
 42751                           ;arp.c: 377: Cache.MACAddr.v[1] = 0xff;
 42752  01B66E  0100               	movlb	0	; () banked
 42753  01B670  69C2               	setf	(_Cache+5)& (0+255),b
 42754                           
 42755                           ;arp.c: 378: Cache.MACAddr.v[2] = 0xff;
 42756  01B672  0100               	movlb	0	; () banked
 42757  01B674  69C3               	setf	(_Cache+6)& (0+255),b
 42758                           
 42759                           ;arp.c: 379: Cache.MACAddr.v[3] = 0xff;
 42760  01B676  0100               	movlb	0	; () banked
 42761  01B678  69C4               	setf	(_Cache+7)& (0+255),b
 42762                           
 42763                           ;arp.c: 380: Cache.MACAddr.v[4] = 0xff;
 42764  01B67A  0100               	movlb	0	; () banked
 42765  01B67C  69C5               	setf	(_Cache+8)& (0+255),b
 42766                           
 42767                           ;arp.c: 381: Cache.MACAddr.v[5] = 0xff;
 42768  01B67E  0100               	movlb	0	; () banked
 42769  01B680  69C6               	setf	(_Cache+9)& (0+255),b
 42770                           
 42771                           ;arp.c: 383: Cache.IPAddr.Val = 0xfffffffful;
 42772  01B682  0100               	movlb	0	; () banked
 42773  01B684  69BD               	setf	_Cache& (0+255),b
 42774  01B686  0100               	movlb	0	; () banked
 42775  01B688  69BE               	setf	(_Cache+1)& (0+255),b
 42776  01B68A  0100               	movlb	0	; () banked
 42777  01B68C  69BF               	setf	(_Cache+2)& (0+255),b
 42778  01B68E  0100               	movlb	0	; () banked
 42779  01B690  69C0               	setf	(_Cache+3)& (0+255),b
 42780                           
 42781                           ; BSR set to: 0
 42782  01B692  0012               	return	
 42783  01B694                     __end_of_ARPInit:
 42784                           	opt stack 0
 42785                           tblptru	equ	0xFF8
 42786                           tblptrh	equ	0xFF7
 42787                           tblptrl	equ	0xFF6
 42788                           tablat	equ	0xFF5
 42789                           prodh	equ	0xFF4
 42790                           prodl	equ	0xFF3
 42791                           intcon	equ	0xFF2
 42792                           intcon2	equ	0xFF1
 42793                           intcon3	equ	0xFF0
 42794                           indf0	equ	0xFEF
 42795                           postinc0	equ	0xFEE
 42796                           fsr0h	equ	0xFEA
 42797                           fsr0l	equ	0xFE9
 42798                           wreg	equ	0xFE8
 42799                           indf1	equ	0xFE7
 42800                           postinc1	equ	0xFE6
 42801                           postdec1	equ	0xFE5
 42802                           fsr1h	equ	0xFE2
 42803                           fsr1l	equ	0xFE1
 42804                           indf2	equ	0xFDF
 42805                           postinc2	equ	0xFDE
 42806                           postdec2	equ	0xFDD
 42807                           fsr2h	equ	0xFDA
 42808                           fsr2l	equ	0xFD9
 42809                           status	equ	0xFD8
 42810                           
 42811 ;; *************** function _InitrIR *****************
 42812 ;; Defined at:
 42813 ;;		line 35 in file "IR.c"
 42814 ;; Parameters:    Size  Location     Type
 42815 ;;		None
 42816 ;; Auto vars:     Size  Location     Type
 42817 ;;		None
 42818 ;; Return value:  Size  Location     Type
 42819 ;;		None               void
 42820 ;; Registers used:
 42821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42822 ;; Tracked objects:
 42823 ;;		On entry : 0/0
 42824 ;;		On exit  : 0/0
 42825 ;;		Unchanged: 0/0
 42826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42831 ;;Total ram usage:        0 bytes
 42832 ;; Hardware stack levels used:    1
 42833 ;; Hardware stack levels required when called:   11
 42834 ;; This function calls:
 42835 ;;		_memset
 42836 ;; This function is called by:
 42837 ;;		_Configure
 42838 ;; This function uses a non-reentrant model
 42839 ;;
 42840                           
 42841                           	psect	text113
 42842  01AADA                     __ptext113:
 42843                           	opt stack 0
 42844  01AADA                     _InitrIR:
 42845                           	opt stack 17
 42846                           
 42847                           ;IR.c: 37: s_prevIRPort = PORTBbits.RB4;
 42848                           
 42849                           ; BSR set to: 0
 42850                           ;incstack = 0
 42851  01AADA  0E00               	movlw	0
 42852  01AADC  B881               	btfsc	3969,4,c	;volatile
 42853  01AADE  0E01               	movlw	1
 42854  01AAE0  0101               	movlb	1	; () banked
 42855  01AAE2  6FFF               	movwf	_s_prevIRPort& (0+255),b
 42856                           
 42857                           ; BSR set to: 1
 42858                           ;IR.c: 38: memset(&s_numTicksDiff, 0, sizeof(s_numTicksDiff));
 42859  01AAE4  0104               	movlb	4	; () banked
 42860  01AAE6  0E04               	movlw	high _s_numTicksDiff
 42861  01AAE8  0101               	movlb	1	; () banked
 42862  01AAEA  6F01               	movwf	(memset@p1+1)& (0+255),b
 42863  01AAEC  0104               	movlb	4	; () banked
 42864  01AAEE  0E00               	movlw	low _s_numTicksDiff
 42865  01AAF0  0101               	movlb	1	; () banked
 42866  01AAF2  6F00               	movwf	memset@p1& (0+255),b
 42867  01AAF4  0E00               	movlw	0
 42868  01AAF6  0101               	movlb	1	; () banked
 42869  01AAF8  6F03               	movwf	(memset@c+1)& (0+255),b
 42870  01AAFA  0E00               	movlw	0
 42871  01AAFC  0101               	movlb	1	; () banked
 42872  01AAFE  6F02               	movwf	memset@c& (0+255),b
 42873  01AB00  0E01               	movlw	1
 42874  01AB02  0101               	movlb	1	; () banked
 42875  01AB04  6F05               	movwf	(memset@n+1)& (0+255),b
 42876  01AB06  0E00               	movlw	0
 42877  01AB08  0101               	movlb	1	; () banked
 42878  01AB0A  6F04               	movwf	memset@n& (0+255),b
 42879  01AB0C  ECD9  F0D9         	call	_memset	;wreg free
 42880                           
 42881                           ;IR.c: 39: memset(&s_irCode, 0, sizeof(s_irCode));
 42882  01AB10  0102               	movlb	2	; () banked
 42883  01AB12  0E02               	movlw	high _s_irCode	;volatile
 42884  01AB14  0101               	movlb	1	; () banked
 42885  01AB16  6F01               	movwf	(memset@p1+1)& (0+255),b
 42886  01AB18  0102               	movlb	2	; () banked
 42887  01AB1A  0EAD               	movlw	low _s_irCode	;volatile
 42888  01AB1C  0101               	movlb	1	; () banked
 42889  01AB1E  6F00               	movwf	memset@p1& (0+255),b
 42890  01AB20  0E00               	movlw	0
 42891  01AB22  0101               	movlb	1	; () banked
 42892  01AB24  6F03               	movwf	(memset@c+1)& (0+255),b
 42893  01AB26  0E00               	movlw	0
 42894  01AB28  0101               	movlb	1	; () banked
 42895  01AB2A  6F02               	movwf	memset@c& (0+255),b
 42896  01AB2C  0E00               	movlw	0
 42897  01AB2E  0101               	movlb	1	; () banked
 42898  01AB30  6F05               	movwf	(memset@n+1)& (0+255),b
 42899  01AB32  0E10               	movlw	16
 42900  01AB34  0101               	movlb	1	; () banked
 42901  01AB36  6F04               	movwf	memset@n& (0+255),b
 42902  01AB38  ECD9  F0D9         	call	_memset	;wreg free
 42903                           
 42904                           ;IR.c: 40: s_irCodeBitIdx = 0b00000001;
 42905  01AB3C  0E01               	movlw	1
 42906  01AB3E  0101               	movlb	1	; () banked
 42907  01AB40  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 42908                           
 42909                           ; BSR set to: 1
 42910                           ;IR.c: 41: s_irCodeByteIdx = 0;
 42911  01AB42  0E00               	movlw	0
 42912  01AB44  0101               	movlb	1	; () banked
 42913  01AB46  6FB7               	movwf	_s_irCodeByteIdx& (0+255),b	;volatile
 42914                           
 42915                           ; BSR set to: 1
 42916  01AB48  0012               	return	
 42917  01AB4A                     __end_of_InitrIR:
 42918                           	opt stack 0
 42919                           tblptru	equ	0xFF8
 42920                           tblptrh	equ	0xFF7
 42921                           tblptrl	equ	0xFF6
 42922                           tablat	equ	0xFF5
 42923                           prodh	equ	0xFF4
 42924                           prodl	equ	0xFF3
 42925                           intcon	equ	0xFF2
 42926                           intcon2	equ	0xFF1
 42927                           intcon3	equ	0xFF0
 42928                           indf0	equ	0xFEF
 42929                           postinc0	equ	0xFEE
 42930                           fsr0h	equ	0xFEA
 42931                           fsr0l	equ	0xFE9
 42932                           wreg	equ	0xFE8
 42933                           indf1	equ	0xFE7
 42934                           postinc1	equ	0xFE6
 42935                           postdec1	equ	0xFE5
 42936                           fsr1h	equ	0xFE2
 42937                           fsr1l	equ	0xFE1
 42938                           indf2	equ	0xFDF
 42939                           postinc2	equ	0xFDE
 42940                           postdec2	equ	0xFDD
 42941                           fsr2h	equ	0xFDA
 42942                           fsr2l	equ	0xFD9
 42943                           status	equ	0xFD8
 42944                           
 42945 ;; *************** function _memset *****************
 42946 ;; Defined at:
 42947 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
 42948 ;; Parameters:    Size  Location     Type
 42949 ;;  p1              2    0[BANK1 ] PTR void 
 42950 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 42951 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 42952 ;;  c               2    2[BANK1 ] int 
 42953 ;;  n               2    4[BANK1 ] unsigned int 
 42954 ;; Auto vars:     Size  Location     Type
 42955 ;;  p               2    6[BANK1 ] PTR unsigned char 
 42956 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 42957 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 42958 ;; Return value:  Size  Location     Type
 42959 ;;                  2    0[BANK1 ] PTR void 
 42960 ;; Registers used:
 42961 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42962 ;; Tracked objects:
 42963 ;;		On entry : 0/0
 42964 ;;		On exit  : 0/0
 42965 ;;		Unchanged: 0/0
 42966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42967 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42968 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42970 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42971 ;;Total ram usage:        8 bytes
 42972 ;; Hardware stack levels used:    1
 42973 ;; Hardware stack levels required when called:   10
 42974 ;; This function calls:
 42975 ;;		Nothing
 42976 ;; This function is called by:
 42977 ;;		_TCPInit
 42978 ;;		_TCPServer
 42979 ;;		_RestoreFromFlash
 42980 ;;		_InitrIR
 42981 ;; This function uses a non-reentrant model
 42982 ;;
 42983                           
 42984                           	psect	text114
 42985  01B3B2                     __ptext114:
 42986                           	opt stack 0
 42987  01B3B2                     _memset:
 42988                           	opt stack 18
 42989                           
 42990                           ; BSR set to: 1
 42991                           ;incstack = 0
 42992  01B3B2  0101               	movlb	1	; () banked
 42993  01B3B4  C101  F107         	movff	memset@p1+1,memset@p+1
 42994  01B3B8  0101               	movlb	1	; () banked
 42995  01B3BA  C100  F106         	movff	memset@p1,memset@p
 42996  01B3BE  D00A               	goto	l11612
 42997  01B3C0                     l11608:
 42998                           
 42999                           ; BSR set to: 1
 43000  01B3C0  C106  FFD9         	movff	memset@p,fsr2l
 43001  01B3C4  C107  FFDA         	movff	memset@p+1,fsr2h
 43002  01B3C8  0101               	movlb	1	; () banked
 43003  01B3CA  C102  FFDF         	movff	memset@c,indf2
 43004                           
 43005                           ; BSR set to: 1
 43006  01B3CE  0101               	movlb	1	; () banked
 43007  01B3D0  4B06               	infsnz	memset@p& (0+255),f,b
 43008  01B3D2  2B07               	incf	(memset@p+1)& (0+255),f,b
 43009  01B3D4                     l11612:
 43010                           
 43011                           ; BSR set to: 1
 43012  01B3D4  0101               	movlb	1	; () banked
 43013  01B3D6  0704               	decf	memset@n& (0+255),f,b
 43014  01B3D8  A0D8               	btfss	status,0,c
 43015  01B3DA  0705               	decf	(memset@n+1)& (0+255),f,b
 43016  01B3DC  0101               	movlb	1	; () banked
 43017  01B3DE  2904               	incf	memset@n& (0+255),w,b
 43018  01B3E0  B4D8               	btfsc	status,2,c
 43019  01B3E2  2905               	incf	(memset@n+1)& (0+255),w,b
 43020  01B3E4  B4D8               	btfsc	status,2,c
 43021                           
 43022                           ; BSR set to: 1
 43023                           
 43024                           ; BSR set to: 1
 43025                           ;	Return value of _memset is never used
 43026  01B3E6  0012               	return	
 43027  01B3E8  D7EB               	goto	l11608
 43028  01B3EA                     __end_of_memset:
 43029                           	opt stack 0
 43030                           tblptru	equ	0xFF8
 43031                           tblptrh	equ	0xFF7
 43032                           tblptrl	equ	0xFF6
 43033                           tablat	equ	0xFF5
 43034                           prodh	equ	0xFF4
 43035                           prodl	equ	0xFF3
 43036                           intcon	equ	0xFF2
 43037                           intcon2	equ	0xFF1
 43038                           intcon3	equ	0xFF0
 43039                           indf0	equ	0xFEF
 43040                           postinc0	equ	0xFEE
 43041                           fsr0h	equ	0xFEA
 43042                           fsr0l	equ	0xFE9
 43043                           wreg	equ	0xFE8
 43044                           indf1	equ	0xFE7
 43045                           postinc1	equ	0xFE6
 43046                           postdec1	equ	0xFE5
 43047                           fsr1h	equ	0xFE2
 43048                           fsr1l	equ	0xFE1
 43049                           indf2	equ	0xFDF
 43050                           postinc2	equ	0xFDE
 43051                           postdec2	equ	0xFDD
 43052                           fsr2h	equ	0xFDA
 43053                           fsr2l	equ	0xFD9
 43054                           status	equ	0xFD8
 43055                           
 43056 ;; *************** function _InitAppConfig *****************
 43057 ;; Defined at:
 43058 ;;		line 82 in file "main.c"
 43059 ;; Parameters:    Size  Location     Type
 43060 ;;		None
 43061 ;; Auto vars:     Size  Location     Type
 43062 ;;		None
 43063 ;; Return value:  Size  Location     Type
 43064 ;;		None               void
 43065 ;; Registers used:
 43066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43067 ;; Tracked objects:
 43068 ;;		On entry : 0/0
 43069 ;;		On exit  : 0/0
 43070 ;;		Unchanged: 0/0
 43071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43076 ;;Total ram usage:        0 bytes
 43077 ;; Hardware stack levels used:    1
 43078 ;; Hardware stack levels required when called:   12
 43079 ;; This function calls:
 43080 ;;		_FormatNetBIOSName
 43081 ;;		_memcpy
 43082 ;; This function is called by:
 43083 ;;		_Configure
 43084 ;; This function uses a non-reentrant model
 43085 ;;
 43086                           
 43087                           	psect	text115
 43088  0188C2                     __ptext115:
 43089                           	opt stack 0
 43090  0188C2                     _InitAppConfig:
 43091                           	opt stack 16
 43092                           
 43093                           ;main.c: 84: AppConfig.Flags.bIsDHCPEnabled = FALSE;
 43094                           
 43095                           ; BSR set to: 1
 43096                           ;incstack = 0
 43097  0188C2  0102               	movlb	2	; () banked
 43098  0188C4  9D68               	bcf	(_AppConfig+44)& (0+255),6,b
 43099                           
 43100                           ;main.c: 85: AppConfig.Flags.bInConfigMode = TRUE;
 43101  0188C6  0102               	movlb	2	; () banked
 43102  0188C8  8F68               	bsf	(_AppConfig+44)& (0+255),7,b
 43103                           
 43104                           ; BSR set to: 2
 43105                           ;main.c: 86: memcpy((void*)&AppConfig.MyMACAddr,(const void*)SerializedMACAddress,sizeof
      +                          (AppConfig.MyMACAddr));
 43106  0188CA  0102               	movlb	2	; () banked
 43107  0188CC  0E02               	movlw	high (_AppConfig+45)
 43108  0188CE  0101               	movlb	1	; () banked
 43109  0188D0  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 43110  0188D2  0102               	movlb	2	; () banked
 43111  0188D4  0E69               	movlw	low (_AppConfig+45)
 43112  0188D6  0101               	movlb	1	; () banked
 43113  0188D8  6F14               	movwf	memcpy@d1& (0+255),b
 43114  0188DA  0EFF               	movlw	high _SerializedMACAddress
 43115  0188DC  0101               	movlb	1	; () banked
 43116  0188DE  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 43117  0188E0  0E19               	movlw	low _SerializedMACAddress
 43118  0188E2  0101               	movlb	1	; () banked
 43119  0188E4  6F16               	movwf	memcpy@s1& (0+255),b
 43120  0188E6  0E00               	movlw	0
 43121  0188E8  0101               	movlb	1	; () banked
 43122  0188EA  6F19               	movwf	(memcpy@n+1)& (0+255),b
 43123  0188EC  0E06               	movlw	6
 43124  0188EE  0101               	movlb	1	; () banked
 43125  0188F0  6F18               	movwf	memcpy@n& (0+255),b
 43126  0188F2  ECDC  F0D5         	call	_memcpy	;wreg free
 43127                           
 43128                           ;main.c: 92: AppConfig.MyIPAddr.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (97ul)<<24u
      +                          l;
 43129  0188F6  0EC0               	movlw	192
 43130  0188F8  0102               	movlb	2	; () banked
 43131  0188FA  6F3C               	movwf	_AppConfig& (0+255),b
 43132  0188FC  0EA8               	movlw	168
 43133  0188FE  0102               	movlb	2	; () banked
 43134  018900  6F3D               	movwf	(_AppConfig+1)& (0+255),b
 43135  018902  0E00               	movlw	0
 43136  018904  0102               	movlb	2	; () banked
 43137  018906  6F3E               	movwf	(_AppConfig+2)& (0+255),b
 43138  018908  0E61               	movlw	97
 43139  01890A  0102               	movlb	2	; () banked
 43140  01890C  6F3F               	movwf	(_AppConfig+3)& (0+255),b
 43141                           
 43142                           ; BSR set to: 2
 43143                           ;main.c: 93: AppConfig.DefaultIPAddr.Val = AppConfig.MyIPAddr.Val;
 43144  01890E  C23C  F250         	movff	_AppConfig,_AppConfig+20
 43145  018912  C23D  F251         	movff	_AppConfig+1,_AppConfig+21
 43146  018916  C23E  F252         	movff	_AppConfig+2,_AppConfig+22
 43147  01891A  C23F  F253         	movff	_AppConfig+3,_AppConfig+23
 43148                           
 43149                           ; BSR set to: 2
 43150                           ;main.c: 94: AppConfig.MyMask.Val = (255ul) | (255ul)<<8ul | (255ul)<<16ul | (0ul)<<24ul
      +                          ;
 43151  01891E  0EFF               	movlw	255
 43152  018920  0102               	movlb	2	; () banked
 43153  018922  6F40               	movwf	(_AppConfig+4)& (0+255),b
 43154  018924  0EFF               	movlw	255
 43155  018926  0102               	movlb	2	; () banked
 43156  018928  6F41               	movwf	(_AppConfig+5)& (0+255),b
 43157  01892A  0EFF               	movlw	255
 43158  01892C  0102               	movlb	2	; () banked
 43159  01892E  6F42               	movwf	(_AppConfig+6)& (0+255),b
 43160  018930  0E00               	movlw	0
 43161  018932  0102               	movlb	2	; () banked
 43162  018934  6F43               	movwf	(_AppConfig+7)& (0+255),b
 43163                           
 43164                           ; BSR set to: 2
 43165                           ;main.c: 95: AppConfig.DefaultMask.Val = AppConfig.MyMask.Val;
 43166  018936  C240  F254         	movff	_AppConfig+4,_AppConfig+24
 43167  01893A  C241  F255         	movff	_AppConfig+5,_AppConfig+25
 43168  01893E  C242  F256         	movff	_AppConfig+6,_AppConfig+26
 43169  018942  C243  F257         	movff	_AppConfig+7,_AppConfig+27
 43170                           
 43171                           ; BSR set to: 2
 43172                           ;main.c: 96: AppConfig.MyGateway.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (1ul)<<24u
      +                          l;
 43173  018946  0EC0               	movlw	192
 43174  018948  0102               	movlb	2	; () banked
 43175  01894A  6F44               	movwf	(_AppConfig+8)& (0+255),b
 43176  01894C  0EA8               	movlw	168
 43177  01894E  0102               	movlb	2	; () banked
 43178  018950  6F45               	movwf	(_AppConfig+9)& (0+255),b
 43179  018952  0E00               	movlw	0
 43180  018954  0102               	movlb	2	; () banked
 43181  018956  6F46               	movwf	(_AppConfig+10)& (0+255),b
 43182  018958  0E01               	movlw	1
 43183  01895A  0102               	movlb	2	; () banked
 43184  01895C  6F47               	movwf	(_AppConfig+11)& (0+255),b
 43185                           
 43186                           ; BSR set to: 2
 43187                           ;main.c: 97: AppConfig.PrimaryDNSServer.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (1u
      +                          l)<<24ul;
 43188  01895E  0EC0               	movlw	192
 43189  018960  0102               	movlb	2	; () banked
 43190  018962  6F48               	movwf	(_AppConfig+12)& (0+255),b
 43191  018964  0EA8               	movlw	168
 43192  018966  0102               	movlb	2	; () banked
 43193  018968  6F49               	movwf	(_AppConfig+13)& (0+255),b
 43194  01896A  0E00               	movlw	0
 43195  01896C  0102               	movlb	2	; () banked
 43196  01896E  6F4A               	movwf	(_AppConfig+14)& (0+255),b
 43197  018970  0E01               	movlw	1
 43198  018972  0102               	movlb	2	; () banked
 43199  018974  6F4B               	movwf	(_AppConfig+15)& (0+255),b
 43200                           
 43201                           ; BSR set to: 2
 43202                           ;main.c: 98: AppConfig.SecondaryDNSServer.Val = (0ul) | (0ul)<<8ul | (0ul)<<16ul | (0ul)
      +                          <<24ul;
 43203  018976  0E00               	movlw	0
 43204  018978  0102               	movlb	2	; () banked
 43205  01897A  6F4C               	movwf	(_AppConfig+16)& (0+255),b
 43206  01897C  0E00               	movlw	0
 43207  01897E  0102               	movlb	2	; () banked
 43208  018980  6F4D               	movwf	(_AppConfig+17)& (0+255),b
 43209  018982  0E00               	movlw	0
 43210  018984  0102               	movlb	2	; () banked
 43211  018986  6F4E               	movwf	(_AppConfig+18)& (0+255),b
 43212  018988  0E00               	movlw	0
 43213  01898A  0102               	movlb	2	; () banked
 43214  01898C  6F4F               	movwf	(_AppConfig+19)& (0+255),b
 43215                           
 43216                           ; BSR set to: 2
 43217                           ;main.c: 101: memcpy(AppConfig.NetBIOSName,(const void*)"TheDAC",16);
 43218  01898E  0102               	movlb	2	; () banked
 43219  018990  0E02               	movlw	high (_AppConfig+28)
 43220  018992  0101               	movlb	1	; () banked
 43221  018994  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 43222  018996  0102               	movlb	2	; () banked
 43223  018998  0E58               	movlw	low (_AppConfig+28)
 43224  01899A  0101               	movlb	1	; () banked
 43225  01899C  6F14               	movwf	memcpy@d1& (0+255),b
 43226  01899E  0EFF               	movlw	high STR_1
 43227  0189A0  0101               	movlb	1	; () banked
 43228  0189A2  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 43229  0189A4  0EF7               	movlw	low STR_1
 43230  0189A6  0101               	movlb	1	; () banked
 43231  0189A8  6F16               	movwf	memcpy@s1& (0+255),b
 43232  0189AA  0E00               	movlw	0
 43233  0189AC  0101               	movlb	1	; () banked
 43234  0189AE  6F19               	movwf	(memcpy@n+1)& (0+255),b
 43235  0189B0  0E10               	movlw	16
 43236  0189B2  0101               	movlb	1	; () banked
 43237  0189B4  6F18               	movwf	memcpy@n& (0+255),b
 43238  0189B6  ECDC  F0D5         	call	_memcpy	;wreg free
 43239                           
 43240                           ;main.c: 102: FormatNetBIOSName(AppConfig.NetBIOSName);
 43241  0189BA  0102               	movlb	2	; () banked
 43242  0189BC  0E02               	movlw	high (_AppConfig+28)
 43243  0189BE  0101               	movlb	1	; () banked
 43244  0189C0  6F06               	movwf	(FormatNetBIOSName@Name+1)& (0+255),b
 43245  0189C2  0102               	movlb	2	; () banked
 43246  0189C4  0E58               	movlw	low (_AppConfig+28)
 43247  0189C6  0101               	movlb	1	; () banked
 43248  0189C8  6F05               	movwf	FormatNetBIOSName@Name& (0+255),b
 43249  0189CA  EC6C  F0D4         	call	_FormatNetBIOSName	;wreg free
 43250  0189CE  0012               	return	
 43251  0189D0                     __end_of_InitAppConfig:
 43252                           	opt stack 0
 43253                           tblptru	equ	0xFF8
 43254                           tblptrh	equ	0xFF7
 43255                           tblptrl	equ	0xFF6
 43256                           tablat	equ	0xFF5
 43257                           prodh	equ	0xFF4
 43258                           prodl	equ	0xFF3
 43259                           intcon	equ	0xFF2
 43260                           intcon2	equ	0xFF1
 43261                           intcon3	equ	0xFF0
 43262                           indf0	equ	0xFEF
 43263                           postinc0	equ	0xFEE
 43264                           fsr0h	equ	0xFEA
 43265                           fsr0l	equ	0xFE9
 43266                           wreg	equ	0xFE8
 43267                           indf1	equ	0xFE7
 43268                           postinc1	equ	0xFE6
 43269                           postdec1	equ	0xFE5
 43270                           fsr1h	equ	0xFE2
 43271                           fsr1l	equ	0xFE1
 43272                           indf2	equ	0xFDF
 43273                           postinc2	equ	0xFDE
 43274                           postdec2	equ	0xFDD
 43275                           fsr2h	equ	0xFDA
 43276                           fsr2l	equ	0xFD9
 43277                           status	equ	0xFD8
 43278                           
 43279 ;; *************** function _memcpy *****************
 43280 ;; Defined at:
 43281 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
 43282 ;; Parameters:    Size  Location     Type
 43283 ;;  d1              2   20[BANK1 ] PTR void 
 43284 ;;		 -> TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), TCPRAMCopyROM@vBuffer(16), 
 43285 ;;		 -> TCPGetRemoteInfo@RemoteInfo(12), RAM(3935), MyTCB.remote(10), SYNQueue(60), 
 43286 ;;		 -> MyTCB(39), MyTCBStub(28), TCBStubs(28), remoteNode(10), 
 43287 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), AppConfig(51), 
 43288 ;;  s1              2   22[BANK1 ] PTR const void 
 43289 ;;		 -> s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), 
 43290 ;;		 -> STR_1(7), SerializedMACAddress(6), SYNQueue.niSourceAddress(10), RAM(3935), 
 43291 ;;		 -> MyTCB.remote(10), TCPOpen@dwRemoteHost(4), SYNQueue(60), MyTCB(39), 
 43292 ;;		 -> MyTCBStub(28), TCBStubs(28), remoteNode(10), header.SourceMACAddr.v(6), 
 43293 ;;		 -> header.SourceMACAddr(6), AppConfig.MyMACAddr(6), AppConfig(51), 
 43294 ;;  n               2   24[BANK1 ] unsigned int 
 43295 ;; Auto vars:     Size  Location     Type
 43296 ;;  s               2   28[BANK1 ] PTR const unsigned char 
 43297 ;;		 -> s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), 
 43298 ;;		 -> STR_1(7), SerializedMACAddress(6), SYNQueue.niSourceAddress(10), RAM(3935), 
 43299 ;;		 -> MyTCB.remote(10), TCPOpen@dwRemoteHost(4), SYNQueue(60), MyTCB(39), 
 43300 ;;		 -> MyTCBStub(28), TCBStubs(28), remoteNode(10), header.SourceMACAddr.v(6), 
 43301 ;;		 -> header.SourceMACAddr(6), AppConfig.MyMACAddr(6), AppConfig(51), 
 43302 ;;  d               2   26[BANK1 ] PTR unsigned char 
 43303 ;;		 -> TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), TCPRAMCopyROM@vBuffer(16), 
 43304 ;;		 -> TCPGetRemoteInfo@RemoteInfo(12), RAM(3935), MyTCB.remote(10), SYNQueue(60), 
 43305 ;;		 -> MyTCB(39), MyTCBStub(28), TCBStubs(28), remoteNode(10), 
 43306 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), AppConfig(51), 
 43307 ;; Return value:  Size  Location     Type
 43308 ;;                  2   20[BANK1 ] PTR void 
 43309 ;; Registers used:
 43310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 43311 ;; Tracked objects:
 43312 ;;		On entry : 0/0
 43313 ;;		On exit  : 0/0
 43314 ;;		Unchanged: 0/0
 43315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43316 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43317 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43319 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43320 ;;Total ram usage:       10 bytes
 43321 ;; Hardware stack levels used:    1
 43322 ;; Hardware stack levels required when called:   10
 43323 ;; This function calls:
 43324 ;;		Nothing
 43325 ;; This function is called by:
 43326 ;;		_MACGetHeader
 43327 ;;		_ARPPut
 43328 ;;		_SyncTCBStub
 43329 ;;		_TCPOpen
 43330 ;;		_TCPTick
 43331 ;;		_FindMatchingSocket
 43332 ;;		_TCPRAMCopy
 43333 ;;		_InitAppConfig
 43334 ;;		_TCPServer
 43335 ;;		_TCPGetRemoteInfo
 43336 ;;		_TCPRAMCopyROM
 43337 ;; This function uses a non-reentrant model
 43338 ;;
 43339                           
 43340                           	psect	text116
 43341  01ABB8                     __ptext116:
 43342                           	opt stack 0
 43343  01ABB8                     _memcpy:
 43344                           	opt stack 18
 43345                           
 43346                           ;incstack = 0
 43347  01ABB8  0101               	movlb	1	; () banked
 43348  01ABBA  C117  F11D         	movff	memcpy@s1+1,memcpy@s+1
 43349  01ABBE  0101               	movlb	1	; () banked
 43350  01ABC0  C116  F11C         	movff	memcpy@s1,memcpy@s
 43351  01ABC4  0101               	movlb	1	; () banked
 43352  01ABC6  C115  F11B         	movff	memcpy@d1+1,memcpy@d+1
 43353  01ABCA  0101               	movlb	1	; () banked
 43354  01ABCC  C114  F11A         	movff	memcpy@d1,memcpy@d
 43355  01ABD0  D01E               	goto	l9876
 43356  01ABD2                     l9870:
 43357                           
 43358                           ; BSR set to: 1
 43359  01ABD2  0101               	movlb	1	; () banked
 43360  01ABD4  C11C  FFF6         	movff	memcpy@s,tblptrl
 43361  01ABD8  0101               	movlb	1	; () banked
 43362  01ABDA  C11D  FFF7         	movff	memcpy@s+1,tblptrh
 43363  01ABDE  0E00               	movlw	low (__mediumconst shr (0+16))
 43364  01ABE0  6EF8               	movwf	tblptru,c
 43365  01ABE2  C11A  FFD9         	movff	memcpy@d,fsr2l
 43366  01ABE6  C11B  FFDA         	movff	memcpy@d+1,fsr2h
 43367  01ABEA  0E0F               	movlw	(high __ramtop+-1)
 43368  01ABEC  64F7               	cpfsgt	tblptrh,c
 43369  01ABEE  D003               	bra	u10127
 43370  01ABF0  0008               	tblrd		*
 43371  01ABF2  50F5               	movf	tablat,w,c
 43372  01ABF4  D005               	bra	u10120
 43373  01ABF6                     u10127:
 43374  01ABF6  CFF6 FFE9          	movff	tblptrl,fsr0l
 43375  01ABFA  CFF7 FFEA          	movff	tblptrh,fsr0h
 43376  01ABFE  50EF               	movf	indf0,w,c
 43377  01AC00                     u10120:
 43378  01AC00  6EDF               	movwf	indf2,c
 43379  01AC02  0101               	movlb	1	; () banked
 43380  01AC04  4B1C               	infsnz	memcpy@s& (0+255),f,b
 43381  01AC06  2B1D               	incf	(memcpy@s+1)& (0+255),f,b
 43382                           
 43383                           ; BSR set to: 1
 43384  01AC08  0101               	movlb	1	; () banked
 43385  01AC0A  4B1A               	infsnz	memcpy@d& (0+255),f,b
 43386  01AC0C  2B1B               	incf	(memcpy@d+1)& (0+255),f,b
 43387  01AC0E                     l9876:
 43388                           
 43389                           ; BSR set to: 1
 43390  01AC0E  0101               	movlb	1	; () banked
 43391  01AC10  0718               	decf	memcpy@n& (0+255),f,b
 43392  01AC12  A0D8               	btfss	status,0,c
 43393  01AC14  0719               	decf	(memcpy@n+1)& (0+255),f,b
 43394  01AC16  0101               	movlb	1	; () banked
 43395  01AC18  2918               	incf	memcpy@n& (0+255),w,b
 43396  01AC1A  B4D8               	btfsc	status,2,c
 43397  01AC1C  2919               	incf	(memcpy@n+1)& (0+255),w,b
 43398  01AC1E  B4D8               	btfsc	status,2,c
 43399                           
 43400                           ; BSR set to: 1
 43401                           
 43402                           ; BSR set to: 1
 43403                           ;	Return value of _memcpy is never used
 43404  01AC20  0012               	return	
 43405  01AC22  D7D7               	goto	l9870
 43406  01AC24                     __end_of_memcpy:
 43407                           	opt stack 0
 43408                           tblptru	equ	0xFF8
 43409                           tblptrh	equ	0xFF7
 43410                           tblptrl	equ	0xFF6
 43411                           tablat	equ	0xFF5
 43412                           prodh	equ	0xFF4
 43413                           prodl	equ	0xFF3
 43414                           intcon	equ	0xFF2
 43415                           intcon2	equ	0xFF1
 43416                           intcon3	equ	0xFF0
 43417                           indf0	equ	0xFEF
 43418                           postinc0	equ	0xFEE
 43419                           fsr0h	equ	0xFEA
 43420                           fsr0l	equ	0xFE9
 43421                           wreg	equ	0xFE8
 43422                           indf1	equ	0xFE7
 43423                           postinc1	equ	0xFE6
 43424                           postdec1	equ	0xFE5
 43425                           fsr1h	equ	0xFE2
 43426                           fsr1l	equ	0xFE1
 43427                           indf2	equ	0xFDF
 43428                           postinc2	equ	0xFDE
 43429                           postdec2	equ	0xFDD
 43430                           fsr2h	equ	0xFDA
 43431                           fsr2l	equ	0xFD9
 43432                           status	equ	0xFD8
 43433                           
 43434 ;; *************** function _FormatNetBIOSName *****************
 43435 ;; Defined at:
 43436 ;;		line 1323 in file "../tcpip/helpers.c"
 43437 ;; Parameters:    Size  Location     Type
 43438 ;;  Name            2    5[BANK1 ] PTR unsigned char 
 43439 ;;		 -> AppConfig(51), 
 43440 ;; Auto vars:     Size  Location     Type
 43441 ;;  i               1    7[BANK1 ] unsigned char 
 43442 ;; Return value:  Size  Location     Type
 43443 ;;		None               void
 43444 ;; Registers used:
 43445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43446 ;; Tracked objects:
 43447 ;;		On entry : 0/0
 43448 ;;		On exit  : 0/0
 43449 ;;		Unchanged: 0/0
 43450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43451 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43452 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43454 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43455 ;;Total ram usage:        3 bytes
 43456 ;; Hardware stack levels used:    1
 43457 ;; Hardware stack levels required when called:   11
 43458 ;; This function calls:
 43459 ;;		_strupr
 43460 ;; This function is called by:
 43461 ;;		_InitAppConfig
 43462 ;; This function uses a non-reentrant model
 43463 ;;
 43464                           
 43465                           	psect	text117
 43466  01A8D8                     __ptext117:
 43467                           	opt stack 0
 43468  01A8D8                     _FormatNetBIOSName:
 43469                           	opt stack 16
 43470                           
 43471                           ;helpers.c: 1325: uint8_t i;
 43472                           ;helpers.c: 1327: Name[15] = '\0';
 43473                           
 43474                           ; BSR set to: 1
 43475                           ;incstack = 0
 43476  01A8D8  0101               	movlb	1	; () banked
 43477  01A8DA  EE20 F00F          	lfsr	2,15
 43478  01A8DE  0101               	movlb	1	; () banked
 43479  01A8E0  5105               	movf	FormatNetBIOSName@Name& (0+255),w,b
 43480  01A8E2  26D9               	addwf	fsr2l,f,c
 43481  01A8E4  0101               	movlb	1	; () banked
 43482  01A8E6  5106               	movf	(FormatNetBIOSName@Name+1)& (0+255),w,b
 43483  01A8E8  22DA               	addwfc	fsr2h,f,c
 43484  01A8EA  0E00               	movlw	0
 43485  01A8EC  6EDF               	movwf	indf2,c
 43486                           
 43487                           ; BSR set to: 1
 43488                           ;helpers.c: 1328: strupr((char*)Name);
 43489  01A8EE  0101               	movlb	1	; () banked
 43490  01A8F0  C106  F101         	movff	FormatNetBIOSName@Name+1,strupr@s+1
 43491  01A8F4  0101               	movlb	1	; () banked
 43492  01A8F6  C105  F100         	movff	FormatNetBIOSName@Name,strupr@s
 43493  01A8FA  EC75  F0D8         	call	_strupr	;wreg free
 43494                           
 43495                           ;helpers.c: 1329: i = 0;
 43496  01A8FE  0E00               	movlw	0
 43497  01A900  0101               	movlb	1	; () banked
 43498  01A902  6F07               	movwf	FormatNetBIOSName@i& (0+255),b
 43499                           
 43500                           ;helpers.c: 1330: while(i < 15u)
 43501  01A904  D025               	goto	l12468
 43502  01A906                     l12456:
 43503                           
 43504                           ; BSR set to: 1
 43505                           ;helpers.c: 1331: {
 43506                           ;helpers.c: 1332: if(Name[i] == '\0')
 43507  01A906  0101               	movlb	1	; () banked
 43508  01A908  5107               	movf	FormatNetBIOSName@i& (0+255),w,b
 43509  01A90A  0D01               	mullw	1
 43510  01A90C  50F3               	movf	prodl,w,c
 43511  01A90E  0101               	movlb	1	; () banked
 43512  01A910  2505               	addwf	FormatNetBIOSName@Name& (0+255),w,b
 43513  01A912  6ED9               	movwf	fsr2l,c
 43514  01A914  50F4               	movf	prodh,w,c
 43515  01A916  0101               	movlb	1	; () banked
 43516  01A918  2106               	addwfc	(FormatNetBIOSName@Name+1)& (0+255),w,b
 43517  01A91A  6EDA               	movwf	fsr2h,c
 43518  01A91C  50DF               	movf	indf2,w,c
 43519  01A91E  B4D8               	btfsc	status,2,c
 43520  01A920  D010               	goto	l12464
 43521  01A922  D014               	goto	l12466
 43522  01A924                     l12460:
 43523                           
 43524                           ; BSR set to: 1
 43525                           ;helpers.c: 1335: {
 43526                           ;helpers.c: 1336: Name[i++] = ' ';
 43527  01A924  0101               	movlb	1	; () banked
 43528  01A926  5107               	movf	FormatNetBIOSName@i& (0+255),w,b
 43529  01A928  0D01               	mullw	1
 43530  01A92A  50F3               	movf	prodl,w,c
 43531  01A92C  0101               	movlb	1	; () banked
 43532  01A92E  2505               	addwf	FormatNetBIOSName@Name& (0+255),w,b
 43533  01A930  6ED9               	movwf	fsr2l,c
 43534  01A932  50F4               	movf	prodh,w,c
 43535  01A934  0101               	movlb	1	; () banked
 43536  01A936  2106               	addwfc	(FormatNetBIOSName@Name+1)& (0+255),w,b
 43537  01A938  6EDA               	movwf	fsr2h,c
 43538  01A93A  0E20               	movlw	32
 43539  01A93C  6EDF               	movwf	indf2,c
 43540                           
 43541                           ; BSR set to: 1
 43542  01A93E  0101               	movlb	1	; () banked
 43543  01A940  2B07               	incf	FormatNetBIOSName@i& (0+255),f,b
 43544  01A942                     l12464:
 43545                           
 43546                           ; BSR set to: 1
 43547  01A942  0E0E               	movlw	14
 43548  01A944  0101               	movlb	1	; () banked
 43549  01A946  6507               	cpfsgt	FormatNetBIOSName@i& (0+255),b
 43550  01A948  D7ED               	goto	l12460
 43551  01A94A  0012               	return	
 43552  01A94C                     l12466:
 43553                           
 43554                           ; BSR set to: 1
 43555                           ;helpers.c: 1339: }
 43556                           ;helpers.c: 1340: i++;
 43557  01A94C  0101               	movlb	1	; () banked
 43558  01A94E  2B07               	incf	FormatNetBIOSName@i& (0+255),f,b
 43559  01A950                     l12468:
 43560                           
 43561                           ; BSR set to: 1
 43562  01A950  0E0E               	movlw	14
 43563  01A952  0101               	movlb	1	; () banked
 43564  01A954  6507               	cpfsgt	FormatNetBIOSName@i& (0+255),b
 43565  01A956  D7D7               	goto	l12456
 43566  01A958  0012               	return	
 43567  01A95A                     __end_of_FormatNetBIOSName:
 43568                           	opt stack 0
 43569                           tblptru	equ	0xFF8
 43570                           tblptrh	equ	0xFF7
 43571                           tblptrl	equ	0xFF6
 43572                           tablat	equ	0xFF5
 43573                           prodh	equ	0xFF4
 43574                           prodl	equ	0xFF3
 43575                           intcon	equ	0xFF2
 43576                           intcon2	equ	0xFF1
 43577                           intcon3	equ	0xFF0
 43578                           indf0	equ	0xFEF
 43579                           postinc0	equ	0xFEE
 43580                           fsr0h	equ	0xFEA
 43581                           fsr0l	equ	0xFE9
 43582                           wreg	equ	0xFE8
 43583                           indf1	equ	0xFE7
 43584                           postinc1	equ	0xFE6
 43585                           postdec1	equ	0xFE5
 43586                           fsr1h	equ	0xFE2
 43587                           fsr1l	equ	0xFE1
 43588                           indf2	equ	0xFDF
 43589                           postinc2	equ	0xFDE
 43590                           postdec2	equ	0xFDD
 43591                           fsr2h	equ	0xFDA
 43592                           fsr2l	equ	0xFD9
 43593                           status	equ	0xFD8
 43594                           
 43595 ;; *************** function _strupr *****************
 43596 ;; Defined at:
 43597 ;;		line 1201 in file "../tcpip/helpers.c"
 43598 ;; Parameters:    Size  Location     Type
 43599 ;;  s               2    0[BANK1 ] PTR unsigned char 
 43600 ;;		 -> AppConfig(51), 
 43601 ;; Auto vars:     Size  Location     Type
 43602 ;;  t               2    2[BANK1 ] PTR unsigned char 
 43603 ;;		 -> AppConfig(51), 
 43604 ;;  c               1    4[BANK1 ] unsigned char 
 43605 ;; Return value:  Size  Location     Type
 43606 ;;                  2    0[BANK1 ] PTR unsigned char 
 43607 ;; Registers used:
 43608 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43609 ;; Tracked objects:
 43610 ;;		On entry : 0/0
 43611 ;;		On exit  : 0/0
 43612 ;;		Unchanged: 0/0
 43613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43614 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43615 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43617 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43618 ;;Total ram usage:        5 bytes
 43619 ;; Hardware stack levels used:    1
 43620 ;; Hardware stack levels required when called:   10
 43621 ;; This function calls:
 43622 ;;		Nothing
 43623 ;; This function is called by:
 43624 ;;		_FormatNetBIOSName
 43625 ;; This function uses a non-reentrant model
 43626 ;;
 43627                           
 43628                           	psect	text118
 43629  01B0EA                     __ptext118:
 43630                           	opt stack 0
 43631  01B0EA                     _strupr:
 43632                           	opt stack 16
 43633                           
 43634                           ;helpers.c: 1203: char c;
 43635                           ;helpers.c: 1204: char *t;
 43636                           ;helpers.c: 1206: t = s;
 43637                           
 43638                           ; BSR set to: 1
 43639                           ;incstack = 0
 43640  01B0EA  0101               	movlb	1	; () banked
 43641  01B0EC  C101  F103         	movff	strupr@s+1,strupr@t+1
 43642  01B0F0  0101               	movlb	1	; () banked
 43643  01B0F2  C100  F102         	movff	strupr@s,strupr@t
 43644                           
 43645                           ;helpers.c: 1207: while( (c = *t) )
 43646  01B0F6  D012               	goto	l11588
 43647  01B0F8                     l11580:
 43648                           
 43649                           ; BSR set to: 1
 43650                           ;helpers.c: 1208: {
 43651                           ;helpers.c: 1209: if(c >= 'a' && c <= 'z')
 43652  01B0F8  0E60               	movlw	96
 43653  01B0FA  0101               	movlb	1	; () banked
 43654  01B0FC  6504               	cpfsgt	strupr@c& (0+255),b
 43655  01B0FE  D00B               	goto	l11586
 43656                           
 43657                           ; BSR set to: 1
 43658  01B100  0E7B               	movlw	123
 43659  01B102  0101               	movlb	1	; () banked
 43660  01B104  5D04               	subwf	strupr@c& (0+255),w,b
 43661  01B106  B0D8               	btfsc	status,0,c
 43662  01B108  D006               	goto	l11586
 43663                           
 43664                           ; BSR set to: 1
 43665                           ;helpers.c: 1210: {
 43666                           ;helpers.c: 1211: *t -= ('a' - 'A');
 43667  01B10A  C102  FFD9         	movff	strupr@t,fsr2l
 43668  01B10E  C103  FFDA         	movff	strupr@t+1,fsr2h
 43669  01B112  0E20               	movlw	32
 43670  01B114  5EDF               	subwf	indf2,f,c
 43671  01B116                     l11586:
 43672                           
 43673                           ; BSR set to: 1
 43674                           ;helpers.c: 1212: }
 43675                           ;helpers.c: 1213: t++;
 43676  01B116  0101               	movlb	1	; () banked
 43677  01B118  4B02               	infsnz	strupr@t& (0+255),f,b
 43678  01B11A  2B03               	incf	(strupr@t+1)& (0+255),f,b
 43679  01B11C                     l11588:
 43680                           
 43681                           ; BSR set to: 1
 43682  01B11C  C102  FFD9         	movff	strupr@t,fsr2l
 43683  01B120  C103  FFDA         	movff	strupr@t+1,fsr2h
 43684  01B124  50DF               	movf	indf2,w,c
 43685  01B126  0101               	movlb	1	; () banked
 43686  01B128  6F04               	movwf	strupr@c& (0+255),b
 43687  01B12A  0101               	movlb	1	; () banked
 43688  01B12C  6704               	tstfsz	strupr@c& (0+255),b
 43689  01B12E  D7E4               	goto	l11580
 43690  01B130  0012               	return	
 43691  01B132                     __end_of_strupr:
 43692                           	opt stack 0
 43693                           tblptru	equ	0xFF8
 43694                           tblptrh	equ	0xFF7
 43695                           tblptrl	equ	0xFF6
 43696                           tablat	equ	0xFF5
 43697                           prodh	equ	0xFF4
 43698                           prodl	equ	0xFF3
 43699                           intcon	equ	0xFF2
 43700                           intcon2	equ	0xFF1
 43701                           intcon3	equ	0xFF0
 43702                           indf0	equ	0xFEF
 43703                           postinc0	equ	0xFEE
 43704                           fsr0h	equ	0xFEA
 43705                           fsr0l	equ	0xFE9
 43706                           wreg	equ	0xFE8
 43707                           indf1	equ	0xFE7
 43708                           postinc1	equ	0xFE6
 43709                           postdec1	equ	0xFE5
 43710                           fsr1h	equ	0xFE2
 43711                           fsr1l	equ	0xFE1
 43712                           indf2	equ	0xFDF
 43713                           postinc2	equ	0xFDE
 43714                           postdec2	equ	0xFDD
 43715                           fsr2h	equ	0xFDA
 43716                           fsr2l	equ	0xFD9
 43717                           status	equ	0xFD8
 43718                           
 43719 ;; *************** function _ISRLP *****************
 43720 ;; Defined at:
 43721 ;;		line 152 in file "main.c"
 43722 ;; Parameters:    Size  Location     Type
 43723 ;;		None
 43724 ;; Auto vars:     Size  Location     Type
 43725 ;;  currentTS       4   78[BANK0 ] unsigned long 
 43726 ;;  diff            4   74[BANK0 ] unsigned long 
 43727 ;;  d               1   82[BANK0 ] char 
 43728 ;; Return value:  Size  Location     Type
 43729 ;;		None               void
 43730 ;; Registers used:
 43731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43732 ;; Tracked objects:
 43733 ;;		On entry : 0/0
 43734 ;;		On exit  : 0/0
 43735 ;;		Unchanged: 0/0
 43736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43738 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43739 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43740 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43741 ;;Total ram usage:       27 bytes
 43742 ;; Hardware stack levels used:    1
 43743 ;; Hardware stack levels required when called:    9
 43744 ;; This function calls:
 43745 ;;		_ChangeMasterVolume
 43746 ;;		_IRTimerInt
 43747 ;;		_ProcessIRInt
 43748 ;;		_TickUpdate
 43749 ;;		i2_Delay1KTCYx
 43750 ;;		i2_SaveToFlash
 43751 ;;		i2_TickGet
 43752 ;;		i2_UpdateSampleRate
 43753 ;; This function is called by:
 43754 ;;		Interrupt level 2
 43755 ;; This function uses a non-reentrant model
 43756 ;;
 43757                           
 43758                           	psect	intcode
 43759  000008                     __pintcode:
 43760                           	opt stack 0
 43761  000008                     _ISRLP:
 43762                           	opt stack 12
 43763                           
 43764                           ; BSR set to: 1
 43765                           ;incstack = 0
 43766  000008  CFFA F09C          	movff	pclath,??_ISRLP+4
 43767  00000C  CFFB F09D          	movff	pclatu,??_ISRLP+5
 43768  000010  CFE9 F09E          	movff	fsr0l,??_ISRLP+6
 43769  000014  CFEA F09F          	movff	fsr0h,??_ISRLP+7
 43770  000018  CFE1 F0A0          	movff	fsr1l,??_ISRLP+8
 43771  00001C  CFE2 F0A1          	movff	fsr1h,??_ISRLP+9
 43772  000020  CFD9 F0A2          	movff	fsr2l,??_ISRLP+10
 43773  000024  CFDA F0A3          	movff	fsr2h,??_ISRLP+11
 43774  000028  CFF3 F0A4          	movff	prodl,??_ISRLP+12
 43775  00002C  CFF4 F0A5          	movff	prodh,??_ISRLP+13
 43776  000030  CFF6 F0A6          	movff	tblptrl,??_ISRLP+14
 43777  000034  CFF7 F0A7          	movff	tblptrh,??_ISRLP+15
 43778  000038  CFF8 F0A8          	movff	tblptru,??_ISRLP+16
 43779  00003C  CFF5 F0A9          	movff	tablat,??_ISRLP+17
 43780                           
 43781                           ;main.c: 154: TickUpdate();
 43782  000040  EC6D  F0DC         	call	_TickUpdate	;wreg free
 43783                           
 43784                           ;main.c: 156: if (INTCON3bits.INT2F)
 43785  000044  A2F0               	btfss	intcon3,1,c	;volatile
 43786  000046  D00E               	goto	i2l15828
 43787                           
 43788                           ;main.c: 157: {
 43789                           ;main.c: 158: s_dacSettings.SampleRate ++;
 43790  000048  0102               	movlb	2	; () banked
 43791  00004A  2BD4               	incf	(_s_dacSettings+1)& (0+255),f,b
 43792                           
 43793                           ; BSR set to: 2
 43794                           ;main.c: 159: if (s_dacSettings.SampleRate > 5) s_dacSettings.SampleRate = 0;
 43795  00004C  0102               	movlb	2	; () banked
 43796  00004E  EE22  F0D4         	lfsr	2,_s_dacSettings+1
 43797  000052  0E05               	movlw	5
 43798  000054  64DF               	cpfsgt	indf2,c
 43799  000056  D003               	goto	i2l15824
 43800                           
 43801                           ; BSR set to: 2
 43802  000058  0E00               	movlw	0
 43803  00005A  0102               	movlb	2	; () banked
 43804  00005C  6FD4               	movwf	(_s_dacSettings+1)& (0+255),b
 43805  00005E                     i2l15824:
 43806                           
 43807                           ; BSR set to: 2
 43808                           ;main.c: 160: UpdateSampleRate();
 43809  00005E  EC28  F0D4         	call	i2_UpdateSampleRate	;wreg free
 43810                           
 43811                           ;main.c: 161: INTCON3bits.INT2F = 0;
 43812  000062  92F0               	bcf	intcon3,1,c	;volatile
 43813  000064                     i2l15828:
 43814                           
 43815                           ;main.c: 162: }
 43816                           ;main.c: 164: if (INTCON3bits.INT1F)
 43817  000064  A0F0               	btfss	intcon3,0,c	;volatile
 43818  000066  D06C               	goto	i2l15846
 43819                           
 43820                           ;main.c: 165: {
 43821                           ;main.c: 167: if (!PORTBbits.RB1)
 43822  000068  B281               	btfsc	3969,1,c	;volatile
 43823  00006A  D069               	goto	i2l15844
 43824                           
 43825                           ;main.c: 168: {
 43826                           ;main.c: 169: uint32_t currentTS = TickGet();
 43827  00006C  EC70  F0DB         	call	i2_TickGet	;wreg free
 43828  000070  C001  F0AE         	movff	?i2_TickGet,ISRLP@currentTS
 43829  000074  C002  F0AF         	movff	?i2_TickGet+1,ISRLP@currentTS+1
 43830  000078  C003  F0B0         	movff	?i2_TickGet+2,ISRLP@currentTS+2
 43831  00007C  C004  F0B1         	movff	?i2_TickGet+3,ISRLP@currentTS+3
 43832                           
 43833                           ;main.c: 170: uint32_t diff = currentTS - s_encoderLastUpdate;
 43834  000080  0100               	movlb	0	; () banked
 43835  000082  C0D5  F098         	movff	_s_encoderLastUpdate,??_ISRLP
 43836  000086  0100               	movlb	0	; () banked
 43837  000088  C0D6  F099         	movff	_s_encoderLastUpdate+1,??_ISRLP+1
 43838  00008C  0100               	movlb	0	; () banked
 43839  00008E  C0D7  F09A         	movff	_s_encoderLastUpdate+2,??_ISRLP+2
 43840  000092  0100               	movlb	0	; () banked
 43841  000094  C0D8  F09B         	movff	_s_encoderLastUpdate+3,??_ISRLP+3
 43842  000098  0100               	movlb	0	; () banked
 43843  00009A  1F98               	comf	??_ISRLP& (0+255),f,b
 43844  00009C  1F99               	comf	(??_ISRLP+1)& (0+255),f,b
 43845  00009E  1F9A               	comf	(??_ISRLP+2)& (0+255),f,b
 43846  0000A0  1F9B               	comf	(??_ISRLP+3)& (0+255),f,b
 43847  0000A2  2B98               	incf	??_ISRLP& (0+255),f,b
 43848  0000A4  0E00               	movlw	0
 43849  0000A6  2399               	addwfc	(??_ISRLP+1)& (0+255),f,b
 43850  0000A8  239A               	addwfc	(??_ISRLP+2)& (0+255),f,b
 43851  0000AA  239B               	addwfc	(??_ISRLP+3)& (0+255),f,b
 43852  0000AC  0100               	movlb	0	; () banked
 43853  0000AE  51AE               	movf	ISRLP@currentTS& (0+255),w,b
 43854  0000B0  0100               	movlb	0	; () banked
 43855  0000B2  2598               	addwf	??_ISRLP& (0+255),w,b
 43856  0000B4  0100               	movlb	0	; () banked
 43857  0000B6  6FAA               	movwf	ISRLP@diff& (0+255),b
 43858  0000B8  0100               	movlb	0	; () banked
 43859  0000BA  51AF               	movf	(ISRLP@currentTS+1)& (0+255),w,b
 43860  0000BC  0100               	movlb	0	; () banked
 43861  0000BE  2199               	addwfc	(??_ISRLP+1)& (0+255),w,b
 43862  0000C0  0100               	movlb	0	; () banked
 43863  0000C2  6FAB               	movwf	(ISRLP@diff+1)& (0+255),b
 43864  0000C4  0100               	movlb	0	; () banked
 43865  0000C6  51B0               	movf	(ISRLP@currentTS+2)& (0+255),w,b
 43866  0000C8  0100               	movlb	0	; () banked
 43867  0000CA  219A               	addwfc	(??_ISRLP+2)& (0+255),w,b
 43868  0000CC  0100               	movlb	0	; () banked
 43869  0000CE  6FAC               	movwf	(ISRLP@diff+2)& (0+255),b
 43870  0000D0  0100               	movlb	0	; () banked
 43871  0000D2  51B1               	movf	(ISRLP@currentTS+3)& (0+255),w,b
 43872  0000D4  0100               	movlb	0	; () banked
 43873  0000D6  219B               	addwfc	(??_ISRLP+3)& (0+255),w,b
 43874  0000D8  0100               	movlb	0	; () banked
 43875  0000DA  6FAD               	movwf	(ISRLP@diff+3)& (0+255),b
 43876                           
 43877                           ; BSR set to: 0
 43878                           ;main.c: 173: signed char d;
 43879                           ;main.c: 175: if (diff < 600)
 43880  0000DC  0E58               	movlw	88
 43881  0000DE  0100               	movlb	0	; () banked
 43882  0000E0  6F98               	movwf	??_ISRLP& (0+255),b
 43883  0000E2  0E02               	movlw	2
 43884  0000E4  6F99               	movwf	(??_ISRLP+1)& (0+255),b
 43885  0000E6  0E00               	movlw	0
 43886  0000E8  6F9A               	movwf	(??_ISRLP+2)& (0+255),b
 43887  0000EA  0E00               	movlw	0
 43888  0000EC  6F9B               	movwf	(??_ISRLP+3)& (0+255),b
 43889  0000EE  0100               	movlb	0	; () banked
 43890  0000F0  5198               	movf	??_ISRLP& (0+255),w,b
 43891  0000F2  0100               	movlb	0	; () banked
 43892  0000F4  5DAA               	subwf	ISRLP@diff& (0+255),w,b
 43893  0000F6  0100               	movlb	0	; () banked
 43894  0000F8  5199               	movf	(??_ISRLP+1)& (0+255),w,b
 43895  0000FA  0100               	movlb	0	; () banked
 43896  0000FC  59AB               	subwfb	(ISRLP@diff+1)& (0+255),w,b
 43897  0000FE  0100               	movlb	0	; () banked
 43898  000100  519A               	movf	(??_ISRLP+2)& (0+255),w,b
 43899  000102  0100               	movlb	0	; () banked
 43900  000104  59AC               	subwfb	(ISRLP@diff+2)& (0+255),w,b
 43901  000106  0100               	movlb	0	; () banked
 43902  000108  519B               	movf	(??_ISRLP+3)& (0+255),w,b
 43903  00010A  0100               	movlb	0	; () banked
 43904  00010C  59AD               	subwfb	(ISRLP@diff+3)& (0+255),w,b
 43905  00010E  B0D8               	btfsc	status,0,c
 43906  000110  D004               	goto	i2l1667
 43907                           
 43908                           ; BSR set to: 0
 43909                           ;main.c: 176: {
 43910                           ;main.c: 177: d = -2;
 43911  000112  0EFE               	movlw	254
 43912  000114  0100               	movlb	0	; () banked
 43913  000116  6FB2               	movwf	ISRLP@d& (0+255),b
 43914                           
 43915                           ;main.c: 178: }
 43916  000118  D002               	goto	i2l1668
 43917  00011A                     i2l1667:
 43918                           
 43919                           ; BSR set to: 0
 43920                           ;main.c: 179: else
 43921                           ;main.c: 180: {
 43922                           ;main.c: 181: d = -1;
 43923  00011A  0100               	movlb	0	; () banked
 43924  00011C  69B2               	setf	ISRLP@d& (0+255),b
 43925  00011E                     i2l1668:
 43926                           
 43927                           ; BSR set to: 0
 43928                           ;main.c: 182: }
 43929                           ;main.c: 183: s_encoderLastUpdate = currentTS;
 43930  00011E  C0AE  F0D5         	movff	ISRLP@currentTS,_s_encoderLastUpdate
 43931  000122  C0AF  F0D6         	movff	ISRLP@currentTS+1,_s_encoderLastUpdate+1
 43932  000126  C0B0  F0D7         	movff	ISRLP@currentTS+2,_s_encoderLastUpdate+2
 43933  00012A  C0B1  F0D8         	movff	ISRLP@currentTS+3,_s_encoderLastUpdate+3
 43934                           
 43935                           ;main.c: 184: if (PORTAbits.RA2)
 43936  00012E  A480               	btfss	3968,2,c	;volatile
 43937  000130  D002               	goto	i2l15842
 43938                           
 43939                           ; BSR set to: 0
 43940                           ;main.c: 185: {
 43941                           ;main.c: 186: d = -d;
 43942  000132  0100               	movlb	0	; () banked
 43943  000134  6DB2               	negf	ISRLP@d& (0+255),b
 43944  000136                     i2l15842:
 43945                           
 43946                           ; BSR set to: 0
 43947                           ;main.c: 187: }
 43948                           ;main.c: 189: ChangeMasterVolume(d);
 43949  000136  0100               	movlb	0	; () banked
 43950  000138  51B2               	movf	ISRLP@d& (0+255),w,b
 43951  00013A  EC63  F0D9         	call	_ChangeMasterVolume
 43952  00013E                     i2l15844:
 43953                           
 43954                           ;main.c: 190: }
 43955                           ;main.c: 191: INTCON3bits.INT1F = 0;
 43956  00013E  90F0               	bcf	intcon3,0,c	;volatile
 43957  000140                     i2l15846:
 43958                           
 43959                           ;main.c: 192: }
 43960                           ;main.c: 193: if (INTCON3bits.INT3F)
 43961  000140  A4F0               	btfss	intcon3,2,c	;volatile
 43962  000142  D003               	goto	i2l15852
 43963                           
 43964                           ;main.c: 194: {
 43965                           ;main.c: 196: SaveToFlash();
 43966  000144  EC4B  F0AB         	call	i2_SaveToFlash	;wreg free
 43967                           
 43968                           ;main.c: 197: INTCON3bits.INT3F = 0;
 43969  000148  94F0               	bcf	intcon3,2,c	;volatile
 43970  00014A                     i2l15852:
 43971                           
 43972                           ;main.c: 198: }
 43973                           ;main.c: 200: if (INTCONbits.INT0F)
 43974  00014A  A2F2               	btfss	intcon,1,c	;volatile
 43975  00014C  D00A               	goto	i2l15862
 43976                           
 43977                           ;main.c: 201: {
 43978                           ;main.c: 203: LATBbits.LATB5 = LATDbits.LD0;
 43979  00014E  A08C               	btfss	3980,0,c	;volatile
 43980  000150  D002               	bra	i2u1863_45
 43981  000152  8A8A               	bsf	3978,5,c	;volatile
 43982  000154  D001               	bra	i2u1863_47
 43983  000156                     i2u1863_45:
 43984  000156  9A8A               	bcf	3978,5,c	;volatile
 43985  000158                     i2u1863_47:
 43986                           
 43987                           ;main.c: 204: LATDbits.LD0 ^=1;
 43988  000158  708C               	btg	3980,0,c	;volatile
 43989                           
 43990                           ;main.c: 205: Delay1KTCYx(1);
 43991  00015A  0E01               	movlw	1
 43992  00015C  EC19  F0DD         	call	i2_Delay1KTCYx
 43993                           
 43994                           ;main.c: 206: INTCONbits.INT0F = 0;
 43995  000160  92F2               	bcf	intcon,1,c	;volatile
 43996  000162                     i2l15862:
 43997                           
 43998                           ;main.c: 207: }
 43999                           ;main.c: 209: if (INTCONbits.RBIF)
 44000  000162  A0F2               	btfss	intcon,0,c	;volatile
 44001  000164  D003               	goto	i2l15868
 44002                           
 44003                           ;main.c: 210: {
 44004                           ;main.c: 211: ProcessIRInt();
 44005  000166  EC5A  F0C9         	call	_ProcessIRInt	;wreg free
 44006                           
 44007                           ;main.c: 212: INTCONbits.RBIF = 0;
 44008  00016A  90F2               	bcf	intcon,0,c	;volatile
 44009  00016C                     i2l15868:
 44010                           
 44011                           ;main.c: 213: }
 44012                           ;main.c: 214: if (PIR1bits.TMR1IF)
 44013  00016C  A09E               	btfss	3998,0,c	;volatile
 44014  00016E  D003               	goto	i2l15874
 44015                           
 44016                           ;main.c: 215: {
 44017                           ;main.c: 216: IRTimerInt();
 44018  000170  EC44  F0D9         	call	_IRTimerInt	;wreg free
 44019                           
 44020                           ;main.c: 217: PIR1bits.TMR1IF = 0;
 44021  000174  909E               	bcf	3998,0,c	;volatile
 44022  000176                     i2l15874:
 44023                           
 44024                           ;main.c: 218: }
 44025                           ;main.c: 219: (INTCONbits.GIE = 1);
 44026  000176  8EF2               	bsf	intcon,7,c	;volatile
 44027  000178  C0A9  FFF5         	movff	??_ISRLP+17,tablat
 44028  00017C  C0A8  FFF8         	movff	??_ISRLP+16,tblptru
 44029  000180  C0A7  FFF7         	movff	??_ISRLP+15,tblptrh
 44030  000184  C0A6  FFF6         	movff	??_ISRLP+14,tblptrl
 44031  000188  C0A5  FFF4         	movff	??_ISRLP+13,prodh
 44032  00018C  C0A4  FFF3         	movff	??_ISRLP+12,prodl
 44033  000190  C0A3  FFDA         	movff	??_ISRLP+11,fsr2h
 44034  000194  C0A2  FFD9         	movff	??_ISRLP+10,fsr2l
 44035  000198  C0A1  FFE2         	movff	??_ISRLP+9,fsr1h
 44036  00019C  C0A0  FFE1         	movff	??_ISRLP+8,fsr1l
 44037  0001A0  C09F  FFEA         	movff	??_ISRLP+7,fsr0h
 44038  0001A4  C09E  FFE9         	movff	??_ISRLP+6,fsr0l
 44039  0001A8  C09D  FFFB         	movff	??_ISRLP+5,pclatu
 44040  0001AC  C09C  FFFA         	movff	??_ISRLP+4,pclath
 44041  0001B0  0011               	retfie		f
 44042  0001B2                     __end_of_ISRLP:
 44043                           	opt stack 0
 44044                           pclatu	equ	0xFFB
 44045                           pclath	equ	0xFFA
 44046                           tblptru	equ	0xFF8
 44047                           tblptrh	equ	0xFF7
 44048                           tblptrl	equ	0xFF6
 44049                           tablat	equ	0xFF5
 44050                           prodh	equ	0xFF4
 44051                           prodl	equ	0xFF3
 44052                           intcon	equ	0xFF2
 44053                           intcon2	equ	0xFF1
 44054                           intcon3	equ	0xFF0
 44055                           indf0	equ	0xFEF
 44056                           postinc0	equ	0xFEE
 44057                           fsr0h	equ	0xFEA
 44058                           fsr0l	equ	0xFE9
 44059                           wreg	equ	0xFE8
 44060                           indf1	equ	0xFE7
 44061                           postinc1	equ	0xFE6
 44062                           postdec1	equ	0xFE5
 44063                           fsr1h	equ	0xFE2
 44064                           fsr1l	equ	0xFE1
 44065                           indf2	equ	0xFDF
 44066                           postinc2	equ	0xFDE
 44067                           postdec2	equ	0xFDD
 44068                           fsr2h	equ	0xFDA
 44069                           fsr2l	equ	0xFD9
 44070                           status	equ	0xFD8
 44071                           
 44072 ;; *************** function i2_UpdateSampleRate *****************
 44073 ;; Defined at:
 44074 ;;		line 234 in file "Device.c"
 44075 ;; Parameters:    Size  Location     Type
 44076 ;;		None
 44077 ;; Auto vars:     Size  Location     Type
 44078 ;;  UpdateSample    2    5[COMRAM] PTR const unsigned char 
 44079 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 44080 ;;		 -> STR_9(17), STR_8(17), 
 44081 ;; Return value:  Size  Location     Type
 44082 ;;		None               void
 44083 ;; Registers used:
 44084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44085 ;; Tracked objects:
 44086 ;;		On entry : 0/0
 44087 ;;		On exit  : 0/0
 44088 ;;		Unchanged: 0/0
 44089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44093 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44094 ;;Total ram usage:        2 bytes
 44095 ;; Hardware stack levels used:    1
 44096 ;; Hardware stack levels required when called:    4
 44097 ;; This function calls:
 44098 ;;		i2_RefreshLine2Ex
 44099 ;; This function is called by:
 44100 ;;		_ISRLP
 44101 ;; This function uses a non-reentrant model
 44102 ;;
 44103                           
 44104                           	psect	text120
 44105  01A850                     __ptext120:
 44106                           	opt stack 0
 44107  01A850                     i2_UpdateSampleRate:
 44108                           	opt stack 16
 44109                           
 44110                           ;Device.c: 246: const char * srStr;
 44111                           ;Device.c: 247: switch(s_dacSettings.SampleRate)
 44112                           
 44113                           ;incstack = 0
 44114  01A850  D02A               	goto	i2l15280
 44115  01A852                     i2l15230:
 44116  01A852  0EFF               	movlw	high STR_8
 44117  01A854  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 44118  01A856  0E60               	movlw	low STR_8
 44119  01A858  6E06               	movwf	i2UpdateSampleRate@srStr,c
 44120                           
 44121                           ;Device.c: 250: LATEbits.LE2 = 0;
 44122  01A85A  948D               	bcf	3981,2,c	;volatile
 44123  01A85C  D005               	goto	L44
 44124  01A85E                     i2l15238:
 44125  01A85E  0EFF               	movlw	high STR_9
 44126  01A860  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 44127  01A862  0E4F               	movlw	low STR_9
 44128  01A864  6E06               	movwf	i2UpdateSampleRate@srStr,c
 44129                           
 44130                           ;Device.c: 255: LATEbits.LE2 = 1;
 44131  01A866  848D               	bsf	3981,2,c	;volatile
 44132  01A868                     L44:
 44133                           
 44134                           ;Device.c: 256: LATEbits.LE1 = 0;
 44135  01A868  928D               	bcf	3981,1,c	;volatile
 44136  01A86A  D006               	goto	L45
 44137  01A86C                     i2l15246:
 44138  01A86C  0EFF               	movlw	high STR_10
 44139  01A86E  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 44140  01A870  0E71               	movlw	low STR_10
 44141  01A872  6E06               	movwf	i2UpdateSampleRate@srStr,c
 44142                           
 44143                           ;Device.c: 260: LATEbits.LE2 = 0;
 44144  01A874  948D               	bcf	3981,2,c	;volatile
 44145  01A876  D007               	goto	L46
 44146  01A878                     L45:
 44147                           
 44148                           ;Device.c: 262: LATEbits.LE0 = 0;
 44149  01A878  908D               	bcf	3981,0,c	;volatile
 44150                           
 44151                           ;Device.c: 263: break;
 44152  01A87A  D027               	goto	i2l15282
 44153  01A87C                     i2l15254:
 44154  01A87C  0EFF               	movlw	high STR_11
 44155  01A87E  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 44156  01A880  0E3E               	movlw	low STR_11
 44157  01A882  6E06               	movwf	i2UpdateSampleRate@srStr,c
 44158                           
 44159                           ;Device.c: 265: LATEbits.LE2 = 1;
 44160  01A884  848D               	bsf	3981,2,c	;volatile
 44161  01A886                     L46:
 44162                           
 44163                           ;Device.c: 266: LATEbits.LE1 = 1;
 44164  01A886  828D               	bsf	3981,1,c	;volatile
 44165  01A888  D7F7               	goto	L45
 44166  01A88A                     i2l15262:
 44167  01A88A  0EFF               	movlw	high STR_12
 44168  01A88C  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 44169  01A88E  0E2D               	movlw	low STR_12
 44170  01A890  6E06               	movwf	i2UpdateSampleRate@srStr,c
 44171                           
 44172                           ;Device.c: 270: LATEbits.LE2 = 1;
 44173  01A892  848D               	bsf	3981,2,c	;volatile
 44174  01A894  D005               	goto	L47
 44175  01A896                     i2l15270:
 44176  01A896  0EFF               	movlw	high STR_13
 44177  01A898  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 44178  01A89A  0E82               	movlw	low STR_13
 44179  01A89C  6E06               	movwf	i2UpdateSampleRate@srStr,c
 44180                           
 44181                           ;Device.c: 275: LATEbits.LE2 = 0;
 44182  01A89E  948D               	bcf	3981,2,c	;volatile
 44183  01A8A0                     L47:
 44184                           
 44185                           ;Device.c: 276: LATEbits.LE1 = 0;
 44186  01A8A0  928D               	bcf	3981,1,c	;volatile
 44187                           
 44188                           ;Device.c: 277: LATEbits.LE0 = 1;
 44189  01A8A2  808D               	bsf	3981,0,c	;volatile
 44190                           
 44191                           ;Device.c: 278: break;
 44192  01A8A4  D012               	goto	i2l15282
 44193  01A8A6                     i2l15280:
 44194  01A8A6  0102               	movlb	2	; () banked
 44195  01A8A8  51D4               	movf	(_s_dacSettings+1)& (0+255),w,b
 44196                           
 44197                           ; Switch size 1, requested type "space"
 44198                           ; Number of cases is 5, Range of values is 0 to 5
 44199                           ; switch strategies available:
 44200                           ; Name         Instructions Cycles
 44201                           ; simple_byte           16     9 (average)
 44202                           ;	Chosen strategy is simple_byte
 44203  01A8AA  0A00               	xorlw	0	; case 0
 44204  01A8AC  B4D8               	btfsc	status,2,c
 44205  01A8AE  D7D1               	goto	i2l15230
 44206  01A8B0  0A01               	xorlw	1	; case 1
 44207  01A8B2  B4D8               	btfsc	status,2,c
 44208  01A8B4  D7D4               	goto	i2l15238
 44209  01A8B6  0A03               	xorlw	3	; case 2
 44210  01A8B8  B4D8               	btfsc	status,2,c
 44211  01A8BA  D7D8               	goto	i2l15246
 44212  01A8BC  0A01               	xorlw	1	; case 3
 44213  01A8BE  B4D8               	btfsc	status,2,c
 44214  01A8C0  D7DD               	goto	i2l15254
 44215  01A8C2  0A06               	xorlw	6	; case 5
 44216  01A8C4  B4D8               	btfsc	status,2,c
 44217  01A8C6  D7E1               	goto	i2l15262
 44218  01A8C8  D7E6               	goto	i2l15270
 44219  01A8CA                     i2l15282:
 44220                           
 44221                           ;Device.c: 280: RefreshLine2Ex(srStr);
 44222  01A8CA  C007  F005         	movff	i2UpdateSampleRate@srStr+1,i2RefreshLine2Ex@line+1
 44223  01A8CE  C006  F004         	movff	i2UpdateSampleRate@srStr,i2RefreshLine2Ex@line
 44224  01A8D2  ECE0  F0DC         	call	i2_RefreshLine2Ex	;wreg free
 44225  01A8D6  0012               	return	
 44226  01A8D8                     __end_ofi2_UpdateSampleRate:
 44227                           	opt stack 0
 44228                           pclatu	equ	0xFFB
 44229                           pclath	equ	0xFFA
 44230                           tblptru	equ	0xFF8
 44231                           tblptrh	equ	0xFF7
 44232                           tblptrl	equ	0xFF6
 44233                           tablat	equ	0xFF5
 44234                           prodh	equ	0xFF4
 44235                           prodl	equ	0xFF3
 44236                           intcon	equ	0xFF2
 44237                           intcon2	equ	0xFF1
 44238                           intcon3	equ	0xFF0
 44239                           indf0	equ	0xFEF
 44240                           postinc0	equ	0xFEE
 44241                           fsr0h	equ	0xFEA
 44242                           fsr0l	equ	0xFE9
 44243                           wreg	equ	0xFE8
 44244                           indf1	equ	0xFE7
 44245                           postinc1	equ	0xFE6
 44246                           postdec1	equ	0xFE5
 44247                           fsr1h	equ	0xFE2
 44248                           fsr1l	equ	0xFE1
 44249                           indf2	equ	0xFDF
 44250                           postinc2	equ	0xFDE
 44251                           postdec2	equ	0xFDD
 44252                           fsr2h	equ	0xFDA
 44253                           fsr2l	equ	0xFD9
 44254                           status	equ	0xFD8
 44255                           
 44256 ;; *************** function i2_RefreshLine2Ex *****************
 44257 ;; Defined at:
 44258 ;;		line 25 in file "LCD.c"
 44259 ;; Parameters:    Size  Location     Type
 44260 ;;  line            2    3[COMRAM] PTR const unsigned char 
 44261 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 44262 ;;		 -> STR_9(17), STR_8(17), dispbuf2(17), 
 44263 ;; Auto vars:     Size  Location     Type
 44264 ;;		None
 44265 ;; Return value:  Size  Location     Type
 44266 ;;		None               void
 44267 ;; Registers used:
 44268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44269 ;; Tracked objects:
 44270 ;;		On entry : 0/0
 44271 ;;		On exit  : 0/0
 44272 ;;		Unchanged: 0/0
 44273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44278 ;;Total ram usage:        2 bytes
 44279 ;; Hardware stack levels used:    1
 44280 ;; Hardware stack levels required when called:    3
 44281 ;; This function calls:
 44282 ;;		i2_PutsSLCD
 44283 ;;		i2_SLCDSetDDRamAddr
 44284 ;; This function is called by:
 44285 ;;		i2_UpdateSampleRate
 44286 ;; This function uses a non-reentrant model
 44287 ;;
 44288                           
 44289                           	psect	text121
 44290  01B9C0                     __ptext121:
 44291                           	opt stack 0
 44292  01B9C0                     i2_RefreshLine2Ex:
 44293                           	opt stack 16
 44294                           
 44295                           ;LCD.c: 27: SLCDSetDDRamAddr(0x40);
 44296                           
 44297                           ;incstack = 0
 44298  01B9C0  0E40               	movlw	64
 44299  01B9C2  ECC1  F0DC         	call	i2_SLCDSetDDRamAddr
 44300                           
 44301                           ;LCD.c: 28: PutsSLCD(line);
 44302  01B9C6  C005  F003         	movff	i2RefreshLine2Ex@line+1,i2PutsSLCD@buffer+1
 44303  01B9CA  C004  F002         	movff	i2RefreshLine2Ex@line,i2PutsSLCD@buffer
 44304  01B9CE  EC12  F0D7         	call	i2_PutsSLCD	;wreg free
 44305  01B9D2  0012               	return	
 44306  01B9D4                     __end_ofi2_RefreshLine2Ex:
 44307                           	opt stack 0
 44308                           pclatu	equ	0xFFB
 44309                           pclath	equ	0xFFA
 44310                           tblptru	equ	0xFF8
 44311                           tblptrh	equ	0xFF7
 44312                           tblptrl	equ	0xFF6
 44313                           tablat	equ	0xFF5
 44314                           prodh	equ	0xFF4
 44315                           prodl	equ	0xFF3
 44316                           intcon	equ	0xFF2
 44317                           intcon2	equ	0xFF1
 44318                           intcon3	equ	0xFF0
 44319                           indf0	equ	0xFEF
 44320                           postinc0	equ	0xFEE
 44321                           fsr0h	equ	0xFEA
 44322                           fsr0l	equ	0xFE9
 44323                           wreg	equ	0xFE8
 44324                           indf1	equ	0xFE7
 44325                           postinc1	equ	0xFE6
 44326                           postdec1	equ	0xFE5
 44327                           fsr1h	equ	0xFE2
 44328                           fsr1l	equ	0xFE1
 44329                           indf2	equ	0xFDF
 44330                           postinc2	equ	0xFDE
 44331                           postdec2	equ	0xFDD
 44332                           fsr2h	equ	0xFDA
 44333                           fsr2l	equ	0xFD9
 44334                           status	equ	0xFD8
 44335                           
 44336 ;; *************** function i2_SaveToFlash *****************
 44337 ;; Defined at:
 44338 ;;		line 83 in file "Persistence.c"
 44339 ;; Parameters:    Size  Location     Type
 44340 ;;		None
 44341 ;; Auto vars:     Size  Location     Type
 44342 ;;  SaveToFlash     4   59[COMRAM] unsigned long 
 44343 ;;  SaveToFlash     4   52[COMRAM] unsigned long 
 44344 ;;  SaveToFlash     2   56[COMRAM] int 
 44345 ;;  SaveToFlash     1   58[COMRAM] unsigned char 
 44346 ;; Return value:  Size  Location     Type
 44347 ;;		None               void
 44348 ;; Registers used:
 44349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44350 ;; Tracked objects:
 44351 ;;		On entry : 0/0
 44352 ;;		On exit  : 0/0
 44353 ;;		Unchanged: 0/0
 44354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44356 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44357 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44358 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44359 ;;Total ram usage:       23 bytes
 44360 ;; Hardware stack levels used:    1
 44361 ;; Hardware stack levels required when called:    5
 44362 ;; This function calls:
 44363 ;;		i2_EraseFlash
 44364 ;;		i2_FindEmpty
 44365 ;;		i2_GetCheckSum
 44366 ;;		i2_ReadFlash
 44367 ;;		i2_RefreshLine1
 44368 ;;		i2_RefreshLine1Ex
 44369 ;;		i2_WriteBlockFlash
 44370 ;;		i2_memcmp
 44371 ;; This function is called by:
 44372 ;;		_ISRLP
 44373 ;; This function uses a non-reentrant model
 44374 ;;
 44375                           
 44376                           	psect	text122
 44377  015696                     __ptext122:
 44378                           	opt stack 0
 44379  015696                     i2_SaveToFlash:
 44380                           	opt stack 15
 44381                           
 44382                           ;Persistence.c: 85: s_dacSettingsOriginal.Sequence = s_dacSettings.Sequence;
 44383                           
 44384                           ;incstack = 0
 44385  015696  C2D3  F300         	movff	_s_dacSettings,_s_dacSettingsOriginal
 44386                           
 44387                           ;Persistence.c: 86: int cmp = memcmp(&s_dacSettingsOriginal, &s_dacSettings, sizeof(s_da
      +                          cSettings) - 1);
 44388  01569A  0103               	movlb	3	; () banked
 44389  01569C  0E03               	movlw	high _s_dacSettingsOriginal
 44390  01569E  6E02               	movwf	i2memcmp@s1+1,c
 44391  0156A0  0103               	movlb	3	; () banked
 44392  0156A2  0E00               	movlw	low _s_dacSettingsOriginal
 44393  0156A4  6E01               	movwf	i2memcmp@s1,c
 44394  0156A6  0102               	movlb	2	; () banked
 44395  0156A8  0E02               	movlw	high _s_dacSettings
 44396  0156AA  6E04               	movwf	i2memcmp@s2+1,c
 44397  0156AC  0102               	movlb	2	; () banked
 44398  0156AE  0ED3               	movlw	low _s_dacSettings
 44399  0156B0  6E03               	movwf	i2memcmp@s2,c
 44400  0156B2  0E00               	movlw	0
 44401  0156B4  6E06               	movwf	i2memcmp@n+1,c
 44402  0156B6  0E13               	movlw	19
 44403  0156B8  6E05               	movwf	i2memcmp@n,c
 44404  0156BA  ECDB  F0D1         	call	i2_memcmp	;wreg free
 44405  0156BE  C001  F039         	movff	?i2_memcmp,i2SaveToFlash@cmp
 44406  0156C2  C002  F03A         	movff	?i2_memcmp+1,i2SaveToFlash@cmp+1
 44407                           
 44408                           ;Persistence.c: 87: if (cmp)
 44409  0156C6  503A               	movf	i2SaveToFlash@cmp+1,w,c
 44410  0156C8  1039               	iorwf	i2SaveToFlash@cmp,w,c
 44411  0156CA  B4D8               	btfsc	status,2,c
 44412  0156CC  D0F5               	goto	i2l15226
 44413                           
 44414                           ;Persistence.c: 88: {
 44415                           ;Persistence.c: 89: unsigned long addr = SETTINGS_ADDR;
 44416  0156CE  0E11               	movlw	low _SETTINGS_ADDR
 44417  0156D0  6EF6               	movwf	tblptrl,c
 44418  0156D2                     	if	1	;There is more than 1 active tblptr byte
 44419  0156D2  0EFF               	movlw	high _SETTINGS_ADDR
 44420  0156D4  6EF7               	movwf	tblptrh,c
 44421  0156D6                     	endif
 44422  0156D6                     	if	1	;There are 3 active tblptr bytes
 44423  0156D6  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 44424  0156D8  6EF8               	movwf	tblptru,c
 44425  0156DA                     	endif
 44426  0156DA  0009               	tblrd		*+
 44427  0156DC  CFF5 F035          	movff	tablat,i2SaveToFlash@addr
 44428  0156E0  0009               	tblrd		*+
 44429  0156E2  CFF5 F036          	movff	tablat,i2SaveToFlash@addr+1
 44430  0156E6  0009               	tblrd		*+
 44431  0156E8  CFF5 F037          	movff	tablat,i2SaveToFlash@addr+2
 44432  0156EC  000A               	tblrd		*-
 44433  0156EE  CFF5 F038          	movff	tablat,i2SaveToFlash@addr+3
 44434                           
 44435                           ;Persistence.c: 90: uint8_t success = 0;
 44436  0156F2  0E00               	movlw	0
 44437  0156F4  6E3B               	movwf	i2SaveToFlash@success,c
 44438                           
 44439                           ;Persistence.c: 91: while (!success)
 44440  0156F6  D0CD               	goto	i2l15220
 44441  0156F8                     i2l15194:
 44442                           
 44443                           ;Persistence.c: 92: {
 44444                           ;Persistence.c: 93: RefreshLine1Ex( "Preparing...    ");
 44445  0156F8  0EFF               	movlw	high STR_2
 44446  0156FA  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44447  0156FC  0ED7               	movlw	low STR_2
 44448  0156FE  6E04               	movwf	i2RefreshLine1Ex@line,c
 44449  015700  ECF4  F0DC         	call	i2_RefreshLine1Ex	;wreg free
 44450                           
 44451                           ;Persistence.c: 94: unsigned long emptyAddr = FindEmpty(addr);
 44452  015704  C035  F011         	movff	i2SaveToFlash@addr,i2FindEmpty@startAddr
 44453  015708  C036  F012         	movff	i2SaveToFlash@addr+1,i2FindEmpty@startAddr+1
 44454  01570C  C037  F013         	movff	i2SaveToFlash@addr+2,i2FindEmpty@startAddr+2
 44455  015710  C038  F014         	movff	i2SaveToFlash@addr+3,i2FindEmpty@startAddr+3
 44456  015714  EC2F  F0C2         	call	i2_FindEmpty	;wreg free
 44457  015718  C011  F03C         	movff	?i2_FindEmpty,i2SaveToFlash@emptyAddr
 44458  01571C  C012  F03D         	movff	?i2_FindEmpty+1,i2SaveToFlash@emptyAddr+1
 44459  015720  C013  F03E         	movff	?i2_FindEmpty+2,i2SaveToFlash@emptyAddr+2
 44460  015724  C014  F03F         	movff	?i2_FindEmpty+3,i2SaveToFlash@emptyAddr+3
 44461                           
 44462                           ;Persistence.c: 95: if (emptyAddr)
 44463  015728  503F               	movf	i2SaveToFlash@emptyAddr+3,w,c
 44464  01572A  103C               	iorwf	i2SaveToFlash@emptyAddr,w,c
 44465  01572C  103D               	iorwf	i2SaveToFlash@emptyAddr+1,w,c
 44466  01572E  103E               	iorwf	i2SaveToFlash@emptyAddr+2,w,c
 44467  015730  B4D8               	btfsc	status,2,c
 44468  015732  D057               	goto	i2l15214
 44469                           
 44470                           ;Persistence.c: 96: {
 44471                           ;Persistence.c: 97: RefreshLine1Ex("Writing...      ");
 44472  015734  0EFF               	movlw	high STR_3
 44473  015736  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44474  015738  0EC6               	movlw	low STR_3
 44475  01573A  6E04               	movwf	i2RefreshLine1Ex@line,c
 44476  01573C  ECF4  F0DC         	call	i2_RefreshLine1Ex	;wreg free
 44477                           
 44478                           ;Persistence.c: 98: s_dacSettings.Sequence --;
 44479  015740  0102               	movlb	2	; () banked
 44480  015742  07D3               	decf	_s_dacSettings& (0+255),f,b
 44481                           
 44482                           ; BSR set to: 2
 44483                           ;Persistence.c: 99: s_dacSettings.CheckSum = GetCheckSum((unsigned char *)&s_dacSettings
      +                          , sizeof(s_dacSettings) - 1);
 44484  015744  0102               	movlb	2	; () banked
 44485  015746  0E02               	movlw	high _s_dacSettings
 44486  015748  6E02               	movwf	i2GetCheckSum@data+1,c
 44487  01574A  0102               	movlb	2	; () banked
 44488  01574C  0ED3               	movlw	low _s_dacSettings
 44489  01574E  6E01               	movwf	i2GetCheckSum@data,c
 44490  015750  0E13               	movlw	19
 44491  015752  6E03               	movwf	i2GetCheckSum@dataLen,c
 44492  015754  ECAB  F0DA         	call	i2_GetCheckSum	;wreg free
 44493  015758  0102               	movlb	2	; () banked
 44494  01575A  6FE6               	movwf	(_s_dacSettings+19)& (0+255),b
 44495                           
 44496                           ; BSR set to: 2
 44497                           ;Persistence.c: 100: WriteBlockFlash(emptyAddr, 1, (unsigned char *)&s_dacSettings);
 44498  01575C  C03C  F001         	movff	i2SaveToFlash@emptyAddr,i2WriteBlockFlash@startaddr
 44499  015760  C03D  F002         	movff	i2SaveToFlash@emptyAddr+1,i2WriteBlockFlash@startaddr+1
 44500  015764  C03E  F003         	movff	i2SaveToFlash@emptyAddr+2,i2WriteBlockFlash@startaddr+2
 44501  015768  C03F  F004         	movff	i2SaveToFlash@emptyAddr+3,i2WriteBlockFlash@startaddr+3
 44502  01576C  0E01               	movlw	1
 44503  01576E  6E05               	movwf	i2WriteBlockFlash@num_blocks,c
 44504  015770  0102               	movlb	2	; () banked
 44505  015772  0E02               	movlw	high _s_dacSettings
 44506  015774  6E07               	movwf	i2WriteBlockFlash@flash_array+1,c
 44507  015776  0102               	movlb	2	; () banked
 44508  015778  0ED3               	movlw	low _s_dacSettings
 44509  01577A  6E06               	movwf	i2WriteBlockFlash@flash_array,c
 44510  01577C  ECC7  F0CC         	call	i2_WriteBlockFlash	;wreg free
 44511                           
 44512                           ;Persistence.c: 102: ReadFlash(emptyAddr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_
      +                          dacSettingsTmp);
 44513  015780  C03C  F001         	movff	i2SaveToFlash@emptyAddr,i2ReadFlash@startaddr
 44514  015784  C03D  F002         	movff	i2SaveToFlash@emptyAddr+1,i2ReadFlash@startaddr+1
 44515  015788  C03E  F003         	movff	i2SaveToFlash@emptyAddr+2,i2ReadFlash@startaddr+2
 44516  01578C  C03F  F004         	movff	i2SaveToFlash@emptyAddr+3,i2ReadFlash@startaddr+3
 44517  015790  0E00               	movlw	0
 44518  015792  6E06               	movwf	i2ReadFlash@num_bytes+1,c
 44519  015794  0E14               	movlw	20
 44520  015796  6E05               	movwf	i2ReadFlash@num_bytes,c
 44521  015798  0102               	movlb	2	; () banked
 44522  01579A  0E02               	movlw	high _s_dacSettingsTmp
 44523  01579C  6E08               	movwf	i2ReadFlash@flash_array+1,c
 44524  01579E  0102               	movlb	2	; () banked
 44525  0157A0  0EE7               	movlw	low _s_dacSettingsTmp
 44526  0157A2  6E07               	movwf	i2ReadFlash@flash_array,c
 44527  0157A4  ECF8  F0D7         	call	i2_ReadFlash	;wreg free
 44528                           
 44529                           ;Persistence.c: 103: success = !memcmp(&s_dacSettingsTmp, &s_dacSettings, sizeof(s_dacSe
      +                          ttings));
 44530  0157A8  0102               	movlb	2	; () banked
 44531  0157AA  0E02               	movlw	high _s_dacSettingsTmp
 44532  0157AC  6E02               	movwf	i2memcmp@s1+1,c
 44533  0157AE  0102               	movlb	2	; () banked
 44534  0157B0  0EE7               	movlw	low _s_dacSettingsTmp
 44535  0157B2  6E01               	movwf	i2memcmp@s1,c
 44536  0157B4  0102               	movlb	2	; () banked
 44537  0157B6  0E02               	movlw	high _s_dacSettings
 44538  0157B8  6E04               	movwf	i2memcmp@s2+1,c
 44539  0157BA  0102               	movlb	2	; () banked
 44540  0157BC  0ED3               	movlw	low _s_dacSettings
 44541  0157BE  6E03               	movwf	i2memcmp@s2,c
 44542  0157C0  0E00               	movlw	0
 44543  0157C2  6E06               	movwf	i2memcmp@n+1,c
 44544  0157C4  0E14               	movlw	20
 44545  0157C6  6E05               	movwf	i2memcmp@n,c
 44546  0157C8  ECDB  F0D1         	call	i2_memcmp	;wreg free
 44547  0157CC  5002               	movf	?i2_memcmp+1,w,c
 44548  0157CE  1001               	iorwf	?i2_memcmp,w,c
 44549  0157D0  A4D8               	btfss	status,2,c
 44550  0157D2  D002               	goto	i2u1773_40
 44551  0157D4  0E01               	movlw	1
 44552  0157D6  D001               	goto	i2u1773_46
 44553  0157D8                     i2u1773_40:
 44554  0157D8  0E00               	movlw	0
 44555  0157DA                     i2u1773_46:
 44556  0157DA  6E3B               	movwf	i2SaveToFlash@success,c
 44557                           
 44558                           ;Persistence.c: 104: RefreshLine1();
 44559  0157DC  EC10  F0DD         	call	i2_RefreshLine1	;wreg free
 44560                           
 44561                           ;Persistence.c: 105: }
 44562  0157E0  D058               	goto	i2l15220
 44563  0157E2                     i2l15214:
 44564                           
 44565                           ;Persistence.c: 106: else
 44566                           ;Persistence.c: 107: {
 44567                           ;Persistence.c: 108: RefreshLine1Ex("Erasing...      ");
 44568  0157E2  0EFF               	movlw	high STR_4
 44569  0157E4  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44570  0157E6  0EB5               	movlw	low STR_4
 44571  0157E8  6E04               	movwf	i2RefreshLine1Ex@line,c
 44572  0157EA  ECF4  F0DC         	call	i2_RefreshLine1Ex	;wreg free
 44573                           
 44574                           ;Persistence.c: 109: s_dacSettings.Sequence = 0xFF;
 44575  0157EE  0102               	movlb	2	; () banked
 44576  0157F0  69D3               	setf	_s_dacSettings& (0+255),b
 44577                           
 44578                           ; BSR set to: 2
 44579                           ;Persistence.c: 110: EraseFlash(SETTINGS_ADDR, SETTINGS_ADDR + SETTINGS_LEN - 1);
 44580  0157F2  0E11               	movlw	low _SETTINGS_ADDR
 44581  0157F4  6EF6               	movwf	tblptrl,c
 44582  0157F6                     	if	1	;There is more than 1 active tblptr byte
 44583  0157F6  0EFF               	movlw	high _SETTINGS_ADDR
 44584  0157F8  6EF7               	movwf	tblptrh,c
 44585  0157FA                     	endif
 44586  0157FA                     	if	1	;There are 3 active tblptr bytes
 44587  0157FA  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 44588  0157FC  6EF8               	movwf	tblptru,c
 44589  0157FE                     	endif
 44590  0157FE  0009               	tblrd		*+
 44591  015800  CFF5 F001          	movff	tablat,i2EraseFlash@startaddr
 44592  015804  0009               	tblrd		*+
 44593  015806  CFF5 F002          	movff	tablat,i2EraseFlash@startaddr+1
 44594  01580A  0009               	tblrd		*+
 44595  01580C  CFF5 F003          	movff	tablat,i2EraseFlash@startaddr+2
 44596  015810  000A               	tblrd		*-
 44597  015812  CFF5 F004          	movff	tablat,i2EraseFlash@startaddr+3
 44598  015816  0E15               	movlw	low _SETTINGS_LEN
 44599  015818  6EF6               	movwf	tblptrl,c
 44600  01581A                     	if	1	;There is more than 1 active tblptr byte
 44601  01581A  0EFF               	movlw	high _SETTINGS_LEN
 44602  01581C  6EF7               	movwf	tblptrh,c
 44603  01581E                     	endif
 44604  01581E                     	if	1	;There are 3 active tblptr bytes
 44605  01581E  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 44606  015820  6EF8               	movwf	tblptru,c
 44607  015822                     	endif
 44608  015822  0009               	tblrd		*+
 44609  015824  CFF5 F029          	movff	tablat,??i2_SaveToFlash
 44610  015828  0009               	tblrd		*+
 44611  01582A  CFF5 F02A          	movff	tablat,??i2_SaveToFlash+1
 44612  01582E  0009               	tblrd		*+
 44613  015830  CFF5 F02B          	movff	tablat,??i2_SaveToFlash+2
 44614  015834  0009               	tblrd		*+
 44615  015836  CFF5 F02C          	movff	tablat,??i2_SaveToFlash+3
 44616  01583A  0E11               	movlw	low _SETTINGS_ADDR
 44617  01583C  6EF6               	movwf	tblptrl,c
 44618  01583E                     	if	1	;There is more than 1 active tblptr byte
 44619  01583E  0EFF               	movlw	high _SETTINGS_ADDR
 44620  015840  6EF7               	movwf	tblptrh,c
 44621  015842                     	endif
 44622  015842                     	if	1	;There are 3 active tblptr bytes
 44623  015842  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 44624  015844  6EF8               	movwf	tblptru,c
 44625  015846                     	endif
 44626  015846  0009               	tblrd		*+
 44627  015848  CFF5 F02D          	movff	tablat,??i2_SaveToFlash+4
 44628  01584C  0009               	tblrd		*+
 44629  01584E  CFF5 F02E          	movff	tablat,??i2_SaveToFlash+5
 44630  015852  0009               	tblrd		*+
 44631  015854  CFF5 F02F          	movff	tablat,??i2_SaveToFlash+6
 44632  015858  0009               	tblrd		*+
 44633  01585A  CFF5 F030          	movff	tablat,??i2_SaveToFlash+7
 44634  01585E  5029               	movf	??i2_SaveToFlash,w,c
 44635  015860  242D               	addwf	??i2_SaveToFlash+4,w,c
 44636  015862  6E31               	movwf	(??i2_SaveToFlash+8)& (0+255),c
 44637  015864  502A               	movf	??i2_SaveToFlash+1,w,c
 44638  015866  202E               	addwfc	??i2_SaveToFlash+5,w,c
 44639  015868  6E32               	movwf	(??i2_SaveToFlash+9)& (0+255),c
 44640  01586A  502B               	movf	??i2_SaveToFlash+2,w,c
 44641  01586C  202F               	addwfc	??i2_SaveToFlash+6,w,c
 44642  01586E  6E33               	movwf	(??i2_SaveToFlash+10)& (0+255),c
 44643  015870  502C               	movf	??i2_SaveToFlash+3,w,c
 44644  015872  2030               	addwfc	??i2_SaveToFlash+7,w,c
 44645  015874  6E34               	movwf	(??i2_SaveToFlash+11)& (0+255),c
 44646  015876  0EFF               	movlw	255
 44647  015878  2431               	addwf	??i2_SaveToFlash+8,w,c
 44648  01587A  6E05               	movwf	i2EraseFlash@endaddr,c
 44649  01587C  0EFF               	movlw	255
 44650  01587E  2032               	addwfc	??i2_SaveToFlash+9,w,c
 44651  015880  6E06               	movwf	i2EraseFlash@endaddr+1,c
 44652  015882  0EFF               	movlw	255
 44653  015884  2033               	addwfc	??i2_SaveToFlash+10,w,c
 44654  015886  6E07               	movwf	i2EraseFlash@endaddr+2,c
 44655  015888  0EFF               	movlw	255
 44656  01588A  2034               	addwfc	??i2_SaveToFlash+11,w,c
 44657  01588C  6E08               	movwf	i2EraseFlash@endaddr+3,c
 44658  01588E  ECA5  F0D5         	call	i2_EraseFlash	;wreg free
 44659  015892                     i2l15220:
 44660  015892  503B               	movf	i2SaveToFlash@success,w,c
 44661  015894  B4D8               	btfsc	status,2,c
 44662  015896  D730               	goto	i2l15194
 44663                           
 44664                           ;Persistence.c: 111: }
 44665                           ;Persistence.c: 112: }
 44666                           ;Persistence.c: 113: s_dacSettingsOriginal = s_dacSettings;
 44667  015898  EE22  F0D3         	lfsr	2,_s_dacSettings
 44668  01589C  EE13  F000         	lfsr	1,_s_dacSettingsOriginal
 44669  0158A0  0E14               	movlw	20
 44670  0158A2                     i2u1775_41:
 44671  0158A2  CFDE FFE6          	movff	postinc2,postinc1
 44672  0158A6  2EE8               	decfsz	wreg,f,c
 44673  0158A8  D7FC               	goto	i2u1775_41
 44674                           
 44675                           ;Persistence.c: 114: RefreshLine1Ex("Stored          ");
 44676  0158AA  0EFF               	movlw	high STR_5
 44677  0158AC  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44678  0158AE  0E93               	movlw	low STR_5
 44679  0158B0  6E04               	movwf	i2RefreshLine1Ex@line,c
 44680  0158B2  ECF4  F0DC         	call	i2_RefreshLine1Ex	;wreg free
 44681                           
 44682                           ;Persistence.c: 115: }
 44683  0158B6  0012               	return	
 44684  0158B8                     i2l15226:
 44685                           
 44686                           ;Persistence.c: 116: else
 44687                           ;Persistence.c: 117: {
 44688                           ;Persistence.c: 118: RefreshLine1Ex("No change       ");
 44689  0158B8  0EFF               	movlw	high STR_6
 44690  0158BA  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44691  0158BC  0EA4               	movlw	low STR_6
 44692  0158BE  6E04               	movwf	i2RefreshLine1Ex@line,c
 44693  0158C0  ECF4  F0DC         	call	i2_RefreshLine1Ex	;wreg free
 44694  0158C4  0012               	return	
 44695  0158C6                     __end_ofi2_SaveToFlash:
 44696                           	opt stack 0
 44697                           pclatu	equ	0xFFB
 44698                           pclath	equ	0xFFA
 44699                           tblptru	equ	0xFF8
 44700                           tblptrh	equ	0xFF7
 44701                           tblptrl	equ	0xFF6
 44702                           tablat	equ	0xFF5
 44703                           prodh	equ	0xFF4
 44704                           prodl	equ	0xFF3
 44705                           intcon	equ	0xFF2
 44706                           intcon2	equ	0xFF1
 44707                           intcon3	equ	0xFF0
 44708                           indf0	equ	0xFEF
 44709                           postinc0	equ	0xFEE
 44710                           fsr0h	equ	0xFEA
 44711                           fsr0l	equ	0xFE9
 44712                           wreg	equ	0xFE8
 44713                           indf1	equ	0xFE7
 44714                           postinc1	equ	0xFE6
 44715                           postdec1	equ	0xFE5
 44716                           fsr1h	equ	0xFE2
 44717                           fsr1l	equ	0xFE1
 44718                           indf2	equ	0xFDF
 44719                           postinc2	equ	0xFDE
 44720                           postdec2	equ	0xFDD
 44721                           fsr2h	equ	0xFDA
 44722                           fsr2l	equ	0xFD9
 44723                           status	equ	0xFD8
 44724                           
 44725 ;; *************** function i2_WriteBlockFlash *****************
 44726 ;; Defined at:
 44727 ;;		line 119 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\WriteBlockFlash.c"
 44728 ;; Parameters:    Size  Location     Type
 44729 ;;  startaddr       4    0[COMRAM] unsigned long 
 44730 ;;  num_blocks      1    4[COMRAM] unsigned char 
 44731 ;;  flash_array     2    5[COMRAM] PTR unsigned char 
 44732 ;;		 -> s_dacSettings(20), 
 44733 ;; Auto vars:     Size  Location     Type
 44734 ;;  WriteBlockFl    4   13[COMRAM] unsigned long 
 44735 ;;  WriteBlockFl    3    8[COMRAM] PTR unsigned char 
 44736 ;;		 -> ROM(131063), 
 44737 ;;  WriteBlockFl    1   12[COMRAM] unsigned char 
 44738 ;;  WriteBlockFl    1   11[COMRAM] unsigned char 
 44739 ;; Return value:  Size  Location     Type
 44740 ;;		None               void
 44741 ;; Registers used:
 44742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44743 ;; Tracked objects:
 44744 ;;		On entry : 0/0
 44745 ;;		On exit  : 0/0
 44746 ;;		Unchanged: 0/0
 44747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44748 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44749 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44751 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44752 ;;Total ram usage:       17 bytes
 44753 ;; Hardware stack levels used:    1
 44754 ;; This function calls:
 44755 ;;		Nothing
 44756 ;; This function is called by:
 44757 ;;		i2_SaveToFlash
 44758 ;; This function uses a non-reentrant model
 44759 ;;
 44760                           
 44761                           	psect	text123
 44762  01998E                     __ptext123:
 44763                           	opt stack 0
 44764  01998E                     i2_WriteBlockFlash:
 44765                           	opt stack 19
 44766                           
 44767                           ;incstack = 0
 44768  01998E  0E00               	movlw	0
 44769  019990  6E0C               	movwf	i2WriteBlockFlash@write_byte,c
 44770  019992  0E00               	movlw	0
 44771  019994  6E0D               	movwf	i2WriteBlockFlash@flag,c
 44772  019996  0E06               	movlw	6
 44773  019998  6E08               	movwf	??i2_WriteBlockFlash& (0+255),c
 44774  01999A                     i2u1696_45:
 44775  01999A  90D8               	bcf	status,0,c
 44776  01999C  3204               	rrcf	i2WriteBlockFlash@startaddr+3,f,c
 44777  01999E  3203               	rrcf	i2WriteBlockFlash@startaddr+2,f,c
 44778  0199A0  3202               	rrcf	i2WriteBlockFlash@startaddr+1,f,c
 44779  0199A2  3201               	rrcf	i2WriteBlockFlash@startaddr,f,c
 44780  0199A4  2E08               	decfsz	??i2_WriteBlockFlash& (0+255),f,c
 44781  0199A6  D7F9               	goto	i2u1696_45
 44782  0199A8  0E06               	movlw	6
 44783  0199AA                     i2u1697_45:
 44784  0199AA  90D8               	bcf	status,0,c
 44785  0199AC  3601               	rlcf	i2WriteBlockFlash@startaddr,f,c
 44786  0199AE  3602               	rlcf	i2WriteBlockFlash@startaddr+1,f,c
 44787  0199B0  3603               	rlcf	i2WriteBlockFlash@startaddr+2,f,c
 44788  0199B2  3604               	rlcf	i2WriteBlockFlash@startaddr+3,f,c
 44789  0199B4  2EE8               	decfsz	wreg,f,c
 44790  0199B6  D7F9               	goto	i2u1697_45
 44791  0199B8  C001  F00E         	movff	i2WriteBlockFlash@startaddr,i2WriteBlockFlash@saddress
 44792  0199BC  C002  F00F         	movff	i2WriteBlockFlash@startaddr+1,i2WriteBlockFlash@saddress+1
 44793  0199C0  C003  F010         	movff	i2WriteBlockFlash@startaddr+2,i2WriteBlockFlash@saddress+2
 44794  0199C4  C004  F011         	movff	i2WriteBlockFlash@startaddr+3,i2WriteBlockFlash@saddress+3
 44795  0199C8  D046               	goto	i2l14652
 44796  0199CA                     i2l14620:
 44797  0199CA  C010  F00B         	movff	i2WriteBlockFlash@saddress+2,i2WriteBlockFlash@startptr+2
 44798  0199CE  C00F  F00A         	movff	i2WriteBlockFlash@saddress+1,i2WriteBlockFlash@startptr+1
 44799  0199D2  C00E  F009         	movff	i2WriteBlockFlash@saddress,i2WriteBlockFlash@startptr
 44800  0199D6  0E40               	movlw	64
 44801  0199D8  6E0C               	movwf	i2WriteBlockFlash@write_byte,c
 44802  0199DA  D015               	goto	i2l14630
 44803  0199DC                     i2l14624:
 44804  0199DC  C006  FFD9         	movff	i2WriteBlockFlash@flash_array,fsr2l
 44805  0199E0  C007  FFDA         	movff	i2WriteBlockFlash@flash_array+1,fsr2h
 44806  0199E4  50DF               	movf	indf2,w,c
 44807  0199E6  C009  FFF6         	movff	i2WriteBlockFlash@startptr,tblptrl
 44808  0199EA  C00A  FFF7         	movff	i2WriteBlockFlash@startptr+1,tblptrh
 44809  0199EE  C00B  FFF8         	movff	i2WriteBlockFlash@startptr+2,tblptru
 44810  0199F2  6EF5               	movwf	tablat,c
 44811  0199F4  000C               	tblwt		*
 44812  0199F6  4A06               	infsnz	i2WriteBlockFlash@flash_array,f,c
 44813  0199F8  2A07               	incf	i2WriteBlockFlash@flash_array+1,f,c
 44814  0199FA  0E01               	movlw	1
 44815  0199FC  2609               	addwf	i2WriteBlockFlash@startptr,f,c
 44816  0199FE  0E00               	movlw	0
 44817  019A00  220A               	addwfc	i2WriteBlockFlash@startptr+1,f,c
 44818  019A02  0E00               	movlw	0
 44819  019A04  220B               	addwfc	i2WriteBlockFlash@startptr+2,f,c
 44820  019A06                     i2l14630:
 44821  019A06  060C               	decf	i2WriteBlockFlash@write_byte,f,c
 44822  019A08  280C               	incf	i2WriteBlockFlash@write_byte& (0+255),w,c
 44823  019A0A  A4D8               	btfss	status,2,c
 44824  019A0C  D7E7               	goto	i2l14624
 44825  019A0E  C010  F00B         	movff	i2WriteBlockFlash@saddress+2,i2WriteBlockFlash@startptr+2
 44826  019A12  C00F  F00A         	movff	i2WriteBlockFlash@saddress+1,i2WriteBlockFlash@startptr+1
 44827  019A16  C00E  F009         	movff	i2WriteBlockFlash@saddress,i2WriteBlockFlash@startptr
 44828  019A1A  84A6               	bsf	4006,2,c	;volatile
 44829  019A1C  AEF2               	btfss	intcon,7,c	;volatile
 44830  019A1E  D003               	goto	i2l2145
 44831  019A20  9EF2               	bcf	intcon,7,c	;volatile
 44832  019A22  0E01               	movlw	1
 44833  019A24  6E0D               	movwf	i2WriteBlockFlash@flag,c
 44834  019A26                     i2l2145:
 44835  019A26  0E55               	movlw	85
 44836  019A28  6EA7               	movwf	4007,c	;volatile
 44837  019A2A  0EAA               	movlw	170
 44838  019A2C  6EA7               	movwf	4007,c	;volatile
 44839  019A2E  82A6               	bsf	4006,1,c	;volatile
 44840  019A30  94A6               	bcf	4006,2,c	;volatile
 44841  019A32  500D               	movf	i2WriteBlockFlash@flag,w,c
 44842  019A34  B4D8               	btfsc	status,2,c
 44843  019A36  D003               	goto	i2l14650
 44844  019A38  8EF2               	bsf	intcon,7,c	;volatile
 44845  019A3A  0E00               	movlw	0
 44846  019A3C  6E0D               	movwf	i2WriteBlockFlash@flag,c
 44847  019A3E                     i2l14650:
 44848  019A3E  0E40               	movlw	64
 44849  019A40  240E               	addwf	i2WriteBlockFlash@saddress,w,c
 44850  019A42  6E0E               	movwf	i2WriteBlockFlash@saddress,c
 44851  019A44  0E00               	movlw	0
 44852  019A46  200F               	addwfc	i2WriteBlockFlash@saddress+1,w,c
 44853  019A48  6E0F               	movwf	i2WriteBlockFlash@saddress+1,c
 44854  019A4A  0E00               	movlw	0
 44855  019A4C  2010               	addwfc	i2WriteBlockFlash@saddress+2,w,c
 44856  019A4E  6E10               	movwf	i2WriteBlockFlash@saddress+2,c
 44857  019A50  0E00               	movlw	0
 44858  019A52  2011               	addwfc	i2WriteBlockFlash@saddress+3,w,c
 44859  019A54  6E11               	movwf	i2WriteBlockFlash@saddress+3,c
 44860  019A56                     i2l14652:
 44861  019A56  0605               	decf	i2WriteBlockFlash@num_blocks,f,c
 44862  019A58  2805               	incf	i2WriteBlockFlash@num_blocks& (0+255),w,c
 44863  019A5A  B4D8               	btfsc	status,2,c
 44864  019A5C  0012               	return	
 44865  019A5E  D7B5               	goto	i2l14620
 44866  019A60                     __end_ofi2_WriteBlockFlash:
 44867                           	opt stack 0
 44868                           pclatu	equ	0xFFB
 44869                           pclath	equ	0xFFA
 44870                           tblptru	equ	0xFF8
 44871                           tblptrh	equ	0xFF7
 44872                           tblptrl	equ	0xFF6
 44873                           tablat	equ	0xFF5
 44874                           prodh	equ	0xFF4
 44875                           prodl	equ	0xFF3
 44876                           intcon	equ	0xFF2
 44877                           intcon2	equ	0xFF1
 44878                           intcon3	equ	0xFF0
 44879                           indf0	equ	0xFEF
 44880                           postinc0	equ	0xFEE
 44881                           fsr0h	equ	0xFEA
 44882                           fsr0l	equ	0xFE9
 44883                           wreg	equ	0xFE8
 44884                           indf1	equ	0xFE7
 44885                           postinc1	equ	0xFE6
 44886                           postdec1	equ	0xFE5
 44887                           fsr1h	equ	0xFE2
 44888                           fsr1l	equ	0xFE1
 44889                           indf2	equ	0xFDF
 44890                           postinc2	equ	0xFDE
 44891                           postdec2	equ	0xFDD
 44892                           fsr2h	equ	0xFDA
 44893                           fsr2l	equ	0xFD9
 44894                           status	equ	0xFD8
 44895                           
 44896 ;; *************** function i2_GetCheckSum *****************
 44897 ;; Defined at:
 44898 ;;		line 122 in file "Persistence.c"
 44899 ;; Parameters:    Size  Location     Type
 44900 ;;  data            2    0[COMRAM] PTR unsigned char 
 44901 ;;		 -> s_dacSettingsTmp(20), TCPServer@cmdBytes(18), s_dacSettings(20), 
 44902 ;;  dataLen         1    2[COMRAM] unsigned char 
 44903 ;; Auto vars:     Size  Location     Type
 44904 ;;  GetCheckSum     1    4[COMRAM] unsigned char 
 44905 ;;  GetCheckSum     1    3[COMRAM] unsigned char 
 44906 ;; Return value:  Size  Location     Type
 44907 ;;                  1    wreg      unsigned char 
 44908 ;; Registers used:
 44909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44910 ;; Tracked objects:
 44911 ;;		On entry : 0/0
 44912 ;;		On exit  : 0/0
 44913 ;;		Unchanged: 0/0
 44914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44918 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44919 ;;Total ram usage:        5 bytes
 44920 ;; Hardware stack levels used:    1
 44921 ;; This function calls:
 44922 ;;		Nothing
 44923 ;; This function is called by:
 44924 ;;		i2_SaveToFlash
 44925 ;; This function uses a non-reentrant model
 44926 ;;
 44927                           
 44928                           	psect	text124
 44929  01B556                     __ptext124:
 44930                           	opt stack 0
 44931  01B556                     i2_GetCheckSum:
 44932                           	opt stack 19
 44933                           
 44934                           ;Persistence.c: 124: uint8_t res = (*data) ^ 0xFF;
 44935                           
 44936                           ;incstack = 0
 44937  01B556  C001  FFD9         	movff	i2GetCheckSum@data,fsr2l
 44938  01B55A  C002  FFDA         	movff	i2GetCheckSum@data+1,fsr2h
 44939  01B55E  50DF               	movf	indf2,w,c
 44940  01B560  0AFF               	xorlw	255
 44941  01B562  6E04               	movwf	i2GetCheckSum@res,c
 44942                           
 44943                           ;Persistence.c: 125: for(uint8_t i = 1; i < dataLen; i ++)
 44944  01B564  0E01               	movlw	1
 44945  01B566  6E05               	movwf	i2GetCheckSum@i,c
 44946  01B568  D009               	goto	i2l14592
 44947  01B56A                     i2l14586:
 44948                           
 44949                           ;Persistence.c: 126: {
 44950                           ;Persistence.c: 127: data ++;
 44951  01B56A  4A01               	infsnz	i2GetCheckSum@data,f,c
 44952  01B56C  2A02               	incf	i2GetCheckSum@data+1,f,c
 44953                           
 44954                           ;Persistence.c: 128: res += *data;
 44955  01B56E  C001  FFD9         	movff	i2GetCheckSum@data,fsr2l
 44956  01B572  C002  FFDA         	movff	i2GetCheckSum@data+1,fsr2h
 44957  01B576  50DF               	movf	indf2,w,c
 44958  01B578  2604               	addwf	i2GetCheckSum@res,f,c
 44959  01B57A  2A05               	incf	i2GetCheckSum@i,f,c
 44960  01B57C                     i2l14592:
 44961  01B57C  5003               	movf	i2GetCheckSum@dataLen,w,c
 44962  01B57E  5C05               	subwf	i2GetCheckSum@i,w,c
 44963  01B580  A0D8               	btfss	status,0,c
 44964  01B582  D7F3               	goto	i2l14586
 44965                           
 44966                           ;Persistence.c: 129: }
 44967                           ;Persistence.c: 130: return res;
 44968  01B584  5004               	movf	i2GetCheckSum@res,w,c
 44969  01B586  0012               	return	
 44970  01B588                     __end_ofi2_GetCheckSum:
 44971                           	opt stack 0
 44972                           pclatu	equ	0xFFB
 44973                           pclath	equ	0xFFA
 44974                           tblptru	equ	0xFF8
 44975                           tblptrh	equ	0xFF7
 44976                           tblptrl	equ	0xFF6
 44977                           tablat	equ	0xFF5
 44978                           prodh	equ	0xFF4
 44979                           prodl	equ	0xFF3
 44980                           intcon	equ	0xFF2
 44981                           intcon2	equ	0xFF1
 44982                           intcon3	equ	0xFF0
 44983                           indf0	equ	0xFEF
 44984                           postinc0	equ	0xFEE
 44985                           fsr0h	equ	0xFEA
 44986                           fsr0l	equ	0xFE9
 44987                           wreg	equ	0xFE8
 44988                           indf1	equ	0xFE7
 44989                           postinc1	equ	0xFE6
 44990                           postdec1	equ	0xFE5
 44991                           fsr1h	equ	0xFE2
 44992                           fsr1l	equ	0xFE1
 44993                           indf2	equ	0xFDF
 44994                           postinc2	equ	0xFDE
 44995                           postdec2	equ	0xFDD
 44996                           fsr2h	equ	0xFDA
 44997                           fsr2l	equ	0xFD9
 44998                           status	equ	0xFD8
 44999                           
 45000 ;; *************** function i2_FindEmpty *****************
 45001 ;; Defined at:
 45002 ;;		line 61 in file "Persistence.c"
 45003 ;; Parameters:    Size  Location     Type
 45004 ;;  startAddr       4   16[COMRAM] unsigned long 
 45005 ;; Auto vars:     Size  Location     Type
 45006 ;;  FindEmpty       4   34[COMRAM] unsigned long 
 45007 ;;  FindEmpty       4   28[COMRAM] unsigned long 
 45008 ;;  FindEmpty       2   38[COMRAM] PTR unsigned char 
 45009 ;;		 -> s_dacSettingsTmp(20), 
 45010 ;;  FindEmpty       2   32[COMRAM] PTR unsigned char 
 45011 ;;		 -> s_dacSettingsTmp(20), 
 45012 ;; Return value:  Size  Location     Type
 45013 ;;                  4   16[COMRAM] unsigned long 
 45014 ;; Registers used:
 45015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45016 ;; Tracked objects:
 45017 ;;		On entry : 0/0
 45018 ;;		On exit  : 0/0
 45019 ;;		Unchanged: 0/0
 45020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45022 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45023 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45024 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45025 ;;Total ram usage:       24 bytes
 45026 ;; Hardware stack levels used:    1
 45027 ;; Hardware stack levels required when called:    1
 45028 ;; This function calls:
 45029 ;;		i2_ReadFlash
 45030 ;; This function is called by:
 45031 ;;		i2_SaveToFlash
 45032 ;; This function uses a non-reentrant model
 45033 ;;
 45034                           
 45035                           	psect	text125
 45036  01845E                     __ptext125:
 45037                           	opt stack 0
 45038  01845E                     i2_FindEmpty:
 45039                           	opt stack 18
 45040                           
 45041                           ;Persistence.c: 63: unsigned long addrStop = SETTINGS_ADDR + SETTINGS_LEN;
 45042                           
 45043                           ;incstack = 0
 45044  01845E  0E15               	movlw	low _SETTINGS_LEN
 45045  018460  6EF6               	movwf	tblptrl,c
 45046  018462                     	if	1	;There is more than 1 active tblptr byte
 45047  018462  0EFF               	movlw	high _SETTINGS_LEN
 45048  018464  6EF7               	movwf	tblptrh,c
 45049  018466                     	endif
 45050  018466                     	if	1	;There are 3 active tblptr bytes
 45051  018466  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 45052  018468  6EF8               	movwf	tblptru,c
 45053  01846A                     	endif
 45054  01846A  0009               	tblrd		*+
 45055  01846C  CFF5 F015          	movff	tablat,??i2_FindEmpty
 45056  018470  0009               	tblrd		*+
 45057  018472  CFF5 F016          	movff	tablat,??i2_FindEmpty+1
 45058  018476  0009               	tblrd		*+
 45059  018478  CFF5 F017          	movff	tablat,??i2_FindEmpty+2
 45060  01847C  0009               	tblrd		*+
 45061  01847E  CFF5 F018          	movff	tablat,??i2_FindEmpty+3
 45062  018482  0E11               	movlw	low _SETTINGS_ADDR
 45063  018484  6EF6               	movwf	tblptrl,c
 45064  018486                     	if	1	;There is more than 1 active tblptr byte
 45065  018486  0EFF               	movlw	high _SETTINGS_ADDR
 45066  018488  6EF7               	movwf	tblptrh,c
 45067  01848A                     	endif
 45068  01848A                     	if	1	;There are 3 active tblptr bytes
 45069  01848A  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 45070  01848C  6EF8               	movwf	tblptru,c
 45071  01848E                     	endif
 45072  01848E  0009               	tblrd		*+
 45073  018490  CFF5 F019          	movff	tablat,??i2_FindEmpty+4
 45074  018494  0009               	tblrd		*+
 45075  018496  CFF5 F01A          	movff	tablat,??i2_FindEmpty+5
 45076  01849A  0009               	tblrd		*+
 45077  01849C  CFF5 F01B          	movff	tablat,??i2_FindEmpty+6
 45078  0184A0  0009               	tblrd		*+
 45079  0184A2  CFF5 F01C          	movff	tablat,??i2_FindEmpty+7
 45080  0184A6  5015               	movf	??i2_FindEmpty,w,c
 45081  0184A8  2419               	addwf	??i2_FindEmpty+4,w,c
 45082  0184AA  6E1D               	movwf	i2FindEmpty@addrStop,c
 45083  0184AC  5016               	movf	??i2_FindEmpty+1,w,c
 45084  0184AE  201A               	addwfc	??i2_FindEmpty+5,w,c
 45085  0184B0  6E1E               	movwf	i2FindEmpty@addrStop+1,c
 45086  0184B2  5017               	movf	??i2_FindEmpty+2,w,c
 45087  0184B4  201B               	addwfc	??i2_FindEmpty+6,w,c
 45088  0184B6  6E1F               	movwf	i2FindEmpty@addrStop+2,c
 45089  0184B8  5018               	movf	??i2_FindEmpty+3,w,c
 45090  0184BA  201C               	addwfc	??i2_FindEmpty+7,w,c
 45091  0184BC  6E20               	movwf	i2FindEmpty@addrStop+3,c
 45092                           
 45093                           ;Persistence.c: 64: unsigned long addr = startAddr;
 45094  0184BE  C011  F023         	movff	i2FindEmpty@startAddr,i2FindEmpty@addr
 45095  0184C2  C012  F024         	movff	i2FindEmpty@startAddr+1,i2FindEmpty@addr+1
 45096  0184C6  C013  F025         	movff	i2FindEmpty@startAddr+2,i2FindEmpty@addr+2
 45097  0184CA  C014  F026         	movff	i2FindEmpty@startAddr+3,i2FindEmpty@addr+3
 45098                           
 45099                           ;Persistence.c: 65: while(addr < addrStop)
 45100  0184CE  D047               	goto	i2l1796
 45101  0184D0                     i2l14558:
 45102                           
 45103                           ;Persistence.c: 66: {
 45104                           ;Persistence.c: 67: ReadFlash(addr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_dacSet
      +                          tingsTmp);
 45105  0184D0  C023  F001         	movff	i2FindEmpty@addr,i2ReadFlash@startaddr
 45106  0184D4  C024  F002         	movff	i2FindEmpty@addr+1,i2ReadFlash@startaddr+1
 45107  0184D8  C025  F003         	movff	i2FindEmpty@addr+2,i2ReadFlash@startaddr+2
 45108  0184DC  C026  F004         	movff	i2FindEmpty@addr+3,i2ReadFlash@startaddr+3
 45109  0184E0  0E00               	movlw	0
 45110  0184E2  6E06               	movwf	i2ReadFlash@num_bytes+1,c
 45111  0184E4  0E14               	movlw	20
 45112  0184E6  6E05               	movwf	i2ReadFlash@num_bytes,c
 45113  0184E8  0102               	movlb	2	; () banked
 45114  0184EA  0E02               	movlw	high _s_dacSettingsTmp
 45115  0184EC  6E08               	movwf	i2ReadFlash@flash_array+1,c
 45116  0184EE  0102               	movlb	2	; () banked
 45117  0184F0  0EE7               	movlw	low _s_dacSettingsTmp
 45118  0184F2  6E07               	movwf	i2ReadFlash@flash_array,c
 45119  0184F4  ECF8  F0D7         	call	i2_ReadFlash	;wreg free
 45120                           
 45121                           ;Persistence.c: 69: uint8_t *tmpAddr = (uint8_t *)&s_dacSettingsTmp;
 45122  0184F8  0102               	movlb	2	; () banked
 45123  0184FA  0E02               	movlw	high _s_dacSettingsTmp
 45124  0184FC  6E28               	movwf	i2FindEmpty@tmpAddr+1,c
 45125  0184FE  0102               	movlb	2	; () banked
 45126  018500  0EE7               	movlw	low _s_dacSettingsTmp
 45127  018502  6E27               	movwf	i2FindEmpty@tmpAddr,c
 45128                           
 45129                           ; BSR set to: 2
 45130                           ;Persistence.c: 70: uint8_t *blockEnd = tmpAddr + sizeof(s_dacSettingsTmp);
 45131  018504  0E14               	movlw	20
 45132  018506  2427               	addwf	i2FindEmpty@tmpAddr,w,c
 45133  018508  6E21               	movwf	i2FindEmpty@blockEnd,c
 45134  01850A  0E00               	movlw	0
 45135  01850C  2028               	addwfc	i2FindEmpty@tmpAddr+1,w,c
 45136  01850E  6E22               	movwf	i2FindEmpty@blockEnd+1,c
 45137                           
 45138                           ;Persistence.c: 71: while(tmpAddr < blockEnd)
 45139  018510  D00A               	goto	i2l14570
 45140  018512                     i2l14564:
 45141                           
 45142                           ;Persistence.c: 72: {
 45143                           ;Persistence.c: 73: if (*tmpAddr != 0xFF) break;
 45144  018512  C027  FFD9         	movff	i2FindEmpty@tmpAddr,fsr2l
 45145  018516  C028  FFDA         	movff	i2FindEmpty@tmpAddr+1,fsr2h
 45146  01851A  50DF               	movf	indf2,w,c
 45147  01851C  0AFF               	xorlw	255
 45148  01851E  A4D8               	btfss	status,2,c
 45149  018520  D008               	goto	i2l14572
 45150                           
 45151                           ;Persistence.c: 74: tmpAddr ++;
 45152  018522  4A27               	infsnz	i2FindEmpty@tmpAddr,f,c
 45153  018524  2A28               	incf	i2FindEmpty@tmpAddr+1,f,c
 45154  018526                     i2l14570:
 45155  018526  5021               	movf	i2FindEmpty@blockEnd,w,c
 45156  018528  5C27               	subwf	i2FindEmpty@tmpAddr,w,c
 45157  01852A  5022               	movf	i2FindEmpty@blockEnd+1,w,c
 45158  01852C  5828               	subwfb	i2FindEmpty@tmpAddr+1,w,c
 45159  01852E  A0D8               	btfss	status,0,c
 45160  018530  D7F0               	goto	i2l14564
 45161  018532                     i2l14572:
 45162                           
 45163                           ;Persistence.c: 75: }
 45164                           ;Persistence.c: 76: if (tmpAddr == blockEnd) return addr;
 45165  018532  5022               	movf	i2FindEmpty@blockEnd+1,w,c
 45166  018534  1828               	xorwf	i2FindEmpty@tmpAddr+1,w,c
 45167  018536  E102               	bnz	i2u1690_45
 45168  018538  5021               	movf	i2FindEmpty@blockEnd,w,c
 45169  01853A  1827               	xorwf	i2FindEmpty@tmpAddr,w,c
 45170  01853C                     i2u1690_45:
 45171  01853C  A4D8               	btfss	status,2,c
 45172  01853E  D009               	goto	i2l14576
 45173  018540  C023  F011         	movff	i2FindEmpty@addr,?i2_FindEmpty
 45174  018544  C024  F012         	movff	i2FindEmpty@addr+1,?i2_FindEmpty+1
 45175  018548  C025  F013         	movff	i2FindEmpty@addr+2,?i2_FindEmpty+2
 45176  01854C  C026  F014         	movff	i2FindEmpty@addr+3,?i2_FindEmpty+3
 45177  018550  0012               	return	
 45178  018552                     i2l14576:
 45179                           
 45180                           ;Persistence.c: 78: addr += 0x40;
 45181  018552  0E40               	movlw	64
 45182  018554  2623               	addwf	i2FindEmpty@addr,f,c
 45183  018556  0E00               	movlw	0
 45184  018558  2224               	addwfc	i2FindEmpty@addr+1,f,c
 45185  01855A  2225               	addwfc	i2FindEmpty@addr+2,f,c
 45186  01855C  2226               	addwfc	i2FindEmpty@addr+3,f,c
 45187  01855E                     i2l1796:
 45188  01855E  501D               	movf	i2FindEmpty@addrStop,w,c
 45189  018560  5C23               	subwf	i2FindEmpty@addr,w,c
 45190  018562  501E               	movf	i2FindEmpty@addrStop+1,w,c
 45191  018564  5824               	subwfb	i2FindEmpty@addr+1,w,c
 45192  018566  501F               	movf	i2FindEmpty@addrStop+2,w,c
 45193  018568  5825               	subwfb	i2FindEmpty@addr+2,w,c
 45194  01856A  5020               	movf	i2FindEmpty@addrStop+3,w,c
 45195  01856C  5826               	subwfb	i2FindEmpty@addr+3,w,c
 45196  01856E  A0D8               	btfss	status,0,c
 45197  018570  D7AF               	goto	i2l14558
 45198                           
 45199                           ;Persistence.c: 79: }
 45200                           ;Persistence.c: 80: return 0;
 45201  018572  0E00               	movlw	0
 45202  018574  6E11               	movwf	?i2_FindEmpty,c
 45203  018576  0E00               	movlw	0
 45204  018578  6E12               	movwf	?i2_FindEmpty+1,c
 45205  01857A  0E00               	movlw	0
 45206  01857C  6E13               	movwf	?i2_FindEmpty+2,c
 45207  01857E  0E00               	movlw	0
 45208  018580  6E14               	movwf	?i2_FindEmpty+3,c
 45209  018582  0012               	return	
 45210  018584                     __end_ofi2_FindEmpty:
 45211                           	opt stack 0
 45212                           pclatu	equ	0xFFB
 45213                           pclath	equ	0xFFA
 45214                           tblptru	equ	0xFF8
 45215                           tblptrh	equ	0xFF7
 45216                           tblptrl	equ	0xFF6
 45217                           tablat	equ	0xFF5
 45218                           prodh	equ	0xFF4
 45219                           prodl	equ	0xFF3
 45220                           intcon	equ	0xFF2
 45221                           intcon2	equ	0xFF1
 45222                           intcon3	equ	0xFF0
 45223                           indf0	equ	0xFEF
 45224                           postinc0	equ	0xFEE
 45225                           fsr0h	equ	0xFEA
 45226                           fsr0l	equ	0xFE9
 45227                           wreg	equ	0xFE8
 45228                           indf1	equ	0xFE7
 45229                           postinc1	equ	0xFE6
 45230                           postdec1	equ	0xFE5
 45231                           fsr1h	equ	0xFE2
 45232                           fsr1l	equ	0xFE1
 45233                           indf2	equ	0xFDF
 45234                           postinc2	equ	0xFDE
 45235                           postdec2	equ	0xFDD
 45236                           fsr2h	equ	0xFDA
 45237                           fsr2l	equ	0xFD9
 45238                           status	equ	0xFD8
 45239                           
 45240 ;; *************** function i2_ReadFlash *****************
 45241 ;; Defined at:
 45242 ;;		line 23 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\ReadFlash.c"
 45243 ;; Parameters:    Size  Location     Type
 45244 ;;  startaddr       4    0[COMRAM] unsigned long 
 45245 ;;  num_bytes       2    4[COMRAM] unsigned int 
 45246 ;;  flash_array     2    6[COMRAM] PTR unsigned char 
 45247 ;;		 -> s_dacSettingsTmp(20), 
 45248 ;; Auto vars:     Size  Location     Type
 45249 ;;  ReadFlash       4   12[COMRAM] struct .
 45250 ;;  ReadFlash       4    8[COMRAM] struct .
 45251 ;; Return value:  Size  Location     Type
 45252 ;;		None               void
 45253 ;; Registers used:
 45254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45255 ;; Tracked objects:
 45256 ;;		On entry : 0/0
 45257 ;;		On exit  : 0/0
 45258 ;;		Unchanged: 0/0
 45259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45260 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45261 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45263 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45264 ;;Total ram usage:       16 bytes
 45265 ;; Hardware stack levels used:    1
 45266 ;; This function calls:
 45267 ;;		Nothing
 45268 ;; This function is called by:
 45269 ;;		i2_FindEmpty
 45270 ;;		i2_SaveToFlash
 45271 ;; This function uses a non-reentrant model
 45272 ;;
 45273                           
 45274                           	psect	text126
 45275  01AFF0                     __ptext126:
 45276                           	opt stack 0
 45277  01AFF0                     i2_ReadFlash:
 45278                           	opt stack 19
 45279                           
 45280                           ;incstack = 0
 45281  01AFF0  C001  F009         	movff	i2ReadFlash@startaddr,i2ReadFlash@flash_addr
 45282  01AFF4  C002  F00A         	movff	i2ReadFlash@startaddr+1,i2ReadFlash@flash_addr+1
 45283  01AFF8  C003  F00B         	movff	i2ReadFlash@startaddr+2,i2ReadFlash@flash_addr+2
 45284  01AFFC  C004  F00C         	movff	i2ReadFlash@startaddr+3,i2ReadFlash@flash_addr+3
 45285  01B000  CFF8 F00F          	movff	tblptru,i2ReadFlash@tblptr_save+2	;volatile
 45286  01B004  CFF7 F00E          	movff	tblptrh,i2ReadFlash@tblptr_save+1	;volatile
 45287  01B008  CFF6 F00D          	movff	tblptrl,i2ReadFlash@tblptr_save	;volatile
 45288  01B00C  C00B  FFF8         	movff	i2ReadFlash@flash_addr+2,tblptru	;volatile
 45289  01B010  C00A  FFF7         	movff	i2ReadFlash@flash_addr+1,tblptrh	;volatile
 45290  01B014  C009  FFF6         	movff	i2ReadFlash@flash_addr,tblptrl	;volatile
 45291  01B018  D009               	goto	i2l13726
 45292  01B01A                     i2l2129:
 45293  01B01A  0009               	tblrd		*+	;# 
 45294  01B01C  C007  FFD9         	movff	i2ReadFlash@flash_array,fsr2l
 45295  01B020  C008  FFDA         	movff	i2ReadFlash@flash_array+1,fsr2h
 45296  01B024  CFF5 FFDF          	movff	tablat,indf2	;volatile
 45297  01B028  4A07               	infsnz	i2ReadFlash@flash_array,f,c
 45298  01B02A  2A08               	incf	i2ReadFlash@flash_array+1,f,c
 45299  01B02C                     i2l13726:
 45300  01B02C  0605               	decf	i2ReadFlash@num_bytes,f,c
 45301  01B02E  A0D8               	btfss	status,0,c
 45302  01B030  0606               	decf	i2ReadFlash@num_bytes+1,f,c
 45303  01B032  2805               	incf	i2ReadFlash@num_bytes& (0+255),w,c
 45304  01B034  B4D8               	btfsc	status,2,c
 45305  01B036  2806               	incf	(i2ReadFlash@num_bytes+1)& (0+255),w,c
 45306  01B038  A4D8               	btfss	status,2,c
 45307  01B03A  D7EF               	goto	i2l2129
 45308  01B03C  C00F  FFF8         	movff	i2ReadFlash@tblptr_save+2,tblptru	;volatile
 45309  01B040  C00E  FFF7         	movff	i2ReadFlash@tblptr_save+1,tblptrh	;volatile
 45310  01B044  C00D  FFF6         	movff	i2ReadFlash@tblptr_save,tblptrl	;volatile
 45311  01B048  0012               	return	
 45312  01B04A                     __end_ofi2_ReadFlash:
 45313                           	opt stack 0
 45314                           pclatu	equ	0xFFB
 45315                           pclath	equ	0xFFA
 45316                           tblptru	equ	0xFF8
 45317                           tblptrh	equ	0xFF7
 45318                           tblptrl	equ	0xFF6
 45319                           tablat	equ	0xFF5
 45320                           prodh	equ	0xFF4
 45321                           prodl	equ	0xFF3
 45322                           intcon	equ	0xFF2
 45323                           intcon2	equ	0xFF1
 45324                           intcon3	equ	0xFF0
 45325                           indf0	equ	0xFEF
 45326                           postinc0	equ	0xFEE
 45327                           fsr0h	equ	0xFEA
 45328                           fsr0l	equ	0xFE9
 45329                           wreg	equ	0xFE8
 45330                           indf1	equ	0xFE7
 45331                           postinc1	equ	0xFE6
 45332                           postdec1	equ	0xFE5
 45333                           fsr1h	equ	0xFE2
 45334                           fsr1l	equ	0xFE1
 45335                           indf2	equ	0xFDF
 45336                           postinc2	equ	0xFDE
 45337                           postdec2	equ	0xFDD
 45338                           fsr2h	equ	0xFDA
 45339                           fsr2l	equ	0xFD9
 45340                           status	equ	0xFD8
 45341                           
 45342 ;; *************** function i2_EraseFlash *****************
 45343 ;; Defined at:
 45344 ;;		line 59 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\EraseFlash.c"
 45345 ;; Parameters:    Size  Location     Type
 45346 ;;  startaddr       4    0[COMRAM] unsigned long 
 45347 ;;  endaddr         4    4[COMRAM] unsigned long 
 45348 ;; Auto vars:     Size  Location     Type
 45349 ;;  EraseFlash      4    9[COMRAM] struct .
 45350 ;;  EraseFlash      1    8[COMRAM] unsigned char 
 45351 ;; Return value:  Size  Location     Type
 45352 ;;		None               void
 45353 ;; Registers used:
 45354 ;;		wreg, status,2, status,0
 45355 ;; Tracked objects:
 45356 ;;		On entry : 0/0
 45357 ;;		On exit  : 0/0
 45358 ;;		Unchanged: 0/0
 45359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45361 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45363 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45364 ;;Total ram usage:       13 bytes
 45365 ;; Hardware stack levels used:    1
 45366 ;; This function calls:
 45367 ;;		Nothing
 45368 ;; This function is called by:
 45369 ;;		i2_SaveToFlash
 45370 ;; This function uses a non-reentrant model
 45371 ;;
 45372                           
 45373                           	psect	text127
 45374  01AB4A                     __ptext127:
 45375                           	opt stack 0
 45376  01AB4A                     i2_EraseFlash:
 45377                           	opt stack 19
 45378                           
 45379                           ;incstack = 0
 45380  01AB4A  0E00               	movlw	0
 45381  01AB4C  6E09               	movwf	i2EraseFlash@flag,c
 45382  01AB4E  C001  F00A         	movff	i2EraseFlash@startaddr,i2EraseFlash@flash_addr
 45383  01AB52  C002  F00B         	movff	i2EraseFlash@startaddr+1,i2EraseFlash@flash_addr+1
 45384  01AB56  C003  F00C         	movff	i2EraseFlash@startaddr+2,i2EraseFlash@flash_addr+2
 45385  01AB5A  C004  F00D         	movff	i2EraseFlash@startaddr+3,i2EraseFlash@flash_addr+3
 45386  01AB5E  D021               	goto	i2l2112
 45387  01AB60                     i2l2113:
 45388  01AB60  C00C  FFF8         	movff	i2EraseFlash@flash_addr+2,tblptru	;volatile
 45389  01AB64  C00B  FFF7         	movff	i2EraseFlash@flash_addr+1,tblptrh	;volatile
 45390  01AB68  C00A  FFF6         	movff	i2EraseFlash@flash_addr,tblptrl	;volatile
 45391  01AB6C  84A6               	bsf	4006,2,c	;volatile
 45392  01AB6E  88A6               	bsf	4006,4,c	;volatile
 45393  01AB70  AEF2               	btfss	intcon,7,c	;volatile
 45394  01AB72  D003               	goto	i2l2114
 45395  01AB74  9EF2               	bcf	intcon,7,c	;volatile
 45396  01AB76  0E01               	movlw	1
 45397  01AB78  6E09               	movwf	i2EraseFlash@flag,c
 45398  01AB7A                     i2l2114:
 45399  01AB7A  0E55               	movlw	85
 45400  01AB7C  6EA7               	movwf	4007,c	;volatile
 45401  01AB7E  0EAA               	movlw	170
 45402  01AB80  6EA7               	movwf	4007,c	;volatile
 45403  01AB82  82A6               	bsf	4006,1,c	;volatile
 45404  01AB84  5009               	movf	i2EraseFlash@flag,w,c
 45405  01AB86  A4D8               	btfss	status,2,c
 45406  01AB88  8EF2               	bsf	intcon,7,c	;volatile
 45407  01AB8A  0E00               	movlw	0
 45408  01AB8C  240A               	addwf	i2EraseFlash@flash_addr,w,c
 45409  01AB8E  6E0A               	movwf	i2EraseFlash@flash_addr,c
 45410  01AB90  0E04               	movlw	4
 45411  01AB92  200B               	addwfc	i2EraseFlash@flash_addr+1,w,c
 45412  01AB94  6E0B               	movwf	i2EraseFlash@flash_addr+1,c
 45413  01AB96  0E00               	movlw	0
 45414  01AB98  200C               	addwfc	i2EraseFlash@flash_addr+2,w,c
 45415  01AB9A  6E0C               	movwf	i2EraseFlash@flash_addr+2,c
 45416  01AB9C  0E00               	movlw	0
 45417  01AB9E  200D               	addwfc	i2EraseFlash@flash_addr+3,w,c
 45418  01ABA0  6E0D               	movwf	i2EraseFlash@flash_addr+3,c
 45419  01ABA2                     i2l2112:
 45420  01ABA2  5005               	movf	i2EraseFlash@endaddr,w,c
 45421  01ABA4  5C0A               	subwf	i2EraseFlash@flash_addr,w,c
 45422  01ABA6  5006               	movf	i2EraseFlash@endaddr+1,w,c
 45423  01ABA8  580B               	subwfb	i2EraseFlash@flash_addr+1,w,c
 45424  01ABAA  5007               	movf	i2EraseFlash@endaddr+2,w,c
 45425  01ABAC  580C               	subwfb	i2EraseFlash@flash_addr+2,w,c
 45426  01ABAE  5008               	movf	i2EraseFlash@endaddr+3,w,c
 45427  01ABB0  580D               	subwfb	i2EraseFlash@flash_addr+3,w,c
 45428  01ABB2  B0D8               	btfsc	status,0,c
 45429  01ABB4  0012               	return	
 45430  01ABB6  D7D4               	goto	i2l2113
 45431  01ABB8                     __end_ofi2_EraseFlash:
 45432                           	opt stack 0
 45433                           pclatu	equ	0xFFB
 45434                           pclath	equ	0xFFA
 45435                           tblptru	equ	0xFF8
 45436                           tblptrh	equ	0xFF7
 45437                           tblptrl	equ	0xFF6
 45438                           tablat	equ	0xFF5
 45439                           prodh	equ	0xFF4
 45440                           prodl	equ	0xFF3
 45441                           intcon	equ	0xFF2
 45442                           intcon2	equ	0xFF1
 45443                           intcon3	equ	0xFF0
 45444                           indf0	equ	0xFEF
 45445                           postinc0	equ	0xFEE
 45446                           fsr0h	equ	0xFEA
 45447                           fsr0l	equ	0xFE9
 45448                           wreg	equ	0xFE8
 45449                           indf1	equ	0xFE7
 45450                           postinc1	equ	0xFE6
 45451                           postdec1	equ	0xFE5
 45452                           fsr1h	equ	0xFE2
 45453                           fsr1l	equ	0xFE1
 45454                           indf2	equ	0xFDF
 45455                           postinc2	equ	0xFDE
 45456                           postdec2	equ	0xFDD
 45457                           fsr2h	equ	0xFDA
 45458                           fsr2l	equ	0xFD9
 45459                           status	equ	0xFD8
 45460                           
 45461 ;; *************** function i2_Delay1KTCYx *****************
 45462 ;; Defined at:
 45463 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
 45464 ;; Parameters:    Size  Location     Type
 45465 ;;  unit            1    wreg     unsigned char 
 45466 ;; Auto vars:     Size  Location     Type
 45467 ;;  unit            1    0[COMRAM] unsigned char 
 45468 ;; Return value:  Size  Location     Type
 45469 ;;		None               void
 45470 ;; Registers used:
 45471 ;;		wreg
 45472 ;; Tracked objects:
 45473 ;;		On entry : 0/0
 45474 ;;		On exit  : 0/0
 45475 ;;		Unchanged: 0/0
 45476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45481 ;;Total ram usage:        1 bytes
 45482 ;; Hardware stack levels used:    1
 45483 ;; This function calls:
 45484 ;;		Nothing
 45485 ;; This function is called by:
 45486 ;;		_ISRLP
 45487 ;; This function uses a non-reentrant model
 45488 ;;
 45489                           
 45490                           	psect	text128
 45491  01BA32                     __ptext128:
 45492                           	opt stack 0
 45493  01BA32                     i2_Delay1KTCYx:
 45494                           	opt stack 20
 45495                           
 45496                           ;incstack = 0
 45497                           ;i2Delay1KTCYx@unit stored from wreg
 45498  01BA32  6E01               	movwf	i2Delay1KTCYx@unit,c
 45499  01BA34                     i2l2381:
 45500  01BA34  0EFA               	movlw	250
 45501  01BA36                     i2u1869_47:
 45502  01BA36  F000               	nop	
 45503  01BA38  2EE8               	decfsz	wreg,f,c
 45504  01BA3A  D7FD               	goto	i2u1869_47
 45505  01BA3C  2E01               	decfsz	i2Delay1KTCYx@unit,f,c
 45506  01BA3E  D7FA               	goto	i2l2381
 45507  01BA40  0012               	return	
 45508  01BA42                     __end_ofi2_Delay1KTCYx:
 45509                           	opt stack 0
 45510                           pclatu	equ	0xFFB
 45511                           pclath	equ	0xFFA
 45512                           tblptru	equ	0xFF8
 45513                           tblptrh	equ	0xFF7
 45514                           tblptrl	equ	0xFF6
 45515                           tablat	equ	0xFF5
 45516                           prodh	equ	0xFF4
 45517                           prodl	equ	0xFF3
 45518                           intcon	equ	0xFF2
 45519                           intcon2	equ	0xFF1
 45520                           intcon3	equ	0xFF0
 45521                           indf0	equ	0xFEF
 45522                           postinc0	equ	0xFEE
 45523                           fsr0h	equ	0xFEA
 45524                           fsr0l	equ	0xFE9
 45525                           wreg	equ	0xFE8
 45526                           indf1	equ	0xFE7
 45527                           postinc1	equ	0xFE6
 45528                           postdec1	equ	0xFE5
 45529                           fsr1h	equ	0xFE2
 45530                           fsr1l	equ	0xFE1
 45531                           indf2	equ	0xFDF
 45532                           postinc2	equ	0xFDE
 45533                           postdec2	equ	0xFDD
 45534                           fsr2h	equ	0xFDA
 45535                           fsr2l	equ	0xFD9
 45536                           status	equ	0xFD8
 45537                           
 45538 ;; *************** function _TickUpdate *****************
 45539 ;; Defined at:
 45540 ;;		line 391 in file "../tcpip/tick.c"
 45541 ;; Parameters:    Size  Location     Type
 45542 ;;		None
 45543 ;; Auto vars:     Size  Location     Type
 45544 ;;		None
 45545 ;; Return value:  Size  Location     Type
 45546 ;;		None               void
 45547 ;; Registers used:
 45548 ;;		wreg, status,2, status,0
 45549 ;; Tracked objects:
 45550 ;;		On entry : 0/0
 45551 ;;		On exit  : 0/0
 45552 ;;		Unchanged: 0/0
 45553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45558 ;;Total ram usage:        0 bytes
 45559 ;; Hardware stack levels used:    1
 45560 ;; This function calls:
 45561 ;;		Nothing
 45562 ;; This function is called by:
 45563 ;;		_ISRLP
 45564 ;; This function uses a non-reentrant model
 45565 ;;
 45566                           
 45567                           	psect	text129
 45568  01B8DA                     __ptext129:
 45569                           	opt stack 0
 45570  01B8DA                     _TickUpdate:
 45571                           	opt stack 20
 45572                           
 45573                           ;tick.c: 393: if(INTCONbits.TMR0IF)
 45574                           
 45575                           ;incstack = 0
 45576  01B8DA  A4F2               	btfss	intcon,2,c	;volatile
 45577  01B8DC  0012               	return	
 45578                           
 45579                           ;tick.c: 394: {
 45580                           ;tick.c: 396: dwInternalTicks++;
 45581  01B8DE  0E01               	movlw	1
 45582  01B8E0  0100               	movlb	0	; () banked
 45583  01B8E2  27D1               	addwf	_dwInternalTicks& (0+255),f,b	;volatile
 45584  01B8E4  0E00               	movlw	0
 45585  01B8E6  0100               	movlb	0	; () banked
 45586  01B8E8  23D2               	addwfc	(_dwInternalTicks+1)& (0+255),f,b	;volatile
 45587  01B8EA  0100               	movlb	0	; () banked
 45588  01B8EC  23D3               	addwfc	(_dwInternalTicks+2)& (0+255),f,b	;volatile
 45589  01B8EE  0100               	movlb	0	; () banked
 45590  01B8F0  23D4               	addwfc	(_dwInternalTicks+3)& (0+255),f,b	;volatile
 45591                           
 45592                           ; BSR set to: 0
 45593                           ;tick.c: 398: INTCONbits.TMR0IF = 0;
 45594  01B8F2  94F2               	bcf	intcon,2,c	;volatile
 45595  01B8F4  0012               	return	
 45596  01B8F6                     __end_of_TickUpdate:
 45597                           	opt stack 0
 45598                           pclatu	equ	0xFFB
 45599                           pclath	equ	0xFFA
 45600                           tblptru	equ	0xFF8
 45601                           tblptrh	equ	0xFF7
 45602                           tblptrl	equ	0xFF6
 45603                           tablat	equ	0xFF5
 45604                           prodh	equ	0xFF4
 45605                           prodl	equ	0xFF3
 45606                           intcon	equ	0xFF2
 45607                           intcon2	equ	0xFF1
 45608                           intcon3	equ	0xFF0
 45609                           indf0	equ	0xFEF
 45610                           postinc0	equ	0xFEE
 45611                           fsr0h	equ	0xFEA
 45612                           fsr0l	equ	0xFE9
 45613                           wreg	equ	0xFE8
 45614                           indf1	equ	0xFE7
 45615                           postinc1	equ	0xFE6
 45616                           postdec1	equ	0xFE5
 45617                           fsr1h	equ	0xFE2
 45618                           fsr1l	equ	0xFE1
 45619                           indf2	equ	0xFDF
 45620                           postinc2	equ	0xFDE
 45621                           postdec2	equ	0xFDD
 45622                           fsr2h	equ	0xFDA
 45623                           fsr2l	equ	0xFD9
 45624                           status	equ	0xFD8
 45625                           
 45626 ;; *************** function _ProcessIRInt *****************
 45627 ;; Defined at:
 45628 ;;		line 107 in file "IR.c"
 45629 ;; Parameters:    Size  Location     Type
 45630 ;;		None
 45631 ;; Auto vars:     Size  Location     Type
 45632 ;;  numTicks        4   16[COMRAM] unsigned long 
 45633 ;;  diff            4   12[COMRAM] unsigned long 
 45634 ;; Return value:  Size  Location     Type
 45635 ;;		None               void
 45636 ;; Registers used:
 45637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45638 ;; Tracked objects:
 45639 ;;		On entry : 0/0
 45640 ;;		On exit  : 0/0
 45641 ;;		Unchanged: 0/0
 45642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45644 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45645 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45646 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45647 ;;Total ram usage:       12 bytes
 45648 ;; Hardware stack levels used:    1
 45649 ;; Hardware stack levels required when called:    2
 45650 ;; This function calls:
 45651 ;;		_ReInitTimer
 45652 ;;		i2_TickGet
 45653 ;; This function is called by:
 45654 ;;		_ISRLP
 45655 ;; This function uses a non-reentrant model
 45656 ;;
 45657                           
 45658                           	psect	text130
 45659  0192B4                     __ptext130:
 45660                           	opt stack 0
 45661  0192B4                     _ProcessIRInt:
 45662                           	opt stack 18
 45663                           
 45664                           ;IR.c: 109: if (PORTBbits.RB4 != s_prevIRPort && s_irCodeByteIdx < sizeof(s_irCode))
 45665                           
 45666                           ;incstack = 0
 45667  0192B4  A881               	btfss	3969,4,c	;volatile
 45668  0192B6  D002               	goto	i2u1753_40
 45669  0192B8  0E01               	movlw	1
 45670  0192BA  D001               	goto	i2u1753_46
 45671  0192BC                     i2u1753_40:
 45672  0192BC  0E00               	movlw	0
 45673  0192BE                     i2u1753_46:
 45674  0192BE  0101               	movlb	1	; () banked
 45675  0192C0  19FF               	xorwf	_s_prevIRPort& (0+255),w,b
 45676  0192C2  B4D8               	btfsc	status,2,c
 45677  0192C4  0012               	return	
 45678                           
 45679                           ; BSR set to: 1
 45680  0192C6  0E10               	movlw	16
 45681  0192C8  0101               	movlb	1	; () banked
 45682  0192CA  5DB7               	subwf	_s_irCodeByteIdx& (0+255),w,b	;volatile
 45683  0192CC  B0D8               	btfsc	status,0,c
 45684  0192CE  0012               	return	
 45685                           
 45686                           ; BSR set to: 1
 45687                           ;IR.c: 110: {
 45688                           ;IR.c: 111: ReInitTimer();
 45689  0192D0  ECEA  F0DC         	call	_ReInitTimer	;wreg free
 45690                           
 45691                           ;IR.c: 112: s_prevIRPort = PORTBbits.RB4;
 45692  0192D4  0E00               	movlw	0
 45693  0192D6  B881               	btfsc	3969,4,c	;volatile
 45694  0192D8  0E01               	movlw	1
 45695  0192DA  0101               	movlb	1	; () banked
 45696  0192DC  6FFF               	movwf	_s_prevIRPort& (0+255),b
 45697                           
 45698                           ; BSR set to: 1
 45699                           ;IR.c: 113: uint32_t numTicks = TickGet();
 45700  0192DE  EC70  F0DB         	call	i2_TickGet	;wreg free
 45701  0192E2  C001  F011         	movff	?i2_TickGet,ProcessIRInt@numTicks
 45702  0192E6  C002  F012         	movff	?i2_TickGet+1,ProcessIRInt@numTicks+1
 45703  0192EA  C003  F013         	movff	?i2_TickGet+2,ProcessIRInt@numTicks+2
 45704  0192EE  C004  F014         	movff	?i2_TickGet+3,ProcessIRInt@numTicks+3
 45705                           
 45706                           ;IR.c: 114: uint32_t diff = numTicks - s_numTicksPrev;
 45707  0192F2  0100               	movlb	0	; () banked
 45708  0192F4  C0DD  F009         	movff	_s_numTicksPrev,??_ProcessIRInt
 45709  0192F8  0100               	movlb	0	; () banked
 45710  0192FA  C0DE  F00A         	movff	_s_numTicksPrev+1,??_ProcessIRInt+1
 45711  0192FE  0100               	movlb	0	; () banked
 45712  019300  C0DF  F00B         	movff	_s_numTicksPrev+2,??_ProcessIRInt+2
 45713  019304  0100               	movlb	0	; () banked
 45714  019306  C0E0  F00C         	movff	_s_numTicksPrev+3,??_ProcessIRInt+3
 45715  01930A  1E09               	comf	??_ProcessIRInt,f,c
 45716  01930C  1E0A               	comf	??_ProcessIRInt+1,f,c
 45717  01930E  1E0B               	comf	??_ProcessIRInt+2,f,c
 45718  019310  1E0C               	comf	??_ProcessIRInt+3,f,c
 45719  019312  2A09               	incf	??_ProcessIRInt,f,c
 45720  019314  0E00               	movlw	0
 45721  019316  220A               	addwfc	??_ProcessIRInt+1,f,c
 45722  019318  220B               	addwfc	??_ProcessIRInt+2,f,c
 45723  01931A  220C               	addwfc	??_ProcessIRInt+3,f,c
 45724  01931C  5011               	movf	ProcessIRInt@numTicks,w,c
 45725  01931E  2409               	addwf	??_ProcessIRInt,w,c
 45726  019320  6E0D               	movwf	ProcessIRInt@diff,c
 45727  019322  5012               	movf	ProcessIRInt@numTicks+1,w,c
 45728  019324  200A               	addwfc	??_ProcessIRInt+1,w,c
 45729  019326  6E0E               	movwf	ProcessIRInt@diff+1,c
 45730  019328  5013               	movf	ProcessIRInt@numTicks+2,w,c
 45731  01932A  200B               	addwfc	??_ProcessIRInt+2,w,c
 45732  01932C  6E0F               	movwf	ProcessIRInt@diff+2,c
 45733  01932E  5014               	movf	ProcessIRInt@numTicks+3,w,c
 45734  019330  200C               	addwfc	??_ProcessIRInt+3,w,c
 45735  019332  6E10               	movwf	ProcessIRInt@diff+3,c
 45736                           
 45737                           ; BSR set to: 0
 45738                           ;IR.c: 127: if (s_irCodeByteIdx < sizeof(s_irCode))
 45739  019334  0E10               	movlw	16
 45740  019336  0101               	movlb	1	; () banked
 45741  019338  5DB7               	subwf	_s_irCodeByteIdx& (0+255),w,b	;volatile
 45742  01933A  B0D8               	btfsc	status,0,c
 45743  01933C  D027               	goto	i2l15026
 45744                           
 45745                           ; BSR set to: 1
 45746                           ;IR.c: 128: {
 45747                           ;IR.c: 129: if (diff > 0x15)
 45748  01933E  0E16               	movlw	22
 45749  019340  5C0D               	subwf	ProcessIRInt@diff,w,c
 45750  019342  0E00               	movlw	0
 45751  019344  580E               	subwfb	ProcessIRInt@diff+1,w,c
 45752  019346  0E00               	movlw	0
 45753  019348  580F               	subwfb	ProcessIRInt@diff+2,w,c
 45754  01934A  0E00               	movlw	0
 45755  01934C  5810               	subwfb	ProcessIRInt@diff+3,w,c
 45756  01934E  A0D8               	btfss	status,0,c
 45757  019350  D00E               	goto	i2l15018
 45758                           
 45759                           ; BSR set to: 1
 45760                           ;IR.c: 130: {
 45761                           ;IR.c: 131: s_irCode[s_irCodeByteIdx] |= s_irCodeBitIdx;
 45762  019352  0101               	movlb	1	; () banked
 45763  019354  51B7               	movf	_s_irCodeByteIdx& (0+255),w,b	;volatile
 45764  019356  0D01               	mullw	1
 45765  019358  0102               	movlb	2	; () banked
 45766  01935A  0EAD               	movlw	low _s_irCode	;volatile
 45767  01935C  24F3               	addwf	prodl,w,c
 45768  01935E  6ED9               	movwf	fsr2l,c
 45769  019360  0102               	movlb	2	; () banked
 45770  019362  0E02               	movlw	high _s_irCode	;volatile
 45771  019364  20F4               	addwfc	prodh,w,c
 45772  019366  6EDA               	movwf	fsr2h,c
 45773  019368  0101               	movlb	1	; () banked
 45774  01936A  51FE               	movf	_s_irCodeBitIdx& (0+255),w,b	;volatile
 45775  01936C  12DF               	iorwf	indf2,f,c
 45776  01936E                     i2l15018:
 45777                           
 45778                           ; BSR set to: 1
 45779                           ;IR.c: 132: }
 45780                           ;IR.c: 134: if (s_irCodeBitIdx == 0b10000000)
 45781  01936E  0101               	movlb	1	; () banked
 45782  019370  51FE               	movf	_s_irCodeBitIdx& (0+255),w,b	;volatile
 45783  019372  0A80               	xorlw	128
 45784  019374  A4D8               	btfss	status,2,c
 45785  019376  D006               	goto	i2l15024
 45786                           
 45787                           ; BSR set to: 1
 45788                           ;IR.c: 135: {
 45789                           ;IR.c: 136: s_irCodeBitIdx = 0b00000001;
 45790  019378  0E01               	movlw	1
 45791  01937A  0101               	movlb	1	; () banked
 45792  01937C  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 45793                           
 45794                           ; BSR set to: 1
 45795                           ;IR.c: 137: s_irCodeByteIdx ++;
 45796  01937E  0101               	movlb	1	; () banked
 45797  019380  2BB7               	incf	_s_irCodeByteIdx& (0+255),f,b	;volatile
 45798                           
 45799                           ;IR.c: 138: }
 45800  019382  D003               	goto	i2l1986
 45801  019384                     i2l15024:
 45802                           
 45803                           ; BSR set to: 1
 45804                           ;IR.c: 139: else
 45805                           ;IR.c: 140: {
 45806                           ;IR.c: 141: s_irCodeBitIdx <<= 1;
 45807  019384  0101               	movlb	1	; () banked
 45808  019386  90D8               	bcf	status,0,c
 45809  019388  37FE               	rlcf	_s_irCodeBitIdx& (0+255),f,b
 45810  01938A                     i2l1986:
 45811                           
 45812                           ; BSR set to: 1
 45813                           ;IR.c: 142: }
 45814                           ;IR.c: 144: LATDbits.LD1 ^= 1;
 45815  01938A  728C               	btg	3980,1,c	;volatile
 45816  01938C                     i2l15026:
 45817                           
 45818                           ; BSR set to: 1
 45819                           ;IR.c: 145: }
 45820                           ;IR.c: 146: s_numTicksPrev = numTicks;
 45821  01938C  C011  F0DD         	movff	ProcessIRInt@numTicks,_s_numTicksPrev
 45822  019390  C012  F0DE         	movff	ProcessIRInt@numTicks+1,_s_numTicksPrev+1
 45823  019394  C013  F0DF         	movff	ProcessIRInt@numTicks+2,_s_numTicksPrev+2
 45824  019398  C014  F0E0         	movff	ProcessIRInt@numTicks+3,_s_numTicksPrev+3
 45825  01939C  0012               	return	
 45826  01939E                     __end_of_ProcessIRInt:
 45827                           	opt stack 0
 45828                           pclatu	equ	0xFFB
 45829                           pclath	equ	0xFFA
 45830                           tblptru	equ	0xFF8
 45831                           tblptrh	equ	0xFF7
 45832                           tblptrl	equ	0xFF6
 45833                           tablat	equ	0xFF5
 45834                           prodh	equ	0xFF4
 45835                           prodl	equ	0xFF3
 45836                           intcon	equ	0xFF2
 45837                           intcon2	equ	0xFF1
 45838                           intcon3	equ	0xFF0
 45839                           indf0	equ	0xFEF
 45840                           postinc0	equ	0xFEE
 45841                           fsr0h	equ	0xFEA
 45842                           fsr0l	equ	0xFE9
 45843                           wreg	equ	0xFE8
 45844                           indf1	equ	0xFE7
 45845                           postinc1	equ	0xFE6
 45846                           postdec1	equ	0xFE5
 45847                           fsr1h	equ	0xFE2
 45848                           fsr1l	equ	0xFE1
 45849                           indf2	equ	0xFDF
 45850                           postinc2	equ	0xFDE
 45851                           postdec2	equ	0xFDD
 45852                           fsr2h	equ	0xFDA
 45853                           fsr2l	equ	0xFD9
 45854                           status	equ	0xFD8
 45855                           
 45856 ;; *************** function _ReInitTimer *****************
 45857 ;; Defined at:
 45858 ;;		line 44 in file "IR.c"
 45859 ;; Parameters:    Size  Location     Type
 45860 ;;		None
 45861 ;; Auto vars:     Size  Location     Type
 45862 ;;		None
 45863 ;; Return value:  Size  Location     Type
 45864 ;;		None               void
 45865 ;; Registers used:
 45866 ;;		wreg, status,2
 45867 ;; Tracked objects:
 45868 ;;		On entry : 0/0
 45869 ;;		On exit  : 0/0
 45870 ;;		Unchanged: 0/0
 45871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45876 ;;Total ram usage:        0 bytes
 45877 ;; Hardware stack levels used:    1
 45878 ;; This function calls:
 45879 ;;		Nothing
 45880 ;; This function is called by:
 45881 ;;		_ProcessIRInt
 45882 ;; This function uses a non-reentrant model
 45883 ;;
 45884                           
 45885                           	psect	text131
 45886  01B9D4                     __ptext131:
 45887                           	opt stack 0
 45888  01B9D4                     _ReInitTimer:
 45889                           	opt stack 19
 45890                           
 45891                           ;IR.c: 46: T1CONbits.RD16 = 1;
 45892                           
 45893                           ; BSR set to: 1
 45894                           ;incstack = 0
 45895  01B9D4  8ECD               	bsf	4045,7,c	;volatile
 45896                           
 45897                           ;IR.c: 47: T1CONbits.T1CKPS0 = 1;
 45898  01B9D6  88CD               	bsf	4045,4,c	;volatile
 45899                           
 45900                           ;IR.c: 48: T1CONbits.T1CKPS1 = 1;
 45901  01B9D8  8ACD               	bsf	4045,5,c	;volatile
 45902                           
 45903                           ;IR.c: 50: TMR1L = 0xC7;
 45904  01B9DA  0EC7               	movlw	199
 45905  01B9DC  6ECE               	movwf	4046,c	;volatile
 45906                           
 45907                           ;IR.c: 51: TMR1L = 0xE1;
 45908  01B9DE  0EE1               	movlw	225
 45909  01B9E0  6ECE               	movwf	4046,c	;volatile
 45910                           
 45911                           ;IR.c: 52: T1CONbits.TMR1ON = 1;
 45912  01B9E2  80CD               	bsf	4045,0,c	;volatile
 45913                           
 45914                           ;IR.c: 53: PIE1bits.TMR1IE = 1;
 45915  01B9E4  809D               	bsf	3997,0,c	;volatile
 45916  01B9E6  0012               	return	
 45917  01B9E8                     __end_of_ReInitTimer:
 45918                           	opt stack 0
 45919                           pclatu	equ	0xFFB
 45920                           pclath	equ	0xFFA
 45921                           tblptru	equ	0xFF8
 45922                           tblptrh	equ	0xFF7
 45923                           tblptrl	equ	0xFF6
 45924                           tablat	equ	0xFF5
 45925                           prodh	equ	0xFF4
 45926                           prodl	equ	0xFF3
 45927                           intcon	equ	0xFF2
 45928                           intcon2	equ	0xFF1
 45929                           intcon3	equ	0xFF0
 45930                           indf0	equ	0xFEF
 45931                           postinc0	equ	0xFEE
 45932                           fsr0h	equ	0xFEA
 45933                           fsr0l	equ	0xFE9
 45934                           wreg	equ	0xFE8
 45935                           indf1	equ	0xFE7
 45936                           postinc1	equ	0xFE6
 45937                           postdec1	equ	0xFE5
 45938                           fsr1h	equ	0xFE2
 45939                           fsr1l	equ	0xFE1
 45940                           indf2	equ	0xFDF
 45941                           postinc2	equ	0xFDE
 45942                           postdec2	equ	0xFDD
 45943                           fsr2h	equ	0xFDA
 45944                           fsr2l	equ	0xFD9
 45945                           status	equ	0xFD8
 45946                           
 45947 ;; *************** function _IRTimerInt *****************
 45948 ;; Defined at:
 45949 ;;		line 93 in file "IR.c"
 45950 ;; Parameters:    Size  Location     Type
 45951 ;;		None
 45952 ;; Auto vars:     Size  Location     Type
 45953 ;;		None
 45954 ;; Return value:  Size  Location     Type
 45955 ;;		None               void
 45956 ;; Registers used:
 45957 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45958 ;; Tracked objects:
 45959 ;;		On entry : 0/0
 45960 ;;		On exit  : 0/0
 45961 ;;		Unchanged: 0/0
 45962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45967 ;;Total ram usage:        0 bytes
 45968 ;; Hardware stack levels used:    1
 45969 ;; Hardware stack levels required when called:    8
 45970 ;; This function calls:
 45971 ;;		_ProcessIRCode
 45972 ;;		i2_memset
 45973 ;; This function is called by:
 45974 ;;		_ISRLP
 45975 ;; This function uses a non-reentrant model
 45976 ;;
 45977                           
 45978                           	psect	text132
 45979  01B288                     __ptext132:
 45980                           	opt stack 0
 45981  01B288                     _IRTimerInt:
 45982                           	opt stack 12
 45983                           
 45984                           ;IR.c: 95: T1CONbits.TMR1ON = 0;
 45985                           
 45986                           ;incstack = 0
 45987  01B288  90CD               	bcf	4045,0,c	;volatile
 45988                           
 45989                           ;IR.c: 96: PIE1bits.TMR1IE = 0;
 45990  01B28A  909D               	bcf	3997,0,c	;volatile
 45991                           
 45992                           ;IR.c: 97: ProcessIRCode();
 45993  01B28C  EC69  F0B9         	call	_ProcessIRCode	;wreg free
 45994                           
 45995                           ;IR.c: 98: if (!s_irLearn)
 45996  01B290  0101               	movlb	1	; () banked
 45997  01B292  67B8               	tstfsz	_s_irLearn& (0+255),b	;volatile
 45998  01B294  D016               	goto	i2l15040
 45999                           
 46000                           ; BSR set to: 1
 46001                           ;IR.c: 99: {
 46002                           ;IR.c: 100: memset(&s_irCode, 0, sizeof(s_irCode));
 46003  01B296  0102               	movlb	2	; () banked
 46004  01B298  0E02               	movlw	high _s_irCode	;volatile
 46005  01B29A  6E02               	movwf	i2memset@p1+1,c
 46006  01B29C  0102               	movlb	2	; () banked
 46007  01B29E  0EAD               	movlw	low _s_irCode	;volatile
 46008  01B2A0  6E01               	movwf	i2memset@p1,c
 46009  01B2A2  0E00               	movlw	0
 46010  01B2A4  6E04               	movwf	i2memset@c+1,c
 46011  01B2A6  0E00               	movlw	0
 46012  01B2A8  6E03               	movwf	i2memset@c,c
 46013  01B2AA  0E00               	movlw	0
 46014  01B2AC  6E06               	movwf	i2memset@n+1,c
 46015  01B2AE  0E10               	movlw	16
 46016  01B2B0  6E05               	movwf	i2memset@n,c
 46017  01B2B2  EC0A  F0DB         	call	i2_memset	;wreg free
 46018                           
 46019                           ;IR.c: 101: s_irCodeBitIdx = 0b00000001;
 46020  01B2B6  0E01               	movlw	1
 46021  01B2B8  0101               	movlb	1	; () banked
 46022  01B2BA  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 46023                           
 46024                           ; BSR set to: 1
 46025                           ;IR.c: 102: s_irCodeByteIdx = 0;
 46026  01B2BC  0E00               	movlw	0
 46027  01B2BE  0101               	movlb	1	; () banked
 46028  01B2C0  6FB7               	movwf	_s_irCodeByteIdx& (0+255),b	;volatile
 46029  01B2C2                     i2l15040:
 46030                           
 46031                           ; BSR set to: 1
 46032                           ;IR.c: 103: }
 46033                           ;IR.c: 104: PIR1bits.TMR1IF = 0;
 46034  01B2C2  909E               	bcf	3998,0,c	;volatile
 46035                           
 46036                           ; BSR set to: 1
 46037  01B2C4  0012               	return	
 46038  01B2C6                     __end_of_IRTimerInt:
 46039                           	opt stack 0
 46040                           pclatu	equ	0xFFB
 46041                           pclath	equ	0xFFA
 46042                           tblptru	equ	0xFF8
 46043                           tblptrh	equ	0xFF7
 46044                           tblptrl	equ	0xFF6
 46045                           tablat	equ	0xFF5
 46046                           prodh	equ	0xFF4
 46047                           prodl	equ	0xFF3
 46048                           intcon	equ	0xFF2
 46049                           intcon2	equ	0xFF1
 46050                           intcon3	equ	0xFF0
 46051                           indf0	equ	0xFEF
 46052                           postinc0	equ	0xFEE
 46053                           fsr0h	equ	0xFEA
 46054                           fsr0l	equ	0xFE9
 46055                           wreg	equ	0xFE8
 46056                           indf1	equ	0xFE7
 46057                           postinc1	equ	0xFE6
 46058                           postdec1	equ	0xFE5
 46059                           fsr1h	equ	0xFE2
 46060                           fsr1l	equ	0xFE1
 46061                           indf2	equ	0xFDF
 46062                           postinc2	equ	0xFDE
 46063                           postdec2	equ	0xFDD
 46064                           fsr2h	equ	0xFDA
 46065                           fsr2l	equ	0xFD9
 46066                           status	equ	0xFD8
 46067                           
 46068 ;; *************** function i2_memset *****************
 46069 ;; Defined at:
 46070 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
 46071 ;; Parameters:    Size  Location     Type
 46072 ;;  p1              2    0[COMRAM] PTR void 
 46073 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 46074 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 46075 ;;  c               2    2[COMRAM] int 
 46076 ;;  n               2    4[COMRAM] unsigned int 
 46077 ;; Auto vars:     Size  Location     Type
 46078 ;;  memset          2    6[COMRAM] PTR unsigned char 
 46079 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 46080 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 46081 ;; Return value:  Size  Location     Type
 46082 ;;                  2    0[COMRAM] PTR void 
 46083 ;; Registers used:
 46084 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46085 ;; Tracked objects:
 46086 ;;		On entry : 0/0
 46087 ;;		On exit  : 0/0
 46088 ;;		Unchanged: 0/0
 46089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46090 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46093 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46094 ;;Total ram usage:        8 bytes
 46095 ;; Hardware stack levels used:    1
 46096 ;; This function calls:
 46097 ;;		Nothing
 46098 ;; This function is called by:
 46099 ;;		_IRTimerInt
 46100 ;; This function uses a non-reentrant model
 46101 ;;
 46102                           
 46103                           	psect	text133
 46104  01B614                     __ptext133:
 46105                           	opt stack 0
 46106  01B614                     i2_memset:
 46107                           	opt stack 19
 46108                           
 46109                           ; BSR set to: 1
 46110                           ;incstack = 0
 46111  01B614  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 46112  01B618  C001  F007         	movff	i2memset@p1,i2memset@p
 46113  01B61C  D008               	goto	i2l14660
 46114  01B61E                     i2l14656:
 46115  01B61E  C007  FFD9         	movff	i2memset@p,fsr2l
 46116  01B622  C008  FFDA         	movff	i2memset@p+1,fsr2h
 46117  01B626  C003  FFDF         	movff	i2memset@c,indf2
 46118  01B62A  4A07               	infsnz	i2memset@p,f,c
 46119  01B62C  2A08               	incf	i2memset@p+1,f,c
 46120  01B62E                     i2l14660:
 46121  01B62E  0605               	decf	i2memset@n,f,c
 46122  01B630  A0D8               	btfss	status,0,c
 46123  01B632  0606               	decf	i2memset@n+1,f,c
 46124  01B634  2805               	incf	i2memset@n& (0+255),w,c
 46125  01B636  B4D8               	btfsc	status,2,c
 46126  01B638  2806               	incf	(i2memset@n+1)& (0+255),w,c
 46127  01B63A  B4D8               	btfsc	status,2,c
 46128                           
 46129                           ;	Return value of i2_memset is never used
 46130  01B63C  0012               	return	
 46131  01B63E  D7EF               	goto	i2l14656
 46132  01B640                     __end_ofi2_memset:
 46133                           	opt stack 0
 46134                           pclatu	equ	0xFFB
 46135                           pclath	equ	0xFFA
 46136                           tblptru	equ	0xFF8
 46137                           tblptrh	equ	0xFF7
 46138                           tblptrl	equ	0xFF6
 46139                           tablat	equ	0xFF5
 46140                           prodh	equ	0xFF4
 46141                           prodl	equ	0xFF3
 46142                           intcon	equ	0xFF2
 46143                           intcon2	equ	0xFF1
 46144                           intcon3	equ	0xFF0
 46145                           indf0	equ	0xFEF
 46146                           postinc0	equ	0xFEE
 46147                           fsr0h	equ	0xFEA
 46148                           fsr0l	equ	0xFE9
 46149                           wreg	equ	0xFE8
 46150                           indf1	equ	0xFE7
 46151                           postinc1	equ	0xFE6
 46152                           postdec1	equ	0xFE5
 46153                           fsr1h	equ	0xFE2
 46154                           fsr1l	equ	0xFE1
 46155                           indf2	equ	0xFDF
 46156                           postinc2	equ	0xFDE
 46157                           postdec2	equ	0xFDD
 46158                           fsr2h	equ	0xFDA
 46159                           fsr2l	equ	0xFD9
 46160                           status	equ	0xFD8
 46161                           
 46162 ;; *************** function _ProcessIRCode *****************
 46163 ;; Defined at:
 46164 ;;		line 56 in file "IR.c"
 46165 ;; Parameters:    Size  Location     Type
 46166 ;;		None
 46167 ;; Auto vars:     Size  Location     Type
 46168 ;;  numTick         4   51[BANK0 ] unsigned long 
 46169 ;;  delta           1   55[BANK0 ] unsigned char 
 46170 ;; Return value:  Size  Location     Type
 46171 ;;		None               void
 46172 ;; Registers used:
 46173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46174 ;; Tracked objects:
 46175 ;;		On entry : 0/0
 46176 ;;		On exit  : 0/0
 46177 ;;		Unchanged: 0/0
 46178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46180 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46181 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46182 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46183 ;;Total ram usage:       17 bytes
 46184 ;; Hardware stack levels used:    1
 46185 ;; Hardware stack levels required when called:    7
 46186 ;; This function calls:
 46187 ;;		_ChangeMasterVolume
 46188 ;;		i2_TickGet
 46189 ;;		i2_memcmp
 46190 ;; This function is called by:
 46191 ;;		_IRTimerInt
 46192 ;; This function uses a non-reentrant model
 46193 ;;
 46194                           
 46195                           	psect	text134
 46196  0172D2                     __ptext134:
 46197                           	opt stack 0
 46198  0172D2                     _ProcessIRCode:
 46199                           	opt stack 12
 46200                           
 46201                           ;IR.c: 58: uint32_t numTick = TickGet();
 46202                           
 46203                           ;incstack = 0
 46204  0172D2  EC70  F0DB         	call	i2_TickGet	;wreg free
 46205  0172D6  C001  F093         	movff	?i2_TickGet,ProcessIRCode@numTick
 46206  0172DA  C002  F094         	movff	?i2_TickGet+1,ProcessIRCode@numTick+1
 46207  0172DE  C003  F095         	movff	?i2_TickGet+2,ProcessIRCode@numTick+2
 46208  0172E2  C004  F096         	movff	?i2_TickGet+3,ProcessIRCode@numTick+3
 46209                           
 46210                           ;IR.c: 60: if (!memcmp(&IR_POWER_ON, &s_irCode, sizeof(IR_POWER_ON)))
 46211  0172E6  0EFF               	movlw	high _IR_POWER_ON
 46212  0172E8  6E02               	movwf	i2memcmp@s1+1,c
 46213  0172EA  0E2A               	movlw	low _IR_POWER_ON
 46214  0172EC  6E01               	movwf	i2memcmp@s1,c
 46215  0172EE  0102               	movlb	2	; () banked
 46216  0172F0  0E02               	movlw	high _s_irCode	;volatile
 46217  0172F2  6E04               	movwf	i2memcmp@s2+1,c
 46218  0172F4  0102               	movlb	2	; () banked
 46219  0172F6  0EAD               	movlw	low _s_irCode	;volatile
 46220  0172F8  6E03               	movwf	i2memcmp@s2,c
 46221  0172FA  0E00               	movlw	0
 46222  0172FC  6E06               	movwf	i2memcmp@n+1,c
 46223  0172FE  0E03               	movlw	3
 46224  017300  6E05               	movwf	i2memcmp@n,c
 46225  017302  ECDB  F0D1         	call	i2_memcmp	;wreg free
 46226  017306  5002               	movf	?i2_memcmp+1,w,c
 46227  017308  1001               	iorwf	?i2_memcmp,w,c
 46228  01730A  A4D8               	btfss	status,2,c
 46229  01730C  D003               	goto	i2l14528
 46230                           
 46231                           ;IR.c: 61: {
 46232                           ;IR.c: 62: LATDbits.LD0 = 1;
 46233  01730E  808C               	bsf	3980,0,c	;volatile
 46234                           
 46235                           ;IR.c: 63: LATBbits.LATB5 = 0;
 46236  017310  9A8A               	bcf	3978,5,c	;volatile
 46237                           
 46238                           ;IR.c: 64: return;
 46239  017312  0012               	return	
 46240  017314                     i2l14528:
 46241                           
 46242                           ;IR.c: 65: }
 46243                           ;IR.c: 67: if (!memcmp(&IR_POWER_OFF, &s_irCode, sizeof(IR_POWER_OFF)))
 46244  017314  0EFF               	movlw	high _IR_POWER_OFF
 46245  017316  6E02               	movwf	i2memcmp@s1+1,c
 46246  017318  0E27               	movlw	low _IR_POWER_OFF
 46247  01731A  6E01               	movwf	i2memcmp@s1,c
 46248  01731C  0102               	movlb	2	; () banked
 46249  01731E  0E02               	movlw	high _s_irCode	;volatile
 46250  017320  6E04               	movwf	i2memcmp@s2+1,c
 46251  017322  0102               	movlb	2	; () banked
 46252  017324  0EAD               	movlw	low _s_irCode	;volatile
 46253  017326  6E03               	movwf	i2memcmp@s2,c
 46254  017328  0E00               	movlw	0
 46255  01732A  6E06               	movwf	i2memcmp@n+1,c
 46256  01732C  0E03               	movlw	3
 46257  01732E  6E05               	movwf	i2memcmp@n,c
 46258  017330  ECDB  F0D1         	call	i2_memcmp	;wreg free
 46259  017334  5002               	movf	?i2_memcmp+1,w,c
 46260  017336  1001               	iorwf	?i2_memcmp,w,c
 46261  017338  A4D8               	btfss	status,2,c
 46262  01733A  D003               	goto	i2l14532
 46263                           
 46264                           ;IR.c: 68: {
 46265                           ;IR.c: 69: LATDbits.LD0 = 0;
 46266  01733C  908C               	bcf	3980,0,c	;volatile
 46267                           
 46268                           ;IR.c: 70: LATBbits.LATB5 = 1;
 46269  01733E  8A8A               	bsf	3978,5,c	;volatile
 46270                           
 46271                           ;IR.c: 71: return;
 46272  017340  0012               	return	
 46273  017342                     i2l14532:
 46274                           
 46275                           ;IR.c: 72: }
 46276                           ;IR.c: 74: uint8_t delta = 0;
 46277  017342  0E00               	movlw	0
 46278  017344  0100               	movlb	0	; () banked
 46279  017346  6F97               	movwf	ProcessIRCode@delta& (0+255),b
 46280                           
 46281                           ; BSR set to: 0
 46282                           ;IR.c: 75: if (!memcmp(&IR_VOLUME_UP, &s_irCode, sizeof(IR_VOLUME_UP)))
 46283  017348  0EFF               	movlw	high _IR_VOLUME_UP
 46284  01734A  6E02               	movwf	i2memcmp@s1+1,c
 46285  01734C  0E23               	movlw	low _IR_VOLUME_UP
 46286  01734E  6E01               	movwf	i2memcmp@s1,c
 46287  017350  0102               	movlb	2	; () banked
 46288  017352  0E02               	movlw	high _s_irCode	;volatile
 46289  017354  6E04               	movwf	i2memcmp@s2+1,c
 46290  017356  0102               	movlb	2	; () banked
 46291  017358  0EAD               	movlw	low _s_irCode	;volatile
 46292  01735A  6E03               	movwf	i2memcmp@s2,c
 46293  01735C  0E00               	movlw	0
 46294  01735E  6E06               	movwf	i2memcmp@n+1,c
 46295  017360  0E04               	movlw	4
 46296  017362  6E05               	movwf	i2memcmp@n,c
 46297  017364  ECDB  F0D1         	call	i2_memcmp	;wreg free
 46298  017368  5002               	movf	?i2_memcmp+1,w,c
 46299  01736A  1001               	iorwf	?i2_memcmp,w,c
 46300  01736C  A4D8               	btfss	status,2,c
 46301  01736E  D004               	goto	i2l14538
 46302                           
 46303                           ;IR.c: 76: {
 46304                           ;IR.c: 77: delta = 1;
 46305  017370  0E01               	movlw	1
 46306  017372  0100               	movlb	0	; () banked
 46307  017374  6F97               	movwf	ProcessIRCode@delta& (0+255),b
 46308                           
 46309                           ;IR.c: 78: }
 46310  017376  D016               	goto	i2l14542
 46311  017378                     i2l14538:
 46312                           
 46313                           ;IR.c: 79: else if (!memcmp(&IR_VOLUME_DOWN, &s_irCode, sizeof(IR_VOLUME_DOWN)))
 46314  017378  0EFF               	movlw	high _IR_VOLUME_DOWN
 46315  01737A  6E02               	movwf	i2memcmp@s1+1,c
 46316  01737C  0E1F               	movlw	low _IR_VOLUME_DOWN
 46317  01737E  6E01               	movwf	i2memcmp@s1,c
 46318  017380  0102               	movlb	2	; () banked
 46319  017382  0E02               	movlw	high _s_irCode	;volatile
 46320  017384  6E04               	movwf	i2memcmp@s2+1,c
 46321  017386  0102               	movlb	2	; () banked
 46322  017388  0EAD               	movlw	low _s_irCode	;volatile
 46323  01738A  6E03               	movwf	i2memcmp@s2,c
 46324  01738C  0E00               	movlw	0
 46325  01738E  6E06               	movwf	i2memcmp@n+1,c
 46326  017390  0E04               	movlw	4
 46327  017392  6E05               	movwf	i2memcmp@n,c
 46328  017394  ECDB  F0D1         	call	i2_memcmp	;wreg free
 46329  017398  5002               	movf	?i2_memcmp+1,w,c
 46330  01739A  1001               	iorwf	?i2_memcmp,w,c
 46331  01739C  A4D8               	btfss	status,2,c
 46332  01739E  0012               	return	
 46333                           
 46334                           ;IR.c: 80: {
 46335                           ;IR.c: 81: delta = -1;
 46336  0173A0  0100               	movlb	0	; () banked
 46337  0173A2  6997               	setf	ProcessIRCode@delta& (0+255),b
 46338  0173A4                     i2l14542:
 46339                           
 46340                           ; BSR set to: 0
 46341                           ;IR.c: 86: }
 46342                           ;IR.c: 88: if (numTick - s_lastIRCodeReceived < 10000) delta <<= 3;
 46343  0173A4  0E10               	movlw	16
 46344  0173A6  0100               	movlb	0	; () banked
 46345  0173A8  6F87               	movwf	??_ProcessIRCode& (0+255),b
 46346  0173AA  0E27               	movlw	39
 46347  0173AC  6F88               	movwf	(??_ProcessIRCode+1)& (0+255),b
 46348  0173AE  0E00               	movlw	0
 46349  0173B0  6F89               	movwf	(??_ProcessIRCode+2)& (0+255),b
 46350  0173B2  0E00               	movlw	0
 46351  0173B4  6F8A               	movwf	(??_ProcessIRCode+3)& (0+255),b
 46352  0173B6  0100               	movlb	0	; () banked
 46353  0173B8  C0D9  F08B         	movff	_s_lastIRCodeReceived,??_ProcessIRCode+4
 46354  0173BC  0100               	movlb	0	; () banked
 46355  0173BE  C0DA  F08C         	movff	_s_lastIRCodeReceived+1,??_ProcessIRCode+5
 46356  0173C2  0100               	movlb	0	; () banked
 46357  0173C4  C0DB  F08D         	movff	_s_lastIRCodeReceived+2,??_ProcessIRCode+6
 46358  0173C8  0100               	movlb	0	; () banked
 46359  0173CA  C0DC  F08E         	movff	_s_lastIRCodeReceived+3,??_ProcessIRCode+7
 46360  0173CE  0100               	movlb	0	; () banked
 46361  0173D0  1F8B               	comf	(??_ProcessIRCode+4)& (0+255),f,b
 46362  0173D2  1F8C               	comf	(??_ProcessIRCode+5)& (0+255),f,b
 46363  0173D4  1F8D               	comf	(??_ProcessIRCode+6)& (0+255),f,b
 46364  0173D6  1F8E               	comf	(??_ProcessIRCode+7)& (0+255),f,b
 46365  0173D8  2B8B               	incf	(??_ProcessIRCode+4)& (0+255),f,b
 46366  0173DA  0E00               	movlw	0
 46367  0173DC  238C               	addwfc	(??_ProcessIRCode+5)& (0+255),f,b
 46368  0173DE  238D               	addwfc	(??_ProcessIRCode+6)& (0+255),f,b
 46369  0173E0  238E               	addwfc	(??_ProcessIRCode+7)& (0+255),f,b
 46370  0173E2  0100               	movlb	0	; () banked
 46371  0173E4  5193               	movf	ProcessIRCode@numTick& (0+255),w,b
 46372  0173E6  0100               	movlb	0	; () banked
 46373  0173E8  258B               	addwf	(??_ProcessIRCode+4)& (0+255),w,b
 46374  0173EA  0100               	movlb	0	; () banked
 46375  0173EC  6F8F               	movwf	(??_ProcessIRCode+8)& (0+255),b
 46376  0173EE  0100               	movlb	0	; () banked
 46377  0173F0  5194               	movf	(ProcessIRCode@numTick+1)& (0+255),w,b
 46378  0173F2  0100               	movlb	0	; () banked
 46379  0173F4  218C               	addwfc	(??_ProcessIRCode+5)& (0+255),w,b
 46380  0173F6  0100               	movlb	0	; () banked
 46381  0173F8  6F90               	movwf	(??_ProcessIRCode+9)& (0+255),b
 46382  0173FA  0100               	movlb	0	; () banked
 46383  0173FC  5195               	movf	(ProcessIRCode@numTick+2)& (0+255),w,b
 46384  0173FE  0100               	movlb	0	; () banked
 46385  017400  218D               	addwfc	(??_ProcessIRCode+6)& (0+255),w,b
 46386  017402  0100               	movlb	0	; () banked
 46387  017404  6F91               	movwf	(??_ProcessIRCode+10)& (0+255),b
 46388  017406  0100               	movlb	0	; () banked
 46389  017408  5196               	movf	(ProcessIRCode@numTick+3)& (0+255),w,b
 46390  01740A  0100               	movlb	0	; () banked
 46391  01740C  218E               	addwfc	(??_ProcessIRCode+7)& (0+255),w,b
 46392  01740E  0100               	movlb	0	; () banked
 46393  017410  6F92               	movwf	(??_ProcessIRCode+11)& (0+255),b
 46394  017412  0100               	movlb	0	; () banked
 46395  017414  5187               	movf	??_ProcessIRCode& (0+255),w,b
 46396  017416  0100               	movlb	0	; () banked
 46397  017418  5D8F               	subwf	(??_ProcessIRCode+8)& (0+255),w,b
 46398  01741A  0100               	movlb	0	; () banked
 46399  01741C  5188               	movf	(??_ProcessIRCode+1)& (0+255),w,b
 46400  01741E  0100               	movlb	0	; () banked
 46401  017420  5990               	subwfb	(??_ProcessIRCode+9)& (0+255),w,b
 46402  017422  0100               	movlb	0	; () banked
 46403  017424  5189               	movf	(??_ProcessIRCode+2)& (0+255),w,b
 46404  017426  0100               	movlb	0	; () banked
 46405  017428  5991               	subwfb	(??_ProcessIRCode+10)& (0+255),w,b
 46406  01742A  0100               	movlb	0	; () banked
 46407  01742C  518A               	movf	(??_ProcessIRCode+3)& (0+255),w,b
 46408  01742E  0100               	movlb	0	; () banked
 46409  017430  5992               	subwfb	(??_ProcessIRCode+11)& (0+255),w,b
 46410  017432  B0D8               	btfsc	status,0,c
 46411  017434  D007               	goto	i2l14546
 46412                           
 46413                           ; BSR set to: 0
 46414  017436  0100               	movlb	0	; () banked
 46415  017438  90D8               	bcf	status,0,c
 46416  01743A  3797               	rlcf	ProcessIRCode@delta& (0+255),f,b
 46417  01743C  90D8               	bcf	status,0,c
 46418  01743E  3797               	rlcf	ProcessIRCode@delta& (0+255),f,b
 46419  017440  90D8               	bcf	status,0,c
 46420  017442  3797               	rlcf	ProcessIRCode@delta& (0+255),f,b
 46421  017444                     i2l14546:
 46422                           
 46423                           ; BSR set to: 0
 46424                           ;IR.c: 89: ChangeMasterVolume(delta);
 46425  017444  0100               	movlb	0	; () banked
 46426  017446  5197               	movf	ProcessIRCode@delta& (0+255),w,b
 46427  017448  EC63  F0D9         	call	_ChangeMasterVolume
 46428                           
 46429                           ;IR.c: 90: s_lastIRCodeReceived = numTick;
 46430  01744C  C093  F0D9         	movff	ProcessIRCode@numTick,_s_lastIRCodeReceived
 46431  017450  C094  F0DA         	movff	ProcessIRCode@numTick+1,_s_lastIRCodeReceived+1
 46432  017454  C095  F0DB         	movff	ProcessIRCode@numTick+2,_s_lastIRCodeReceived+2
 46433  017458  C096  F0DC         	movff	ProcessIRCode@numTick+3,_s_lastIRCodeReceived+3
 46434  01745C  0012               	return	
 46435  01745E                     __end_of_ProcessIRCode:
 46436                           	opt stack 0
 46437                           pclatu	equ	0xFFB
 46438                           pclath	equ	0xFFA
 46439                           tblptru	equ	0xFF8
 46440                           tblptrh	equ	0xFF7
 46441                           tblptrl	equ	0xFF6
 46442                           tablat	equ	0xFF5
 46443                           prodh	equ	0xFF4
 46444                           prodl	equ	0xFF3
 46445                           intcon	equ	0xFF2
 46446                           intcon2	equ	0xFF1
 46447                           intcon3	equ	0xFF0
 46448                           indf0	equ	0xFEF
 46449                           postinc0	equ	0xFEE
 46450                           fsr0h	equ	0xFEA
 46451                           fsr0l	equ	0xFE9
 46452                           wreg	equ	0xFE8
 46453                           indf1	equ	0xFE7
 46454                           postinc1	equ	0xFE6
 46455                           postdec1	equ	0xFE5
 46456                           fsr1h	equ	0xFE2
 46457                           fsr1l	equ	0xFE1
 46458                           indf2	equ	0xFDF
 46459                           postinc2	equ	0xFDE
 46460                           postdec2	equ	0xFDD
 46461                           fsr2h	equ	0xFDA
 46462                           fsr2l	equ	0xFD9
 46463                           status	equ	0xFD8
 46464                           
 46465 ;; *************** function i2_memcmp *****************
 46466 ;; Defined at:
 46467 ;;		line 3 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcmp.c"
 46468 ;; Parameters:    Size  Location     Type
 46469 ;;  s1              2    0[COMRAM] PTR const void 
 46470 ;;		 -> IR_VOLUME_DOWN(4), IR_VOLUME_UP(4), IR_POWER_OFF(3), IR_POWER_ON(3), 
 46471 ;;		 -> s_dacSettingsOriginal(20), s_dacSettingsTmp(20), 
 46472 ;;  s2              2    2[COMRAM] PTR const void 
 46473 ;;		 -> s_irCode(16), s_dacSettings(20), 
 46474 ;;  n               2    4[COMRAM] unsigned int 
 46475 ;; Auto vars:     Size  Location     Type
 46476 ;;		None
 46477 ;; Return value:  Size  Location     Type
 46478 ;;                  2    0[COMRAM] int 
 46479 ;; Registers used:
 46480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 46481 ;; Tracked objects:
 46482 ;;		On entry : 0/0
 46483 ;;		On exit  : 0/0
 46484 ;;		Unchanged: 0/0
 46485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46486 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46488 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46489 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46490 ;;Total ram usage:        9 bytes
 46491 ;; Hardware stack levels used:    1
 46492 ;; This function calls:
 46493 ;;		Nothing
 46494 ;; This function is called by:
 46495 ;;		_ProcessIRCode
 46496 ;;		i2_SaveToFlash
 46497 ;; This function uses a non-reentrant model
 46498 ;;
 46499                           
 46500                           	psect	text135
 46501  01A3B6                     __ptext135:
 46502                           	opt stack 0
 46503  01A3B6                     i2_memcmp:
 46504                           	opt stack 19
 46505                           
 46506                           ;incstack = 0
 46507  01A3B6  D042               	goto	i2l13738
 46508  01A3B8                     i2l13730:
 46509  01A3B8  C003  FFD9         	movff	i2memcmp@s2,fsr2l
 46510  01A3BC  C004  FFDA         	movff	i2memcmp@s2+1,fsr2h
 46511  01A3C0  50DF               	movf	indf2,w,c
 46512  01A3C2  6E07               	movwf	??i2_memcmp& (0+255),c
 46513  01A3C4  C001  FFF6         	movff	i2memcmp@s1,tblptrl
 46514  01A3C8  C002  FFF7         	movff	i2memcmp@s1+1,tblptrh
 46515  01A3CC  0E00               	movlw	low (__mediumconst shr (0+16))
 46516  01A3CE  6EF8               	movwf	tblptru,c
 46517  01A3D0  0E0F               	movlw	(high __ramtop+-1)
 46518  01A3D2  64F7               	cpfsgt	tblptrh,c
 46519  01A3D4  D003               	bra	i2u1577_47
 46520  01A3D6  0008               	tblrd		*
 46521  01A3D8  50F5               	movf	tablat,w,c
 46522  01A3DA  D005               	bra	i2u1577_40
 46523  01A3DC                     i2u1577_47:
 46524  01A3DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 46525  01A3E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 46526  01A3E4  50EF               	movf	indf0,w,c
 46527  01A3E6                     i2u1577_40:
 46528  01A3E6  1807               	xorwf	??i2_memcmp,w,c
 46529  01A3E8  B4D8               	btfsc	status,2,c
 46530  01A3EA  D024               	goto	i2l13736
 46531  01A3EC  C003  FFD9         	movff	i2memcmp@s2,fsr2l
 46532  01A3F0  C004  FFDA         	movff	i2memcmp@s2+1,fsr2h
 46533  01A3F4  50DF               	movf	indf2,w,c
 46534  01A3F6  6E07               	movwf	??i2_memcmp& (0+255),c
 46535  01A3F8  6A08               	clrf	(??i2_memcmp+1)& (0+255),c
 46536  01A3FA  1E07               	comf	??i2_memcmp,f,c
 46537  01A3FC  1E08               	comf	??i2_memcmp+1,f,c
 46538  01A3FE  4A07               	infsnz	??i2_memcmp,f,c
 46539  01A400  2A08               	incf	??i2_memcmp+1,f,c
 46540  01A402  C001  FFF6         	movff	i2memcmp@s1,tblptrl
 46541  01A406  C002  FFF7         	movff	i2memcmp@s1+1,tblptrh
 46542  01A40A  0E00               	movlw	low (__mediumconst shr (0+16))
 46543  01A40C  6EF8               	movwf	tblptru,c
 46544  01A40E  0E0F               	movlw	(high __ramtop+-1)
 46545  01A410  64F7               	cpfsgt	tblptrh,c
 46546  01A412  D003               	bra	i2u1579_47
 46547  01A414  0008               	tblrd		*
 46548  01A416  50F5               	movf	tablat,w,c
 46549  01A418  D005               	bra	i2u1579_40
 46550  01A41A                     i2u1579_47:
 46551  01A41A  CFF6 FFE9          	movff	tblptrl,fsr0l
 46552  01A41E  CFF7 FFEA          	movff	tblptrh,fsr0h
 46553  01A422  50EF               	movf	indf0,w,c
 46554  01A424                     i2u1579_40:
 46555  01A424  6E09               	movwf	(??i2_memcmp+2)& (0+255),c
 46556  01A426  5009               	movf	??i2_memcmp+2,w,c
 46557  01A428  2407               	addwf	??i2_memcmp,w,c
 46558  01A42A  6E01               	movwf	?i2_memcmp,c
 46559  01A42C  0E00               	movlw	0
 46560  01A42E  2008               	addwfc	??i2_memcmp+1,w,c
 46561  01A430  6E02               	movwf	?i2_memcmp+1,c
 46562  01A432  0012               	return	
 46563  01A434                     i2l13736:
 46564  01A434  4A01               	infsnz	i2memcmp@s1,f,c
 46565  01A436  2A02               	incf	i2memcmp@s1+1,f,c
 46566  01A438  4A03               	infsnz	i2memcmp@s2,f,c
 46567  01A43A  2A04               	incf	i2memcmp@s2+1,f,c
 46568  01A43C                     i2l13738:
 46569  01A43C  0605               	decf	i2memcmp@n,f,c
 46570  01A43E  A0D8               	btfss	status,0,c
 46571  01A440  0606               	decf	i2memcmp@n+1,f,c
 46572  01A442  2805               	incf	i2memcmp@n& (0+255),w,c
 46573  01A444  B4D8               	btfsc	status,2,c
 46574  01A446  2806               	incf	(i2memcmp@n+1)& (0+255),w,c
 46575  01A448  A4D8               	btfss	status,2,c
 46576  01A44A  D7B6               	goto	i2l13730
 46577  01A44C  0E00               	movlw	0
 46578  01A44E  6E02               	movwf	?i2_memcmp+1,c
 46579  01A450  0E00               	movlw	0
 46580  01A452  6E01               	movwf	?i2_memcmp,c
 46581  01A454  0012               	return	
 46582  01A456                     __end_ofi2_memcmp:
 46583                           	opt stack 0
 46584                           pclatu	equ	0xFFB
 46585                           pclath	equ	0xFFA
 46586                           tblptru	equ	0xFF8
 46587                           tblptrh	equ	0xFF7
 46588                           tblptrl	equ	0xFF6
 46589                           tablat	equ	0xFF5
 46590                           prodh	equ	0xFF4
 46591                           prodl	equ	0xFF3
 46592                           intcon	equ	0xFF2
 46593                           intcon2	equ	0xFF1
 46594                           intcon3	equ	0xFF0
 46595                           indf0	equ	0xFEF
 46596                           postinc0	equ	0xFEE
 46597                           fsr0h	equ	0xFEA
 46598                           fsr0l	equ	0xFE9
 46599                           wreg	equ	0xFE8
 46600                           indf1	equ	0xFE7
 46601                           postinc1	equ	0xFE6
 46602                           postdec1	equ	0xFE5
 46603                           fsr1h	equ	0xFE2
 46604                           fsr1l	equ	0xFE1
 46605                           indf2	equ	0xFDF
 46606                           postinc2	equ	0xFDE
 46607                           postdec2	equ	0xFDD
 46608                           fsr2h	equ	0xFDA
 46609                           fsr2l	equ	0xFD9
 46610                           status	equ	0xFD8
 46611                           
 46612 ;; *************** function i2_TickGet *****************
 46613 ;; Defined at:
 46614 ;;		line 254 in file "../tcpip/tick.c"
 46615 ;; Parameters:    Size  Location     Type
 46616 ;;		None
 46617 ;; Auto vars:     Size  Location     Type
 46618 ;;  TickGet         4    4[COMRAM] unsigned long 
 46619 ;; Return value:  Size  Location     Type
 46620 ;;                  4    0[COMRAM] unsigned long 
 46621 ;; Registers used:
 46622 ;;		fsr2l, fsr2h, cstack
 46623 ;; Tracked objects:
 46624 ;;		On entry : 0/0
 46625 ;;		On exit  : 0/0
 46626 ;;		Unchanged: 0/0
 46627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46629 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46631 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46632 ;;Total ram usage:        8 bytes
 46633 ;; Hardware stack levels used:    1
 46634 ;; Hardware stack levels required when called:    1
 46635 ;; This function calls:
 46636 ;;		i2_GetTickCopy
 46637 ;; This function is called by:
 46638 ;;		_ISRLP
 46639 ;;		_ProcessIRCode
 46640 ;;		_ProcessIRInt
 46641 ;; This function uses a non-reentrant model
 46642 ;;
 46643                           
 46644                           	psect	text136
 46645  01B6E0                     __ptext136:
 46646                           	opt stack 0
 46647  01B6E0                     i2_TickGet:
 46648                           	opt stack 19
 46649                           
 46650                           ;tick.c: 256: uint32_t dw;
 46651                           ;tick.c: 258: GetTickCopy();
 46652                           
 46653                           ;incstack = 0
 46654  01B6E0  EC5F  F0DA         	call	i2_GetTickCopy	;wreg free
 46655                           
 46656                           ;tick.c: 259: ((uint8_t*)&dw)[0] = vTickReading[0];
 46657  01B6E4  C0C7  F005         	movff	_vTickReading,i2TickGet@dw	;volatile
 46658                           
 46659                           ;tick.c: 260: ((uint8_t*)&dw)[1] = vTickReading[1];
 46660  01B6E8  C0C8  F006         	movff	_vTickReading+1,i2TickGet@dw+1	;volatile
 46661                           
 46662                           ;tick.c: 261: ((uint8_t*)&dw)[2] = vTickReading[2];
 46663  01B6EC  C0C9  F007         	movff	_vTickReading+2,i2TickGet@dw+2	;volatile
 46664                           
 46665                           ;tick.c: 262: ((uint8_t*)&dw)[3] = vTickReading[3];
 46666  01B6F0  C0CA  F008         	movff	_vTickReading+3,i2TickGet@dw+3	;volatile
 46667                           
 46668                           ;tick.c: 263: return dw;
 46669  01B6F4  C005  F001         	movff	i2TickGet@dw,?i2_TickGet
 46670  01B6F8  C006  F002         	movff	i2TickGet@dw+1,?i2_TickGet+1
 46671  01B6FC  C007  F003         	movff	i2TickGet@dw+2,?i2_TickGet+2
 46672  01B700  C008  F004         	movff	i2TickGet@dw+3,?i2_TickGet+3
 46673  01B704  0012               	return	
 46674  01B706                     __end_ofi2_TickGet:
 46675                           	opt stack 0
 46676                           pclatu	equ	0xFFB
 46677                           pclath	equ	0xFFA
 46678                           tblptru	equ	0xFF8
 46679                           tblptrh	equ	0xFF7
 46680                           tblptrl	equ	0xFF6
 46681                           tablat	equ	0xFF5
 46682                           prodh	equ	0xFF4
 46683                           prodl	equ	0xFF3
 46684                           intcon	equ	0xFF2
 46685                           intcon2	equ	0xFF1
 46686                           intcon3	equ	0xFF0
 46687                           indf0	equ	0xFEF
 46688                           postinc0	equ	0xFEE
 46689                           fsr0h	equ	0xFEA
 46690                           fsr0l	equ	0xFE9
 46691                           wreg	equ	0xFE8
 46692                           indf1	equ	0xFE7
 46693                           postinc1	equ	0xFE6
 46694                           postdec1	equ	0xFE5
 46695                           fsr1h	equ	0xFE2
 46696                           fsr1l	equ	0xFE1
 46697                           indf2	equ	0xFDF
 46698                           postinc2	equ	0xFDE
 46699                           postdec2	equ	0xFDD
 46700                           fsr2h	equ	0xFDA
 46701                           fsr2l	equ	0xFD9
 46702                           status	equ	0xFD8
 46703                           
 46704 ;; *************** function i2_GetTickCopy *****************
 46705 ;; Defined at:
 46706 ;;		line 140 in file "../tcpip/tick.c"
 46707 ;; Parameters:    Size  Location     Type
 46708 ;;		None
 46709 ;; Auto vars:     Size  Location     Type
 46710 ;;		None
 46711 ;; Return value:  Size  Location     Type
 46712 ;;		None               void
 46713 ;; Registers used:
 46714 ;;		fsr2l, fsr2h
 46715 ;; Tracked objects:
 46716 ;;		On entry : 0/0
 46717 ;;		On exit  : 0/0
 46718 ;;		Unchanged: 0/0
 46719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46724 ;;Total ram usage:        0 bytes
 46725 ;; Hardware stack levels used:    1
 46726 ;; This function calls:
 46727 ;;		Nothing
 46728 ;; This function is called by:
 46729 ;;		i2_TickGet
 46730 ;; This function uses a non-reentrant model
 46731 ;;
 46732                           
 46733                           	psect	text137
 46734  01B4BE                     __ptext137:
 46735                           	opt stack 0
 46736  01B4BE                     i2_GetTickCopy:
 46737                           	opt stack 19
 46738  01B4BE                     i2l1506:
 46739                           
 46740                           ;tick.c: 146: {
 46741                           ;tick.c: 147: INTCONbits.TMR0IE = 1;
 46742  01B4BE  8AF2               	bsf	intcon,5,c	;volatile
 46743                           
 46744                           ;tick.c: 148: __nop();
 46745  01B4C0  F000               	nop	
 46746                           
 46747                           ;tick.c: 149: INTCONbits.TMR0IE = 0;
 46748  01B4C2  9AF2               	bcf	intcon,5,c	;volatile
 46749                           
 46750                           ;tick.c: 150: vTickReading[0] = TMR0L;
 46751  01B4C4  CFD6 F0C7          	movff	4054,_vTickReading	;volatile
 46752                           
 46753                           ;tick.c: 151: vTickReading[1] = TMR0H;
 46754  01B4C8  CFD7 F0C8          	movff	4055,_vTickReading+1	;volatile
 46755                           
 46756                           ;tick.c: 152: *((uint32_t*)&vTickReading[2]) = dwInternalTicks;
 46757  01B4CC  0100               	movlb	0	; () banked
 46758  01B4CE  EE20  F0C9         	lfsr	2,_vTickReading+2	;volatile
 46759  01B4D2  0100               	movlb	0	; () banked
 46760  01B4D4  C0D1  FFDE         	movff	_dwInternalTicks,postinc2	;volatile
 46761  01B4D8  0100               	movlb	0	; () banked
 46762  01B4DA  C0D2  FFDE         	movff	_dwInternalTicks+1,postinc2	;volatile
 46763  01B4DE  0100               	movlb	0	; () banked
 46764  01B4E0  C0D3  FFDE         	movff	_dwInternalTicks+2,postinc2	;volatile
 46765  01B4E4  0100               	movlb	0	; () banked
 46766  01B4E6  C0D4  FFDE         	movff	_dwInternalTicks+3,postinc2	;volatile
 46767                           
 46768                           ; BSR set to: 0
 46769                           ;tick.c: 153: } while(INTCONbits.TMR0IF);
 46770  01B4EA  B4F2               	btfsc	intcon,2,c	;volatile
 46771  01B4EC  D7E8               	goto	i2l1506
 46772                           
 46773                           ; BSR set to: 0
 46774                           ;tick.c: 154: INTCONbits.TMR0IE = 1;
 46775  01B4EE  8AF2               	bsf	intcon,5,c	;volatile
 46776                           
 46777                           ; BSR set to: 0
 46778  01B4F0  0012               	return	
 46779  01B4F2                     __end_ofi2_GetTickCopy:
 46780                           	opt stack 0
 46781                           pclatu	equ	0xFFB
 46782                           pclath	equ	0xFFA
 46783                           tblptru	equ	0xFF8
 46784                           tblptrh	equ	0xFF7
 46785                           tblptrl	equ	0xFF6
 46786                           tablat	equ	0xFF5
 46787                           prodh	equ	0xFF4
 46788                           prodl	equ	0xFF3
 46789                           intcon	equ	0xFF2
 46790                           intcon2	equ	0xFF1
 46791                           intcon3	equ	0xFF0
 46792                           indf0	equ	0xFEF
 46793                           postinc0	equ	0xFEE
 46794                           fsr0h	equ	0xFEA
 46795                           fsr0l	equ	0xFE9
 46796                           wreg	equ	0xFE8
 46797                           indf1	equ	0xFE7
 46798                           postinc1	equ	0xFE6
 46799                           postdec1	equ	0xFE5
 46800                           fsr1h	equ	0xFE2
 46801                           fsr1l	equ	0xFE1
 46802                           indf2	equ	0xFDF
 46803                           postinc2	equ	0xFDE
 46804                           postdec2	equ	0xFDD
 46805                           fsr2h	equ	0xFDA
 46806                           fsr2l	equ	0xFD9
 46807                           status	equ	0xFD8
 46808                           
 46809 ;; *************** function _ChangeMasterVolume *****************
 46810 ;; Defined at:
 46811 ;;		line 173 in file "Device.c"
 46812 ;; Parameters:    Size  Location     Type
 46813 ;;  d               1    wreg     char 
 46814 ;; Auto vars:     Size  Location     Type
 46815 ;;  d               1   93[COMRAM] char 
 46816 ;;  prev            1   92[COMRAM] unsigned char 
 46817 ;; Return value:  Size  Location     Type
 46818 ;;		None               void
 46819 ;; Registers used:
 46820 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46821 ;; Tracked objects:
 46822 ;;		On entry : 0/0
 46823 ;;		On exit  : 0/0
 46824 ;;		Unchanged: 0/0
 46825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46830 ;;Total ram usage:        2 bytes
 46831 ;; Hardware stack levels used:    1
 46832 ;; Hardware stack levels required when called:    6
 46833 ;; This function calls:
 46834 ;;		i2_UpdateMasterVolume
 46835 ;; This function is called by:
 46836 ;;		_ISRLP
 46837 ;;		_ProcessIRCode
 46838 ;; This function uses a non-reentrant model
 46839 ;;
 46840                           
 46841                           	psect	text138
 46842  01B2C6                     __ptext138:
 46843                           	opt stack 0
 46844  01B2C6                     _ChangeMasterVolume:
 46845                           	opt stack 12
 46846                           
 46847                           ; BSR set to: 0
 46848                           ;incstack = 0
 46849                           ;ChangeMasterVolume@d stored from wreg
 46850  01B2C6  6E5E               	movwf	ChangeMasterVolume@d,c
 46851                           
 46852                           ;Device.c: 175: uint8_t prev = s_dacSettings.Volume;
 46853  01B2C8  C2D5  F05D         	movff	_s_dacSettings+2,ChangeMasterVolume@prev
 46854                           
 46855                           ;Device.c: 176: s_dacSettings.Volume += d;
 46856  01B2CC  505E               	movf	ChangeMasterVolume@d,w,c
 46857  01B2CE  0102               	movlb	2	; () banked
 46858  01B2D0  27D5               	addwf	(_s_dacSettings+2)& (0+255),f,b
 46859                           
 46860                           ; BSR set to: 2
 46861                           ;Device.c: 177: if (d < 0 && prev < s_dacSettings.Volume) s_dacSettings.Volume = 0;
 46862  01B2D2  AE5E               	btfss	ChangeMasterVolume@d,7,c
 46863  01B2D4  D008               	goto	i2l13216
 46864                           
 46865                           ; BSR set to: 2
 46866  01B2D6  0102               	movlb	2	; () banked
 46867  01B2D8  51D5               	movf	(_s_dacSettings+2)& (0+255),w,b
 46868  01B2DA  5C5D               	subwf	ChangeMasterVolume@prev,w,c
 46869  01B2DC  B0D8               	btfsc	status,0,c
 46870  01B2DE  D003               	goto	i2l13216
 46871                           
 46872                           ; BSR set to: 2
 46873  01B2E0  0E00               	movlw	0
 46874  01B2E2  0102               	movlb	2	; () banked
 46875  01B2E4  6FD5               	movwf	(_s_dacSettings+2)& (0+255),b
 46876  01B2E6                     i2l13216:
 46877                           
 46878                           ; BSR set to: 2
 46879                           ;Device.c: 178: if (d > 0 && prev > s_dacSettings.Volume) s_dacSettings.Volume = 0xFF;
 46880  01B2E6  505E               	movf	ChangeMasterVolume@d,w,c
 46881  01B2E8  0A80               	xorlw	128
 46882  01B2EA  0F7F               	addlw	-129
 46883  01B2EC  A0D8               	btfss	status,0,c
 46884  01B2EE  D007               	goto	i2l13222
 46885                           
 46886                           ; BSR set to: 2
 46887  01B2F0  505D               	movf	ChangeMasterVolume@prev,w,c
 46888  01B2F2  0102               	movlb	2	; () banked
 46889  01B2F4  5DD5               	subwf	(_s_dacSettings+2)& (0+255),w,b
 46890  01B2F6  B0D8               	btfsc	status,0,c
 46891  01B2F8  D002               	goto	i2l13222
 46892                           
 46893                           ; BSR set to: 2
 46894  01B2FA  0102               	movlb	2	; () banked
 46895  01B2FC  69D5               	setf	(_s_dacSettings+2)& (0+255),b
 46896  01B2FE                     i2l13222:
 46897                           
 46898                           ; BSR set to: 2
 46899                           ;Device.c: 180: UpdateMasterVolume();
 46900  01B2FE  EC2B  F0D2         	call	i2_UpdateMasterVolume	;wreg free
 46901  01B302  0012               	return	
 46902  01B304                     __end_of_ChangeMasterVolume:
 46903                           	opt stack 0
 46904                           pclatu	equ	0xFFB
 46905                           pclath	equ	0xFFA
 46906                           tblptru	equ	0xFF8
 46907                           tblptrh	equ	0xFF7
 46908                           tblptrl	equ	0xFF6
 46909                           tablat	equ	0xFF5
 46910                           prodh	equ	0xFF4
 46911                           prodl	equ	0xFF3
 46912                           intcon	equ	0xFF2
 46913                           intcon2	equ	0xFF1
 46914                           intcon3	equ	0xFF0
 46915                           indf0	equ	0xFEF
 46916                           postinc0	equ	0xFEE
 46917                           fsr0h	equ	0xFEA
 46918                           fsr0l	equ	0xFE9
 46919                           wreg	equ	0xFE8
 46920                           indf1	equ	0xFE7
 46921                           postinc1	equ	0xFE6
 46922                           postdec1	equ	0xFE5
 46923                           fsr1h	equ	0xFE2
 46924                           fsr1l	equ	0xFE1
 46925                           indf2	equ	0xFDF
 46926                           postinc2	equ	0xFDE
 46927                           postdec2	equ	0xFDD
 46928                           fsr2h	equ	0xFDA
 46929                           fsr2l	equ	0xFD9
 46930                           status	equ	0xFD8
 46931                           
 46932 ;; *************** function i2_UpdateMasterVolume *****************
 46933 ;; Defined at:
 46934 ;;		line 161 in file "Device.c"
 46935 ;; Parameters:    Size  Location     Type
 46936 ;;		None
 46937 ;; Auto vars:     Size  Location     Type
 46938 ;;  UpdateMaster    3   88[COMRAM] unsigned char 
 46939 ;;  UpdateMaster    1   91[COMRAM] unsigned char 
 46940 ;; Return value:  Size  Location     Type
 46941 ;;		None               void
 46942 ;; Registers used:
 46943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46944 ;; Tracked objects:
 46945 ;;		On entry : 0/0
 46946 ;;		On exit  : 0/0
 46947 ;;		Unchanged: 0/0
 46948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46950 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46953 ;;Total ram usage:        6 bytes
 46954 ;; Hardware stack levels used:    1
 46955 ;; Hardware stack levels required when called:    5
 46956 ;; This function calls:
 46957 ;;		i2_RefreshLine1
 46958 ;;		i2_SendVolumeToDevice
 46959 ;;		i2___awtoft
 46960 ;;		i2___ftdiv
 46961 ;;		i2_sprintf
 46962 ;; This function is called by:
 46963 ;;		_ChangeMasterVolume
 46964 ;; This function uses a non-reentrant model
 46965 ;;
 46966                           
 46967                           	psect	text139
 46968  01A456                     __ptext139:
 46969                           	opt stack 0
 46970  01A456                     i2_UpdateMasterVolume:
 46971                           	opt stack 12
 46972                           
 46973                           ;Device.c: 163: double dvol = -s_dacSettings.Volume / 8.0;
 46974                           
 46975                           ;incstack = 0
 46976  01A456  0102               	movlb	2	; () banked
 46977  01A458  51D5               	movf	(_s_dacSettings+2)& (0+255),w,b
 46978  01A45A  6E57               	movwf	??i2_UpdateMasterVolume& (0+255),c
 46979  01A45C  6A58               	clrf	(??i2_UpdateMasterVolume+1)& (0+255),c
 46980  01A45E  1E57               	comf	??i2_UpdateMasterVolume,f,c
 46981  01A460  1E58               	comf	??i2_UpdateMasterVolume+1,f,c
 46982  01A462  4A57               	infsnz	??i2_UpdateMasterVolume,f,c
 46983  01A464  2A58               	incf	??i2_UpdateMasterVolume+1,f,c
 46984  01A466  C057  F009         	movff	??i2_UpdateMasterVolume,i2___awtoft@c
 46985  01A46A  C058  F00A         	movff	??i2_UpdateMasterVolume+1,i2___awtoft@c+1
 46986  01A46E  EC99  F0D8         	call	i2___awtoft	;wreg free
 46987  01A472  C009  F00D         	movff	?i2___awtoft,i2___ftdiv@f1
 46988  01A476  C00A  F00E         	movff	?i2___awtoft+1,i2___ftdiv@f1+1
 46989  01A47A  C00B  F00F         	movff	?i2___awtoft+2,i2___ftdiv@f1+2
 46990  01A47E  0E00               	movlw	0
 46991  01A480  6E10               	movwf	i2___ftdiv@f2,c
 46992  01A482  0E00               	movlw	0
 46993  01A484  6E11               	movwf	i2___ftdiv@f2+1,c
 46994  01A486  0E41               	movlw	65
 46995  01A488  6E12               	movwf	i2___ftdiv@f2+2,c
 46996  01A48A  EC40  F0CA         	call	i2___ftdiv	;wreg free
 46997  01A48E  C00D  F059         	movff	?i2___ftdiv,i2UpdateMasterVolume@dvol
 46998  01A492  C00E  F05A         	movff	?i2___ftdiv+1,i2UpdateMasterVolume@dvol+1
 46999  01A496  C00F  F05B         	movff	?i2___ftdiv+2,i2UpdateMasterVolume@dvol+2
 47000                           
 47001                           ;Device.c: 165: uint8_t i = sprintf( &dispbuf1, "Volume %7.3fdB", dvol);
 47002  01A49A  0102               	movlb	2	; () banked
 47003  01A49C  0E02               	movlw	high _dispbuf1
 47004  01A49E  6E4A               	movwf	i2sprintf@sp+1,c
 47005  01A4A0  0102               	movlb	2	; () banked
 47006  01A4A2  0E8B               	movlw	low _dispbuf1
 47007  01A4A4  6E49               	movwf	i2sprintf@sp,c
 47008  01A4A6  0EFF               	movlw	high STR_7
 47009  01A4A8  6E4C               	movwf	i2sprintf@f+1,c
 47010  01A4AA  0EE8               	movlw	low STR_7
 47011  01A4AC  6E4B               	movwf	i2sprintf@f,c
 47012  01A4AE  C059  F04D         	movff	i2UpdateMasterVolume@dvol,?i2_sprintf+4
 47013  01A4B2  C05A  F04E         	movff	i2UpdateMasterVolume@dvol+1,?i2_sprintf+5
 47014  01A4B6  C05B  F04F         	movff	i2UpdateMasterVolume@dvol+2,?i2_sprintf+6
 47015  01A4BA  EC7C  F091         	call	i2_sprintf	;wreg free
 47016  01A4BE  5049               	movf	?i2_sprintf,w,c
 47017  01A4C0  6E5C               	movwf	i2UpdateMasterVolume@i,c
 47018  01A4C2  D00D               	goto	L48
 47019  01A4C4                     i2l12296:
 47020  01A4C4  505C               	movf	i2UpdateMasterVolume@i,w,c
 47021  01A4C6  0D01               	mullw	1
 47022  01A4C8  0102               	movlb	2	; () banked
 47023  01A4CA  0E8B               	movlw	low _dispbuf1
 47024  01A4CC  24F3               	addwf	prodl,w,c
 47025  01A4CE  6ED9               	movwf	fsr2l,c
 47026  01A4D0  0102               	movlb	2	; () banked
 47027  01A4D2  0E02               	movlw	high _dispbuf1
 47028  01A4D4  20F4               	addwfc	prodh,w,c
 47029  01A4D6  6EDA               	movwf	fsr2h,c
 47030  01A4D8  0E20               	movlw	32
 47031  01A4DA  6EDF               	movwf	indf2,c
 47032                           
 47033                           ; BSR set to: 2
 47034  01A4DC  2A5C               	incf	i2UpdateMasterVolume@i,f,c
 47035  01A4DE                     L48:
 47036                           
 47037                           ; BSR set to: 2
 47038  01A4DE  0E0F               	movlw	15
 47039  01A4E0  645C               	cpfsgt	i2UpdateMasterVolume@i,c
 47040  01A4E2  D7F0               	goto	i2l12296
 47041                           
 47042                           ;Device.c: 167: dispbuf1[16] = 0;
 47043                           
 47044                           ; BSR set to: 2
 47045  01A4E4  0E00               	movlw	0
 47046  01A4E6  0102               	movlb	2	; () banked
 47047  01A4E8  6F9B               	movwf	(_dispbuf1+16)& (0+255),b
 47048                           
 47049                           ; BSR set to: 2
 47050                           ;Device.c: 168: RefreshLine1();
 47051  01A4EA  EC10  F0DD         	call	i2_RefreshLine1	;wreg free
 47052                           
 47053                           ;Device.c: 170: SendVolumeToDevice();
 47054  01A4EE  ECB6  F0DC         	call	i2_SendVolumeToDevice	;wreg free
 47055  01A4F2  0012               	return	
 47056  01A4F4                     __end_ofi2_UpdateMasterVolume:
 47057                           	opt stack 0
 47058                           pclatu	equ	0xFFB
 47059                           pclath	equ	0xFFA
 47060                           tblptru	equ	0xFF8
 47061                           tblptrh	equ	0xFF7
 47062                           tblptrl	equ	0xFF6
 47063                           tablat	equ	0xFF5
 47064                           prodh	equ	0xFF4
 47065                           prodl	equ	0xFF3
 47066                           intcon	equ	0xFF2
 47067                           intcon2	equ	0xFF1
 47068                           intcon3	equ	0xFF0
 47069                           indf0	equ	0xFEF
 47070                           postinc0	equ	0xFEE
 47071                           fsr0h	equ	0xFEA
 47072                           fsr0l	equ	0xFE9
 47073                           wreg	equ	0xFE8
 47074                           indf1	equ	0xFE7
 47075                           postinc1	equ	0xFE6
 47076                           postdec1	equ	0xFE5
 47077                           fsr1h	equ	0xFE2
 47078                           fsr1l	equ	0xFE1
 47079                           indf2	equ	0xFDF
 47080                           postinc2	equ	0xFDE
 47081                           postdec2	equ	0xFDD
 47082                           fsr2h	equ	0xFDA
 47083                           fsr2l	equ	0xFD9
 47084                           status	equ	0xFD8
 47085                           
 47086 ;; *************** function i2_sprintf *****************
 47087 ;; Defined at:
 47088 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 47089 ;; Parameters:    Size  Location     Type
 47090 ;;  sp              2   72[COMRAM] PTR unsigned char 
 47091 ;;		 -> dispbuf1(17), 
 47092 ;;  f               2   74[COMRAM] PTR const unsigned char 
 47093 ;;		 -> STR_7(15), 
 47094 ;; Auto vars:     Size  Location     Type
 47095 ;;  sprintf         5   22[BANK0 ] struct .
 47096 ;;  sprintf         4   13[BANK0 ] unsigned long 
 47097 ;;  sprintf         4    9[BANK0 ] unsigned long 
 47098 ;;  sprintf         3   33[BANK0 ] unsigned long 
 47099 ;;  sprintf         3   19[BANK0 ] unsigned long 
 47100 ;;  sprintf         3    0        unsigned long 
 47101 ;;  sprintf         2   36[BANK0 ] int 
 47102 ;;  sprintf         2   31[BANK0 ] int 
 47103 ;;  sprintf         2   29[BANK0 ] int 
 47104 ;;  sprintf         2   27[BANK0 ] unsigned short 
 47105 ;;  sprintf         2   17[BANK0 ] int 
 47106 ;;  sprintf         2    7[BANK0 ] PTR void [1]
 47107 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 47108 ;;  sprintf         1   38[BANK0 ] char 
 47109 ;;  sprintf         1    0        unsigned char 
 47110 ;; Return value:  Size  Location     Type
 47111 ;;                  2   72[COMRAM] int 
 47112 ;; Registers used:
 47113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47114 ;; Tracked objects:
 47115 ;;		On entry : 0/0
 47116 ;;		On exit  : 0/0
 47117 ;;		Unchanged: 0/0
 47118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47119 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47120 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47121 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47122 ;;      Totals:        13      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47123 ;;Total ram usage:       52 bytes
 47124 ;; Hardware stack levels used:    1
 47125 ;; Hardware stack levels required when called:    3
 47126 ;; This function calls:
 47127 ;;		i2___awdiv
 47128 ;;		i2___ftadd
 47129 ;;		i2___ftge
 47130 ;;		i2___ftmul
 47131 ;;		i2___ftneg
 47132 ;;		i2___ftsub
 47133 ;;		i2___fttol
 47134 ;;		i2___lldiv
 47135 ;;		i2___llmod
 47136 ;;		i2___lltoft
 47137 ;;		i2___wmul
 47138 ;;		i2__div_to_l_
 47139 ;;		i2__tdiv_to_l_
 47140 ;;		i2_fround
 47141 ;;		i2_isdigit
 47142 ;;		i2_scale
 47143 ;; This function is called by:
 47144 ;;		i2_UpdateMasterVolume
 47145 ;; This function uses a non-reentrant model
 47146 ;;
 47147                           
 47148                           	psect	text140
 47149  0122F8                     __ptext140:
 47150                           	opt stack 0
 47151  0122F8                     i2_sprintf:
 47152                           	opt stack 13
 47153                           
 47154                           ;doprnt.c: 494: va_list ap;
 47155                           ;doprnt.c: 499: signed char c;
 47156                           ;doprnt.c: 501: int width;
 47157                           ;doprnt.c: 504: int prec;
 47158                           ;doprnt.c: 508: unsigned short flag;
 47159                           ;doprnt.c: 510: int ccnt = 0;
 47160                           
 47161                           ;incstack = 0
 47162  0122F8  0E00               	movlw	0
 47163  0122FA  0100               	movlb	0	; () banked
 47164  0122FC  6F72               	movwf	(i2sprintf@ccnt+1)& (0+255),b
 47165  0122FE  0E00               	movlw	0
 47166  012300  0100               	movlb	0	; () banked
 47167  012302  6F71               	movwf	i2sprintf@ccnt& (0+255),b
 47168                           
 47169                           ; BSR set to: 0
 47170                           ;doprnt.c: 515: char d;
 47171                           ;doprnt.c: 516: double fval, integ;
 47172                           ;doprnt.c: 517: int exp;
 47173                           ;doprnt.c: 518: double ival;
 47174                           ;doprnt.c: 519: union {
 47175                           ;doprnt.c: 520: unsigned long _val;
 47176                           ;doprnt.c: 521: struct {
 47177                           ;doprnt.c: 522: const char * _cp;
 47178                           ;doprnt.c: 523: unsigned _len;
 47179                           ;doprnt.c: 524: } _str;
 47180                           ;doprnt.c: 525: } _val;
 47181                           ;doprnt.c: 542: *ap = __va_start();
 47182  012304  0E00               	movlw	high (?i2_sprintf+4)
 47183  012306  0100               	movlb	0	; () banked
 47184  012308  6F68               	movwf	(i2sprintf@ap+1)& (0+255),b
 47185  01230A  0E4D               	movlw	low (?i2_sprintf+4)
 47186  01230C  0100               	movlb	0	; () banked
 47187  01230E  6F67               	movwf	i2sprintf@ap& (0+255),b
 47188                           
 47189                           ;doprnt.c: 545: while(c = *f++) {
 47190  012310  EFA6  F096         	goto	i2l11432
 47191  012314                     i2l11156:
 47192                           
 47193                           ; BSR set to: 0
 47194                           ;doprnt.c: 547: if(c != '%')
 47195  012314  0100               	movlb	0	; () banked
 47196  012316  5186               	movf	i2sprintf@c& (0+255),w,b
 47197  012318  0A25               	xorlw	37
 47198  01231A  B4D8               	btfsc	status,2,c
 47199  01231C  D009               	goto	i2l11164
 47200                           
 47201                           ; BSR set to: 0
 47202                           ;doprnt.c: 549: {
 47203                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
 47204  01231E  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 47205  012322  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 47206  012326  0100               	movlb	0	; () banked
 47207  012328  C086  FFDF         	movff	i2sprintf@c,indf2
 47208  01232C  EFA1  F096         	goto	L49
 47209  012330                     i2l11164:
 47210                           
 47211                           ; BSR set to: 0
 47212                           ;doprnt.c: 552: }
 47213                           ;doprnt.c: 555: width = 0;
 47214  012330  0E00               	movlw	0
 47215  012332  0100               	movlb	0	; () banked
 47216  012334  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 47217  012336  0E00               	movlw	0
 47218  012338  0100               	movlb	0	; () banked
 47219  01233A  6F7D               	movwf	i2sprintf@width& (0+255),b
 47220                           
 47221                           ;doprnt.c: 557: flag = 0;
 47222  01233C  0E00               	movlw	0
 47223  01233E  0100               	movlb	0	; () banked
 47224  012340  6F7C               	movwf	(i2sprintf@flag+1)& (0+255),b
 47225  012342  0E00               	movlw	0
 47226  012344  0100               	movlb	0	; () banked
 47227  012346  6F7B               	movwf	i2sprintf@flag& (0+255),b
 47228                           
 47229                           ; BSR set to: 0
 47230                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 47231  012348  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47232  01234C  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47233  012350                     	if	0	;tblptru may be non-zero
 47234  012350                     	endif
 47235  012350                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47236  012350  0E00               	movlw	low (__mediumconst shr (0+16))
 47237  012352  6EF8               	movwf	tblptru,c
 47238  012354                     	endif
 47239  012354  0008               	tblrd		*
 47240  012356  50F5               	movf	tablat,w,c
 47241  012358  EC22  F0DC         	call	i2_isdigit
 47242  01235C  A0D8               	btfss	status,0,c
 47243  01235E  D03A               	goto	i2l11178
 47244                           
 47245                           ;doprnt.c: 607: width = 0;
 47246  012360  0E00               	movlw	0
 47247  012362  0100               	movlb	0	; () banked
 47248  012364  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 47249  012366  0E00               	movlw	0
 47250  012368  0100               	movlb	0	; () banked
 47251  01236A  6F7D               	movwf	i2sprintf@width& (0+255),b
 47252  01236C                     i2l11170:
 47253                           
 47254                           ;doprnt.c: 609: width *= 10;
 47255  01236C  C07D  F00F         	movff	i2sprintf@width,i2___wmul@multiplier
 47256  012370  C07E  F010         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 47257  012374  0E00               	movlw	0
 47258  012376  6E12               	movwf	i2___wmul@multiplicand+1,c
 47259  012378  0E0A               	movlw	10
 47260  01237A  6E11               	movwf	i2___wmul@multiplicand,c
 47261  01237C  EC83  F0DB         	call	i2___wmul	;wreg free
 47262  012380  C00F  F07D         	movff	?i2___wmul,i2sprintf@width
 47263  012384  C010  F07E         	movff	?i2___wmul+1,i2sprintf@width+1
 47264                           
 47265                           ;doprnt.c: 610: width += *f++ - '0';
 47266  012388  0ED0               	movlw	208
 47267  01238A  6E50               	movwf	??i2_sprintf& (0+255),c
 47268  01238C  0EFF               	movlw	255
 47269  01238E  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 47270  012390  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47271  012394  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47272  012398                     	if	0	;tblptru may be non-zero
 47273  012398                     	endif
 47274  012398                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47275  012398  0E00               	movlw	low (__mediumconst shr (0+16))
 47276  01239A  6EF8               	movwf	tblptru,c
 47277  01239C                     	endif
 47278  01239C  0008               	tblrd		*
 47279  01239E  50F5               	movf	tablat,w,c
 47280  0123A0  6E52               	movwf	(??i2_sprintf+2)& (0+255),c
 47281  0123A2  6A53               	clrf	(??i2_sprintf+3)& (0+255),c
 47282  0123A4  5050               	movf	??i2_sprintf,w,c
 47283  0123A6  2652               	addwf	??i2_sprintf+2,f,c
 47284  0123A8  5051               	movf	??i2_sprintf+1,w,c
 47285  0123AA  2253               	addwfc	??i2_sprintf+3,f,c
 47286  0123AC  5052               	movf	??i2_sprintf+2,w,c
 47287  0123AE  0100               	movlb	0	; () banked
 47288  0123B0  277D               	addwf	i2sprintf@width& (0+255),f,b
 47289  0123B2  5053               	movf	??i2_sprintf+3,w,c
 47290  0123B4  0100               	movlb	0	; () banked
 47291  0123B6  237E               	addwfc	(i2sprintf@width+1)& (0+255),f,b
 47292                           
 47293                           ; BSR set to: 0
 47294  0123B8  4A4B               	infsnz	i2sprintf@f,f,c
 47295  0123BA  2A4C               	incf	i2sprintf@f+1,f,c
 47296                           
 47297                           ; BSR set to: 0
 47298                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 47299  0123BC  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47300  0123C0  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47301  0123C4                     	if	0	;tblptru may be non-zero
 47302  0123C4                     	endif
 47303  0123C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47304  0123C4  0E00               	movlw	low (__mediumconst shr (0+16))
 47305  0123C6  6EF8               	movwf	tblptru,c
 47306  0123C8                     	endif
 47307  0123C8  0008               	tblrd		*
 47308  0123CA  50F5               	movf	tablat,w,c
 47309  0123CC  EC22  F0DC         	call	i2_isdigit
 47310  0123D0  B0D8               	btfsc	status,0,c
 47311  0123D2  D7CC               	goto	i2l11170
 47312  0123D4                     i2l11178:
 47313                           
 47314                           ;doprnt.c: 617: }
 47315                           ;doprnt.c: 620: if(*f == '.') {
 47316  0123D4  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47317  0123D8  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47318  0123DC                     	if	0	;tblptru may be non-zero
 47319  0123DC                     	endif
 47320  0123DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47321  0123DC  0E00               	movlw	low (__mediumconst shr (0+16))
 47322  0123DE  6EF8               	movwf	tblptru,c
 47323  0123E0                     	endif
 47324  0123E0  0008               	tblrd		*
 47325  0123E2  50F5               	movf	tablat,w,c
 47326  0123E4  0A2E               	xorlw	46
 47327  0123E6  A4D8               	btfss	status,2,c
 47328  0123E8  D037               	goto	i2l11190
 47329                           
 47330                           ;doprnt.c: 621: flag |= 0x4000;
 47331  0123EA  0100               	movlb	0	; () banked
 47332  0123EC  8D7C               	bsf	(i2sprintf@flag+1)& (0+255),6,b
 47333                           
 47334                           ;doprnt.c: 622: f++;
 47335  0123EE  4A4B               	infsnz	i2sprintf@f,f,c
 47336  0123F0  2A4C               	incf	i2sprintf@f+1,f,c
 47337                           
 47338                           ; BSR set to: 0
 47339                           ;doprnt.c: 629: {
 47340                           ;doprnt.c: 630: prec = 0;
 47341  0123F2  0E00               	movlw	0
 47342  0123F4  0100               	movlb	0	; () banked
 47343  0123F6  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47344  0123F8  0E00               	movlw	0
 47345  0123FA  0100               	movlb	0	; () banked
 47346  0123FC  6F84               	movwf	i2sprintf@prec& (0+255),b
 47347                           
 47348                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 47349  0123FE  D01F               	goto	i2l11188
 47350  012400                     i2l11184:
 47351                           
 47352                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 47353  012400  C084  F00F         	movff	i2sprintf@prec,i2___wmul@multiplier
 47354  012404  C085  F010         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 47355  012408  0E00               	movlw	0
 47356  01240A  6E12               	movwf	i2___wmul@multiplicand+1,c
 47357  01240C  0E0A               	movlw	10
 47358  01240E  6E11               	movwf	i2___wmul@multiplicand,c
 47359  012410  EC83  F0DB         	call	i2___wmul	;wreg free
 47360  012414  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47361  012418  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47362  01241C                     	if	0	;tblptru may be non-zero
 47363  01241C                     	endif
 47364  01241C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47365  01241C  0E00               	movlw	low (__mediumconst shr (0+16))
 47366  01241E  6EF8               	movwf	tblptru,c
 47367  012420                     	endif
 47368  012420  0008               	tblrd		*
 47369  012422  50F5               	movf	tablat,w,c
 47370  012424  260F               	addwf	?i2___wmul,f,c
 47371  012426  0E00               	movlw	0
 47372  012428  2210               	addwfc	?i2___wmul+1,f,c
 47373  01242A  0ED0               	movlw	208
 47374  01242C  240F               	addwf	?i2___wmul,w,c
 47375  01242E  0100               	movlb	0	; () banked
 47376  012430  6F84               	movwf	i2sprintf@prec& (0+255),b
 47377  012432  0EFF               	movlw	255
 47378  012434  2010               	addwfc	?i2___wmul+1,w,c
 47379  012436  0100               	movlb	0	; () banked
 47380  012438  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47381                           
 47382                           ; BSR set to: 0
 47383  01243A  4A4B               	infsnz	i2sprintf@f,f,c
 47384  01243C  2A4C               	incf	i2sprintf@f+1,f,c
 47385  01243E                     i2l11188:
 47386                           
 47387                           ; BSR set to: 0
 47388  01243E  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47389  012442  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47390  012446                     	if	0	;tblptru may be non-zero
 47391  012446                     	endif
 47392  012446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47393  012446  0E00               	movlw	low (__mediumconst shr (0+16))
 47394  012448  6EF8               	movwf	tblptru,c
 47395  01244A                     	endif
 47396  01244A  0008               	tblrd		*
 47397  01244C  50F5               	movf	tablat,w,c
 47398  01244E  EC22  F0DC         	call	i2_isdigit
 47399  012452  A0D8               	btfss	status,0,c
 47400  012454  D00D               	goto	i2l11198
 47401  012456  D7D4               	goto	i2l11184
 47402  012458                     i2l11190:
 47403                           
 47404                           ;doprnt.c: 635: prec = 0;
 47405  012458  0E00               	movlw	0
 47406  01245A  0100               	movlb	0	; () banked
 47407  01245C  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47408  01245E  0E00               	movlw	0
 47409  012460  0100               	movlb	0	; () banked
 47410  012462  6F84               	movwf	i2sprintf@prec& (0+255),b
 47411                           
 47412                           ; BSR set to: 0
 47413                           ;doprnt.c: 637: flag |= 0x1000;
 47414  012464  0100               	movlb	0	; () banked
 47415  012466  897C               	bsf	(i2sprintf@flag+1)& (0+255),4,b
 47416  012468  D003               	goto	i2l11198
 47417  01246A                     i2l11194:
 47418                           
 47419                           ; BSR set to: 0
 47420                           ;doprnt.c: 672: flag |= 0x400;
 47421  01246A  0100               	movlb	0	; () banked
 47422  01246C  857C               	bsf	(i2sprintf@flag+1)& (0+255),2,b
 47423                           
 47424                           ;doprnt.c: 673: break;
 47425  01246E  D017               	goto	i2l11200
 47426  012470                     i2l11198:
 47427  012470  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47428  012474  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47429  012478  4A4B               	infsnz	i2sprintf@f,f,c
 47430  01247A  2A4C               	incf	i2sprintf@f+1,f,c
 47431  01247C                     	if	0	;tblptru may be non-zero
 47432  01247C                     	endif
 47433  01247C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47434  01247C  0E00               	movlw	low (__mediumconst shr (0+16))
 47435  01247E  6EF8               	movwf	tblptru,c
 47436  012480                     	endif
 47437  012480  0008               	tblrd		*
 47438  012482  0100               	movlb	0	; () banked
 47439  012484  CFF5 F086          	movff	tablat,i2sprintf@c
 47440  012488  0100               	movlb	0	; () banked
 47441  01248A  5186               	movf	i2sprintf@c& (0+255),w,b
 47442                           
 47443                           ; Switch size 1, requested type "space"
 47444                           ; Number of cases is 2, Range of values is 0 to 102
 47445                           ; switch strategies available:
 47446                           ; Name         Instructions Cycles
 47447                           ; simple_byte            7     4 (average)
 47448                           ;	Chosen strategy is simple_byte
 47449  01248C  0A00               	xorlw	0	; case 0
 47450  01248E  B4D8               	btfsc	status,2,c
 47451  012490  EFB6  F096         	goto	i2l11434
 47452  012494  0A66               	xorlw	102	; case 102
 47453  012496  B4D8               	btfsc	status,2,c
 47454  012498  D7E8               	goto	i2l11194
 47455  01249A  EFA6  F096         	goto	i2l11432
 47456  01249E                     i2l11200:
 47457                           
 47458                           ; BSR set to: 0
 47459                           ;doprnt.c: 834: if(flag & (0x700)) {
 47460  01249E  0E07               	movlw	7
 47461  0124A0  0100               	movlb	0	; () banked
 47462  0124A2  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 47463  0124A4  B4D8               	btfsc	status,2,c
 47464  0124A6  D394               	goto	i2l11380
 47465                           
 47466                           ; BSR set to: 0
 47467                           ;doprnt.c: 836: if(flag & 0x1000)
 47468  0124A8  0100               	movlb	0	; () banked
 47469  0124AA  A97C               	btfss	(i2sprintf@flag+1)& (0+255),4,b
 47470  0124AC  D006               	goto	i2l11206
 47471                           
 47472                           ; BSR set to: 0
 47473                           ;doprnt.c: 838: prec = 6;
 47474  0124AE  0E00               	movlw	0
 47475  0124B0  0100               	movlb	0	; () banked
 47476  0124B2  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47477  0124B4  0E06               	movlw	6
 47478  0124B6  0100               	movlb	0	; () banked
 47479  0124B8  6F84               	movwf	i2sprintf@prec& (0+255),b
 47480  0124BA                     i2l11206:
 47481                           
 47482                           ; BSR set to: 0
 47483                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 47484  0124BA  C067  FFD9         	movff	i2sprintf@ap,fsr2l
 47485  0124BE  C068  FFDA         	movff	i2sprintf@ap+1,fsr2h
 47486  0124C2  0100               	movlb	0	; () banked
 47487  0124C4  CFDE F081          	movff	postinc2,i2sprintf@fval
 47488  0124C8  0100               	movlb	0	; () banked
 47489  0124CA  CFDE F082          	movff	postinc2,i2sprintf@fval+1
 47490  0124CE  0100               	movlb	0	; () banked
 47491  0124D0  CFDD F083          	movff	postdec2,i2sprintf@fval+2
 47492                           
 47493                           ; BSR set to: 0
 47494  0124D4  0E03               	movlw	3
 47495  0124D6  0100               	movlb	0	; () banked
 47496  0124D8  2767               	addwf	i2sprintf@ap& (0+255),f,b
 47497  0124DA  0E00               	movlw	0
 47498  0124DC  0100               	movlb	0	; () banked
 47499  0124DE  2368               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 47500                           
 47501                           ; BSR set to: 0
 47502                           ;doprnt.c: 840: if(fval < 0.0) {
 47503  0124E0  0100               	movlb	0	; () banked
 47504  0124E2  5183               	movf	(i2sprintf@fval+2)& (0+255),w,b
 47505  0124E4  0A80               	xorlw	128
 47506  0124E6  0F80               	addlw	128
 47507  0124E8  E107               	bnz	i2u1209_45
 47508  0124EA  0E00               	movlw	0
 47509  0124EC  0100               	movlb	0	; () banked
 47510  0124EE  5D82               	subwf	(i2sprintf@fval+1)& (0+255),w,b
 47511  0124F0  E103               	bnz	i2u1209_45
 47512  0124F2  0E00               	movlw	0
 47513  0124F4  0100               	movlb	0	; () banked
 47514  0124F6  5D81               	subwf	i2sprintf@fval& (0+255),w,b
 47515  0124F8                     i2u1209_45:
 47516  0124F8  B0D8               	btfsc	status,0,c
 47517  0124FA  D011               	goto	i2l11216
 47518                           
 47519                           ; BSR set to: 0
 47520                           ;doprnt.c: 841: fval = -fval;
 47521  0124FC  C081  F001         	movff	i2sprintf@fval,i2___ftneg@f1
 47522  012500  C082  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
 47523  012504  C083  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
 47524  012508  EC96  F0DB         	call	i2___ftneg	;wreg free
 47525  01250C  C001  F081         	movff	?i2___ftneg,i2sprintf@fval
 47526  012510  C002  F082         	movff	?i2___ftneg+1,i2sprintf@fval+1
 47527  012514  C003  F083         	movff	?i2___ftneg+2,i2sprintf@fval+2
 47528                           
 47529                           ;doprnt.c: 842: flag |= 0x03;
 47530  012518  0E03               	movlw	3
 47531  01251A  0100               	movlb	0	; () banked
 47532  01251C  137B               	iorwf	i2sprintf@flag& (0+255),f,b
 47533  01251E                     i2l11216:
 47534                           
 47535                           ; BSR set to: 0
 47536                           ;doprnt.c: 843: }
 47537                           ;doprnt.c: 844: exp = 0;
 47538  01251E  0E00               	movlw	0
 47539  012520  0100               	movlb	0	; () banked
 47540  012522  6F80               	movwf	(i2sprintf@exp+1)& (0+255),b
 47541  012524  0E00               	movlw	0
 47542  012526  0100               	movlb	0	; () banked
 47543  012528  6F7F               	movwf	i2sprintf@exp& (0+255),b
 47544                           
 47545                           ; BSR set to: 0
 47546                           ;doprnt.c: 845: if( fval!=0) {
 47547  01252A  0E7F               	movlw	127
 47548  01252C  0100               	movlb	0	; () banked
 47549  01252E  1583               	andwf	(i2sprintf@fval+2)& (0+255),w,b
 47550  012530  0100               	movlb	0	; () banked
 47551  012532  1182               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 47552  012534  0100               	movlb	0	; () banked
 47553  012536  1181               	iorwf	i2sprintf@fval& (0+255),w,b
 47554  012538  B4D8               	btfsc	status,2,c
 47555  01253A  D097               	goto	i2l11244
 47556                           
 47557                           ; BSR set to: 0
 47558                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 47559  01253C  0E82               	movlw	130
 47560  01253E  6E50               	movwf	??i2_sprintf& (0+255),c
 47561  012540  0EFF               	movlw	255
 47562  012542  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 47563  012544  0100               	movlb	0	; () banked
 47564  012546  C081  F052         	movff	i2sprintf@fval,??i2_sprintf+2
 47565  01254A  0100               	movlb	0	; () banked
 47566  01254C  C082  F053         	movff	i2sprintf@fval+1,??i2_sprintf+3
 47567  012550  0100               	movlb	0	; () banked
 47568  012552  C083  F054         	movff	i2sprintf@fval+2,??i2_sprintf+4
 47569  012556  0100               	movlb	0	; () banked
 47570  012558  C084  F055         	movff	i2sprintf@fval+3,??i2_sprintf+5
 47571  01255C  0E10               	movlw	16
 47572  01255E  D005               	goto	i2u1211_40
 47573  012560                     i2u1211_45:
 47574  012560  90D8               	bcf	status,0,c
 47575  012562  3255               	rrcf	??i2_sprintf+5,f,c
 47576  012564  3254               	rrcf	??i2_sprintf+4,f,c
 47577  012566  3253               	rrcf	??i2_sprintf+3,f,c
 47578  012568  3252               	rrcf	??i2_sprintf+2,f,c
 47579  01256A                     i2u1211_40:
 47580  01256A  2EE8               	decfsz	wreg,f,c
 47581  01256C  D7F9               	goto	i2u1211_45
 47582  01256E  5052               	movf	??i2_sprintf+2,w,c
 47583  012570  2450               	addwf	??i2_sprintf,w,c
 47584  012572  0100               	movlb	0	; () banked
 47585  012574  6F7F               	movwf	i2sprintf@exp& (0+255),b
 47586  012576  0E00               	movlw	0
 47587  012578  2051               	addwfc	??i2_sprintf+1,w,c
 47588  01257A  0100               	movlb	0	; () banked
 47589  01257C  6F80               	movwf	(i2sprintf@exp+1)& (0+255),b
 47590                           
 47591                           ; BSR set to: 0
 47592                           ;doprnt.c: 847: exp--;
 47593  01257E  0100               	movlb	0	; () banked
 47594  012580  077F               	decf	i2sprintf@exp& (0+255),f,b
 47595  012582  A0D8               	btfss	status,0,c
 47596  012584  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 47597                           
 47598                           ; BSR set to: 0
 47599                           ;doprnt.c: 848: exp *= 3;
 47600  012586  C07F  F00F         	movff	i2sprintf@exp,i2___wmul@multiplier
 47601  01258A  C080  F010         	movff	i2sprintf@exp+1,i2___wmul@multiplier+1
 47602  01258E  0E00               	movlw	0
 47603  012590  6E12               	movwf	i2___wmul@multiplicand+1,c
 47604  012592  0E03               	movlw	3
 47605  012594  6E11               	movwf	i2___wmul@multiplicand,c
 47606  012596  EC83  F0DB         	call	i2___wmul	;wreg free
 47607  01259A  C00F  F07F         	movff	?i2___wmul,i2sprintf@exp
 47608  01259E  C010  F080         	movff	?i2___wmul+1,i2sprintf@exp+1
 47609                           
 47610                           ;doprnt.c: 849: exp /= 10;
 47611  0125A2  C07F  F007         	movff	i2sprintf@exp,i2___awdiv@dividend
 47612  0125A6  C080  F008         	movff	i2sprintf@exp+1,i2___awdiv@dividend+1
 47613  0125AA  0E00               	movlw	0
 47614  0125AC  6E0A               	movwf	i2___awdiv@divisor+1,c
 47615  0125AE  0E0A               	movlw	10
 47616  0125B0  6E09               	movwf	i2___awdiv@divisor,c
 47617  0125B2  EC89  F0D1         	call	i2___awdiv	;wreg free
 47618  0125B6  C007  F07F         	movff	?i2___awdiv,i2sprintf@exp
 47619  0125BA  C008  F080         	movff	?i2___awdiv+1,i2sprintf@exp+1
 47620                           
 47621                           ;doprnt.c: 850: if(exp < 0)
 47622  0125BE  0100               	movlb	0	; () banked
 47623  0125C0  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 47624  0125C2  0A80               	xorlw	128
 47625  0125C4  6EF3               	movwf	prodl,c
 47626  0125C6  0E80               	movlw	128
 47627  0125C8  5CF3               	subwf	prodl,w,c
 47628  0125CA  0E00               	movlw	0
 47629  0125CC  B4D8               	btfsc	status,2,c
 47630  0125CE  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 47631  0125D0  B0D8               	btfsc	status,0,c
 47632  0125D2  D004               	goto	i2l11232
 47633                           
 47634                           ; BSR set to: 0
 47635                           ;doprnt.c: 851: exp--;
 47636  0125D4  0100               	movlb	0	; () banked
 47637  0125D6  077F               	decf	i2sprintf@exp& (0+255),f,b
 47638  0125D8  A0D8               	btfss	status,0,c
 47639  0125DA  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 47640  0125DC                     i2l11232:
 47641                           
 47642                           ; BSR set to: 0
 47643                           ;doprnt.c: 855: integ = scale(-exp);
 47644  0125DC  0100               	movlb	0	; () banked
 47645  0125DE  517F               	movf	i2sprintf@exp& (0+255),w,b
 47646  0125E0  0800               	sublw	0
 47647  0125E2  ECBC  F0FD         	call	i2_scale
 47648  0125E6  C024  F073         	movff	?i2_scale,i2sprintf@integ
 47649  0125EA  C025  F074         	movff	?i2_scale+1,i2sprintf@integ+1
 47650  0125EE  C026  F075         	movff	?i2_scale+2,i2sprintf@integ+2
 47651                           
 47652                           ;doprnt.c: 856: integ *= fval;
 47653  0125F2  C073  F015         	movff	i2sprintf@integ,i2___ftmul@f1
 47654  0125F6  C074  F016         	movff	i2sprintf@integ+1,i2___ftmul@f1+1
 47655  0125FA  C075  F017         	movff	i2sprintf@integ+2,i2___ftmul@f1+2
 47656  0125FE  C081  F018         	movff	i2sprintf@fval,i2___ftmul@f2
 47657  012602  C082  F019         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 47658  012606  C083  F01A         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 47659  01260A  EC6D  F0C8         	call	i2___ftmul	;wreg free
 47660  01260E  C015  F073         	movff	?i2___ftmul,i2sprintf@integ
 47661  012612  C016  F074         	movff	?i2___ftmul+1,i2sprintf@integ+1
 47662  012616  C017  F075         	movff	?i2___ftmul+2,i2sprintf@integ+2
 47663                           
 47664                           ;doprnt.c: 857: if(integ < 1.0)
 47665  01261A  C073  F001         	movff	i2sprintf@integ,i2___ftge@ff1
 47666  01261E  C074  F002         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 47667  012622  C075  F003         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 47668  012626  0E00               	movlw	0
 47669  012628  6E04               	movwf	i2___ftge@ff2,c
 47670  01262A  0E80               	movlw	128
 47671  01262C  6E05               	movwf	i2___ftge@ff2+1,c
 47672  01262E  0E3F               	movlw	63
 47673  012630  6E06               	movwf	i2___ftge@ff2+2,c
 47674  012632  EC56  F0D3         	call	i2___ftge	;wreg free
 47675  012636  B0D8               	btfsc	status,0,c
 47676  012638  D005               	goto	i2l11240
 47677                           
 47678                           ;doprnt.c: 858: exp--;
 47679  01263A  0100               	movlb	0	; () banked
 47680  01263C  077F               	decf	i2sprintf@exp& (0+255),f,b
 47681  01263E  A0D8               	btfss	status,0,c
 47682  012640  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 47683  012642  D013               	goto	i2l11244
 47684  012644                     i2l11240:
 47685                           
 47686                           ;doprnt.c: 859: else if(integ >= 10.0)
 47687  012644  C073  F001         	movff	i2sprintf@integ,i2___ftge@ff1
 47688  012648  C074  F002         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 47689  01264C  C075  F003         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 47690  012650  0E00               	movlw	0
 47691  012652  6E04               	movwf	i2___ftge@ff2,c
 47692  012654  0E20               	movlw	32
 47693  012656  6E05               	movwf	i2___ftge@ff2+1,c
 47694  012658  0E41               	movlw	65
 47695  01265A  6E06               	movwf	i2___ftge@ff2+2,c
 47696  01265C  EC56  F0D3         	call	i2___ftge	;wreg free
 47697  012660  A0D8               	btfss	status,0,c
 47698  012662  D003               	goto	i2l11244
 47699                           
 47700                           ;doprnt.c: 860: exp++;
 47701  012664  0100               	movlb	0	; () banked
 47702  012666  4B7F               	infsnz	i2sprintf@exp& (0+255),f,b
 47703  012668  2B80               	incf	(i2sprintf@exp+1)& (0+255),f,b
 47704  01266A                     i2l11244:
 47705                           
 47706                           ;doprnt.c: 861: }
 47707                           ;doprnt.c: 1121: if(prec <= 12)
 47708  01266A  0100               	movlb	0	; () banked
 47709  01266C  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 47710  01266E  0A80               	xorlw	128
 47711  012670  6EF3               	movwf	prodl,c
 47712  012672  0E80               	movlw	128
 47713  012674  5CF3               	subwf	prodl,w,c
 47714  012676  0E0D               	movlw	13
 47715  012678  B4D8               	btfsc	status,2,c
 47716  01267A  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 47717  01267C  B0D8               	btfsc	status,0,c
 47718  01267E  D018               	goto	i2l11248
 47719                           
 47720                           ; BSR set to: 0
 47721                           ;doprnt.c: 1122: fval += fround(prec);
 47722  012680  C081  F02E         	movff	i2sprintf@fval,i2___ftadd@f1
 47723  012684  C082  F02F         	movff	i2sprintf@fval+1,i2___ftadd@f1+1
 47724  012688  C083  F030         	movff	i2sprintf@fval+2,i2___ftadd@f1+2
 47725  01268C  0100               	movlb	0	; () banked
 47726  01268E  5184               	movf	i2sprintf@prec& (0+255),w,b
 47727  012690  ECC2  F0A7         	call	i2_fround
 47728  012694  C024  F031         	movff	?i2_fround,i2___ftadd@f2
 47729  012698  C025  F032         	movff	?i2_fround+1,i2___ftadd@f2+1
 47730  01269C  C026  F033         	movff	?i2_fround+2,i2___ftadd@f2+2
 47731  0126A0  EC1B  F0B6         	call	i2___ftadd	;wreg free
 47732  0126A4  C02E  F081         	movff	?i2___ftadd,i2sprintf@fval
 47733  0126A8  C02F  F082         	movff	?i2___ftadd+1,i2sprintf@fval+1
 47734  0126AC  C030  F083         	movff	?i2___ftadd+2,i2sprintf@fval+2
 47735  0126B0                     i2l11248:
 47736                           
 47737                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 47738  0126B0  0100               	movlb	0	; () banked
 47739  0126B2  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 47740  0126B4  0A80               	xorlw	128
 47741  0126B6  6EF3               	movwf	prodl,c
 47742  0126B8  0E80               	movlw	128
 47743  0126BA  5CF3               	subwf	prodl,w,c
 47744  0126BC  0E0A               	movlw	10
 47745  0126BE  B4D8               	btfsc	status,2,c
 47746  0126C0  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 47747  0126C2  B0D8               	btfsc	status,0,c
 47748  0126C4  D028               	goto	i2l11256
 47749                           
 47750                           ; BSR set to: 0
 47751  0126C6  0E7F               	movlw	127
 47752  0126C8  0100               	movlb	0	; () banked
 47753  0126CA  1583               	andwf	(i2sprintf@fval+2)& (0+255),w,b
 47754  0126CC  0100               	movlb	0	; () banked
 47755  0126CE  1182               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 47756  0126D0  0100               	movlb	0	; () banked
 47757  0126D2  1181               	iorwf	i2sprintf@fval& (0+255),w,b
 47758  0126D4  B4D8               	btfsc	status,2,c
 47759  0126D6  D06B               	goto	i2l11272
 47760                           
 47761                           ; BSR set to: 0
 47762  0126D8  C081  F03A         	movff	i2sprintf@fval,i2___fttol@f1
 47763  0126DC  C082  F03B         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 47764  0126E0  C083  F03C         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 47765  0126E4  ECF2  F0C7         	call	i2___fttol	;wreg free
 47766  0126E8  C03A  F050         	movff	?i2___fttol,??i2_sprintf
 47767  0126EC  C03B  F051         	movff	?i2___fttol+1,??i2_sprintf+1
 47768  0126F0  C03C  F052         	movff	?i2___fttol+2,??i2_sprintf+2
 47769  0126F4  C03D  F053         	movff	?i2___fttol+3,??i2_sprintf+3
 47770  0126F8  5053               	movf	??i2_sprintf+3,w,c
 47771  0126FA  1050               	iorwf	??i2_sprintf,w,c
 47772  0126FC  1051               	iorwf	??i2_sprintf+1,w,c
 47773  0126FE  1052               	iorwf	??i2_sprintf+2,w,c
 47774  012700  A4D8               	btfss	status,2,c
 47775  012702  D055               	goto	i2l11272
 47776  012704  0100               	movlb	0	; () banked
 47777  012706  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 47778  012708  0A80               	xorlw	128
 47779  01270A  0F80               	addlw	-128
 47780  01270C  0E02               	movlw	2
 47781  01270E  B4D8               	btfsc	status,2,c
 47782  012710  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 47783  012712  A0D8               	btfss	status,0,c
 47784  012714  D04C               	goto	i2l11272
 47785  012716                     i2l11256:
 47786                           
 47787                           ; BSR set to: 0
 47788                           ;doprnt.c: 1129: if(integ < 4.294967296){
 47789  012716  C073  F001         	movff	i2sprintf@integ,i2___ftge@ff1
 47790  01271A  C074  F002         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 47791  01271E  C075  F003         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 47792  012722  0E70               	movlw	112
 47793  012724  6E04               	movwf	i2___ftge@ff2,c
 47794  012726  0E89               	movlw	137
 47795  012728  6E05               	movwf	i2___ftge@ff2+1,c
 47796  01272A  0E40               	movlw	64
 47797  01272C  6E06               	movwf	i2___ftge@ff2+2,c
 47798  01272E  EC56  F0D3         	call	i2___ftge	;wreg free
 47799  012732  B0D8               	btfsc	status,0,c
 47800  012734  D003               	goto	i2l11260
 47801                           
 47802                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 47803  012736  0100               	movlb	0	; () banked
 47804  012738  0EF7               	movlw	247
 47805  01273A  D002               	goto	L50
 47806  01273C                     i2l11260:
 47807                           
 47808                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 47809  01273C  0100               	movlb	0	; () banked
 47810  01273E  0EF8               	movlw	248
 47811  012740                     L50:
 47812  012740  0100               	movlb	0	; () banked
 47813  012742  277F               	addwf	i2sprintf@exp& (0+255),f,b
 47814  012744  0EFF               	movlw	255
 47815  012746  0100               	movlb	0	; () banked
 47816  012748  2380               	addwfc	(i2sprintf@exp+1)& (0+255),f,b
 47817                           
 47818                           ; BSR set to: 0
 47819                           ;doprnt.c: 1133: }
 47820                           ;doprnt.c: 1134: integ = scale(exp);
 47821                           
 47822                           ; BSR set to: 0
 47823  01274A  0100               	movlb	0	; () banked
 47824  01274C  517F               	movf	i2sprintf@exp& (0+255),w,b
 47825  01274E  ECBC  F0FD         	call	i2_scale
 47826  012752  C024  F073         	movff	?i2_scale,i2sprintf@integ
 47827  012756  C025  F074         	movff	?i2_scale+1,i2sprintf@integ+1
 47828  01275A  C026  F075         	movff	?i2_scale+2,i2sprintf@integ+2
 47829                           
 47830                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 47831  01275E  C081  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
 47832  012762  C082  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
 47833  012766  C083  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
 47834  01276A  C073  F004         	movff	i2sprintf@integ,i2__tdiv_to_l_@f2
 47835  01276E  C074  F005         	movff	i2sprintf@integ+1,i2__tdiv_to_l_@f2+1
 47836  012772  C075  F006         	movff	i2sprintf@integ+2,i2__tdiv_to_l_@f2+2
 47837  012776  EC6C  F0C0         	call	i2__tdiv_to_l_	;wreg free
 47838  01277A  C001  F063         	movff	?i2__tdiv_to_l_,i2_sprintf$9349
 47839  01277E  C002  F064         	movff	?i2__tdiv_to_l_+1,i2_sprintf$9349+1
 47840  012782  C003  F065         	movff	?i2__tdiv_to_l_+2,i2_sprintf$9349+2
 47841  012786  C004  F066         	movff	?i2__tdiv_to_l_+3,i2_sprintf$9349+3
 47842  01278A  C063  F076         	movff	i2_sprintf$9349,i2sprintf@_val
 47843  01278E  C064  F077         	movff	i2_sprintf$9349+1,i2sprintf@_val+1
 47844  012792  C065  F078         	movff	i2_sprintf$9349+2,i2sprintf@_val+2
 47845  012796  C066  F079         	movff	i2_sprintf$9349+3,i2sprintf@_val+3
 47846                           
 47847                           ;doprnt.c: 1138: fval = 0.0;
 47848  01279A  0E00               	movlw	0
 47849  01279C  0100               	movlb	0	; () banked
 47850  01279E  6F81               	movwf	i2sprintf@fval& (0+255),b
 47851  0127A0  0E00               	movlw	0
 47852  0127A2  0100               	movlb	0	; () banked
 47853  0127A4  6F82               	movwf	(i2sprintf@fval+1)& (0+255),b
 47854  0127A6  0E00               	movlw	0
 47855  0127A8  0100               	movlb	0	; () banked
 47856  0127AA  6F83               	movwf	(i2sprintf@fval+2)& (0+255),b
 47857                           
 47858                           ;doprnt.c: 1139: } else {
 47859  0127AC  D034               	goto	i2l11276
 47860  0127AE                     i2l11272:
 47861                           
 47862                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 47863  0127AE  C081  F03A         	movff	i2sprintf@fval,i2___fttol@f1
 47864  0127B2  C082  F03B         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 47865  0127B6  C083  F03C         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 47866  0127BA  ECF2  F0C7         	call	i2___fttol	;wreg free
 47867  0127BE  C03A  F076         	movff	?i2___fttol,i2sprintf@_val
 47868  0127C2  C03B  F077         	movff	?i2___fttol+1,i2sprintf@_val+1
 47869  0127C6  C03C  F078         	movff	?i2___fttol+2,i2sprintf@_val+2
 47870  0127CA  C03D  F079         	movff	?i2___fttol+3,i2sprintf@_val+3
 47871                           
 47872                           ;doprnt.c: 1141: fval -= (double)_val._val;
 47873  0127CE  C081  F03A         	movff	i2sprintf@fval,i2___ftsub@f1
 47874  0127D2  C082  F03B         	movff	i2sprintf@fval+1,i2___ftsub@f1+1
 47875  0127D6  C083  F03C         	movff	i2sprintf@fval+2,i2___ftsub@f1+2
 47876  0127DA  C076  F009         	movff	i2sprintf@_val,i2___lltoft@c
 47877  0127DE  C077  F00A         	movff	i2sprintf@_val+1,i2___lltoft@c+1
 47878  0127E2  C078  F00B         	movff	i2sprintf@_val+2,i2___lltoft@c+2
 47879  0127E6  C079  F00C         	movff	i2sprintf@_val+3,i2___lltoft@c+3
 47880  0127EA  EC70  F0D7         	call	i2___lltoft	;wreg free
 47881  0127EE  C009  F03D         	movff	?i2___lltoft,i2___ftsub@f2
 47882  0127F2  C00A  F03E         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 47883  0127F6  C00B  F03F         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 47884  0127FA  EC10  F0DA         	call	i2___ftsub	;wreg free
 47885  0127FE  C03A  F081         	movff	?i2___ftsub,i2sprintf@fval
 47886  012802  C03B  F082         	movff	?i2___ftsub+1,i2sprintf@fval+1
 47887  012806  C03C  F083         	movff	?i2___ftsub+2,i2sprintf@fval+2
 47888                           
 47889                           ;doprnt.c: 1142: exp = 0;
 47890  01280A  0E00               	movlw	0
 47891  01280C  0100               	movlb	0	; () banked
 47892  01280E  6F80               	movwf	(i2sprintf@exp+1)& (0+255),b
 47893  012810  0E00               	movlw	0
 47894  012812  0100               	movlb	0	; () banked
 47895  012814  6F7F               	movwf	i2sprintf@exp& (0+255),b
 47896  012816                     i2l11276:
 47897                           
 47898                           ; BSR set to: 0
 47899                           ;doprnt.c: 1143: }
 47900                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 47901  012816  0E01               	movlw	1
 47902  012818  0100               	movlb	0	; () banked
 47903  01281A  6F86               	movwf	i2sprintf@c& (0+255),b
 47904  01281C                     
 47905                           ; BSR set to: 0
 47906  01281C  0100               	movlb	0	; () banked
 47907  01281E  5186               	movf	i2sprintf@c& (0+255),w,b
 47908  012820  0A0A               	xorlw	10
 47909  012822  B4D8               	btfsc	status,2,c
 47910  012824  D021               	goto	i2l11290
 47911                           
 47912                           ; BSR set to: 0
 47913                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 47914                           
 47915                           ; BSR set to: 0
 47916                           
 47917                           ; BSR set to: 0
 47918  012826  0100               	movlb	0	; () banked
 47919  012828  5186               	movf	i2sprintf@c& (0+255),w,b
 47920  01282A  0D04               	mullw	4
 47921  01282C  0E95               	movlw	low _dpowers
 47922  01282E  24F3               	addwf	prodl,w,c
 47923  012830  6EF6               	movwf	tblptrl,c
 47924  012832  0EFE               	movlw	high _dpowers
 47925  012834  20F4               	addwfc	prodh,w,c
 47926  012836  6EF7               	movwf	tblptrh,c
 47927  012838                     	if	1	;There are 3 active tblptr bytes
 47928  012838  6AF8               	clrf	tblptru,c
 47929  01283A  0E00               	movlw	low (__mediumconst shr (0+16))
 47930  01283C  22F8               	addwfc	tblptru,f,c
 47931  01283E                     	endif
 47932  01283E  0009               	tblrd		*+
 47933  012840  50F5               	movf	tablat,w,c
 47934  012842  0100               	movlb	0	; () banked
 47935  012844  5D76               	subwf	i2sprintf@_val& (0+255),w,b
 47936  012846  0009               	tblrd		*+
 47937  012848  50F5               	movf	tablat,w,c
 47938  01284A  0100               	movlb	0	; () banked
 47939  01284C  5977               	subwfb	(i2sprintf@_val+1)& (0+255),w,b
 47940  01284E  0009               	tblrd		*+
 47941  012850  50F5               	movf	tablat,w,c
 47942  012852  0100               	movlb	0	; () banked
 47943  012854  5978               	subwfb	(i2sprintf@_val+2)& (0+255),w,b
 47944  012856  0009               	tblrd		*+
 47945  012858  50F5               	movf	tablat,w,c
 47946  01285A  0100               	movlb	0	; () banked
 47947  01285C  5979               	subwfb	(i2sprintf@_val+3)& (0+255),w,b
 47948  01285E  A0D8               	btfss	status,0,c
 47949  012860  D003               	goto	i2l11290
 47950                           
 47951                           ; BSR set to: 0
 47952                           
 47953                           ; BSR set to: 0
 47954                           
 47955                           ; BSR set to: 0
 47956                           ;doprnt.c: 1147: break;
 47957  012862  0100               	movlb	0	; () banked
 47958  012864  2B86               	incf	i2sprintf@c& (0+255),f,b
 47959  012866  D7DA               	goto	L51
 47960  012868                     i2l11290:
 47961                           
 47962                           ; BSR set to: 0
 47963                           ;doprnt.c: 1151: width -= prec + c + exp;
 47964  012868  0100               	movlb	0	; () banked
 47965  01286A  C086  F050         	movff	i2sprintf@c,??i2_sprintf
 47966  01286E  6A51               	clrf	(??i2_sprintf+1)& (0+255),c
 47967  012870  BE50               	btfsc	??i2_sprintf& (0+255),7,c
 47968  012872  0651               	decf	(??i2_sprintf+1)& (0+255),f,c
 47969  012874  0100               	movlb	0	; () banked
 47970  012876  5184               	movf	i2sprintf@prec& (0+255),w,b
 47971  012878  2650               	addwf	??i2_sprintf,f,c
 47972  01287A  0100               	movlb	0	; () banked
 47973  01287C  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 47974  01287E  2251               	addwfc	??i2_sprintf+1,f,c
 47975  012880  0100               	movlb	0	; () banked
 47976  012882  517F               	movf	i2sprintf@exp& (0+255),w,b
 47977  012884  2650               	addwf	??i2_sprintf,f,c
 47978  012886  0100               	movlb	0	; () banked
 47979  012888  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 47980  01288A  2251               	addwfc	??i2_sprintf+1,f,c
 47981  01288C  5050               	movf	??i2_sprintf,w,c
 47982  01288E  0100               	movlb	0	; () banked
 47983  012890  5F7D               	subwf	i2sprintf@width& (0+255),f,b
 47984  012892  5051               	movf	??i2_sprintf+1,w,c
 47985  012894  0100               	movlb	0	; () banked
 47986  012896  5B7E               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 47987                           
 47988                           ;doprnt.c: 1152: if(
 47989                           ;doprnt.c: 1156: prec)
 47990  012898  0100               	movlb	0	; () banked
 47991  01289A  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 47992  01289C  1184               	iorwf	i2sprintf@prec& (0+255),w,b
 47993  01289E  B4D8               	btfsc	status,2,c
 47994  0128A0  D004               	goto	i2l11294
 47995                           
 47996                           ; BSR set to: 0
 47997                           ;doprnt.c: 1157: width--;
 47998  0128A2  0100               	movlb	0	; () banked
 47999  0128A4  077D               	decf	i2sprintf@width& (0+255),f,b
 48000  0128A6  A0D8               	btfss	status,0,c
 48001  0128A8  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 48002  0128AA                     i2l11294:
 48003                           
 48004                           ; BSR set to: 0
 48005                           ;doprnt.c: 1158: if(flag & 0x03)
 48006  0128AA  0E03               	movlw	3
 48007  0128AC  0100               	movlb	0	; () banked
 48008  0128AE  157B               	andwf	i2sprintf@flag& (0+255),w,b
 48009  0128B0  6E50               	movwf	??i2_sprintf& (0+255),c
 48010  0128B2  0E00               	movlw	0
 48011  0128B4  0100               	movlb	0	; () banked
 48012  0128B6  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48013  0128B8  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48014  0128BA  5051               	movf	??i2_sprintf+1,w,c
 48015  0128BC  1050               	iorwf	??i2_sprintf,w,c
 48016  0128BE  B4D8               	btfsc	status,2,c
 48017  0128C0  D010               	goto	i2l11306
 48018  0128C2  D00B               	goto	L52
 48019  0128C4                     i2l11298:
 48020                           
 48021                           ; BSR set to: 0
 48022                           ;doprnt.c: 1190: ((*sp++ = (' ')),(++ccnt));
 48023  0128C4  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48024  0128C8  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48025  0128CC  0E20               	movlw	32
 48026  0128CE  6EDF               	movwf	indf2,c
 48027                           
 48028                           ; BSR set to: 0
 48029  0128D0  4A49               	infsnz	i2sprintf@sp,f,c
 48030  0128D2  2A4A               	incf	i2sprintf@sp+1,f,c
 48031                           
 48032                           ; BSR set to: 0
 48033  0128D4  0100               	movlb	0	; () banked
 48034  0128D6  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48035  0128D8  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48036  0128DA                     L52:
 48037                           
 48038                           ; BSR set to: 0
 48039                           ;doprnt.c: 1191: width--;
 48040  0128DA  0100               	movlb	0	; () banked
 48041  0128DC  077D               	decf	i2sprintf@width& (0+255),f,b
 48042  0128DE  A0D8               	btfss	status,0,c
 48043  0128E0  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 48044  0128E2                     i2l11306:
 48045                           
 48046                           ; BSR set to: 0
 48047  0128E2  0100               	movlb	0	; () banked
 48048  0128E4  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48049  0128E6  0A80               	xorlw	128
 48050  0128E8  6EF3               	movwf	prodl,c
 48051  0128EA  0E80               	movlw	128
 48052  0128EC  5CF3               	subwf	prodl,w,c
 48053  0128EE  0E01               	movlw	1
 48054  0128F0  B4D8               	btfsc	status,2,c
 48055  0128F2  5D7D               	subwf	i2sprintf@width& (0+255),w,b
 48056  0128F4  B0D8               	btfsc	status,0,c
 48057  0128F6  D7E6               	goto	i2l11298
 48058                           
 48059                           ; BSR set to: 0
 48060                           ;doprnt.c: 1192: }
 48061                           ;doprnt.c: 1197: if(flag & 0x03)
 48062                           
 48063                           ; BSR set to: 0
 48064  0128F8  0E03               	movlw	3
 48065  0128FA  0100               	movlb	0	; () banked
 48066  0128FC  157B               	andwf	i2sprintf@flag& (0+255),w,b
 48067  0128FE  6E50               	movwf	??i2_sprintf& (0+255),c
 48068  012900  0E00               	movlw	0
 48069  012902  0100               	movlb	0	; () banked
 48070  012904  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48071  012906  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48072  012908  5051               	movf	??i2_sprintf+1,w,c
 48073  01290A  1050               	iorwf	??i2_sprintf,w,c
 48074  01290C  B4D8               	btfsc	status,2,c
 48075  01290E  D057               	goto	i2l11326
 48076                           
 48077                           ; BSR set to: 0
 48078                           ;doprnt.c: 1199: ((*sp++ = ('-')),(++ccnt));
 48079  012910  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48080  012914  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48081  012918  0E2D               	movlw	45
 48082  01291A  D04B               	goto	L53
 48083  01291C                     i2l11316:
 48084                           
 48085                           ; BSR set to: 0
 48086                           ;doprnt.c: 1209: {
 48087                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
 48088  01291C  C076  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 48089  012920  C077  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 48090  012924  C078  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 48091  012928  C079  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 48092  01292C  0100               	movlb	0	; () banked
 48093  01292E  5186               	movf	i2sprintf@c& (0+255),w,b
 48094  012930  0D04               	mullw	4
 48095  012932  0E95               	movlw	low _dpowers
 48096  012934  24F3               	addwf	prodl,w,c
 48097  012936  6EF6               	movwf	tblptrl,c
 48098  012938  0EFE               	movlw	high _dpowers
 48099  01293A  20F4               	addwfc	prodh,w,c
 48100  01293C  6EF7               	movwf	tblptrh,c
 48101  01293E                     	if	1	;There are 3 active tblptr bytes
 48102  01293E  6AF8               	clrf	tblptru,c
 48103  012940  0E00               	movlw	low (__mediumconst shr (0+16))
 48104  012942  22F8               	addwfc	tblptru,f,c
 48105  012944                     	endif
 48106  012944  0009               	tblrd		*+
 48107  012946  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 48108  01294A  0009               	tblrd		*+
 48109  01294C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 48110  012950  0009               	tblrd		*+
 48111  012952  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 48112  012956  000A               	tblrd		*-
 48113  012958  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 48114  01295C  ECAD  F0D4         	call	i2___lldiv	;wreg free
 48115  012960  C001  F069         	movff	?i2___lldiv,i2sprintf@vd
 48116  012964  C002  F06A         	movff	?i2___lldiv+1,i2sprintf@vd+1
 48117  012968  C003  F06B         	movff	?i2___lldiv+2,i2sprintf@vd+2
 48118  01296C  C004  F06C         	movff	?i2___lldiv+3,i2sprintf@vd+3
 48119                           
 48120                           ;doprnt.c: 1211: vd %= 10;
 48121  012970  C069  F001         	movff	i2sprintf@vd,i2___llmod@dividend
 48122  012974  C06A  F002         	movff	i2sprintf@vd+1,i2___llmod@dividend+1
 48123  012978  C06B  F003         	movff	i2sprintf@vd+2,i2___llmod@dividend+2
 48124  01297C  C06C  F004         	movff	i2sprintf@vd+3,i2___llmod@dividend+3
 48125  012980  0E0A               	movlw	10
 48126  012982  6E05               	movwf	i2___llmod@divisor,c
 48127  012984  0E00               	movlw	0
 48128  012986  6E06               	movwf	i2___llmod@divisor+1,c
 48129  012988  0E00               	movlw	0
 48130  01298A  6E07               	movwf	i2___llmod@divisor+2,c
 48131  01298C  0E00               	movlw	0
 48132  01298E  6E08               	movwf	i2___llmod@divisor+3,c
 48133  012990  ECAF  F0D6         	call	i2___llmod	;wreg free
 48134  012994  C001  F069         	movff	?i2___llmod,i2sprintf@vd
 48135  012998  C002  F06A         	movff	?i2___llmod+1,i2sprintf@vd+1
 48136  01299C  C003  F06B         	movff	?i2___llmod+2,i2sprintf@vd+2
 48137  0129A0  C004  F06C         	movff	?i2___llmod+3,i2sprintf@vd+3
 48138                           
 48139                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)),(++ccnt));
 48140  0129A4  0100               	movlb	0	; () banked
 48141  0129A6  5169               	movf	i2sprintf@vd& (0+255),w,b
 48142  0129A8  0F30               	addlw	48
 48143  0129AA  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48144  0129AE  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48145  0129B2                     L53:
 48146  0129B2  6EDF               	movwf	indf2,c
 48147                           
 48148                           ; BSR set to: 0
 48149  0129B4  4A49               	infsnz	i2sprintf@sp,f,c
 48150  0129B6  2A4A               	incf	i2sprintf@sp+1,f,c
 48151                           
 48152                           ; BSR set to: 0
 48153  0129B8  0100               	movlb	0	; () banked
 48154  0129BA  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48155  0129BC  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48156  0129BE                     i2l11326:
 48157                           
 48158                           ; BSR set to: 0
 48159  0129BE  0100               	movlb	0	; () banked
 48160  0129C0  0786               	decf	i2sprintf@c& (0+255),f,b
 48161  0129C2  0100               	movlb	0	; () banked
 48162  0129C4  2986               	incf	i2sprintf@c& (0+255),w,b
 48163  0129C6  B4D8               	btfsc	status,2,c
 48164  0129C8  D010               	goto	i2l11336
 48165  0129CA  D7A8               	goto	i2l11316
 48166  0129CC                     i2l11328:
 48167                           
 48168                           ; BSR set to: 0
 48169                           ;doprnt.c: 1217: ((*sp++ = ('0')),(++ccnt));
 48170  0129CC  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48171  0129D0  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48172  0129D4  0E30               	movlw	48
 48173  0129D6  6EDF               	movwf	indf2,c
 48174                           
 48175                           ; BSR set to: 0
 48176  0129D8  4A49               	infsnz	i2sprintf@sp,f,c
 48177  0129DA  2A4A               	incf	i2sprintf@sp+1,f,c
 48178                           
 48179                           ; BSR set to: 0
 48180  0129DC  0100               	movlb	0	; () banked
 48181  0129DE  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48182  0129E0  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48183                           
 48184                           ; BSR set to: 0
 48185                           ;doprnt.c: 1218: exp--;
 48186  0129E2  0100               	movlb	0	; () banked
 48187  0129E4  077F               	decf	i2sprintf@exp& (0+255),f,b
 48188  0129E6  A0D8               	btfss	status,0,c
 48189  0129E8  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 48190  0129EA                     i2l11336:
 48191                           
 48192                           ; BSR set to: 0
 48193  0129EA  0100               	movlb	0	; () banked
 48194  0129EC  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 48195  0129EE  0A80               	xorlw	128
 48196  0129F0  6EF3               	movwf	prodl,c
 48197  0129F2  0E80               	movlw	128
 48198  0129F4  5CF3               	subwf	prodl,w,c
 48199  0129F6  0E01               	movlw	1
 48200  0129F8  B4D8               	btfsc	status,2,c
 48201  0129FA  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 48202  0129FC  B0D8               	btfsc	status,0,c
 48203  0129FE  D7E6               	goto	i2l11328
 48204                           
 48205                           ; BSR set to: 0
 48206                           ;doprnt.c: 1219: }
 48207                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 48208                           
 48209                           ; BSR set to: 0
 48210  012A00  0100               	movlb	0	; () banked
 48211  012A02  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48212  012A04  0A80               	xorlw	128
 48213  012A06  0F80               	addlw	-128
 48214  012A08  0E09               	movlw	9
 48215  012A0A  B4D8               	btfsc	status,2,c
 48216  012A0C  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 48217  012A0E  A0D8               	btfss	status,0,c
 48218  012A10  D004               	goto	i2l2073
 48219                           
 48220                           ; BSR set to: 0
 48221                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
 48222  012A12  0E08               	movlw	8
 48223  012A14  0100               	movlb	0	; () banked
 48224  012A16  6F86               	movwf	i2sprintf@c& (0+255),b
 48225  012A18  D002               	goto	i2l11342
 48226  012A1A                     i2l2073:
 48227                           
 48228                           ; BSR set to: 0
 48229                           ;doprnt.c: 1222: else
 48230                           ;doprnt.c: 1223: c = prec;
 48231  012A1A  C084  F086         	movff	i2sprintf@prec,i2sprintf@c
 48232  012A1E                     i2l11342:
 48233                           
 48234                           ; BSR set to: 0
 48235                           ;doprnt.c: 1224: prec -= c;
 48236  012A1E  0100               	movlb	0	; () banked
 48237  012A20  5186               	movf	i2sprintf@c& (0+255),w,b
 48238  012A22  0100               	movlb	0	; () banked
 48239  012A24  5F84               	subwf	i2sprintf@prec& (0+255),f,b
 48240  012A26  0E00               	movlw	0
 48241  012A28  0100               	movlb	0	; () banked
 48242  012A2A  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 48243  012A2C  0EFF               	movlw	255
 48244  012A2E  0100               	movlb	0	; () banked
 48245  012A30  5B85               	subwfb	(i2sprintf@prec+1)& (0+255),f,b
 48246                           
 48247                           ; BSR set to: 0
 48248                           ;doprnt.c: 1228: if(c)
 48249  012A32  0100               	movlb	0	; () banked
 48250  012A34  5186               	movf	i2sprintf@c& (0+255),w,b
 48251  012A36  B4D8               	btfsc	status,2,c
 48252  012A38  D00B               	goto	i2l11352
 48253                           
 48254                           ; BSR set to: 0
 48255                           ;doprnt.c: 1230: ((*sp++ = ('.')),(++ccnt));
 48256  012A3A  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48257  012A3E  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48258  012A42  0E2E               	movlw	46
 48259  012A44  6EDF               	movwf	indf2,c
 48260                           
 48261                           ; BSR set to: 0
 48262  012A46  4A49               	infsnz	i2sprintf@sp,f,c
 48263  012A48  2A4A               	incf	i2sprintf@sp+1,f,c
 48264                           
 48265                           ; BSR set to: 0
 48266  012A4A  0100               	movlb	0	; () banked
 48267  012A4C  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48268  012A4E  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48269  012A50                     i2l11352:
 48270                           
 48271                           ; BSR set to: 0
 48272                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 48273  012A50  0100               	movlb	0	; () banked
 48274  012A52  5186               	movf	i2sprintf@c& (0+255),w,b
 48275  012A54  ECBC  F0FD         	call	i2_scale
 48276  012A58  C024  F060         	movff	?i2_scale,i2_sprintf$11268
 48277  012A5C  C025  F061         	movff	?i2_scale+1,i2_sprintf$11268+1
 48278  012A60  C026  F062         	movff	?i2_scale+2,i2_sprintf$11268+2
 48279                           
 48280                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 48281  012A64  C081  F018         	movff	i2sprintf@fval,i2___ftmul@f2
 48282  012A68  C082  F019         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 48283  012A6C  C083  F01A         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 48284  012A70  C060  F015         	movff	i2_sprintf$11268,i2___ftmul@f1
 48285  012A74  C061  F016         	movff	i2_sprintf$11268+1,i2___ftmul@f1+1
 48286  012A78  C062  F017         	movff	i2_sprintf$11268+2,i2___ftmul@f1+2
 48287  012A7C  EC6D  F0C8         	call	i2___ftmul	;wreg free
 48288  012A80  C015  F03A         	movff	?i2___ftmul,i2___fttol@f1
 48289  012A84  C016  F03B         	movff	?i2___ftmul+1,i2___fttol@f1+1
 48290  012A88  C017  F03C         	movff	?i2___ftmul+2,i2___fttol@f1+2
 48291  012A8C  ECF2  F0C7         	call	i2___fttol	;wreg free
 48292  012A90  C03A  F076         	movff	?i2___fttol,i2sprintf@_val
 48293  012A94  C03B  F077         	movff	?i2___fttol+1,i2sprintf@_val+1
 48294  012A98  C03C  F078         	movff	?i2___fttol+2,i2sprintf@_val+2
 48295  012A9C  C03D  F079         	movff	?i2___fttol+3,i2sprintf@_val+3
 48296                           
 48297                           ;doprnt.c: 1237: while(c--) {
 48298  012AA0  D07B               	goto	i2l11368
 48299  012AA2                     i2l11356:
 48300                           
 48301                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
 48302  012AA2  C076  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 48303  012AA6  C077  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 48304  012AAA  C078  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 48305  012AAE  C079  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 48306  012AB2  0100               	movlb	0	; () banked
 48307  012AB4  5186               	movf	i2sprintf@c& (0+255),w,b
 48308  012AB6  0D04               	mullw	4
 48309  012AB8  0E95               	movlw	low _dpowers
 48310  012ABA  24F3               	addwf	prodl,w,c
 48311  012ABC  6EF6               	movwf	tblptrl,c
 48312  012ABE  0EFE               	movlw	high _dpowers
 48313  012AC0  20F4               	addwfc	prodh,w,c
 48314  012AC2  6EF7               	movwf	tblptrh,c
 48315  012AC4                     	if	1	;There are 3 active tblptr bytes
 48316  012AC4  6AF8               	clrf	tblptru,c
 48317  012AC6  0E00               	movlw	low (__mediumconst shr (0+16))
 48318  012AC8  22F8               	addwfc	tblptru,f,c
 48319  012ACA                     	endif
 48320  012ACA  0009               	tblrd		*+
 48321  012ACC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 48322  012AD0  0009               	tblrd		*+
 48323  012AD2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 48324  012AD6  0009               	tblrd		*+
 48325  012AD8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 48326  012ADC  000A               	tblrd		*-
 48327  012ADE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 48328  012AE2  ECAD  F0D4         	call	i2___lldiv	;wreg free
 48329  012AE6  C001  F06D         	movff	?i2___lldiv,i2sprintf@vd_9351
 48330  012AEA  C002  F06E         	movff	?i2___lldiv+1,i2sprintf@vd_9351+1
 48331  012AEE  C003  F06F         	movff	?i2___lldiv+2,i2sprintf@vd_9351+2
 48332  012AF2  C004  F070         	movff	?i2___lldiv+3,i2sprintf@vd_9351+3
 48333                           
 48334                           ;doprnt.c: 1239: vd %= 10;
 48335  012AF6  C06D  F001         	movff	i2sprintf@vd_9351,i2___llmod@dividend
 48336  012AFA  C06E  F002         	movff	i2sprintf@vd_9351+1,i2___llmod@dividend+1
 48337  012AFE  C06F  F003         	movff	i2sprintf@vd_9351+2,i2___llmod@dividend+2
 48338  012B02  C070  F004         	movff	i2sprintf@vd_9351+3,i2___llmod@dividend+3
 48339  012B06  0E0A               	movlw	10
 48340  012B08  6E05               	movwf	i2___llmod@divisor,c
 48341  012B0A  0E00               	movlw	0
 48342  012B0C  6E06               	movwf	i2___llmod@divisor+1,c
 48343  012B0E  0E00               	movlw	0
 48344  012B10  6E07               	movwf	i2___llmod@divisor+2,c
 48345  012B12  0E00               	movlw	0
 48346  012B14  6E08               	movwf	i2___llmod@divisor+3,c
 48347  012B16  ECAF  F0D6         	call	i2___llmod	;wreg free
 48348  012B1A  C001  F06D         	movff	?i2___llmod,i2sprintf@vd_9351
 48349  012B1E  C002  F06E         	movff	?i2___llmod+1,i2sprintf@vd_9351+1
 48350  012B22  C003  F06F         	movff	?i2___llmod+2,i2sprintf@vd_9351+2
 48351  012B26  C004  F070         	movff	?i2___llmod+3,i2sprintf@vd_9351+3
 48352                           
 48353                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)),(++ccnt));
 48354  012B2A  0100               	movlb	0	; () banked
 48355  012B2C  516D               	movf	i2sprintf@vd_9351& (0+255),w,b
 48356  012B2E  0F30               	addlw	48
 48357  012B30  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48358  012B34  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48359  012B38  6EDF               	movwf	indf2,c
 48360                           
 48361                           ; BSR set to: 0
 48362  012B3A  4A49               	infsnz	i2sprintf@sp,f,c
 48363  012B3C  2A4A               	incf	i2sprintf@sp+1,f,c
 48364                           
 48365                           ; BSR set to: 0
 48366  012B3E  0100               	movlb	0	; () banked
 48367  012B40  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48368  012B42  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48369                           
 48370                           ; BSR set to: 0
 48371                           ;doprnt.c: 1241: _val._val %= dpowers[c];
 48372  012B44  C076  F001         	movff	i2sprintf@_val,i2___llmod@dividend
 48373  012B48  C077  F002         	movff	i2sprintf@_val+1,i2___llmod@dividend+1
 48374  012B4C  C078  F003         	movff	i2sprintf@_val+2,i2___llmod@dividend+2
 48375  012B50  C079  F004         	movff	i2sprintf@_val+3,i2___llmod@dividend+3
 48376  012B54  0100               	movlb	0	; () banked
 48377  012B56  5186               	movf	i2sprintf@c& (0+255),w,b
 48378  012B58  0D04               	mullw	4
 48379  012B5A  0E95               	movlw	low _dpowers
 48380  012B5C  24F3               	addwf	prodl,w,c
 48381  012B5E  6EF6               	movwf	tblptrl,c
 48382  012B60  0EFE               	movlw	high _dpowers
 48383  012B62  20F4               	addwfc	prodh,w,c
 48384  012B64  6EF7               	movwf	tblptrh,c
 48385  012B66                     	if	1	;There are 3 active tblptr bytes
 48386  012B66  6AF8               	clrf	tblptru,c
 48387  012B68  0E00               	movlw	low (__mediumconst shr (0+16))
 48388  012B6A  22F8               	addwfc	tblptru,f,c
 48389  012B6C                     	endif
 48390  012B6C  0009               	tblrd		*+
 48391  012B6E  CFF5 F005          	movff	tablat,i2___llmod@divisor
 48392  012B72  0009               	tblrd		*+
 48393  012B74  CFF5 F006          	movff	tablat,i2___llmod@divisor+1
 48394  012B78  0009               	tblrd		*+
 48395  012B7A  CFF5 F007          	movff	tablat,i2___llmod@divisor+2
 48396  012B7E  000A               	tblrd		*-
 48397  012B80  CFF5 F008          	movff	tablat,i2___llmod@divisor+3
 48398  012B84  ECAF  F0D6         	call	i2___llmod	;wreg free
 48399  012B88  C001  F076         	movff	?i2___llmod,i2sprintf@_val
 48400  012B8C  C002  F077         	movff	?i2___llmod+1,i2sprintf@_val+1
 48401  012B90  C003  F078         	movff	?i2___llmod+2,i2sprintf@_val+2
 48402  012B94  C004  F079         	movff	?i2___llmod+3,i2sprintf@_val+3
 48403  012B98                     i2l11368:
 48404  012B98  0100               	movlb	0	; () banked
 48405  012B9A  0786               	decf	i2sprintf@c& (0+255),f,b
 48406  012B9C  0100               	movlb	0	; () banked
 48407  012B9E  2986               	incf	i2sprintf@c& (0+255),w,b
 48408  012BA0  B4D8               	btfsc	status,2,c
 48409  012BA2  D010               	goto	i2l11378
 48410  012BA4  D77E               	goto	i2l11356
 48411  012BA6                     i2l11370:
 48412                           
 48413                           ; BSR set to: 0
 48414                           ;doprnt.c: 1245: ((*sp++ = ('0')),(++ccnt));
 48415  012BA6  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48416  012BAA  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48417  012BAE  0E30               	movlw	48
 48418  012BB0  6EDF               	movwf	indf2,c
 48419                           
 48420                           ; BSR set to: 0
 48421  012BB2  4A49               	infsnz	i2sprintf@sp,f,c
 48422  012BB4  2A4A               	incf	i2sprintf@sp+1,f,c
 48423                           
 48424                           ; BSR set to: 0
 48425  012BB6  0100               	movlb	0	; () banked
 48426  012BB8  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48427  012BBA  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48428                           
 48429                           ; BSR set to: 0
 48430                           ;doprnt.c: 1246: prec--;
 48431  012BBC  0100               	movlb	0	; () banked
 48432  012BBE  0784               	decf	i2sprintf@prec& (0+255),f,b
 48433  012BC0  A0D8               	btfss	status,0,c
 48434  012BC2  0785               	decf	(i2sprintf@prec+1)& (0+255),f,b
 48435  012BC4                     i2l11378:
 48436                           
 48437                           ; BSR set to: 0
 48438  012BC4  0100               	movlb	0	; () banked
 48439  012BC6  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48440  012BC8  1184               	iorwf	i2sprintf@prec& (0+255),w,b
 48441  012BCA  B4D8               	btfsc	status,2,c
 48442  012BCC  D0BF               	goto	i2l11432
 48443  012BCE  D7EB               	goto	i2l11370
 48444  012BD0                     i2l11380:
 48445                           
 48446                           ; BSR set to: 0
 48447                           ;doprnt.c: 1255: }
 48448                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 48449  012BD0  0100               	movlb	0	; () banked
 48450  012BD2  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48451  012BD4  1184               	iorwf	i2sprintf@prec& (0+255),w,b
 48452  012BD6  A4D8               	btfss	status,2,c
 48453  012BD8  D00A               	goto	i2l11386
 48454                           
 48455                           ; BSR set to: 0
 48456  012BDA  0100               	movlb	0	; () banked
 48457  012BDC  5179               	movf	(i2sprintf@_val+3)& (0+255),w,b
 48458  012BDE  1176               	iorwf	i2sprintf@_val& (0+255),w,b
 48459  012BE0  1177               	iorwf	(i2sprintf@_val+1)& (0+255),w,b
 48460  012BE2  1178               	iorwf	(i2sprintf@_val+2)& (0+255),w,b
 48461  012BE4  A4D8               	btfss	status,2,c
 48462  012BE6  D003               	goto	i2l11386
 48463                           
 48464                           ; BSR set to: 0
 48465                           ;doprnt.c: 1300: prec++;
 48466  012BE8  0100               	movlb	0	; () banked
 48467  012BEA  4B84               	infsnz	i2sprintf@prec& (0+255),f,b
 48468  012BEC  2B85               	incf	(i2sprintf@prec+1)& (0+255),f,b
 48469  012BEE                     i2l11386:
 48470                           
 48471                           ; BSR set to: 0
 48472                           ;doprnt.c: 1348: if(c < prec)
 48473  012BEE  0E80               	movlw	128
 48474  012BF0  0100               	movlb	0	; () banked
 48475  012BF2  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 48476  012BF4  0E7F               	movlw	127
 48477  012BF6  6E50               	movwf	??i2_sprintf& (0+255),c
 48478  012BF8  0100               	movlb	0	; () banked
 48479  012BFA  5184               	movf	i2sprintf@prec& (0+255),w,b
 48480  012BFC  0100               	movlb	0	; () banked
 48481  012BFE  5D86               	subwf	i2sprintf@c& (0+255),w,b
 48482  012C00  0100               	movlb	0	; () banked
 48483  012C02  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48484  012C04  0A80               	xorlw	128
 48485  012C06  5850               	subwfb	??i2_sprintf& (0+255),w,c
 48486  012C08  B0D8               	btfsc	status,0,c
 48487  012C0A  D003               	goto	i2l11390
 48488                           
 48489                           ; BSR set to: 0
 48490                           ;doprnt.c: 1349: c = prec;
 48491  012C0C  C084  F086         	movff	i2sprintf@prec,i2sprintf@c
 48492  012C10  D018               	goto	i2l11394
 48493  012C12                     i2l11390:
 48494                           
 48495                           ; BSR set to: 0
 48496                           ;doprnt.c: 1350: else if(prec < c)
 48497  012C12  0100               	movlb	0	; () banked
 48498  012C14  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48499  012C16  0A80               	xorlw	128
 48500  012C18  6E50               	movwf	??i2_sprintf& (0+255),c
 48501  012C1A  0100               	movlb	0	; () banked
 48502  012C1C  5186               	movf	i2sprintf@c& (0+255),w,b
 48503  012C1E  0100               	movlb	0	; () banked
 48504  012C20  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 48505  012C22  0E80               	movlw	128
 48506  012C24  0100               	movlb	0	; () banked
 48507  012C26  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 48508  012C28  0E7F               	movlw	127
 48509  012C2A  5850               	subwfb	??i2_sprintf& (0+255),w,c
 48510  012C2C  B0D8               	btfsc	status,0,c
 48511  012C2E  D009               	goto	i2l11394
 48512                           
 48513                           ; BSR set to: 0
 48514                           ;doprnt.c: 1351: prec = c;
 48515  012C30  0100               	movlb	0	; () banked
 48516  012C32  5186               	movf	i2sprintf@c& (0+255),w,b
 48517  012C34  0100               	movlb	0	; () banked
 48518  012C36  6F84               	movwf	i2sprintf@prec& (0+255),b
 48519  012C38  0100               	movlb	0	; () banked
 48520  012C3A  6B85               	clrf	(i2sprintf@prec+1)& (0+255),b
 48521  012C3C  0100               	movlb	0	; () banked
 48522  012C3E  BF84               	btfsc	i2sprintf@prec& (0+255),7,b
 48523  012C40  0785               	decf	(i2sprintf@prec+1)& (0+255),f,b
 48524  012C42                     i2l11394:
 48525                           
 48526                           ; BSR set to: 0
 48527                           ;doprnt.c: 1354: if(width && flag & 0x03)
 48528  012C42  0100               	movlb	0	; () banked
 48529  012C44  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48530  012C46  117D               	iorwf	i2sprintf@width& (0+255),w,b
 48531  012C48  B4D8               	btfsc	status,2,c
 48532  012C4A  D010               	goto	i2l11400
 48533                           
 48534                           ; BSR set to: 0
 48535  012C4C  0E03               	movlw	3
 48536  012C4E  0100               	movlb	0	; () banked
 48537  012C50  157B               	andwf	i2sprintf@flag& (0+255),w,b
 48538  012C52  6E50               	movwf	??i2_sprintf& (0+255),c
 48539  012C54  0E00               	movlw	0
 48540  012C56  0100               	movlb	0	; () banked
 48541  012C58  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48542  012C5A  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48543  012C5C  5051               	movf	??i2_sprintf+1,w,c
 48544  012C5E  1050               	iorwf	??i2_sprintf,w,c
 48545  012C60  B4D8               	btfsc	status,2,c
 48546  012C62  D004               	goto	i2l11400
 48547                           
 48548                           ; BSR set to: 0
 48549                           ;doprnt.c: 1355: width--;
 48550  012C64  0100               	movlb	0	; () banked
 48551  012C66  077D               	decf	i2sprintf@width& (0+255),f,b
 48552  012C68  A0D8               	btfss	status,0,c
 48553  012C6A  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 48554  012C6C                     i2l11400:
 48555                           
 48556                           ; BSR set to: 0
 48557                           ;doprnt.c: 1357: if(flag & 0x4000) {
 48558  012C6C  0100               	movlb	0	; () banked
 48559  012C6E  AD7C               	btfss	(i2sprintf@flag+1)& (0+255),6,b
 48560  012C70  D01D               	goto	i2l11408
 48561                           
 48562                           ; BSR set to: 0
 48563                           ;doprnt.c: 1358: if(width > prec)
 48564  012C72  0100               	movlb	0	; () banked
 48565  012C74  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48566  012C76  0A80               	xorlw	128
 48567  012C78  6E50               	movwf	??i2_sprintf& (0+255),c
 48568  012C7A  0100               	movlb	0	; () banked
 48569  012C7C  517D               	movf	i2sprintf@width& (0+255),w,b
 48570  012C7E  0100               	movlb	0	; () banked
 48571  012C80  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 48572  012C82  0100               	movlb	0	; () banked
 48573  012C84  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48574  012C86  0A80               	xorlw	128
 48575  012C88  5850               	subwfb	??i2_sprintf& (0+255),w,c
 48576  012C8A  B0D8               	btfsc	status,0,c
 48577  012C8C  D009               	goto	i2l11406
 48578                           
 48579                           ; BSR set to: 0
 48580                           ;doprnt.c: 1359: width -= prec;
 48581  012C8E  0100               	movlb	0	; () banked
 48582  012C90  5184               	movf	i2sprintf@prec& (0+255),w,b
 48583  012C92  0100               	movlb	0	; () banked
 48584  012C94  5F7D               	subwf	i2sprintf@width& (0+255),f,b
 48585  012C96  0100               	movlb	0	; () banked
 48586  012C98  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48587  012C9A  0100               	movlb	0	; () banked
 48588  012C9C  5B7E               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 48589  012C9E  D006               	goto	i2l11408
 48590  012CA0                     i2l11406:
 48591                           
 48592                           ; BSR set to: 0
 48593                           ;doprnt.c: 1360: else
 48594                           ;doprnt.c: 1361: width = 0;
 48595  012CA0  0E00               	movlw	0
 48596  012CA2  0100               	movlb	0	; () banked
 48597  012CA4  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 48598  012CA6  0E00               	movlw	0
 48599  012CA8  0100               	movlb	0	; () banked
 48600  012CAA  6F7D               	movwf	i2sprintf@width& (0+255),b
 48601  012CAC                     i2l11408:
 48602                           
 48603                           ; BSR set to: 0
 48604                           ;doprnt.c: 1362: }
 48605                           ;doprnt.c: 1390: if(width > c)
 48606  012CAC  0E80               	movlw	128
 48607  012CAE  0100               	movlb	0	; () banked
 48608  012CB0  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 48609  012CB2  0E7F               	movlw	127
 48610  012CB4  6E50               	movwf	??i2_sprintf& (0+255),c
 48611  012CB6  0100               	movlb	0	; () banked
 48612  012CB8  517D               	movf	i2sprintf@width& (0+255),w,b
 48613  012CBA  0100               	movlb	0	; () banked
 48614  012CBC  5D86               	subwf	i2sprintf@c& (0+255),w,b
 48615  012CBE  0100               	movlb	0	; () banked
 48616  012CC0  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48617  012CC2  0A80               	xorlw	128
 48618  012CC4  5850               	subwfb	??i2_sprintf& (0+255),w,c
 48619  012CC6  B0D8               	btfsc	status,0,c
 48620  012CC8  D00B               	goto	i2l11412
 48621                           
 48622                           ; BSR set to: 0
 48623                           ;doprnt.c: 1391: width -= c;
 48624  012CCA  0100               	movlb	0	; () banked
 48625  012CCC  5186               	movf	i2sprintf@c& (0+255),w,b
 48626  012CCE  0100               	movlb	0	; () banked
 48627  012CD0  5F7D               	subwf	i2sprintf@width& (0+255),f,b
 48628  012CD2  0E00               	movlw	0
 48629  012CD4  0100               	movlb	0	; () banked
 48630  012CD6  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 48631  012CD8  0EFF               	movlw	255
 48632  012CDA  0100               	movlb	0	; () banked
 48633  012CDC  5B7E               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 48634  012CDE  D006               	goto	i2l11414
 48635  012CE0                     i2l11412:
 48636                           
 48637                           ; BSR set to: 0
 48638                           ;doprnt.c: 1392: else
 48639                           ;doprnt.c: 1393: width = 0;
 48640  012CE0  0E00               	movlw	0
 48641  012CE2  0100               	movlb	0	; () banked
 48642  012CE4  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 48643  012CE6  0E00               	movlw	0
 48644  012CE8  0100               	movlb	0	; () banked
 48645  012CEA  6F7D               	movwf	i2sprintf@width& (0+255),b
 48646  012CEC                     i2l11414:
 48647                           
 48648                           ; BSR set to: 0
 48649                           ;doprnt.c: 1431: {
 48650                           ;doprnt.c: 1433: if(width
 48651                           ;doprnt.c: 1437: )
 48652  012CEC  0100               	movlb	0	; () banked
 48653  012CEE  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48654  012CF0  117D               	iorwf	i2sprintf@width& (0+255),w,b
 48655  012CF2  B4D8               	btfsc	status,2,c
 48656  012CF4  D014               	goto	i2l11424
 48657  012CF6                     i2l11416:
 48658                           
 48659                           ; BSR set to: 0
 48660                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
 48661  012CF6  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48662  012CFA  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48663  012CFE  0E20               	movlw	32
 48664  012D00  6EDF               	movwf	indf2,c
 48665                           
 48666                           ; BSR set to: 0
 48667  012D02  4A49               	infsnz	i2sprintf@sp,f,c
 48668  012D04  2A4A               	incf	i2sprintf@sp+1,f,c
 48669                           
 48670                           ; BSR set to: 0
 48671  012D06  0100               	movlb	0	; () banked
 48672  012D08  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48673  012D0A  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48674                           
 48675                           ; BSR set to: 0
 48676                           ;doprnt.c: 1440: while(--width);
 48677  012D0C  0100               	movlb	0	; () banked
 48678  012D0E  077D               	decf	i2sprintf@width& (0+255),f,b
 48679  012D10  A0D8               	btfss	status,0,c
 48680  012D12  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 48681  012D14  0100               	movlb	0	; () banked
 48682  012D16  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48683  012D18  117D               	iorwf	i2sprintf@width& (0+255),w,b
 48684  012D1A  A4D8               	btfss	status,2,c
 48685  012D1C  D7EC               	goto	i2l11416
 48686  012D1E                     i2l11424:
 48687                           
 48688                           ; BSR set to: 0
 48689                           ;doprnt.c: 1447: if(flag & 0x03)
 48690  012D1E  0E03               	movlw	3
 48691  012D20  0100               	movlb	0	; () banked
 48692  012D22  157B               	andwf	i2sprintf@flag& (0+255),w,b
 48693  012D24  6E50               	movwf	??i2_sprintf& (0+255),c
 48694  012D26  0E00               	movlw	0
 48695  012D28  0100               	movlb	0	; () banked
 48696  012D2A  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48697  012D2C  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48698  012D2E  5051               	movf	??i2_sprintf+1,w,c
 48699  012D30  1050               	iorwf	??i2_sprintf,w,c
 48700  012D32  B4D8               	btfsc	status,2,c
 48701  012D34  D00B               	goto	i2l11432
 48702                           
 48703                           ; BSR set to: 0
 48704                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
 48705  012D36  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48706  012D3A  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48707  012D3E  0E2D               	movlw	45
 48708  012D40  6EDF               	movwf	indf2,c
 48709  012D42                     L49:
 48710                           
 48711                           ; BSR set to: 0
 48712  012D42  4A49               	infsnz	i2sprintf@sp,f,c
 48713  012D44  2A4A               	incf	i2sprintf@sp+1,f,c
 48714                           
 48715                           ; BSR set to: 0
 48716  012D46  0100               	movlb	0	; () banked
 48717  012D48  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48718  012D4A  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48719  012D4C                     i2l11432:
 48720                           
 48721                           ; BSR set to: 0
 48722  012D4C  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 48723  012D50  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 48724  012D54  4A4B               	infsnz	i2sprintf@f,f,c
 48725  012D56  2A4C               	incf	i2sprintf@f+1,f,c
 48726  012D58                     	if	0	;tblptru may be non-zero
 48727  012D58                     	endif
 48728  012D58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48729  012D58  0E00               	movlw	low (__mediumconst shr (0+16))
 48730  012D5A  6EF8               	movwf	tblptru,c
 48731  012D5C                     	endif
 48732  012D5C  0008               	tblrd		*
 48733  012D5E  0100               	movlb	0	; () banked
 48734  012D60  CFF5 F086          	movff	tablat,i2sprintf@c
 48735  012D64  0100               	movlb	0	; () banked
 48736  012D66  6786               	tstfsz	i2sprintf@c& (0+255),b
 48737  012D68  EF8A  F091         	goto	i2l11156
 48738  012D6C                     i2l11434:
 48739                           
 48740                           ; BSR set to: 0
 48741                           ;doprnt.c: 1547: *sp = 0;
 48742  012D6C  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48743  012D70  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48744  012D74  0E00               	movlw	0
 48745  012D76  6EDF               	movwf	indf2,c
 48746                           
 48747                           ; BSR set to: 0
 48748                           ;doprnt.c: 1549: return ccnt;
 48749  012D78  C071  F049         	movff	i2sprintf@ccnt,?i2_sprintf
 48750  012D7C  C072  F04A         	movff	i2sprintf@ccnt+1,?i2_sprintf+1
 48751  012D80  0012               	return	
 48752  012D82                     __end_ofi2_sprintf:
 48753                           	opt stack 0
 48754                           pclatu	equ	0xFFB
 48755                           pclath	equ	0xFFA
 48756                           tblptru	equ	0xFF8
 48757                           tblptrh	equ	0xFF7
 48758                           tblptrl	equ	0xFF6
 48759                           tablat	equ	0xFF5
 48760                           prodh	equ	0xFF4
 48761                           prodl	equ	0xFF3
 48762                           intcon	equ	0xFF2
 48763                           intcon2	equ	0xFF1
 48764                           intcon3	equ	0xFF0
 48765                           indf0	equ	0xFEF
 48766                           postinc0	equ	0xFEE
 48767                           fsr0h	equ	0xFEA
 48768                           fsr0l	equ	0xFE9
 48769                           wreg	equ	0xFE8
 48770                           indf1	equ	0xFE7
 48771                           postinc1	equ	0xFE6
 48772                           postdec1	equ	0xFE5
 48773                           fsr1h	equ	0xFE2
 48774                           fsr1l	equ	0xFE1
 48775                           indf2	equ	0xFDF
 48776                           postinc2	equ	0xFDE
 48777                           postdec2	equ	0xFDD
 48778                           fsr2h	equ	0xFDA
 48779                           fsr2l	equ	0xFD9
 48780                           status	equ	0xFD8
 48781                           
 48782 ;; *************** function i2_scale *****************
 48783 ;; Defined at:
 48784 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 48785 ;; Parameters:    Size  Location     Type
 48786 ;;  scl             1    wreg     char 
 48787 ;; Auto vars:     Size  Location     Type
 48788 ;;  scl             1   41[COMRAM] char 
 48789 ;; Return value:  Size  Location     Type
 48790 ;;                  3   35[COMRAM] char 
 48791 ;; Registers used:
 48792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48793 ;; Tracked objects:
 48794 ;;		On entry : 0/0
 48795 ;;		On exit  : 0/0
 48796 ;;		Unchanged: 0/0
 48797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 48798 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48799 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48801 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 48802 ;;Total ram usage:        7 bytes
 48803 ;; Hardware stack levels used:    1
 48804 ;; Hardware stack levels required when called:    2
 48805 ;; This function calls:
 48806 ;;		i2___awdiv
 48807 ;;		i2___awmod
 48808 ;;		i2___ftmul
 48809 ;;		i2___wmul
 48810 ;; This function is called by:
 48811 ;;		i2_sprintf
 48812 ;; This function uses a non-reentrant model
 48813 ;;
 48814                           
 48815                           	psect	text141
 48816  01FB78                     __ptext141:
 48817                           	opt stack 0
 48818  01FB78                     i2_scale:
 48819                           	opt stack 13
 48820                           
 48821                           ; BSR set to: 0
 48822                           ;incstack = 0
 48823                           ;i2scale@scl stored from wreg
 48824  01FB78  6E2A               	movwf	i2scale@scl,c
 48825                           
 48826                           ;doprnt.c: 428: if(scl < 0) {
 48827  01FB7A  AE2A               	btfss	i2scale@scl,7,c
 48828  01FB7C  D113               	goto	i2l10592
 48829                           
 48830                           ;doprnt.c: 429: scl = -scl;
 48831  01FB7E  6C2A               	negf	i2scale@scl,c
 48832                           
 48833                           ;doprnt.c: 430: if(scl>=110)
 48834  01FB80  502A               	movf	i2scale@scl,w,c
 48835  01FB82  0A80               	xorlw	128
 48836  01FB84  0F12               	addlw	-238
 48837  01FB86  A0D8               	btfss	status,0,c
 48838  01FB88  D09A               	goto	i2l10582
 48839                           
 48840                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 48841  01FB8A  0E00               	movlw	0
 48842  01FB8C  6E12               	movwf	i2___wmul@multiplicand+1,c
 48843  01FB8E  0E03               	movlw	3
 48844  01FB90  6E11               	movwf	i2___wmul@multiplicand,c
 48845  01FB92  0E00               	movlw	0
 48846  01FB94  6E0A               	movwf	i2___awdiv@divisor+1,c
 48847  01FB96  0E0A               	movlw	10
 48848  01FB98  6E09               	movwf	i2___awdiv@divisor,c
 48849  01FB9A  0E00               	movlw	0
 48850  01FB9C  6E04               	movwf	i2___awmod@divisor+1,c
 48851  01FB9E  0E64               	movlw	100
 48852  01FBA0  6E03               	movwf	i2___awmod@divisor,c
 48853  01FBA2  502A               	movf	i2scale@scl,w,c
 48854  01FBA4  6E01               	movwf	i2___awmod@dividend,c
 48855  01FBA6  6A02               	clrf	i2___awmod@dividend+1,c
 48856  01FBA8  BE01               	btfsc	i2___awmod@dividend,7,c
 48857  01FBAA  0602               	decf	i2___awmod@dividend+1,f,c
 48858  01FBAC  EC0E  F0D3         	call	i2___awmod	;wreg free
 48859  01FBB0  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 48860  01FBB4  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 48861  01FBB8  EC89  F0D1         	call	i2___awdiv	;wreg free
 48862  01FBBC  0E09               	movlw	9
 48863  01FBBE  2407               	addwf	?i2___awdiv,w,c
 48864  01FBC0  6E0F               	movwf	i2___wmul@multiplier,c
 48865  01FBC2  0E00               	movlw	0
 48866  01FBC4  2008               	addwfc	?i2___awdiv+1,w,c
 48867  01FBC6  6E10               	movwf	i2___wmul@multiplier+1,c
 48868  01FBC8  EC83  F0DB         	call	i2___wmul	;wreg free
 48869  01FBCC  0EBD               	movlw	low __npowers_
 48870  01FBCE  240F               	addwf	?i2___wmul,w,c
 48871  01FBD0  6EF6               	movwf	tblptrl,c
 48872  01FBD2  0EFE               	movlw	high __npowers_
 48873  01FBD4  2010               	addwfc	?i2___wmul+1,w,c
 48874  01FBD6  6EF7               	movwf	tblptrh,c
 48875  01FBD8                     	if	1	;There are 3 active tblptr bytes
 48876  01FBD8  6AF8               	clrf	tblptru,c
 48877  01FBDA  0E00               	movlw	low (__mediumconst shr (0+16))
 48878  01FBDC  22F8               	addwfc	tblptru,f,c
 48879  01FBDE                     	endif
 48880  01FBDE  0009               	tblrd		*+
 48881  01FBE0  CFF5 F018          	movff	tablat,i2___ftmul@f2
 48882  01FBE4  0009               	tblrd		*+
 48883  01FBE6  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 48884  01FBEA  000A               	tblrd		*-
 48885  01FBEC  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 48886  01FBF0  0E00               	movlw	0
 48887  01FBF2  6E0A               	movwf	i2___awdiv@divisor+1,c
 48888  01FBF4  0E64               	movlw	100
 48889  01FBF6  6E09               	movwf	i2___awdiv@divisor,c
 48890  01FBF8  502A               	movf	i2scale@scl,w,c
 48891  01FBFA  6E07               	movwf	i2___awdiv@dividend,c
 48892  01FBFC  6A08               	clrf	i2___awdiv@dividend+1,c
 48893  01FBFE  BE07               	btfsc	i2___awdiv@dividend,7,c
 48894  01FC00  0608               	decf	i2___awdiv@dividend+1,f,c
 48895  01FC02  EC89  F0D1         	call	i2___awdiv	;wreg free
 48896  01FC06  0E12               	movlw	18
 48897  01FC08  2407               	addwf	?i2___awdiv,w,c
 48898  01FC0A  6E0F               	movwf	i2___wmul@multiplier,c
 48899  01FC0C  0E00               	movlw	0
 48900  01FC0E  2008               	addwfc	?i2___awdiv+1,w,c
 48901  01FC10  6E10               	movwf	i2___wmul@multiplier+1,c
 48902  01FC12  0E00               	movlw	0
 48903  01FC14  6E12               	movwf	i2___wmul@multiplicand+1,c
 48904  01FC16  0E03               	movlw	3
 48905  01FC18  6E11               	movwf	i2___wmul@multiplicand,c
 48906  01FC1A  EC83  F0DB         	call	i2___wmul	;wreg free
 48907  01FC1E  0EBD               	movlw	low __npowers_
 48908  01FC20  240F               	addwf	?i2___wmul,w,c
 48909  01FC22  6EF6               	movwf	tblptrl,c
 48910  01FC24  0EFE               	movlw	high __npowers_
 48911  01FC26  2010               	addwfc	?i2___wmul+1,w,c
 48912  01FC28  6EF7               	movwf	tblptrh,c
 48913  01FC2A                     	if	1	;There are 3 active tblptr bytes
 48914  01FC2A  6AF8               	clrf	tblptru,c
 48915  01FC2C  0E00               	movlw	low (__mediumconst shr (0+16))
 48916  01FC2E  22F8               	addwfc	tblptru,f,c
 48917  01FC30                     	endif
 48918  01FC30  0009               	tblrd		*+
 48919  01FC32  CFF5 F015          	movff	tablat,i2___ftmul@f1
 48920  01FC36  0009               	tblrd		*+
 48921  01FC38  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 48922  01FC3C  000A               	tblrd		*-
 48923  01FC3E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 48924  01FC42  EC6D  F0C8         	call	i2___ftmul	;wreg free
 48925  01FC46  C015  F027         	movff	?i2___ftmul,i2_scale$11267
 48926  01FC4A  C016  F028         	movff	?i2___ftmul+1,i2_scale$11267+1
 48927  01FC4E  C017  F029         	movff	?i2___ftmul+2,i2_scale$11267+2
 48928                           
 48929                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 48930  01FC52  C027  F015         	movff	i2_scale$11267,i2___ftmul@f1
 48931  01FC56  C028  F016         	movff	i2_scale$11267+1,i2___ftmul@f1+1
 48932  01FC5A  C029  F017         	movff	i2_scale$11267+2,i2___ftmul@f1+2
 48933  01FC5E  0E00               	movlw	0
 48934  01FC60  6E12               	movwf	i2___wmul@multiplicand+1,c
 48935  01FC62  0E03               	movlw	3
 48936  01FC64  6E11               	movwf	i2___wmul@multiplicand,c
 48937  01FC66  0E00               	movlw	0
 48938  01FC68  6E04               	movwf	i2___awmod@divisor+1,c
 48939  01FC6A  0E0A               	movlw	10
 48940  01FC6C  6E03               	movwf	i2___awmod@divisor,c
 48941  01FC6E  502A               	movf	i2scale@scl,w,c
 48942  01FC70  6E01               	movwf	i2___awmod@dividend,c
 48943  01FC72  6A02               	clrf	i2___awmod@dividend+1,c
 48944  01FC74  BE01               	btfsc	i2___awmod@dividend,7,c
 48945  01FC76  0602               	decf	i2___awmod@dividend+1,f,c
 48946  01FC78  EC0E  F0D3         	call	i2___awmod	;wreg free
 48947  01FC7C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 48948  01FC80  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 48949  01FC84  EC83  F0DB         	call	i2___wmul	;wreg free
 48950  01FC88  0EBD               	movlw	low __npowers_
 48951  01FC8A  240F               	addwf	?i2___wmul,w,c
 48952  01FC8C  6EF6               	movwf	tblptrl,c
 48953  01FC8E  0EFE               	movlw	high __npowers_
 48954  01FC90  2010               	addwfc	?i2___wmul+1,w,c
 48955  01FC92  6EF7               	movwf	tblptrh,c
 48956  01FC94                     	if	1	;There are 3 active tblptr bytes
 48957  01FC94  6AF8               	clrf	tblptru,c
 48958  01FC96  0E00               	movlw	low (__mediumconst shr (0+16))
 48959  01FC98  22F8               	addwfc	tblptru,f,c
 48960  01FC9A                     	endif
 48961  01FC9A  0009               	tblrd		*+
 48962  01FC9C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 48963  01FCA0  0009               	tblrd		*+
 48964  01FCA2  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 48965  01FCA6  000A               	tblrd		*-
 48966  01FCA8  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 48967  01FCAC  EC6D  F0C8         	call	i2___ftmul	;wreg free
 48968  01FCB0  C015  F024         	movff	?i2___ftmul,?i2_scale
 48969  01FCB4  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 48970  01FCB8  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 48971  01FCBC  0012               	return	
 48972  01FCBE                     i2l10582:
 48973                           
 48974                           ;doprnt.c: 432: else if(scl > 10)
 48975  01FCBE  502A               	movf	i2scale@scl,w,c
 48976  01FCC0  0A80               	xorlw	128
 48977  01FCC2  0F75               	addlw	-139
 48978  01FCC4  A0D8               	btfss	status,0,c
 48979  01FCC6  D059               	goto	i2l10588
 48980                           
 48981                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 48982  01FCC8  0E00               	movlw	0
 48983  01FCCA  6E0A               	movwf	i2___awdiv@divisor+1,c
 48984  01FCCC  0E0A               	movlw	10
 48985  01FCCE  6E09               	movwf	i2___awdiv@divisor,c
 48986  01FCD0  502A               	movf	i2scale@scl,w,c
 48987  01FCD2  6E07               	movwf	i2___awdiv@dividend,c
 48988  01FCD4  6A08               	clrf	i2___awdiv@dividend+1,c
 48989  01FCD6  BE07               	btfsc	i2___awdiv@dividend,7,c
 48990  01FCD8  0608               	decf	i2___awdiv@dividend+1,f,c
 48991  01FCDA  EC89  F0D1         	call	i2___awdiv	;wreg free
 48992  01FCDE  0E09               	movlw	9
 48993  01FCE0  2407               	addwf	?i2___awdiv,w,c
 48994  01FCE2  6E0F               	movwf	i2___wmul@multiplier,c
 48995  01FCE4  0E00               	movlw	0
 48996  01FCE6  2008               	addwfc	?i2___awdiv+1,w,c
 48997  01FCE8  6E10               	movwf	i2___wmul@multiplier+1,c
 48998  01FCEA  0E00               	movlw	0
 48999  01FCEC  6E12               	movwf	i2___wmul@multiplicand+1,c
 49000  01FCEE  0E03               	movlw	3
 49001  01FCF0  6E11               	movwf	i2___wmul@multiplicand,c
 49002  01FCF2  EC83  F0DB         	call	i2___wmul	;wreg free
 49003  01FCF6  0EBD               	movlw	low __npowers_
 49004  01FCF8  240F               	addwf	?i2___wmul,w,c
 49005  01FCFA  6EF6               	movwf	tblptrl,c
 49006  01FCFC  0EFE               	movlw	high __npowers_
 49007  01FCFE  2010               	addwfc	?i2___wmul+1,w,c
 49008  01FD00  6EF7               	movwf	tblptrh,c
 49009  01FD02                     	if	1	;There are 3 active tblptr bytes
 49010  01FD02  6AF8               	clrf	tblptru,c
 49011  01FD04  0E00               	movlw	low (__mediumconst shr (0+16))
 49012  01FD06  22F8               	addwfc	tblptru,f,c
 49013  01FD08                     	endif
 49014  01FD08  0009               	tblrd		*+
 49015  01FD0A  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49016  01FD0E  0009               	tblrd		*+
 49017  01FD10  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49018  01FD14  000A               	tblrd		*-
 49019  01FD16  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49020  01FD1A  0E00               	movlw	0
 49021  01FD1C  6E12               	movwf	i2___wmul@multiplicand+1,c
 49022  01FD1E  0E03               	movlw	3
 49023  01FD20  6E11               	movwf	i2___wmul@multiplicand,c
 49024  01FD22  0E00               	movlw	0
 49025  01FD24  6E04               	movwf	i2___awmod@divisor+1,c
 49026  01FD26  0E0A               	movlw	10
 49027  01FD28  6E03               	movwf	i2___awmod@divisor,c
 49028  01FD2A  502A               	movf	i2scale@scl,w,c
 49029  01FD2C  6E01               	movwf	i2___awmod@dividend,c
 49030  01FD2E  6A02               	clrf	i2___awmod@dividend+1,c
 49031  01FD30  BE01               	btfsc	i2___awmod@dividend,7,c
 49032  01FD32  0602               	decf	i2___awmod@dividend+1,f,c
 49033  01FD34  EC0E  F0D3         	call	i2___awmod	;wreg free
 49034  01FD38  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49035  01FD3C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49036  01FD40  EC83  F0DB         	call	i2___wmul	;wreg free
 49037  01FD44  0EBD               	movlw	low __npowers_
 49038  01FD46  240F               	addwf	?i2___wmul,w,c
 49039  01FD48  6EF6               	movwf	tblptrl,c
 49040  01FD4A  0EFE               	movlw	high __npowers_
 49041  01FD4C  2010               	addwfc	?i2___wmul+1,w,c
 49042  01FD4E  6EF7               	movwf	tblptrh,c
 49043  01FD50                     	if	1	;There are 3 active tblptr bytes
 49044  01FD50  6AF8               	clrf	tblptru,c
 49045  01FD52  0E00               	movlw	low (__mediumconst shr (0+16))
 49046  01FD54  22F8               	addwfc	tblptru,f,c
 49047  01FD56                     	endif
 49048  01FD56  0009               	tblrd		*+
 49049  01FD58  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49050  01FD5C  0009               	tblrd		*+
 49051  01FD5E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49052  01FD62  000A               	tblrd		*-
 49053  01FD64  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49054  01FD68  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49055  01FD6C  C015  F024         	movff	?i2___ftmul,?i2_scale
 49056  01FD70  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49057  01FD74  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49058  01FD78  0012               	return	
 49059  01FD7A                     i2l10588:
 49060                           
 49061                           ;doprnt.c: 434: return _npowers_[scl];
 49062  01FD7A  502A               	movf	i2scale@scl,w,c
 49063  01FD7C  0D03               	mullw	3
 49064  01FD7E  0EBD               	movlw	low __npowers_
 49065  01FD80  24F3               	addwf	prodl,w,c
 49066  01FD82  6EF6               	movwf	tblptrl,c
 49067  01FD84  0EFE               	movlw	high __npowers_
 49068  01FD86  20F4               	addwfc	prodh,w,c
 49069  01FD88  6EF7               	movwf	tblptrh,c
 49070  01FD8A                     	if	1	;There are 3 active tblptr bytes
 49071  01FD8A  6AF8               	clrf	tblptru,c
 49072  01FD8C  0E00               	movlw	low (__mediumconst shr (0+16))
 49073  01FD8E  22F8               	addwfc	tblptru,f,c
 49074  01FD90                     	endif
 49075  01FD90  0009               	tblrd		*+
 49076  01FD92  CFF5 F024          	movff	tablat,?i2_scale
 49077  01FD96  0009               	tblrd		*+
 49078  01FD98  CFF5 F025          	movff	tablat,?i2_scale+1
 49079  01FD9C  000A               	tblrd		*-
 49080  01FD9E  CFF5 F026          	movff	tablat,?i2_scale+2
 49081  01FDA2  0012               	return	
 49082  01FDA4                     i2l10592:
 49083                           
 49084                           ;doprnt.c: 435: }
 49085                           ;doprnt.c: 436: if(scl>=110)
 49086  01FDA4  502A               	movf	i2scale@scl,w,c
 49087  01FDA6  0A80               	xorlw	128
 49088  01FDA8  0F12               	addlw	-238
 49089  01FDAA  A0D8               	btfss	status,0,c
 49090  01FDAC  D09A               	goto	i2l10600
 49091                           
 49092                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 49093  01FDAE  0E00               	movlw	0
 49094  01FDB0  6E12               	movwf	i2___wmul@multiplicand+1,c
 49095  01FDB2  0E03               	movlw	3
 49096  01FDB4  6E11               	movwf	i2___wmul@multiplicand,c
 49097  01FDB6  0E00               	movlw	0
 49098  01FDB8  6E0A               	movwf	i2___awdiv@divisor+1,c
 49099  01FDBA  0E0A               	movlw	10
 49100  01FDBC  6E09               	movwf	i2___awdiv@divisor,c
 49101  01FDBE  0E00               	movlw	0
 49102  01FDC0  6E04               	movwf	i2___awmod@divisor+1,c
 49103  01FDC2  0E64               	movlw	100
 49104  01FDC4  6E03               	movwf	i2___awmod@divisor,c
 49105  01FDC6  502A               	movf	i2scale@scl,w,c
 49106  01FDC8  6E01               	movwf	i2___awmod@dividend,c
 49107  01FDCA  6A02               	clrf	i2___awmod@dividend+1,c
 49108  01FDCC  BE01               	btfsc	i2___awmod@dividend,7,c
 49109  01FDCE  0602               	decf	i2___awmod@dividend+1,f,c
 49110  01FDD0  EC0E  F0D3         	call	i2___awmod	;wreg free
 49111  01FDD4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 49112  01FDD8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 49113  01FDDC  EC89  F0D1         	call	i2___awdiv	;wreg free
 49114  01FDE0  0E09               	movlw	9
 49115  01FDE2  2407               	addwf	?i2___awdiv,w,c
 49116  01FDE4  6E0F               	movwf	i2___wmul@multiplier,c
 49117  01FDE6  0E00               	movlw	0
 49118  01FDE8  2008               	addwfc	?i2___awdiv+1,w,c
 49119  01FDEA  6E10               	movwf	i2___wmul@multiplier+1,c
 49120  01FDEC  EC83  F0DB         	call	i2___wmul	;wreg free
 49121  01FDF0  0EE4               	movlw	low __powers_
 49122  01FDF2  240F               	addwf	?i2___wmul,w,c
 49123  01FDF4  6EF6               	movwf	tblptrl,c
 49124  01FDF6  0EFE               	movlw	high __powers_
 49125  01FDF8  2010               	addwfc	?i2___wmul+1,w,c
 49126  01FDFA  6EF7               	movwf	tblptrh,c
 49127  01FDFC                     	if	1	;There are 3 active tblptr bytes
 49128  01FDFC  6AF8               	clrf	tblptru,c
 49129  01FDFE  0E00               	movlw	low (__mediumconst shr (0+16))
 49130  01FE00  22F8               	addwfc	tblptru,f,c
 49131  01FE02                     	endif
 49132  01FE02  0009               	tblrd		*+
 49133  01FE04  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49134  01FE08  0009               	tblrd		*+
 49135  01FE0A  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49136  01FE0E  000A               	tblrd		*-
 49137  01FE10  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49138  01FE14  0E00               	movlw	0
 49139  01FE16  6E0A               	movwf	i2___awdiv@divisor+1,c
 49140  01FE18  0E64               	movlw	100
 49141  01FE1A  6E09               	movwf	i2___awdiv@divisor,c
 49142  01FE1C  502A               	movf	i2scale@scl,w,c
 49143  01FE1E  6E07               	movwf	i2___awdiv@dividend,c
 49144  01FE20  6A08               	clrf	i2___awdiv@dividend+1,c
 49145  01FE22  BE07               	btfsc	i2___awdiv@dividend,7,c
 49146  01FE24  0608               	decf	i2___awdiv@dividend+1,f,c
 49147  01FE26  EC89  F0D1         	call	i2___awdiv	;wreg free
 49148  01FE2A  0E12               	movlw	18
 49149  01FE2C  2407               	addwf	?i2___awdiv,w,c
 49150  01FE2E  6E0F               	movwf	i2___wmul@multiplier,c
 49151  01FE30  0E00               	movlw	0
 49152  01FE32  2008               	addwfc	?i2___awdiv+1,w,c
 49153  01FE34  6E10               	movwf	i2___wmul@multiplier+1,c
 49154  01FE36  0E00               	movlw	0
 49155  01FE38  6E12               	movwf	i2___wmul@multiplicand+1,c
 49156  01FE3A  0E03               	movlw	3
 49157  01FE3C  6E11               	movwf	i2___wmul@multiplicand,c
 49158  01FE3E  EC83  F0DB         	call	i2___wmul	;wreg free
 49159  01FE42  0EE4               	movlw	low __powers_
 49160  01FE44  240F               	addwf	?i2___wmul,w,c
 49161  01FE46  6EF6               	movwf	tblptrl,c
 49162  01FE48  0EFE               	movlw	high __powers_
 49163  01FE4A  2010               	addwfc	?i2___wmul+1,w,c
 49164  01FE4C  6EF7               	movwf	tblptrh,c
 49165  01FE4E                     	if	1	;There are 3 active tblptr bytes
 49166  01FE4E  6AF8               	clrf	tblptru,c
 49167  01FE50  0E00               	movlw	low (__mediumconst shr (0+16))
 49168  01FE52  22F8               	addwfc	tblptru,f,c
 49169  01FE54                     	endif
 49170  01FE54  0009               	tblrd		*+
 49171  01FE56  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49172  01FE5A  0009               	tblrd		*+
 49173  01FE5C  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49174  01FE60  000A               	tblrd		*-
 49175  01FE62  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49176  01FE66  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49177  01FE6A  C015  F027         	movff	?i2___ftmul,i2_scale$11267
 49178  01FE6E  C016  F028         	movff	?i2___ftmul+1,i2_scale$11267+1
 49179  01FE72  C017  F029         	movff	?i2___ftmul+2,i2_scale$11267+2
 49180                           
 49181                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 49182  01FE76  C027  F015         	movff	i2_scale$11267,i2___ftmul@f1
 49183  01FE7A  C028  F016         	movff	i2_scale$11267+1,i2___ftmul@f1+1
 49184  01FE7E  C029  F017         	movff	i2_scale$11267+2,i2___ftmul@f1+2
 49185  01FE82  0E00               	movlw	0
 49186  01FE84  6E12               	movwf	i2___wmul@multiplicand+1,c
 49187  01FE86  0E03               	movlw	3
 49188  01FE88  6E11               	movwf	i2___wmul@multiplicand,c
 49189  01FE8A  0E00               	movlw	0
 49190  01FE8C  6E04               	movwf	i2___awmod@divisor+1,c
 49191  01FE8E  0E0A               	movlw	10
 49192  01FE90  6E03               	movwf	i2___awmod@divisor,c
 49193  01FE92  502A               	movf	i2scale@scl,w,c
 49194  01FE94  6E01               	movwf	i2___awmod@dividend,c
 49195  01FE96  6A02               	clrf	i2___awmod@dividend+1,c
 49196  01FE98  BE01               	btfsc	i2___awmod@dividend,7,c
 49197  01FE9A  0602               	decf	i2___awmod@dividend+1,f,c
 49198  01FE9C  EC0E  F0D3         	call	i2___awmod	;wreg free
 49199  01FEA0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49200  01FEA4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49201  01FEA8  EC83  F0DB         	call	i2___wmul	;wreg free
 49202  01FEAC  0EE4               	movlw	low __powers_
 49203  01FEAE  240F               	addwf	?i2___wmul,w,c
 49204  01FEB0  6EF6               	movwf	tblptrl,c
 49205  01FEB2  0EFE               	movlw	high __powers_
 49206  01FEB4  2010               	addwfc	?i2___wmul+1,w,c
 49207  01FEB6  6EF7               	movwf	tblptrh,c
 49208  01FEB8                     	if	1	;There are 3 active tblptr bytes
 49209  01FEB8  6AF8               	clrf	tblptru,c
 49210  01FEBA  0E00               	movlw	low (__mediumconst shr (0+16))
 49211  01FEBC  22F8               	addwfc	tblptru,f,c
 49212  01FEBE                     	endif
 49213  01FEBE  0009               	tblrd		*+
 49214  01FEC0  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49215  01FEC4  0009               	tblrd		*+
 49216  01FEC6  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49217  01FECA  000A               	tblrd		*-
 49218  01FECC  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49219  01FED0  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49220  01FED4  C015  F024         	movff	?i2___ftmul,?i2_scale
 49221  01FED8  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49222  01FEDC  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49223  01FEE0  0012               	return	
 49224  01FEE2                     i2l10600:
 49225                           
 49226                           ;doprnt.c: 438: else if(scl > 10)
 49227  01FEE2  502A               	movf	i2scale@scl,w,c
 49228  01FEE4  0A80               	xorlw	128
 49229  01FEE6  0F75               	addlw	-139
 49230  01FEE8  A0D8               	btfss	status,0,c
 49231  01FEEA  D059               	goto	i2l10606
 49232                           
 49233                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 49234  01FEEC  0E00               	movlw	0
 49235  01FEEE  6E0A               	movwf	i2___awdiv@divisor+1,c
 49236  01FEF0  0E0A               	movlw	10
 49237  01FEF2  6E09               	movwf	i2___awdiv@divisor,c
 49238  01FEF4  502A               	movf	i2scale@scl,w,c
 49239  01FEF6  6E07               	movwf	i2___awdiv@dividend,c
 49240  01FEF8  6A08               	clrf	i2___awdiv@dividend+1,c
 49241  01FEFA  BE07               	btfsc	i2___awdiv@dividend,7,c
 49242  01FEFC  0608               	decf	i2___awdiv@dividend+1,f,c
 49243  01FEFE  EC89  F0D1         	call	i2___awdiv	;wreg free
 49244  01FF02  0E09               	movlw	9
 49245  01FF04  2407               	addwf	?i2___awdiv,w,c
 49246  01FF06  6E0F               	movwf	i2___wmul@multiplier,c
 49247  01FF08  0E00               	movlw	0
 49248  01FF0A  2008               	addwfc	?i2___awdiv+1,w,c
 49249  01FF0C  6E10               	movwf	i2___wmul@multiplier+1,c
 49250  01FF0E  0E00               	movlw	0
 49251  01FF10  6E12               	movwf	i2___wmul@multiplicand+1,c
 49252  01FF12  0E03               	movlw	3
 49253  01FF14  6E11               	movwf	i2___wmul@multiplicand,c
 49254  01FF16  EC83  F0DB         	call	i2___wmul	;wreg free
 49255  01FF1A  0EE4               	movlw	low __powers_
 49256  01FF1C  240F               	addwf	?i2___wmul,w,c
 49257  01FF1E  6EF6               	movwf	tblptrl,c
 49258  01FF20  0EFE               	movlw	high __powers_
 49259  01FF22  2010               	addwfc	?i2___wmul+1,w,c
 49260  01FF24  6EF7               	movwf	tblptrh,c
 49261  01FF26                     	if	1	;There are 3 active tblptr bytes
 49262  01FF26  6AF8               	clrf	tblptru,c
 49263  01FF28  0E00               	movlw	low (__mediumconst shr (0+16))
 49264  01FF2A  22F8               	addwfc	tblptru,f,c
 49265  01FF2C                     	endif
 49266  01FF2C  0009               	tblrd		*+
 49267  01FF2E  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49268  01FF32  0009               	tblrd		*+
 49269  01FF34  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49270  01FF38  000A               	tblrd		*-
 49271  01FF3A  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49272  01FF3E  0E00               	movlw	0
 49273  01FF40  6E12               	movwf	i2___wmul@multiplicand+1,c
 49274  01FF42  0E03               	movlw	3
 49275  01FF44  6E11               	movwf	i2___wmul@multiplicand,c
 49276  01FF46  0E00               	movlw	0
 49277  01FF48  6E04               	movwf	i2___awmod@divisor+1,c
 49278  01FF4A  0E0A               	movlw	10
 49279  01FF4C  6E03               	movwf	i2___awmod@divisor,c
 49280  01FF4E  502A               	movf	i2scale@scl,w,c
 49281  01FF50  6E01               	movwf	i2___awmod@dividend,c
 49282  01FF52  6A02               	clrf	i2___awmod@dividend+1,c
 49283  01FF54  BE01               	btfsc	i2___awmod@dividend,7,c
 49284  01FF56  0602               	decf	i2___awmod@dividend+1,f,c
 49285  01FF58  EC0E  F0D3         	call	i2___awmod	;wreg free
 49286  01FF5C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49287  01FF60  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49288  01FF64  EC83  F0DB         	call	i2___wmul	;wreg free
 49289  01FF68  0EE4               	movlw	low __powers_
 49290  01FF6A  240F               	addwf	?i2___wmul,w,c
 49291  01FF6C  6EF6               	movwf	tblptrl,c
 49292  01FF6E  0EFE               	movlw	high __powers_
 49293  01FF70  2010               	addwfc	?i2___wmul+1,w,c
 49294  01FF72  6EF7               	movwf	tblptrh,c
 49295  01FF74                     	if	1	;There are 3 active tblptr bytes
 49296  01FF74  6AF8               	clrf	tblptru,c
 49297  01FF76  0E00               	movlw	low (__mediumconst shr (0+16))
 49298  01FF78  22F8               	addwfc	tblptru,f,c
 49299  01FF7A                     	endif
 49300  01FF7A  0009               	tblrd		*+
 49301  01FF7C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49302  01FF80  0009               	tblrd		*+
 49303  01FF82  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49304  01FF86  000A               	tblrd		*-
 49305  01FF88  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49306  01FF8C  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49307  01FF90  C015  F024         	movff	?i2___ftmul,?i2_scale
 49308  01FF94  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49309  01FF98  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49310  01FF9C  0012               	return	
 49311  01FF9E                     i2l10606:
 49312                           
 49313                           ;doprnt.c: 440: return _powers_[scl];
 49314  01FF9E  502A               	movf	i2scale@scl,w,c
 49315  01FFA0  0D03               	mullw	3
 49316  01FFA2  0EE4               	movlw	low __powers_
 49317  01FFA4  24F3               	addwf	prodl,w,c
 49318  01FFA6  6EF6               	movwf	tblptrl,c
 49319  01FFA8  0EFE               	movlw	high __powers_
 49320  01FFAA  20F4               	addwfc	prodh,w,c
 49321  01FFAC  6EF7               	movwf	tblptrh,c
 49322  01FFAE                     	if	1	;There are 3 active tblptr bytes
 49323  01FFAE  6AF8               	clrf	tblptru,c
 49324  01FFB0  0E00               	movlw	low (__mediumconst shr (0+16))
 49325  01FFB2  22F8               	addwfc	tblptru,f,c
 49326  01FFB4                     	endif
 49327  01FFB4  0009               	tblrd		*+
 49328  01FFB6  CFF5 F024          	movff	tablat,?i2_scale
 49329  01FFBA  0009               	tblrd		*+
 49330  01FFBC  CFF5 F025          	movff	tablat,?i2_scale+1
 49331  01FFC0  000A               	tblrd		*-
 49332  01FFC2  CFF5 F026          	movff	tablat,?i2_scale+2
 49333  01FFC6  0012               	return	
 49334  01FFC8                     __end_ofi2_scale:
 49335                           	opt stack 0
 49336                           pclatu	equ	0xFFB
 49337                           pclath	equ	0xFFA
 49338                           tblptru	equ	0xFF8
 49339                           tblptrh	equ	0xFF7
 49340                           tblptrl	equ	0xFF6
 49341                           tablat	equ	0xFF5
 49342                           prodh	equ	0xFF4
 49343                           prodl	equ	0xFF3
 49344                           intcon	equ	0xFF2
 49345                           intcon2	equ	0xFF1
 49346                           intcon3	equ	0xFF0
 49347                           indf0	equ	0xFEF
 49348                           postinc0	equ	0xFEE
 49349                           fsr0h	equ	0xFEA
 49350                           fsr0l	equ	0xFE9
 49351                           wreg	equ	0xFE8
 49352                           indf1	equ	0xFE7
 49353                           postinc1	equ	0xFE6
 49354                           postdec1	equ	0xFE5
 49355                           fsr1h	equ	0xFE2
 49356                           fsr1l	equ	0xFE1
 49357                           indf2	equ	0xFDF
 49358                           postinc2	equ	0xFDE
 49359                           postdec2	equ	0xFDD
 49360                           fsr2h	equ	0xFDA
 49361                           fsr2l	equ	0xFD9
 49362                           status	equ	0xFD8
 49363                           
 49364 ;; *************** function i2_isdigit *****************
 49365 ;; Defined at:
 49366 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 49367 ;; Parameters:    Size  Location     Type
 49368 ;;  c               1    wreg     unsigned char 
 49369 ;; Auto vars:     Size  Location     Type
 49370 ;;  c               1    2[COMRAM] unsigned char 
 49371 ;; Return value:  Size  Location     Type
 49372 ;;		None               void
 49373 ;; Registers used:
 49374 ;;		wreg, status,2, status,0
 49375 ;; Tracked objects:
 49376 ;;		On entry : 0/0
 49377 ;;		On exit  : 0/0
 49378 ;;		Unchanged: 0/0
 49379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 49380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49383 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49384 ;;Total ram usage:        3 bytes
 49385 ;; Hardware stack levels used:    1
 49386 ;; This function calls:
 49387 ;;		Nothing
 49388 ;; This function is called by:
 49389 ;;		i2_sprintf
 49390 ;; This function uses a non-reentrant model
 49391 ;;
 49392                           
 49393                           	psect	text142
 49394  01B844                     __ptext142:
 49395                           	opt stack 0
 49396  01B844                     i2_isdigit:
 49397                           	opt stack 15
 49398                           
 49399                           ;incstack = 0
 49400                           ;i2isdigit@c stored from wreg
 49401  01B844  6E03               	movwf	i2isdigit@c,c
 49402  01B846  0E00               	movlw	0
 49403  01B848  6E02               	movwf	i2_isdigit$10234,c
 49404  01B84A  0E3A               	movlw	58
 49405  01B84C  5C03               	subwf	i2isdigit@c,w,c
 49406  01B84E  B0D8               	btfsc	status,0,c
 49407  01B850  D005               	goto	i2l10758
 49408  01B852  0E2F               	movlw	47
 49409  01B854  6403               	cpfsgt	i2isdigit@c,c
 49410  01B856  D002               	goto	i2l10758
 49411  01B858  0E01               	movlw	1
 49412  01B85A  6E02               	movwf	i2_isdigit$10234,c
 49413  01B85C                     i2l10758:
 49414  01B85C  C002  F001         	movff	i2_isdigit$10234,??i2_isdigit
 49415  01B860  3001               	rrcf	??i2_isdigit,w,c
 49416  01B862  0012               	return	
 49417  01B864                     __end_ofi2_isdigit:
 49418                           	opt stack 0
 49419                           pclatu	equ	0xFFB
 49420                           pclath	equ	0xFFA
 49421                           tblptru	equ	0xFF8
 49422                           tblptrh	equ	0xFF7
 49423                           tblptrl	equ	0xFF6
 49424                           tablat	equ	0xFF5
 49425                           prodh	equ	0xFF4
 49426                           prodl	equ	0xFF3
 49427                           intcon	equ	0xFF2
 49428                           intcon2	equ	0xFF1
 49429                           intcon3	equ	0xFF0
 49430                           indf0	equ	0xFEF
 49431                           postinc0	equ	0xFEE
 49432                           fsr0h	equ	0xFEA
 49433                           fsr0l	equ	0xFE9
 49434                           wreg	equ	0xFE8
 49435                           indf1	equ	0xFE7
 49436                           postinc1	equ	0xFE6
 49437                           postdec1	equ	0xFE5
 49438                           fsr1h	equ	0xFE2
 49439                           fsr1l	equ	0xFE1
 49440                           indf2	equ	0xFDF
 49441                           postinc2	equ	0xFDE
 49442                           postdec2	equ	0xFDD
 49443                           fsr2h	equ	0xFDA
 49444                           fsr2l	equ	0xFD9
 49445                           status	equ	0xFD8
 49446                           
 49447 ;; *************** function i2_fround *****************
 49448 ;; Defined at:
 49449 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 49450 ;; Parameters:    Size  Location     Type
 49451 ;;  prec            1    wreg     unsigned char 
 49452 ;; Auto vars:     Size  Location     Type
 49453 ;;  prec            1   44[COMRAM] unsigned char 
 49454 ;; Return value:  Size  Location     Type
 49455 ;;                  3   35[COMRAM] unsigned char 
 49456 ;; Registers used:
 49457 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49458 ;; Tracked objects:
 49459 ;;		On entry : 0/0
 49460 ;;		On exit  : 0/0
 49461 ;;		Unchanged: 0/0
 49462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 49463 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49464 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49466 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49467 ;;Total ram usage:       10 bytes
 49468 ;; Hardware stack levels used:    1
 49469 ;; Hardware stack levels required when called:    2
 49470 ;; This function calls:
 49471 ;;		i2___awdiv
 49472 ;;		i2___awmod
 49473 ;;		i2___ftmul
 49474 ;;		i2___wmul
 49475 ;; This function is called by:
 49476 ;;		i2_sprintf
 49477 ;; This function uses a non-reentrant model
 49478 ;;
 49479                           
 49480                           	psect	text143
 49481  014F84                     __ptext143:
 49482                           	opt stack 0
 49483  014F84                     i2_fround:
 49484                           	opt stack 13
 49485                           
 49486                           ;incstack = 0
 49487                           ;i2fround@prec stored from wreg
 49488  014F84  6E2D               	movwf	i2fround@prec,c
 49489                           
 49490                           ;doprnt.c: 413: if(prec>=110)
 49491  014F86  0E6D               	movlw	109
 49492  014F88  642D               	cpfsgt	i2fround@prec,c
 49493  014F8A  D0A8               	goto	i2l10560
 49494                           
 49495                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 49496  014F8C  0E00               	movlw	0
 49497  014F8E  6E12               	movwf	i2___wmul@multiplicand+1,c
 49498  014F90  0E03               	movlw	3
 49499  014F92  6E11               	movwf	i2___wmul@multiplicand,c
 49500  014F94  0E00               	movlw	0
 49501  014F96  6E0A               	movwf	i2___awdiv@divisor+1,c
 49502  014F98  0E0A               	movlw	10
 49503  014F9A  6E09               	movwf	i2___awdiv@divisor,c
 49504  014F9C  0E00               	movlw	0
 49505  014F9E  6E04               	movwf	i2___awmod@divisor+1,c
 49506  014FA0  0E64               	movlw	100
 49507  014FA2  6E03               	movwf	i2___awmod@divisor,c
 49508  014FA4  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 49509  014FA8  6A02               	clrf	i2___awmod@dividend+1,c
 49510  014FAA  EC0E  F0D3         	call	i2___awmod	;wreg free
 49511  014FAE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 49512  014FB2  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 49513  014FB6  EC89  F0D1         	call	i2___awdiv	;wreg free
 49514  014FBA  0E09               	movlw	9
 49515  014FBC  2407               	addwf	?i2___awdiv,w,c
 49516  014FBE  6E0F               	movwf	i2___wmul@multiplier,c
 49517  014FC0  0E00               	movlw	0
 49518  014FC2  2008               	addwfc	?i2___awdiv+1,w,c
 49519  014FC4  6E10               	movwf	i2___wmul@multiplier+1,c
 49520  014FC6  EC83  F0DB         	call	i2___wmul	;wreg free
 49521  014FCA  0EBD               	movlw	low __npowers_
 49522  014FCC  240F               	addwf	?i2___wmul,w,c
 49523  014FCE  6EF6               	movwf	tblptrl,c
 49524  014FD0  0EFE               	movlw	high __npowers_
 49525  014FD2  2010               	addwfc	?i2___wmul+1,w,c
 49526  014FD4  6EF7               	movwf	tblptrh,c
 49527  014FD6                     	if	1	;There are 3 active tblptr bytes
 49528  014FD6  6AF8               	clrf	tblptru,c
 49529  014FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 49530  014FDA  22F8               	addwfc	tblptru,f,c
 49531  014FDC                     	endif
 49532  014FDC  0009               	tblrd		*+
 49533  014FDE  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49534  014FE2  0009               	tblrd		*+
 49535  014FE4  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49536  014FE8  000A               	tblrd		*-
 49537  014FEA  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49538  014FEE  0E00               	movlw	0
 49539  014FF0  6E0A               	movwf	i2___awdiv@divisor+1,c
 49540  014FF2  0E64               	movlw	100
 49541  014FF4  6E09               	movwf	i2___awdiv@divisor,c
 49542  014FF6  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 49543  014FFA  6A08               	clrf	i2___awdiv@dividend+1,c
 49544  014FFC  EC89  F0D1         	call	i2___awdiv	;wreg free
 49545  015000  0E12               	movlw	18
 49546  015002  2407               	addwf	?i2___awdiv,w,c
 49547  015004  6E0F               	movwf	i2___wmul@multiplier,c
 49548  015006  0E00               	movlw	0
 49549  015008  2008               	addwfc	?i2___awdiv+1,w,c
 49550  01500A  6E10               	movwf	i2___wmul@multiplier+1,c
 49551  01500C  0E00               	movlw	0
 49552  01500E  6E12               	movwf	i2___wmul@multiplicand+1,c
 49553  015010  0E03               	movlw	3
 49554  015012  6E11               	movwf	i2___wmul@multiplicand,c
 49555  015014  EC83  F0DB         	call	i2___wmul	;wreg free
 49556  015018  0EBD               	movlw	low __npowers_
 49557  01501A  240F               	addwf	?i2___wmul,w,c
 49558  01501C  6EF6               	movwf	tblptrl,c
 49559  01501E  0EFE               	movlw	high __npowers_
 49560  015020  2010               	addwfc	?i2___wmul+1,w,c
 49561  015022  6EF7               	movwf	tblptrh,c
 49562  015024                     	if	1	;There are 3 active tblptr bytes
 49563  015024  6AF8               	clrf	tblptru,c
 49564  015026  0E00               	movlw	low (__mediumconst shr (0+16))
 49565  015028  22F8               	addwfc	tblptru,f,c
 49566  01502A                     	endif
 49567  01502A  0009               	tblrd		*+
 49568  01502C  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49569  015030  0009               	tblrd		*+
 49570  015032  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49571  015036  000A               	tblrd		*-
 49572  015038  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49573  01503C  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49574  015040  C015  F02A         	movff	?i2___ftmul,i2_fround$11265
 49575  015044  C016  F02B         	movff	?i2___ftmul+1,i2_fround$11265+1
 49576  015048  C017  F02C         	movff	?i2___ftmul+2,i2_fround$11265+2
 49577                           
 49578                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 49579  01504C  0E00               	movlw	0
 49580  01504E  6E12               	movwf	i2___wmul@multiplicand+1,c
 49581  015050  0E03               	movlw	3
 49582  015052  6E11               	movwf	i2___wmul@multiplicand,c
 49583  015054  0E00               	movlw	0
 49584  015056  6E04               	movwf	i2___awmod@divisor+1,c
 49585  015058  0E0A               	movlw	10
 49586  01505A  6E03               	movwf	i2___awmod@divisor,c
 49587  01505C  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 49588  015060  6A02               	clrf	i2___awmod@dividend+1,c
 49589  015062  EC0E  F0D3         	call	i2___awmod	;wreg free
 49590  015066  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49591  01506A  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49592  01506E  EC83  F0DB         	call	i2___wmul	;wreg free
 49593  015072  0EBD               	movlw	low __npowers_
 49594  015074  240F               	addwf	?i2___wmul,w,c
 49595  015076  6EF6               	movwf	tblptrl,c
 49596  015078  0EFE               	movlw	high __npowers_
 49597  01507A  2010               	addwfc	?i2___wmul+1,w,c
 49598  01507C  6EF7               	movwf	tblptrh,c
 49599  01507E                     	if	1	;There are 3 active tblptr bytes
 49600  01507E  6AF8               	clrf	tblptru,c
 49601  015080  0E00               	movlw	low (__mediumconst shr (0+16))
 49602  015082  22F8               	addwfc	tblptru,f,c
 49603  015084                     	endif
 49604  015084  0009               	tblrd		*+
 49605  015086  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49606  01508A  0009               	tblrd		*+
 49607  01508C  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49608  015090  000A               	tblrd		*-
 49609  015092  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49610  015096  C02A  F015         	movff	i2_fround$11265,i2___ftmul@f1
 49611  01509A  C02B  F016         	movff	i2_fround$11265+1,i2___ftmul@f1+1
 49612  01509E  C02C  F017         	movff	i2_fround$11265+2,i2___ftmul@f1+2
 49613  0150A2  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49614  0150A6  C015  F027         	movff	?i2___ftmul,i2_fround$11266
 49615  0150AA  C016  F028         	movff	?i2___ftmul+1,i2_fround$11266+1
 49616  0150AE  C017  F029         	movff	?i2___ftmul+2,i2_fround$11266+2
 49617                           
 49618                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 49619  0150B2  C027  F015         	movff	i2_fround$11266,i2___ftmul@f1
 49620  0150B6  C028  F016         	movff	i2_fround$11266+1,i2___ftmul@f1+1
 49621  0150BA  C029  F017         	movff	i2_fround$11266+2,i2___ftmul@f1+2
 49622  0150BE  0E00               	movlw	0
 49623  0150C0  6E18               	movwf	i2___ftmul@f2,c
 49624  0150C2  0E00               	movlw	0
 49625  0150C4  6E19               	movwf	i2___ftmul@f2+1,c
 49626  0150C6  0E3F               	movlw	63
 49627  0150C8  6E1A               	movwf	i2___ftmul@f2+2,c
 49628  0150CA  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49629  0150CE  C015  F024         	movff	?i2___ftmul,?i2_fround
 49630  0150D2  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 49631  0150D6  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 49632  0150DA  0012               	return	
 49633  0150DC                     i2l10560:
 49634                           
 49635                           ;doprnt.c: 415: else if(prec > 10)
 49636  0150DC  0E0A               	movlw	10
 49637  0150DE  642D               	cpfsgt	i2fround@prec,c
 49638  0150E0  D069               	goto	i2l10568
 49639                           
 49640                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 49641  0150E2  0E00               	movlw	0
 49642  0150E4  6E12               	movwf	i2___wmul@multiplicand+1,c
 49643  0150E6  0E03               	movlw	3
 49644  0150E8  6E11               	movwf	i2___wmul@multiplicand,c
 49645  0150EA  0E00               	movlw	0
 49646  0150EC  6E04               	movwf	i2___awmod@divisor+1,c
 49647  0150EE  0E0A               	movlw	10
 49648  0150F0  6E03               	movwf	i2___awmod@divisor,c
 49649  0150F2  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 49650  0150F6  6A02               	clrf	i2___awmod@dividend+1,c
 49651  0150F8  EC0E  F0D3         	call	i2___awmod	;wreg free
 49652  0150FC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49653  015100  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49654  015104  EC83  F0DB         	call	i2___wmul	;wreg free
 49655  015108  0EBD               	movlw	low __npowers_
 49656  01510A  240F               	addwf	?i2___wmul,w,c
 49657  01510C  6EF6               	movwf	tblptrl,c
 49658  01510E  0EFE               	movlw	high __npowers_
 49659  015110  2010               	addwfc	?i2___wmul+1,w,c
 49660  015112  6EF7               	movwf	tblptrh,c
 49661  015114                     	if	1	;There are 3 active tblptr bytes
 49662  015114  6AF8               	clrf	tblptru,c
 49663  015116  0E00               	movlw	low (__mediumconst shr (0+16))
 49664  015118  22F8               	addwfc	tblptru,f,c
 49665  01511A                     	endif
 49666  01511A  0009               	tblrd		*+
 49667  01511C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49668  015120  0009               	tblrd		*+
 49669  015122  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49670  015126  000A               	tblrd		*-
 49671  015128  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49672  01512C  0E00               	movlw	0
 49673  01512E  6E0A               	movwf	i2___awdiv@divisor+1,c
 49674  015130  0E0A               	movlw	10
 49675  015132  6E09               	movwf	i2___awdiv@divisor,c
 49676  015134  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 49677  015138  6A08               	clrf	i2___awdiv@dividend+1,c
 49678  01513A  EC89  F0D1         	call	i2___awdiv	;wreg free
 49679  01513E  0E09               	movlw	9
 49680  015140  2407               	addwf	?i2___awdiv,w,c
 49681  015142  6E0F               	movwf	i2___wmul@multiplier,c
 49682  015144  0E00               	movlw	0
 49683  015146  2008               	addwfc	?i2___awdiv+1,w,c
 49684  015148  6E10               	movwf	i2___wmul@multiplier+1,c
 49685  01514A  0E00               	movlw	0
 49686  01514C  6E12               	movwf	i2___wmul@multiplicand+1,c
 49687  01514E  0E03               	movlw	3
 49688  015150  6E11               	movwf	i2___wmul@multiplicand,c
 49689  015152  EC83  F0DB         	call	i2___wmul	;wreg free
 49690  015156  0EBD               	movlw	low __npowers_
 49691  015158  240F               	addwf	?i2___wmul,w,c
 49692  01515A  6EF6               	movwf	tblptrl,c
 49693  01515C  0EFE               	movlw	high __npowers_
 49694  01515E  2010               	addwfc	?i2___wmul+1,w,c
 49695  015160  6EF7               	movwf	tblptrh,c
 49696  015162                     	if	1	;There are 3 active tblptr bytes
 49697  015162  6AF8               	clrf	tblptru,c
 49698  015164  0E00               	movlw	low (__mediumconst shr (0+16))
 49699  015166  22F8               	addwfc	tblptru,f,c
 49700  015168                     	endif
 49701  015168  0009               	tblrd		*+
 49702  01516A  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49703  01516E  0009               	tblrd		*+
 49704  015170  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49705  015174  000A               	tblrd		*-
 49706  015176  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49707  01517A  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49708  01517E  C015  F02A         	movff	?i2___ftmul,i2_fround$11265
 49709  015182  C016  F02B         	movff	?i2___ftmul+1,i2_fround$11265+1
 49710  015186  C017  F02C         	movff	?i2___ftmul+2,i2_fround$11265+2
 49711                           
 49712                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 49713  01518A  C02A  F015         	movff	i2_fround$11265,i2___ftmul@f1
 49714  01518E  C02B  F016         	movff	i2_fround$11265+1,i2___ftmul@f1+1
 49715  015192  C02C  F017         	movff	i2_fround$11265+2,i2___ftmul@f1+2
 49716  015196  0E00               	movlw	0
 49717  015198  6E18               	movwf	i2___ftmul@f2,c
 49718  01519A  0E00               	movlw	0
 49719  01519C  6E19               	movwf	i2___ftmul@f2+1,c
 49720  01519E  0E3F               	movlw	63
 49721  0151A0  6E1A               	movwf	i2___ftmul@f2+2,c
 49722  0151A2  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49723  0151A6  C015  F024         	movff	?i2___ftmul,?i2_fround
 49724  0151AA  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 49725  0151AE  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 49726  0151B2  0012               	return	
 49727  0151B4                     i2l10568:
 49728                           
 49729                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 49730  0151B4  502D               	movf	i2fround@prec,w,c
 49731  0151B6  0D03               	mullw	3
 49732  0151B8  0EBD               	movlw	low __npowers_
 49733  0151BA  24F3               	addwf	prodl,w,c
 49734  0151BC  6EF6               	movwf	tblptrl,c
 49735  0151BE  0EFE               	movlw	high __npowers_
 49736  0151C0  20F4               	addwfc	prodh,w,c
 49737  0151C2  6EF7               	movwf	tblptrh,c
 49738  0151C4                     	if	1	;There are 3 active tblptr bytes
 49739  0151C4  6AF8               	clrf	tblptru,c
 49740  0151C6  0E00               	movlw	low (__mediumconst shr (0+16))
 49741  0151C8  22F8               	addwfc	tblptru,f,c
 49742  0151CA                     	endif
 49743  0151CA  0009               	tblrd		*+
 49744  0151CC  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49745  0151D0  0009               	tblrd		*+
 49746  0151D2  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49747  0151D6  000A               	tblrd		*-
 49748  0151D8  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49749  0151DC  0E00               	movlw	0
 49750  0151DE  6E18               	movwf	i2___ftmul@f2,c
 49751  0151E0  0E00               	movlw	0
 49752  0151E2  6E19               	movwf	i2___ftmul@f2+1,c
 49753  0151E4  0E3F               	movlw	63
 49754  0151E6  6E1A               	movwf	i2___ftmul@f2+2,c
 49755  0151E8  EC6D  F0C8         	call	i2___ftmul	;wreg free
 49756  0151EC  C015  F024         	movff	?i2___ftmul,?i2_fround
 49757  0151F0  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 49758  0151F4  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 49759  0151F8  0012               	return	
 49760  0151FA                     __end_ofi2_fround:
 49761                           	opt stack 0
 49762                           pclatu	equ	0xFFB
 49763                           pclath	equ	0xFFA
 49764                           tblptru	equ	0xFF8
 49765                           tblptrh	equ	0xFF7
 49766                           tblptrl	equ	0xFF6
 49767                           tablat	equ	0xFF5
 49768                           prodh	equ	0xFF4
 49769                           prodl	equ	0xFF3
 49770                           intcon	equ	0xFF2
 49771                           intcon2	equ	0xFF1
 49772                           intcon3	equ	0xFF0
 49773                           indf0	equ	0xFEF
 49774                           postinc0	equ	0xFEE
 49775                           fsr0h	equ	0xFEA
 49776                           fsr0l	equ	0xFE9
 49777                           wreg	equ	0xFE8
 49778                           indf1	equ	0xFE7
 49779                           postinc1	equ	0xFE6
 49780                           postdec1	equ	0xFE5
 49781                           fsr1h	equ	0xFE2
 49782                           fsr1l	equ	0xFE1
 49783                           indf2	equ	0xFDF
 49784                           postinc2	equ	0xFDE
 49785                           postdec2	equ	0xFDD
 49786                           fsr2h	equ	0xFDA
 49787                           fsr2l	equ	0xFD9
 49788                           status	equ	0xFD8
 49789                           
 49790 ;; *************** function i2___wmul *****************
 49791 ;; Defined at:
 49792 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 49793 ;; Parameters:    Size  Location     Type
 49794 ;;  multiplier      2   14[COMRAM] unsigned int 
 49795 ;;  multiplicand    2   16[COMRAM] unsigned int 
 49796 ;; Auto vars:     Size  Location     Type
 49797 ;;  __wmul          2   18[COMRAM] unsigned int 
 49798 ;; Return value:  Size  Location     Type
 49799 ;;                  2   14[COMRAM] unsigned int 
 49800 ;; Registers used:
 49801 ;;		wreg, status,2, status,0, prodl, prodh
 49802 ;; Tracked objects:
 49803 ;;		On entry : 0/0
 49804 ;;		On exit  : 0/0
 49805 ;;		Unchanged: 0/0
 49806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 49807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49811 ;;Total ram usage:        6 bytes
 49812 ;; Hardware stack levels used:    1
 49813 ;; This function calls:
 49814 ;;		Nothing
 49815 ;; This function is called by:
 49816 ;;		i2_fround
 49817 ;;		i2_scale
 49818 ;;		i2_sprintf
 49819 ;; This function uses a non-reentrant model
 49820 ;;
 49821                           
 49822                           	psect	text144
 49823  01B706                     __ptext144:
 49824                           	opt stack 0
 49825  01B706                     i2___wmul:
 49826                           	opt stack 14
 49827                           
 49828                           ;incstack = 0
 49829  01B706  500F               	movf	i2___wmul@multiplier,w,c
 49830  01B708  0211               	mulwf	i2___wmul@multiplicand,c
 49831  01B70A  CFF3 F013          	movff	prodl,i2___wmul@product
 49832  01B70E  CFF4 F014          	movff	prodh,i2___wmul@product+1
 49833  01B712  500F               	movf	i2___wmul@multiplier,w,c
 49834  01B714  0212               	mulwf	i2___wmul@multiplicand+1,c
 49835  01B716  50F3               	movf	prodl,w,c
 49836  01B718  2614               	addwf	i2___wmul@product+1,f,c
 49837  01B71A  5010               	movf	i2___wmul@multiplier+1,w,c
 49838  01B71C  0211               	mulwf	i2___wmul@multiplicand,c
 49839  01B71E  50F3               	movf	prodl,w,c
 49840  01B720  2614               	addwf	i2___wmul@product+1,f,c
 49841  01B722  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 49842  01B726  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 49843  01B72A  0012               	return	
 49844  01B72C                     __end_ofi2___wmul:
 49845                           	opt stack 0
 49846                           pclatu	equ	0xFFB
 49847                           pclath	equ	0xFFA
 49848                           tblptru	equ	0xFF8
 49849                           tblptrh	equ	0xFF7
 49850                           tblptrl	equ	0xFF6
 49851                           tablat	equ	0xFF5
 49852                           prodh	equ	0xFF4
 49853                           prodl	equ	0xFF3
 49854                           intcon	equ	0xFF2
 49855                           intcon2	equ	0xFF1
 49856                           intcon3	equ	0xFF0
 49857                           indf0	equ	0xFEF
 49858                           postinc0	equ	0xFEE
 49859                           fsr0h	equ	0xFEA
 49860                           fsr0l	equ	0xFE9
 49861                           wreg	equ	0xFE8
 49862                           indf1	equ	0xFE7
 49863                           postinc1	equ	0xFE6
 49864                           postdec1	equ	0xFE5
 49865                           fsr1h	equ	0xFE2
 49866                           fsr1l	equ	0xFE1
 49867                           indf2	equ	0xFDF
 49868                           postinc2	equ	0xFDE
 49869                           postdec2	equ	0xFDD
 49870                           fsr2h	equ	0xFDA
 49871                           fsr2l	equ	0xFD9
 49872                           status	equ	0xFD8
 49873                           
 49874 ;; *************** function i2___awmod *****************
 49875 ;; Defined at:
 49876 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 49877 ;; Parameters:    Size  Location     Type
 49878 ;;  dividend        2    0[COMRAM] int 
 49879 ;;  divisor         2    2[COMRAM] int 
 49880 ;; Auto vars:     Size  Location     Type
 49881 ;;  __awmod         1    5[COMRAM] unsigned char 
 49882 ;;  __awmod         1    4[COMRAM] unsigned char 
 49883 ;; Return value:  Size  Location     Type
 49884 ;;                  2    0[COMRAM] int 
 49885 ;; Registers used:
 49886 ;;		wreg, status,2, status,0, prodl
 49887 ;; Tracked objects:
 49888 ;;		On entry : 0/0
 49889 ;;		On exit  : 0/0
 49890 ;;		Unchanged: 0/0
 49891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 49892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49896 ;;Total ram usage:        6 bytes
 49897 ;; Hardware stack levels used:    1
 49898 ;; This function calls:
 49899 ;;		Nothing
 49900 ;; This function is called by:
 49901 ;;		i2_fround
 49902 ;;		i2_scale
 49903 ;; This function uses a non-reentrant model
 49904 ;;
 49905                           
 49906                           	psect	text145
 49907  01A61C                     __ptext145:
 49908                           	opt stack 0
 49909  01A61C                     i2___awmod:
 49910                           	opt stack 14
 49911                           
 49912                           ;incstack = 0
 49913  01A61C  0E00               	movlw	0
 49914  01A61E  6E06               	movwf	i2___awmod@sign,c
 49915  01A620  5002               	movf	i2___awmod@dividend+1,w,c
 49916  01A622  0A80               	xorlw	128
 49917  01A624  6EF3               	movwf	prodl,c
 49918  01A626  0E80               	movlw	128
 49919  01A628  5CF3               	subwf	prodl,w,c
 49920  01A62A  0E00               	movlw	0
 49921  01A62C  B4D8               	btfsc	status,2,c
 49922  01A62E  5C01               	subwf	i2___awmod@dividend,w,c
 49923  01A630  B0D8               	btfsc	status,0,c
 49924  01A632  D006               	goto	i2l10130
 49925  01A634  6C01               	negf	i2___awmod@dividend,c
 49926  01A636  1E02               	comf	i2___awmod@dividend+1,f,c
 49927  01A638  B0D8               	btfsc	status,0,c
 49928  01A63A  2A02               	incf	i2___awmod@dividend+1,f,c
 49929  01A63C  0E01               	movlw	1
 49930  01A63E  6E06               	movwf	i2___awmod@sign,c
 49931  01A640                     i2l10130:
 49932  01A640  5004               	movf	i2___awmod@divisor+1,w,c
 49933  01A642  0A80               	xorlw	128
 49934  01A644  6EF3               	movwf	prodl,c
 49935  01A646  0E80               	movlw	128
 49936  01A648  5CF3               	subwf	prodl,w,c
 49937  01A64A  0E00               	movlw	0
 49938  01A64C  B4D8               	btfsc	status,2,c
 49939  01A64E  5C03               	subwf	i2___awmod@divisor,w,c
 49940  01A650  B0D8               	btfsc	status,0,c
 49941  01A652  D004               	goto	i2l10134
 49942  01A654  6C03               	negf	i2___awmod@divisor,c
 49943  01A656  1E04               	comf	i2___awmod@divisor+1,f,c
 49944  01A658  B0D8               	btfsc	status,0,c
 49945  01A65A  2A04               	incf	i2___awmod@divisor+1,f,c
 49946  01A65C                     i2l10134:
 49947  01A65C  5004               	movf	i2___awmod@divisor+1,w,c
 49948  01A65E  1003               	iorwf	i2___awmod@divisor,w,c
 49949  01A660  B4D8               	btfsc	status,2,c
 49950  01A662  D018               	goto	i2l10150
 49951  01A664  0E01               	movlw	1
 49952  01A666  6E05               	movwf	i2___awmod@counter,c
 49953  01A668  D004               	goto	i2l10140
 49954  01A66A                     i2l10138:
 49955  01A66A  90D8               	bcf	status,0,c
 49956  01A66C  3603               	rlcf	i2___awmod@divisor,f,c
 49957  01A66E  3604               	rlcf	i2___awmod@divisor+1,f,c
 49958  01A670  2A05               	incf	i2___awmod@counter,f,c
 49959  01A672                     i2l10140:
 49960  01A672  AE04               	btfss	i2___awmod@divisor+1,7,c
 49961  01A674  D7FA               	goto	i2l10138
 49962  01A676                     i2l10142:
 49963  01A676  5003               	movf	i2___awmod@divisor,w,c
 49964  01A678  5C01               	subwf	i2___awmod@dividend,w,c
 49965  01A67A  5004               	movf	i2___awmod@divisor+1,w,c
 49966  01A67C  5802               	subwfb	i2___awmod@dividend+1,w,c
 49967  01A67E  A0D8               	btfss	status,0,c
 49968  01A680  D004               	goto	i2l10146
 49969  01A682  5003               	movf	i2___awmod@divisor,w,c
 49970  01A684  5E01               	subwf	i2___awmod@dividend,f,c
 49971  01A686  5004               	movf	i2___awmod@divisor+1,w,c
 49972  01A688  5A02               	subwfb	i2___awmod@dividend+1,f,c
 49973  01A68A                     i2l10146:
 49974  01A68A  90D8               	bcf	status,0,c
 49975  01A68C  3204               	rrcf	i2___awmod@divisor+1,f,c
 49976  01A68E  3203               	rrcf	i2___awmod@divisor,f,c
 49977  01A690  2E05               	decfsz	i2___awmod@counter,f,c
 49978  01A692  D7F1               	goto	i2l10142
 49979  01A694                     i2l10150:
 49980  01A694  5006               	movf	i2___awmod@sign,w,c
 49981  01A696  B4D8               	btfsc	status,2,c
 49982  01A698  D004               	goto	i2l10154
 49983  01A69A  6C01               	negf	i2___awmod@dividend,c
 49984  01A69C  1E02               	comf	i2___awmod@dividend+1,f,c
 49985  01A69E  B0D8               	btfsc	status,0,c
 49986  01A6A0  2A02               	incf	i2___awmod@dividend+1,f,c
 49987  01A6A2                     i2l10154:
 49988  01A6A2  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 49989  01A6A6  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 49990  01A6AA  0012               	return	
 49991  01A6AC                     __end_ofi2___awmod:
 49992                           	opt stack 0
 49993                           pclatu	equ	0xFFB
 49994                           pclath	equ	0xFFA
 49995                           tblptru	equ	0xFF8
 49996                           tblptrh	equ	0xFF7
 49997                           tblptrl	equ	0xFF6
 49998                           tablat	equ	0xFF5
 49999                           prodh	equ	0xFF4
 50000                           prodl	equ	0xFF3
 50001                           intcon	equ	0xFF2
 50002                           intcon2	equ	0xFF1
 50003                           intcon3	equ	0xFF0
 50004                           indf0	equ	0xFEF
 50005                           postinc0	equ	0xFEE
 50006                           fsr0h	equ	0xFEA
 50007                           fsr0l	equ	0xFE9
 50008                           wreg	equ	0xFE8
 50009                           indf1	equ	0xFE7
 50010                           postinc1	equ	0xFE6
 50011                           postdec1	equ	0xFE5
 50012                           fsr1h	equ	0xFE2
 50013                           fsr1l	equ	0xFE1
 50014                           indf2	equ	0xFDF
 50015                           postinc2	equ	0xFDE
 50016                           postdec2	equ	0xFDD
 50017                           fsr2h	equ	0xFDA
 50018                           fsr2l	equ	0xFD9
 50019                           status	equ	0xFD8
 50020                           
 50021 ;; *************** function i2___awdiv *****************
 50022 ;; Defined at:
 50023 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 50024 ;; Parameters:    Size  Location     Type
 50025 ;;  dividend        2    6[COMRAM] int 
 50026 ;;  divisor         2    8[COMRAM] int 
 50027 ;; Auto vars:     Size  Location     Type
 50028 ;;  __awdiv         2   12[COMRAM] int 
 50029 ;;  __awdiv         1   11[COMRAM] unsigned char 
 50030 ;;  __awdiv         1   10[COMRAM] unsigned char 
 50031 ;; Return value:  Size  Location     Type
 50032 ;;                  2    6[COMRAM] int 
 50033 ;; Registers used:
 50034 ;;		wreg, status,2, status,0, prodl
 50035 ;; Tracked objects:
 50036 ;;		On entry : 0/0
 50037 ;;		On exit  : 0/0
 50038 ;;		Unchanged: 0/0
 50039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50041 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50043 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50044 ;;Total ram usage:        8 bytes
 50045 ;; Hardware stack levels used:    1
 50046 ;; This function calls:
 50047 ;;		Nothing
 50048 ;; This function is called by:
 50049 ;;		i2_fround
 50050 ;;		i2_scale
 50051 ;;		i2_sprintf
 50052 ;; This function uses a non-reentrant model
 50053 ;;
 50054                           
 50055                           	psect	text146
 50056  01A312                     __ptext146:
 50057                           	opt stack 0
 50058  01A312                     i2___awdiv:
 50059                           	opt stack 14
 50060                           
 50061                           ;incstack = 0
 50062  01A312  0E00               	movlw	0
 50063  01A314  6E0C               	movwf	i2___awdiv@sign,c
 50064  01A316  500A               	movf	i2___awdiv@divisor+1,w,c
 50065  01A318  0A80               	xorlw	128
 50066  01A31A  6EF3               	movwf	prodl,c
 50067  01A31C  0E80               	movlw	128
 50068  01A31E  5CF3               	subwf	prodl,w,c
 50069  01A320  0E00               	movlw	0
 50070  01A322  B4D8               	btfsc	status,2,c
 50071  01A324  5C09               	subwf	i2___awdiv@divisor,w,c
 50072  01A326  B0D8               	btfsc	status,0,c
 50073  01A328  D006               	goto	i2l10086
 50074  01A32A  6C09               	negf	i2___awdiv@divisor,c
 50075  01A32C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 50076  01A32E  B0D8               	btfsc	status,0,c
 50077  01A330  2A0A               	incf	i2___awdiv@divisor+1,f,c
 50078  01A332  0E01               	movlw	1
 50079  01A334  6E0C               	movwf	i2___awdiv@sign,c
 50080  01A336                     i2l10086:
 50081  01A336  5008               	movf	i2___awdiv@dividend+1,w,c
 50082  01A338  0A80               	xorlw	128
 50083  01A33A  6EF3               	movwf	prodl,c
 50084  01A33C  0E80               	movlw	128
 50085  01A33E  5CF3               	subwf	prodl,w,c
 50086  01A340  0E00               	movlw	0
 50087  01A342  B4D8               	btfsc	status,2,c
 50088  01A344  5C07               	subwf	i2___awdiv@dividend,w,c
 50089  01A346  B0D8               	btfsc	status,0,c
 50090  01A348  D006               	goto	i2l10092
 50091  01A34A  6C07               	negf	i2___awdiv@dividend,c
 50092  01A34C  1E08               	comf	i2___awdiv@dividend+1,f,c
 50093  01A34E  B0D8               	btfsc	status,0,c
 50094  01A350  2A08               	incf	i2___awdiv@dividend+1,f,c
 50095  01A352  0E01               	movlw	1
 50096  01A354  1A0C               	xorwf	i2___awdiv@sign,f,c
 50097  01A356                     i2l10092:
 50098  01A356  0E00               	movlw	0
 50099  01A358  6E0E               	movwf	i2___awdiv@quotient+1,c
 50100  01A35A  0E00               	movlw	0
 50101  01A35C  6E0D               	movwf	i2___awdiv@quotient,c
 50102  01A35E  500A               	movf	i2___awdiv@divisor+1,w,c
 50103  01A360  1009               	iorwf	i2___awdiv@divisor,w,c
 50104  01A362  B4D8               	btfsc	status,2,c
 50105  01A364  D01C               	goto	i2l10114
 50106  01A366  0E01               	movlw	1
 50107  01A368  6E0B               	movwf	i2___awdiv@counter,c
 50108  01A36A  D004               	goto	i2l10100
 50109  01A36C                     i2l10098:
 50110  01A36C  90D8               	bcf	status,0,c
 50111  01A36E  3609               	rlcf	i2___awdiv@divisor,f,c
 50112  01A370  360A               	rlcf	i2___awdiv@divisor+1,f,c
 50113  01A372  2A0B               	incf	i2___awdiv@counter,f,c
 50114  01A374                     i2l10100:
 50115  01A374  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 50116  01A376  D7FA               	goto	i2l10098
 50117  01A378                     i2l10102:
 50118  01A378  90D8               	bcf	status,0,c
 50119  01A37A  360D               	rlcf	i2___awdiv@quotient,f,c
 50120  01A37C  360E               	rlcf	i2___awdiv@quotient+1,f,c
 50121  01A37E  5009               	movf	i2___awdiv@divisor,w,c
 50122  01A380  5C07               	subwf	i2___awdiv@dividend,w,c
 50123  01A382  500A               	movf	i2___awdiv@divisor+1,w,c
 50124  01A384  5808               	subwfb	i2___awdiv@dividend+1,w,c
 50125  01A386  A0D8               	btfss	status,0,c
 50126  01A388  D005               	goto	i2l10110
 50127  01A38A  5009               	movf	i2___awdiv@divisor,w,c
 50128  01A38C  5E07               	subwf	i2___awdiv@dividend,f,c
 50129  01A38E  500A               	movf	i2___awdiv@divisor+1,w,c
 50130  01A390  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 50131  01A392  800D               	bsf	i2___awdiv@quotient,0,c
 50132  01A394                     i2l10110:
 50133  01A394  90D8               	bcf	status,0,c
 50134  01A396  320A               	rrcf	i2___awdiv@divisor+1,f,c
 50135  01A398  3209               	rrcf	i2___awdiv@divisor,f,c
 50136  01A39A  2E0B               	decfsz	i2___awdiv@counter,f,c
 50137  01A39C  D7ED               	goto	i2l10102
 50138  01A39E                     i2l10114:
 50139  01A39E  500C               	movf	i2___awdiv@sign,w,c
 50140  01A3A0  B4D8               	btfsc	status,2,c
 50141  01A3A2  D004               	goto	i2l10118
 50142  01A3A4  6C0D               	negf	i2___awdiv@quotient,c
 50143  01A3A6  1E0E               	comf	i2___awdiv@quotient+1,f,c
 50144  01A3A8  B0D8               	btfsc	status,0,c
 50145  01A3AA  2A0E               	incf	i2___awdiv@quotient+1,f,c
 50146  01A3AC                     i2l10118:
 50147  01A3AC  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 50148  01A3B0  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 50149  01A3B4  0012               	return	
 50150  01A3B6                     __end_ofi2___awdiv:
 50151                           	opt stack 0
 50152                           pclatu	equ	0xFFB
 50153                           pclath	equ	0xFFA
 50154                           tblptru	equ	0xFF8
 50155                           tblptrh	equ	0xFF7
 50156                           tblptrl	equ	0xFF6
 50157                           tablat	equ	0xFF5
 50158                           prodh	equ	0xFF4
 50159                           prodl	equ	0xFF3
 50160                           intcon	equ	0xFF2
 50161                           intcon2	equ	0xFF1
 50162                           intcon3	equ	0xFF0
 50163                           indf0	equ	0xFEF
 50164                           postinc0	equ	0xFEE
 50165                           fsr0h	equ	0xFEA
 50166                           fsr0l	equ	0xFE9
 50167                           wreg	equ	0xFE8
 50168                           indf1	equ	0xFE7
 50169                           postinc1	equ	0xFE6
 50170                           postdec1	equ	0xFE5
 50171                           fsr1h	equ	0xFE2
 50172                           fsr1l	equ	0xFE1
 50173                           indf2	equ	0xFDF
 50174                           postinc2	equ	0xFDE
 50175                           postdec2	equ	0xFDD
 50176                           fsr2h	equ	0xFDA
 50177                           fsr2l	equ	0xFD9
 50178                           status	equ	0xFD8
 50179                           
 50180 ;; *************** function i2__tdiv_to_l_ *****************
 50181 ;; Defined at:
 50182 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
 50183 ;; Parameters:    Size  Location     Type
 50184 ;;  f1              3    0[COMRAM] float 
 50185 ;;  f2              3    3[COMRAM] float 
 50186 ;; Auto vars:     Size  Location     Type
 50187 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 50188 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 50189 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 50190 ;; Return value:  Size  Location     Type
 50191 ;;                  4    0[COMRAM] unsigned long 
 50192 ;; Registers used:
 50193 ;;		wreg, status,2, status,0
 50194 ;; Tracked objects:
 50195 ;;		On entry : 0/0
 50196 ;;		On exit  : 0/0
 50197 ;;		Unchanged: 0/0
 50198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50199 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50200 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50201 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50202 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50203 ;;Total ram usage:       15 bytes
 50204 ;; Hardware stack levels used:    1
 50205 ;; This function calls:
 50206 ;;		Nothing
 50207 ;; This function is called by:
 50208 ;;		i2_sprintf
 50209 ;; This function uses a non-reentrant model
 50210 ;;
 50211                           
 50212                           	psect	text147
 50213  0180D8                     __ptext147:
 50214                           	opt stack 0
 50215  0180D8                     i2__tdiv_to_l_:
 50216                           	opt stack 15
 50217                           
 50218                           ;incstack = 0
 50219  0180D8  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 50220  0180DC  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 50221  0180DE  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 50222  0180E0  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 50223  0180E2  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 50224  0180E4  E301               	bnc	u1138_41
 50225  0180E6  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 50226  0180E8                     u1138_41:
 50227  0180E8  5007               	movf	??i2__tdiv_to_l_,w,c
 50228  0180EA  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 50229  0180EC  660F               	tstfsz	i2__tdiv_to_l_@exp1& (0+255),c
 50230  0180EE  D009               	goto	i2l10674
 50231  0180F0  0E00               	movlw	0
 50232  0180F2  6E01               	movwf	?i2__tdiv_to_l_,c
 50233  0180F4  0E00               	movlw	0
 50234  0180F6  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50235  0180F8  0E00               	movlw	0
 50236  0180FA  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50237  0180FC  0E00               	movlw	0
 50238  0180FE  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50239  018100  0012               	return	
 50240  018102                     i2l10674:
 50241  018102  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 50242  018106  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 50243  018108  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 50244  01810A  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 50245  01810C  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 50246  01810E  E301               	bnc	u1140_41
 50247  018110  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 50248  018112                     u1140_41:
 50249  018112  5007               	movf	??i2__tdiv_to_l_,w,c
 50250  018114  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 50251  018116  660E               	tstfsz	i2__tdiv_to_l_@cntr& (0+255),c
 50252  018118  D009               	goto	i2l10680
 50253  01811A  0E00               	movlw	0
 50254  01811C  6E01               	movwf	?i2__tdiv_to_l_,c
 50255  01811E  0E00               	movlw	0
 50256  018120  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50257  018122  0E00               	movlw	0
 50258  018124  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50259  018126  0E00               	movlw	0
 50260  018128  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50261  01812A  0012               	return	
 50262  01812C                     i2l10680:
 50263  01812C  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 50264  01812E  0EFF               	movlw	255
 50265  018130  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 50266  018132  0EFF               	movlw	255
 50267  018134  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 50268  018136  0E00               	movlw	0
 50269  018138  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 50270  01813A  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 50271  01813C  0EFF               	movlw	255
 50272  01813E  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 50273  018140  0EFF               	movlw	255
 50274  018142  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 50275  018144  0E00               	movlw	0
 50276  018146  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 50277  018148  0E00               	movlw	0
 50278  01814A  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 50279  01814C  0E00               	movlw	0
 50280  01814E  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 50281  018150  0E00               	movlw	0
 50282  018152  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 50283  018154  0E00               	movlw	0
 50284  018156  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 50285  018158  0E7F               	movlw	127
 50286  01815A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 50287  01815C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 50288  01815E  0F98               	addlw	152
 50289  018160  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 50290  018162  0E18               	movlw	24
 50291  018164  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 50292  018166                     i2l2567:
 50293  018166  90D8               	bcf	status,0,c
 50294  018168  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 50295  01816A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 50296  01816C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 50297  01816E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 50298  018170  5004               	movf	i2__tdiv_to_l_@f2,w,c
 50299  018172  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 50300  018174  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 50301  018176  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 50302  018178  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 50303  01817A  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 50304  01817C  A0D8               	btfss	status,0,c
 50305  01817E  D007               	goto	i2l2568
 50306  018180  5004               	movf	i2__tdiv_to_l_@f2,w,c
 50307  018182  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 50308  018184  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 50309  018186  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 50310  018188  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 50311  01818A  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 50312  01818C  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 50313  01818E                     i2l2568:
 50314  01818E  90D8               	bcf	status,0,c
 50315  018190  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 50316  018192  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 50317  018194  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 50318  018196  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 50319  018198  D7E6               	goto	i2l2567
 50320  01819A  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 50321  01819C  D019               	goto	i2l10712
 50322  01819E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 50323  0181A0  0A80               	xorlw	128
 50324  0181A2  6E07               	movwf	??i2__tdiv_to_l_& (0+255),c
 50325  0181A4  0EE9               	movlw	233
 50326  0181A6  0A80               	xorlw	128
 50327  0181A8  5C07               	subwf	??i2__tdiv_to_l_,w,c
 50328  0181AA  B0D8               	btfsc	status,0,c
 50329  0181AC  D009               	goto	i2l10708
 50330  0181AE  0E00               	movlw	0
 50331  0181B0  6E01               	movwf	?i2__tdiv_to_l_,c
 50332  0181B2  0E00               	movlw	0
 50333  0181B4  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50334  0181B6  0E00               	movlw	0
 50335  0181B8  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50336  0181BA  0E00               	movlw	0
 50337  0181BC  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50338  0181BE  0012               	return	
 50339  0181C0                     i2l10708:
 50340  0181C0  90D8               	bcf	status,0,c
 50341  0181C2  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 50342  0181C4  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 50343  0181C6  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 50344  0181C8  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 50345  0181CA  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 50346  0181CC  D7F9               	goto	i2l10708
 50347  0181CE  D014               	goto	i2l2574
 50348  0181D0                     i2l10712:
 50349  0181D0  0E17               	movlw	23
 50350  0181D2  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 50351  0181D4  D00F               	goto	i2l10720
 50352  0181D6  0E00               	movlw	0
 50353  0181D8  6E01               	movwf	?i2__tdiv_to_l_,c
 50354  0181DA  0E00               	movlw	0
 50355  0181DC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50356  0181DE  0E00               	movlw	0
 50357  0181E0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50358  0181E2  0E00               	movlw	0
 50359  0181E4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50360  0181E6  0012               	return	
 50361  0181E8                     i2l10718:
 50362  0181E8  90D8               	bcf	status,0,c
 50363  0181EA  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 50364  0181EC  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 50365  0181EE  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 50366  0181F0  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 50367  0181F2  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 50368  0181F4                     i2l10720:
 50369  0181F4  660F               	tstfsz	i2__tdiv_to_l_@exp1,c
 50370  0181F6  D7F8               	goto	i2l10718
 50371  0181F8                     i2l2574:
 50372  0181F8  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 50373  0181FC  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 50374  018200  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 50375  018204  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 50376  018208  0012               	return	
 50377  01820A                     __end_ofi2__tdiv_to_l_:
 50378                           	opt stack 0
 50379                           pclatu	equ	0xFFB
 50380                           pclath	equ	0xFFA
 50381                           tblptru	equ	0xFF8
 50382                           tblptrh	equ	0xFF7
 50383                           tblptrl	equ	0xFF6
 50384                           tablat	equ	0xFF5
 50385                           prodh	equ	0xFF4
 50386                           prodl	equ	0xFF3
 50387                           intcon	equ	0xFF2
 50388                           intcon2	equ	0xFF1
 50389                           intcon3	equ	0xFF0
 50390                           indf0	equ	0xFEF
 50391                           postinc0	equ	0xFEE
 50392                           fsr0h	equ	0xFEA
 50393                           fsr0l	equ	0xFE9
 50394                           wreg	equ	0xFE8
 50395                           indf1	equ	0xFE7
 50396                           postinc1	equ	0xFE6
 50397                           postdec1	equ	0xFE5
 50398                           fsr1h	equ	0xFE2
 50399                           fsr1l	equ	0xFE1
 50400                           indf2	equ	0xFDF
 50401                           postinc2	equ	0xFDE
 50402                           postdec2	equ	0xFDD
 50403                           fsr2h	equ	0xFDA
 50404                           fsr2l	equ	0xFD9
 50405                           status	equ	0xFD8
 50406                           
 50407 ;; *************** function i2__div_to_l_ *****************
 50408 ;; Defined at:
 50409 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
 50410 ;; Parameters:    Size  Location     Type
 50411 ;;  f1              3    0[COMRAM] unsigned long 
 50412 ;;  f2              3    3[COMRAM] unsigned long 
 50413 ;; Auto vars:     Size  Location     Type
 50414 ;;  _div_to_l_      4   10[COMRAM] unsigned long 
 50415 ;;  _div_to_l_      1   15[COMRAM] unsigned char 
 50416 ;;  _div_to_l_      1   14[COMRAM] unsigned char 
 50417 ;; Return value:  Size  Location     Type
 50418 ;;                  4    0[COMRAM] unsigned long 
 50419 ;; Registers used:
 50420 ;;		wreg, status,2, status,0
 50421 ;; Tracked objects:
 50422 ;;		On entry : 0/0
 50423 ;;		On exit  : 0/0
 50424 ;;		Unchanged: 0/0
 50425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50426 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50427 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50429 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50430 ;;Total ram usage:       16 bytes
 50431 ;; Hardware stack levels used:    1
 50432 ;; This function calls:
 50433 ;;		Nothing
 50434 ;; This function is called by:
 50435 ;;		i2_sprintf
 50436 ;; This function uses a non-reentrant model
 50437 ;;
 50438                           
 50439                           	psect	text148
 50440  017A42                     __ptext148:
 50441                           	opt stack 0
 50442  017A42                     i2__div_to_l_:
 50443                           	opt stack 15
 50444                           
 50445                           ;incstack = 0
 50446  017A42  C001  F007         	movff	i2__div_to_l_@f1,??i2__div_to_l_
 50447  017A46  C002  F008         	movff	i2__div_to_l_@f1+1,??i2__div_to_l_+1
 50448  017A4A  C003  F009         	movff	i2__div_to_l_@f1+2,??i2__div_to_l_+2
 50449  017A4E  C004  F00A         	movff	i2__div_to_l_@f1+3,??i2__div_to_l_+3
 50450  017A52  0E18               	movlw	24
 50451  017A54  D005               	goto	i2u1129_40
 50452  017A56                     i2u1129_45:
 50453  017A56  90D8               	bcf	status,0,c
 50454  017A58  320A               	rrcf	??i2__div_to_l_+3,f,c
 50455  017A5A  3209               	rrcf	??i2__div_to_l_+2,f,c
 50456  017A5C  3208               	rrcf	??i2__div_to_l_+1,f,c
 50457  017A5E  3207               	rrcf	??i2__div_to_l_,f,c
 50458  017A60                     i2u1129_40:
 50459  017A60  2EE8               	decfsz	wreg,f,c
 50460  017A62  D7F9               	goto	i2u1129_45
 50461  017A64  5007               	movf	??i2__div_to_l_,w,c
 50462  017A66  6E10               	movwf	i2__div_to_l_@exp1,c
 50463  017A68  6610               	tstfsz	i2__div_to_l_@exp1& (0+255),c
 50464  017A6A  D009               	goto	i2l10616
 50465  017A6C  0E00               	movlw	0
 50466  017A6E  6E01               	movwf	?i2__div_to_l_,c
 50467  017A70  0E00               	movlw	0
 50468  017A72  6E02               	movwf	?i2__div_to_l_+1,c
 50469  017A74  0E00               	movlw	0
 50470  017A76  6E03               	movwf	?i2__div_to_l_+2,c
 50471  017A78  0E00               	movlw	0
 50472  017A7A  6E04               	movwf	?i2__div_to_l_+3,c
 50473  017A7C  0012               	return	
 50474  017A7E                     i2l10616:
 50475  017A7E  C004  F007         	movff	i2__div_to_l_@f2,??i2__div_to_l_
 50476  017A82  C005  F008         	movff	i2__div_to_l_@f2+1,??i2__div_to_l_+1
 50477  017A86  C006  F009         	movff	i2__div_to_l_@f2+2,??i2__div_to_l_+2
 50478  017A8A  C007  F00A         	movff	i2__div_to_l_@f2+3,??i2__div_to_l_+3
 50479  017A8E  0E18               	movlw	24
 50480  017A90  D005               	goto	i2u1131_40
 50481  017A92                     i2u1131_45:
 50482  017A92  90D8               	bcf	status,0,c
 50483  017A94  320A               	rrcf	??i2__div_to_l_+3,f,c
 50484  017A96  3209               	rrcf	??i2__div_to_l_+2,f,c
 50485  017A98  3208               	rrcf	??i2__div_to_l_+1,f,c
 50486  017A9A  3207               	rrcf	??i2__div_to_l_,f,c
 50487  017A9C                     i2u1131_40:
 50488  017A9C  2EE8               	decfsz	wreg,f,c
 50489  017A9E  D7F9               	goto	i2u1131_45
 50490  017AA0  5007               	movf	??i2__div_to_l_,w,c
 50491  017AA2  6E0F               	movwf	i2__div_to_l_@cntr,c
 50492  017AA4  660F               	tstfsz	i2__div_to_l_@cntr& (0+255),c
 50493  017AA6  D009               	goto	i2l10622
 50494  017AA8  0E00               	movlw	0
 50495  017AAA  6E01               	movwf	?i2__div_to_l_,c
 50496  017AAC  0E00               	movlw	0
 50497  017AAE  6E02               	movwf	?i2__div_to_l_+1,c
 50498  017AB0  0E00               	movlw	0
 50499  017AB2  6E03               	movwf	?i2__div_to_l_+2,c
 50500  017AB4  0E00               	movlw	0
 50501  017AB6  6E04               	movwf	?i2__div_to_l_+3,c
 50502  017AB8  0012               	return	
 50503  017ABA                     i2l10622:
 50504  017ABA  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 50505  017ABC  0EFF               	movlw	255
 50506  017ABE  1601               	andwf	i2__div_to_l_@f1,f,c
 50507  017AC0  0EFF               	movlw	255
 50508  017AC2  1602               	andwf	i2__div_to_l_@f1+1,f,c
 50509  017AC4  0EFF               	movlw	255
 50510  017AC6  1603               	andwf	i2__div_to_l_@f1+2,f,c
 50511  017AC8  0E00               	movlw	0
 50512  017ACA  1604               	andwf	i2__div_to_l_@f1+3,f,c
 50513  017ACC  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 50514  017ACE  0EFF               	movlw	255
 50515  017AD0  1604               	andwf	i2__div_to_l_@f2,f,c
 50516  017AD2  0EFF               	movlw	255
 50517  017AD4  1605               	andwf	i2__div_to_l_@f2+1,f,c
 50518  017AD6  0EFF               	movlw	255
 50519  017AD8  1606               	andwf	i2__div_to_l_@f2+2,f,c
 50520  017ADA  0E00               	movlw	0
 50521  017ADC  1607               	andwf	i2__div_to_l_@f2+3,f,c
 50522  017ADE  0E00               	movlw	0
 50523  017AE0  6E0B               	movwf	i2__div_to_l_@quot,c
 50524  017AE2  0E00               	movlw	0
 50525  017AE4  6E0C               	movwf	i2__div_to_l_@quot+1,c
 50526  017AE6  0E00               	movlw	0
 50527  017AE8  6E0D               	movwf	i2__div_to_l_@quot+2,c
 50528  017AEA  0E00               	movlw	0
 50529  017AEC  6E0E               	movwf	i2__div_to_l_@quot+3,c
 50530  017AEE  0E7F               	movlw	127
 50531  017AF0  5E10               	subwf	i2__div_to_l_@exp1,f,c
 50532  017AF2  500F               	movf	i2__div_to_l_@cntr,w,c
 50533  017AF4  0FA0               	addlw	160
 50534  017AF6  5E10               	subwf	i2__div_to_l_@exp1,f,c
 50535  017AF8  0E20               	movlw	32
 50536  017AFA  6E0F               	movwf	i2__div_to_l_@cntr,c
 50537  017AFC                     i2l10636:
 50538  017AFC  90D8               	bcf	status,0,c
 50539  017AFE  360B               	rlcf	i2__div_to_l_@quot,f,c
 50540  017B00  360C               	rlcf	i2__div_to_l_@quot+1,f,c
 50541  017B02  360D               	rlcf	i2__div_to_l_@quot+2,f,c
 50542  017B04  360E               	rlcf	i2__div_to_l_@quot+3,f,c
 50543  017B06  5004               	movf	i2__div_to_l_@f2,w,c
 50544  017B08  5C01               	subwf	i2__div_to_l_@f1,w,c
 50545  017B0A  5005               	movf	i2__div_to_l_@f2+1,w,c
 50546  017B0C  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 50547  017B0E  5006               	movf	i2__div_to_l_@f2+2,w,c
 50548  017B10  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 50549  017B12  5007               	movf	i2__div_to_l_@f2+3,w,c
 50550  017B14  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 50551  017B16  A0D8               	btfss	status,0,c
 50552  017B18  D009               	goto	i2l10644
 50553  017B1A  5004               	movf	i2__div_to_l_@f2,w,c
 50554  017B1C  5E01               	subwf	i2__div_to_l_@f1,f,c
 50555  017B1E  5005               	movf	i2__div_to_l_@f2+1,w,c
 50556  017B20  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 50557  017B22  5006               	movf	i2__div_to_l_@f2+2,w,c
 50558  017B24  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 50559  017B26  5007               	movf	i2__div_to_l_@f2+3,w,c
 50560  017B28  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 50561  017B2A  800B               	bsf	i2__div_to_l_@quot,0,c
 50562  017B2C                     i2l10644:
 50563  017B2C  90D8               	bcf	status,0,c
 50564  017B2E  3601               	rlcf	i2__div_to_l_@f1,f,c
 50565  017B30  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 50566  017B32  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 50567  017B34  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 50568  017B36  2E0F               	decfsz	i2__div_to_l_@cntr,f,c
 50569  017B38  D7E1               	goto	i2l10636
 50570  017B3A  AE10               	btfss	i2__div_to_l_@exp1,7,c
 50571  017B3C  D019               	goto	i2l10658
 50572  017B3E  5010               	movf	i2__div_to_l_@exp1,w,c
 50573  017B40  0A80               	xorlw	128
 50574  017B42  6E07               	movwf	??i2__div_to_l_& (0+255),c
 50575  017B44  0EE1               	movlw	225
 50576  017B46  0A80               	xorlw	128
 50577  017B48  5C07               	subwf	??i2__div_to_l_,w,c
 50578  017B4A  B0D8               	btfsc	status,0,c
 50579  017B4C  D009               	goto	i2l10654
 50580  017B4E  0E00               	movlw	0
 50581  017B50  6E01               	movwf	?i2__div_to_l_,c
 50582  017B52  0E00               	movlw	0
 50583  017B54  6E02               	movwf	?i2__div_to_l_+1,c
 50584  017B56  0E00               	movlw	0
 50585  017B58  6E03               	movwf	?i2__div_to_l_+2,c
 50586  017B5A  0E00               	movlw	0
 50587  017B5C  6E04               	movwf	?i2__div_to_l_+3,c
 50588  017B5E  0012               	return	
 50589  017B60                     i2l10654:
 50590  017B60  90D8               	bcf	status,0,c
 50591  017B62  320E               	rrcf	i2__div_to_l_@quot+3,f,c
 50592  017B64  320D               	rrcf	i2__div_to_l_@quot+2,f,c
 50593  017B66  320C               	rrcf	i2__div_to_l_@quot+1,f,c
 50594  017B68  320B               	rrcf	i2__div_to_l_@quot,f,c
 50595  017B6A  3E10               	incfsz	i2__div_to_l_@exp1,f,c
 50596  017B6C  D7F9               	goto	i2l10654
 50597  017B6E  D014               	goto	i2l2456
 50598  017B70                     i2l10658:
 50599  017B70  0E1F               	movlw	31
 50600  017B72  6410               	cpfsgt	i2__div_to_l_@exp1,c
 50601  017B74  D00F               	goto	i2l10666
 50602  017B76  0E00               	movlw	0
 50603  017B78  6E01               	movwf	?i2__div_to_l_,c
 50604  017B7A  0E00               	movlw	0
 50605  017B7C  6E02               	movwf	?i2__div_to_l_+1,c
 50606  017B7E  0E00               	movlw	0
 50607  017B80  6E03               	movwf	?i2__div_to_l_+2,c
 50608  017B82  0E00               	movlw	0
 50609  017B84  6E04               	movwf	?i2__div_to_l_+3,c
 50610  017B86  0012               	return	
 50611  017B88                     i2l10664:
 50612  017B88  90D8               	bcf	status,0,c
 50613  017B8A  360B               	rlcf	i2__div_to_l_@quot,f,c
 50614  017B8C  360C               	rlcf	i2__div_to_l_@quot+1,f,c
 50615  017B8E  360D               	rlcf	i2__div_to_l_@quot+2,f,c
 50616  017B90  360E               	rlcf	i2__div_to_l_@quot+3,f,c
 50617  017B92  0610               	decf	i2__div_to_l_@exp1,f,c
 50618  017B94                     i2l10666:
 50619  017B94  6610               	tstfsz	i2__div_to_l_@exp1,c
 50620  017B96  D7F8               	goto	i2l10664
 50621  017B98                     i2l2456:
 50622  017B98  C00B  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 50623  017B9C  C00C  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 50624  017BA0  C00D  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 50625  017BA4  C00E  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 50626  017BA8  0012               	return	
 50627  017BAA                     __end_ofi2__div_to_l_:
 50628                           	opt stack 0
 50629                           pclatu	equ	0xFFB
 50630                           pclath	equ	0xFFA
 50631                           tblptru	equ	0xFF8
 50632                           tblptrh	equ	0xFF7
 50633                           tblptrl	equ	0xFF6
 50634                           tablat	equ	0xFF5
 50635                           prodh	equ	0xFF4
 50636                           prodl	equ	0xFF3
 50637                           intcon	equ	0xFF2
 50638                           intcon2	equ	0xFF1
 50639                           intcon3	equ	0xFF0
 50640                           indf0	equ	0xFEF
 50641                           postinc0	equ	0xFEE
 50642                           fsr0h	equ	0xFEA
 50643                           fsr0l	equ	0xFE9
 50644                           wreg	equ	0xFE8
 50645                           indf1	equ	0xFE7
 50646                           postinc1	equ	0xFE6
 50647                           postdec1	equ	0xFE5
 50648                           fsr1h	equ	0xFE2
 50649                           fsr1l	equ	0xFE1
 50650                           indf2	equ	0xFDF
 50651                           postinc2	equ	0xFDE
 50652                           postdec2	equ	0xFDD
 50653                           fsr2h	equ	0xFDA
 50654                           fsr2l	equ	0xFD9
 50655                           status	equ	0xFD8
 50656                           
 50657 ;; *************** function i2___lltoft *****************
 50658 ;; Defined at:
 50659 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
 50660 ;; Parameters:    Size  Location     Type
 50661 ;;  c               4    8[COMRAM] unsigned long 
 50662 ;; Auto vars:     Size  Location     Type
 50663 ;;  __lltoft        1   16[COMRAM] unsigned char 
 50664 ;; Return value:  Size  Location     Type
 50665 ;;                  3    8[COMRAM] float 
 50666 ;; Registers used:
 50667 ;;		wreg, status,2, status,0, cstack
 50668 ;; Tracked objects:
 50669 ;;		On entry : 0/0
 50670 ;;		On exit  : 0/0
 50671 ;;		Unchanged: 0/0
 50672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50676 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50677 ;;Total ram usage:        9 bytes
 50678 ;; Hardware stack levels used:    1
 50679 ;; Hardware stack levels required when called:    1
 50680 ;; This function calls:
 50681 ;;		i2___ftpack
 50682 ;; This function is called by:
 50683 ;;		i2_sprintf
 50684 ;; This function uses a non-reentrant model
 50685 ;;
 50686                           
 50687                           	psect	text149
 50688  01AEE0                     __ptext149:
 50689                           	opt stack 0
 50690  01AEE0                     i2___lltoft:
 50691                           	opt stack 14
 50692                           
 50693                           ;incstack = 0
 50694  01AEE0  0E8E               	movlw	142
 50695  01AEE2  6E11               	movwf	i2___lltoft@exp,c
 50696  01AEE4  D006               	goto	i2l10804
 50697  01AEE6                     i2l10802:
 50698  01AEE6  90D8               	bcf	status,0,c
 50699  01AEE8  320C               	rrcf	i2___lltoft@c+3,f,c
 50700  01AEEA  320B               	rrcf	i2___lltoft@c+2,f,c
 50701  01AEEC  320A               	rrcf	i2___lltoft@c+1,f,c
 50702  01AEEE  3209               	rrcf	i2___lltoft@c,f,c
 50703  01AEF0  2A11               	incf	i2___lltoft@exp,f,c
 50704  01AEF2                     i2l10804:
 50705  01AEF2  0E00               	movlw	0
 50706  01AEF4  1409               	andwf	i2___lltoft@c,w,c
 50707  01AEF6  6E0D               	movwf	??i2___lltoft& (0+255),c
 50708  01AEF8  0E00               	movlw	0
 50709  01AEFA  140A               	andwf	i2___lltoft@c+1,w,c
 50710  01AEFC  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 50711  01AEFE  0E00               	movlw	0
 50712  01AF00  140B               	andwf	i2___lltoft@c+2,w,c
 50713  01AF02  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 50714  01AF04  0EFF               	movlw	255
 50715  01AF06  140C               	andwf	i2___lltoft@c+3,w,c
 50716  01AF08  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 50717  01AF0A  5010               	movf	??i2___lltoft+3,w,c
 50718  01AF0C  100D               	iorwf	??i2___lltoft,w,c
 50719  01AF0E  100E               	iorwf	??i2___lltoft+1,w,c
 50720  01AF10  100F               	iorwf	??i2___lltoft+2,w,c
 50721  01AF12  A4D8               	btfss	status,2,c
 50722  01AF14  D7E8               	goto	i2l10802
 50723  01AF16  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 50724  01AF1A  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 50725  01AF1E  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 50726  01AF22  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 50727  01AF26  0E00               	movlw	0
 50728  01AF28  6E05               	movwf	i2___ftpack@sign,c
 50729  01AF2A  EC91  F0D0         	call	i2___ftpack	;wreg free
 50730  01AF2E  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 50731  01AF32  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 50732  01AF36  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 50733  01AF3A  0012               	return	
 50734  01AF3C                     __end_ofi2___lltoft:
 50735                           	opt stack 0
 50736                           pclatu	equ	0xFFB
 50737                           pclath	equ	0xFFA
 50738                           tblptru	equ	0xFF8
 50739                           tblptrh	equ	0xFF7
 50740                           tblptrl	equ	0xFF6
 50741                           tablat	equ	0xFF5
 50742                           prodh	equ	0xFF4
 50743                           prodl	equ	0xFF3
 50744                           intcon	equ	0xFF2
 50745                           intcon2	equ	0xFF1
 50746                           intcon3	equ	0xFF0
 50747                           indf0	equ	0xFEF
 50748                           postinc0	equ	0xFEE
 50749                           fsr0h	equ	0xFEA
 50750                           fsr0l	equ	0xFE9
 50751                           wreg	equ	0xFE8
 50752                           indf1	equ	0xFE7
 50753                           postinc1	equ	0xFE6
 50754                           postdec1	equ	0xFE5
 50755                           fsr1h	equ	0xFE2
 50756                           fsr1l	equ	0xFE1
 50757                           indf2	equ	0xFDF
 50758                           postinc2	equ	0xFDE
 50759                           postdec2	equ	0xFDD
 50760                           fsr2h	equ	0xFDA
 50761                           fsr2l	equ	0xFD9
 50762                           status	equ	0xFD8
 50763                           
 50764 ;; *************** function i2___llmod *****************
 50765 ;; Defined at:
 50766 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 50767 ;; Parameters:    Size  Location     Type
 50768 ;;  dividend        4    0[COMRAM] unsigned long 
 50769 ;;  divisor         4    4[COMRAM] unsigned long 
 50770 ;; Auto vars:     Size  Location     Type
 50771 ;;  __llmod         1    8[COMRAM] unsigned char 
 50772 ;; Return value:  Size  Location     Type
 50773 ;;                  4    0[COMRAM] unsigned long 
 50774 ;; Registers used:
 50775 ;;		wreg, status,2, status,0
 50776 ;; Tracked objects:
 50777 ;;		On entry : 0/0
 50778 ;;		On exit  : 0/0
 50779 ;;		Unchanged: 0/0
 50780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50781 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50784 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50785 ;;Total ram usage:        9 bytes
 50786 ;; Hardware stack levels used:    1
 50787 ;; This function calls:
 50788 ;;		Nothing
 50789 ;; This function is called by:
 50790 ;;		i2_sprintf
 50791 ;; This function uses a non-reentrant model
 50792 ;;
 50793                           
 50794                           	psect	text150
 50795  01AD5E                     __ptext150:
 50796                           	opt stack 0
 50797  01AD5E                     i2___llmod:
 50798                           	opt stack 15
 50799                           
 50800                           ;incstack = 0
 50801  01AD5E  5008               	movf	i2___llmod@divisor+3,w,c
 50802  01AD60  1005               	iorwf	i2___llmod@divisor,w,c
 50803  01AD62  1006               	iorwf	i2___llmod@divisor+1,w,c
 50804  01AD64  1007               	iorwf	i2___llmod@divisor+2,w,c
 50805  01AD66  B4D8               	btfsc	status,2,c
 50806  01AD68  D024               	goto	i2l2663
 50807  01AD6A  0E01               	movlw	1
 50808  01AD6C  6E09               	movwf	i2___llmod@counter,c
 50809  01AD6E  D006               	goto	i2l10790
 50810  01AD70                     i2l10788:
 50811  01AD70  90D8               	bcf	status,0,c
 50812  01AD72  3605               	rlcf	i2___llmod@divisor,f,c
 50813  01AD74  3606               	rlcf	i2___llmod@divisor+1,f,c
 50814  01AD76  3607               	rlcf	i2___llmod@divisor+2,f,c
 50815  01AD78  3608               	rlcf	i2___llmod@divisor+3,f,c
 50816  01AD7A  2A09               	incf	i2___llmod@counter,f,c
 50817  01AD7C                     i2l10790:
 50818  01AD7C  AE08               	btfss	i2___llmod@divisor+3,7,c
 50819  01AD7E  D7F8               	goto	i2l10788
 50820  01AD80                     i2l10792:
 50821  01AD80  5005               	movf	i2___llmod@divisor,w,c
 50822  01AD82  5C01               	subwf	i2___llmod@dividend,w,c
 50823  01AD84  5006               	movf	i2___llmod@divisor+1,w,c
 50824  01AD86  5802               	subwfb	i2___llmod@dividend+1,w,c
 50825  01AD88  5007               	movf	i2___llmod@divisor+2,w,c
 50826  01AD8A  5803               	subwfb	i2___llmod@dividend+2,w,c
 50827  01AD8C  5008               	movf	i2___llmod@divisor+3,w,c
 50828  01AD8E  5804               	subwfb	i2___llmod@dividend+3,w,c
 50829  01AD90  A0D8               	btfss	status,0,c
 50830  01AD92  D008               	goto	i2l10796
 50831  01AD94  5005               	movf	i2___llmod@divisor,w,c
 50832  01AD96  5E01               	subwf	i2___llmod@dividend,f,c
 50833  01AD98  5006               	movf	i2___llmod@divisor+1,w,c
 50834  01AD9A  5A02               	subwfb	i2___llmod@dividend+1,f,c
 50835  01AD9C  5007               	movf	i2___llmod@divisor+2,w,c
 50836  01AD9E  5A03               	subwfb	i2___llmod@dividend+2,f,c
 50837  01ADA0  5008               	movf	i2___llmod@divisor+3,w,c
 50838  01ADA2  5A04               	subwfb	i2___llmod@dividend+3,f,c
 50839  01ADA4                     i2l10796:
 50840  01ADA4  90D8               	bcf	status,0,c
 50841  01ADA6  3208               	rrcf	i2___llmod@divisor+3,f,c
 50842  01ADA8  3207               	rrcf	i2___llmod@divisor+2,f,c
 50843  01ADAA  3206               	rrcf	i2___llmod@divisor+1,f,c
 50844  01ADAC  3205               	rrcf	i2___llmod@divisor,f,c
 50845  01ADAE  2E09               	decfsz	i2___llmod@counter,f,c
 50846  01ADB0  D7E7               	goto	i2l10792
 50847  01ADB2                     i2l2663:
 50848  01ADB2  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
 50849  01ADB6  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
 50850  01ADBA  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
 50851  01ADBE  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
 50852  01ADC2  0012               	return	
 50853  01ADC4                     __end_ofi2___llmod:
 50854                           	opt stack 0
 50855                           pclatu	equ	0xFFB
 50856                           pclath	equ	0xFFA
 50857                           tblptru	equ	0xFF8
 50858                           tblptrh	equ	0xFF7
 50859                           tblptrl	equ	0xFF6
 50860                           tablat	equ	0xFF5
 50861                           prodh	equ	0xFF4
 50862                           prodl	equ	0xFF3
 50863                           intcon	equ	0xFF2
 50864                           intcon2	equ	0xFF1
 50865                           intcon3	equ	0xFF0
 50866                           indf0	equ	0xFEF
 50867                           postinc0	equ	0xFEE
 50868                           fsr0h	equ	0xFEA
 50869                           fsr0l	equ	0xFE9
 50870                           wreg	equ	0xFE8
 50871                           indf1	equ	0xFE7
 50872                           postinc1	equ	0xFE6
 50873                           postdec1	equ	0xFE5
 50874                           fsr1h	equ	0xFE2
 50875                           fsr1l	equ	0xFE1
 50876                           indf2	equ	0xFDF
 50877                           postinc2	equ	0xFDE
 50878                           postdec2	equ	0xFDD
 50879                           fsr2h	equ	0xFDA
 50880                           fsr2l	equ	0xFD9
 50881                           status	equ	0xFD8
 50882                           
 50883 ;; *************** function i2___lldiv *****************
 50884 ;; Defined at:
 50885 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 50886 ;; Parameters:    Size  Location     Type
 50887 ;;  dividend        4    0[COMRAM] unsigned long 
 50888 ;;  divisor         4    4[COMRAM] unsigned long 
 50889 ;; Auto vars:     Size  Location     Type
 50890 ;;  __lldiv         4    8[COMRAM] unsigned long 
 50891 ;;  __lldiv         1   12[COMRAM] unsigned char 
 50892 ;; Return value:  Size  Location     Type
 50893 ;;                  4    0[COMRAM] unsigned long 
 50894 ;; Registers used:
 50895 ;;		wreg, status,2, status,0
 50896 ;; Tracked objects:
 50897 ;;		On entry : 0/0
 50898 ;;		On exit  : 0/0
 50899 ;;		Unchanged: 0/0
 50900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50901 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50902 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50904 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50905 ;;Total ram usage:       13 bytes
 50906 ;; Hardware stack levels used:    1
 50907 ;; This function calls:
 50908 ;;		Nothing
 50909 ;; This function is called by:
 50910 ;;		i2_sprintf
 50911 ;; This function uses a non-reentrant model
 50912 ;;
 50913                           
 50914                           	psect	text151
 50915  01A95A                     __ptext151:
 50916                           	opt stack 0
 50917  01A95A                     i2___lldiv:
 50918                           	opt stack 15
 50919                           
 50920                           ;incstack = 0
 50921  01A95A  0E00               	movlw	0
 50922  01A95C  6E09               	movwf	i2___lldiv@quotient,c
 50923  01A95E  0E00               	movlw	0
 50924  01A960  6E0A               	movwf	i2___lldiv@quotient+1,c
 50925  01A962  0E00               	movlw	0
 50926  01A964  6E0B               	movwf	i2___lldiv@quotient+2,c
 50927  01A966  0E00               	movlw	0
 50928  01A968  6E0C               	movwf	i2___lldiv@quotient+3,c
 50929  01A96A  5008               	movf	i2___lldiv@divisor+3,w,c
 50930  01A96C  1005               	iorwf	i2___lldiv@divisor,w,c
 50931  01A96E  1006               	iorwf	i2___lldiv@divisor+1,w,c
 50932  01A970  1007               	iorwf	i2___lldiv@divisor+2,w,c
 50933  01A972  B4D8               	btfsc	status,2,c
 50934  01A974  D02A               	goto	i2l2653
 50935  01A976  0E01               	movlw	1
 50936  01A978  6E0D               	movwf	i2___lldiv@counter,c
 50937  01A97A  D006               	goto	i2l10770
 50938  01A97C                     i2l10768:
 50939  01A97C  90D8               	bcf	status,0,c
 50940  01A97E  3605               	rlcf	i2___lldiv@divisor,f,c
 50941  01A980  3606               	rlcf	i2___lldiv@divisor+1,f,c
 50942  01A982  3607               	rlcf	i2___lldiv@divisor+2,f,c
 50943  01A984  3608               	rlcf	i2___lldiv@divisor+3,f,c
 50944  01A986  2A0D               	incf	i2___lldiv@counter,f,c
 50945  01A988                     i2l10770:
 50946  01A988  AE08               	btfss	i2___lldiv@divisor+3,7,c
 50947  01A98A  D7F8               	goto	i2l10768
 50948  01A98C                     i2l10772:
 50949  01A98C  90D8               	bcf	status,0,c
 50950  01A98E  3609               	rlcf	i2___lldiv@quotient,f,c
 50951  01A990  360A               	rlcf	i2___lldiv@quotient+1,f,c
 50952  01A992  360B               	rlcf	i2___lldiv@quotient+2,f,c
 50953  01A994  360C               	rlcf	i2___lldiv@quotient+3,f,c
 50954  01A996  5005               	movf	i2___lldiv@divisor,w,c
 50955  01A998  5C01               	subwf	i2___lldiv@dividend,w,c
 50956  01A99A  5006               	movf	i2___lldiv@divisor+1,w,c
 50957  01A99C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 50958  01A99E  5007               	movf	i2___lldiv@divisor+2,w,c
 50959  01A9A0  5803               	subwfb	i2___lldiv@dividend+2,w,c
 50960  01A9A2  5008               	movf	i2___lldiv@divisor+3,w,c
 50961  01A9A4  5804               	subwfb	i2___lldiv@dividend+3,w,c
 50962  01A9A6  A0D8               	btfss	status,0,c
 50963  01A9A8  D009               	goto	i2l10780
 50964  01A9AA  5005               	movf	i2___lldiv@divisor,w,c
 50965  01A9AC  5E01               	subwf	i2___lldiv@dividend,f,c
 50966  01A9AE  5006               	movf	i2___lldiv@divisor+1,w,c
 50967  01A9B0  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 50968  01A9B2  5007               	movf	i2___lldiv@divisor+2,w,c
 50969  01A9B4  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 50970  01A9B6  5008               	movf	i2___lldiv@divisor+3,w,c
 50971  01A9B8  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 50972  01A9BA  8009               	bsf	i2___lldiv@quotient,0,c
 50973  01A9BC                     i2l10780:
 50974  01A9BC  90D8               	bcf	status,0,c
 50975  01A9BE  3208               	rrcf	i2___lldiv@divisor+3,f,c
 50976  01A9C0  3207               	rrcf	i2___lldiv@divisor+2,f,c
 50977  01A9C2  3206               	rrcf	i2___lldiv@divisor+1,f,c
 50978  01A9C4  3205               	rrcf	i2___lldiv@divisor,f,c
 50979  01A9C6  2E0D               	decfsz	i2___lldiv@counter,f,c
 50980  01A9C8  D7E1               	goto	i2l10772
 50981  01A9CA                     i2l2653:
 50982  01A9CA  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 50983  01A9CE  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 50984  01A9D2  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 50985  01A9D6  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 50986  01A9DA  0012               	return	
 50987  01A9DC                     __end_ofi2___lldiv:
 50988                           	opt stack 0
 50989                           pclatu	equ	0xFFB
 50990                           pclath	equ	0xFFA
 50991                           tblptru	equ	0xFF8
 50992                           tblptrh	equ	0xFF7
 50993                           tblptrl	equ	0xFF6
 50994                           tablat	equ	0xFF5
 50995                           prodh	equ	0xFF4
 50996                           prodl	equ	0xFF3
 50997                           intcon	equ	0xFF2
 50998                           intcon2	equ	0xFF1
 50999                           intcon3	equ	0xFF0
 51000                           indf0	equ	0xFEF
 51001                           postinc0	equ	0xFEE
 51002                           fsr0h	equ	0xFEA
 51003                           fsr0l	equ	0xFE9
 51004                           wreg	equ	0xFE8
 51005                           indf1	equ	0xFE7
 51006                           postinc1	equ	0xFE6
 51007                           postdec1	equ	0xFE5
 51008                           fsr1h	equ	0xFE2
 51009                           fsr1l	equ	0xFE1
 51010                           indf2	equ	0xFDF
 51011                           postinc2	equ	0xFDE
 51012                           postdec2	equ	0xFDD
 51013                           fsr2h	equ	0xFDA
 51014                           fsr2l	equ	0xFD9
 51015                           status	equ	0xFD8
 51016                           
 51017 ;; *************** function i2___ftsub *****************
 51018 ;; Defined at:
 51019 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
 51020 ;; Parameters:    Size  Location     Type
 51021 ;;  f1              3   57[COMRAM] float 
 51022 ;;  f2              3   60[COMRAM] float 
 51023 ;; Auto vars:     Size  Location     Type
 51024 ;;		None
 51025 ;; Return value:  Size  Location     Type
 51026 ;;                  3   57[COMRAM] float 
 51027 ;; Registers used:
 51028 ;;		wreg, status,2, status,0, cstack
 51029 ;; Tracked objects:
 51030 ;;		On entry : 0/0
 51031 ;;		On exit  : 0/0
 51032 ;;		Unchanged: 0/0
 51033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51034 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51038 ;;Total ram usage:        6 bytes
 51039 ;; Hardware stack levels used:    1
 51040 ;; Hardware stack levels required when called:    2
 51041 ;; This function calls:
 51042 ;;		i2___ftadd
 51043 ;; This function is called by:
 51044 ;;		i2_sprintf
 51045 ;; This function uses a non-reentrant model
 51046 ;;
 51047                           
 51048                           	psect	text152
 51049  01B420                     __ptext152:
 51050                           	opt stack 0
 51051  01B420                     i2___ftsub:
 51052                           	opt stack 13
 51053                           
 51054                           ;incstack = 0
 51055  01B420  0E00               	movlw	0
 51056  01B422  1A3D               	xorwf	i2___ftsub@f2,f,c
 51057  01B424  0E00               	movlw	0
 51058  01B426  1A3E               	xorwf	i2___ftsub@f2+1,f,c
 51059  01B428  0E80               	movlw	128
 51060  01B42A  1A3F               	xorwf	i2___ftsub@f2+2,f,c
 51061  01B42C  C03A  F02E         	movff	i2___ftsub@f1,i2___ftadd@f1
 51062  01B430  C03B  F02F         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 51063  01B434  C03C  F030         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 51064  01B438  C03D  F031         	movff	i2___ftsub@f2,i2___ftadd@f2
 51065  01B43C  C03E  F032         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 51066  01B440  C03F  F033         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 51067  01B444  EC1B  F0B6         	call	i2___ftadd	;wreg free
 51068  01B448  C02E  F03A         	movff	?i2___ftadd,?i2___ftsub
 51069  01B44C  C02F  F03B         	movff	?i2___ftadd+1,?i2___ftsub+1
 51070  01B450  C030  F03C         	movff	?i2___ftadd+2,?i2___ftsub+2
 51071  01B454  0012               	return	
 51072  01B456                     __end_ofi2___ftsub:
 51073                           	opt stack 0
 51074                           pclatu	equ	0xFFB
 51075                           pclath	equ	0xFFA
 51076                           tblptru	equ	0xFF8
 51077                           tblptrh	equ	0xFF7
 51078                           tblptrl	equ	0xFF6
 51079                           tablat	equ	0xFF5
 51080                           prodh	equ	0xFF4
 51081                           prodl	equ	0xFF3
 51082                           intcon	equ	0xFF2
 51083                           intcon2	equ	0xFF1
 51084                           intcon3	equ	0xFF0
 51085                           indf0	equ	0xFEF
 51086                           postinc0	equ	0xFEE
 51087                           fsr0h	equ	0xFEA
 51088                           fsr0l	equ	0xFE9
 51089                           wreg	equ	0xFE8
 51090                           indf1	equ	0xFE7
 51091                           postinc1	equ	0xFE6
 51092                           postdec1	equ	0xFE5
 51093                           fsr1h	equ	0xFE2
 51094                           fsr1l	equ	0xFE1
 51095                           indf2	equ	0xFDF
 51096                           postinc2	equ	0xFDE
 51097                           postdec2	equ	0xFDD
 51098                           fsr2h	equ	0xFDA
 51099                           fsr2l	equ	0xFD9
 51100                           status	equ	0xFD8
 51101                           
 51102 ;; *************** function i2___ftneg *****************
 51103 ;; Defined at:
 51104 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
 51105 ;; Parameters:    Size  Location     Type
 51106 ;;  f1              3    0[COMRAM] float 
 51107 ;; Auto vars:     Size  Location     Type
 51108 ;;		None
 51109 ;; Return value:  Size  Location     Type
 51110 ;;                  3    0[COMRAM] float 
 51111 ;; Registers used:
 51112 ;;		wreg, status,2, status,0
 51113 ;; Tracked objects:
 51114 ;;		On entry : 0/0
 51115 ;;		On exit  : 0/0
 51116 ;;		Unchanged: 0/0
 51117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51118 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51122 ;;Total ram usage:        3 bytes
 51123 ;; Hardware stack levels used:    1
 51124 ;; This function calls:
 51125 ;;		Nothing
 51126 ;; This function is called by:
 51127 ;;		i2_sprintf
 51128 ;; This function uses a non-reentrant model
 51129 ;;
 51130                           
 51131                           	psect	text153
 51132  01B72C                     __ptext153:
 51133                           	opt stack 0
 51134  01B72C                     i2___ftneg:
 51135                           	opt stack 15
 51136                           
 51137                           ;incstack = 0
 51138  01B72C  0E7F               	movlw	127
 51139  01B72E  1403               	andwf	i2___ftneg@f1+2,w,c
 51140  01B730  1002               	iorwf	i2___ftneg@f1+1,w,c
 51141  01B732  1001               	iorwf	i2___ftneg@f1,w,c
 51142  01B734  B4D8               	btfsc	status,2,c
 51143  01B736  D006               	goto	i2l2599
 51144  01B738  0E00               	movlw	0
 51145  01B73A  1A01               	xorwf	i2___ftneg@f1,f,c
 51146  01B73C  0E00               	movlw	0
 51147  01B73E  1A02               	xorwf	i2___ftneg@f1+1,f,c
 51148  01B740  0E80               	movlw	128
 51149  01B742  1A03               	xorwf	i2___ftneg@f1+2,f,c
 51150  01B744                     i2l2599:
 51151  01B744  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 51152  01B748  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 51153  01B74C  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 51154  01B750  0012               	return	
 51155  01B752                     __end_ofi2___ftneg:
 51156                           	opt stack 0
 51157                           pclatu	equ	0xFFB
 51158                           pclath	equ	0xFFA
 51159                           tblptru	equ	0xFF8
 51160                           tblptrh	equ	0xFF7
 51161                           tblptrl	equ	0xFF6
 51162                           tablat	equ	0xFF5
 51163                           prodh	equ	0xFF4
 51164                           prodl	equ	0xFF3
 51165                           intcon	equ	0xFF2
 51166                           intcon2	equ	0xFF1
 51167                           intcon3	equ	0xFF0
 51168                           indf0	equ	0xFEF
 51169                           postinc0	equ	0xFEE
 51170                           fsr0h	equ	0xFEA
 51171                           fsr0l	equ	0xFE9
 51172                           wreg	equ	0xFE8
 51173                           indf1	equ	0xFE7
 51174                           postinc1	equ	0xFE6
 51175                           postdec1	equ	0xFE5
 51176                           fsr1h	equ	0xFE2
 51177                           fsr1l	equ	0xFE1
 51178                           indf2	equ	0xFDF
 51179                           postinc2	equ	0xFDE
 51180                           postdec2	equ	0xFDD
 51181                           fsr2h	equ	0xFDA
 51182                           fsr2l	equ	0xFD9
 51183                           status	equ	0xFD8
 51184                           
 51185 ;; *************** function i2___ftge *****************
 51186 ;; Defined at:
 51187 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
 51188 ;; Parameters:    Size  Location     Type
 51189 ;;  ff1             3    0[COMRAM] float 
 51190 ;;  ff2             3    3[COMRAM] float 
 51191 ;; Auto vars:     Size  Location     Type
 51192 ;;		None
 51193 ;; Return value:  Size  Location     Type
 51194 ;;		None               void
 51195 ;; Registers used:
 51196 ;;		wreg, status,2, status,0
 51197 ;; Tracked objects:
 51198 ;;		On entry : 0/0
 51199 ;;		On exit  : 0/0
 51200 ;;		Unchanged: 0/0
 51201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51204 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51205 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51206 ;;Total ram usage:        9 bytes
 51207 ;; Hardware stack levels used:    1
 51208 ;; This function calls:
 51209 ;;		Nothing
 51210 ;; This function is called by:
 51211 ;;		i2_sprintf
 51212 ;; This function uses a non-reentrant model
 51213 ;;
 51214                           
 51215                           	psect	text154
 51216  01A6AC                     __ptext154:
 51217                           	opt stack 0
 51218  01A6AC                     i2___ftge:
 51219                           	opt stack 15
 51220                           
 51221                           ;incstack = 0
 51222  01A6AC  AE03               	btfss	i2___ftge@ff1+2,7,c
 51223  01A6AE  D016               	goto	i2l10726
 51224  01A6B0  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 51225  01A6B4  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 51226  01A6B8  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 51227  01A6BC  1E07               	comf	??i2___ftge,f,c
 51228  01A6BE  1E08               	comf	??i2___ftge+1,f,c
 51229  01A6C0  1E09               	comf	??i2___ftge+2,f,c
 51230  01A6C2  2A07               	incf	??i2___ftge,f,c
 51231  01A6C4  0E00               	movlw	0
 51232  01A6C6  2208               	addwfc	??i2___ftge+1,f,c
 51233  01A6C8  2209               	addwfc	??i2___ftge+2,f,c
 51234  01A6CA  0E00               	movlw	0
 51235  01A6CC  2407               	addwf	??i2___ftge,w,c
 51236  01A6CE  6E01               	movwf	i2___ftge@ff1,c
 51237  01A6D0  0E00               	movlw	0
 51238  01A6D2  2008               	addwfc	??i2___ftge+1,w,c
 51239  01A6D4  6E02               	movwf	i2___ftge@ff1+1,c
 51240  01A6D6  0E80               	movlw	128
 51241  01A6D8  2009               	addwfc	??i2___ftge+2,w,c
 51242  01A6DA  6E03               	movwf	i2___ftge@ff1+2,c
 51243  01A6DC                     i2l10726:
 51244  01A6DC  AE06               	btfss	i2___ftge@ff2+2,7,c
 51245  01A6DE  D016               	goto	i2l10730
 51246  01A6E0  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 51247  01A6E4  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 51248  01A6E8  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 51249  01A6EC  1E07               	comf	??i2___ftge,f,c
 51250  01A6EE  1E08               	comf	??i2___ftge+1,f,c
 51251  01A6F0  1E09               	comf	??i2___ftge+2,f,c
 51252  01A6F2  2A07               	incf	??i2___ftge,f,c
 51253  01A6F4  0E00               	movlw	0
 51254  01A6F6  2208               	addwfc	??i2___ftge+1,f,c
 51255  01A6F8  2209               	addwfc	??i2___ftge+2,f,c
 51256  01A6FA  0E00               	movlw	0
 51257  01A6FC  2407               	addwf	??i2___ftge,w,c
 51258  01A6FE  6E04               	movwf	i2___ftge@ff2,c
 51259  01A700  0E00               	movlw	0
 51260  01A702  2008               	addwfc	??i2___ftge+1,w,c
 51261  01A704  6E05               	movwf	i2___ftge@ff2+1,c
 51262  01A706  0E80               	movlw	128
 51263  01A708  2009               	addwfc	??i2___ftge+2,w,c
 51264  01A70A  6E06               	movwf	i2___ftge@ff2+2,c
 51265  01A70C                     i2l10730:
 51266  01A70C  0E00               	movlw	0
 51267  01A70E  1A01               	xorwf	i2___ftge@ff1,f,c
 51268  01A710  0E00               	movlw	0
 51269  01A712  1A02               	xorwf	i2___ftge@ff1+1,f,c
 51270  01A714  0E80               	movlw	128
 51271  01A716  1A03               	xorwf	i2___ftge@ff1+2,f,c
 51272  01A718  0E00               	movlw	0
 51273  01A71A  1A04               	xorwf	i2___ftge@ff2,f,c
 51274  01A71C  0E00               	movlw	0
 51275  01A71E  1A05               	xorwf	i2___ftge@ff2+1,f,c
 51276  01A720  0E80               	movlw	128
 51277  01A722  1A06               	xorwf	i2___ftge@ff2+2,f,c
 51278  01A724  5004               	movf	i2___ftge@ff2,w,c
 51279  01A726  5C01               	subwf	i2___ftge@ff1,w,c
 51280  01A728  5005               	movf	i2___ftge@ff2+1,w,c
 51281  01A72A  5802               	subwfb	i2___ftge@ff1+1,w,c
 51282  01A72C  5006               	movf	i2___ftge@ff2+2,w,c
 51283  01A72E  5803               	subwfb	i2___ftge@ff1+2,w,c
 51284  01A730  B0D8               	btfsc	status,0,c
 51285  01A732  D002               	goto	i2l10736
 51286  01A734  90D8               	bcf	status,0,c
 51287  01A736  0012               	return	
 51288  01A738                     i2l10736:
 51289  01A738  80D8               	bsf	status,0,c
 51290  01A73A  0012               	return	
 51291  01A73C                     __end_ofi2___ftge:
 51292                           	opt stack 0
 51293                           pclatu	equ	0xFFB
 51294                           pclath	equ	0xFFA
 51295                           tblptru	equ	0xFF8
 51296                           tblptrh	equ	0xFF7
 51297                           tblptrl	equ	0xFF6
 51298                           tablat	equ	0xFF5
 51299                           prodh	equ	0xFF4
 51300                           prodl	equ	0xFF3
 51301                           intcon	equ	0xFF2
 51302                           intcon2	equ	0xFF1
 51303                           intcon3	equ	0xFF0
 51304                           indf0	equ	0xFEF
 51305                           postinc0	equ	0xFEE
 51306                           fsr0h	equ	0xFEA
 51307                           fsr0l	equ	0xFE9
 51308                           wreg	equ	0xFE8
 51309                           indf1	equ	0xFE7
 51310                           postinc1	equ	0xFE6
 51311                           postdec1	equ	0xFE5
 51312                           fsr1h	equ	0xFE2
 51313                           fsr1l	equ	0xFE1
 51314                           indf2	equ	0xFDF
 51315                           postinc2	equ	0xFDE
 51316                           postdec2	equ	0xFDD
 51317                           fsr2h	equ	0xFDA
 51318                           fsr2l	equ	0xFD9
 51319                           status	equ	0xFD8
 51320                           
 51321 ;; *************** function i2___ftdiv *****************
 51322 ;; Defined at:
 51323 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 51324 ;; Parameters:    Size  Location     Type
 51325 ;;  f1              3   12[COMRAM] float 
 51326 ;;  f2              3   15[COMRAM] float 
 51327 ;; Auto vars:     Size  Location     Type
 51328 ;;  __ftdiv         3   22[COMRAM] float 
 51329 ;;  __ftdiv         1   26[COMRAM] unsigned char 
 51330 ;;  __ftdiv         1   25[COMRAM] unsigned char 
 51331 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 51332 ;; Return value:  Size  Location     Type
 51333 ;;                  3   12[COMRAM] float 
 51334 ;; Registers used:
 51335 ;;		wreg, status,2, status,0, cstack
 51336 ;; Tracked objects:
 51337 ;;		On entry : 0/0
 51338 ;;		On exit  : 0/0
 51339 ;;		Unchanged: 0/0
 51340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51341 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51342 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51343 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51344 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51345 ;;Total ram usage:       15 bytes
 51346 ;; Hardware stack levels used:    1
 51347 ;; Hardware stack levels required when called:    1
 51348 ;; This function calls:
 51349 ;;		i2___ftpack
 51350 ;; This function is called by:
 51351 ;;		i2_UpdateMasterVolume
 51352 ;; This function uses a non-reentrant model
 51353 ;;
 51354                           
 51355                           	psect	text155
 51356  019480                     __ptext155:
 51357                           	opt stack 0
 51358  019480                     i2___ftdiv:
 51359                           	opt stack 15
 51360                           
 51361                           ;incstack = 0
 51362  019480  C00F  F013         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 51363  019484  6A14               	clrf	(??i2___ftdiv+1)& (0+255),c
 51364  019486  6A15               	clrf	(??i2___ftdiv+2)& (0+255),c
 51365  019488  340E               	rlcf	i2___ftdiv@f1+1,w,c
 51366  01948A  3613               	rlcf	??i2___ftdiv& (0+255),f,c
 51367  01948C  E301               	bnc	u1248_41
 51368  01948E  8014               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 51369  019490                     u1248_41:
 51370  019490  5013               	movf	??i2___ftdiv,w,c
 51371  019492  6E1A               	movwf	i2___ftdiv@exp,c
 51372  019494  661A               	tstfsz	i2___ftdiv@exp& (0+255),c
 51373  019496  D007               	goto	i2l11458
 51374  019498  0E00               	movlw	0
 51375  01949A  6E0D               	movwf	?i2___ftdiv,c
 51376  01949C  0E00               	movlw	0
 51377  01949E  6E0E               	movwf	?i2___ftdiv+1,c
 51378  0194A0  0E00               	movlw	0
 51379  0194A2  6E0F               	movwf	?i2___ftdiv+2,c
 51380  0194A4  0012               	return	
 51381  0194A6                     i2l11458:
 51382  0194A6  C012  F013         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 51383  0194AA  6A14               	clrf	(??i2___ftdiv+1)& (0+255),c
 51384  0194AC  6A15               	clrf	(??i2___ftdiv+2)& (0+255),c
 51385  0194AE  3411               	rlcf	i2___ftdiv@f2+1,w,c
 51386  0194B0  3613               	rlcf	??i2___ftdiv& (0+255),f,c
 51387  0194B2  E301               	bnc	u1250_41
 51388  0194B4  8014               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 51389  0194B6                     u1250_41:
 51390  0194B6  5013               	movf	??i2___ftdiv,w,c
 51391  0194B8  6E1B               	movwf	i2___ftdiv@sign,c
 51392  0194BA  661B               	tstfsz	i2___ftdiv@sign& (0+255),c
 51393  0194BC  D007               	goto	i2l11464
 51394  0194BE  0E00               	movlw	0
 51395  0194C0  6E0D               	movwf	?i2___ftdiv,c
 51396  0194C2  0E00               	movlw	0
 51397  0194C4  6E0E               	movwf	?i2___ftdiv+1,c
 51398  0194C6  0E00               	movlw	0
 51399  0194C8  6E0F               	movwf	?i2___ftdiv+2,c
 51400  0194CA  0012               	return	
 51401  0194CC                     i2l11464:
 51402  0194CC  0E00               	movlw	0
 51403  0194CE  6E17               	movwf	i2___ftdiv@f3,c
 51404  0194D0  0E00               	movlw	0
 51405  0194D2  6E18               	movwf	i2___ftdiv@f3+1,c
 51406  0194D4  0E00               	movlw	0
 51407  0194D6  6E19               	movwf	i2___ftdiv@f3+2,c
 51408  0194D8  501B               	movf	i2___ftdiv@sign,w,c
 51409  0194DA  0F89               	addlw	137
 51410  0194DC  5E1A               	subwf	i2___ftdiv@exp,f,c
 51411  0194DE  C00F  F01B         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 51412  0194E2  5012               	movf	i2___ftdiv@f2+2,w,c
 51413  0194E4  1A1B               	xorwf	i2___ftdiv@sign,f,c
 51414  0194E6  0E80               	movlw	128
 51415  0194E8  161B               	andwf	i2___ftdiv@sign,f,c
 51416  0194EA  8E0E               	bsf	i2___ftdiv@f1+1,7,c
 51417  0194EC  0EFF               	movlw	255
 51418  0194EE  160D               	andwf	i2___ftdiv@f1,f,c
 51419  0194F0  0EFF               	movlw	255
 51420  0194F2  160E               	andwf	i2___ftdiv@f1+1,f,c
 51421  0194F4  0E00               	movlw	0
 51422  0194F6  160F               	andwf	i2___ftdiv@f1+2,f,c
 51423  0194F8  8E11               	bsf	i2___ftdiv@f2+1,7,c
 51424  0194FA  0EFF               	movlw	255
 51425  0194FC  1610               	andwf	i2___ftdiv@f2,f,c
 51426  0194FE  0EFF               	movlw	255
 51427  019500  1611               	andwf	i2___ftdiv@f2+1,f,c
 51428  019502  0E00               	movlw	0
 51429  019504  1612               	andwf	i2___ftdiv@f2+2,f,c
 51430  019506  0E18               	movlw	24
 51431  019508  6E16               	movwf	i2___ftdiv@cntr,c
 51432  01950A                     i2l11484:
 51433  01950A  90D8               	bcf	status,0,c
 51434  01950C  3617               	rlcf	i2___ftdiv@f3,f,c
 51435  01950E  3618               	rlcf	i2___ftdiv@f3+1,f,c
 51436  019510  3619               	rlcf	i2___ftdiv@f3+2,f,c
 51437  019512  5010               	movf	i2___ftdiv@f2,w,c
 51438  019514  5C0D               	subwf	i2___ftdiv@f1,w,c
 51439  019516  5011               	movf	i2___ftdiv@f2+1,w,c
 51440  019518  580E               	subwfb	i2___ftdiv@f1+1,w,c
 51441  01951A  5012               	movf	i2___ftdiv@f2+2,w,c
 51442  01951C  580F               	subwfb	i2___ftdiv@f1+2,w,c
 51443  01951E  A0D8               	btfss	status,0,c
 51444  019520  D007               	goto	i2l2560
 51445  019522  5010               	movf	i2___ftdiv@f2,w,c
 51446  019524  5E0D               	subwf	i2___ftdiv@f1,f,c
 51447  019526  5011               	movf	i2___ftdiv@f2+1,w,c
 51448  019528  5A0E               	subwfb	i2___ftdiv@f1+1,f,c
 51449  01952A  5012               	movf	i2___ftdiv@f2+2,w,c
 51450  01952C  5A0F               	subwfb	i2___ftdiv@f1+2,f,c
 51451  01952E  8017               	bsf	i2___ftdiv@f3,0,c
 51452  019530                     i2l2560:
 51453  019530  90D8               	bcf	status,0,c
 51454  019532  360D               	rlcf	i2___ftdiv@f1,f,c
 51455  019534  360E               	rlcf	i2___ftdiv@f1+1,f,c
 51456  019536  360F               	rlcf	i2___ftdiv@f1+2,f,c
 51457  019538  2E16               	decfsz	i2___ftdiv@cntr,f,c
 51458  01953A  D7E7               	goto	i2l11484
 51459  01953C  C017  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 51460  019540  C018  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 51461  019544  C019  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 51462  019548  C01A  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 51463  01954C  C01B  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 51464  019550  EC91  F0D0         	call	i2___ftpack	;wreg free
 51465  019554  C001  F00D         	movff	?i2___ftpack,?i2___ftdiv
 51466  019558  C002  F00E         	movff	?i2___ftpack+1,?i2___ftdiv+1
 51467  01955C  C003  F00F         	movff	?i2___ftpack+2,?i2___ftdiv+2
 51468  019560  0012               	return	
 51469  019562                     __end_ofi2___ftdiv:
 51470                           	opt stack 0
 51471                           pclatu	equ	0xFFB
 51472                           pclath	equ	0xFFA
 51473                           tblptru	equ	0xFF8
 51474                           tblptrh	equ	0xFF7
 51475                           tblptrl	equ	0xFF6
 51476                           tablat	equ	0xFF5
 51477                           prodh	equ	0xFF4
 51478                           prodl	equ	0xFF3
 51479                           intcon	equ	0xFF2
 51480                           intcon2	equ	0xFF1
 51481                           intcon3	equ	0xFF0
 51482                           indf0	equ	0xFEF
 51483                           postinc0	equ	0xFEE
 51484                           fsr0h	equ	0xFEA
 51485                           fsr0l	equ	0xFE9
 51486                           wreg	equ	0xFE8
 51487                           indf1	equ	0xFE7
 51488                           postinc1	equ	0xFE6
 51489                           postdec1	equ	0xFE5
 51490                           fsr1h	equ	0xFE2
 51491                           fsr1l	equ	0xFE1
 51492                           indf2	equ	0xFDF
 51493                           postinc2	equ	0xFDE
 51494                           postdec2	equ	0xFDD
 51495                           fsr2h	equ	0xFDA
 51496                           fsr2l	equ	0xFD9
 51497                           status	equ	0xFD8
 51498                           
 51499 ;; *************** function i2___awtoft *****************
 51500 ;; Defined at:
 51501 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
 51502 ;; Parameters:    Size  Location     Type
 51503 ;;  c               2    8[COMRAM] int 
 51504 ;; Auto vars:     Size  Location     Type
 51505 ;;  __awtoft        1   11[COMRAM] unsigned char 
 51506 ;; Return value:  Size  Location     Type
 51507 ;;                  3    8[COMRAM] float 
 51508 ;; Registers used:
 51509 ;;		wreg, status,2, status,0, prodl, cstack
 51510 ;; Tracked objects:
 51511 ;;		On entry : 0/0
 51512 ;;		On exit  : 0/0
 51513 ;;		Unchanged: 0/0
 51514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51515 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51519 ;;Total ram usage:        4 bytes
 51520 ;; Hardware stack levels used:    1
 51521 ;; Hardware stack levels required when called:    1
 51522 ;; This function calls:
 51523 ;;		i2___ftpack
 51524 ;; This function is called by:
 51525 ;;		i2_UpdateMasterVolume
 51526 ;; This function uses a non-reentrant model
 51527 ;;
 51528                           
 51529                           	psect	text156
 51530  01B132                     __ptext156:
 51531                           	opt stack 0
 51532  01B132                     i2___awtoft:
 51533                           	opt stack 15
 51534                           
 51535                           ;incstack = 0
 51536  01B132  0E00               	movlw	0
 51537  01B134  6E0C               	movwf	i2___awtoft@sign,c
 51538  01B136  500A               	movf	i2___awtoft@c+1,w,c
 51539  01B138  0A80               	xorlw	128
 51540  01B13A  6EF3               	movwf	prodl,c
 51541  01B13C  0E80               	movlw	128
 51542  01B13E  5CF3               	subwf	prodl,w,c
 51543  01B140  0E00               	movlw	0
 51544  01B142  B4D8               	btfsc	status,2,c
 51545  01B144  5C09               	subwf	i2___awtoft@c,w,c
 51546  01B146  B0D8               	btfsc	status,0,c
 51547  01B148  D006               	goto	i2l11448
 51548  01B14A  6C09               	negf	i2___awtoft@c,c
 51549  01B14C  1E0A               	comf	i2___awtoft@c+1,f,c
 51550  01B14E  B0D8               	btfsc	status,0,c
 51551  01B150  2A0A               	incf	i2___awtoft@c+1,f,c
 51552  01B152  0E01               	movlw	1
 51553  01B154  6E0C               	movwf	i2___awtoft@sign,c
 51554  01B156                     i2l11448:
 51555  01B156  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 51556  01B15A  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 51557  01B15E  6A03               	clrf	i2___ftpack@arg+2,c
 51558  01B160  0E8E               	movlw	142
 51559  01B162  6E04               	movwf	i2___ftpack@exp,c
 51560  01B164  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 51561  01B168  EC91  F0D0         	call	i2___ftpack	;wreg free
 51562  01B16C  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 51563  01B170  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 51564  01B174  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 51565  01B178  0012               	return	
 51566  01B17A                     __end_ofi2___awtoft:
 51567                           	opt stack 0
 51568                           pclatu	equ	0xFFB
 51569                           pclath	equ	0xFFA
 51570                           tblptru	equ	0xFF8
 51571                           tblptrh	equ	0xFF7
 51572                           tblptrl	equ	0xFF6
 51573                           tablat	equ	0xFF5
 51574                           prodh	equ	0xFF4
 51575                           prodl	equ	0xFF3
 51576                           intcon	equ	0xFF2
 51577                           intcon2	equ	0xFF1
 51578                           intcon3	equ	0xFF0
 51579                           indf0	equ	0xFEF
 51580                           postinc0	equ	0xFEE
 51581                           fsr0h	equ	0xFEA
 51582                           fsr0l	equ	0xFE9
 51583                           wreg	equ	0xFE8
 51584                           indf1	equ	0xFE7
 51585                           postinc1	equ	0xFE6
 51586                           postdec1	equ	0xFE5
 51587                           fsr1h	equ	0xFE2
 51588                           fsr1l	equ	0xFE1
 51589                           indf2	equ	0xFDF
 51590                           postinc2	equ	0xFDE
 51591                           postdec2	equ	0xFDD
 51592                           fsr2h	equ	0xFDA
 51593                           fsr2l	equ	0xFD9
 51594                           status	equ	0xFD8
 51595                           
 51596 ;; *************** function i2_SendVolumeToDevice *****************
 51597 ;; Defined at:
 51598 ;;		line 224 in file "Device.c"
 51599 ;; Parameters:    Size  Location     Type
 51600 ;;		None
 51601 ;; Auto vars:     Size  Location     Type
 51602 ;;		None
 51603 ;; Return value:  Size  Location     Type
 51604 ;;		None               void
 51605 ;; Registers used:
 51606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51607 ;; Tracked objects:
 51608 ;;		On entry : 0/0
 51609 ;;		On exit  : 0/0
 51610 ;;		Unchanged: 0/0
 51611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51616 ;;Total ram usage:        0 bytes
 51617 ;; Hardware stack levels used:    1
 51618 ;; Hardware stack levels required when called:    4
 51619 ;; This function calls:
 51620 ;;		i2_SendDataToDeviceCh
 51621 ;; This function is called by:
 51622 ;;		i2_UpdateMasterVolume
 51623 ;; This function uses a non-reentrant model
 51624 ;;
 51625                           
 51626                           	psect	text157
 51627  01B96C                     __ptext157:
 51628                           	opt stack 0
 51629  01B96C                     i2_SendVolumeToDevice:
 51630                           	opt stack 12
 51631                           
 51632                           ;Device.c: 226: LATEbits.LE4 = 1;
 51633                           
 51634                           ;incstack = 0
 51635  01B96C  888D               	bsf	3981,4,c	;volatile
 51636                           
 51637                           ;Device.c: 227: SendDataToDeviceCh(0);
 51638  01B96E  0E00               	movlw	0
 51639  01B970  EC7D  F0B2         	call	i2_SendDataToDeviceCh
 51640                           
 51641                           ;Device.c: 228: LATEbits.LE4 = 0;
 51642  01B974  988D               	bcf	3981,4,c	;volatile
 51643                           
 51644                           ;Device.c: 229: LATEbits.LE5 = 1;
 51645  01B976  8A8D               	bsf	3981,5,c	;volatile
 51646                           
 51647                           ;Device.c: 230: SendDataToDeviceCh(8);
 51648  01B978  0E08               	movlw	8
 51649  01B97A  EC7D  F0B2         	call	i2_SendDataToDeviceCh
 51650                           
 51651                           ;Device.c: 231: LATEbits.LE5 = 0;
 51652  01B97E  9A8D               	bcf	3981,5,c	;volatile
 51653  01B980  0012               	return	
 51654  01B982                     __end_ofi2_SendVolumeToDevice:
 51655                           	opt stack 0
 51656                           pclatu	equ	0xFFB
 51657                           pclath	equ	0xFFA
 51658                           tblptru	equ	0xFF8
 51659                           tblptrh	equ	0xFF7
 51660                           tblptrl	equ	0xFF6
 51661                           tablat	equ	0xFF5
 51662                           prodh	equ	0xFF4
 51663                           prodl	equ	0xFF3
 51664                           intcon	equ	0xFF2
 51665                           intcon2	equ	0xFF1
 51666                           intcon3	equ	0xFF0
 51667                           indf0	equ	0xFEF
 51668                           postinc0	equ	0xFEE
 51669                           fsr0h	equ	0xFEA
 51670                           fsr0l	equ	0xFE9
 51671                           wreg	equ	0xFE8
 51672                           indf1	equ	0xFE7
 51673                           postinc1	equ	0xFE6
 51674                           postdec1	equ	0xFE5
 51675                           fsr1h	equ	0xFE2
 51676                           fsr1l	equ	0xFE1
 51677                           indf2	equ	0xFDF
 51678                           postinc2	equ	0xFDE
 51679                           postdec2	equ	0xFDD
 51680                           fsr2h	equ	0xFDA
 51681                           fsr2l	equ	0xFD9
 51682                           status	equ	0xFD8
 51683                           
 51684 ;; *************** function i2_SendDataToDeviceCh *****************
 51685 ;; Defined at:
 51686 ;;		line 192 in file "Device.c"
 51687 ;; Parameters:    Size  Location     Type
 51688 ;;  offset          1    wreg     unsigned char 
 51689 ;; Auto vars:     Size  Location     Type
 51690 ;;  offset          1   18[BANK0 ] unsigned char 
 51691 ;;  SendDataToDe   16    0[BANK0 ] unsigned int [8]
 51692 ;;  SendDataToDe    2   20[BANK0 ] unsigned int 
 51693 ;;  SendDataToDe    2   16[BANK0 ] unsigned int 
 51694 ;;  SendDataToDe    1   19[BANK0 ] unsigned char 
 51695 ;; Return value:  Size  Location     Type
 51696 ;;		None               void
 51697 ;; Registers used:
 51698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 51699 ;; Tracked objects:
 51700 ;;		On entry : 0/0
 51701 ;;		On exit  : 0/0
 51702 ;;		Unchanged: 0/0
 51703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51705 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51706 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51707 ;;      Totals:         3      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51708 ;;Total ram usage:       25 bytes
 51709 ;; Hardware stack levels used:    1
 51710 ;; Hardware stack levels required when called:    3
 51711 ;; This function calls:
 51712 ;;		i2_DbToCode
 51713 ;; This function is called by:
 51714 ;;		i2_SendVolumeToDevice
 51715 ;; This function uses a non-reentrant model
 51716 ;;
 51717                           
 51718                           	psect	text158
 51719  0164FA                     __ptext158:
 51720                           	opt stack 0
 51721  0164FA                     i2_SendDataToDeviceCh:
 51722                           	opt stack 12
 51723                           
 51724                           ;incstack = 0
 51725                           ;i2SendDataToDeviceCh@offset stored from wreg
 51726  0164FA  0100               	movlb	0	; () banked
 51727  0164FC  6F72               	movwf	i2SendDataToDeviceCh@offset& (0+255),b
 51728                           
 51729                           ; BSR set to: 0
 51730                           ;Device.c: 194: uint16_t values[8];
 51731                           ;Device.c: 196: for(uint8_t i = 0; i < 8; i++)
 51732  0164FE  0E00               	movlw	0
 51733  016500  0100               	movlb	0	; () banked
 51734  016502  6F73               	movwf	i2SendDataToDeviceCh@i& (0+255),b
 51735  016504  D033               	goto	L54
 51736  016506                     i2l10504:
 51737                           
 51738                           ; BSR set to: 0
 51739                           ;Device.c: 197: {
 51740                           ;Device.c: 198: uint16_t v = ((uint16_t)s_dacSettings.ChannelScaling[i + offset]) + s_da
      +                          cSettings.Volume;
 51741  016506  0100               	movlb	0	; () banked
 51742  016508  5172               	movf	i2SendDataToDeviceCh@offset& (0+255),w,b
 51743  01650A  0100               	movlb	0	; () banked
 51744  01650C  C073  F054         	movff	i2SendDataToDeviceCh@i,??i2_SendDataToDeviceCh
 51745  016510  6A55               	clrf	(??i2_SendDataToDeviceCh+1)& (0+255),c
 51746  016512  2654               	addwf	??i2_SendDataToDeviceCh,f,c
 51747  016514  0E00               	movlw	0
 51748  016516  2255               	addwfc	??i2_SendDataToDeviceCh+1,f,c
 51749  016518  0102               	movlb	2	; () banked
 51750  01651A  0ED6               	movlw	low (_s_dacSettings+3)
 51751  01651C  2454               	addwf	??i2_SendDataToDeviceCh,w,c
 51752  01651E  6ED9               	movwf	fsr2l,c
 51753  016520  0102               	movlb	2	; () banked
 51754  016522  0E02               	movlw	high (_s_dacSettings+3)
 51755  016524  2055               	addwfc	??i2_SendDataToDeviceCh+1,w,c
 51756  016526  6EDA               	movwf	fsr2h,c
 51757  016528  50DF               	movf	indf2,w,c
 51758  01652A  6E56               	movwf	(??i2_SendDataToDeviceCh+2)& (0+255),c
 51759  01652C  5056               	movf	??i2_SendDataToDeviceCh+2,w,c
 51760  01652E  0102               	movlb	2	; () banked
 51761  016530  25D5               	addwf	(_s_dacSettings+2)& (0+255),w,b
 51762  016532  0100               	movlb	0	; () banked
 51763  016534  6F70               	movwf	i2SendDataToDeviceCh@v& (0+255),b
 51764  016536  0100               	movlb	0	; () banked
 51765  016538  6B71               	clrf	(i2SendDataToDeviceCh@v+1)& (0+255),b
 51766  01653A  0100               	movlb	0	; () banked
 51767  01653C  3771               	rlcf	(i2SendDataToDeviceCh@v+1)& (0+255),f,b
 51768                           
 51769                           ; BSR set to: 0
 51770                           ;Device.c: 199: values[i] = DbToCode(v);
 51771  01653E  C070  F049         	movff	i2SendDataToDeviceCh@v,i2DbToCode@volume
 51772  016542  C071  F04A         	movff	i2SendDataToDeviceCh@v+1,i2DbToCode@volume+1
 51773  016546  EC5A  F0B4         	call	i2_DbToCode	;wreg free
 51774  01654A  0100               	movlb	0	; () banked
 51775  01654C  5173               	movf	i2SendDataToDeviceCh@i& (0+255),w,b
 51776  01654E  0D02               	mullw	2
 51777  016550  0100               	movlb	0	; () banked
 51778  016552  0E60               	movlw	low i2SendDataToDeviceCh@values
 51779  016554  24F3               	addwf	prodl,w,c
 51780  016556  6ED9               	movwf	fsr2l,c
 51781  016558  0100               	movlb	0	; () banked
 51782  01655A  0E00               	movlw	high i2SendDataToDeviceCh@values
 51783  01655C  20F4               	addwfc	prodh,w,c
 51784  01655E  6EDA               	movwf	fsr2h,c
 51785  016560  C049  FFDE         	movff	?i2_DbToCode,postinc2
 51786  016564  C04A  FFDD         	movff	?i2_DbToCode+1,postdec2
 51787                           
 51788                           ; BSR set to: 0
 51789  016568  0100               	movlb	0	; () banked
 51790  01656A  2B73               	incf	i2SendDataToDeviceCh@i& (0+255),f,b
 51791  01656C                     L54:
 51792                           
 51793                           ; BSR set to: 0
 51794  01656C  0E07               	movlw	7
 51795  01656E  0100               	movlb	0	; () banked
 51796  016570  6573               	cpfsgt	i2SendDataToDeviceCh@i& (0+255),b
 51797  016572  D7C9               	goto	i2l10504
 51798                           
 51799                           ; BSR set to: 0
 51800                           ;Device.c: 200: }
 51801                           ;Device.c: 202: uint16_t mask = 0x0800;
 51802                           
 51803                           ; BSR set to: 0
 51804  016574  0E08               	movlw	8
 51805  016576  0100               	movlb	0	; () banked
 51806  016578  6F75               	movwf	(i2SendDataToDeviceCh@mask+1)& (0+255),b
 51807  01657A  0E00               	movlw	0
 51808  01657C  0100               	movlb	0	; () banked
 51809  01657E  6F74               	movwf	i2SendDataToDeviceCh@mask& (0+255),b
 51810                           
 51811                           ;Device.c: 204: while(mask > 0)
 51812  016580  D0A5               	goto	i2l10548
 51813  016582                     i2l1879:
 51814                           
 51815                           ; BSR set to: 0
 51816                           ;Device.c: 205: {
 51817                           ;Device.c: 206: LATEbits.LE3 = 0;
 51818  016582  968D               	bcf	3981,3,c	;volatile
 51819                           
 51820                           ; BSR set to: 0
 51821                           ;Device.c: 207: if (values[0] & mask) LATFbits.LF1 = 1; else LATFbits.LF1 = 0;
 51822  016584  0100               	movlb	0	; () banked
 51823  016586  C060  F054         	movff	i2SendDataToDeviceCh@values,??i2_SendDataToDeviceCh
 51824  01658A  0100               	movlb	0	; () banked
 51825  01658C  C061  F055         	movff	i2SendDataToDeviceCh@values+1,??i2_SendDataToDeviceCh+1
 51826  016590  0100               	movlb	0	; () banked
 51827  016592  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51828  016594  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51829  016596  0100               	movlb	0	; () banked
 51830  016598  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51831  01659A  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51832  01659C  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51833  01659E  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51834  0165A0  B4D8               	btfsc	status,2,c
 51835  0165A2  D002               	goto	i2l1880
 51836                           
 51837                           ; BSR set to: 0
 51838  0165A4  828E               	bsf	3982,1,c	;volatile
 51839  0165A6  D001               	goto	i2l10518
 51840  0165A8                     i2l1880:
 51841                           
 51842                           ; BSR set to: 0
 51843  0165A8  928E               	bcf	3982,1,c	;volatile
 51844  0165AA                     i2l10518:
 51845                           
 51846                           ; BSR set to: 0
 51847                           ;Device.c: 208: if (values[1] & mask) LATFbits.LF2 = 1; else LATFbits.LF2 = 0;
 51848  0165AA  0100               	movlb	0	; () banked
 51849  0165AC  EE20  F062         	lfsr	2,i2SendDataToDeviceCh@values+2
 51850  0165B0  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 51851  0165B4  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 51852  0165B8  0100               	movlb	0	; () banked
 51853  0165BA  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51854  0165BC  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51855  0165BE  0100               	movlb	0	; () banked
 51856  0165C0  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51857  0165C2  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51858  0165C4  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51859  0165C6  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51860  0165C8  B4D8               	btfsc	status,2,c
 51861  0165CA  D002               	goto	i2l1882
 51862                           
 51863                           ; BSR set to: 0
 51864  0165CC  848E               	bsf	3982,2,c	;volatile
 51865  0165CE  D001               	goto	i2l10522
 51866  0165D0                     i2l1882:
 51867                           
 51868                           ; BSR set to: 0
 51869  0165D0  948E               	bcf	3982,2,c	;volatile
 51870  0165D2                     i2l10522:
 51871                           
 51872                           ; BSR set to: 0
 51873                           ;Device.c: 209: if (values[2] & mask) LATFbits.LF3 = 1; else LATFbits.LF3 = 0;
 51874  0165D2  0100               	movlb	0	; () banked
 51875  0165D4  EE20  F064         	lfsr	2,i2SendDataToDeviceCh@values+4
 51876  0165D8  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 51877  0165DC  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 51878  0165E0  0100               	movlb	0	; () banked
 51879  0165E2  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51880  0165E4  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51881  0165E6  0100               	movlb	0	; () banked
 51882  0165E8  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51883  0165EA  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51884  0165EC  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51885  0165EE  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51886  0165F0  B4D8               	btfsc	status,2,c
 51887  0165F2  D002               	goto	i2l1884
 51888                           
 51889                           ; BSR set to: 0
 51890  0165F4  868E               	bsf	3982,3,c	;volatile
 51891  0165F6  D001               	goto	i2l10526
 51892  0165F8                     i2l1884:
 51893                           
 51894                           ; BSR set to: 0
 51895  0165F8  968E               	bcf	3982,3,c	;volatile
 51896  0165FA                     i2l10526:
 51897                           
 51898                           ; BSR set to: 0
 51899                           ;Device.c: 210: if (values[3] & mask) LATFbits.LF4 = 1; else LATFbits.LF4 = 0;
 51900  0165FA  0100               	movlb	0	; () banked
 51901  0165FC  EE20  F066         	lfsr	2,i2SendDataToDeviceCh@values+6
 51902  016600  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 51903  016604  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 51904  016608  0100               	movlb	0	; () banked
 51905  01660A  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51906  01660C  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51907  01660E  0100               	movlb	0	; () banked
 51908  016610  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51909  016612  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51910  016614  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51911  016616  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51912  016618  B4D8               	btfsc	status,2,c
 51913  01661A  D002               	goto	i2l1886
 51914                           
 51915                           ; BSR set to: 0
 51916  01661C  888E               	bsf	3982,4,c	;volatile
 51917  01661E  D001               	goto	i2l10530
 51918  016620                     i2l1886:
 51919                           
 51920                           ; BSR set to: 0
 51921  016620  988E               	bcf	3982,4,c	;volatile
 51922  016622                     i2l10530:
 51923                           
 51924                           ; BSR set to: 0
 51925                           ;Device.c: 211: if (values[4] & mask) LATFbits.LF5 = 1; else LATFbits.LF5 = 0;
 51926  016622  0100               	movlb	0	; () banked
 51927  016624  EE20  F068         	lfsr	2,i2SendDataToDeviceCh@values+8
 51928  016628  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 51929  01662C  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 51930  016630  0100               	movlb	0	; () banked
 51931  016632  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51932  016634  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51933  016636  0100               	movlb	0	; () banked
 51934  016638  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51935  01663A  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51936  01663C  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51937  01663E  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51938  016640  B4D8               	btfsc	status,2,c
 51939  016642  D002               	goto	i2l1888
 51940                           
 51941                           ; BSR set to: 0
 51942  016644  8A8E               	bsf	3982,5,c	;volatile
 51943  016646  D001               	goto	i2l10534
 51944  016648                     i2l1888:
 51945                           
 51946                           ; BSR set to: 0
 51947  016648  9A8E               	bcf	3982,5,c	;volatile
 51948  01664A                     i2l10534:
 51949                           
 51950                           ; BSR set to: 0
 51951                           ;Device.c: 212: if (values[5] & mask) LATFbits.LF6 = 1; else LATFbits.LF6 = 0;
 51952  01664A  0100               	movlb	0	; () banked
 51953  01664C  EE20  F06A         	lfsr	2,i2SendDataToDeviceCh@values+10
 51954  016650  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 51955  016654  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 51956  016658  0100               	movlb	0	; () banked
 51957  01665A  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51958  01665C  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51959  01665E  0100               	movlb	0	; () banked
 51960  016660  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51961  016662  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51962  016664  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51963  016666  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51964  016668  B4D8               	btfsc	status,2,c
 51965  01666A  D002               	goto	i2l1890
 51966                           
 51967                           ; BSR set to: 0
 51968  01666C  8C8E               	bsf	3982,6,c	;volatile
 51969  01666E  D001               	goto	i2l10538
 51970  016670                     i2l1890:
 51971                           
 51972                           ; BSR set to: 0
 51973  016670  9C8E               	bcf	3982,6,c	;volatile
 51974  016672                     i2l10538:
 51975                           
 51976                           ; BSR set to: 0
 51977                           ;Device.c: 213: if (values[6] & mask) LATFbits.LF7 = 1; else LATFbits.LF7 = 0;
 51978  016672  0100               	movlb	0	; () banked
 51979  016674  EE20  F06C         	lfsr	2,i2SendDataToDeviceCh@values+12
 51980  016678  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 51981  01667C  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 51982  016680  0100               	movlb	0	; () banked
 51983  016682  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 51984  016684  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 51985  016686  0100               	movlb	0	; () banked
 51986  016688  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 51987  01668A  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 51988  01668C  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 51989  01668E  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 51990  016690  B4D8               	btfsc	status,2,c
 51991  016692  D002               	goto	i2l1892
 51992                           
 51993                           ; BSR set to: 0
 51994  016694  8E8E               	bsf	3982,7,c	;volatile
 51995  016696  D001               	goto	i2l10542
 51996  016698                     i2l1892:
 51997                           
 51998                           ; BSR set to: 0
 51999  016698  9E8E               	bcf	3982,7,c	;volatile
 52000  01669A                     i2l10542:
 52001                           
 52002                           ; BSR set to: 0
 52003                           ;Device.c: 214: if (values[7] & mask) LATGbits.LG4 = 1; else LATGbits.LG4 = 0;
 52004  01669A  0100               	movlb	0	; () banked
 52005  01669C  EE20  F06E         	lfsr	2,i2SendDataToDeviceCh@values+14
 52006  0166A0  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52007  0166A4  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52008  0166A8  0100               	movlb	0	; () banked
 52009  0166AA  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52010  0166AC  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52011  0166AE  0100               	movlb	0	; () banked
 52012  0166B0  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52013  0166B2  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52014  0166B4  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52015  0166B6  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52016  0166B8  B4D8               	btfsc	status,2,c
 52017  0166BA  D002               	goto	i2l1894
 52018                           
 52019                           ; BSR set to: 0
 52020  0166BC  888F               	bsf	3983,4,c	;volatile
 52021  0166BE  D001               	goto	i2l1895
 52022  0166C0                     i2l1894:
 52023                           
 52024                           ; BSR set to: 0
 52025  0166C0  988F               	bcf	3983,4,c	;volatile
 52026  0166C2                     i2l1895:
 52027                           
 52028                           ; BSR set to: 0
 52029                           ;Device.c: 215: LATEbits.LE3 = 1;
 52030  0166C2  868D               	bsf	3981,3,c	;volatile
 52031                           
 52032                           ; BSR set to: 0
 52033                           ;Device.c: 218: mask >>=1;
 52034  0166C4  0100               	movlb	0	; () banked
 52035  0166C6  90D8               	bcf	status,0,c
 52036  0166C8  3375               	rrcf	(i2SendDataToDeviceCh@mask+1)& (0+255),f,b
 52037  0166CA  3374               	rrcf	i2SendDataToDeviceCh@mask& (0+255),f,b
 52038  0166CC                     i2l10548:
 52039                           
 52040                           ; BSR set to: 0
 52041  0166CC  0100               	movlb	0	; () banked
 52042  0166CE  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52043  0166D0  1174               	iorwf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52044  0166D2  B4D8               	btfsc	status,2,c
 52045                           
 52046                           ; BSR set to: 0
 52047                           
 52048                           ; BSR set to: 0
 52049  0166D4  0012               	return	
 52050  0166D6  D755               	goto	i2l1879
 52051  0166D8                     __end_ofi2_SendDataToDeviceCh:
 52052                           	opt stack 0
 52053                           pclatu	equ	0xFFB
 52054                           pclath	equ	0xFFA
 52055                           tblptru	equ	0xFF8
 52056                           tblptrh	equ	0xFF7
 52057                           tblptrl	equ	0xFF6
 52058                           tablat	equ	0xFF5
 52059                           prodh	equ	0xFF4
 52060                           prodl	equ	0xFF3
 52061                           intcon	equ	0xFF2
 52062                           intcon2	equ	0xFF1
 52063                           intcon3	equ	0xFF0
 52064                           indf0	equ	0xFEF
 52065                           postinc0	equ	0xFEE
 52066                           fsr0h	equ	0xFEA
 52067                           fsr0l	equ	0xFE9
 52068                           wreg	equ	0xFE8
 52069                           indf1	equ	0xFE7
 52070                           postinc1	equ	0xFE6
 52071                           postdec1	equ	0xFE5
 52072                           fsr1h	equ	0xFE2
 52073                           fsr1l	equ	0xFE1
 52074                           indf2	equ	0xFDF
 52075                           postinc2	equ	0xFDE
 52076                           postdec2	equ	0xFDD
 52077                           fsr2h	equ	0xFDA
 52078                           fsr2l	equ	0xFD9
 52079                           status	equ	0xFD8
 52080                           
 52081 ;; *************** function i2_DbToCode *****************
 52082 ;; Defined at:
 52083 ;;		line 64 in file "Device.c"
 52084 ;; Parameters:    Size  Location     Type
 52085 ;;  volume          2   72[COMRAM] unsigned int 
 52086 ;; Auto vars:     Size  Location     Type
 52087 ;;  DbToCode        3   80[COMRAM] unsigned int 
 52088 ;; Return value:  Size  Location     Type
 52089 ;;                  2   72[COMRAM] unsigned int 
 52090 ;; Registers used:
 52091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52092 ;; Tracked objects:
 52093 ;;		On entry : 0/0
 52094 ;;		On exit  : 0/0
 52095 ;;		Unchanged: 0/0
 52096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52098 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52099 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52100 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52101 ;;Total ram usage:       11 bytes
 52102 ;; Hardware stack levels used:    1
 52103 ;; Hardware stack levels required when called:    2
 52104 ;; This function calls:
 52105 ;;		i2___ftadd
 52106 ;;		i2___ftmul
 52107 ;;		i2___fttol
 52108 ;;		i2___lwtoft
 52109 ;; This function is called by:
 52110 ;;		i2_SendDataToDeviceCh
 52111 ;; This function uses a non-reentrant model
 52112 ;;
 52113                           
 52114                           	psect	text159
 52115  0168B4                     __ptext159:
 52116                           	opt stack 0
 52117  0168B4                     i2_DbToCode:
 52118                           	opt stack 12
 52119                           
 52120                           ;Device.c: 66: double k = 1;
 52121                           
 52122                           ; BSR set to: 0
 52123                           ;incstack = 0
 52124  0168B4  0E00               	movlw	0
 52125  0168B6  6E51               	movwf	i2DbToCode@k,c
 52126  0168B8  0E80               	movlw	128
 52127  0168BA  6E52               	movwf	i2DbToCode@k+1,c
 52128  0168BC  0E3F               	movlw	63
 52129  0168BE  6E53               	movwf	i2DbToCode@k+2,c
 52130                           
 52131                           ;Device.c: 67: if (volume < 192)
 52132  0168C0  0EC0               	movlw	192
 52133  0168C2  5C49               	subwf	i2DbToCode@volume,w,c
 52134  0168C4  0E00               	movlw	0
 52135  0168C6  584A               	subwfb	i2DbToCode@volume+1,w,c
 52136  0168C8  B0D8               	btfsc	status,0,c
 52137  0168CA  D02A               	goto	i2l10022
 52138                           
 52139                           ;Device.c: 68: {
 52140                           ;Device.c: 69: if (volume < 96)
 52141  0168CC  0E60               	movlw	96
 52142  0168CE  5C49               	subwf	i2DbToCode@volume,w,c
 52143  0168D0  0E00               	movlw	0
 52144  0168D2  584A               	subwfb	i2DbToCode@volume+1,w,c
 52145  0168D4  B0D8               	btfsc	status,0,c
 52146  0168D6  D00E               	goto	i2l10012
 52147                           
 52148                           ;Device.c: 70: {
 52149                           ;Device.c: 71: if (volume >= 48)
 52150  0168D8  0E30               	movlw	48
 52151  0168DA  5C49               	subwf	i2DbToCode@volume,w,c
 52152  0168DC  0E00               	movlw	0
 52153  0168DE  584A               	subwfb	i2DbToCode@volume+1,w,c
 52154  0168E0  A0D8               	btfss	status,0,c
 52155  0168E2  D07E               	goto	i2l10062
 52156                           
 52157                           ;Device.c: 72: {
 52158                           ;Device.c: 73: k = 0.501187233627272;
 52159  0168E4  0E4E               	movlw	78
 52160  0168E6  6E51               	movwf	i2DbToCode@k,c
 52161  0168E8  0E00               	movlw	0
 52162  0168EA  6E52               	movwf	i2DbToCode@k+1,c
 52163  0168EC  0E3F               	movlw	63
 52164  0168EE  6E53               	movwf	i2DbToCode@k+2,c
 52165                           
 52166                           ;Device.c: 74: volume -= 48;
 52167  0168F0  0E30               	movlw	48
 52168  0168F2  D037               	goto	L58
 52169  0168F4                     i2l10012:
 52170                           
 52171                           ;Device.c: 77: else
 52172                           ;Device.c: 78: {
 52173                           ;Device.c: 79: if (volume < 144)
 52174  0168F4  0E90               	movlw	144
 52175  0168F6  5C49               	subwf	i2DbToCode@volume,w,c
 52176  0168F8  0E00               	movlw	0
 52177  0168FA  584A               	subwfb	i2DbToCode@volume+1,w,c
 52178  0168FC  B0D8               	btfsc	status,0,c
 52179  0168FE  D008               	goto	i2l10018
 52180                           
 52181                           ;Device.c: 80: {
 52182                           ;Device.c: 81: k = 0.251188643150958;
 52183  016900  0E9C               	movlw	156
 52184  016902  6E51               	movwf	i2DbToCode@k,c
 52185  016904  0E80               	movlw	128
 52186  016906  6E52               	movwf	i2DbToCode@k+1,c
 52187  016908  0E3E               	movlw	62
 52188  01690A  6E53               	movwf	i2DbToCode@k+2,c
 52189                           
 52190                           ;Device.c: 82: volume -= 96;
 52191  01690C  0E60               	movlw	96
 52192  01690E  D029               	goto	L58
 52193  016910                     i2l10018:
 52194                           
 52195                           ;Device.c: 84: else
 52196                           ;Device.c: 85: {
 52197                           ;Device.c: 86: k = 0.125892541179417;
 52198  016910  0EEA               	movlw	234
 52199  016912  6E51               	movwf	i2DbToCode@k,c
 52200  016914  0E00               	movlw	0
 52201  016916  6E52               	movwf	i2DbToCode@k+1,c
 52202  016918  0E3E               	movlw	62
 52203  01691A  6E53               	movwf	i2DbToCode@k+2,c
 52204                           
 52205                           ;Device.c: 87: volume -= 144;
 52206  01691C  0E90               	movlw	144
 52207  01691E  D021               	goto	L58
 52208  016920                     i2l10022:
 52209                           
 52210                           ;Device.c: 91: else
 52211                           ;Device.c: 92: {
 52212                           ;Device.c: 93: if (volume < 384)
 52213  016920  0E80               	movlw	128
 52214  016922  5C49               	subwf	i2DbToCode@volume,w,c
 52215  016924  0E01               	movlw	1
 52216  016926  584A               	subwfb	i2DbToCode@volume+1,w,c
 52217  016928  B0D8               	btfsc	status,0,c
 52218  01692A  D034               	goto	i2l10046
 52219                           
 52220                           ;Device.c: 94: {
 52221                           ;Device.c: 95: if (volume < 288)
 52222  01692C  0E20               	movlw	32
 52223  01692E  5C49               	subwf	i2DbToCode@volume,w,c
 52224  016930  0E01               	movlw	1
 52225  016932  584A               	subwfb	i2DbToCode@volume+1,w,c
 52226  016934  B0D8               	btfsc	status,0,c
 52227  016936  D018               	goto	i2l10036
 52228                           
 52229                           ;Device.c: 96: {
 52230                           ;Device.c: 97: if (volume < 240)
 52231  016938  0EF0               	movlw	240
 52232  01693A  5C49               	subwf	i2DbToCode@volume,w,c
 52233  01693C  0E00               	movlw	0
 52234  01693E  584A               	subwfb	i2DbToCode@volume+1,w,c
 52235  016940  B0D8               	btfsc	status,0,c
 52236  016942  D008               	goto	i2l10032
 52237                           
 52238                           ;Device.c: 98: {
 52239                           ;Device.c: 99: k = 0.0630957344480193;
 52240  016944  0E38               	movlw	56
 52241  016946  6E51               	movwf	i2DbToCode@k,c
 52242  016948  0E81               	movlw	129
 52243  01694A  6E52               	movwf	i2DbToCode@k+1,c
 52244  01694C  0E3D               	movlw	61
 52245  01694E  6E53               	movwf	i2DbToCode@k+2,c
 52246                           
 52247                           ;Device.c: 100: volume -= 192;
 52248  016950  0EC0               	movlw	192
 52249  016952  D007               	goto	L58
 52250  016954                     i2l10032:
 52251                           
 52252                           ;Device.c: 102: else
 52253                           ;Device.c: 103: {
 52254                           ;Device.c: 104: k = 0.0316227766016838;
 52255  016954  0E87               	movlw	135
 52256  016956  6E51               	movwf	i2DbToCode@k,c
 52257  016958  0E01               	movlw	1
 52258  01695A  6E52               	movwf	i2DbToCode@k+1,c
 52259  01695C  0E3D               	movlw	61
 52260  01695E  6E53               	movwf	i2DbToCode@k+2,c
 52261                           
 52262                           ;Device.c: 105: volume -= 240;
 52263  016960  0EF0               	movlw	240
 52264  016962                     L58:
 52265  016962  5E49               	subwf	i2DbToCode@volume,f,c
 52266  016964  0E00               	movlw	0
 52267  016966  D03B               	goto	L61
 52268  016968                     i2l10036:
 52269                           
 52270                           ;Device.c: 108: else
 52271                           ;Device.c: 109: {
 52272                           ;Device.c: 110: if (volume < 336)
 52273  016968  0E50               	movlw	80
 52274  01696A  5C49               	subwf	i2DbToCode@volume,w,c
 52275  01696C  0E01               	movlw	1
 52276  01696E  584A               	subwfb	i2DbToCode@volume+1,w,c
 52277  016970  B0D8               	btfsc	status,0,c
 52278  016972  D008               	goto	i2l10042
 52279                           
 52280                           ;Device.c: 111: {
 52281                           ;Device.c: 112: k = 0.0158489319246111;
 52282  016974  0ED6               	movlw	214
 52283  016976  6E51               	movwf	i2DbToCode@k,c
 52284  016978  0E81               	movlw	129
 52285  01697A  6E52               	movwf	i2DbToCode@k+1,c
 52286  01697C  0E3C               	movlw	60
 52287  01697E  6E53               	movwf	i2DbToCode@k+2,c
 52288                           
 52289                           ;Device.c: 113: volume -= 288;
 52290  016980  0E20               	movlw	32
 52291  016982  D02B               	goto	L62
 52292  016984                     i2l10042:
 52293                           
 52294                           ;Device.c: 115: else
 52295                           ;Device.c: 116: {
 52296                           ;Device.c: 117: k = 0.0079432823472428;
 52297  016984  0E25               	movlw	37
 52298  016986  6E51               	movwf	i2DbToCode@k,c
 52299  016988  0E02               	movlw	2
 52300  01698A  6E52               	movwf	i2DbToCode@k+1,c
 52301  01698C  0E3C               	movlw	60
 52302  01698E  6E53               	movwf	i2DbToCode@k+2,c
 52303                           
 52304                           ;Device.c: 118: volume -= 336;
 52305  016990  0E50               	movlw	80
 52306  016992  D023               	goto	L62
 52307  016994                     i2l10046:
 52308                           
 52309                           ;Device.c: 122: else
 52310                           ;Device.c: 123: {
 52311                           ;Device.c: 124: if (volume < 480)
 52312  016994  0EE0               	movlw	224
 52313  016996  5C49               	subwf	i2DbToCode@volume,w,c
 52314  016998  0E01               	movlw	1
 52315  01699A  584A               	subwfb	i2DbToCode@volume+1,w,c
 52316  01699C  B0D8               	btfsc	status,0,c
 52317  01699E  D016               	goto	i2l10058
 52318                           
 52319                           ;Device.c: 125: {
 52320                           ;Device.c: 126: if (volume < 432)
 52321  0169A0  0EB0               	movlw	176
 52322  0169A2  5C49               	subwf	i2DbToCode@volume,w,c
 52323  0169A4  0E01               	movlw	1
 52324  0169A6  584A               	subwfb	i2DbToCode@volume+1,w,c
 52325  0169A8  B0D8               	btfsc	status,0,c
 52326  0169AA  D008               	goto	i2l10054
 52327                           
 52328                           ;Device.c: 127: {
 52329                           ;Device.c: 128: k = 0.00398107170553497;
 52330  0169AC  0E74               	movlw	116
 52331  0169AE  6E51               	movwf	i2DbToCode@k,c
 52332  0169B0  0E82               	movlw	130
 52333  0169B2  6E52               	movwf	i2DbToCode@k+1,c
 52334  0169B4  0E3B               	movlw	59
 52335  0169B6  6E53               	movwf	i2DbToCode@k+2,c
 52336                           
 52337                           ;Device.c: 129: volume -= 384;
 52338  0169B8  0E80               	movlw	128
 52339  0169BA  D00F               	goto	L62
 52340  0169BC                     i2l10054:
 52341                           
 52342                           ;Device.c: 131: else
 52343                           ;Device.c: 132: {
 52344                           ;Device.c: 133: k = 0.00199526231496888;
 52345  0169BC  0EC3               	movlw	195
 52346  0169BE  6E51               	movwf	i2DbToCode@k,c
 52347  0169C0  0E02               	movlw	2
 52348  0169C2  6E52               	movwf	i2DbToCode@k+1,c
 52349  0169C4  0E3B               	movlw	59
 52350  0169C6  6E53               	movwf	i2DbToCode@k+2,c
 52351                           
 52352                           ;Device.c: 134: volume -= 432;
 52353  0169C8  0EB0               	movlw	176
 52354  0169CA  D007               	goto	L62
 52355  0169CC                     i2l10058:
 52356                           
 52357                           ;Device.c: 137: else
 52358                           ;Device.c: 138: {
 52359                           ;Device.c: 139: k = 0.001;
 52360  0169CC  0E12               	movlw	18
 52361  0169CE  6E51               	movwf	i2DbToCode@k,c
 52362  0169D0  0E83               	movlw	131
 52363  0169D2  6E52               	movwf	i2DbToCode@k+1,c
 52364  0169D4  0E3A               	movlw	58
 52365  0169D6  6E53               	movwf	i2DbToCode@k+2,c
 52366                           
 52367                           ;Device.c: 140: volume -= 480;
 52368  0169D8  0EE0               	movlw	224
 52369  0169DA                     L62:
 52370  0169DA  5E49               	subwf	i2DbToCode@volume,f,c
 52371  0169DC  0E01               	movlw	1
 52372  0169DE                     L61:
 52373  0169DE  5A4A               	subwfb	i2DbToCode@volume+1,f,c
 52374  0169E0                     i2l10062:
 52375                           
 52376                           ;Device.c: 141: }
 52377                           ;Device.c: 142: }
 52378                           ;Device.c: 143: }
 52379                           ;Device.c: 146: if (volume > 47) return 0;
 52380  0169E0  0E30               	movlw	48
 52381  0169E2  5C49               	subwf	i2DbToCode@volume,w,c
 52382  0169E4  0E00               	movlw	0
 52383  0169E6  584A               	subwfb	i2DbToCode@volume+1,w,c
 52384  0169E8  A0D8               	btfss	status,0,c
 52385  0169EA  D005               	goto	i2l10068
 52386  0169EC  0E00               	movlw	0
 52387  0169EE  6E4A               	movwf	?i2_DbToCode+1,c
 52388  0169F0  0E00               	movlw	0
 52389  0169F2  6E49               	movwf	?i2_DbToCode,c
 52390  0169F4  0012               	return	
 52391  0169F6                     i2l10068:
 52392                           
 52393                           ;Device.c: 147: return (uint16_t)(LOGS[volume] * k + 0.5);
 52394  0169F6  0E00               	movlw	0
 52395  0169F8  6E31               	movwf	i2___ftadd@f2,c
 52396  0169FA  0E00               	movlw	0
 52397  0169FC  6E32               	movwf	i2___ftadd@f2+1,c
 52398  0169FE  0E3F               	movlw	63
 52399  016A00  6E33               	movwf	i2___ftadd@f2+2,c
 52400  016A02  C051  F018         	movff	i2DbToCode@k,i2___ftmul@f2
 52401  016A06  C052  F019         	movff	i2DbToCode@k+1,i2___ftmul@f2+1
 52402  016A0A  C053  F01A         	movff	i2DbToCode@k+2,i2___ftmul@f2+2
 52403  016A0E  C049  F04B         	movff	i2DbToCode@volume,??i2_DbToCode
 52404  016A12  C04A  F04C         	movff	i2DbToCode@volume+1,??i2_DbToCode+1
 52405  016A16  90D8               	bcf	status,0,c
 52406  016A18  364B               	rlcf	??i2_DbToCode,f,c
 52407  016A1A  364C               	rlcf	??i2_DbToCode+1,f,c
 52408  016A1C  0E35               	movlw	low _LOGS
 52409  016A1E  244B               	addwf	??i2_DbToCode,w,c
 52410  016A20  6EF6               	movwf	tblptrl,c
 52411  016A22  0EFE               	movlw	high _LOGS
 52412  016A24  204C               	addwfc	??i2_DbToCode+1,w,c
 52413  016A26  6EF7               	movwf	tblptrh,c
 52414  016A28                     	if	1	;There are 3 active tblptr bytes
 52415  016A28  6AF8               	clrf	tblptru,c
 52416  016A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 52417  016A2C  22F8               	addwfc	tblptru,f,c
 52418  016A2E                     	endif
 52419  016A2E  0009               	tblrd		*+
 52420  016A30  CFF5 F009          	movff	tablat,i2___lwtoft@c
 52421  016A34  000A               	tblrd		*-
 52422  016A36  CFF5 F00A          	movff	tablat,i2___lwtoft@c+1
 52423  016A3A  ECBB  F0DB         	call	i2___lwtoft	;wreg free
 52424  016A3E  C009  F015         	movff	?i2___lwtoft,i2___ftmul@f1
 52425  016A42  C00A  F016         	movff	?i2___lwtoft+1,i2___ftmul@f1+1
 52426  016A46  C00B  F017         	movff	?i2___lwtoft+2,i2___ftmul@f1+2
 52427  016A4A  EC6D  F0C8         	call	i2___ftmul	;wreg free
 52428  016A4E  C015  F02E         	movff	?i2___ftmul,i2___ftadd@f1
 52429  016A52  C016  F02F         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 52430  016A56  C017  F030         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 52431  016A5A  EC1B  F0B6         	call	i2___ftadd	;wreg free
 52432  016A5E  C02E  F03A         	movff	?i2___ftadd,i2___fttol@f1
 52433  016A62  C02F  F03B         	movff	?i2___ftadd+1,i2___fttol@f1+1
 52434  016A66  C030  F03C         	movff	?i2___ftadd+2,i2___fttol@f1+2
 52435  016A6A  ECF2  F0C7         	call	i2___fttol	;wreg free
 52436  016A6E  C03A  F04D         	movff	?i2___fttol,??i2_DbToCode+2
 52437  016A72  C03B  F04E         	movff	?i2___fttol+1,??i2_DbToCode+3
 52438  016A76  C03C  F04F         	movff	?i2___fttol+2,??i2_DbToCode+4
 52439  016A7A  C03D  F050         	movff	?i2___fttol+3,??i2_DbToCode+5
 52440  016A7E  C04D  F049         	movff	??i2_DbToCode+2,?i2_DbToCode
 52441  016A82  C04E  F04A         	movff	??i2_DbToCode+3,?i2_DbToCode+1
 52442  016A86  0012               	return	
 52443  016A88                     __end_ofi2_DbToCode:
 52444                           	opt stack 0
 52445                           pclatu	equ	0xFFB
 52446                           pclath	equ	0xFFA
 52447                           tblptru	equ	0xFF8
 52448                           tblptrh	equ	0xFF7
 52449                           tblptrl	equ	0xFF6
 52450                           tablat	equ	0xFF5
 52451                           prodh	equ	0xFF4
 52452                           prodl	equ	0xFF3
 52453                           intcon	equ	0xFF2
 52454                           intcon2	equ	0xFF1
 52455                           intcon3	equ	0xFF0
 52456                           indf0	equ	0xFEF
 52457                           postinc0	equ	0xFEE
 52458                           fsr0h	equ	0xFEA
 52459                           fsr0l	equ	0xFE9
 52460                           wreg	equ	0xFE8
 52461                           indf1	equ	0xFE7
 52462                           postinc1	equ	0xFE6
 52463                           postdec1	equ	0xFE5
 52464                           fsr1h	equ	0xFE2
 52465                           fsr1l	equ	0xFE1
 52466                           indf2	equ	0xFDF
 52467                           postinc2	equ	0xFDE
 52468                           postdec2	equ	0xFDD
 52469                           fsr2h	equ	0xFDA
 52470                           fsr2l	equ	0xFD9
 52471                           status	equ	0xFD8
 52472                           
 52473 ;; *************** function i2___lwtoft *****************
 52474 ;; Defined at:
 52475 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 52476 ;; Parameters:    Size  Location     Type
 52477 ;;  c               2    8[COMRAM] unsigned int 
 52478 ;; Auto vars:     Size  Location     Type
 52479 ;;		None
 52480 ;; Return value:  Size  Location     Type
 52481 ;;                  3    8[COMRAM] float 
 52482 ;; Registers used:
 52483 ;;		wreg, status,2, status,0, cstack
 52484 ;; Tracked objects:
 52485 ;;		On entry : 0/0
 52486 ;;		On exit  : 0/0
 52487 ;;		Unchanged: 0/0
 52488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52492 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52493 ;;Total ram usage:        3 bytes
 52494 ;; Hardware stack levels used:    1
 52495 ;; Hardware stack levels required when called:    1
 52496 ;; This function calls:
 52497 ;;		i2___ftpack
 52498 ;; This function is called by:
 52499 ;;		i2_DbToCode
 52500 ;; This function uses a non-reentrant model
 52501 ;;
 52502                           
 52503                           	psect	text160
 52504  01B776                     __ptext160:
 52505                           	opt stack 0
 52506  01B776                     i2___lwtoft:
 52507                           	opt stack 12
 52508                           
 52509                           ;incstack = 0
 52510  01B776  C009  F001         	movff	i2___lwtoft@c,i2___ftpack@arg
 52511  01B77A  C00A  F002         	movff	i2___lwtoft@c+1,i2___ftpack@arg+1
 52512  01B77E  6A03               	clrf	i2___ftpack@arg+2,c
 52513  01B780  0E8E               	movlw	142
 52514  01B782  6E04               	movwf	i2___ftpack@exp,c
 52515  01B784  0E00               	movlw	0
 52516  01B786  6E05               	movwf	i2___ftpack@sign,c
 52517  01B788  EC91  F0D0         	call	i2___ftpack	;wreg free
 52518  01B78C  C001  F009         	movff	?i2___ftpack,?i2___lwtoft
 52519  01B790  C002  F00A         	movff	?i2___ftpack+1,?i2___lwtoft+1
 52520  01B794  C003  F00B         	movff	?i2___ftpack+2,?i2___lwtoft+2
 52521  01B798  0012               	return	
 52522  01B79A                     __end_ofi2___lwtoft:
 52523                           	opt stack 0
 52524                           pclatu	equ	0xFFB
 52525                           pclath	equ	0xFFA
 52526                           tblptru	equ	0xFF8
 52527                           tblptrh	equ	0xFF7
 52528                           tblptrl	equ	0xFF6
 52529                           tablat	equ	0xFF5
 52530                           prodh	equ	0xFF4
 52531                           prodl	equ	0xFF3
 52532                           intcon	equ	0xFF2
 52533                           intcon2	equ	0xFF1
 52534                           intcon3	equ	0xFF0
 52535                           indf0	equ	0xFEF
 52536                           postinc0	equ	0xFEE
 52537                           fsr0h	equ	0xFEA
 52538                           fsr0l	equ	0xFE9
 52539                           wreg	equ	0xFE8
 52540                           indf1	equ	0xFE7
 52541                           postinc1	equ	0xFE6
 52542                           postdec1	equ	0xFE5
 52543                           fsr1h	equ	0xFE2
 52544                           fsr1l	equ	0xFE1
 52545                           indf2	equ	0xFDF
 52546                           postinc2	equ	0xFDE
 52547                           postdec2	equ	0xFDD
 52548                           fsr2h	equ	0xFDA
 52549                           fsr2l	equ	0xFD9
 52550                           status	equ	0xFD8
 52551                           
 52552 ;; *************** function i2___fttol *****************
 52553 ;; Defined at:
 52554 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 52555 ;; Parameters:    Size  Location     Type
 52556 ;;  f1              3   57[COMRAM] float 
 52557 ;; Auto vars:     Size  Location     Type
 52558 ;;  __fttol         4   67[COMRAM] unsigned long 
 52559 ;;  __fttol         1   71[COMRAM] unsigned char 
 52560 ;;  __fttol         1   66[COMRAM] unsigned char 
 52561 ;; Return value:  Size  Location     Type
 52562 ;;                  4   57[COMRAM] long 
 52563 ;; Registers used:
 52564 ;;		wreg, status,2, status,0
 52565 ;; Tracked objects:
 52566 ;;		On entry : 0/0
 52567 ;;		On exit  : 0/0
 52568 ;;		Unchanged: 0/0
 52569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52571 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52572 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52573 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52574 ;;Total ram usage:       15 bytes
 52575 ;; Hardware stack levels used:    1
 52576 ;; This function calls:
 52577 ;;		Nothing
 52578 ;; This function is called by:
 52579 ;;		i2_DbToCode
 52580 ;;		i2_sprintf
 52581 ;; This function uses a non-reentrant model
 52582 ;;
 52583                           
 52584                           	psect	text161
 52585  018FE4                     __ptext161:
 52586                           	opt stack 0
 52587  018FE4                     i2___fttol:
 52588                           	opt stack 15
 52589                           
 52590                           ;incstack = 0
 52591  018FE4  C03C  F03E         	movff	i2___fttol@f1+2,??i2___fttol
 52592  018FE8  6A3F               	clrf	(??i2___fttol+1)& (0+255),c
 52593  018FEA  6A40               	clrf	(??i2___fttol+2)& (0+255),c
 52594  018FEC  343B               	rlcf	i2___fttol@f1+1,w,c
 52595  018FEE  363E               	rlcf	??i2___fttol& (0+255),f,c
 52596  018FF0  E301               	bnc	u1001_41
 52597  018FF2  803F               	bsf	(??i2___fttol+1)& (0+255),0,c
 52598  018FF4                     u1001_41:
 52599  018FF4  503E               	movf	??i2___fttol,w,c
 52600  018FF6  6E48               	movwf	i2___fttol@exp1,c
 52601  018FF8  6648               	tstfsz	i2___fttol@exp1& (0+255),c
 52602  018FFA  D009               	goto	i2l9792
 52603  018FFC  0E00               	movlw	0
 52604  018FFE  6E3A               	movwf	?i2___fttol,c
 52605  019000  0E00               	movlw	0
 52606  019002  6E3B               	movwf	?i2___fttol+1,c
 52607  019004  0E00               	movlw	0
 52608  019006  6E3C               	movwf	?i2___fttol+2,c
 52609  019008  0E00               	movlw	0
 52610  01900A  6E3D               	movwf	?i2___fttol+3,c
 52611  01900C  0012               	return	
 52612  01900E                     i2l9792:
 52613  01900E  0E17               	movlw	23
 52614  019010  6E3E               	movwf	??i2___fttol& (0+255),c
 52615  019012  C03A  F03F         	movff	i2___fttol@f1,??i2___fttol+1
 52616  019016  C03B  F040         	movff	i2___fttol@f1+1,??i2___fttol+2
 52617  01901A  C03C  F041         	movff	i2___fttol@f1+2,??i2___fttol+3
 52618  01901E  283E               	incf	??i2___fttol,w,c
 52619  019020  6E42               	movwf	(??i2___fttol+4)& (0+255),c
 52620  019022  D004               	goto	i2u1003_40
 52621  019024                     i2u1003_45:
 52622  019024  90D8               	bcf	status,0,c
 52623  019026  3241               	rrcf	??i2___fttol+3,f,c
 52624  019028  3240               	rrcf	??i2___fttol+2,f,c
 52625  01902A  323F               	rrcf	??i2___fttol+1,f,c
 52626  01902C                     i2u1003_40:
 52627  01902C  2E42               	decfsz	(??i2___fttol+4)& (0+255),f,c
 52628  01902E  D7FA               	goto	i2u1003_45
 52629  019030  503F               	movf	??i2___fttol+1,w,c
 52630  019032  6E43               	movwf	i2___fttol@sign1,c
 52631  019034  8E3B               	bsf	i2___fttol@f1+1,7,c
 52632  019036  0EFF               	movlw	255
 52633  019038  163A               	andwf	i2___fttol@f1,f,c
 52634  01903A  0EFF               	movlw	255
 52635  01903C  163B               	andwf	i2___fttol@f1+1,f,c
 52636  01903E  0E00               	movlw	0
 52637  019040  163C               	andwf	i2___fttol@f1+2,f,c
 52638  019042  503A               	movf	i2___fttol@f1,w,c
 52639  019044  6E44               	movwf	i2___fttol@lval,c
 52640  019046  503B               	movf	i2___fttol@f1+1,w,c
 52641  019048  6E45               	movwf	i2___fttol@lval+1,c
 52642  01904A  503C               	movf	i2___fttol@f1+2,w,c
 52643  01904C  6E46               	movwf	i2___fttol@lval+2,c
 52644  01904E  6A47               	clrf	i2___fttol@lval+3,c
 52645  019050  0E8E               	movlw	142
 52646  019052  5E48               	subwf	i2___fttol@exp1,f,c
 52647  019054  AE48               	btfss	i2___fttol@exp1,7,c
 52648  019056  D019               	goto	i2l9814
 52649  019058  5048               	movf	i2___fttol@exp1,w,c
 52650  01905A  0A80               	xorlw	128
 52651  01905C  6E3E               	movwf	??i2___fttol& (0+255),c
 52652  01905E  0EF1               	movlw	241
 52653  019060  0A80               	xorlw	128
 52654  019062  5C3E               	subwf	??i2___fttol,w,c
 52655  019064  B0D8               	btfsc	status,0,c
 52656  019066  D009               	goto	i2l9810
 52657  019068  0E00               	movlw	0
 52658  01906A  6E3A               	movwf	?i2___fttol,c
 52659  01906C  0E00               	movlw	0
 52660  01906E  6E3B               	movwf	?i2___fttol+1,c
 52661  019070  0E00               	movlw	0
 52662  019072  6E3C               	movwf	?i2___fttol+2,c
 52663  019074  0E00               	movlw	0
 52664  019076  6E3D               	movwf	?i2___fttol+3,c
 52665  019078  0012               	return	
 52666  01907A                     i2l9810:
 52667  01907A  90D8               	bcf	status,0,c
 52668  01907C  3247               	rrcf	i2___fttol@lval+3,f,c
 52669  01907E  3246               	rrcf	i2___fttol@lval+2,f,c
 52670  019080  3245               	rrcf	i2___fttol@lval+1,f,c
 52671  019082  3244               	rrcf	i2___fttol@lval,f,c
 52672  019084  3E48               	incfsz	i2___fttol@exp1,f,c
 52673  019086  D7F9               	goto	i2l9810
 52674  019088  D014               	goto	i2l9824
 52675  01908A                     i2l9814:
 52676  01908A  0E17               	movlw	23
 52677  01908C  6448               	cpfsgt	i2___fttol@exp1,c
 52678  01908E  D00F               	goto	i2l9822
 52679  019090  0E00               	movlw	0
 52680  019092  6E3A               	movwf	?i2___fttol,c
 52681  019094  0E00               	movlw	0
 52682  019096  6E3B               	movwf	?i2___fttol+1,c
 52683  019098  0E00               	movlw	0
 52684  01909A  6E3C               	movwf	?i2___fttol+2,c
 52685  01909C  0E00               	movlw	0
 52686  01909E  6E3D               	movwf	?i2___fttol+3,c
 52687  0190A0  0012               	return	
 52688  0190A2                     i2l9820:
 52689  0190A2  90D8               	bcf	status,0,c
 52690  0190A4  3644               	rlcf	i2___fttol@lval,f,c
 52691  0190A6  3645               	rlcf	i2___fttol@lval+1,f,c
 52692  0190A8  3646               	rlcf	i2___fttol@lval+2,f,c
 52693  0190AA  3647               	rlcf	i2___fttol@lval+3,f,c
 52694  0190AC  0648               	decf	i2___fttol@exp1,f,c
 52695  0190AE                     i2l9822:
 52696  0190AE  6648               	tstfsz	i2___fttol@exp1,c
 52697  0190B0  D7F8               	goto	i2l9820
 52698  0190B2                     i2l9824:
 52699  0190B2  5043               	movf	i2___fttol@sign1,w,c
 52700  0190B4  B4D8               	btfsc	status,2,c
 52701  0190B6  D008               	goto	i2l9828
 52702  0190B8  1E47               	comf	i2___fttol@lval+3,f,c
 52703  0190BA  1E46               	comf	i2___fttol@lval+2,f,c
 52704  0190BC  1E45               	comf	i2___fttol@lval+1,f,c
 52705  0190BE  6C44               	negf	i2___fttol@lval,c
 52706  0190C0  0E00               	movlw	0
 52707  0190C2  2245               	addwfc	i2___fttol@lval+1,f,c
 52708  0190C4  2246               	addwfc	i2___fttol@lval+2,f,c
 52709  0190C6  2247               	addwfc	i2___fttol@lval+3,f,c
 52710  0190C8                     i2l9828:
 52711  0190C8  C044  F03A         	movff	i2___fttol@lval,?i2___fttol
 52712  0190CC  C045  F03B         	movff	i2___fttol@lval+1,?i2___fttol+1
 52713  0190D0  C046  F03C         	movff	i2___fttol@lval+2,?i2___fttol+2
 52714  0190D4  C047  F03D         	movff	i2___fttol@lval+3,?i2___fttol+3
 52715  0190D8  0012               	return	
 52716  0190DA                     __end_ofi2___fttol:
 52717                           	opt stack 0
 52718                           pclatu	equ	0xFFB
 52719                           pclath	equ	0xFFA
 52720                           tblptru	equ	0xFF8
 52721                           tblptrh	equ	0xFF7
 52722                           tblptrl	equ	0xFF6
 52723                           tablat	equ	0xFF5
 52724                           prodh	equ	0xFF4
 52725                           prodl	equ	0xFF3
 52726                           intcon	equ	0xFF2
 52727                           intcon2	equ	0xFF1
 52728                           intcon3	equ	0xFF0
 52729                           indf0	equ	0xFEF
 52730                           postinc0	equ	0xFEE
 52731                           fsr0h	equ	0xFEA
 52732                           fsr0l	equ	0xFE9
 52733                           wreg	equ	0xFE8
 52734                           indf1	equ	0xFE7
 52735                           postinc1	equ	0xFE6
 52736                           postdec1	equ	0xFE5
 52737                           fsr1h	equ	0xFE2
 52738                           fsr1l	equ	0xFE1
 52739                           indf2	equ	0xFDF
 52740                           postinc2	equ	0xFDE
 52741                           postdec2	equ	0xFDD
 52742                           fsr2h	equ	0xFDA
 52743                           fsr2l	equ	0xFD9
 52744                           status	equ	0xFD8
 52745                           
 52746 ;; *************** function i2___ftmul *****************
 52747 ;; Defined at:
 52748 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 52749 ;; Parameters:    Size  Location     Type
 52750 ;;  f1              3   20[COMRAM] float 
 52751 ;;  f2              3   23[COMRAM] float 
 52752 ;; Auto vars:     Size  Location     Type
 52753 ;;  __ftmul         3   30[COMRAM] unsigned um
 52754 ;;  __ftmul         1   34[COMRAM] unsigned char 
 52755 ;;  __ftmul         1   33[COMRAM] unsigned char 
 52756 ;;  __ftmul         1   29[COMRAM] unsigned char 
 52757 ;; Return value:  Size  Location     Type
 52758 ;;                  3   20[COMRAM] float 
 52759 ;; Registers used:
 52760 ;;		wreg, status,2, status,0, cstack
 52761 ;; Tracked objects:
 52762 ;;		On entry : 0/0
 52763 ;;		On exit  : 0/0
 52764 ;;		Unchanged: 0/0
 52765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52766 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52767 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52768 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52769 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52770 ;;Total ram usage:       15 bytes
 52771 ;; Hardware stack levels used:    1
 52772 ;; Hardware stack levels required when called:    1
 52773 ;; This function calls:
 52774 ;;		i2___ftpack
 52775 ;; This function is called by:
 52776 ;;		i2_DbToCode
 52777 ;;		i2_fround
 52778 ;;		i2_scale
 52779 ;;		i2_sprintf
 52780 ;; This function uses a non-reentrant model
 52781 ;;
 52782                           
 52783                           	psect	text162
 52784  0190DA                     __ptext162:
 52785                           	opt stack 0
 52786  0190DA                     i2___ftmul:
 52787                           	opt stack 13
 52788                           
 52789                           ;incstack = 0
 52790  0190DA  C017  F01B         	movff	i2___ftmul@f1+2,??i2___ftmul
 52791  0190DE  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 52792  0190E0  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 52793  0190E2  3416               	rlcf	i2___ftmul@f1+1,w,c
 52794  0190E4  361B               	rlcf	??i2___ftmul& (0+255),f,c
 52795  0190E6  E301               	bnc	u995_41
 52796  0190E8  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 52797  0190EA                     u995_41:
 52798  0190EA  501B               	movf	??i2___ftmul,w,c
 52799  0190EC  6E1E               	movwf	i2___ftmul@exp,c
 52800  0190EE  661E               	tstfsz	i2___ftmul@exp& (0+255),c
 52801  0190F0  D007               	goto	i2l9744
 52802  0190F2  0E00               	movlw	0
 52803  0190F4  6E15               	movwf	?i2___ftmul,c
 52804  0190F6  0E00               	movlw	0
 52805  0190F8  6E16               	movwf	?i2___ftmul+1,c
 52806  0190FA  0E00               	movlw	0
 52807  0190FC  6E17               	movwf	?i2___ftmul+2,c
 52808  0190FE  0012               	return	
 52809  019100                     i2l9744:
 52810  019100  C01A  F01B         	movff	i2___ftmul@f2+2,??i2___ftmul
 52811  019104  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 52812  019106  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 52813  019108  3419               	rlcf	i2___ftmul@f2+1,w,c
 52814  01910A  361B               	rlcf	??i2___ftmul& (0+255),f,c
 52815  01910C  E301               	bnc	u997_41
 52816  01910E  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 52817  019110                     u997_41:
 52818  019110  501B               	movf	??i2___ftmul,w,c
 52819  019112  6E23               	movwf	i2___ftmul@sign,c
 52820  019114  6623               	tstfsz	i2___ftmul@sign& (0+255),c
 52821  019116  D007               	goto	i2l9750
 52822  019118  0E00               	movlw	0
 52823  01911A  6E15               	movwf	?i2___ftmul,c
 52824  01911C  0E00               	movlw	0
 52825  01911E  6E16               	movwf	?i2___ftmul+1,c
 52826  019120  0E00               	movlw	0
 52827  019122  6E17               	movwf	?i2___ftmul+2,c
 52828  019124  0012               	return	
 52829  019126                     i2l9750:
 52830  019126  5023               	movf	i2___ftmul@sign,w,c
 52831  019128  0F7B               	addlw	123
 52832  01912A  261E               	addwf	i2___ftmul@exp,f,c
 52833  01912C  C017  F023         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 52834  019130  501A               	movf	i2___ftmul@f2+2,w,c
 52835  019132  1A23               	xorwf	i2___ftmul@sign,f,c
 52836  019134  0E80               	movlw	128
 52837  019136  1623               	andwf	i2___ftmul@sign,f,c
 52838  019138  8E16               	bsf	i2___ftmul@f1+1,7,c
 52839  01913A  8E19               	bsf	i2___ftmul@f2+1,7,c
 52840  01913C  0EFF               	movlw	255
 52841  01913E  1618               	andwf	i2___ftmul@f2,f,c
 52842  019140  0EFF               	movlw	255
 52843  019142  1619               	andwf	i2___ftmul@f2+1,f,c
 52844  019144  0E00               	movlw	0
 52845  019146  161A               	andwf	i2___ftmul@f2+2,f,c
 52846  019148  0E00               	movlw	0
 52847  01914A  6E1F               	movwf	i2___ftmul@f3_as_product,c
 52848  01914C  0E00               	movlw	0
 52849  01914E  6E20               	movwf	i2___ftmul@f3_as_product+1,c
 52850  019150  0E00               	movlw	0
 52851  019152  6E21               	movwf	i2___ftmul@f3_as_product+2,c
 52852  019154  0E07               	movlw	7
 52853  019156  6E22               	movwf	i2___ftmul@cntr,c
 52854  019158                     i2l9764:
 52855  019158  A015               	btfss	i2___ftmul@f1,0,c
 52856  01915A  D006               	goto	i2l9768
 52857  01915C  5018               	movf	i2___ftmul@f2,w,c
 52858  01915E  261F               	addwf	i2___ftmul@f3_as_product,f,c
 52859  019160  5019               	movf	i2___ftmul@f2+1,w,c
 52860  019162  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 52861  019164  501A               	movf	i2___ftmul@f2+2,w,c
 52862  019166  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 52863  019168                     i2l9768:
 52864  019168  90D8               	bcf	status,0,c
 52865  01916A  3217               	rrcf	i2___ftmul@f1+2,f,c
 52866  01916C  3216               	rrcf	i2___ftmul@f1+1,f,c
 52867  01916E  3215               	rrcf	i2___ftmul@f1,f,c
 52868  019170  90D8               	bcf	status,0,c
 52869  019172  3618               	rlcf	i2___ftmul@f2,f,c
 52870  019174  3619               	rlcf	i2___ftmul@f2+1,f,c
 52871  019176  361A               	rlcf	i2___ftmul@f2+2,f,c
 52872  019178  2E22               	decfsz	i2___ftmul@cntr,f,c
 52873  01917A  D7EE               	goto	i2l9764
 52874  01917C  0E09               	movlw	9
 52875  01917E  6E22               	movwf	i2___ftmul@cntr,c
 52876  019180                     i2l9774:
 52877  019180  A015               	btfss	i2___ftmul@f1,0,c
 52878  019182  D006               	goto	i2l9778
 52879  019184  5018               	movf	i2___ftmul@f2,w,c
 52880  019186  261F               	addwf	i2___ftmul@f3_as_product,f,c
 52881  019188  5019               	movf	i2___ftmul@f2+1,w,c
 52882  01918A  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 52883  01918C  501A               	movf	i2___ftmul@f2+2,w,c
 52884  01918E  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 52885  019190                     i2l9778:
 52886  019190  90D8               	bcf	status,0,c
 52887  019192  3217               	rrcf	i2___ftmul@f1+2,f,c
 52888  019194  3216               	rrcf	i2___ftmul@f1+1,f,c
 52889  019196  3215               	rrcf	i2___ftmul@f1,f,c
 52890  019198  90D8               	bcf	status,0,c
 52891  01919A  3221               	rrcf	i2___ftmul@f3_as_product+2,f,c
 52892  01919C  3220               	rrcf	i2___ftmul@f3_as_product+1,f,c
 52893  01919E  321F               	rrcf	i2___ftmul@f3_as_product,f,c
 52894  0191A0  2E22               	decfsz	i2___ftmul@cntr,f,c
 52895  0191A2  D7EE               	goto	i2l9774
 52896  0191A4  C01F  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 52897  0191A8  C020  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 52898  0191AC  C021  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 52899  0191B0  C01E  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 52900  0191B4  C023  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 52901  0191B8  EC91  F0D0         	call	i2___ftpack	;wreg free
 52902  0191BC  C001  F015         	movff	?i2___ftpack,?i2___ftmul
 52903  0191C0  C002  F016         	movff	?i2___ftpack+1,?i2___ftmul+1
 52904  0191C4  C003  F017         	movff	?i2___ftpack+2,?i2___ftmul+2
 52905  0191C8  0012               	return	
 52906  0191CA                     __end_ofi2___ftmul:
 52907                           	opt stack 0
 52908                           pclatu	equ	0xFFB
 52909                           pclath	equ	0xFFA
 52910                           tblptru	equ	0xFF8
 52911                           tblptrh	equ	0xFF7
 52912                           tblptrl	equ	0xFF6
 52913                           tablat	equ	0xFF5
 52914                           prodh	equ	0xFF4
 52915                           prodl	equ	0xFF3
 52916                           intcon	equ	0xFF2
 52917                           intcon2	equ	0xFF1
 52918                           intcon3	equ	0xFF0
 52919                           indf0	equ	0xFEF
 52920                           postinc0	equ	0xFEE
 52921                           fsr0h	equ	0xFEA
 52922                           fsr0l	equ	0xFE9
 52923                           wreg	equ	0xFE8
 52924                           indf1	equ	0xFE7
 52925                           postinc1	equ	0xFE6
 52926                           postdec1	equ	0xFE5
 52927                           fsr1h	equ	0xFE2
 52928                           fsr1l	equ	0xFE1
 52929                           indf2	equ	0xFDF
 52930                           postinc2	equ	0xFDE
 52931                           postdec2	equ	0xFDD
 52932                           fsr2h	equ	0xFDA
 52933                           fsr2l	equ	0xFD9
 52934                           status	equ	0xFD8
 52935                           
 52936 ;; *************** function i2___ftadd *****************
 52937 ;; Defined at:
 52938 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
 52939 ;; Parameters:    Size  Location     Type
 52940 ;;  f1              3   45[COMRAM] float 
 52941 ;;  f2              3   48[COMRAM] float 
 52942 ;; Auto vars:     Size  Location     Type
 52943 ;;  __ftadd         1   56[COMRAM] unsigned char 
 52944 ;;  __ftadd         1   55[COMRAM] unsigned char 
 52945 ;;  __ftadd         1   54[COMRAM] unsigned char 
 52946 ;; Return value:  Size  Location     Type
 52947 ;;                  3   45[COMRAM] float 
 52948 ;; Registers used:
 52949 ;;		wreg, status,2, status,0, cstack
 52950 ;; Tracked objects:
 52951 ;;		On entry : 0/0
 52952 ;;		On exit  : 0/0
 52953 ;;		Unchanged: 0/0
 52954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52955 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52956 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52957 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52958 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52959 ;;Total ram usage:       12 bytes
 52960 ;; Hardware stack levels used:    1
 52961 ;; Hardware stack levels required when called:    1
 52962 ;; This function calls:
 52963 ;;		i2___ftpack
 52964 ;; This function is called by:
 52965 ;;		i2_DbToCode
 52966 ;;		i2_sprintf
 52967 ;;		i2___ftsub
 52968 ;; This function uses a non-reentrant model
 52969 ;;
 52970                           
 52971                           	psect	text163
 52972  016C36                     __ptext163:
 52973                           	opt stack 0
 52974  016C36                     i2___ftadd:
 52975                           	opt stack 13
 52976                           
 52977                           ;incstack = 0
 52978  016C36  C030  F034         	movff	i2___ftadd@f1+2,??i2___ftadd
 52979  016C3A  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 52980  016C3C  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 52981  016C3E  342F               	rlcf	i2___ftadd@f1+1,w,c
 52982  016C40  3634               	rlcf	??i2___ftadd& (0+255),f,c
 52983  016C42  E301               	bnc	u974_41
 52984  016C44  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 52985  016C46                     u974_41:
 52986  016C46  5034               	movf	??i2___ftadd,w,c
 52987  016C48  6E39               	movwf	i2___ftadd@exp1,c
 52988  016C4A  C033  F034         	movff	i2___ftadd@f2+2,??i2___ftadd
 52989  016C4E  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 52990  016C50  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 52991  016C52  3432               	rlcf	i2___ftadd@f2+1,w,c
 52992  016C54  3634               	rlcf	??i2___ftadd& (0+255),f,c
 52993  016C56  E301               	bnc	u975_41
 52994  016C58  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 52995  016C5A                     u975_41:
 52996  016C5A  5034               	movf	??i2___ftadd,w,c
 52997  016C5C  6E38               	movwf	i2___ftadd@exp2,c
 52998  016C5E  5039               	movf	i2___ftadd@exp1,w,c
 52999  016C60  B4D8               	btfsc	status,2,c
 53000  016C62  D00C               	goto	i2l2525
 53001  016C64  5038               	movf	i2___ftadd@exp2,w,c
 53002  016C66  5C39               	subwf	i2___ftadd@exp1,w,c
 53003  016C68  B0D8               	btfsc	status,0,c
 53004  016C6A  D00F               	goto	i2l9676
 53005  016C6C  5039               	movf	i2___ftadd@exp1,w,c
 53006  016C6E  0800               	sublw	0
 53007  016C70  2438               	addwf	i2___ftadd@exp2,w,c
 53008  016C72  6E34               	movwf	??i2___ftadd& (0+255),c
 53009  016C74  0E19               	movlw	25
 53010  016C76  5C34               	subwf	??i2___ftadd,w,c
 53011  016C78  A0D8               	btfss	status,0,c
 53012  016C7A  D007               	goto	i2l9676
 53013  016C7C                     i2l2525:
 53014  016C7C  C031  F02E         	movff	i2___ftadd@f2,?i2___ftadd
 53015  016C80  C032  F02F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 53016  016C84  C033  F030         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 53017  016C88  0012               	return	
 53018  016C8A                     i2l9676:
 53019  016C8A  5038               	movf	i2___ftadd@exp2,w,c
 53020  016C8C  B4D8               	btfsc	status,2,c
 53021  016C8E  D00C               	goto	i2l2529
 53022  016C90  5039               	movf	i2___ftadd@exp1,w,c
 53023  016C92  5C38               	subwf	i2___ftadd@exp2,w,c
 53024  016C94  B0D8               	btfsc	status,0,c
 53025  016C96  D00F               	goto	i2l9682
 53026  016C98  5038               	movf	i2___ftadd@exp2,w,c
 53027  016C9A  0800               	sublw	0
 53028  016C9C  2439               	addwf	i2___ftadd@exp1,w,c
 53029  016C9E  6E34               	movwf	??i2___ftadd& (0+255),c
 53030  016CA0  0E19               	movlw	25
 53031  016CA2  5C34               	subwf	??i2___ftadd,w,c
 53032  016CA4  A0D8               	btfss	status,0,c
 53033  016CA6  D007               	goto	i2l9682
 53034  016CA8                     i2l2529:
 53035  016CA8  C02E  F02E         	movff	i2___ftadd@f1,?i2___ftadd
 53036  016CAC  C02F  F02F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 53037  016CB0  C030  F030         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 53038  016CB4  0012               	return	
 53039  016CB6                     i2l9682:
 53040  016CB6  0E06               	movlw	6
 53041  016CB8  6E37               	movwf	i2___ftadd@sign,c
 53042  016CBA  BE30               	btfsc	i2___ftadd@f1+2,7,c
 53043  016CBC  8E37               	bsf	i2___ftadd@sign,7,c
 53044  016CBE  BE33               	btfsc	i2___ftadd@f2+2,7,c
 53045  016CC0  8C37               	bsf	i2___ftadd@sign,6,c
 53046  016CC2  8E2F               	bsf	i2___ftadd@f1+1,7,c
 53047  016CC4  0EFF               	movlw	255
 53048  016CC6  162E               	andwf	i2___ftadd@f1,f,c
 53049  016CC8  0EFF               	movlw	255
 53050  016CCA  162F               	andwf	i2___ftadd@f1+1,f,c
 53051  016CCC  0E00               	movlw	0
 53052  016CCE  1630               	andwf	i2___ftadd@f1+2,f,c
 53053  016CD0  8E32               	bsf	i2___ftadd@f2+1,7,c
 53054  016CD2  0EFF               	movlw	255
 53055  016CD4  1631               	andwf	i2___ftadd@f2,f,c
 53056  016CD6  0EFF               	movlw	255
 53057  016CD8  1632               	andwf	i2___ftadd@f2+1,f,c
 53058  016CDA  0E00               	movlw	0
 53059  016CDC  1633               	andwf	i2___ftadd@f2+2,f,c
 53060  016CDE  5038               	movf	i2___ftadd@exp2,w,c
 53061  016CE0  5C39               	subwf	i2___ftadd@exp1,w,c
 53062  016CE2  B0D8               	btfsc	status,0,c
 53063  016CE4  D01A               	goto	i2l9708
 53064  016CE6                     i2l9698:
 53065  016CE6  90D8               	bcf	status,0,c
 53066  016CE8  3631               	rlcf	i2___ftadd@f2,f,c
 53067  016CEA  3632               	rlcf	i2___ftadd@f2+1,f,c
 53068  016CEC  3633               	rlcf	i2___ftadd@f2+2,f,c
 53069  016CEE  0638               	decf	i2___ftadd@exp2,f,c
 53070  016CF0  5038               	movf	i2___ftadd@exp2,w,c
 53071  016CF2  1839               	xorwf	i2___ftadd@exp1,w,c
 53072  016CF4  B4D8               	btfsc	status,2,c
 53073  016CF6  D00D               	goto	i2l9706
 53074  016CF8  0637               	decf	i2___ftadd@sign,f,c
 53075  016CFA  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 53076  016CFE  0E07               	movlw	7
 53077  016D00  1634               	andwf	??i2___ftadd,f,c
 53078  016D02  B4D8               	btfsc	status,2,c
 53079  016D04  D006               	goto	i2l9706
 53080  016D06  D7EF               	goto	i2l9698
 53081  016D08                     i2l9704:
 53082  016D08  90D8               	bcf	status,0,c
 53083  016D0A  3230               	rrcf	i2___ftadd@f1+2,f,c
 53084  016D0C  322F               	rrcf	i2___ftadd@f1+1,f,c
 53085  016D0E  322E               	rrcf	i2___ftadd@f1,f,c
 53086  016D10  2A39               	incf	i2___ftadd@exp1,f,c
 53087  016D12                     i2l9706:
 53088  016D12  5038               	movf	i2___ftadd@exp2,w,c
 53089  016D14  6239               	cpfseq	i2___ftadd@exp1,c
 53090  016D16  D7F8               	goto	i2l9704
 53091  016D18  D01D               	goto	i2l2540
 53092  016D1A                     i2l9708:
 53093  016D1A  5039               	movf	i2___ftadd@exp1,w,c
 53094  016D1C  5C38               	subwf	i2___ftadd@exp2,w,c
 53095  016D1E  B0D8               	btfsc	status,0,c
 53096  016D20  D019               	goto	i2l2540
 53097  016D22                     i2l9710:
 53098  016D22  90D8               	bcf	status,0,c
 53099  016D24  362E               	rlcf	i2___ftadd@f1,f,c
 53100  016D26  362F               	rlcf	i2___ftadd@f1+1,f,c
 53101  016D28  3630               	rlcf	i2___ftadd@f1+2,f,c
 53102  016D2A  0639               	decf	i2___ftadd@exp1,f,c
 53103  016D2C  5038               	movf	i2___ftadd@exp2,w,c
 53104  016D2E  1839               	xorwf	i2___ftadd@exp1,w,c
 53105  016D30  B4D8               	btfsc	status,2,c
 53106  016D32  D00D               	goto	i2l9718
 53107  016D34  0637               	decf	i2___ftadd@sign,f,c
 53108  016D36  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 53109  016D3A  0E07               	movlw	7
 53110  016D3C  1634               	andwf	??i2___ftadd,f,c
 53111  016D3E  B4D8               	btfsc	status,2,c
 53112  016D40  D006               	goto	i2l9718
 53113  016D42  D7EF               	goto	i2l9710
 53114  016D44                     i2l9716:
 53115  016D44  90D8               	bcf	status,0,c
 53116  016D46  3233               	rrcf	i2___ftadd@f2+2,f,c
 53117  016D48  3232               	rrcf	i2___ftadd@f2+1,f,c
 53118  016D4A  3231               	rrcf	i2___ftadd@f2,f,c
 53119  016D4C  2A38               	incf	i2___ftadd@exp2,f,c
 53120  016D4E                     i2l9718:
 53121  016D4E  5038               	movf	i2___ftadd@exp2,w,c
 53122  016D50  6239               	cpfseq	i2___ftadd@exp1,c
 53123  016D52  D7F8               	goto	i2l9716
 53124  016D54                     i2l2540:
 53125  016D54  AE37               	btfss	i2___ftadd@sign,7,c
 53126  016D56  D00C               	goto	i2l2549
 53127  016D58  0EFF               	movlw	255
 53128  016D5A  1A2E               	xorwf	i2___ftadd@f1,f,c
 53129  016D5C  0EFF               	movlw	255
 53130  016D5E  1A2F               	xorwf	i2___ftadd@f1+1,f,c
 53131  016D60  0EFF               	movlw	255
 53132  016D62  1A30               	xorwf	i2___ftadd@f1+2,f,c
 53133  016D64  0E01               	movlw	1
 53134  016D66  262E               	addwf	i2___ftadd@f1,f,c
 53135  016D68  0E00               	movlw	0
 53136  016D6A  222F               	addwfc	i2___ftadd@f1+1,f,c
 53137  016D6C  0E00               	movlw	0
 53138  016D6E  2230               	addwfc	i2___ftadd@f1+2,f,c
 53139  016D70                     i2l2549:
 53140  016D70  AC37               	btfss	i2___ftadd@sign,6,c
 53141  016D72  D00C               	goto	i2l9724
 53142  016D74  0EFF               	movlw	255
 53143  016D76  1A31               	xorwf	i2___ftadd@f2,f,c
 53144  016D78  0EFF               	movlw	255
 53145  016D7A  1A32               	xorwf	i2___ftadd@f2+1,f,c
 53146  016D7C  0EFF               	movlw	255
 53147  016D7E  1A33               	xorwf	i2___ftadd@f2+2,f,c
 53148  016D80  0E01               	movlw	1
 53149  016D82  2631               	addwf	i2___ftadd@f2,f,c
 53150  016D84  0E00               	movlw	0
 53151  016D86  2232               	addwfc	i2___ftadd@f2+1,f,c
 53152  016D88  0E00               	movlw	0
 53153  016D8A  2233               	addwfc	i2___ftadd@f2+2,f,c
 53154  016D8C                     i2l9724:
 53155  016D8C  0E00               	movlw	0
 53156  016D8E  6E37               	movwf	i2___ftadd@sign,c
 53157  016D90  502E               	movf	i2___ftadd@f1,w,c
 53158  016D92  2631               	addwf	i2___ftadd@f2,f,c
 53159  016D94  502F               	movf	i2___ftadd@f1+1,w,c
 53160  016D96  2232               	addwfc	i2___ftadd@f2+1,f,c
 53161  016D98  5030               	movf	i2___ftadd@f1+2,w,c
 53162  016D9A  2233               	addwfc	i2___ftadd@f2+2,f,c
 53163  016D9C  AE33               	btfss	i2___ftadd@f2+2,7,c
 53164  016D9E  D00E               	goto	i2l9734
 53165  016DA0  0EFF               	movlw	255
 53166  016DA2  1A31               	xorwf	i2___ftadd@f2,f,c
 53167  016DA4  0EFF               	movlw	255
 53168  016DA6  1A32               	xorwf	i2___ftadd@f2+1,f,c
 53169  016DA8  0EFF               	movlw	255
 53170  016DAA  1A33               	xorwf	i2___ftadd@f2+2,f,c
 53171  016DAC  0E01               	movlw	1
 53172  016DAE  2631               	addwf	i2___ftadd@f2,f,c
 53173  016DB0  0E00               	movlw	0
 53174  016DB2  2232               	addwfc	i2___ftadd@f2+1,f,c
 53175  016DB4  0E00               	movlw	0
 53176  016DB6  2233               	addwfc	i2___ftadd@f2+2,f,c
 53177  016DB8  0E01               	movlw	1
 53178  016DBA  6E37               	movwf	i2___ftadd@sign,c
 53179  016DBC                     i2l9734:
 53180  016DBC  C031  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 53181  016DC0  C032  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 53182  016DC4  C033  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 53183  016DC8  C039  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 53184  016DCC  C037  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 53185  016DD0  EC91  F0D0         	call	i2___ftpack	;wreg free
 53186  016DD4  C001  F02E         	movff	?i2___ftpack,?i2___ftadd
 53187  016DD8  C002  F02F         	movff	?i2___ftpack+1,?i2___ftadd+1
 53188  016DDC  C003  F030         	movff	?i2___ftpack+2,?i2___ftadd+2
 53189  016DE0  0012               	return	
 53190  016DE2                     __end_ofi2___ftadd:
 53191                           	opt stack 0
 53192                           pclatu	equ	0xFFB
 53193                           pclath	equ	0xFFA
 53194                           tblptru	equ	0xFF8
 53195                           tblptrh	equ	0xFF7
 53196                           tblptrl	equ	0xFF6
 53197                           tablat	equ	0xFF5
 53198                           prodh	equ	0xFF4
 53199                           prodl	equ	0xFF3
 53200                           intcon	equ	0xFF2
 53201                           intcon2	equ	0xFF1
 53202                           intcon3	equ	0xFF0
 53203                           indf0	equ	0xFEF
 53204                           postinc0	equ	0xFEE
 53205                           fsr0h	equ	0xFEA
 53206                           fsr0l	equ	0xFE9
 53207                           wreg	equ	0xFE8
 53208                           indf1	equ	0xFE7
 53209                           postinc1	equ	0xFE6
 53210                           postdec1	equ	0xFE5
 53211                           fsr1h	equ	0xFE2
 53212                           fsr1l	equ	0xFE1
 53213                           indf2	equ	0xFDF
 53214                           postinc2	equ	0xFDE
 53215                           postdec2	equ	0xFDD
 53216                           fsr2h	equ	0xFDA
 53217                           fsr2l	equ	0xFD9
 53218                           status	equ	0xFD8
 53219                           
 53220 ;; *************** function i2___ftpack *****************
 53221 ;; Defined at:
 53222 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 53223 ;; Parameters:    Size  Location     Type
 53224 ;;  arg             3    0[COMRAM] unsigned um
 53225 ;;  exp             1    3[COMRAM] unsigned char 
 53226 ;;  sign            1    4[COMRAM] unsigned char 
 53227 ;; Auto vars:     Size  Location     Type
 53228 ;;		None
 53229 ;; Return value:  Size  Location     Type
 53230 ;;                  3    0[COMRAM] float 
 53231 ;; Registers used:
 53232 ;;		wreg, status,2, status,0
 53233 ;; Tracked objects:
 53234 ;;		On entry : 0/0
 53235 ;;		On exit  : 0/0
 53236 ;;		Unchanged: 0/0
 53237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53238 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53240 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53242 ;;Total ram usage:        8 bytes
 53243 ;; Hardware stack levels used:    1
 53244 ;; This function calls:
 53245 ;;		Nothing
 53246 ;; This function is called by:
 53247 ;;		i2___awtoft
 53248 ;;		i2___ftadd
 53249 ;;		i2___ftdiv
 53250 ;;		i2___ftmul
 53251 ;;		i2___lltoft
 53252 ;;		i2___lwtoft
 53253 ;; This function uses a non-reentrant model
 53254 ;;
 53255                           
 53256                           	psect	text164
 53257  01A122                     __ptext164:
 53258                           	opt stack 0
 53259  01A122                     i2___ftpack:
 53260                           	opt stack 13
 53261                           
 53262                           ;incstack = 0
 53263  01A122  5004               	movf	i2___ftpack@exp,w,c
 53264  01A124  B4D8               	btfsc	status,2,c
 53265  01A126  D005               	goto	i2l9562
 53266  01A128  5001               	movf	i2___ftpack@arg,w,c
 53267  01A12A  1002               	iorwf	i2___ftpack@arg+1,w,c
 53268  01A12C  1003               	iorwf	i2___ftpack@arg+2,w,c
 53269  01A12E  A4D8               	btfss	status,2,c
 53270  01A130  D00C               	goto	i2l9568
 53271  01A132                     i2l9562:
 53272  01A132  0E00               	movlw	0
 53273  01A134  6E01               	movwf	?i2___ftpack,c
 53274  01A136  0E00               	movlw	0
 53275  01A138  6E02               	movwf	?i2___ftpack+1,c
 53276  01A13A  0E00               	movlw	0
 53277  01A13C  6E03               	movwf	?i2___ftpack+2,c
 53278  01A13E  0012               	return	
 53279  01A140                     i2l9566:
 53280  01A140  2A04               	incf	i2___ftpack@exp,f,c
 53281  01A142  90D8               	bcf	status,0,c
 53282  01A144  3203               	rrcf	i2___ftpack@arg+2,f,c
 53283  01A146  3202               	rrcf	i2___ftpack@arg+1,f,c
 53284  01A148  3201               	rrcf	i2___ftpack@arg,f,c
 53285  01A14A                     i2l9568:
 53286  01A14A  0E00               	movlw	0
 53287  01A14C  1401               	andwf	i2___ftpack@arg,w,c
 53288  01A14E  6E06               	movwf	??i2___ftpack& (0+255),c
 53289  01A150  0E00               	movlw	0
 53290  01A152  1402               	andwf	i2___ftpack@arg+1,w,c
 53291  01A154  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 53292  01A156  0EFE               	movlw	254
 53293  01A158  1403               	andwf	i2___ftpack@arg+2,w,c
 53294  01A15A  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 53295  01A15C  5006               	movf	??i2___ftpack,w,c
 53296  01A15E  1007               	iorwf	??i2___ftpack+1,w,c
 53297  01A160  1008               	iorwf	??i2___ftpack+2,w,c
 53298  01A162  B4D8               	btfsc	status,2,c
 53299  01A164  D00C               	goto	i2l9574
 53300  01A166  D7EC               	goto	i2l9566
 53301  01A168                     i2l9570:
 53302  01A168  2A04               	incf	i2___ftpack@exp,f,c
 53303  01A16A  0E01               	movlw	1
 53304  01A16C  2601               	addwf	i2___ftpack@arg,f,c
 53305  01A16E  0E00               	movlw	0
 53306  01A170  2202               	addwfc	i2___ftpack@arg+1,f,c
 53307  01A172  0E00               	movlw	0
 53308  01A174  2203               	addwfc	i2___ftpack@arg+2,f,c
 53309  01A176  90D8               	bcf	status,0,c
 53310  01A178  3203               	rrcf	i2___ftpack@arg+2,f,c
 53311  01A17A  3202               	rrcf	i2___ftpack@arg+1,f,c
 53312  01A17C  3201               	rrcf	i2___ftpack@arg,f,c
 53313  01A17E                     i2l9574:
 53314  01A17E  0E00               	movlw	0
 53315  01A180  1401               	andwf	i2___ftpack@arg,w,c
 53316  01A182  6E06               	movwf	??i2___ftpack& (0+255),c
 53317  01A184  0E00               	movlw	0
 53318  01A186  1402               	andwf	i2___ftpack@arg+1,w,c
 53319  01A188  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 53320  01A18A  0EFF               	movlw	255
 53321  01A18C  1403               	andwf	i2___ftpack@arg+2,w,c
 53322  01A18E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 53323  01A190  5006               	movf	??i2___ftpack,w,c
 53324  01A192  1007               	iorwf	??i2___ftpack+1,w,c
 53325  01A194  1008               	iorwf	??i2___ftpack+2,w,c
 53326  01A196  B4D8               	btfsc	status,2,c
 53327  01A198  D006               	goto	i2l9578
 53328  01A19A  D7E6               	goto	i2l9570
 53329  01A19C                     i2l9576:
 53330  01A19C  0604               	decf	i2___ftpack@exp,f,c
 53331  01A19E  90D8               	bcf	status,0,c
 53332  01A1A0  3601               	rlcf	i2___ftpack@arg,f,c
 53333  01A1A2  3602               	rlcf	i2___ftpack@arg+1,f,c
 53334  01A1A4  3603               	rlcf	i2___ftpack@arg+2,f,c
 53335  01A1A6                     i2l9578:
 53336  01A1A6  AE02               	btfss	i2___ftpack@arg+1,7,c
 53337  01A1A8  D7F9               	goto	i2l9576
 53338  01A1AA  A004               	btfss	i2___ftpack@exp,0,c
 53339  01A1AC  9E02               	bcf	i2___ftpack@arg+1,7,c
 53340  01A1AE  90D8               	bcf	status,0,c
 53341  01A1B0  3204               	rrcf	i2___ftpack@exp,f,c
 53342  01A1B2  5004               	movf	i2___ftpack@exp,w,c
 53343  01A1B4  1203               	iorwf	i2___ftpack@arg+2,f,c
 53344  01A1B6  5005               	movf	i2___ftpack@sign,w,c
 53345  01A1B8  A4D8               	btfss	status,2,c
 53346  01A1BA  8E03               	bsf	i2___ftpack@arg+2,7,c
 53347  01A1BC  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 53348  01A1C0  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 53349  01A1C4  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 53350  01A1C8  0012               	return	
 53351  01A1CA                     __end_ofi2___ftpack:
 53352                           	opt stack 0
 53353                           pclatu	equ	0xFFB
 53354                           pclath	equ	0xFFA
 53355                           tblptru	equ	0xFF8
 53356                           tblptrh	equ	0xFF7
 53357                           tblptrl	equ	0xFF6
 53358                           tablat	equ	0xFF5
 53359                           prodh	equ	0xFF4
 53360                           prodl	equ	0xFF3
 53361                           intcon	equ	0xFF2
 53362                           intcon2	equ	0xFF1
 53363                           intcon3	equ	0xFF0
 53364                           indf0	equ	0xFEF
 53365                           postinc0	equ	0xFEE
 53366                           fsr0h	equ	0xFEA
 53367                           fsr0l	equ	0xFE9
 53368                           wreg	equ	0xFE8
 53369                           indf1	equ	0xFE7
 53370                           postinc1	equ	0xFE6
 53371                           postdec1	equ	0xFE5
 53372                           fsr1h	equ	0xFE2
 53373                           fsr1l	equ	0xFE1
 53374                           indf2	equ	0xFDF
 53375                           postinc2	equ	0xFDE
 53376                           postdec2	equ	0xFDD
 53377                           fsr2h	equ	0xFDA
 53378                           fsr2l	equ	0xFD9
 53379                           status	equ	0xFD8
 53380                           
 53381 ;; *************** function i2_RefreshLine1 *****************
 53382 ;; Defined at:
 53383 ;;		line 7 in file "LCD.c"
 53384 ;; Parameters:    Size  Location     Type
 53385 ;;		None
 53386 ;; Auto vars:     Size  Location     Type
 53387 ;;		None
 53388 ;; Return value:  Size  Location     Type
 53389 ;;		None               void
 53390 ;; Registers used:
 53391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 53392 ;; Tracked objects:
 53393 ;;		On entry : 0/0
 53394 ;;		On exit  : 0/0
 53395 ;;		Unchanged: 0/0
 53396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53401 ;;Total ram usage:        0 bytes
 53402 ;; Hardware stack levels used:    1
 53403 ;; Hardware stack levels required when called:    4
 53404 ;; This function calls:
 53405 ;;		i2_RefreshLine1Ex
 53406 ;; This function is called by:
 53407 ;;		i2_SaveToFlash
 53408 ;;		i2_UpdateMasterVolume
 53409 ;; This function uses a non-reentrant model
 53410 ;;
 53411                           
 53412                           	psect	text165
 53413  01BA20                     __ptext165:
 53414                           	opt stack 0
 53415  01BA20                     i2_RefreshLine1:
 53416                           	opt stack 15
 53417                           
 53418                           ;LCD.c: 9: RefreshLine1Ex(&dispbuf1);
 53419                           
 53420                           ;incstack = 0
 53421  01BA20  0102               	movlb	2	; () banked
 53422  01BA22  0E02               	movlw	high _dispbuf1
 53423  01BA24  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 53424  01BA26  0102               	movlb	2	; () banked
 53425  01BA28  0E8B               	movlw	low _dispbuf1
 53426  01BA2A  6E04               	movwf	i2RefreshLine1Ex@line,c
 53427  01BA2C  ECF4  F0DC         	call	i2_RefreshLine1Ex	;wreg free
 53428  01BA30  0012               	return	
 53429  01BA32                     __end_ofi2_RefreshLine1:
 53430                           	opt stack 0
 53431                           pclatu	equ	0xFFB
 53432                           pclath	equ	0xFFA
 53433                           tblptru	equ	0xFF8
 53434                           tblptrh	equ	0xFF7
 53435                           tblptrl	equ	0xFF6
 53436                           tablat	equ	0xFF5
 53437                           prodh	equ	0xFF4
 53438                           prodl	equ	0xFF3
 53439                           intcon	equ	0xFF2
 53440                           intcon2	equ	0xFF1
 53441                           intcon3	equ	0xFF0
 53442                           indf0	equ	0xFEF
 53443                           postinc0	equ	0xFEE
 53444                           fsr0h	equ	0xFEA
 53445                           fsr0l	equ	0xFE9
 53446                           wreg	equ	0xFE8
 53447                           indf1	equ	0xFE7
 53448                           postinc1	equ	0xFE6
 53449                           postdec1	equ	0xFE5
 53450                           fsr1h	equ	0xFE2
 53451                           fsr1l	equ	0xFE1
 53452                           indf2	equ	0xFDF
 53453                           postinc2	equ	0xFDE
 53454                           postdec2	equ	0xFDD
 53455                           fsr2h	equ	0xFDA
 53456                           fsr2l	equ	0xFD9
 53457                           status	equ	0xFD8
 53458                           
 53459 ;; *************** function i2_RefreshLine1Ex *****************
 53460 ;; Defined at:
 53461 ;;		line 18 in file "LCD.c"
 53462 ;; Parameters:    Size  Location     Type
 53463 ;;  line            2    3[COMRAM] PTR const unsigned char 
 53464 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
 53465 ;;		 -> STR_2(17), dispbuf1(17), 
 53466 ;; Auto vars:     Size  Location     Type
 53467 ;;		None
 53468 ;; Return value:  Size  Location     Type
 53469 ;;		None               void
 53470 ;; Registers used:
 53471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 53472 ;; Tracked objects:
 53473 ;;		On entry : 0/0
 53474 ;;		On exit  : 0/0
 53475 ;;		Unchanged: 0/0
 53476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53481 ;;Total ram usage:        2 bytes
 53482 ;; Hardware stack levels used:    1
 53483 ;; Hardware stack levels required when called:    3
 53484 ;; This function calls:
 53485 ;;		i2_PutsSLCD
 53486 ;;		i2_SLCDSetDDRamAddr
 53487 ;; This function is called by:
 53488 ;;		i2_RefreshLine1
 53489 ;;		i2_SaveToFlash
 53490 ;; This function uses a non-reentrant model
 53491 ;;
 53492                           
 53493                           	psect	text166
 53494  01B9E8                     __ptext166:
 53495                           	opt stack 0
 53496  01B9E8                     i2_RefreshLine1Ex:
 53497                           	opt stack 16
 53498                           
 53499                           ;LCD.c: 20: SLCDSetDDRamAddr(0x00);
 53500                           
 53501                           ;incstack = 0
 53502  01B9E8  0E00               	movlw	0
 53503  01B9EA  ECC1  F0DC         	call	i2_SLCDSetDDRamAddr
 53504                           
 53505                           ;LCD.c: 21: PutsSLCD(line);
 53506  01B9EE  C005  F003         	movff	i2RefreshLine1Ex@line+1,i2PutsSLCD@buffer+1
 53507  01B9F2  C004  F002         	movff	i2RefreshLine1Ex@line,i2PutsSLCD@buffer
 53508  01B9F6  EC12  F0D7         	call	i2_PutsSLCD	;wreg free
 53509  01B9FA  0012               	return	
 53510  01B9FC                     __end_ofi2_RefreshLine1Ex:
 53511                           	opt stack 0
 53512                           pclatu	equ	0xFFB
 53513                           pclath	equ	0xFFA
 53514                           tblptru	equ	0xFF8
 53515                           tblptrh	equ	0xFF7
 53516                           tblptrl	equ	0xFF6
 53517                           tablat	equ	0xFF5
 53518                           prodh	equ	0xFF4
 53519                           prodl	equ	0xFF3
 53520                           intcon	equ	0xFF2
 53521                           intcon2	equ	0xFF1
 53522                           intcon3	equ	0xFF0
 53523                           indf0	equ	0xFEF
 53524                           postinc0	equ	0xFEE
 53525                           fsr0h	equ	0xFEA
 53526                           fsr0l	equ	0xFE9
 53527                           wreg	equ	0xFE8
 53528                           indf1	equ	0xFE7
 53529                           postinc1	equ	0xFE6
 53530                           postdec1	equ	0xFE5
 53531                           fsr1h	equ	0xFE2
 53532                           fsr1l	equ	0xFE1
 53533                           indf2	equ	0xFDF
 53534                           postinc2	equ	0xFDE
 53535                           postdec2	equ	0xFDD
 53536                           fsr2h	equ	0xFDA
 53537                           fsr2l	equ	0xFD9
 53538                           status	equ	0xFD8
 53539                           
 53540 ;; *************** function i2_SLCDSetDDRamAddr *****************
 53541 ;; Defined at:
 53542 ;;		line 13 in file "SLCD/setddram.c"
 53543 ;; Parameters:    Size  Location     Type
 53544 ;;  DDaddr          1    wreg     unsigned char 
 53545 ;; Auto vars:     Size  Location     Type
 53546 ;;  DDaddr          1    1[COMRAM] unsigned char 
 53547 ;; Return value:  Size  Location     Type
 53548 ;;		None               void
 53549 ;; Registers used:
 53550 ;;		wreg, status,2, status,0, cstack
 53551 ;; Tracked objects:
 53552 ;;		On entry : 0/0
 53553 ;;		On exit  : 0/0
 53554 ;;		Unchanged: 0/0
 53555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53560 ;;Total ram usage:        1 bytes
 53561 ;; Hardware stack levels used:    1
 53562 ;; Hardware stack levels required when called:    2
 53563 ;; This function calls:
 53564 ;;		i2_BusySLCD
 53565 ;;		i2_WriteCmdSLCD
 53566 ;; This function is called by:
 53567 ;;		i2_RefreshLine1Ex
 53568 ;;		i2_RefreshLine2Ex
 53569 ;; This function uses a non-reentrant model
 53570 ;;
 53571                           
 53572                           	psect	text167
 53573  01B982                     __ptext167:
 53574                           	opt stack 0
 53575  01B982                     i2_SLCDSetDDRamAddr:
 53576                           	opt stack 16
 53577                           
 53578                           ;incstack = 0
 53579                           ;i2SLCDSetDDRamAddr@DDaddr stored from wreg
 53580  01B982  6E02               	movwf	i2SLCDSetDDRamAddr@DDaddr,c
 53581  01B984                     i2l9986:
 53582  01B984  EC11  F0DC         	call	i2_BusySLCD	;wreg free
 53583  01B988  0900               	iorlw	0
 53584  01B98A  A4D8               	btfss	status,2,c
 53585  01B98C  D7FB               	goto	i2l9986
 53586                           
 53587                           ;setddram.c: 16: WriteCmdSLCD(DDaddr | 0b10000000);
 53588  01B98E  5002               	movf	i2SLCDSetDDRamAddr@DDaddr,w,c
 53589  01B990  0980               	iorlw	128
 53590  01B992  EC00  F0DC         	call	i2_WriteCmdSLCD
 53591  01B996  0012               	return	
 53592  01B998                     __end_ofi2_SLCDSetDDRamAddr:
 53593                           	opt stack 0
 53594                           pclatu	equ	0xFFB
 53595                           pclath	equ	0xFFA
 53596                           tblptru	equ	0xFF8
 53597                           tblptrh	equ	0xFF7
 53598                           tblptrl	equ	0xFF6
 53599                           tablat	equ	0xFF5
 53600                           prodh	equ	0xFF4
 53601                           prodl	equ	0xFF3
 53602                           intcon	equ	0xFF2
 53603                           intcon2	equ	0xFF1
 53604                           intcon3	equ	0xFF0
 53605                           indf0	equ	0xFEF
 53606                           postinc0	equ	0xFEE
 53607                           fsr0h	equ	0xFEA
 53608                           fsr0l	equ	0xFE9
 53609                           wreg	equ	0xFE8
 53610                           indf1	equ	0xFE7
 53611                           postinc1	equ	0xFE6
 53612                           postdec1	equ	0xFE5
 53613                           fsr1h	equ	0xFE2
 53614                           fsr1l	equ	0xFE1
 53615                           indf2	equ	0xFDF
 53616                           postinc2	equ	0xFDE
 53617                           postdec2	equ	0xFDD
 53618                           fsr2h	equ	0xFDA
 53619                           fsr2l	equ	0xFD9
 53620                           status	equ	0xFD8
 53621                           
 53622 ;; *************** function i2_WriteCmdSLCD *****************
 53623 ;; Defined at:
 53624 ;;		line 13 in file "SLCD/wcmdslcd.c"
 53625 ;; Parameters:    Size  Location     Type
 53626 ;;  cmd             1    wreg     unsigned char 
 53627 ;; Auto vars:     Size  Location     Type
 53628 ;;  cmd             1    0[COMRAM] unsigned char 
 53629 ;; Return value:  Size  Location     Type
 53630 ;;		None               void
 53631 ;; Registers used:
 53632 ;;		wreg, status,2, cstack
 53633 ;; Tracked objects:
 53634 ;;		On entry : 0/0
 53635 ;;		On exit  : 0/0
 53636 ;;		Unchanged: 0/0
 53637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53642 ;;Total ram usage:        1 bytes
 53643 ;; Hardware stack levels used:    1
 53644 ;; Hardware stack levels required when called:    1
 53645 ;; This function calls:
 53646 ;;		i2_DelayFor18TCY
 53647 ;; This function is called by:
 53648 ;;		i2_SLCDSetDDRamAddr
 53649 ;; This function uses a non-reentrant model
 53650 ;;
 53651                           
 53652                           	psect	text168
 53653  01B800                     __ptext168:
 53654                           	opt stack 0
 53655  01B800                     i2_WriteCmdSLCD:
 53656                           	opt stack 16
 53657                           
 53658                           ;incstack = 0
 53659                           ;i2WriteCmdSLCD@cmd stored from wreg
 53660  01B800  6E01               	movwf	i2WriteCmdSLCD@cmd,c
 53661                           
 53662                           ;wcmdslcd.c: 16: TRISC = 0;
 53663  01B802  0E00               	movlw	0
 53664  01B804  6E94               	movwf	3988,c	;volatile
 53665                           
 53666                           ;wcmdslcd.c: 17: LATC = cmd;
 53667  01B806  C001  FF8B         	movff	i2WriteCmdSLCD@cmd,3979	;volatile
 53668                           
 53669                           ;wcmdslcd.c: 19: LATAbits.LATA4 = 0;
 53670  01B80A  9889               	bcf	3977,4,c	;volatile
 53671                           
 53672                           ;wcmdslcd.c: 20: LATAbits.LATA3 = 0;
 53673  01B80C  9689               	bcf	3977,3,c	;volatile
 53674                           
 53675                           ;wcmdslcd.c: 21: DelayFor18TCY();
 53676  01B80E  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 53677                           
 53678                           ;wcmdslcd.c: 22: LATAbits.LATA5 = 1;
 53679  01B812  8A89               	bsf	3977,5,c	;volatile
 53680                           
 53681                           ;wcmdslcd.c: 23: DelayFor18TCY();
 53682  01B814  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 53683                           
 53684                           ;wcmdslcd.c: 24: LATAbits.LATA5 = 0;
 53685  01B818  9A89               	bcf	3977,5,c	;volatile
 53686                           
 53687                           ;wcmdslcd.c: 25: DelayFor18TCY();
 53688  01B81A  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 53689                           
 53690                           ;wcmdslcd.c: 26: TRISC = 0xff;
 53691  01B81E  6894               	setf	3988,c	;volatile
 53692  01B820  0012               	return	
 53693  01B822                     __end_ofi2_WriteCmdSLCD:
 53694                           	opt stack 0
 53695                           pclatu	equ	0xFFB
 53696                           pclath	equ	0xFFA
 53697                           tblptru	equ	0xFF8
 53698                           tblptrh	equ	0xFF7
 53699                           tblptrl	equ	0xFF6
 53700                           tablat	equ	0xFF5
 53701                           prodh	equ	0xFF4
 53702                           prodl	equ	0xFF3
 53703                           intcon	equ	0xFF2
 53704                           intcon2	equ	0xFF1
 53705                           intcon3	equ	0xFF0
 53706                           indf0	equ	0xFEF
 53707                           postinc0	equ	0xFEE
 53708                           fsr0h	equ	0xFEA
 53709                           fsr0l	equ	0xFE9
 53710                           wreg	equ	0xFE8
 53711                           indf1	equ	0xFE7
 53712                           postinc1	equ	0xFE6
 53713                           postdec1	equ	0xFE5
 53714                           fsr1h	equ	0xFE2
 53715                           fsr1l	equ	0xFE1
 53716                           indf2	equ	0xFDF
 53717                           postinc2	equ	0xFDE
 53718                           postdec2	equ	0xFDD
 53719                           fsr2h	equ	0xFDA
 53720                           fsr2l	equ	0xFD9
 53721                           status	equ	0xFD8
 53722                           
 53723 ;; *************** function i2_PutsSLCD *****************
 53724 ;; Defined at:
 53725 ;;		line 16 in file "SLCD/putsslcd.c"
 53726 ;; Parameters:    Size  Location     Type
 53727 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
 53728 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 53729 ;;		 -> STR_9(17), STR_8(17), STR_6(17), STR_5(17), 
 53730 ;;		 -> STR_4(17), STR_3(17), STR_2(17), dispbuf2(17), 
 53731 ;;		 -> dispbuf1(17), 
 53732 ;; Auto vars:     Size  Location     Type
 53733 ;;		None
 53734 ;; Return value:  Size  Location     Type
 53735 ;;		None               void
 53736 ;; Registers used:
 53737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 53738 ;; Tracked objects:
 53739 ;;		On entry : 0/0
 53740 ;;		On exit  : 0/0
 53741 ;;		Unchanged: 0/0
 53742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53747 ;;Total ram usage:        2 bytes
 53748 ;; Hardware stack levels used:    1
 53749 ;; Hardware stack levels required when called:    2
 53750 ;; This function calls:
 53751 ;;		i2_BusySLCD
 53752 ;;		i2_WriteDataSLCD
 53753 ;; This function is called by:
 53754 ;;		i2_RefreshLine1Ex
 53755 ;;		i2_RefreshLine2Ex
 53756 ;; This function uses a non-reentrant model
 53757 ;;
 53758                           
 53759                           	psect	text169
 53760  01AE24                     __ptext169:
 53761                           	opt stack 0
 53762  01AE24                     i2_PutsSLCD:
 53763                           	opt stack 16
 53764                           
 53765                           ;putsslcd.c: 18: while(*buffer)
 53766                           
 53767                           ;incstack = 0
 53768  01AE24  D01A               	goto	i2l9998
 53769  01AE26                     i2l9992:
 53770  01AE26  EC11  F0DC         	call	i2_BusySLCD	;wreg free
 53771  01AE2A  0900               	iorlw	0
 53772  01AE2C  A4D8               	btfss	status,2,c
 53773  01AE2E  D7FB               	goto	i2l9992
 53774                           
 53775                           ;putsslcd.c: 21: WriteDataSLCD(*buffer);
 53776  01AE30  C002  FFF6         	movff	i2PutsSLCD@buffer,tblptrl
 53777  01AE34  C003  FFF7         	movff	i2PutsSLCD@buffer+1,tblptrh
 53778  01AE38  0E00               	movlw	low (__mediumconst shr (0+16))
 53779  01AE3A  6EF8               	movwf	tblptru,c
 53780  01AE3C  0E0F               	movlw	(high __ramtop+-1)
 53781  01AE3E  64F7               	cpfsgt	tblptrh,c
 53782  01AE40  D003               	bra	i2u1039_47
 53783  01AE42  0008               	tblrd		*
 53784  01AE44  50F5               	movf	tablat,w,c
 53785  01AE46  D005               	bra	i2u1039_40
 53786  01AE48                     i2u1039_47:
 53787  01AE48  CFF6 FFE9          	movff	tblptrl,fsr0l
 53788  01AE4C  CFF7 FFEA          	movff	tblptrh,fsr0h
 53789  01AE50  50EF               	movf	indf0,w,c
 53790  01AE52                     i2u1039_40:
 53791  01AE52  EC32  F0DC         	call	i2_WriteDataSLCD
 53792                           
 53793                           ;putsslcd.c: 22: buffer++;
 53794  01AE56  4A02               	infsnz	i2PutsSLCD@buffer,f,c
 53795  01AE58  2A03               	incf	i2PutsSLCD@buffer+1,f,c
 53796  01AE5A                     i2l9998:
 53797  01AE5A  C002  FFF6         	movff	i2PutsSLCD@buffer,tblptrl
 53798  01AE5E  C003  FFF7         	movff	i2PutsSLCD@buffer+1,tblptrh
 53799  01AE62  0E00               	movlw	low (__mediumconst shr (0+16))
 53800  01AE64  6EF8               	movwf	tblptru,c
 53801  01AE66  0E0F               	movlw	(high __ramtop+-1)
 53802  01AE68  64F7               	cpfsgt	tblptrh,c
 53803  01AE6A  D003               	bra	i2u1040_47
 53804  01AE6C  0008               	tblrd		*
 53805  01AE6E  50F5               	movf	tablat,w,c
 53806  01AE70  D005               	bra	i2u1040_40
 53807  01AE72                     i2u1040_47:
 53808  01AE72  CFF6 FFE9          	movff	tblptrl,fsr0l
 53809  01AE76  CFF7 FFEA          	movff	tblptrh,fsr0h
 53810  01AE7A  50EF               	movf	indf0,w,c
 53811  01AE7C                     i2u1040_40:
 53812  01AE7C  0900               	iorlw	0
 53813  01AE7E  B4D8               	btfsc	status,2,c
 53814                           
 53815                           ;putsslcd.c: 23: }
 53816                           ;putsslcd.c: 24: return;
 53817  01AE80  0012               	return	
 53818  01AE82  D7D1               	goto	i2l9992
 53819  01AE84                     __end_ofi2_PutsSLCD:
 53820                           	opt stack 0
 53821                           pclatu	equ	0xFFB
 53822                           pclath	equ	0xFFA
 53823                           tblptru	equ	0xFF8
 53824                           tblptrh	equ	0xFF7
 53825                           tblptrl	equ	0xFF6
 53826                           tablat	equ	0xFF5
 53827                           prodh	equ	0xFF4
 53828                           prodl	equ	0xFF3
 53829                           intcon	equ	0xFF2
 53830                           intcon2	equ	0xFF1
 53831                           intcon3	equ	0xFF0
 53832                           indf0	equ	0xFEF
 53833                           postinc0	equ	0xFEE
 53834                           fsr0h	equ	0xFEA
 53835                           fsr0l	equ	0xFE9
 53836                           wreg	equ	0xFE8
 53837                           indf1	equ	0xFE7
 53838                           postinc1	equ	0xFE6
 53839                           postdec1	equ	0xFE5
 53840                           fsr1h	equ	0xFE2
 53841                           fsr1l	equ	0xFE1
 53842                           indf2	equ	0xFDF
 53843                           postinc2	equ	0xFDE
 53844                           postdec2	equ	0xFDD
 53845                           fsr2h	equ	0xFDA
 53846                           fsr2l	equ	0xFD9
 53847                           status	equ	0xFD8
 53848                           
 53849 ;; *************** function i2_WriteDataSLCD *****************
 53850 ;; Defined at:
 53851 ;;		line 16 in file "SLCD/writdata.c"
 53852 ;; Parameters:    Size  Location     Type
 53853 ;;  data            1    wreg     unsigned char 
 53854 ;; Auto vars:     Size  Location     Type
 53855 ;;  data            1    0[COMRAM] unsigned char 
 53856 ;; Return value:  Size  Location     Type
 53857 ;;		None               void
 53858 ;; Registers used:
 53859 ;;		wreg, status,2, cstack
 53860 ;; Tracked objects:
 53861 ;;		On entry : 0/0
 53862 ;;		On exit  : 0/0
 53863 ;;		Unchanged: 0/0
 53864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53869 ;;Total ram usage:        1 bytes
 53870 ;; Hardware stack levels used:    1
 53871 ;; Hardware stack levels required when called:    1
 53872 ;; This function calls:
 53873 ;;		i2_DelayFor18TCY
 53874 ;; This function is called by:
 53875 ;;		i2_PutsSLCD
 53876 ;; This function uses a non-reentrant model
 53877 ;;
 53878                           
 53879                           	psect	text170
 53880  01B864                     __ptext170:
 53881                           	opt stack 0
 53882  01B864                     i2_WriteDataSLCD:
 53883                           	opt stack 16
 53884                           
 53885                           ;incstack = 0
 53886                           ;i2WriteDataSLCD@data stored from wreg
 53887  01B864  6E01               	movwf	i2WriteDataSLCD@data,c
 53888                           
 53889                           ;writdata.c: 19: TRISC = 0;
 53890  01B866  0E00               	movlw	0
 53891  01B868  6E94               	movwf	3988,c	;volatile
 53892                           
 53893                           ;writdata.c: 20: LATC = data;
 53894  01B86A  C001  FF8B         	movff	i2WriteDataSLCD@data,3979	;volatile
 53895                           
 53896                           ;writdata.c: 22: LATAbits.LATA3 = 1;
 53897  01B86E  8689               	bsf	3977,3,c	;volatile
 53898                           
 53899                           ;writdata.c: 23: LATAbits.LATA4 = 0;
 53900  01B870  9889               	bcf	3977,4,c	;volatile
 53901                           
 53902                           ;writdata.c: 24: DelayFor18TCY();
 53903  01B872  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 53904                           
 53905                           ;writdata.c: 25: LATAbits.LATA5 = 1;
 53906  01B876  8A89               	bsf	3977,5,c	;volatile
 53907                           
 53908                           ;writdata.c: 26: DelayFor18TCY();
 53909  01B878  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 53910                           
 53911                           ;writdata.c: 27: LATAbits.LATA5 = 0;
 53912  01B87C  9A89               	bcf	3977,5,c	;volatile
 53913                           
 53914                           ;writdata.c: 28: LATAbits.LATA3 = 0;
 53915  01B87E  9689               	bcf	3977,3,c	;volatile
 53916                           
 53917                           ;writdata.c: 29: TRISC = 0xff;
 53918  01B880  6894               	setf	3988,c	;volatile
 53919  01B882  0012               	return	
 53920  01B884                     __end_ofi2_WriteDataSLCD:
 53921                           	opt stack 0
 53922                           pclatu	equ	0xFFB
 53923                           pclath	equ	0xFFA
 53924                           tblptru	equ	0xFF8
 53925                           tblptrh	equ	0xFF7
 53926                           tblptrl	equ	0xFF6
 53927                           tablat	equ	0xFF5
 53928                           prodh	equ	0xFF4
 53929                           prodl	equ	0xFF3
 53930                           intcon	equ	0xFF2
 53931                           intcon2	equ	0xFF1
 53932                           intcon3	equ	0xFF0
 53933                           indf0	equ	0xFEF
 53934                           postinc0	equ	0xFEE
 53935                           fsr0h	equ	0xFEA
 53936                           fsr0l	equ	0xFE9
 53937                           wreg	equ	0xFE8
 53938                           indf1	equ	0xFE7
 53939                           postinc1	equ	0xFE6
 53940                           postdec1	equ	0xFE5
 53941                           fsr1h	equ	0xFE2
 53942                           fsr1l	equ	0xFE1
 53943                           indf2	equ	0xFDF
 53944                           postinc2	equ	0xFDE
 53945                           postdec2	equ	0xFDD
 53946                           fsr2h	equ	0xFDA
 53947                           fsr2l	equ	0xFD9
 53948                           status	equ	0xFD8
 53949                           
 53950 ;; *************** function i2_BusySLCD *****************
 53951 ;; Defined at:
 53952 ;;		line 11 in file "SLCD/busyslcd.c"
 53953 ;; Parameters:    Size  Location     Type
 53954 ;;		None
 53955 ;; Auto vars:     Size  Location     Type
 53956 ;;		None
 53957 ;; Return value:  Size  Location     Type
 53958 ;;                  1    wreg      unsigned char 
 53959 ;; Registers used:
 53960 ;;		wreg, cstack
 53961 ;; Tracked objects:
 53962 ;;		On entry : 0/0
 53963 ;;		On exit  : 0/0
 53964 ;;		Unchanged: 0/0
 53965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53970 ;;Total ram usage:        0 bytes
 53971 ;; Hardware stack levels used:    1
 53972 ;; Hardware stack levels required when called:    1
 53973 ;; This function calls:
 53974 ;;		i2_DelayFor18TCY
 53975 ;; This function is called by:
 53976 ;;		i2_SLCDSetDDRamAddr
 53977 ;;		i2_PutsSLCD
 53978 ;; This function uses a non-reentrant model
 53979 ;;
 53980                           
 53981                           	psect	text171
 53982  01B822                     __ptext171:
 53983                           	opt stack 0
 53984  01B822                     i2_BusySLCD:
 53985                           	opt stack 16
 53986                           
 53987                           ;busyslcd.c: 13: LATAbits.LATA4 = 1;
 53988                           
 53989                           ;incstack = 0
 53990  01B822  8889               	bsf	3977,4,c	;volatile
 53991                           
 53992                           ;busyslcd.c: 14: LATAbits.LATA3 = 0;
 53993  01B824  9689               	bcf	3977,3,c	;volatile
 53994                           
 53995                           ;busyslcd.c: 15: DelayFor18TCY();
 53996  01B826  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 53997                           
 53998                           ;busyslcd.c: 16: LATAbits.LATA5 = 1;
 53999  01B82A  8A89               	bsf	3977,5,c	;volatile
 54000                           
 54001                           ;busyslcd.c: 17: DelayFor18TCY();
 54002  01B82C  ECC4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54003                           
 54004                           ;busyslcd.c: 19: if(PORTC&0x80)
 54005  01B830  AE82               	btfss	3970,7,c	;volatile
 54006  01B832  D004               	goto	i2l59
 54007                           
 54008                           ;busyslcd.c: 20: {
 54009                           ;busyslcd.c: 21: LATAbits.LATA5 = 0;
 54010  01B834  9A89               	bcf	3977,5,c	;volatile
 54011                           
 54012                           ;busyslcd.c: 22: LATAbits.LATA4 = 0;
 54013  01B836  9889               	bcf	3977,4,c	;volatile
 54014                           
 54015                           ;busyslcd.c: 23: return 1;
 54016  01B838  0E01               	movlw	1
 54017  01B83A  0012               	return	
 54018  01B83C                     i2l59:
 54019                           
 54020                           ;busyslcd.c: 25: else
 54021                           ;busyslcd.c: 26: {
 54022                           ;busyslcd.c: 27: LATAbits.LATA5 = 0;
 54023  01B83C  9A89               	bcf	3977,5,c	;volatile
 54024                           
 54025                           ;busyslcd.c: 28: LATAbits.LATA4 = 0;
 54026  01B83E  9889               	bcf	3977,4,c	;volatile
 54027                           
 54028                           ;busyslcd.c: 29: return 0;
 54029  01B840  0E00               	movlw	0
 54030  01B842  0012               	return	
 54031  01B844                     __end_ofi2_BusySLCD:
 54032                           	opt stack 0
 54033                           pclatu	equ	0xFFB
 54034                           pclath	equ	0xFFA
 54035                           tblptru	equ	0xFF8
 54036                           tblptrh	equ	0xFF7
 54037                           tblptrl	equ	0xFF6
 54038                           tablat	equ	0xFF5
 54039                           prodh	equ	0xFF4
 54040                           prodl	equ	0xFF3
 54041                           intcon	equ	0xFF2
 54042                           intcon2	equ	0xFF1
 54043                           intcon3	equ	0xFF0
 54044                           indf0	equ	0xFEF
 54045                           postinc0	equ	0xFEE
 54046                           fsr0h	equ	0xFEA
 54047                           fsr0l	equ	0xFE9
 54048                           wreg	equ	0xFE8
 54049                           indf1	equ	0xFE7
 54050                           postinc1	equ	0xFE6
 54051                           postdec1	equ	0xFE5
 54052                           fsr1h	equ	0xFE2
 54053                           fsr1l	equ	0xFE1
 54054                           indf2	equ	0xFDF
 54055                           postinc2	equ	0xFDE
 54056                           postdec2	equ	0xFDD
 54057                           fsr2h	equ	0xFDA
 54058                           fsr2l	equ	0xFD9
 54059                           status	equ	0xFD8
 54060                           
 54061 ;; *************** function i2_DelayFor18TCY *****************
 54062 ;; Defined at:
 54063 ;;		line 16 in file "LCDDelay.c"
 54064 ;; Parameters:    Size  Location     Type
 54065 ;;		None
 54066 ;; Auto vars:     Size  Location     Type
 54067 ;;		None
 54068 ;; Return value:  Size  Location     Type
 54069 ;;		None               void
 54070 ;; Registers used:
 54071 ;;		None
 54072 ;; Tracked objects:
 54073 ;;		On entry : 0/0
 54074 ;;		On exit  : 0/0
 54075 ;;		Unchanged: 0/0
 54076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54081 ;;Total ram usage:        0 bytes
 54082 ;; Hardware stack levels used:    1
 54083 ;; This function calls:
 54084 ;;		Nothing
 54085 ;; This function is called by:
 54086 ;;		i2_WriteDataSLCD
 54087 ;;		i2_BusySLCD
 54088 ;;		i2_WriteCmdSLCD
 54089 ;; This function uses a non-reentrant model
 54090 ;;
 54091                           
 54092                           	psect	text172
 54093  01B588                     __ptext172:
 54094                           	opt stack 0
 54095  01B588                     i2_DelayFor18TCY:
 54096                           	opt stack 16
 54097                           
 54098                           ;LCDDelay.c: 18: __nop();
 54099                           
 54100                           ;incstack = 0
 54101  01B588  F000               	nop	
 54102                           
 54103                           ;LCDDelay.c: 19: __nop();
 54104  01B58A  F000               	nop	
 54105                           
 54106                           ;LCDDelay.c: 20: __nop();
 54107  01B58C  F000               	nop	
 54108                           
 54109                           ;LCDDelay.c: 21: __nop();
 54110  01B58E  F000               	nop	
 54111                           
 54112                           ;LCDDelay.c: 22: __nop();
 54113  01B590  F000               	nop	
 54114                           
 54115                           ;LCDDelay.c: 23: __nop();
 54116  01B592  F000               	nop	
 54117                           
 54118                           ;LCDDelay.c: 24: __nop();
 54119  01B594  F000               	nop	
 54120                           
 54121                           ;LCDDelay.c: 25: __nop();
 54122  01B596  F000               	nop	
 54123                           
 54124                           ;LCDDelay.c: 26: __nop();
 54125  01B598  F000               	nop	
 54126                           
 54127                           ;LCDDelay.c: 27: __nop();
 54128  01B59A  F000               	nop	
 54129                           
 54130                           ;LCDDelay.c: 28: __nop();
 54131  01B59C  F000               	nop	
 54132                           
 54133                           ;LCDDelay.c: 29: __nop();
 54134  01B59E  F000               	nop	
 54135                           
 54136                           ;LCDDelay.c: 30: __nop();
 54137  01B5A0  F000               	nop	
 54138                           
 54139                           ;LCDDelay.c: 31: __nop();
 54140  01B5A2  F000               	nop	
 54141                           
 54142                           ;LCDDelay.c: 32: __nop();
 54143  01B5A4  F000               	nop	
 54144                           
 54145                           ;LCDDelay.c: 33: __nop();
 54146  01B5A6  F000               	nop	
 54147                           
 54148                           ;LCDDelay.c: 34: __nop();
 54149  01B5A8  F000               	nop	
 54150                           
 54151                           ;LCDDelay.c: 35: __nop();
 54152  01B5AA  F000               	nop	
 54153                           
 54154                           ;LCDDelay.c: 37: __nop();
 54155  01B5AC  F000               	nop	
 54156                           
 54157                           ;LCDDelay.c: 38: __nop();
 54158  01B5AE  F000               	nop	
 54159                           
 54160                           ;LCDDelay.c: 39: __nop();
 54161  01B5B0  F000               	nop	
 54162                           
 54163                           ;LCDDelay.c: 40: __nop();
 54164  01B5B2  F000               	nop	
 54165                           
 54166                           ;LCDDelay.c: 41: __nop();
 54167  01B5B4  F000               	nop	
 54168                           
 54169                           ;LCDDelay.c: 42: __nop();
 54170  01B5B6  F000               	nop	
 54171  01B5B8  0012               	return	
 54172  01B5BA                     __end_ofi2_DelayFor18TCY:
 54173                           	opt stack 0
 54174                           pclatu	equ	0xFFB
 54175                           pclath	equ	0xFFA
 54176                           tblptru	equ	0xFF8
 54177                           tblptrh	equ	0xFF7
 54178                           tblptrl	equ	0xFF6
 54179                           tablat	equ	0xFF5
 54180                           prodh	equ	0xFF4
 54181                           prodl	equ	0xFF3
 54182                           intcon	equ	0xFF2
 54183                           intcon2	equ	0xFF1
 54184                           intcon3	equ	0xFF0
 54185                           indf0	equ	0xFEF
 54186                           postinc0	equ	0xFEE
 54187                           fsr0h	equ	0xFEA
 54188                           fsr0l	equ	0xFE9
 54189                           wreg	equ	0xFE8
 54190                           indf1	equ	0xFE7
 54191                           postinc1	equ	0xFE6
 54192                           postdec1	equ	0xFE5
 54193                           fsr1h	equ	0xFE2
 54194                           fsr1l	equ	0xFE1
 54195                           indf2	equ	0xFDF
 54196                           postinc2	equ	0xFDE
 54197                           postdec2	equ	0xFDD
 54198                           fsr2h	equ	0xFDA
 54199                           fsr2l	equ	0xFD9
 54200                           status	equ	0xFD8
 54201                           pclatu	equ	0xFFB
 54202                           pclath	equ	0xFFA
 54203                           tblptru	equ	0xFF8
 54204                           tblptrh	equ	0xFF7
 54205                           tblptrl	equ	0xFF6
 54206                           tablat	equ	0xFF5
 54207                           prodh	equ	0xFF4
 54208                           prodl	equ	0xFF3
 54209                           intcon	equ	0xFF2
 54210                           intcon2	equ	0xFF1
 54211                           intcon3	equ	0xFF0
 54212                           indf0	equ	0xFEF
 54213                           postinc0	equ	0xFEE
 54214                           fsr0h	equ	0xFEA
 54215                           fsr0l	equ	0xFE9
 54216                           wreg	equ	0xFE8
 54217                           indf1	equ	0xFE7
 54218                           postinc1	equ	0xFE6
 54219                           postdec1	equ	0xFE5
 54220                           fsr1h	equ	0xFE2
 54221                           fsr1l	equ	0xFE1
 54222                           indf2	equ	0xFDF
 54223                           postinc2	equ	0xFDE
 54224                           postdec2	equ	0xFDD
 54225                           fsr2h	equ	0xFDA
 54226                           fsr2l	equ	0xFD9
 54227                           status	equ	0xFD8
 54228                           
 54229                           	psect	rparam
 54230  0000                     pclatu	equ	0xFFB
 54231                           pclath	equ	0xFFA
 54232                           tblptru	equ	0xFF8
 54233                           tblptrh	equ	0xFF7
 54234                           tblptrl	equ	0xFF6
 54235                           tablat	equ	0xFF5
 54236                           prodh	equ	0xFF4
 54237                           prodl	equ	0xFF3
 54238                           intcon	equ	0xFF2
 54239                           intcon2	equ	0xFF1
 54240                           intcon3	equ	0xFF0
 54241                           indf0	equ	0xFEF
 54242                           postinc0	equ	0xFEE
 54243                           fsr0h	equ	0xFEA
 54244                           fsr0l	equ	0xFE9
 54245                           wreg	equ	0xFE8
 54246                           indf1	equ	0xFE7
 54247                           postinc1	equ	0xFE6
 54248                           postdec1	equ	0xFE5
 54249                           fsr1h	equ	0xFE2
 54250                           fsr1l	equ	0xFE1
 54251                           indf2	equ	0xFDF
 54252                           postinc2	equ	0xFDE
 54253                           postdec2	equ	0xFDD
 54254                           fsr2h	equ	0xFDA
 54255                           fsr2l	equ	0xFD9
 54256                           status	equ	0xFD8


Data Sizes:
    Strings     209
    Constant    248
    Data        15
    BSS         605
    Persistent  60
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     83     158
    BANK1           256    179     256
    BANK2           256      0     251
    BANK3           256      0      20
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14l         126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 256
		 -> s_numTicksDiff(BANK4[256]), s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), 
		 -> s_dacSettings(BANK2[20]), SYNQueue(BANK2[60]), 

    memset@p	PTR unsigned char  size(2) Largest target is 256
		 -> s_numTicksDiff(BANK4[256]), s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), 
		 -> s_dacSettings(BANK2[20]), SYNQueue(BANK2[60]), 

    memcpy@d1	PTR void  size(2) Largest target is 3935
		 -> TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), TCPRAMCopyROM@vBuffer(COMRAM[16]), 
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), RAM(DATA[3935]), MyTCB.remote(BANK1[10]), SYNQueue(BANK2[60]), 
		 -> MyTCB(BANK1[39]), MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3935
		 -> TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), TCPRAMCopyROM@vBuffer(COMRAM[16]), 
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), RAM(DATA[3935]), MyTCB.remote(BANK1[10]), SYNQueue(BANK2[60]), 
		 -> MyTCB(BANK1[39]), MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3935
		 -> s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), 
		 -> STR_1(CODE[7]), SerializedMACAddress(CODE[6]), SYNQueue.niSourceAddress(BANK2[10]), RAM(DATA[3935]), 
		 -> MyTCB.remote(BANK1[10]), TCPOpen@dwRemoteHost(BANK1[4]), SYNQueue(BANK2[60]), MyTCB(BANK1[39]), 
		 -> MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), header.SourceMACAddr.v(COMRAM[6]), 
		 -> header.SourceMACAddr(COMRAM[6]), AppConfig.MyMACAddr(BANK2[6]), AppConfig(BANK2[51]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3935
		 -> s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), 
		 -> STR_1(CODE[7]), SerializedMACAddress(CODE[6]), SYNQueue.niSourceAddress(BANK2[10]), RAM(DATA[3935]), 
		 -> MyTCB.remote(BANK1[10]), TCPOpen@dwRemoteHost(BANK1[4]), SYNQueue(BANK2[60]), MyTCB(BANK1[39]), 
		 -> MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), header.SourceMACAddr.v(COMRAM[6]), 
		 -> header.SourceMACAddr(COMRAM[6]), AppConfig.MyMACAddr(BANK2[6]), AppConfig(BANK2[51]), 

    memcmp@s2	PTR const void  size(2) Largest target is 20
		 -> s_irCode(BANK2[16]), s_dacSettings(BANK2[20]), 

    memcmp@s1	PTR const void  size(2) Largest target is 20
		 -> IR_VOLUME_DOWN(CODE[4]), IR_VOLUME_UP(CODE[4]), IR_POWER_OFF(CODE[3]), IR_POWER_ON(CODE[3]), 
		 -> s_dacSettingsOriginal(BANK3[20]), s_dacSettingsTmp(BANK2[20]), 

    WriteBlockFlash@flash_array	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettings(BANK2[20]), 

    WriteBlockFlash@startptr	PTR unsigned char  size(3) Largest target is 131063
		 -> ROM(CODE[131063]), 

    ReadFlash@flash_array	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> dispbuf1(BANK2[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_sprintf(COMRAM[2]), ?_sprintf(BANK1[2]), 

    S9336$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    UpdateSampleRate@srStr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), 

    GetCheckSum@data	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings(BANK2[20]), 

    FindEmpty@blockEnd	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), 

    FindEmpty@tmpAddr	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), 

    RefreshLine2Ex@line	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), dispbuf2(BANK2[17]), 

    RefreshLine1Ex@line	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), dispbuf1(BANK2[17]), 

    HandleTCPSeg@h	PTR struct . size(2) Largest target is 20
		 -> TCPProcess@TCPHeader(BANK1[20]), 

    SwapTCPHeader@header	PTR struct . size(2) Largest target is 20
		 -> SendTCP@header(BANK1[20]), TCPProcess@TCPHeader(BANK1[20]), 

    FindMatchingSocket@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    FindMatchingSocket@h	PTR struct . size(2) Largest target is 20
		 -> TCPProcess@TCPHeader(BANK1[20]), 

    TCPProcess@localIP	PTR struct . size(2) Largest target is 4
		 -> StackTask@tempLocalIP(BANK1[4]), 

    TCPProcess@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    TCPGetArray@buffer	PTR unsigned char  size(2) Largest target is 18
		 -> TCPServer@cmdBytes(BANK1[18]), 

    sp__TCPPutROMString	PTR const unsigned char  size(2) Largest target is 0

    sp__TCPPutString	PTR unsigned char  size(2) Largest target is 0

    TCPPutArray@data	PTR unsigned char  size(2) Largest target is 18
		 -> TCPServer@cmdBytes(BANK1[18]), 

    sp__TCPGetRemoteInfo	PTR struct . size(2) Largest target is 12
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 256
		 -> s_numTicksDiff(BANK4[256]), s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), 
		 -> s_dacSettings(BANK2[20]), SYNQueue(BANK2[60]), 

    SwapIPHeader@h	PTR struct _IP_HEADER size(2) Largest target is 20
		 -> IPPutHeader@header(BANK1[20]), IPGetHeader@header(BANK1[20]), 

    IPPutHeader@remote	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    IPGetHeader@len	PTR unsigned int  size(2) Largest target is 2
		 -> StackTask@dataCount(BANK1[2]), 

    IPGetHeader@protocol	PTR unsigned char  size(2) Largest target is 1
		 -> StackTask@cIPFrameType(BANK1[1]), 

    IPGetHeader@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    IPGetHeader@localIP	PTR struct . size(2) Largest target is 4
		 -> StackTask@tempLocalIP(BANK1[4]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 0

    sp__strnchr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FormatNetBIOSName@Name	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    sp__strupr	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    strupr@s	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    strupr@t	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    CalcIPChecksum@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> SendTCP@pseudoHeader(BANK1[12]), TCPProcess@pseudoHeader(BANK1[12]), IPPutHeader@header(BANK1[20]), 

    CalcIPChecksum@val	PTR unsigned int  size(2) Largest target is 20
		 -> SendTCP@pseudoHeader(BANK1[12]), TCPProcess@pseudoHeader(BANK1[12]), IPPutHeader@header(BANK1[20]), 

    SwapARPPacket@p	PTR struct . size(2) Largest target is 28
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), 

    ARPIsResolved@MACAddr	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    ARPIsResolved@IPAddr	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    ARPResolve@IPAddr	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    ARPPut@packet	PTR struct . size(2) Largest target is 28
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), 

    MACPutArray@val	PTR unsigned char  size(2) Largest target is 3935
		 -> TCPRAMCopyROM@vBuffer(COMRAM[16]), SendTCP@options(BANK1[4]), SendTCP@wVal(BANK1[2]), SendTCP@header(BANK1[20]), 
		 -> RAM(DATA[3935]), MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), IPPutHeader@header(BANK1[20]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    MACGetArray@val	PTR unsigned char  size(2) Largest target is 3935
		 -> TCPProcess@TCPHeader(BANK1[20]), RAM(DATA[3935]), IPGetHeader@header(BANK1[20]), ARPProcess@packet(BANK1[28]), 
		 -> NULL(NULL[0]), CalcIPBufferChecksum@DataBuffer(BANK1[20]), MACGetHeader@header(BANK1[20]), 

    CalcIPBufferChecksum@DataPtr	PTR unsigned short  size(2) Largest target is 20
		 -> CalcIPBufferChecksum@DataBuffer(BANK1[20]), 

    MACPutHeader@remote	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), 
		 -> ARPSendPkt@packet(COMRAM[28]), 

    MACGetHeader@type	PTR unsigned char  size(2) Largest target is 1
		 -> StackTask@cFrameType(BANK1[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 3935
		 -> TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), TCPRAMCopyROM@vBuffer(COMRAM[16]), 
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), RAM(DATA[3935]), MyTCB.remote(BANK1[10]), SYNQueue(BANK2[60]), 
		 -> MyTCB(BANK1[39]), MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    MACGetHeader@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    PutsSLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), dispbuf2(BANK2[17]), 
		 -> dispbuf1(BANK2[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISRLP in COMRAM

    _ISRLP->_ChangeMasterVolume
    i2_UpdateSampleRate->i2_RefreshLine2Ex
    i2_RefreshLine2Ex->i2_PutsSLCD
    i2_SaveToFlash->i2_FindEmpty
    i2_FindEmpty->i2_ReadFlash
    _ProcessIRInt->i2_TickGet
    _ProcessIRCode->_ChangeMasterVolume
    _ChangeMasterVolume->i2_UpdateMasterVolume
    i2_sprintf->i2___fttol
    i2_scale->i2___ftmul
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___ftsub->i2___ftadd
    i2___ftdiv->i2___awtoft
    i2___awtoft->i2___ftpack
    i2_SendVolumeToDevice->i2_SendDataToDeviceCh
    i2_SendDataToDeviceCh->i2_DbToCode
    i2_DbToCode->i2___fttol
    i2___lwtoft->i2___ftpack
    i2___fttol->i2___ftadd
    i2___ftmul->i2___wmul
    i2___ftadd->i2_fround
    i2_RefreshLine1->i2_RefreshLine1Ex
    i2_RefreshLine1Ex->i2_PutsSLCD
    i2_SLCDSetDDRamAddr->i2_WriteCmdSLCD
    i2_PutsSLCD->i2_WriteDataSLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRLP in BANK0

    _IRTimerInt->_ProcessIRCode
    i2_UpdateMasterVolume->i2_sprintf
    i2_SendVolumeToDevice->i2_SendDataToDeviceCh

Critical Paths under _main in BANK1

    _main->_StackTask
    _TCPServer->_UpdateMasterVolume
    _UpdateSampleRate->_RefreshLine2Ex
    _RefreshLine2Ex->_PutsSLCD
    _UpdateMasterVolume->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SendVolumeToDevice->_SendDataToDeviceCh
    _SendDataToDeviceCh->_DbToCode
    _DbToCode->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___wmul
    ___ftadd->_fround
    _TCPPutArray->_TCPFlush
    _TCPIsPutReady->_SyncTCBStub
    _TCPFlush->_SendTCP
    _TCPOpen->_SendTCP
    _TCPIsConnected->_SyncTCBStub
    _TCPGetArray->_TCPIsGetReady
    _TCPGetArray->_TCPRAMCopy
    _TCPIsGetReady->_SyncTCBStub
    _TCPClose->_TCPDisconnect
    _SaveToFlash->_FindEmpty
    _RefreshLine1->_RefreshLine1Ex
    _RefreshLine1Ex->_PutsSLCD
    _PutsSLCD->_WriteDataSLCD
    _FindEmpty->_ReadFlash
    _StackTask->_TCPProcess
    _TCPTick->_TCPDisconnect
    _TCPDisconnect->_SendTCP
    _ARPResolve->_ARPPut
    _TCPProcess->_HandleTCPSeg
    _HandleTCPSeg->_SendTCP
    _SendTCP->_CalcIPBufferChecksum
    _SendTCP->_SyncTCB
    _SwapTCPHeader->_swaps
    _IPPutHeader->_CalcIPChecksum
    _GetMaxSegSizeOption->_IPSetRxBuffer
    _IPSetRxBuffer->_MACSetReadPtrInRx
    _FindMatchingSocket->_SyncTCB
    ___wmul->___awdiv
    _MACGetHeader->_memcpy
    _IPGetHeader->_MACCalcRxChecksum
    _SwapIPHeader->_swaps
    _MACCalcRxChecksum->_CalcIPBufferChecksum
    _CalcIPBufferChecksum->_MACGetArray
    _ARPProcess->_ARPPut
    _ARPPut->_memcpy
    _SwapARPPacket->_swaps
    _MACPutHeader->_MACPutArray
    _MACIsTxReady->_MACFlush
    _MACFlush->_TickGet
    _RestoreFromFlash->_ReadFlash
    _OpenSLCD->_Delay10KTCYx
    _OpenSLCD->_SLCDSetDDRamAddr
    _SLCDSetDDRamAddr->_WriteCmdSLCD
    _DelayPORSLCD->_Delay1KTCYx
    _Configure->_StackInit
    _StackInit->_TCPInit
    _TCPInit->_GenerateRandomDWORD
    _SyncTCBStub->_memcpy
    _GenerateRandomDWORD->_LFSRSeedRand
    _LFSRSeedRand->_LFSRRand
    _CloseSocket->_SyncTCB
    _SyncTCB->_TCPRAMCopy
    _TCPRAMCopy->_memcpy
    _MACMemCopyAsync->_MACPut
    _MACInit->_WritePHYReg
    _InitrIR->_memset
    _InitAppConfig->_memcpy
    _memcpy->___wmul
    _FormatNetBIOSName->_strupr

Critical Paths under _ISRLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISRLP in BANK13

    None.

Critical Paths under _main in BANK14l

    None.

Critical Paths under _ISRLP in BANK14l

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISRLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1433010
                           _BusySLCD
                          _Configure
                           _OpenSLCD
                   _RestoreFromFlash
                          _StackTask
                          _TCPServer
                 _UpdateMasterVolume
                   _UpdateSampleRate
                       _WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (1) _TCPServer                                           24    24      0  625063
                                            130 BANK1     24    24      0
                        _GetCheckSum
                        _SaveToFlash
                 _SendVolumeToDevice
                           _TCPClose
                        _TCPGetArray
                     _TCPIsConnected
                      _TCPIsGetReady
                      _TCPIsPutReady
                            _TCPOpen
                        _TCPPutArray
                 _UpdateMasterVolume
                   _UpdateSampleRate
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (1) _UpdateSampleRate                                     2     2      0     633
                                              5 BANK1      2     2      0
                     _RefreshLine2Ex
 ---------------------------------------------------------------------------------
 (2) _RefreshLine2Ex                                       2     0      2     605
                                              3 BANK1      2     0      2
                           _PutsSLCD
                   _SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (1) _UpdateMasterVolume                                   6     6      0  120484
                                            124 BANK1      6     6      0
                       _RefreshLine1
                 _SendVolumeToDevice
                           ___awtoft
                            ___ftdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             56    49      7   91167
                                             72 BANK1     52    45      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   23626
                                             35 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   23428
                                             35 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2420
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2660
                                              6 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     539
                                              0 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          16    10      6     699
                                              0 BANK1     16    10      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    4095
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     867
                                              0 BANK1      9     1      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     870
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    6157
                                             57 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     163
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     844
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4634
                                             12 BANK1     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    4117
                                              8 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _SendVolumeToDevice                                   0     0      0   19398
                 _SendDataToDeviceCh
 ---------------------------------------------------------------------------------
 (3) _SendDataToDeviceCh                                  25    25      0   19398
                                             83 BANK1     25    25      0
                           _DbToCode
 ---------------------------------------------------------------------------------
 (4) _DbToCode                                            11     9      2   18847
                                             72 BANK1     11     9      2
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) ___lwtoft                                             3     0      3    4048
                                              8 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     724
                                             57 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    7984
                                             20 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5666
                                             45 BANK1     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    3908
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _TCPPutArray                                         15    11      4  156910
                                             87 BANK1     15    11      4
                        _SyncTCBStub
                           _TCPFlush
                      _TCPIsPutReady
                         _TCPRAMCopy
                      _TickGetDiv256
 ---------------------------------------------------------------------------------
 (3) _TCPIsPutReady                                        6     4      2    6315
                                             33 BANK1      6     4      2
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (3) _TCPFlush                                             1     1      0  115439
                                             86 BANK1      1     1      0
                            _SendTCP
                            _SyncTCB
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (2) _TCPOpen                                             13     5      8  122508
                                             86 BANK1     13     5      8
                            _SendTCP
                            _SyncTCB
                        _SyncTCBStub
                            _TickGet
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _TCPIsConnected                                       1     1      0    6270
                                             33 BANK1      1     1      0
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (2) _TCPGetArray                                         13     9      4   41108
                                             38 BANK1     13     9      4
                        _SyncTCBStub
                      _TCPIsGetReady
                         _TCPRAMCopy
                      _TickGetDiv256
 ---------------------------------------------------------------------------------
 (2) _TCPIsGetReady                                        5     3      2    6270
                                             33 BANK1      5     3      2
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (2) _TCPClose                                             1     1      0  121801
                                             87 BANK1      1     1      0
                        _SyncTCBStub
                      _TCPDisconnect
 ---------------------------------------------------------------------------------
 (2) _SaveToFlash                                         23    23      0    9271
                                             40 BANK1     23    23      0
                         _EraseFlash
                          _FindEmpty
                        _GetCheckSum
                          _ReadFlash
                       _RefreshLine1
                     _RefreshLine1Ex
                    _WriteBlockFlash
                             _memcmp
 ---------------------------------------------------------------------------------
 (3) _memcmp                                               9     3      6    1924
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) _WriteBlockFlash                                     17    10      7     565
                                              0 BANK1     17    10      7
 ---------------------------------------------------------------------------------
 (2) _RefreshLine1                                         0     0      0    1077
                     _RefreshLine1Ex
 ---------------------------------------------------------------------------------
 (3) _RefreshLine1Ex                                       2     0      2    1077
                                              3 BANK1      2     0      2
                           _PutsSLCD
                   _SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (3) _PutsSLCD                                             2     0      2     303
                                              1 BANK1      2     0      2
                           _BusySLCD
                      _WriteDataSLCD
 ---------------------------------------------------------------------------------
 (4) _WriteDataSLCD                                        1     1      0      22
                                              0 BANK1      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _FindEmpty                                           24    20      4    1689
                                             16 BANK1     24    20      4
                          _ReadFlash
 ---------------------------------------------------------------------------------
 (3) _EraseFlash                                          13     5      8     420
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _StackTask                                            8     8      0  594600
                                            171 BANK1      8     8      0
                         _ARPProcess
                        _IPGetHeader
                       _MACGetHeader
                         _TCPProcess
                            _TCPTick
 ---------------------------------------------------------------------------------
 (2) _TCPTick                                             18    18      0  319732
                                             87 BANK1     18    18      0
                      _ARPIsResolved
                         _ARPResolve
                        _CloseSocket
                       _MACIsTxReady
                            _SendTCP
                            _SyncTCB
                        _SyncTCBStub
                      _TCPDisconnect
                         _TCPRAMCopy
                            _TickGet
                      _TickGetDiv256
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _TCPDisconnect                                        1     1      0  115509
                                             86 BANK1      1     1      0
                        _CloseSocket
                            _SendTCP
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (3) _ARPResolve                                          46    44      2   15397
                                             32 BANK1     46    44      2
                             _ARPPut
 ---------------------------------------------------------------------------------
 (3) _ARPIsResolved                                       16    12      4     302
                                              0 BANK1     16    12      4
 ---------------------------------------------------------------------------------
 (2) _TCPProcess                                          45    39      6  235999
                                            126 BANK1     45    39      6
               _CalcIPBufferChecksum
                     _CalcIPChecksum
                 _FindMatchingSocket
                       _HandleTCPSeg
                      _IPSetRxBuffer
                       _MACDiscardRx
                        _MACGetArray
                      _SwapTCPHeader
                              _swaps
 ---------------------------------------------------------------------------------
 (3) _HandleTCPSeg                                        40    36      4  172298
                                             86 BANK1     40    36      4
                        _CloseSocket
                _GetMaxSegSizeOption
                      _IPSetRxBuffer
                            _SendTCP
                            _SyncTCB
                         _TCPRAMCopy
                            _TickGet
                      _TickGetDiv256
 ---------------------------------------------------------------------------------
 (4) _SendTCP                                             46    45      1   81341
                                             40 BANK1     46    45      1
               _CalcIPBufferChecksum
                     _CalcIPChecksum
                        _IPPutHeader
                           _MACFlush
                   _MACGetFreeRxSize
                       _MACIsTxReady
                        _MACPutArray
                      _MACSetReadPtr
                     _MACSetWritePtr
                      _SwapTCPHeader
                            _SyncTCB
                         _TCPRAMCopy
                            _TickGet
                              _swaps
 ---------------------------------------------------------------------------------
 (5) _SwapTCPHeader                                        6     4      2    2827
                                              5 BANK1      6     4      2
                              _swapl
                              _swaps
 ---------------------------------------------------------------------------------
 (6) _swapl                                                4     0      4     493
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (5) _MACGetFreeRxSize                                     8     6      2     201
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (5) _IPPutHeader                                         25    20      5    9038
                                             14 BANK1     25    20      5
                     _CalcIPChecksum
                        _MACPutArray
                       _MACPutHeader
                       _SwapIPHeader
 ---------------------------------------------------------------------------------
 (6) _CalcIPChecksum                                      14    10      4     938
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) _GetMaxSegSizeOption                                  6     4      2    3211
                                              8 BANK1      6     4      2
                      _IPSetRxBuffer
                             _MACGet
                        _MACGetArray
 ---------------------------------------------------------------------------------
 (3) _IPSetRxBuffer                                        2     0      2     821
                                              6 BANK1      2     0      2
                  _MACSetReadPtrInRx
 ---------------------------------------------------------------------------------
 (3) _FindMatchingSocket                                  18    14      4   51595
                                             40 BANK1     18    14      4
                            _SyncTCB
                        _SyncTCBStub
                      _TickGetDiv256
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4   10073
                                             14 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _TickGetDiv256                                        8     4      4      95
                                              0 BANK1      8     4      4
                        _GetTickCopy
 ---------------------------------------------------------------------------------
 (2) _MACGetHeader                                        26    22      4   10648
                                             30 BANK1     26    22      4
                       _MACDiscardRx
                        _MACGetArray
                             _memcpy
                              _swaps
 ---------------------------------------------------------------------------------
 (2) _IPGetHeader                                         34    26      8    8435
                                             50 BANK1     34    26      8
                  _MACCalcRxChecksum
                        _MACGetArray
                  _MACSetReadPtrInRx
                       _SwapIPHeader
 ---------------------------------------------------------------------------------
 (6) _SwapIPHeader                                         2     0      2    2158
                                              5 BANK1      2     0      2
                              _swaps
 ---------------------------------------------------------------------------------
 (4) _MACSetReadPtrInRx                                    6     4      2     327
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (3) _MACCalcRxChecksum                                   10     6      4    3125
                                             40 BANK1     10     6      4
               _CalcIPBufferChecksum
 ---------------------------------------------------------------------------------
 (5) _CalcIPBufferChecksum                                34    32      2    2753
                                              6 BANK1     34    32      2
                        _MACGetArray
 ---------------------------------------------------------------------------------
 (2) _ARPProcess                                          28    28      0   19599
                                             32 BANK1     28    28      0
                             _ARPPut
                       _MACDiscardRx
                        _MACGetArray
                      _SwapARPPacket
 ---------------------------------------------------------------------------------
 (3) _MACDiscardRx                                         2     2      0      69
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _ARPPut                                               2     0      2   14975
                                             30 BANK1      2     0      2
                           _MACFlush
                       _MACIsTxReady
                        _MACPutArray
                       _MACPutHeader
                     _MACSetWritePtr
                      _SwapARPPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _SwapARPPacket                                        2     0      2    2158
                                              5 BANK1      2     0      2
                              _swaps
 ---------------------------------------------------------------------------------
 (5) _swaps                                                5     3      2    1790
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (6) _MACPutHeader                                         7     2      5    2990
                                              4 BANK1      7     2      5
                             _MACPut
                        _MACPutArray
 ---------------------------------------------------------------------------------
 (5) _MACIsTxReady                                         6     6      0     225
                                             13 BANK1      6     6      0
                           _MACFlush
                            _TickGet
 ---------------------------------------------------------------------------------
 (6) _MACFlush                                             5     5      0     124
                                              8 BANK1      5     5      0
                            _TickGet
 ---------------------------------------------------------------------------------
 (5) _TickGet                                              8     4      4     101
                                              0 BANK1      8     4      4
                        _GetTickCopy
 ---------------------------------------------------------------------------------
 (4) _GetTickCopy                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RestoreFromFlash                                    17    17      0    8510
                                             16 BANK1     17    17      0
                        _GetCheckSum
                          _ReadFlash
                             _memset
 ---------------------------------------------------------------------------------
 (3) _ReadFlash                                           16     8      8    1323
                                              0 BANK1     16     8      8
 ---------------------------------------------------------------------------------
 (3) _GetCheckSum                                          5     2      3    1059
                                              0 BANK1      5     2      3
 ---------------------------------------------------------------------------------
 (1) _OpenSLCD                                             1     1      0     132
                                              2 BANK1      1     1      0
                           _BusySLCD
                       _Delay10KTCYx
                       _DelayPORSLCD
                   _SLCDSetDDRamAddr
                       _WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (3) _SLCDSetDDRamAddr                                     1     1      0      44
                                              1 BANK1      1     1      0
                           _BusySLCD
                       _WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdSLCD                                         1     1      0      22
                                              0 BANK1      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _BusySLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayPORSLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configure                                            0     0      0   83566
                      _InitAppConfig
                            _InitrIR
                          _StackInit
                           _TickInit
 ---------------------------------------------------------------------------------
 (2) _TickInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StackInit                                            4     4      0   70858
                                             67 BANK1      4     4      0
                            _ARPInit
                _GenerateRandomDWORD
                       _LFSRSeedRand
                            _MACInit
                            _TCPInit
 ---------------------------------------------------------------------------------
 (3) _TCPInit                                             17    17      0   69169
                                             50 BANK1     17    17      0
                        _CloseSocket
                _GenerateRandomDWORD
                            _SyncTCB
                        _SyncTCBStub
                             _memset
 ---------------------------------------------------------------------------------
 (4) _SyncTCBStub                                          3     3      0    6226
                                             30 BANK1      3     3      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _GenerateRandomDWORD                                 26    22      4     820
                                             24 BANK1     26    22      4
                           _LFSRRand
                       _LFSRSeedRand
 ---------------------------------------------------------------------------------
 (5) _LFSRSeedRand                                         9     5      4     380
                                             15 BANK1      9     5      4
                           _LFSRRand
 ---------------------------------------------------------------------------------
 (4) _CloseSocket                                          2     2      0   27898
                                             40 BANK1      2     2      0
                           _LFSRRand
                            _SyncTCB
 ---------------------------------------------------------------------------------
 (4) _SyncTCB                                              2     2      0   27828
                                             38 BANK1      2     2      0
                         _TCPRAMCopy
 ---------------------------------------------------------------------------------
 (3) _TCPRAMCopy                                           8     0      8   27828
                                             30 BANK1      8     0      8
                        _MACGetArray
                   _MACIsMemCopyDone
                    _MACMemCopyAsync
                        _MACPutArray
                      _MACSetReadPtr
                     _MACSetWritePtr
                             ___wmul (ARG)
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _MACSetWritePtr                                       4     2      2     619
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (4) _MACSetReadPtr                                        4     2      2     265
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (4) _MACPutArray                                          4     0      4    2169
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (4) _MACMemCopyAsync                                     16    10      6     917
                                              1 BANK1     16    10      6
                             _MACGet
                             _MACPut
 ---------------------------------------------------------------------------------
 (5) _MACGet                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MACIsMemCopyDone                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MACGetArray                                          6     2      4    2006
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) _LFSRRand                                            15    13      2      46
                                              0 BANK1     15    13      2
 ---------------------------------------------------------------------------------
 (3) _MACInit                                              1     1      0     466
                             _MACPut
                        _WritePHYReg
 ---------------------------------------------------------------------------------
 (4) _WritePHYReg                                          4     2      2     444
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (5) _MACPut                                               1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ARPInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitrIR                                              0     0      0    6036
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    6036
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (2) _InitAppConfig                                        0     0      0    6672
                  _FormatNetBIOSName
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6    6138
                                             20 BANK1     10     4      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FormatNetBIOSName                                    3     1      2     534
                                              5 BANK1      3     1      2
                             _strupr
 ---------------------------------------------------------------------------------
 (4) _strupr                                               5     3      2     237
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISRLP                                               27    27      0   64863
                                             56 BANK0     27    27      0
                 _ChangeMasterVolume
                         _IRTimerInt
                       _ProcessIRInt
                         _TickUpdate
                      i2_Delay1KTCYx
                      i2_SaveToFlash
                          i2_TickGet
                 i2_UpdateSampleRate
 ---------------------------------------------------------------------------------
 (10) i2_UpdateSampleRate                                  2     2      0     239
                                              5 COMRAM     2     2      0
                   i2_RefreshLine2Ex
 ---------------------------------------------------------------------------------
 (11) i2_RefreshLine2Ex                                    2     0      2     211
                                              3 COMRAM     2     0      2
                         i2_PutsSLCD
                 i2_SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (10) i2_SaveToFlash                                      23    23      0    3163
                                             40 COMRAM    23    23      0
                       i2_EraseFlash
                        i2_FindEmpty
                      i2_GetCheckSum
                        i2_ReadFlash
                     i2_RefreshLine1
                   i2_RefreshLine1Ex
                  i2_WriteBlockFlash
                           i2_memcmp
 ---------------------------------------------------------------------------------
 (11) i2_WriteBlockFlash                                  17    10      7     289
                                              0 COMRAM    17    10      7
 ---------------------------------------------------------------------------------
 (11) i2_GetCheckSum                                       5     2      3     167
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) i2_FindEmpty                                        24    20      4     675
                                             16 COMRAM    24    20      4
                        i2_ReadFlash
 ---------------------------------------------------------------------------------
 (11) i2_ReadFlash                                        16     8      8     401
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_EraseFlash                                       13     5      8     232
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2_Delay1KTCYx                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TickUpdate                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ProcessIRInt                                       12    12      0     157
                                              8 COMRAM    12    12      0
                        _ReInitTimer
                          i2_TickGet
 ---------------------------------------------------------------------------------
 (11) _ReInitTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IRTimerInt                                          0     0      0   30996
                      _ProcessIRCode
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     174
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _ProcessIRCode                                      17    17      0   30822
                                             39 BANK0     17    17      0
                 _ChangeMasterVolume
                          i2_TickGet
                           i2_memcmp
 ---------------------------------------------------------------------------------
 (11) i2_memcmp                                            9     3      6     580
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (10) i2_TickGet                                           8     4      4      89
                                              0 COMRAM     8     4      4
                      i2_GetTickCopy
 ---------------------------------------------------------------------------------
 (11) i2_GetTickCopy                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ChangeMasterVolume                                  2     2      0   30082
                                             92 COMRAM     2     2      0
               i2_UpdateMasterVolume
 ---------------------------------------------------------------------------------
 (13) i2_UpdateMasterVolume                                6     6      0   29971
                                             86 COMRAM     6     6      0
                     i2_RefreshLine1
               i2_SendVolumeToDevice
                         i2___awtoft
                          i2___ftdiv
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (14) i2_sprintf                                          56    49      7   22333
                                             72 COMRAM    13     6      7
                                              0 BANK0     39    39      0
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (15) i2_scale                                            13    10      3    4949
                                             35 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) i2_fround                                           16    13      3    4751
                                             35 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4    1093
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (16) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (15) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (15) i2__div_to_l_                                       16    10      6     481
                                              0 COMRAM    16    10      6
 ---------------------------------------------------------------------------------
 (15) i2___lltoft                                          9     5      4     772
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (15) i2___llmod                                           9     1      8     315
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (15) i2___lldiv                                          13     5      8     266
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (15) i2___ftsub                                           6     0      6    1770
                                             57 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (15) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (14) i2___ftdiv                                          15     9      6    1009
                                             12 COMRAM    15     9      6
                         i2___awtoft (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2___awtoft                                          4     1      3     794
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (14) i2_SendVolumeToDevice                                0     0      0    5403
               i2_SendDataToDeviceCh
 ---------------------------------------------------------------------------------
 (15) i2_SendDataToDeviceCh                               25    25      0    5403
                                             83 COMRAM     3     3      0
                                              0 BANK0     22    22      0
                         i2_DbToCode
 ---------------------------------------------------------------------------------
 (16) i2_DbToCode                                         11     9      2    4870
                                             72 COMRAM    11     9      2
                          i2___ftadd
                          i2___ftmul
                          i2___fttol
                         i2___lwtoft
 ---------------------------------------------------------------------------------
 (17) i2___lwtoft                                          3     0      3     725
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (15) i2___fttol                                          15    11      4     356
                                             57 COMRAM    15    11      4
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___lwtoft (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftmul                                          15     9      6    1783
                                             20 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftadd                                          12     6      6    1673
                                             45 COMRAM    12     6      6
                          i2___ftmul (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftpack                                          8     3      5     677
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (11) i2_RefreshLine1                                      0     0      0     341
                   i2_RefreshLine1Ex
 ---------------------------------------------------------------------------------
 (11) i2_RefreshLine1Ex                                    2     0      2     341
                                              3 COMRAM     2     0      2
                         i2_PutsSLCD
                 i2_SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (12) i2_SLCDSetDDRamAddr                                  1     1      0      44
                                              1 COMRAM     1     1      0
                         i2_BusySLCD
                     i2_WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (13) i2_WriteCmdSLCD                                      1     1      0      22
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (12) i2_PutsSLCD                                          2     0      2     119
                                              1 COMRAM     2     0      2
                         i2_BusySLCD
                    i2_WriteDataSLCD
 ---------------------------------------------------------------------------------
 (13) i2_WriteDataSLCD                                     1     1      0      22
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (13) i2_BusySLCD                                          0     0      0       0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (14) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusySLCD
     _DelayFor18TCY
   _Configure
     _InitAppConfig
       _FormatNetBIOSName
         _strupr
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _InitrIR
       _memset
     _StackInit
       _ARPInit
       _GenerateRandomDWORD
         _LFSRRand
         _LFSRSeedRand
           _LFSRRand
       _LFSRSeedRand
         _LFSRRand
       _MACInit
         _MACPut
         _WritePHYReg
       _TCPInit
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _GenerateRandomDWORD
           _LFSRRand
           _LFSRSeedRand
             _LFSRRand
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _memset
     _TickInit
   _OpenSLCD
     _BusySLCD
       _DelayFor18TCY
     _Delay10KTCYx
     _DelayPORSLCD
       _Delay1KTCYx
     _SLCDSetDDRamAddr
       _BusySLCD
         _DelayFor18TCY
       _WriteCmdSLCD
         _DelayFor18TCY
     _WriteCmdSLCD
       _DelayFor18TCY
   _RestoreFromFlash
     _GetCheckSum
     _ReadFlash
     _memset
   _StackTask
     _ARPProcess
       _ARPPut
         _MACFlush
           _TickGet
             _GetTickCopy
         _MACIsTxReady
           _MACFlush
             _TickGet
               _GetTickCopy
           _TickGet
             _GetTickCopy
         _MACPutArray
         _MACPutHeader
           _MACPut
           _MACPutArray
         _MACSetWritePtr
         _SwapARPPacket
           _swaps
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _MACDiscardRx
       _MACGetArray
       _SwapARPPacket
         _swaps
     _IPGetHeader
       _MACCalcRxChecksum
         _CalcIPBufferChecksum
           _MACGetArray
       _MACGetArray
       _MACSetReadPtrInRx
       _SwapIPHeader
         _swaps
     _MACGetHeader
       _MACDiscardRx
       _MACGetArray
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _swaps
     _TCPProcess
       _CalcIPBufferChecksum
         _MACGetArray
       _CalcIPChecksum
       _FindMatchingSocket
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGetDiv256
           _GetTickCopy
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _HandleTCPSeg
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _GetMaxSegSizeOption
           _IPSetRxBuffer
             _MACSetReadPtrInRx
           _MACGet
           _MACGetArray
         _IPSetRxBuffer
           _MACSetReadPtrInRx
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGet
           _GetTickCopy
         _TickGetDiv256
           _GetTickCopy
       _IPSetRxBuffer
         _MACSetReadPtrInRx
       _MACDiscardRx
       _MACGetArray
       _SwapTCPHeader
         _swapl
         _swaps
       _swaps
     _TCPTick
       _ARPIsResolved
       _ARPResolve
         _ARPPut
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACPutHeader
             _MACPut
             _MACPutArray
           _MACSetWritePtr
           _SwapARPPacket
             _swaps
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _CloseSocket
         _LFSRRand
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       _MACIsTxReady
         _MACFlush
           _TickGet
             _GetTickCopy
         _TickGet
           _GetTickCopy
       _SendTCP
         _CalcIPBufferChecksum
           _MACGetArray
         _CalcIPChecksum
         _IPPutHeader
           _CalcIPChecksum
           _MACPutArray
           _MACPutHeader
             _MACPut
             _MACPutArray
           _SwapIPHeader
             _swaps
         _MACFlush
           _TickGet
             _GetTickCopy
         _MACGetFreeRxSize
         _MACIsTxReady
           _MACFlush
             _TickGet
               _GetTickCopy
           _TickGet
             _GetTickCopy
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         _SwapTCPHeader
           _swapl
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGet
           _GetTickCopy
         _swaps
       _SyncTCB
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPDisconnect
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPRAMCopy
         _MACGetArray
         _MACIsMemCopyDone
         _MACMemCopyAsync
           _MACGet
           _MACPut
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGet
         _GetTickCopy
       _TickGetDiv256
         _GetTickCopy
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TCPServer
     _GetCheckSum
     _SaveToFlash
       _EraseFlash
       _FindEmpty
         _ReadFlash
       _GetCheckSum
       _ReadFlash
       _RefreshLine1
         _RefreshLine1Ex
           _PutsSLCD
             _BusySLCD
               _DelayFor18TCY
             _WriteDataSLCD
               _DelayFor18TCY
           _SLCDSetDDRamAddr
             _BusySLCD
               _DelayFor18TCY
             _WriteCmdSLCD
               _DelayFor18TCY
       _RefreshLine1Ex
         _PutsSLCD
           _BusySLCD
             _DelayFor18TCY
           _WriteDataSLCD
             _DelayFor18TCY
         _SLCDSetDDRamAddr
           _BusySLCD
             _DelayFor18TCY
           _WriteCmdSLCD
             _DelayFor18TCY
       _WriteBlockFlash
       _memcmp
     _SendVolumeToDevice
       _SendDataToDeviceCh
         _DbToCode
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lwtoft
             ___ftpack
     _TCPClose
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPDisconnect
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     _TCPGetArray
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPIsGetReady
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPRAMCopy
         _MACGetArray
         _MACIsMemCopyDone
         _MACMemCopyAsync
           _MACGet
           _MACPut
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGetDiv256
         _GetTickCopy
     _TCPIsConnected
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _TCPIsGetReady
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _TCPIsPutReady
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _TCPOpen
       _SendTCP
         _CalcIPBufferChecksum
           _MACGetArray
         _CalcIPChecksum
         _IPPutHeader
           _CalcIPChecksum
           _MACPutArray
           _MACPutHeader
             _MACPut
             _MACPutArray
           _SwapIPHeader
             _swaps
         _MACFlush
           _TickGet
             _GetTickCopy
         _MACGetFreeRxSize
         _MACIsTxReady
           _MACFlush
             _TickGet
               _GetTickCopy
           _TickGet
             _GetTickCopy
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         _SwapTCPHeader
           _swapl
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGet
           _GetTickCopy
         _swaps
       _SyncTCB
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGet
         _GetTickCopy
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _TCPPutArray
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPFlush
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPIsPutReady
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPRAMCopy
         _MACGetArray
         _MACIsMemCopyDone
         _MACMemCopyAsync
           _MACGet
           _MACPut
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGetDiv256
         _GetTickCopy
     _UpdateMasterVolume
       _RefreshLine1
         _RefreshLine1Ex
           _PutsSLCD
             _BusySLCD
               _DelayFor18TCY
             _WriteDataSLCD
               _DelayFor18TCY
           _SLCDSetDDRamAddr
             _BusySLCD
               _DelayFor18TCY
             _WriteCmdSLCD
               _DelayFor18TCY
       _SendVolumeToDevice
         _SendDataToDeviceCh
           _DbToCode
             ___ftadd
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lwtoft
               ___ftpack
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _UpdateSampleRate
       _RefreshLine2Ex
         _PutsSLCD
           _BusySLCD
             _DelayFor18TCY
           _WriteDataSLCD
             _DelayFor18TCY
         _SLCDSetDDRamAddr
           _BusySLCD
             _DelayFor18TCY
           _WriteCmdSLCD
             _DelayFor18TCY
     _memcpy
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _memset
   _UpdateMasterVolume
     _RefreshLine1
       _RefreshLine1Ex
         _PutsSLCD
           _BusySLCD
             _DelayFor18TCY
           _WriteDataSLCD
             _DelayFor18TCY
         _SLCDSetDDRamAddr
           _BusySLCD
             _DelayFor18TCY
           _WriteCmdSLCD
             _DelayFor18TCY
     _SendVolumeToDevice
       _SendDataToDeviceCh
         _DbToCode
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lwtoft
             ___ftpack
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _UpdateSampleRate
     _RefreshLine2Ex
       _PutsSLCD
         _BusySLCD
           _DelayFor18TCY
         _WriteDataSLCD
           _DelayFor18TCY
       _SLCDSetDDRamAddr
         _BusySLCD
           _DelayFor18TCY
         _WriteCmdSLCD
           _DelayFor18TCY
   _WriteCmdSLCD
     _DelayFor18TCY

 _ISRLP (ROOT)
   _ChangeMasterVolume
     i2_UpdateMasterVolume
       i2_RefreshLine1
         i2_RefreshLine1Ex
           i2_PutsSLCD
             i2_BusySLCD
               i2_DelayFor18TCY
             i2_WriteDataSLCD
               i2_DelayFor18TCY
           i2_SLCDSetDDRamAddr
             i2_BusySLCD
               i2_DelayFor18TCY
             i2_WriteCmdSLCD
               i2_DelayFor18TCY
       i2_SendVolumeToDevice
         i2_SendDataToDeviceCh
           i2_DbToCode
             i2___ftadd
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___fttol
               i2___ftadd (ARG)
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lwtoft
               i2___ftpack
       i2___awtoft
         i2___ftpack
       i2___ftdiv
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2_sprintf
         i2___awdiv
           i2___awmod (ARG)
         i2___ftadd
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftge
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
         i2___ftsub
           i2___ftadd
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol
           i2___ftadd (ARG)
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv
         i2___llmod
         i2___lltoft
           i2___ftpack
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_
         i2__tdiv_to_l_
         i2_fround
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit
         i2_scale
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
   _IRTimerInt
     _ProcessIRCode
       _ChangeMasterVolume
         i2_UpdateMasterVolume
           i2_RefreshLine1
             i2_RefreshLine1Ex
               i2_PutsSLCD
                 i2_BusySLCD
                   i2_DelayFor18TCY
                 i2_WriteDataSLCD
                   i2_DelayFor18TCY
               i2_SLCDSetDDRamAddr
                 i2_BusySLCD
                   i2_DelayFor18TCY
                 i2_WriteCmdSLCD
                   i2_DelayFor18TCY
           i2_SendVolumeToDevice
             i2_SendDataToDeviceCh
               i2_DbToCode
                 i2___ftadd
                   i2___ftmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftpack (ARG)
                         i2___lwtoft (ARG)
                           i2___ftpack
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lwtoft
                   i2___ftpack
           i2___awtoft
             i2___ftpack
           i2___ftdiv
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
           i2_sprintf
             i2___awdiv
               i2___awmod (ARG)
             i2___ftadd
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
             i2___ftsub
               i2___ftadd
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___lltoft (ARG)
                 i2___ftpack
             i2___fttol
               i2___ftadd (ARG)
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lldiv
             i2___llmod
             i2___lltoft
               i2___ftpack
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2__div_to_l_
             i2__tdiv_to_l_
             i2_fround
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_isdigit
             i2_scale
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
       i2_TickGet
         i2_GetTickCopy
       i2_memcmp
     i2_memset
   _ProcessIRInt
     _ReInitTimer
     i2_TickGet
       i2_GetTickCopy
   _TickUpdate
   i2_Delay1KTCYx
   i2_SaveToFlash
     i2_EraseFlash
     i2_FindEmpty
       i2_ReadFlash
     i2_GetCheckSum
     i2_ReadFlash
     i2_RefreshLine1
       i2_RefreshLine1Ex
         i2_PutsSLCD
           i2_BusySLCD
             i2_DelayFor18TCY
           i2_WriteDataSLCD
             i2_DelayFor18TCY
         i2_SLCDSetDDRamAddr
           i2_BusySLCD
             i2_DelayFor18TCY
           i2_WriteCmdSLCD
             i2_DelayFor18TCY
     i2_RefreshLine1Ex
       i2_PutsSLCD
         i2_BusySLCD
           i2_DelayFor18TCY
         i2_WriteDataSLCD
           i2_DelayFor18TCY
       i2_SLCDSetDDRamAddr
         i2_BusySLCD
           i2_DelayFor18TCY
         i2_WriteCmdSLCD
           i2_DelayFor18TCY
     i2_WriteBlockFlash
     i2_memcmp
   i2_TickGet
     i2_GetTickCopy
   i2_UpdateSampleRate
     i2_RefreshLine2Ex
       i2_PutsSLCD
         i2_BusySLCD
           i2_DelayFor18TCY
         i2_WriteDataSLCD
           i2_DelayFor18TCY
       i2_SLCDSetDDRamAddr
         i2_BusySLCD
           i2_DelayFor18TCY
         i2_WriteCmdSLCD
           i2_DelayFor18TCY

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            E7D      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0     100      13      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      14      11        7.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     53      9E       5       98.8%
BITBANK14l          7E      0       0      33        0.0%
BANK14l             7E      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     40C      29        0.0%
DATA                 0      0     40C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Mar 11 21:03:42 2015

            _s_dacSettingsOriginal 0300                 SaveToFlash@success 013A  
          GetMaxSegSizeOption@wMSS 010A                __end_of_GetCheckSum B288  
              IPGetHeader@protocol 0136                        ?_ARPResolve 0120  
                     MACGetArray@w 0104                         i2_PutsSLCD AE24  
                      ?_ARPProcess 0001               __size_of_WritePHYReg 0034  
                               l59 B7F8               ??i2_UpdateSampleRate 0006  
           TCPProcess@pseudoHeader 018B                       ___awdiv@sign 010B  
              ___wmul@multiplicand 0110                      _InitAppConfig 88C2  
            ?_CalcIPBufferChecksum 0106                i2WriteDataSLCD@data 0001  
                       i2___awtoft B132                         i2___ftpack A122  
                   ?i2_SaveToFlash 0001                       __CFG_CP0$OFF 000000  
                     ___ftadd@exp1 0138                       ___ftadd@exp2 0137  
                       i2___lltoft AEE0                     _CalcIPChecksum 8EEE  
                     ?_MACPutArray 0100                      ??_ReInitTimer 0001  
                     ___ftadd@sign 0136                                l257 8BEE  
                              l353 7288                                l345 71CC  
                              l290 884C                                l348 7204  
                              l276 9562                                l373 AEC6  
                              l349 723A                                l285 87BC  
                              l542 6FF8                                l287 87CE  
                              l369 AE98                                l546 710A  
   GenerateRandomDWORD@dwTotalTime 0120                                l477 8EB8  
                              l399 B4B6                                l719 79DC  
                              l479 8EC8                                l882 5C76  
                              l884 5C68                                l980 564A  
                       i2___lwtoft B776                                l878 5C18  
                              l976 54C4                                l977 54E8  
            TCPProcess@optionsSize 018A                   ARPResolve@packet 0132  
                              fsr2 000FD9              __size_of_WriteCmdSLCD 0024  
                     ___awmod@sign 0105                     ??_MACGetHeader 0122  
                              prod 000FF3                                wreg 000FE8  
                     __CFG_FOSC$HS 000000                     MACGetArray@len 0102  
                   MACGetArray@val 0100                     DbToCode@volume 0148  
       __end_of_UpdateMasterVolume 9FCC                SendTCP@pseudoHeader 0136  
              _s_encoderLastUpdate 00D5                    ?i2_RefreshLine1 0001  
                    ?_MACPutHeader 0104                    __end_of_ARPInit B694  
                  __end_of_MACInit 8CEA                     ??_MACDiscardRx 0100  
              __end_of_GetTickCopy B48A                       ___ftdiv@cntr 0115  
                     ___ftdiv@sign 011A                       __CFG_WDT$OFF 000000  
                             l1031 6880                               l1310 0148  
                             l1224 31E2                               l1312 01BC  
                             l1304 00BC                               l2112 A562  
                             l1305 00C8                               l2113 A50C  
                             l1218 3192                               l2114 A528  
                             l1307 00F0                               l1163 1F80  
                             l1237 340C                               l1413 1686  
                             l1414 169E                               l1407 1540  
                             l1351 08A4                               l1335 05E0  
                             l1184 20BA                               l2129 ADEE  
                             l1345 06D4                               l2145 840C  
                             l2073 F7CC                               l1506 B456  
                             l1295 7F2E                               l1703 44A6  
                             l1368 0D50                               l1704 44E0  
                             l1377 0ED8                               l1705 4516  
                             l1706 4570                               l2531 4DD2  
                             l1707 45E8                               l2540 4EBC  
                             l2381 B99C                               l2525 4D70  
                             l1709 4600                               l2374 B8C2  
                             l2560 7CC6                               l2456 5ADC  
                             l2529 4DAA                               l2549 4EE6  
                             l2653 98A8                               l2574 64E8  
                             l2663 A300                               l2567 63F4  
                             l1880 5DD2                               l2568 6440  
                             l1890 5EB8                               l1882 5E00  
                             l1699 4396                               l1796 75A4  
                             l1892 5EE6                               l1884 5E2E  
                             l1894 5F14                               l1886 5E5C  
                             l1895 5F16                               l1879 5DA6  
                             l2599 B516                               l1888 5E8A  
                   ?_MACSetReadPtr 0100                               l9910 71AA  
                             l9904 7170                               l9908 71A2  
                             l9916 71DC              __size_ofi2__div_to_l_ 0168  
                             l9870 ABD2                               l9862 AEB0  
                             STR_1 FFF7                               l9864 AECA  
                             l9944 72C8                               l9928 727C  
                             l9880 FFCA                               l9960 8B1C  
                             STR_2 FFD7                               STR_3 FFC6  
                             l9970 8BAE                               l9962 8B48  
                             l9954 8AF4                               STR_4 FFB5  
                             STR_5 FF93                               l9876 AC0E  
                             l9884 FFE2                               l9980 8BD8  
                             STR_6 FFA4                               STR_7 FFE8  
                             l9974 8BBE                               l9966 8B6E  
                             l9958 8B08                               STR_8 FF60  
                             STR_9 FF4F                               l9968 8B9A  
                             l9898 7156                               _LATA 000F89  
                             _LATB 000F8A                               _LATC 000F8B  
                             _LATD 000F8C                               _LATE 000F8D  
                    __CFG_DEBUG$ON 000000                               _LOGS FE35  
                             i2l59 B83C             i2EraseFlash@flash_addr 000A  
                     __CFG_STVR$ON 000000                    __end_of_TCPInit 5D0E  
             __end_of_HandleTCPSeg 1832                    __end_of_TCPOpen 6124  
                  __end_of_TCPTick 22F8              FormatNetBIOSName@Name 0105  
                             _main B340             __end_of_MACSetWritePtr BA0E  
                     ___ftpack@arg 0100                       ___ftpack@exp 0103  
                 i2sprintf@vd_9351 006D                     ??_MACIsTxReady 010D  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             indf0 000FEF                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9           MACMemCopyAsync@WriteSave 010D  
                     i2___ftadd@f1 002E                       i2___ftadd@f2 0031  
                             pclat 000FFA                       i2___ftge@ff1 0001  
                     i2___ftge@ff2 0004             __size_of_WriteDataSLCD 0022  
         GenerateRandomDWORD@wTime 0130                               prodh 000FF4  
                             prodl 000FF3               RestoreFromFlash@addr 011D  
                             start 01B2                      __CFG_IESO$OFF 000000  
                     i2___ftdiv@f1 000D                       i2___ftdiv@f2 0010  
                     i2___ftdiv@f3 0017                      __CFG_FOSC2$ON 000000  
                  __end_ofi2_scale FFC8          __size_of_SLCDSetDDRamAddr 001A  
                     i2___ftneg@f1 0001                       i2___awtoft@c 0009  
                     _sprintf$9349 0158                   MACGetHeader@type 0120  
              __end_of_CloseSocket 9CC4                       ___ftmul@cntr 0121  
                     i2___ftmul@f1 0015                       i2___ftmul@f2 0018  
                     ___ftmul@sign 0122                    _dwInternalTicks 00D1  
                      ?_TCPRAMCopy 011E                       i2___ftsub@f1 003A  
                     i2___ftsub@f2 003D                       i2___fttol@f1 003A  
                  __end_of_InitrIR AB4A      __size_ofi2_SendVolumeToDevice 0016  
                     ___fttol@exp1 0147                    __end_of_SendTCP 35FE  
                     i2___lltoft@c 0009                       ___fttol@lval 0143  
                     _WriteCmdSLCD B752                   __end_of_MACFlush B3B2  
                  __end_of_TickGet B6E0                     ?_InitAppConfig 0001  
                 ?i2_DelayFor18TCY 0001                     TCPGetArray@len 0128  
           __end_of_CalcIPChecksum 8FE4              i2SendDataToDeviceCh@i 0073  
            i2SendDataToDeviceCh@v 0070                        ?i2_DbToCode 0049  
                      _Delay1KTCYx B998          TCPInit@wCurrentETHAddress 013F  
                            l11000 5278                              l11004 528E  
                            l11100 9476               i2FindEmpty@startAddr 0011  
                            l10302 920A                              l11014 52D4  
                            l10312 924E                              l10320 9290  
                            l11040 5380                              l11024 5318  
                            l12000 5E30                              l11120 9DEE  
                            l11112 9DBA                              l10314 9268  
                            l10306 9224                              l10226 B384  
                            l10402 7798                              l11050 53BE  
                            l11018 52F0                              l11122 9DFA  
                            l10316 9284                              l10308 9236  
                            l10324 92A2                              l10340 4DB8  
                            l11036 5368                              l11028 5330  
                            l11044 53A0                              l12012 5EBA  
                            l12004 5E5E                              l11124 9E00  
                            l11132 9E32                              l11116 9DDC  
                            l10246 A7B2                              l10254 B098  
                            l10334 4D7E                              l10422 7820  
                            l12022 5F20                              l12102 635A  
                            l10264 9718                              l13000 0CD6  
                            l10432 786A                              l10408 77D2  
                            l12016 5EE8                              l12008 5E8C  
                            l11080 9412                              l11136 9E46  
                            l11128 9E24                              l10282 8F5E  
                            l10362 4E3E                              l10346 4DC8  
                            l10426 783E                              l10450 7622  
                            l11082 941E                              l11074 93F4  
                            l12042 49F6                              l12034 48DE  
                            l13020 0DDA                              l10364 4E52  
                            l10356 4E0A                              l10436 7888  
                            l12204 5ABE                              l12140 64A8  
                            l12108 639A                              l11092 9454  
                            l11084 9424                              l11068 93CC  
                            l10286 8F9C                              l10278 8F26  
                            l13110 1202                              l10382 4F10  
                            l10374 4E9E                              l10366 4E5E  
                            l12222 9946                              l12206 5AD6  
                            l12062 3F14                              l10296 91CC  
                            l11512 820A                              l12400 A816  
                            l13112 120C                              l13040 0E46  
                            l13032 0E0C                              l10392 4F5E  
                            l10376 4EB2                              l10368 4E6A  
                            l10480 7720                              l10472 76E6  
                            l12136 648C                              l11096 9462  
                            l12080 41EE                              l12056 3E16  
                            l10298 91F2                              l13202 1808  
                            l13130 1458                              l14010 1E86  
                            l10482 7726                              l12218 9900  
                            l12242 9814                              l12162 596E  
                            l12146 64CA                              l12074 40F0  
                            l12066 3F46                              l11612 B3D4  
                            l10812 B8FA                              l11700 2E04  
                            l13204 1824                              l13132 1490  
                            l14020 1F26                              l14004 1E52  
                            l10468 76CA                              l12228 998A  
                            l12244 982C                              l12156 591A  
                            l12148 64E2                              l12092 B60A  
                            l11630 9C36                              l13142 154A  
                            l13118 127C                              l14110 22F0  
                            l14022 1F3A                              l10486 774C  
                            l10478 7708                              l12254 988E  
                            l12246 9832                              l12270 A2E6  
                            l12262 A284                              l11608 B3C0  
                            l10920 AD4C                              l11560 7076  
                            l13232 B25E                              l10832 AF9E  
                            l11712 2E84                              l13144 1588  
                            l13136 14AE                              l13128 13D2  
                            l13152 166A                              l13048 0E9E  
                            l12440 8790                              l14040 1F98  
                            l10824 AC60                              l13312 838C  
                            l12264 A29C                              l12184 5A30  
                            l12176 59D4                              l10914 AD2C  
                            l11546 6FEC                              l11810 3302  
                            l13146 1592                              l14050 1FA6  
                            l14018 1F22                              l10818 AC26  
                            l13322 83E0                              l12602 9A7A  
                            l12266 A2A2                              l12194 5A80  
                            l13402 F1B8                              l11580 B0F8  
                            l12460 A924                              l12700 3880  
                            l10860 95FE                              l10852 95DA  
                            l11740 3044                              l11732 2F86  
                            l11724 2F4A                              l11708 2E64  
                            l11716 2EC0                              l13172 176E  
                            l13092 1120                              l13076 0FA8  
                            l12524 8D08                              l14060 1FCA  
                            l14036 1F8A                              l14028 1F72  
                            l13316 83A6                              l12612 9AD2  
                            l14204 6062                              l14220 611A  
                            l12276 AA64                              l15100 446E  
                            l11574 7104                              l13238 B276  
                            l10838 AFEC                              l12390 B0DC  
                            l10870 7D36                              l12622 361C  
                            l11910 7EB6                              l11902 7E88  
                            l11830 3400                              l11822 3396  
                            l11806 32E8                              l11814 331A  
                            l13182 17B2                              l13166 16D4  
                            l14134 6B58                              l12446 87AE  
                            l12534 8D44                              l12526 8D0E  
                            l13270 753E                              l13342 8428  
                            l14214 6104                              l12278 AA7C  
                            l12198 5A9C                              l13502 F63A  
                            l13414 F20E                              l13406 F1BE  
                            l12464 A942                              l12456 A906  
                            l10960 9646                              l10872 7D42  
                            l11904 7EA6                              l11728 2F6A  
                            l13192 17EE                              l13088 10E8  
                            l12544 8D82                              l12536 8D4C  
                            l14056 1FB2                              l14064 1FD8  
                            l13264 74E8                              l13344 8450  
                            l14216 6114                              l14224 6120  
                            l14304 567C                              l13440 F34A  
                            l13424 F272                              l13408 F1F2  
                            l11586 B116                              l12466 A94C  
                            l11594 A08A                              l10890 7DE8  
                            l10882 7D92                              l10866 7D1C  
                            l11834 3428                              l11818 3324  
                            l11762 3124                              l11746 30A8  
                            l11754 30EE                              l11690 2DB0  
                            l13194 17F6                              l13178 1782  
                            l12546 8D8A                              l12554 8DA4  
                            l14082 211A                              l14066 2018  
                            l13282 7590                              l13290 9CC6  
                            l14322 672A                              l14234 B650  
                            l13602 FA1A                              l13506 F65A  
                            l13514 F67A                              l11588 B11C  
                            l12468 A950                              l10964 96CC  
                            l12476 5B46                              l10884 7DA4  
                            l10892 7DF2                              l12732 3A6C  
                            l11940 7F38                              l11852 34AC  
                            l11780 320E                              l14148 6C30  
                            l12548 8D92                              l14084 2128  
                            l14092 213A                              l13276 7554  
                            l14340 6820                              l14332 67D8  
                            l12572 89EA                              l13620 FAC6  
                            l13524 F6BA                              l13452 F3E4  
                            l13372 F03C                              l13364 F020  
                            l14420 A202                              l14412 A1EE  
                            l14404 A1DC                              l15132 45F8  
                            l15052 426C                              l15044 4222  
                            l11598 A0CE                              l11782 3252  
                            l11766 3148                              l11758 3106  
                            l11678 2D98                              l12830 0272  
                            l13278 7568                              l14182 5FAA  
                            l13702 AF6A                              l13622 FAD2  
                            l13614 FA82                              l13550 F7D0  
                            l13534 F76E                              l14502 9F96  
                            l15150 46F6                              l15070 4350  
                            l15142 466A                              l12496 5C56  
                            l12728 3A64                              l12648 370A  
                            l12664 37C0                              l11928 7F00  
                            l11696 2DD6                              l12904 05EA  
                            l14088 2132                              l13296 9D5E  
                            l14336 67F0                              l14184 5FB6  
                            l12592 8A9E                              l12584 8A18  
                            l14280 5546                              l13624 FADC  
                            l13632 FB06                              l13616 FA8E  
                            l13608 FA4A                              l13560 F804  
                            l13536 F77C                              l13544 F79C  
                            l13480 F530                              l13464 F492  
                            l13456 F42A                              l13448 F3B8  
                            l13392 F138                              l13640 FB3C  
                            l15136 4632                              l15144 46AC  
                            l12498 5C6A                              l11970 AE02  
                            l15170 6EC4                              l12762 3C54  
                            l11954 7F78                              l12914 0652  
                            l12850 0328                              l12842 02AA  
                            l13298 9D6A                              l14194 5FE6  
                            l14178 5F8A                              l14258 5488  
                            l10994 5252                              l13642 FB62  
                            l13378 F07C                              l13386 F106  
                            l15090 4408                              l14700 A604  
                            l15180 6F50                              l12668 37C6  
                            l11956 7F84                              l11868 35A0  
                            l12932 07A2                              l12916 0658  
                            l14460 4AC8                              l14292 55F6  
                            l13660 7C1E                              l13564 F856  
                            l13484 F598                              l13468 F4BE  
                            l13396 F188                              l14436 A224  
                            l14428 A214                              l15156 4706  
                            l15182 6F64                              l12766 3C5A  
                            l12694 3872                              l12926 0794  
                            l12934 07B4                              l12846 02B6  
                            l12838 0286                              l13910 1868  
                            l14710 9B34                              l13654 7BE4  
                            l13398 F1A6                              l14446 A238  
                            l15086 43D0                              l13840 80C6  
                            l12688 3858                              l12952 09DA  
                            l12880 055C                              l14480 4BE2  
                            l11992 5DD4                              l13680 7C7E  
                            l13576 F966                              l14448 A25C  
                            l13818 801A                              l13850 790C  
                            l12962 0ACA                              l12874 04E4  
                            l13922 18D4                              l14714 9B60  
                            l11978 5D1A                              l13594 F9BE  
                            l13578 F974                              l13586 F994  
                            l13498 F5EA                              l13828 8076  
                            l12868 0424                              l13916 1884  
                            l14716 9B66                              l14492 4CF2  
                            l11996 5E02                              l13588 F9A0  
                            l14396 A1CC                              l13790 88BA  
                            l12982 0C2E                              l12958 0A76  
                            l12966 0B20                              l12798 0142  
                            l13934 197E                              l14726 9BE8  
                            l14486 4CC6                              l13598 F9E6  
                            l13856 7942                              l12984 0C32  
                            l12896 05CC                              l12888 05B2  
                            l13928 1924                              l12994 0C9E  
                            l12978 0C22                              l12986 0C36  
                            l14692 A5E4                              l14684 A5C2  
                            l13868 799E                              l13788 88AC  
                            l13972 1C9C                              l13964 1C72  
                            l15900 B370                              l13798 7F94  
                            l13888 B1F6                              l14696 A5F4  
                            l14688 A5D4                              l13992 1D70  
                            l13968 1C7A                              l13998 1DBE  
                            l15884 B34E                    __end_of_SyncTCB 9710  
                            ?_main 0001                   __end_of_LFSRRand 97E6  
                  __end_of___awdiv 9480                    __end_of___ftadd 4F84  
                            STR_10 FF71                              STR_11 FF3E  
                            STR_12 FF2D                              STR_13 FF82  
                  __end_of___awmod 9E50                    __end_of___ftdiv 7D02  
                            _CMCON 000FB4                    __end_of___ftneg B524  
                     i2___lwtoft@c 0009                    __end_of___lldiv 98BA  
                            u10120 AC00                              u10127 ABF6  
                            u11031 75FA                              u11050 764E  
                  __end_of___ftmul 78D4                              u11055 7644  
                            _T0CON 000FD5                              u10290 BA58  
                  ___awdiv@divisor 0108            __size_ofi2_WriteCmdSLCD 0022  
                  __end_of___llmod A312                    __end_of___ftsub B340  
                            u11620 AC56                              u14005 37B8  
                  __end_of___fttol 775E                              u11630 AC86  
                            u13311 6332                              u13400 58EE  
                            u14105 3A08                              u10761 4D1C  
                            u11627 AC4C                              u10771 4D3C  
                            u13331 6372                              u13420 5942  
                            u11637 AC7C                              u13405 58E2  
                            u15015 1754                              u15120 9CFA  
                            u16001 808C                              u15025 17D8  
                            u14225 017A                              u15105 757A  
                            u13425 5936                              u14330 04DE  
                            u10971 7776                              u15140 9D42  
                  ??_ARPIsResolved 0104                              u14325 046A  
                            u12575 7088                              u11695 95EC  
                            u13711 87A2                              u15127 9CF0  
                            u10991 77B0                              u14435 0610  
                            u14275 02D0                              u15147 9D38  
                            u14380 05AC                              u15340 F2C2  
                            u15165 8348                              u15325 F24C  
                            u16230 1C8E                              u14455 077C  
                            u15175 8364                              u12945 333E  
                            u12785 306E                              u14625 0CC4  
                            u14545 0A90                              u15345 F2B6  
                            u14555 0AE4                              u13915 9A9C  
                            u16236 1C90                              _ERDPT 000F7A  
                            u14725 0E3C                              u13685 86DC  
                            u15701 7BC2                              u14735 0E94  
                            u14495 0920                              u13695 8706  
                            u16265 1D36                              u15721 7BFC  
                            u14675 0D88                              u16295 1E48  
                            u13895 8A32                              u16801 4CD8  
                            u16590 B666                              u16495 6B4E  
                            u17640 452A                              u15961 8000  
           ??i2_SendDataToDeviceCh 0054                              u17635 4520  
                            u16780 4BD6                              u17636 4522  
                            u17646 452C                              u15991 8068  
                            u17681 6F36                              u15985 804A  
                            u16786 4BD8                              _MICMD 000EB2  
                            u17691 6F48                              u18677 B99E  
                            u18687 B8CA                              _ERXND 000EEA  
                            _MIRDH 000EB9                              _ETXND 000EE6  
                            _MIRDL 000EB8                              _ERXST 000EE8  
                  ___awdiv@counter 010A                              _EWRPT 000EE2  
                            _ETXST 000EE4                              _ISRLP 0008  
                            _TMR0H 000FD7                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _PORTC 000F82  
                     i2__div_to_l_ 7A42                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TRISF 000F97                              _TRISG 000F98  
                            _Cache 00BD              __size_of_Delay10KTCYx 001C  
       __size_of_FormatNetBIOSName 0082                              _MyTCB 01B9  
                       i2memcmp@s1 0001                         i2memcmp@s2 0003  
                     ___lltoft@exp 0110                     __CFG_FCMEN$OFF 000000  
                 __end_of_TCPClose B7BC           i2UpdateMasterVolume@dvol 0059  
                 __end_of_TCPFlush B1C0                     ??_MACPutHeader 0109  
                       _EraseFlash A4F4                         i2isdigit@c 0003  
                    ___awtoft@sign 010B                         i2memset@p1 0001  
                       SendTCP@len 0134                              _flags 01B6  
               __size_of_TCPServer 04FE                    __end_of_dpowers FEBD  
              __end_of_ReInitTimer B9E8                         i2scale@scl 002A  
                      ?_IRTimerInt 0001                        ?_TCPProcess 017E  
                 __end_of_DbToCode 5462                              _resOK 00F7  
                            _scale 3C5E               CalcIPChecksum@buffer 0100  
                  __end_of_isdigit B614              TCPInit@ptrBaseAddress 0139  
                    ___ftpack@sign 0104            __size_of_TCPIsConnected 002A  
                            _swapl B204                              _swaps B884  
          IPGetHeader@CalcChecksum 013E                __size_of_ARPResolve 0102  
                      ?i2_BusySLCD 0001                __size_of_ARPProcess 0146  
                            tablat 000FF5                   __end_ofi2___ftge A73C  
                TCPRAMCopy@wLength 0124                 __size_ofi2_TickGet 0026  
                 __end_ofi2___wmul B72C              RestoreFromFlash@chSum 011C  
                ?_UpdateSampleRate 0001                              status 000FD8  
            __end_of_SETTINGS_ADDR FF15               i2ReadFlash@num_bytes 0005  
                  ?_MACSetWritePtr 0100                    __end_of_sprintf FB78  
                      _GetCheckSum B246                       ?_IPGetHeader 0132  
                 __end_ofi2_memcmp A456              i2ReadFlash@flash_addr 0009  
                   SaveToFlash@cmp 0138                   __end_ofi2_memset B640  
                 __end_ofi2_fround 51FA            MACSetReadPtrInRx@ReadPT 0104  
                    i2___ftdiv@exp 001A        MACDiscardRx@NewRXRDLocation 0100  
               __size_ofi2___awdiv 00A4                 ??_UpdateSampleRate 0105  
                TCPRAMCopy@ptrDest 011E                 __size_ofi2___ftadd 01AC  
                  ARPProcess@smARP 01B3                 __size_ofi2___awmod 0090  
               __size_ofi2___ftdiv 00E2                      _sprintf$10827 0155  
               __size_ofi2___ftneg 0026                 __size_ofi2___lldiv 0082  
               __size_ofi2___ftmul 00F0                 __size_ofi2___llmod 0066  
               __size_ofi2___ftsub 0036                 __size_ofi2___fttol 00F6  
                   __CFG_ETHLED$ON 000000               GenerateRandomDWORD@w 011E  
                     ARPPut@packet 011E                       __end_of_LOGS FE95  
                  __initialization A9DC                  i2___lldiv@divisor 0005  
                 _MACIsMemCopyDone BA50               i2ReadFlash@startaddr 0001  
               _FindMatchingSocket 35FE                       __end_of_main B37A  
                i2___lldiv@counter 000D                      i2___ftmul@exp 001E  
                 __end_of_BusySLCD B800                _GenerateRandomDWORD 6F8A  
             _s_lastIRCodeReceived 00D9               _SerializedMACAddress FF19  
                      ?i2_PutsSLCD 0002                 _SendVolumeToDevice B940  
                  ??i2_SaveToFlash 0029             ??_CalcIPBufferChecksum 0108  
          MACSetReadPtrInRx@offset 0100                       _Delay10KTCYx B8BE  
            __size_of_DelayPORSLCD 0008                    ?_CalcIPChecksum 0100  
               __size_ofi2_isdigit 0020                      ??_SaveToFlash 0128  
                ?i2_RefreshLine1Ex 0004                  ?i2_RefreshLine2Ex 0004  
                      ?i2___awtoft 0009                        ?i2___ftpack 0001  
                TCPIsPutReady@hTCP 0125                  _MACCalcRxChecksum A7C8  
                 __end_of_OpenSLCD A61C                        ?i2___lltoft 0009  
                           ??_main 01B3                      ___fttol@sign1 0142  
              ?_FindMatchingSocket 0128                    TCPGetArray@hTCP 012E  
               ??i2_RefreshLine1Ex 0006                 ??i2_RefreshLine2Ex 0006  
                   _s_numTicksDiff 0400                        ?i2___lwtoft 0009  
                 __end_of_TickInit B9C0                      __activetblptr 000003  
                    _WriteDataSLCD B7BC                        _GetTickCopy B456  
                       i2sprintf@c 0086                         i2sprintf@f 004B  
                   _s_numTicksPrev 00DD                 ?_MACCalcRxChecksum 0128  
                    ?_LFSRSeedRand 010F                             ?_ISRLP 0001  
                        ??_ARPInit 0100                 __size_of_FindEmpty 0184  
              ?_SendVolumeToDevice 0001                          ??_MACInit 0104  
               __size_ofi2_sprintf 0A8A                    CalcIPChecksum@i 0106  
             __size_of__tdiv_to_l_ 01E0                             ISRLP@d 00B2  
                 FindEmpty@tmpAddr 0126                  TCPServer@cmdBytes 0188  
               __size_of_Configure 0068                   __end_of_PutsSLCD AC8E  
                  ??_MACSetReadPtr 0102                  TCPServer@checksum 0187  
                        ??_TCPInit 0132                _GetMaxSegSizeOption 7E4C  
                        ??_TCPOpen 015E                          ??_TCPTick 0157  
             ?_GenerateRandomDWORD 0118                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                   _IR_VOLUME_DOWN FF1F                   ___llmod@dividend 0100  
                           ?_scale 0123                ??_MACCalcRxChecksum 012C  
                           _EECON2 000FA7                __size_of_TCPRAMCopy 00EA  
                     ?_TCPGetArray 0126                             _EDMAND 000EF2  
                 ___awdiv@dividend 0106                             _EDMAST 000EF0  
            __end_of_TCPIsGetReady 9B30                   __end_of___awtoft AF96  
                 __end_of___ftpack 8BE6                             ?_swapl 0100  
                           _MAADR1 000E84                             _MAADR2 000E85  
                           ?_swaps 0100                             _MAADR3 000E82  
                           _MAADR4 000E83                             _MAADR5 000E80  
                           _MAADR6 000E81        __size_of_ChangeMasterVolume 003E  
                           _MACON1 000EA0                             _MACON3 000EA2  
                           _MACON4 000EA3                             _MAIPGH 000EA7  
                           _ERDPTH 000F7B                             _MAIPGL 000EA6  
                           _ERDPTL 000F7A                             _MACGet BA68  
                 __end_of___lltoft AADA                             _ARPPut 820A  
                           _MACPut BA42                             i2l2112 ABA2  
                           i2l2113 AB60                             i2l2114 AB7A  
                EraseFlash@endaddr 0104                             i2l2073 2A1A  
                           i2l2129 B01A                             i2l2145 9A26  
                           i2l1506 B4BE           __size_ofi2_WriteDataSLCD 0020  
                           i2l2540 6D54                             i2l2525 6C7C  
                           i2l2381 BA34                             i2l2560 9530  
                           i2l2456 7B98                             i2l2529 6CA8  
                           i2l1667 011A                             i2l1668 011E  
                           i2l2549 6D70                             i2l2653 A9CA  
                           i2l2574 81F8                             i2l2663 ADB2  
                           i2l2567 8166                             i2l1880 65A8  
                           i2l2568 818E                             i2l1890 6670  
                           i2l1882 65D0                             i2l1892 6698  
                           i2l1884 65F8                             i2l1796 855E  
                           i2l1894 66C0                             i2l1886 6620  
                           i2l1895 66C2                             i2l1879 6582  
                           i2l2599 B744                             i2l1888 6648  
                           i2l1986 938A                             _INTCON 000FF2  
                           _TABLAT 000FF5                             i2l9710 6D22  
                           i2l9704 6D08                             i2l9570 A168  
                           i2l9562 A132                             i2l9706 6D12  
                           i2l9810 907A                             i2l9724 6D8C  
                           i2l9716 6D44                             i2l9708 6D1A  
                           i2l9820 90A2                             i2l9574 A17E  
                           i2l9566 A140                             i2l9734 6DBC  
                           i2l9718 6D4E                             i2l9750 9126  
                           i2l9822 90AE                             i2l9814 908A  
                           i2l9576 A19C                             i2l9568 A14A  
                           i2l9744 9100                             i2l9824 90B2  
                           i2l9578 A1A6                             i2l9682 6CB6  
                           i2l9676 6C8A                             i2l9764 9158  
                           i2l9828 90C8                             i2l9774 9180  
                           i2l9768 9168                             i2l9792 900E  
                           i2l9698 6CE6                             i2l9778 9190  
                           i2l9992 AE26                             i2l9986 B984  
                           i2l9998 AE5A                          ??i2_scale 0027  
                 __end_of___lwtoft B5E8                   ??_RefreshLine1Ex 0105  
                 ??_RefreshLine2Ex 0105                  _MACPutHeader$1874 0109  
              __size_ofi2_DbToCode 01D4                        _CloseSocket 9BFA  
             ??_FindMatchingSocket 012C                 __size_of_ReadFlash 0060  
                           u974_41 6C46                             u975_41 6C5A  
                           u995_41 90EA                             u997_41 9110  
                       _TickUpdate B8DA              __end_of_TCPDisconnect 8DEC  
            __end_of_IPSetRxBuffer B8BE               ??_SendVolumeToDevice 016C  
           __size_ofi2__tdiv_to_l_ 0132                          ??_InitrIR 0108  
             __size_of_MACGetArray 005C                       _DelayPORSLCD BA72  
                     ?_IPPutHeader 010E                          ??_SendTCP 0129  
                        ??_TickGet 0104                     __CFG_XINST$OFF 000000  
             __end_of_MACGetHeader 88C2                  IPPutHeader@header 0113  
                 __end_of__powers_ FF0B               ?_GetMaxSegSizeOption 0108  
                    _s_dacSettings 02D3                    ??_InitAppConfig 011E  
                           ___ftge 98BA                          ??_SyncTCB 0126  
                           ___wmul B3EA                       ?i2_FindEmpty 0011  
       __end_of_SendDataToDeviceCh 5F2C                          ??___awdiv 010A  
                __end_of_TCPServer 471E                          ??___ftadd 0133  
                        ??___awmod 0104                  IPPutHeader@remote 010E  
                        ??___ftdiv 0112                          ??___ftneg 0103  
                        ??___lldiv 0108          __end_of_MACCalcRxChecksum A850  
                        ??___ftmul 011A                          ??___llmod 0108  
                        ??___ftsub 013F                          ??___fttol 013D  
             __end_of_MACDiscardRx B0EA                    WritePHYReg@Data 0100  
                      SendTCP@wVal 0131                       ?_TCPPutArray 0157  
              __size_of_IRTimerInt 003E                __size_of_TCPProcess 01AE  
            __end_of_TCPIsPutReady 8ADC                             _memcmp 9CC4  
                           _memcpy ABB8                             _memset B3B2  
                           _fround 471E              __end_ofi2_Delay1KTCYx BA42  
                           clear_0 A9E4                             clear_1 A9F6  
                           clear_2 AA02                             clear_3 AA0E  
                 ___awdiv@quotient 010C        i2WriteBlockFlash@num_blocks 0005  
                  ___awmod@divisor 0102                     sprintf@vd_9351 0162  
              __size_ofi2_BusySLCD 0022              StackTask@cIPFrameType 01B1  
                  ___awmod@counter 0104                  __end_ofi2_TickGet B706  
                   ?_WriteDataSLCD 0001                     ??_LFSRSeedRand 0113  
                   i2___awdiv@sign 000C                             _strupr B0EA  
        __size_of_RestoreFromFlash 01A8              ___ftmul@f3_as_product 011E  
                      _ReInitTimer B9D4      GenerateRandomDWORD@wLastValue 012A  
             __end_of_MACIsTxReady AFF0         GetMaxSegSizeOption@vOption 010D  
               __size_of_StackInit 0044                          ??_isdigit 0100  
         __end_of_MACGetFreeRxSize 963A                 __size_of_StackTask 00CA  
                __end_ofi2___awdiv A3B6                  __end_ofi2___ftadd 6DE2  
                __end_ofi2___awmod A6AC                  __end_ofi2___ftdiv 9562  
                   i2___ftadd@exp1 0039                     i2___ftadd@exp2 0038  
                __end_ofi2___ftneg B752                  __end_ofi2___lldiv A9DC  
                __end_ofi2___ftmul 91CA                  __end_ofi2___llmod ADC4  
                __end_ofi2___ftsub B456                  __end_ofi2___fttol 90DA  
             __size_of_MACPutArray 0030                     i2___ftadd@sign 0037  
                     __mediumconst FE34                __end_of_SaveToFlash 4D04  
           __end_of_IR_VOLUME_DOWN FF23                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                    ?_RefreshLine1 0001                       ?i2_ReadFlash 0001  
                      ?_EraseFlash 0100              ??_GenerateRandomDWORD 011C  
            __size_of_HandleTCPSeg 1832                     i2___awmod@sign 0006  
                           swapl@v 0100                             swaps@b 0102  
                _s_numTicksDiffIdx 00E9                             swaps@t 0103  
                           swaps@v 0100                          ??_sprintf 014F  
                 ARPProcess@Target 00B3             SendDataToDeviceCh@mask 016A  
         i2SLCDSetDDRamAddr@DDaddr 0002                __size_ofi2_PutsSLCD 0060  
         __size_of_MACMemCopyAsync 01A2                    SaveToFlash@addr 0134  
                __end_ofi2_isdigit B864                     IPGetHeader@len 0138  
               MACGetHeader@header 0124                          ?_MACFlush 0001  
                   i2___ftdiv@cntr 0016             i2ReadFlash@flash_array 0007  
                       __accesstop 0060            __end_of__initialization AA56  
                   i2___ftdiv@sign 001B               i2GetCheckSum@dataLen 0003  
                       ___ftadd@f1 012D                         ___ftadd@f2 0130  
              __size_ofi2___awtoft 0048                __size_ofi2___ftpack 00A8  
                 ARPProcess@packet 0120                         ___ftge@ff1 0100  
                       ___ftge@ff2 0103              __end_ofi2_GetCheckSum B588  
                    i2sprintf@ccnt 0071                      i2sprintf@_val 0076  
                    i2sprintf@flag 007B                 FormatNetBIOSName@i 0107  
              __size_ofi2___lltoft 005C                      i2sprintf@fval 0081  
               MACGetHeader@remote 011E                          MACFlush@i 010C  
        HandleTCPSeg@wMissingBytes 017C      __size_ofi2_UpdateMasterVolume 009E  
                    i2sprintf@prec 0084                         ___ftdiv@f1 010C  
                       ___ftdiv@f2 010F                         ___ftdiv@f3 0116  
                __end_of_FindEmpty 75E2                          ?_LFSRRand 0100  
              __size_ofi2___lwtoft 0024              __end_of_SwapARPPacket A07A  
                __end_ofi2_sprintf 2D82                         ___ftneg@f1 0100  
                    __end_of_ISRLP 01B2                         ___awtoft@c 0108  
                   i2___ftpack@arg 0001                   _SLCDSetDDRamAddr B8F6  
            __end_of_ProcessIRCode 745E                 i2__tdiv_to_l_@exp1 000F  
                i2___llmod@divisor 0005                     i2___ftpack@exp 0004  
               i2__tdiv_to_l_@cntr 000E                  i2___llmod@counter 0009  
               i2__tdiv_to_l_@quot 000A                         ___ftmul@f1 0114  
                       ___ftmul@f2 0117              ??_GetMaxSegSizeOption 010A  
                       ___ftsub@f1 0139                         ___ftsub@f2 013C  
                       ___fttol@f1 0139                          MACPut@val 0100  
                   __pcstackCOMRAM 0001                     TCPIsPutReady@i 0126  
               i2___lldiv@dividend 0001                  __end_of_Configure ACF6  
         __size_of_WriteBlockFlash 0128               __end_of_MACPutHeader A7C8  
                     __pidataBANK0 BA5C                       __pidataBANK1 BA7A  
                        ?_TCPClose 0001                       ??_ARPResolve 0122  
                        ?_TCPFlush 0001                         ___lltoft@c 0108  
                   i2_sprintf$9349 0063                       ??_ARPProcess 0120  
                    _isdigit$10234 0101                     i2___ftmul@cntr 0022  
                    __end_of_scale 4220                     i2___ftmul@sign 0023  
          WriteBlockFlash@saddress 010D                          ?_DbToCode 0148  
                    __end_of_swapl B246                      __end_of_swaps B8A2  
              SendDataToDeviceCh@i 0169                SendDataToDeviceCh@v 0156  
               HandleTCPSeg@dwTemp 016B                     i2___fttol@exp1 0048  
                    ??_SyncTCBStub 011E                         ___lwtoft@c 0108  
                   i2___fttol@lval 0044                     i2_WriteCmdSLCD B800  
                     _HandleTCPSeg 0000                          ?i2___ftge 0001  
                __end_of_ReadFlash AE24                  FindEmpty@addrStop 011C  
                 ??i2_RefreshLine1 0006                          ?i2___wmul 000F  
                    i2__tdiv_to_l_ 80D8        i2WriteBlockFlash@write_byte 000C  
            __end_ofi2_GetTickCopy B4F2                         __div_to_l_ 58C6  
                          ??_ISRLP 0098                     ??_RefreshLine1 0105  
                        ?i2_memcmp 0001                          ?i2_memset 0001  
                        ?i2_fround 0024                          LFSRRand@i 010E  
                FindEmpty@blockEnd 0120            WriteBlockFlash@startptr 0108  
                  TCPPutArray@hTCP 0165              __end_of_SwapTCPHeader 631A  
                  __div_to_l_@exp1 010F                    __div_to_l_@cntr 010E  
                     sprintf@integ 0168                     _TCPIsConnected B640  
                  WriteCmdSLCD@cmd 0100                    TCPPutArray@data 0157  
                   TCPInit@wRXSize 013D                            ??_scale 0126  
                   i2___lltoft@exp 0011                     TCPInit@wTXSize 013B  
           __size_of_DelayFor18TCY 0032                    __div_to_l_@quot 010A  
                     sprintf@width 0172               StackTask@tempLocalIP 01AD  
                   TCPInit@vMedium 0141                          ISRLP@diff 00AA  
               i2___lldiv@quotient 0009                            ??_swapl 0104  
                          ??_swaps 0102                        __Identifier 00E7  
                       __pbssBANK0 00B3                         __pbssBANK1 01B3  
                       __pbssBANK2 0200                            ?_MACGet 0001  
                       __pbssBANK4 0400                          ?_BusySLCD 0001  
                          ?_ARPPut 011E                            ?_MACPut 0001  
           __size_of_TickGetDiv256 0026                        i2sprintf@ap 0067  
                      i2sprintf@vd 0069                        i2sprintf@sp 0049  
                 i2__tdiv_to_l_@f1 0001                   i2__tdiv_to_l_@f2 0004  
               __end_of_ARPResolve 8EEE                  WriteDataSLCD@data 0100  
                       ??_MACFlush 0108                 __end_of_ARPProcess 80D8  
       __end_ofi2_SLCDSetDDRamAddr B998                  i2Delay1KTCYx@unit 0001  
                      ?_TickUpdate 0001                          ?_OpenSLCD 0001  
              ReadFlash@flash_addr 0108                      __div_to_l_@f1 0100  
                    __div_to_l_@f2 0103                 _UpdateMasterVolume 9F12  
                       ??_LFSRRand 0102                  __end_of_StackInit B204  
                        ?_TickInit 0001     FindMatchingSocket@partialMatch 0136  
                __end_of_StackTask 9BFA                   i2GetCheckSum@res 0004  
                ??i2_WriteDataSLCD 0001         i2WriteBlockFlash@startaddr 0001  
             __size_of_IPGetHeader 016E                      ??_WritePHYReg 0102  
                     ??_TCPRAMCopy 0126                            ?___ftge 0100  
              __size_of_EraseFlash 0094                         ??_TCPClose 0157  
                          ?___wmul 010E                         ??_TCPFlush 0156  
                i2_WriteBlockFlash 998E                    _s_irCodeByteIdx 01B7  
                        ?_PutsSLCD 0101         __size_of_MACCalcRxChecksum 0088  
              ?_UpdateMasterVolume 0001               ProcessIRCode@numTick 0093  
           __end_ofi2_WriteCmdSLCD B822     HandleTCPSeg@bSegmentAcceptable 0164  
                  ??_WriteDataSLCD 0100                       ??i2_DbToCode 004B  
                       ??_DbToCode 014A                       ?_Delay1KTCYx 0001  
                          ?_memcmp 0100                            ?_memcpy 0114  
                          ?_memset 0100        __size_ofi2_UpdateSampleRate 0088  
                          ?_fround 0123                 ?i2_WriteBlockFlash 0001  
                        ?___awtoft 0108                            _EDMADST 000EF4  
                      _SaveToFlash 4A4A                          ?___ftpack 0100  
                        ?___lltoft 0108                     ?i2__tdiv_to_l_ 0001  
                          _MABBIPG 000EA4                         ??i2___ftge 0007  
                          u1001_41 8FF4                          ?___lwtoft 0108  
                          ?_strupr 0100                            u1140_41 8112  
                       ??i2___wmul 0013                            u1250_41 94B6  
                          u1138_41 80E8                            _EPKTCNT 000ED9  
                          u1248_41 9490                            _ARPInit B66A  
                          _MACInit 8BE6                            i2l10012 68F4  
                          i2l10100 A374                            i2l10022 6920  
                          i2l10110 A394                            i2l10102 A378  
                          i2l10032 6954                            _MAMXFLH 000EAB  
                          i2l10042 6984                            i2l10018 6910  
                          i2l10114 A39E                            i2l10130 A640  
                          i2l10036 6968                            i2l10140 A672  
                          _MAMXFLL 000EAA                            i2l10054 69BC  
                          i2l10046 6994                            i2l10062 69E0  
                          i2l10118 A3AC                            i2l10142 A676  
                          i2l10150 A694                            i2l10134 A65C  
                          i2l11200 249E                            i2l10058 69CC  
                          i2l10154 A6A2                            i2l10146 A68A  
                          i2l10138 A66A                            i2l10068 69F6  
                          i2l10092 A356                            i2l10086 A336  
                          i2l11206 24BA                            i2l10504 6506  
                          i2l10600 FEE2                            i2l11400 2C6C  
                          i2l11240 2644                            i2l11232 25DC  
                          i2l11216 251E                            i2l10530 6622  
                          i2l10522 65D2                            i2l10098 A36C  
                          i2l11306 28E2                            i2l11170 236C  
                          i2l11412 2CE0                            i2l11316 291C  
                          i2l11260 273C                            i2l11244 266A  
                          i2l11164 2330                            i2l11156 2314  
                          i2l10542 669A                            i2l10534 664A  
                          i2l10526 65FA                            i2l10518 65AA  
                          i2l10622 7ABA                            i2l10606 FF9E  
                          i2l11414 2CEC                            i2l11406 2CA0  
                          i2l11342 2A1E                            i2l11326 29BE  
                          i2l11190 2458                            i2l10616 7A7E  
                          i2l10720 81F4                            i2l10712 81D0  
                          i2l10560 50DC                            i2l11416 2CF6  
                          i2l11424 2D1E                            i2l11408 2CAC  
                          i2l11352 2A50                            i2l11328 29CC  
                          i2l11336 29EA                            i2l11272 27AE  
                          i2l11256 2716                            i2l11248 26B0  
                          i2l11184 2400                            i2l11432 2D4C  
                          i2l10538 6672                            i2l10730 A70C  
                          i2l10802 AEE6                            i2l11370 2BA6  
                          i2l11290 2868                            i2l11194 246A  
                          i2l11434 2D6C                            i2l11178 23D4  
                          i2l10548 66CC                            i2l10804 AEF2  
                          i2l10644 7B2C                            i2l10636 7AFC  
                          i2l10708 81C0                            i2l11356 2AA2  
                          i2l11276 2816                            i2l11380 2BD0  
                          i2l11188 243E                            i2l10726 A6DC  
                          i2l10654 7B60                            i2l10718 81E8  
                          i2l10582 FCBE                            i2l11390 2C12  
                          i2l11294 28AA                            i2l11198 2470  
                          i2l13222 B2FE                            i2l11448 B156  
                          i2l11464 94CC                            i2l10736 A738  
                          i2l10664 7B88                            i2l10680 812C  
                          i2l10568 51B4                            i2l10592 FDA4  
                          i2l11368 2B98                            i2l13216 B2E6  
                          i2l11458 94A6                            i2l10770 A988  
                          i2l10666 7B94                            i2l10658 7B70  
                          i2l10674 8102                            i2l11394 2C42  
                          i2l11386 2BEE                            i2l11378 2BC4  
                          i2l11298 28C4                            i2l11484 950A  
                          i2l10780 A9BC                            i2l10772 A98C  
                          i2l10588 FD7A                            i2l10790 AD7C  
                          i2l10758 B85C                            i2l10768 A97C  
                          i2l10792 AD80                            i2l12296 A4C4  
                          i2l15040 B2C2                            i2l15024 9384  
                          i2l15018 936E                            i2l15026 938C  
                          i2l10796 ADA4                            i2l10788 AD70  
                          i2l15220 5892                            i2l15214 57E2  
                          i2l15230 A852                            i2l13730 A3B8  
                          i2l15226 58B8                            i2l14532 7342  
                          i2l14620 99CA                            i2l14542 73A4  
                          i2l13726 B02C                            i2l14630 9A06  
                          i2l15270 A896                            i2l15262 A88A  
                          i2l15254 A87C                            i2l15246 A86C  
                          i2l15238 A85E                            i2l13736 A434  
                          i2l14528 7314                            i2l14624 99DC  
                          i2l15280 A8A6                            i2l13738 A43C  
                          i2l14546 7444                            i2l14538 7378  
                          i2l14570 8526                            i2l14650 9A3E  
                          i2l15194 56F8                            i2l15282 A8CA  
                          i2l14660 B62E                            i2l14572 8532  
                          i2l14564 8512                            i2l14652 9A56  
                          i2l14558 84D0                            i2l14656 B61E  
                          i2l14576 8552                            i2l14592 B57C  
                          i2l14586 B56A                            i2l15824 005E  
                          i2l15842 0136                            i2l15852 014A  
                          i2l15844 013E                            i2l15828 0064  
                          i2l15862 0162                            i2l15846 0140  
                          i2l15874 0176                            i2l15868 016C  
            LFSRSeedRand@dwOldSeed 0113                            _INTCON2 000FF1  
                          _INTCON3 000FF0                            _EIRbits 000F60  
                          _ERXRDPT 000EEC                         ??i2_memcmp 0007  
                          _ERXWRPT 000EEE                         ??i2_memset 0007  
                       ??i2_fround 0027                ??i2_WriteBlockFlash 0008  
           __end_of_TCPIsConnected B66A                            _TBLPTRH 000FF7  
                          _TBLPTRL 000FF6                            _TBLPTRU 000FF8  
                 MACPutHeader@type 0106                            _OSCTUNE 000F9B  
              __end_of_SyncTCBStub A122       __end_ofi2_SendVolumeToDevice B982  
                          _TCPInit 5AEE           __end_of_MACIsMemCopyDone BA5C  
                          _TCPOpen 5F2C                            _TCPTick 1832  
                     ??_IRTimerInt 005F                       ??_TCPProcess 0184  
                 ??_MACSetWritePtr 0102               ??_UpdateMasterVolume 017C  
                        DbToCode@k 0150              i2WriteBlockFlash@flag 000D  
               __end_of_TCPRAMCopy 92B4                       ??i2_BusySLCD 0001  
                       ??_BusySLCD 0100                    TickGetDiv256@dw 0104  
                  __size_of_MACGet 000A             MACGetFreeRxSize@ReadPT 0106  
                          i2_scale FB78                    __size_of_ARPPut 012C  
                  __size_of_MACPut 000E               __size_of_TCPGetArray 01DC  
            __size_of_MACGetHeader 0110              i2UpdateMasterVolume@i 005C  
               __end_ofi2_DbToCode 6A88                       ?_GetCheckSum 0100  
              WritePHYReg@Register 0102                StackTask@cFrameType 01B2  
                       ??_OpenSLCD 0102               __end_of_LFSRSeedRand AD5E  
                          _InitrIR AADA              __size_of_MACDiscardRx 0048  
                       ??_TickInit 0100                            _SendTCP 2D82  
                __end_of__npowers_ FEE4                            __Hparam 0000  
                TCPDisconnect@hTCP 0156                  ??_MACMemCopyAsync 0107  
                          _TickGet B6BA                      i2_scale$11267 0027  
                 ??_CalcIPChecksum 0104                            __Lparam 0000  
                    ?_ProcessIRInt 0001          __end_ofi2_WriteBlockFlash 9A60  
                   IPPutHeader@len 0111     CalcIPBufferChecksum@DataBuffer 010A  
             i2SaveToFlash@success 003B                 RefreshLine1Ex@line 0103  
                        _ECON1bits 000FD2                          _ECON2bits 000EFE  
             __size_of_IPPutHeader 011A                 RefreshLine2Ex@line 0103  
                          _SyncTCB 963A                    __size_of___ftge 00D4  
                          ___awdiv 939E                      _DelayFor18TCY B524  
                     ??i2_PutsSLCD 0004                            ___ftadd 4D04  
                          ___awmod 9D8C                         ??_PutsSLCD 0103  
                          ___ftdiv 7BAA                            ___ftneg B4F2  
                          ___lldiv 97E6                    __size_of___wmul 0036  
                          ___ftmul 775E                            ___llmod A26E  
                          ___ftsub B304                            ___fttol 75E2  
            __size_of_MACIsTxReady 005A                  SendTCP@vSendFlags 0128  
                  ?i2_WriteCmdSLCD 0001                      _TickGetDiv256 B694  
                    ?_SwapIPHeader 0105                 __end_of_IRTimerInt B2C6  
               __end_of_TCPProcess 6C36          __size_of_UpdateSampleRate 00A4  
                    HandleTCPSeg@h 0156                            __pcinit A9DC  
                     ??i2___awtoft 000C                    __size_of_memcmp 00C8  
                     ??i2___ftpack 0006                    __size_of_memcpy 006C  
                       ??___awtoft 010B                         ??___ftpack 0105  
             __size_ofi2_FindEmpty 0126                    __size_of_memset 0038  
                  __size_of_fround 032C            i2___ftmul@f3_as_product 001F  
                          __ramtop 1000                __end_of_WritePHYReg B4BE  
                     ??i2___lltoft 000D                         ??___lltoft 010C  
                          __ptext0 B340                            __ptext1 4220  
                          __ptext2 A1CA                            __ptext3 B910  
                          __ptext4 9F12                            __ptext5 F000  
                          __ptext6 3C5E                            __ptext7 B5E8  
                          __ptext8 471E                            __ptext9 9D8C  
             __size_of_TCPPutArray 0234                       ??i2___lwtoft 000C  
               __end_ofi2_BusySLCD B844                         ??___lwtoft 010B  
                ??_WriteBlockFlash 0107                   _RestoreFromFlash 6DE2  
                     ?_GetTickCopy 0001                          _T1CONbits 000FCD  
                      ?__div_to_l_ 0100                    __size_of_strupr 0048  
              __size_of_TickUpdate 001C                            _dpowers FE95  
                     i2fround@prec 002D                            _isdigit B5E8  
                TCPProcess@localIP 0180                   ___awmod@dividend 0100  
            __end_of_ARPIsResolved 87B2                            _smStack 00EE  
         __size_ofi2_DelayFor18TCY 0032      __size_ofi2_SendDataToDeviceCh 01DE  
            UpdateSampleRate@srStr 0105                    ?_TCPIsConnected 0001  
                      TCPOpen@hTCP 0162                       _MACGetHeader 87B2  
                    ?i2_EraseFlash 0001                        TCPTick@hTCP 0165  
               TCPIsConnected@hTCP 0121   GetMaxSegSizeOption@vOptionsBytes 010C  
     __end_of_TCPSocketInitializer FF11                 TCPServer@srvSocket 01B4  
              TCPRAMCopy@vDestType 0120                            _sprintf F000  
             __size_ofi2_ReadFlash 005A          __size_ofi2_RefreshLine1Ex 0014  
        __size_ofi2_RefreshLine2Ex 0014               end_of_initialization AA56  
                     _MACDiscardRx B0A2                          _ESTATbits 000EFD  
                          memcmp@n 0104                            memcpy@d 011A  
               __end_ofi2_PutsSLCD AE84                            memcpy@n 0118  
                          memcpy@s 011C                       ?_CloseSocket 0001  
                          memset@c 0102                            memset@n 0104  
                          memset@p 0106               EraseFlash@flash_addr 0109  
              i2___wmul@multiplier 000F                          i2u1003_40 902C  
                        i2u1003_45 9024                          i2u1040_40 AE7C  
                        i2u1040_47 AE72                          i2u1131_40 7A9C  
                        i2u1211_40 256A                          i2u1131_45 7A92  
                        i2u1211_45 2560                          i2u1039_40 AE52  
                        i2u1039_47 AE48                          i2u1129_40 7A60  
                        i2u1129_45 7A56                          i2u1209_45 24F8  
            __size_of_MACPutHeader 008C                ARPIsResolved@IPAddr 0100  
               __end_ofi2___awtoft B17A                 __end_ofi2___ftpack A1CA  
              ChangeMasterVolume@d 005E                TCPGetArray@RightLen 0131  
                     _MACIsTxReady AF96                          i2u1577_40 A3E6  
                        i2u1753_40 92BC                          i2u1753_46 92BE  
                        i2u1577_47 A3DC                          i2u1690_45 853C  
                        i2u1579_40 A424                          i2u1579_47 A41A  
                        i2u1773_40 57D8                 __end_ofi2___lltoft AF3C  
                        i2u1773_46 57DA                          i2u1775_41 58A2  
                       _remoteNode 02C9                          i2u1863_45 0156  
                        i2u1863_47 0158                          i2u1696_45 999A  
                        i2u1697_45 99AA                    ___lldiv@divisor 0104  
                        i2u1869_47 BA36                     ??_ProcessIRInt 0009  
               __end_ofi2___lwtoft B79A                    ___lldiv@counter 010C  
           i2ReadFlash@tblptr_save 000D               __end_of_RefreshLine1 B96C  
               MACPutHeader@remote 0104                     SwapARPPacket@p 0105  
                   ?_DelayFor18TCY 0001                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                   ?_TickGetDiv256 0100                     ??_SwapIPHeader 0107  
                   __tdiv_to_l_@f1 0100                     __tdiv_to_l_@f2 0103  
      CalcIPBufferChecksum@DataPtr 0120                    ??i2__tdiv_to_l_ 0007  
                      _badChecksum 00FA                      ??__tdiv_to_l_ 0106  
            __end_ofi2_SaveToFlash 58C6      __size_of_CalcIPBufferChecksum 014A  
                          strupr@c 0104                            strupr@s 0100  
                          strupr@t 0102                          _PORTAbits 000F80  
                        _PORTBbits 000F81                TCPProcess@TCPHeader 0197  
                        _TCPServer 4220                        _SyncTCBStub A07A  
                     ?_ReInitTimer 0001                     GetCheckSum@res 0103  
          MACMemCopyAsync@ReadSave 010B               MACSetReadPtr@address 0100  
         __end_of_SLCDSetDDRamAddr B910                  ?_MACGetFreeRxSize 0100  
                        i2_TickGet B6E0                     ??i2_EraseFlash 0009  
                        _TRISAbits 000F92                 _SendDataToDeviceCh 5D0E  
                     ??_EraseFlash 0108         __end_of_ChangeMasterVolume B304  
              TCPTick@bCloseSocket 0163                 ??_MACGetFreeRxSize 0102  
                     _MACPutHeader A73C                          i2___awdiv A312  
                        i2___ftadd 6C36                          i2___awmod A61C  
                        i2___ftdiv 9480                          i2___ftneg B72C  
                        i2___lldiv A95A                          i2___ftmul 90DA  
                        i2___llmod AD5E                          i2___ftsub B420  
                        i2___fttol 8FE4                        _hCurrentTCP 01FD  
            __end_of_MACSetReadPtr BA20          HandleTCPSeg@lMissingBytes 016F  
              ?_SendDataToDeviceCh 0001                TCPRAMCopy@ptrSource 0121  
                   i2sprintf@integ 0073                      ??_MACGetArray 0104  
               i2FindEmpty@tmpAddr 0027                      FindEmpty@addr 0122  
                   i2sprintf@width 007D                     __end_of_MACGet BA72  
                   __end_of_ARPPut 8336                     __end_of_MACPut BA50  
      __size_of_FindMatchingSocket 0660                        ___ftdiv@exp 0119  
                   _dwLFSRRandSeed 00F3                TCPOpen@dwRemoteHost 0156  
                  i2___awtoft@sign 000C                 i2___llmod@dividend 0001  
               i2___awdiv@dividend 0007        __size_of_SendVolumeToDevice 0016  
                __size_of_MACFlush 0038                    i2___ftpack@sign 0005  
                        i2_isdigit B844                          _AppConfig 023C  
       __end_of_reserveSettingsArr F000                __size_of__div_to_l_ 0228  
       HandleTCPSeg@wSegmentLength 0169         __size_ofi2_WriteBlockFlash 00D2  
                      ___ftmul@exp 011D                        _WritePHYReg B48A  
                __size_of_LFSRRand 00D6                          _FindEmpty 745E  
             __end_of_IR_POWER_OFF FF2A                          i2_sprintf 22F8  
             i2_SendVolumeToDevice B96C                 __end_of_EraseFlash A588  
          MACMemCopyAsync@destAddr 0101              __end_of_InitAppConfig 89D0  
                   __end_of___ftge 998E             HandleTCPSeg@wFreeSpace 0173  
                  i2_sprintf$11268 0060                     __end_of___wmul B420  
                  SyncTCB@hLastTCB 01FC               ??_SendDataToDeviceCh 0153  
           __size_of_TCPIsGetReady 00D0       GenerateRandomDWORD@T0CONSave 0127  
                __size_of_TCPClose 0022                          _Configure AC8E  
                        i2memcmp@n 0005                  __size_of_TCPFlush 0046  
                    ??_MACPutArray 0104                          i2memset@c 0003  
                        i2memset@n 0005                          i2memset@p 0007  
                       ?_TCPServer 0001                     __end_of_memcmp 9D8C  
                   __end_of_memcpy AC24                          _MyTCBStub 01E0  
                   __end_of_memset B3EA                     __end_of_fround 4A4A  
           i2SaveToFlash@emptyAddr 003C        __end_of_GenerateRandomDWORD 7130  
     __end_ofi2_UpdateMasterVolume A4F4                CalcIPChecksum@count 0102  
                __size_of_DbToCode 0268               __size_of_Delay1KTCYx 0014  
                 i2___wmul@product 0013               __end_of_IR_VOLUME_UP FF27  
           __size_of_TCPDisconnect 0102               __end_of_SETTINGS_LEN FF19  
           __size_of_IPSetRxBuffer 001C                     __end_of_strupr B132  
              start_initialization A9DC                    OpenSLCD@lcdtype 0102  
                __size_ofi2___ftge 0090                         ?i2_TickGet 0001  
               i2___awdiv@quotient 000D                  __size_ofi2___wmul 0026  
                        _ReadFlash ADC4              _CurrentPacketLocation 00E1  
              __end_of__tdiv_to_l_ 64FA                          TickGet@dw 0104  
           HandleTCPSeg@wNewWindow 0162                    i2___fttol@sign1 0043  
                __size_ofi2_memcmp 00A0                  __size_ofi2_memset 002C  
                __size_ofi2_fround 0276                         ?i2___awdiv 0007  
                       ?i2___ftadd 002E                         ?i2___awmod 0001  
                       ?i2___ftdiv 000D                         ?i2___ftneg 0001  
                       ?i2___lldiv 0001                    i2_WriteDataSLCD B864  
                       ?i2___ftmul 0015                         ?i2___llmod 0001  
                       ?i2___ftsub 003A                         ?i2___fttol 003A  
                     _vTickReading 00C7              __size_of_LFSRSeedRand 0068  
       HandleTCPSeg@localAckNumber 0175                WriteBlockFlash@flag 010C  
                         ??_MACGet 0100                           ??_ARPPut 0120  
                         ??_MACPut 0100                  ??i2_DelayFor18TCY 0001  
               ProcessIRCode@delta 0097             __size_of_TCPIsPutReady 010C  
      __end_of_GetMaxSegSizeOption 7F92                       ??_TickUpdate 0001  
           __size_ofi2_Delay1KTCYx 0010                    ___llmod@divisor 0104  
                __size_of_BusySLCD 0022                UpdateMasterVolume@i 0181  
                    _SETTINGS_ADDR FF11                    ___llmod@counter 0108  
                 TCPServer@wMaxGet 0183                   TCPServer@wMaxPut 0185  
           TCPOpen@vRemoteHostType 015A                         ?i2_isdigit 0001  
                  ??_DelayFor18TCY 0100               __size_of_GetCheckSum 0042  
    GenerateRandomDWORD@ADCON0Save 0125      GenerateRandomDWORD@ADCON2Save 0126  
            i2EraseFlash@startaddr 0001           WriteBlockFlash@startaddr 0100  
                __size_of_OpenSLCD 0094                __end_of_MACGetArray AEE0  
                  ??_TickGetDiv256 0104                           ??___ftge 0106  
             ProcessIRInt@numTicks 0011                  __size_of_TickInit 0014  
            ?i2_SendVolumeToDevice 0001                         ?_FindEmpty 0110  
                         ??___wmul 0112                     MACPutArray@len 0102  
                       ?i2_sprintf 0049                     MACPutArray@val 0100  
     GenerateRandomDWORD@TMR0HSave 0128            __size_of_RefreshLine1Ex 0018  
          __size_of_RefreshLine2Ex 0018               _TCPSocketInitializer FF0B  
                        _StackInit B1C0                      ?_WriteCmdSLCD 0001  
     GenerateRandomDWORD@TMR0LSave 0129                          _StackTask 9B30  
                 i2EraseFlash@flag 0009       HandleTCPSeg@localHeaderFlags 0179  
                      __pdataBANK0 00F3                        __pdataBANK1 01FC  
               i2_SLCDSetDDRamAddr B982                           ??_memcmp 0106  
                         ??_memcpy 011A                           ??_memset 0106  
                         ??_fround 0126                   _UpdateSampleRate A1CA  
                     ?_SaveToFlash 0001                         ?_Configure 0001  
                __size_of_PutsSLCD 006A                           ??_strupr 0102  
                     GetCheckSum@i 0104                         fround@prec 012C  
                         ?_ARPInit 0001                      ?i2__div_to_l_ 0001  
                         ?_MACInit 0001                   _s_dacSettingsTmp 02E7  
                __size_of___awtoft 005A                  __size_of___ftpack 010A  
          i2UpdateSampleRate@srStr 0006                  TCPGetArray@buffer 0126  
                     _LFSRSeedRand ACF6             __size_ofi2_GetCheckSum 0032  
                __size_of___lltoft 007E                ?i2_SLCDSetDDRamAddr 0001  
               __end_of_TickUpdate B8F6                       i2sprintf@exp 007F  
                      __pbssCOMRAM 005F           i2SendDataToDeviceCh@mask 0074  
                __size_of___lwtoft 002E                      __pcstackBANK0 0060  
                    __pcstackBANK1 0100               __end_of_ProcessIRInt 939E  
             __size_of_GetTickCopy 0034                         ?_ReadFlash 0100  
           __size_of_SwapARPPacket 00AE                       _fround$10824 0129  
                     _fround$10825 0126             __size_of_ProcessIRCode 018C  
              __end_of__stringdata FFFE                __end_of_MACPutArray FFF8  
                         ?_TCPInit 0001                           ?_TCPOpen 0156  
                         ?_TCPTick 0001                  CalcIPChecksum@val 0108  
                CalcIPChecksum@sum 010A                  ?_MACIsMemCopyDone 0001  
                  _MACMemCopyAsync 7130              MACSetWritePtr@address 0100  
                 i2_RefreshLine1Ex B9E8                   i2_RefreshLine2Ex B9C0  
                HandleTCPSeg@wTemp 017A          TCPGetArray@wGetReadyCount 012F  
        i2WriteBlockFlash@saddress 000E                    Delay1KTCYx@unit 0100  
                    _TCPIsGetReady 9A60               __end_of_SwapIPHeader 9F12  
               ??_MACIsMemCopyDone 0100                           ?i2_scale 0024  
                      sprintf@ccnt 0166                        sprintf@_val 016B  
                      sprintf@flag 0170              __size_of_RefreshLine1 0016  
                 SendTCP@vTCPFlags 0133                        sprintf@fval 0176  
             ReadFlash@flash_array 0106                        sprintf@prec 0179  
                   TCPPutArray@len 0159                      ??_IPGetHeader 013A  
              SwapTCPHeader@header 0105                 WritePHYReg@GIESave 0103  
         __end_of_RestoreFromFlash 6F8A                  i2GetCheckSum@data 0001  
                        __pnvBANK2 02D3                          __pnvBANK3 0300  
                    _TCPDisconnect 8CEA                           ?_InitrIR 0001  
            TCPPutArray@wActualLen 0161               __size_of_CloseSocket 00CA  
                    _IPSetRxBuffer B8A2               ??i2_SLCDSetDDRamAddr 0002  
                  HandleTCPSeg@len 0158                           ?_SendTCP 0128  
           __size_ofi2_GetTickCopy 0034             FindMatchingSocket@hTCP 0137  
                         ?_TickGet 0100                   ??i2_WriteCmdSLCD 0001  
       HandleTCPSeg@localSeqNumber 0165                     _s_irCodeBitIdx 01FE  
                  _WriteBlockFlash 8336             FindMatchingSocket@hash 0134  
        i2WriteBlockFlash@startptr 0009               __end_ofi2_EraseFlash ABB8  
              TCPProcess@checksum1 0186                TCPProcess@checksum2 0188  
           ChangeMasterVolume@prev 005D                          __pintcode 0008  
       __end_ofi2_UpdateSampleRate A8D8                     ??_WriteCmdSLCD 0100  
                    __pmediumconst FE34                           ?_SyncTCB 0001  
         FindMatchingSocket@remote 012A                           ?___awdiv 0106  
                        __ptext100 91CA                          __ptext101 B9FC  
                        __ptext110 B48A                          __ptext102 BA0E  
                        __ptext111 BA42                          __ptext103 FFC8  
                        __ptext120 A850                          __ptext112 B66A  
                        __ptext104 7130                          __ptext121 B9C0  
                        __ptext113 AADA                          __ptext105 BA68  
                        __ptext130 92B4                          __ptext122 5696  
                        __ptext114 B3B2                          __ptext106 BA50  
                        __ptext131 B9D4                          __ptext123 998E  
                        __ptext115 88C2                          __ptext107 AE84  
                        __ptext140 22F8                          __ptext132 B288  
                        __ptext124 B556                          __ptext116 ABB8  
                        __ptext108 9710                          __ptext141 FB78  
                        __ptext133 B614                          __ptext125 845E  
                        __ptext117 A8D8                          __ptext109 8BE6  
                         ?___ftadd 012D                          __ptext150 AD5E  
                        __ptext142 B844                          __ptext134 72D2  
                        __ptext126 AFF0                          __ptext118 B0EA  
                        __ptext151 A95A                          __ptext143 4F84  
                        __ptext135 A3B6                          __ptext127 AB4A  
                        __ptext160 B776                          __ptext152 B420  
                        __ptext144 B706                          __ptext136 B6E0  
                        __ptext128 BA32                          __ptext161 8FE4  
                        __ptext153 B72C                          __ptext145 A61C  
                        __ptext137 B4BE                          __ptext129 B8DA  
                        __ptext170 B864                          __ptext162 90DA  
                        __ptext154 A6AC                          __ptext146 A312  
                        __ptext138 B2C6                          __ptext171 B822  
                        __ptext163 6C36                          __ptext155 9480  
                        __ptext147 80D8                          __ptext139 A456  
                        __ptext172 B588                          __ptext164 A122  
                        __ptext156 B132                          __ptext148 7A42  
                        __ptext165 BA20                          __ptext157 B96C  
                        __ptext149 AEE0                          __ptext166 B9E8  
                        __ptext158 64FA                          __ptext167 B982  
                        __ptext159 68B4                          __ptext168 B800  
                        __ptext169 AE24                           ?___awmod 0100  
                         ?___ftdiv 010C                         ?_StackInit 0001  
                         ?___ftneg 0100                           ?___lldiv 0100  
                         ?___ftmul 0114                         ?_StackTask 0001  
                         ?___llmod 0100                           ?___ftsub 0139  
                        __npowers_ FEBD                           ?___fttol 0139  
                    ?_Delay10KTCYx 0001                           TCPInit@i 0142  
           __size_of_SwapTCPHeader 01F6            MACCalcRxChecksum@RDSave 012E  
                         TCPTick@w 0167                    SyncTCBStub@hTCP 0120  
                    _TCPIsPutReady 89D0                   ??_TCPIsConnected 0121  
                _MACSetReadPtrInRx B04A                 FindEmpty@startAddr 0110  
                    i2_Delay1KTCYx BA32                        __tdiv_to_l_ 631A  
                      ??_TCPServer 0182              __end_of_WriteDataSLCD B7DE  
                   ??i2__div_to_l_ 0007                     SendTCP@options 012D  
                     ??__div_to_l_ 0106            __end_ofi2_WriteDataSLCD B884  
               ?_MACSetReadPtrInRx 0100                     __size_of_ISRLP 01AA  
                         ?_isdigit 0001                    i2_isdigit$10234 0002  
                      ??i2_TickGet 0005               __size_of_ReInitTimer 0014  
                     _RefreshLine1 B956         i2SendDataToDeviceCh@offset 0072  
                    ??_TCPGetArray 012A         i2SendDataToDeviceCh@values 0060  
                      ??i2___awdiv 000B                        ??i2___ftadd 0034  
                      ??i2___awmod 0005                           ?_sprintf 0148  
          MACCalcRxChecksum@offset 0128                        ??i2___ftdiv 0013  
                      ??i2___ftneg 0004                        ??i2___lldiv 0009  
                      ??i2___ftmul 001B                     __size_of_scale 05C2  
                      ??i2___llmod 0009                ??_MACSetReadPtrInRx 0102  
                      ??i2___ftsub 0040                        ??i2___fttol 003E  
      __size_of_UpdateMasterVolume 00BA                     ?_TCPIsGetReady 0121  
        CalcIPBufferChecksum@F7102 00CD                          _s_irLearn 01B8  
                   __size_of_swapl 0042                     __size_of_swaps 001E  
 MACMemCopyAsync@UpdateReadPointer 0110             UpdateMasterVolume@dvol 017E  
          __size_ofi2_RefreshLine1 0012                        _wTXWatchdog 00EB  
                         _MACFlush B37A                   TCPProcess@remote 017E  
                      _MACGetArray AE84                      StackInit@once 005F  
                   ___wmul@product 0112                           _LATAbits 000F89  
                         _LATBbits 000F8A                 ReadFlash@num_bytes 0104  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _LATFbits 000F8E                     ?_TCPDisconnect 0001  
                         _LATGbits 000F8F                           _MIREGADR 000EB4  
                         _ERXRDPTH 000EED                           _ERXRDPTL 000EEC  
                   ?_IPSetRxBuffer 0106                           _PIE1bits 000F9D  
             i2_UpdateMasterVolume A456                      ?_DelayPORSLCD 0001  
                    ??_IPPutHeader 0113                           _LFSRRand 9710  
                      ??i2_isdigit 0001                      i2_GetCheckSum B556  
     __end_ofi2_SendDataToDeviceCh 66D8          CalcIPBufferChecksum@Start 011E  
          TCPPutArray@wFreeTXSpace 0163                      _SwapARPPacket 9FCC  
                         _PIR1bits 000F9E                 __end_of__div_to_l_ 5AEE  
           ??i2_SendVolumeToDevice 0057                      _ProcessIRCode 72D2  
                         _RCONbits 000FD0                   __CFG_WDTPS$32768 000000  
                         _TCBStubs 026F                      ??i2_FindEmpty 0015  
               ReadFlash@startaddr 0100                        ??_FindEmpty 0114  
                   ??_Delay10KTCYx 0100                __end_of_IPGetHeader 7A42  
                         _TCPClose B79A                        ??i2_sprintf 0050  
                         _TCPFlush B17A                      ??_TCPPutArray 015B  
        __end_of_MACSetReadPtrInRx B0A2                    i2__div_to_l_@f1 0001  
                  i2__div_to_l_@f2 0004                     ?_TCPIsPutReady 0121  
                         _DbToCode 51FA                     ?i2_Delay1KTCYx 0001  
                      ??_Configure 0147    _reserveSettingsArr_absconstaddr 01D000  
                 i2PutsSLCD@buffer 0002                 StackTask@dataCount 01AB  
        WriteBlockFlash@num_blocks 0104                      TCPTick@vFlags 0166  
                       _ADCON0bits 000FC2                        __stringdata FF2D  
                     ?_SyncTCBStub 0001                  ___wmul@multiplier 010E  
                         i2___ftge A6AC                        _MACPutArray FFC8  
              MACSetReadPtr@oldVal 0102                           i2___wmul B706  
          __end_of_MACMemCopyAsync 72D2                      i2_GetTickCopy B4BE  
                 __size_of_ARPInit 002A                           i2_memcmp A3B6  
                 __size_of_MACInit 0104                  i2___awdiv@divisor 0009  
                         _SYNQueue 0200                           i2_memset B614  
                         i2_fround 4F84                      ??i2_ReadFlash 0009  
                      ??_ReadFlash 0108                  i2___awdiv@counter 000B  
                 Delay10KTCYx@unit 0101                  ?_SLCDSetDDRamAddr 0001  
              IPSetRxBuffer@Offset 0106                __end_of_IR_POWER_ON FF2D  
                   EraseFlash@flag 0108                        _INTCON2bits 000FF1  
               ??_SLCDSetDDRamAddr 0101                      LFSRSeedRand@i 0117  
                     _IR_POWER_OFF FF27                        _INTCON3bits 000FF0  
                 __size_of_TCPInit 0220                          copy_data0 AA2A  
                        copy_data1 AA4A                   __size_of_TCPOpen 01F8  
                 __size_of_TCPTick 0AC6                      _SwapTCPHeader 6124  
                      i2DbToCode@k 0051                 i2___awmod@dividend 0001  
                         _BusySLCD B7DE       __end_of_CalcIPBufferChecksum 7E4C  
          MACGetFreeRxSize@WritePT 0104            __end_of_WriteBlockFlash 845E  
          CalcIPBufferChecksum@len 0106                       TCPClose@hTCP 0157  
                 __size_ofi2_scale 0450                       _s_prevIRPort 01FF  
                   ??_DelayPORSLCD 0101              ?i2_UpdateMasterVolume 0001  
                   ?i2_GetCheckSum 0001                     _invalidCommand 00FC  
                       _EECON1bits 000FA6                           _OpenSLCD A588  
              __end_of_TCPGetArray 68B4       GenerateRandomDWORD@vBitCount 0124  
                      _scale$10826 0126                           _NextPort 00E5  
               _ChangeMasterVolume B2C6          __size_of_MACGetFreeRxSize 00D8  
                     _IR_VOLUME_UP FF23                     ?_SwapARPPacket 0105  
               LFSRSeedRand@dwSeed 010F                           _TickInit B9AC  
                         __Hrparam 0000                       _SETTINGS_LEN FF15  
                   ?_ProcessIRCode 0001                      SwapIPHeader@h 0105  
          __size_of_MACSetWritePtr 0012                   __size_of_InitrIR 0070  
     i2WriteBlockFlash@flash_array 0006                   __size_of_SendTCP 087C  
                         __Lrparam 0000                EraseFlash@startaddr 0100  
                     ?_WritePHYReg 0100             __size_of_ARPIsResolved 0114  
                      _errataTempH 000E7F                        _errataTempL 000E7E  
             i2RefreshLine1Ex@line 0004                   __size_of_TickGet 0026  
             i2RefreshLine2Ex@line 0004                     _RefreshLine1Ex B928  
                   _RefreshLine2Ex B910                        ??_StackInit 0143  
                         _PutsSLCD AC24                        ??_StackTask 01AB  
      __p_reserveSettingsArr_const D000                ?_ChangeMasterVolume 0001  
                 __size_of_SyncTCB 00D6                __end_of_IPPutHeader 869E  
                 __size_of___awdiv 00E2                   __size_of___ftadd 0280  
                 __size_of___awmod 00C4                   __size_of___ftdiv 0158  
                 __size_of___ftneg 0032              i2___wmul@multiplicand 0011  
                 __size_of___lldiv 00D4                   __size_of___ftmul 0176  
                 __size_of___llmod 00A4                   __size_of___ftsub 003C  
                 __size_of___fttol 017C                           ___awtoft AF3C  
                         ___ftpack 8ADC                      ?_HandleTCPSeg 0156  
            __size_of_ProcessIRInt 00EA                           ___lltoft AA5C  
               _NextPacketLocation 00E3              __end_ofi2__tdiv_to_l_ 820A  
               _reserveSettingsArr D000                           ___lwtoft B5BA  
          __size_of_CalcIPChecksum 00F6                __end_ofi2_FindEmpty 8584  
                   ?i2_GetTickCopy 0001               __size_of_SaveToFlash 02BA  
                     TCPFlush@hTCP 0156                    i2_DelayFor18TCY B588  
                       sprintf@exp 0174                   ?i2_WriteDataSLCD 0001  
              __end_of_TCPPutArray 5696          WriteBlockFlash@write_byte 010B  
             MACSetWritePtr@oldVal 0102                   __size_of_isdigit 002C  
                   i2GetCheckSum@i 0005              __size_of_SwapIPHeader 00C2  
              FindMatchingSocket@h 0128                      SendTCP@header 0142  
                  ??_TCPIsGetReady 0123                           __ptext10 939E  
                         __ptext11 631A                           __ptext20 AF3C  
                         __ptext12 58C6                           __ptext21 B940  
                         __ptext13 AA5C                           __ptext30 89D0  
                         __ptext22 5D0E                           __ptext14 A26E  
                         __ptext31 B17A                           __ptext23 51FA  
                         __ptext15 97E6                           __ptext40 B956  
                         __ptext32 5F2C                           __ptext24 B5BA  
                         __ptext16 B304                           __ptext41 B928  
                         __ptext33 B640                           __ptext25 75E2  
                         __ptext17 B4F2                           __ptext50 869E  
                         __ptext42 AC24                           __ptext34 66D8  
                         __ptext26 775E                           __ptext18 98BA  
                         __ptext51 6A88                           __ptext43 B7BC  
                         __ptext35 9A60                           __ptext27 4D04  
                         __ptext19 7BAA                           __ptext60 B8A2  
                         __ptext52 0000                           __ptext44 745E  
                         __ptext36 B79A                           __ptext28 8ADC  
                         __ptext61 35FE                           __ptext53 2D82  
                         __ptext45 A4F4                           __ptext37 4A4A  
                         __ptext29 5462                           __ptext70 7F92  
                         __ptext62 B3EA                           __ptext54 6124  
                         __ptext46 9B30                           __ptext38 9CC4  
                         __ptext71 B0A2                           __ptext63 B694  
                         __ptext55 B204                           __ptext47 1832  
                         __ptext39 8336                           __ptext80 6DE2  
                         __ptext72 820A                           __ptext64 87B2  
                         __ptext56 9562                           __ptext48 8CEA  
                         __ptext81 ADC4                           __ptext73 9FCC  
                         __ptext65 78D4                           __ptext57 8584  
                         __ptext49 8DEC                           __ptext90 B8BE  
                         __ptext82 B246                           __ptext74 B884  
                         __ptext66 9E50                           __ptext58 8EEE  
                         __ptext91 AC8E                           __ptext83 A588  
                         __ptext75 A73C                           __ptext67 B04A  
                         __ptext59 7E4C                           __ptext92 B9AC  
                         __ptext84 B8F6                           __ptext76 AF96  
                         __ptext68 A7C8                           __ptext93 B1C0  
                         __ptext85 B752                           __ptext77 B37A  
                         __ptext69 7D02                           __ptext94 5AEE  
                         __ptext86 B7DE                           __ptext78 B6BA  
                         __ptext95 A07A                           __ptext87 B524  
                         __ptext79 B456                           __ptext96 6F8A  
                         __ptext88 BA72                           __ptext97 ACF6  
                         __ptext89 B998                           __ptext98 9BFA  
                         __ptext99 963A                      TCPProcess@len 0182  
                   ?_SwapTCPHeader 0105                           __powers_ FEE4  
              IPPutHeader@protocol 0110               ??_ChangeMasterVolume 005D  
             __end_of_WriteCmdSLCD B776                           _dispbuf1 028B  
                         _dispbuf2 029C                     i2_fround$11265 002A  
                   i2_fround$11266 0027         __end_of_FindMatchingSocket 3C5E  
                 __size_of_sprintf 0B78                    ??_TCPDisconnect 0156  
         __end_of_UpdateSampleRate A26E                    ??_IPSetRxBuffer 0108  
       __end_of_SendVolumeToDevice B956                __end_ofi2_ReadFlash B04A  
                    __size_of_main 003A                 GetCheckSum@dataLen 0102  
                  _StackInit$10823 0143              __size_ofi2_EraseFlash 006E  
                         _s_irCode 02AD             __size_ofi2_SaveToFlash 0230  
                      _IPHeaderLen 01B5             SLCDSetDDRamAddr@DDaddr 0101  
                      _IPGetHeader 78D4               __end_ofi2__div_to_l_ 7BAA  
             TCPPutArray@wRightLen 015F             __end_of_RefreshLine1Ex B940  
           __end_of_RefreshLine2Ex B928                 TCPTick@bRetransmit 0164  
                         _toRotate 00EF               ReadFlash@tblptr_save 010C  
                     _ProcessIRInt 92B4                   i2DbToCode@volume 0049  
                  ??_TCPIsPutReady 0123         WriteBlockFlash@flash_array 0105  
                     TCPOpen@wPort 015B                    ??i2_Delay1KTCYx 0001  
                       _ARPResolve 8DEC                         _ARPProcess 7F92  
       __size_of_MACSetReadPtrInRx 0058           __end_ofi2_RefreshLine1Ex B9FC  
         __end_ofi2_RefreshLine2Ex B9D4                      ??_Delay1KTCYx 0100  
              i2EraseFlash@endaddr 0005                     ??_HandleTCPSeg 015A  
           __size_of_MACSetReadPtr 0012                       _SwapIPHeader 9E50  
      __size_of_SendDataToDeviceCh 021E                   _CloseSocket$7622 0128  
       TCPGetRemoteInfo@RemoteInfo 02BD                        _IR_POWER_ON FF2A  
         TCPInit@vSocketsAllocated 0138                  i2___awmod@divisor 0003  
               MACMemCopyAsync@len 0105                   ?_MACMemCopyAsync 0101  
                i2___awmod@counter 0005                         _INTCONbits 000FF2  
                         memcmp@s1 0100                           memcmp@s2 0102  
             i2_SendDataToDeviceCh 64FA                           memcpy@d1 0114  
                         memcpy@s1 0116            TCPServer@tcpServerState 00ED  
                    _ARPIsResolved 869E                           isdigit@c 0102  
                         memset@p1 0100                       i2_EraseFlash AB4A  
                _FormatNetBIOSName A8D8    GenerateRandomDWORD@randomResult 012C  
                         scale@scl 0129       __size_of_GenerateRandomDWORD 01A6  
             ARPIsResolved@MACAddr 0102               __end_of_Delay10KTCYx B8DA  
                      _TCPGetArray 66D8                   ProcessIRInt@diff 000D  
                   i2_RefreshLine1 BA20                 ?_FormatNetBIOSName 0105  
                         intlevel2 0000                     PutsSLCD@buffer 0101  
                        sprintf@ap 015C                MACPutHeader@dataLen 0107  
                 __tdiv_to_l_@exp1 010E                          sprintf@vd 015E  
                        sprintf@sp 0148                   __tdiv_to_l_@cntr 010D  
                 __tdiv_to_l_@quot 0109             __size_of_InitAppConfig 010E  
                  ??i2_GetCheckSum 0004             ??i2_UpdateMasterVolume 0057  
                       _MISTATbits 000E8A                   ?_WriteBlockFlash 0100  
                    ??_GetCheckSum 0103                   ___lldiv@dividend 0100  
                  ??_SwapARPPacket 0107                  i2SaveToFlash@addr 0035  
                  ??_ProcessIRCode 0087                  ?_RestoreFromFlash 0001  
            MACCalcRxChecksum@temp 0130                ??_FormatNetBIOSName 0107  
                      _IPPutHeader 8584                         _OSCCONbits 000FD3  
                  ?_RefreshLine1Ex 0103                    ?_RefreshLine2Ex 0103  
            TCPRAMCopy@vSourceType 0123                 ??_RestoreFromFlash 0110  
                   ISRLP@currentTS 00AE              __end_of_DelayFor18TCY B556  
                  i2FindEmpty@addr 0023       __size_of_GetMaxSegSizeOption 0146  
                       _TCPRAMCopy 91CA          __size_of_MACIsMemCopyDone 000C  
         RestoreFromFlash@addrStop 0118                        i2_FindEmpty 845E  
            __end_of_TickGetDiv256 B6BA            __end_ofi2_DelayFor18TCY B5BA  
                      _TCPPutArray 5462                    _ARPResolve$3399 012E  
                       i2_DbToCode 68B4          MACMemCopyAsync@sourceAddr 0103  
                  ??i2_GetTickCopy 0001                       ?__tdiv_to_l_ 0100  
             _CalcIPBufferChecksum 7D02                      i2_SaveToFlash 5696  
                    ??_GetTickCopy 0100       CalcIPBufferChecksum@Checksum 0122  
                         sprintf@c 017B                           sprintf@f 014A  
             SaveToFlash@emptyAddr 013B               __end_of_DelayPORSLCD BA7A  
                 ___lldiv@quotient 0108  MACMemCopyAsync@UpdateWritePointer 010F  
                 i2SaveToFlash@cmp 0039              ?i2_SendDataToDeviceCh 0001  
        __end_of_FormatNetBIOSName A95A                __end_of_Delay1KTCYx B9AC  
             MACCalcRxChecksum@len 012A               __size_of_SyncTCBStub 00A8  
                   ?_ARPIsResolved 0100                 i2_UpdateSampleRate A850  
     CalcIPBufferChecksum@ChunkLen 0126                    ??_SwapTCPHeader 0107  
                    ?_MACGetHeader 011E                        i2_ReadFlash AFF0  
           __end_ofi2_RefreshLine1 BA32       __end_of_SerializedMACAddress FF1F  
                      i2TickGet@dw 0005           SendDataToDeviceCh@offset 0158  
                       _IRTimerInt B288                         _TCPProcess 6A88  
         SendDataToDeviceCh@values 0159                      ?_MACDiscardRx 0001  
            TCPOpen@vSocketPurpose 015D                         i2_BusySLCD B822  
              ?i2_UpdateSampleRate 0001                      _MACSetReadPtr BA0E  
                i2__div_to_l_@exp1 0010                  i2__div_to_l_@cntr 000F  
                i2WriteCmdSLCD@cmd 0001                    GetCheckSum@data 0100  
                    ??_CloseSocket 0128                  i2__div_to_l_@quot 000B  
                     ?_MACGetArray 0100                i2FindEmpty@addrStop 001D  
               IPGetHeader@localIP 0132                  IPGetHeader@header 0140  
                    ?_MACIsTxReady 0001                   _MACGetFreeRxSize 9562  
                   _MACSetWritePtr B9FC        __size_ofi2_SLCDSetDDRamAddr 0016  
                 ARPResolve@IPAddr 0120                  TCPIsGetReady@hTCP 0125  
                IPGetHeader@remote 0134  FindMatchingSocket@wQueueInsertPos 0138  
              i2FindEmpty@blockEnd 0021  
