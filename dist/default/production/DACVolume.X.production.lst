

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Oct 05 21:35:40 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F67J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	_reserveSettingsArr_const,global,ovrld,reloc=2,class=CODE,delta=1
     9                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1
   143                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	text129,global,reloc=2,class=CODE,delta=1
   152                           	psect	text130,global,reloc=2,class=CODE,delta=1
   153                           	psect	text131,global,reloc=2,class=CODE,delta=1
   154                           	psect	text132,global,reloc=2,class=CODE,delta=1
   155                           	psect	text133,global,reloc=2,class=CODE,delta=1
   156                           	psect	text134,global,reloc=2,class=CODE,delta=1
   157                           	psect	text135,global,reloc=2,class=CODE,delta=1
   158                           	psect	text136,global,reloc=2,class=CODE,delta=1
   159                           	psect	text137,global,reloc=2,class=CODE,delta=1
   160                           	psect	text138,global,reloc=2,class=CODE,delta=1
   161                           	psect	text139,global,reloc=2,class=CODE,delta=1
   162                           	psect	text140,global,reloc=2,class=CODE,delta=1
   163                           	psect	text141,global,reloc=2,class=CODE,delta=1
   164                           	psect	text142,global,reloc=2,class=CODE,delta=1
   165                           	psect	text143,global,reloc=2,class=CODE,delta=1
   166                           	psect	text144,global,reloc=2,class=CODE,delta=1
   167                           	psect	text145,global,reloc=2,class=CODE,delta=1
   168                           	psect	text146,global,reloc=2,class=CODE,delta=1
   169                           	psect	text147,global,reloc=2,class=CODE,delta=1
   170                           	psect	text148,global,reloc=2,class=CODE,delta=1
   171                           	psect	text149,global,reloc=2,class=CODE,delta=1
   172                           	psect	text150,global,reloc=2,class=CODE,delta=1
   173                           	psect	text151,global,reloc=2,class=CODE,delta=1
   174                           	psect	text152,global,reloc=2,class=CODE,delta=1
   175                           	psect	text153,global,reloc=2,class=CODE,delta=1
   176                           	psect	text154,global,reloc=2,class=CODE,delta=1
   177                           	psect	text155,global,reloc=2,class=CODE,delta=1
   178                           	psect	text156,global,reloc=2,class=CODE,delta=1
   179                           	psect	text157,global,reloc=2,class=CODE,delta=1
   180                           	psect	text158,global,reloc=2,class=CODE,delta=1
   181                           	psect	text159,global,reloc=2,class=CODE,delta=1
   182                           	psect	text160,global,reloc=2,class=CODE,delta=1
   183                           	psect	text161,global,reloc=2,class=CODE,delta=1
   184                           	psect	text162,global,reloc=2,class=CODE,delta=1
   185                           	psect	text163,global,reloc=2,class=CODE,delta=1
   186                           	psect	text164,global,reloc=2,class=CODE,delta=1
   187                           	psect	text165,global,reloc=2,class=CODE,delta=1
   188                           	psect	text166,global,reloc=2,class=CODE,delta=1
   189                           	psect	text167,global,reloc=2,class=CODE,delta=1
   190                           	psect	text168,global,reloc=2,class=CODE,delta=1
   191                           	psect	text169,global,reloc=2,class=CODE,delta=1
   192                           	psect	text170,global,reloc=2,class=CODE,delta=1
   193                           	psect	text171,global,reloc=2,class=CODE,delta=1
   194                           	psect	text172,global,reloc=2,class=CODE,delta=1
   195                           	psect	text173,global,reloc=2,class=CODE,delta=1
   196                           	psect	text174,global,reloc=2,class=CODE,delta=1
   197                           	psect	text175,global,reloc=2,class=CODE,delta=1
   198                           	psect	text176,global,reloc=2,class=CODE,delta=1
   199                           	psect	text177,global,reloc=2,class=CODE,delta=1
   200                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   201                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   202                           	dabs	1,0xE7E,1,_errataTempL
   203                           	dabs	1,0xE7F,1,_errataTempH
   204  0000                     
   205                           ;	pragma psect bigdata=TCB_uRAM_BIG
   206                           ;	pragma psect data=TCB_uRAM
   207                           ;	pragma psect data=ordinary_data_sect
   208                           ;	pragma psect bigdata=ordinary_data_sect_big
   209  0000                     
   210                           	psect	idataBANK0
   211  01BAE0                     __pidataBANK0:
   212                           	opt stack 0
   213                           
   214                           ;initializer for _dwLFSRRandSeed
   215  01BAE0  9F9E               	dw	40862
   216  01BAE2  41FE               	dw	16894
   217                           
   218                           ;initializer for _resOK
   219  01BAE4  00                 	db	0
   220  01BAE5  10                 	db	16
   221  01BAE6  FF                 	db	255
   222                           
   223                           ;initializer for _badChecksum
   224  01BAE7  FF                 	db	255
   225  01BAE8  00                 	db	0
   226                           
   227                           ;initializer for _invalidCommand
   228  01BAE9  FF                 	db	255
   229  01BAEA  01                 	db	1
   230                           
   231                           	psect	idataBANK1
   232  01BB0A                     __pidataBANK1:
   233                           	opt stack 0
   234                           
   235                           ;initializer for SyncTCB@hLastTCB
   236  01BB0A  FE                 	db	254
   237                           
   238                           ;initializer for _hCurrentTCP
   239  01BB0B  FE                 	db	254
   240                           
   241                           ;initializer for _s_irCodeBitIdx
   242  01BB0C  01                 	db	1
   243                           
   244                           ;initializer for _s_prevIRPort
   245  01BB0D  01                 	db	1
   246  0000                     _reserveSettingsArr_absconstaddr	set	118784
   247                           
   248                           	psect	mediumconst
   249  00FE2A                     __pmediumconst:
   250                           	opt stack 0
   251  00FE2A  00                 	db	0
   252  00FE2B                     _LOGS:
   253                           	opt stack 0
   254  00FE2B  0FFF               	dw	4095
   255  00FE2D  0FC4               	dw	4036
   256  00FE2F  0F8B               	dw	3979
   257  00FE31  0F52               	dw	3922
   258  00FE33  0F1A               	dw	3866
   259  00FE35  0EE3               	dw	3811
   260  00FE37  0EAC               	dw	3756
   261  00FE39  0E77               	dw	3703
   262  00FE3B  0E42               	dw	3650
   263  00FE3D  0E0E               	dw	3598
   264  00FE3F  0DDA               	dw	3546
   265  00FE41  0DA7               	dw	3495
   266  00FE43  0D76               	dw	3446
   267  00FE45  0D44               	dw	3396
   268  00FE47  0D14               	dw	3348
   269  00FE49  0CE4               	dw	3300
   270  00FE4B  0CB5               	dw	3253
   271  00FE4D  0C86               	dw	3206
   272  00FE4F  0C58               	dw	3160
   273  00FE51  0C2B               	dw	3115
   274  00FE53  0BFF               	dw	3071
   275  00FE55  0BD3               	dw	3027
   276  00FE57  0BA8               	dw	2984
   277  00FE59  0B7D               	dw	2941
   278  00FE5B  0B53               	dw	2899
   279  00FE5D  0B2A               	dw	2858
   280  00FE5F  0B01               	dw	2817
   281  00FE61  0AD9               	dw	2777
   282  00FE63  0AB1               	dw	2737
   283  00FE65  0A8A               	dw	2698
   284  00FE67  0A63               	dw	2659
   285  00FE69  0A3D               	dw	2621
   286  00FE6B  0A18               	dw	2584
   287  00FE6D  09F3               	dw	2547
   288  00FE6F  09CE               	dw	2510
   289  00FE71  09AB               	dw	2475
   290  00FE73  0987               	dw	2439
   291  00FE75  0964               	dw	2404
   292  00FE77  0942               	dw	2370
   293  00FE79  0920               	dw	2336
   294  00FE7B  08FF               	dw	2303
   295  00FE7D  08DE               	dw	2270
   296  00FE7F  08BD               	dw	2237
   297  00FE81  089D               	dw	2205
   298  00FE83  087E               	dw	2174
   299  00FE85  085F               	dw	2143
   300  00FE87  0840               	dw	2112
   301  00FE89  0822               	dw	2082
   302  00FE8B                     __end_of_LOGS:
   303                           	opt stack 0
   304  00FE8B                     _dpowers:
   305                           	opt stack 0
   306  00FE8B  0001               	dw	1
   307  00FE8D  0000               	dw	0
   308  00FE8F  000A               	dw	10
   309  00FE91  0000               	dw	0
   310  00FE93  0064               	dw	100
   311  00FE95  0000               	dw	0
   312  00FE97  03E8               	dw	1000
   313  00FE99  0000               	dw	0
   314  00FE9B  2710               	dw	10000
   315  00FE9D  0000               	dw	0
   316  00FE9F  86A0               	dw	34464
   317  00FEA1  0001               	dw	1
   318  00FEA3  4240               	dw	16960
   319  00FEA5  000F               	dw	15
   320  00FEA7  9680               	dw	38528
   321  00FEA9  0098               	dw	152
   322  00FEAB  E100               	dw	57600
   323  00FEAD  05F5               	dw	1525
   324  00FEAF  CA00               	dw	51712
   325  00FEB1  3B9A               	dw	15258
   326  00FEB3                     __end_of_dpowers:
   327                           	opt stack 0
   328  00FEB3                     __npowers_:
   329                           	opt stack 0
   330  00FEB3  00                 	db	0
   331  00FEB4  80                 	db	128
   332  00FEB5  3F                 	db	63
   333  00FEB6  CD                 	db	205
   334  00FEB7  CC                 	db	204
   335  00FEB8  3D                 	db	61
   336  00FEB9  D7                 	db	215
   337  00FEBA  23                 	db	35
   338  00FEBB  3C                 	db	60
   339  00FEBC  12                 	db	18
   340  00FEBD  83                 	db	131
   341  00FEBE  3A                 	db	58
   342  00FEBF  B7                 	db	183
   343  00FEC0  D1                 	db	209
   344  00FEC1  38                 	db	56
   345  00FEC2  C6                 	db	198
   346  00FEC3  27                 	db	39
   347  00FEC4  37                 	db	55
   348  00FEC5  38                 	db	56
   349  00FEC6  86                 	db	134
   350  00FEC7  35                 	db	53
   351  00FEC8  C0                 	db	192
   352  00FEC9  D6                 	db	214
   353  00FECA  33                 	db	51
   354  00FECB  CC                 	db	204
   355  00FECC  2B                 	db	43
   356  00FECD  32                 	db	50
   357  00FECE  70                 	db	112
   358  00FECF  89                 	db	137
   359  00FED0  30                 	db	48
   360  00FED1  E7                 	db	231
   361  00FED2  DB                 	db	219
   362  00FED3  2E                 	db	46
   363  00FED4  E5                 	db	229
   364  00FED5  3C                 	db	60
   365  00FED6  1E                 	db	30
   366  00FED7  42                 	db	66
   367  00FED8  A2                 	db	162
   368  00FED9  0D                 	db	13
   369  00FEDA                     __end_of__npowers_:
   370                           	opt stack 0
   371  00FEDA                     __powers_:
   372                           	opt stack 0
   373  00FEDA  00                 	db	0
   374  00FEDB  80                 	db	128
   375  00FEDC  3F                 	db	63
   376  00FEDD  00                 	db	0
   377  00FEDE  20                 	db	32
   378  00FEDF  41                 	db	65
   379  00FEE0  00                 	db	0
   380  00FEE1  C8                 	db	200
   381  00FEE2  42                 	db	66
   382  00FEE3  00                 	db	0
   383  00FEE4  7A                 	db	122
   384  00FEE5  44                 	db	68
   385  00FEE6  40                 	db	64
   386  00FEE7  1C                 	db	28
   387  00FEE8  46                 	db	70
   388  00FEE9  50                 	db	80
   389  00FEEA  C3                 	db	195
   390  00FEEB  47                 	db	71
   391  00FEEC  24                 	db	36
   392  00FEED  74                 	db	116
   393  00FEEE  49                 	db	73
   394  00FEEF  97                 	db	151
   395  00FEF0  18                 	db	24
   396  00FEF1  4B                 	db	75
   397  00FEF2  BC                 	db	188
   398  00FEF3  BE                 	db	190
   399  00FEF4  4C                 	db	76
   400  00FEF5  6B                 	db	107
   401  00FEF6  6E                 	db	110
   402  00FEF7  4E                 	db	78
   403  00FEF8  03                 	db	3
   404  00FEF9  15                 	db	21
   405  00FEFA  50                 	db	80
   406  00FEFB  79                 	db	121
   407  00FEFC  AD                 	db	173
   408  00FEFD  60                 	db	96
   409  00FEFE  F3                 	db	243
   410  00FEFF  49                 	db	73
   411  00FF00  71                 	db	113
   412  00FF01                     __end_of__powers_:
   413                           	opt stack 0
   414  00FF01                     _TCPSocketInitializer:
   415                           	opt stack 0
   416  00FF01  01                 	db	1
   417  00FF02  00                 	db	0
   418  00FF03  0014               	dw	20
   419  00FF05  0014               	dw	20
   420  00FF07                     __end_of_TCPSocketInitializer:
   421                           	opt stack 0
   422  00FF07                     _SETTINGS_ADDR:
   423                           	opt stack 0
   424  00FF07  D000               	dw	53248
   425  00FF09  0001               	dw	1
   426  00FF0B                     __end_of_SETTINGS_ADDR:
   427                           	opt stack 0
   428  00FF0B                     _SETTINGS_LEN:
   429                           	opt stack 0
   430  00FF0B  2000               	dw	8192
   431  00FF0D  0000               	dw	0
   432  00FF0F                     __end_of_SETTINGS_LEN:
   433                           	opt stack 0
   434  00FF0F                     _IR_VOLUME_DOWN:
   435                           	opt stack 0
   436  00FF0F  57                 	db	87
   437  00FF10  01                 	db	1
   438  00FF11  50                 	db	80
   439  00FF12  01                 	db	1
   440  00FF13  10                 	db	16
   441  00FF14  01                 	db	1
   442  00FF15  41                 	db	65
   443  00FF16  54                 	db	84
   444  00FF17  04                 	db	4
   445  00FF18                     __end_of_IR_VOLUME_DOWN:
   446                           	opt stack 0
   447  00FF18                     _IR_VOLUME_UP:
   448                           	opt stack 0
   449  00FF18  57                 	db	87
   450  00FF19  01                 	db	1
   451  00FF1A  50                 	db	80
   452  00FF1B  01                 	db	1
   453  00FF1C  00                 	db	0
   454  00FF1D  04                 	db	4
   455  00FF1E  51                 	db	81
   456  00FF1F  51                 	db	81
   457  00FF20  04                 	db	4
   458  00FF21                     __end_of_IR_VOLUME_UP:
   459                           	opt stack 0
   460  00FF21                     _SerializedMACAddress:
   461                           	opt stack 0
   462  00FF21  00                 	db	0
   463  00FF22  04                 	db	4
   464  00FF23  A3                 	db	163
   465  00FF24  00                 	db	0
   466  00FF25  00                 	db	0
   467  00FF26  00                 	db	0
   468  00FF27                     __end_of_SerializedMACAddress:
   469                           	opt stack 0
   470  00FF27                     _IR_POWER_OFF:
   471                           	opt stack 0
   472  00FF27  83                 	db	131
   473  00FF28  08                 	db	8
   474  00FF29  02                 	db	2
   475  00FF2A                     __end_of_IR_POWER_OFF:
   476                           	opt stack 0
   477  00FF2A                     _IR_POWER_ON:
   478                           	opt stack 0
   479  00FF2A  8B                 	db	139
   480  00FF2B  08                 	db	8
   481  00FF2C  02                 	db	2
   482  00FF2D                     __end_of_IR_POWER_ON:
   483                           	opt stack 0
   484  0000                     _reserveSettingsArr_absconstaddr	set	118784
   485  00FF2D                     __stringdata:
   486                           	opt stack 0
   487  00FF2D                     STR_12:
   488  00FF2D  53                 	db	83	;'S'
   489  00FF2E  2F                 	db	47
   490  00FF2F  52                 	db	82	;'R'
   491  00FF30  3A                 	db	58	;':'
   492  00FF31  20                 	db	32
   493  00FF32  31                 	db	49	;'1'
   494  00FF33  39                 	db	57	;'9'
   495  00FF34  32                 	db	50	;'2'
   496  00FF35  2E                 	db	46
   497  00FF36  30                 	db	48	;'0'
   498  00FF37  6B                 	db	107	;'k'
   499  00FF38  48                 	db	72	;'H'
   500  00FF39  7A                 	db	122	;'z'
   501  00FF3A  20                 	db	32
   502  00FF3B  20                 	db	32
   503  00FF3C  20                 	db	32
   504  00FF3D  00                 	db	0
   505  00FF3E                     STR_11:
   506  00FF3E  53                 	db	83	;'S'
   507  00FF3F  2F                 	db	47
   508  00FF40  52                 	db	82	;'R'
   509  00FF41  3A                 	db	58	;':'
   510  00FF42  20                 	db	32
   511  00FF43  20                 	db	32
   512  00FF44  39                 	db	57	;'9'
   513  00FF45  36                 	db	54	;'6'
   514  00FF46  2E                 	db	46
   515  00FF47  30                 	db	48	;'0'
   516  00FF48  6B                 	db	107	;'k'
   517  00FF49  48                 	db	72	;'H'
   518  00FF4A  7A                 	db	122	;'z'
   519  00FF4B  20                 	db	32
   520  00FF4C  20                 	db	32
   521  00FF4D  20                 	db	32
   522  00FF4E  00                 	db	0
   523  00FF4F                     STR_9:
   524  00FF4F  53                 	db	83	;'S'
   525  00FF50  2F                 	db	47
   526  00FF51  52                 	db	82	;'R'
   527  00FF52  3A                 	db	58	;':'
   528  00FF53  20                 	db	32
   529  00FF54  20                 	db	32
   530  00FF55  34                 	db	52	;'4'
   531  00FF56  38                 	db	56	;'8'
   532  00FF57  2E                 	db	46
   533  00FF58  30                 	db	48	;'0'
   534  00FF59  6B                 	db	107	;'k'
   535  00FF5A  48                 	db	72	;'H'
   536  00FF5B  7A                 	db	122	;'z'
   537  00FF5C  20                 	db	32
   538  00FF5D  20                 	db	32
   539  00FF5E  20                 	db	32
   540  00FF5F  00                 	db	0
   541  00FF60                     STR_8:
   542  00FF60  53                 	db	83	;'S'
   543  00FF61  2F                 	db	47
   544  00FF62  52                 	db	82	;'R'
   545  00FF63  3A                 	db	58	;':'
   546  00FF64  20                 	db	32
   547  00FF65  20                 	db	32
   548  00FF66  34                 	db	52	;'4'
   549  00FF67  34                 	db	52	;'4'
   550  00FF68  2E                 	db	46
   551  00FF69  31                 	db	49	;'1'
   552  00FF6A  6B                 	db	107	;'k'
   553  00FF6B  48                 	db	72	;'H'
   554  00FF6C  7A                 	db	122	;'z'
   555  00FF6D  20                 	db	32
   556  00FF6E  20                 	db	32
   557  00FF6F  20                 	db	32
   558  00FF70  00                 	db	0
   559  00FF71                     STR_10:
   560  00FF71  53                 	db	83	;'S'
   561  00FF72  2F                 	db	47
   562  00FF73  52                 	db	82	;'R'
   563  00FF74  3A                 	db	58	;':'
   564  00FF75  20                 	db	32
   565  00FF76  20                 	db	32
   566  00FF77  38                 	db	56	;'8'
   567  00FF78  38                 	db	56	;'8'
   568  00FF79  2E                 	db	46
   569  00FF7A  32                 	db	50	;'2'
   570  00FF7B  6B                 	db	107	;'k'
   571  00FF7C  48                 	db	72	;'H'
   572  00FF7D  7A                 	db	122	;'z'
   573  00FF7E  20                 	db	32
   574  00FF7F  20                 	db	32
   575  00FF80  20                 	db	32
   576  00FF81  00                 	db	0
   577  00FF82                     STR_13:
   578  00FF82  53                 	db	83	;'S'
   579  00FF83  2F                 	db	47
   580  00FF84  52                 	db	82	;'R'
   581  00FF85  3A                 	db	58	;':'
   582  00FF86  20                 	db	32
   583  00FF87  31                 	db	49	;'1'
   584  00FF88  37                 	db	55	;'7'
   585  00FF89  36                 	db	54	;'6'
   586  00FF8A  2E                 	db	46
   587  00FF8B  34                 	db	52	;'4'
   588  00FF8C  6B                 	db	107	;'k'
   589  00FF8D  48                 	db	72	;'H'
   590  00FF8E  7A                 	db	122	;'z'
   591  00FF8F  20                 	db	32
   592  00FF90  20                 	db	32
   593  00FF91  20                 	db	32
   594  00FF92  00                 	db	0
   595  00FF93                     STR_5:
   596  00FF93  53                 	db	83	;'S'
   597  00FF94  74                 	db	116	;'t'
   598  00FF95  6F                 	db	111	;'o'
   599  00FF96  72                 	db	114	;'r'
   600  00FF97  65                 	db	101	;'e'
   601  00FF98  64                 	db	100	;'d'
   602  00FF99  20                 	db	32
   603  00FF9A  20                 	db	32
   604  00FF9B  20                 	db	32
   605  00FF9C  20                 	db	32
   606  00FF9D  20                 	db	32
   607  00FF9E  20                 	db	32
   608  00FF9F  20                 	db	32
   609  00FFA0  20                 	db	32
   610  00FFA1  20                 	db	32
   611  00FFA2  20                 	db	32
   612  00FFA3  00                 	db	0
   613  00FFA4                     STR_6:
   614  00FFA4  4E                 	db	78	;'N'
   615  00FFA5  6F                 	db	111	;'o'
   616  00FFA6  20                 	db	32
   617  00FFA7  63                 	db	99	;'c'
   618  00FFA8  68                 	db	104	;'h'
   619  00FFA9  61                 	db	97	;'a'
   620  00FFAA  6E                 	db	110	;'n'
   621  00FFAB  67                 	db	103	;'g'
   622  00FFAC  65                 	db	101	;'e'
   623  00FFAD  20                 	db	32
   624  00FFAE  20                 	db	32
   625  00FFAF  20                 	db	32
   626  00FFB0  20                 	db	32
   627  00FFB1  20                 	db	32
   628  00FFB2  20                 	db	32
   629  00FFB3  20                 	db	32
   630  00FFB4  00                 	db	0
   631  00FFB5                     STR_4:
   632  00FFB5  45                 	db	69	;'E'
   633  00FFB6  72                 	db	114	;'r'
   634  00FFB7  61                 	db	97	;'a'
   635  00FFB8  73                 	db	115	;'s'
   636  00FFB9  69                 	db	105	;'i'
   637  00FFBA  6E                 	db	110	;'n'
   638  00FFBB  67                 	db	103	;'g'
   639  00FFBC  2E                 	db	46
   640  00FFBD  2E                 	db	46
   641  00FFBE  2E                 	db	46
   642  00FFBF  20                 	db	32
   643  00FFC0  20                 	db	32
   644  00FFC1  20                 	db	32
   645  00FFC2  20                 	db	32
   646  00FFC3  20                 	db	32
   647  00FFC4  20                 	db	32
   648  00FFC5  00                 	db	0
   649  00FFC6                     STR_3:
   650  00FFC6  57                 	db	87	;'W'
   651  00FFC7  72                 	db	114	;'r'
   652  00FFC8  69                 	db	105	;'i'
   653  00FFC9  74                 	db	116	;'t'
   654  00FFCA  69                 	db	105	;'i'
   655  00FFCB  6E                 	db	110	;'n'
   656  00FFCC  67                 	db	103	;'g'
   657  00FFCD  2E                 	db	46
   658  00FFCE  2E                 	db	46
   659  00FFCF  2E                 	db	46
   660  00FFD0  20                 	db	32
   661  00FFD1  20                 	db	32
   662  00FFD2  20                 	db	32
   663  00FFD3  20                 	db	32
   664  00FFD4  20                 	db	32
   665  00FFD5  20                 	db	32
   666  00FFD6  00                 	db	0
   667  00FFD7                     STR_2:
   668  00FFD7  50                 	db	80	;'P'
   669  00FFD8  72                 	db	114	;'r'
   670  00FFD9  65                 	db	101	;'e'
   671  00FFDA  70                 	db	112	;'p'
   672  00FFDB  61                 	db	97	;'a'
   673  00FFDC  72                 	db	114	;'r'
   674  00FFDD  69                 	db	105	;'i'
   675  00FFDE  6E                 	db	110	;'n'
   676  00FFDF  67                 	db	103	;'g'
   677  00FFE0  2E                 	db	46
   678  00FFE1  2E                 	db	46
   679  00FFE2  2E                 	db	46
   680  00FFE3  20                 	db	32
   681  00FFE4  20                 	db	32
   682  00FFE5  20                 	db	32
   683  00FFE6  20                 	db	32
   684  00FFE7  00                 	db	0
   685  00FFE8                     STR_7:
   686  00FFE8  56                 	db	86	;'V'
   687  00FFE9  6F                 	db	111	;'o'
   688  00FFEA  6C                 	db	108	;'l'
   689  00FFEB  75                 	db	117	;'u'
   690  00FFEC  6D                 	db	109	;'m'
   691  00FFED  65                 	db	101	;'e'
   692  00FFEE  20                 	db	32
   693  00FFEF  25                 	db	37
   694  00FFF0  37                 	db	55	;'7'
   695  00FFF1  2E                 	db	46
   696  00FFF2  33                 	db	51	;'3'
   697  00FFF3  66                 	db	102	;'f'
   698  00FFF4  64                 	db	100	;'d'
   699  00FFF5  42                 	db	66	;'B'
   700  00FFF6  00                 	db	0
   701  00FFF7                     STR_1:
   702  00FFF7  54                 	db	84	;'T'
   703  00FFF8  68                 	db	104	;'h'
   704  00FFF9  65                 	db	101	;'e'
   705  00FFFA  44                 	db	68	;'D'
   706  00FFFB  41                 	db	65	;'A'
   707  00FFFC  43                 	db	67	;'C'
   708  00FFFD  00                 	db	0
   709  00FFFE                     __end_of__stringdata:
   710                           	opt stack 0
   711                           
   712                           ; #config settings
   713  00FFFE  00                 	db	0	; dummy byte at the end
   714  0000                     
   715                           	psect	_reserveSettingsArr_const
   716  01D000                     __p_reserveSettingsArr_const:
   717                           	opt stack 0
   718  01D000                     _reserveSettingsArr:
   719                           	opt stack 0
   720  01D000  00                 	db	0
   721  01D001  00                 	db	0
   722  01D002  00                 	db	0
   723  01D003  00                 	db	0
   724  01D004  00                 	db	0
   725  01D005  00                 	db	0
   726  01D006  00                 	db	0
   727  01D007  00                 	db	0
   728  01D008  00                 	db	0
   729  01D009  00                 	db	0
   730  01D00A  00                 	db	0
   731  01D00B  00                 	db	0
   732  01D00C  00                 	db	0
   733  01D00D  00                 	db	0
   734  01D00E  00                 	db	0
   735  01D00F  00                 	db	0
   736  01D010  00                 	db	0
   737  01D011  00                 	db	0
   738  01D012  00                 	db	0
   739  01D013  00                 	db	0
   740  01D014  00                 	db	0
   741  01D015  00                 	db	0
   742  01D016  00                 	db	0
   743  01D017  00                 	db	0
   744  01D018  00                 	db	0
   745  01D019  00                 	db	0
   746  01D01A  00                 	db	0
   747  01D01B  00                 	db	0
   748  01D01C  00                 	db	0
   749  01D01D  00                 	db	0
   750  01D01E  00                 	db	0
   751  01D01F  00                 	db	0
   752  01D020  00                 	db	0
   753  01D021  00                 	db	0
   754  01D022  00                 	db	0
   755  01D023  00                 	db	0
   756  01D024  00                 	db	0
   757  01D025  00                 	db	0
   758  01D026  00                 	db	0
   759  01D027  00                 	db	0
   760  01D028  00                 	db	0
   761  01D029  00                 	db	0
   762  01D02A  00                 	db	0
   763  01D02B  00                 	db	0
   764  01D02C  00                 	db	0
   765  01D02D  00                 	db	0
   766  01D02E  00                 	db	0
   767  01D02F  00                 	db	0
   768  01D030  00                 	db	0
   769  01D031  00                 	db	0
   770  01D032  00                 	db	0
   771  01D033  00                 	db	0
   772  01D034  00                 	db	0
   773  01D035  00                 	db	0
   774  01D036  00                 	db	0
   775  01D037  00                 	db	0
   776  01D038  00                 	db	0
   777  01D039  00                 	db	0
   778  01D03A  00                 	db	0
   779  01D03B  00                 	db	0
   780  01D03C  00                 	db	0
   781  01D03D  00                 	db	0
   782  01D03E  00                 	db	0
   783  01D03F  00                 	db	0
   784  01D040  00                 	db	0
   785  01D041  00                 	db	0
   786  01D042  00                 	db	0
   787  01D043  00                 	db	0
   788  01D044  00                 	db	0
   789  01D045  00                 	db	0
   790  01D046  00                 	db	0
   791  01D047  00                 	db	0
   792  01D048  00                 	db	0
   793  01D049  00                 	db	0
   794  01D04A  00                 	db	0
   795  01D04B  00                 	db	0
   796  01D04C  00                 	db	0
   797  01D04D  00                 	db	0
   798  01D04E  00                 	db	0
   799  01D04F  00                 	db	0
   800  01D050  00                 	db	0
   801  01D051  00                 	db	0
   802  01D052  00                 	db	0
   803  01D053  00                 	db	0
   804  01D054  00                 	db	0
   805  01D055  00                 	db	0
   806  01D056  00                 	db	0
   807  01D057  00                 	db	0
   808  01D058  00                 	db	0
   809  01D059  00                 	db	0
   810  01D05A  00                 	db	0
   811  01D05B  00                 	db	0
   812  01D05C  00                 	db	0
   813  01D05D  00                 	db	0
   814  01D05E  00                 	db	0
   815  01D05F  00                 	db	0
   816  01D060  00                 	db	0
   817  01D061  00                 	db	0
   818  01D062  00                 	db	0
   819  01D063  00                 	db	0
   820  01D064  00                 	db	0
   821  01D065  00                 	db	0
   822  01D066  00                 	db	0
   823  01D067  00                 	db	0
   824  01D068  00                 	db	0
   825  01D069  00                 	db	0
   826  01D06A  00                 	db	0
   827  01D06B  00                 	db	0
   828  01D06C  00                 	db	0
   829  01D06D  00                 	db	0
   830  01D06E  00                 	db	0
   831  01D06F  00                 	db	0
   832  01D070  00                 	db	0
   833  01D071  00                 	db	0
   834  01D072  00                 	db	0
   835  01D073  00                 	db	0
   836  01D074  00                 	db	0
   837  01D075  00                 	db	0
   838  01D076  00                 	db	0
   839  01D077  00                 	db	0
   840  01D078  00                 	db	0
   841  01D079  00                 	db	0
   842  01D07A  00                 	db	0
   843  01D07B  00                 	db	0
   844  01D07C  00                 	db	0
   845  01D07D  00                 	db	0
   846  01D07E  00                 	db	0
   847  01D07F  00                 	db	0
   848  01D080  00                 	db	0
   849  01D081  00                 	db	0
   850  01D082  00                 	db	0
   851  01D083  00                 	db	0
   852  01D084  00                 	db	0
   853  01D085  00                 	db	0
   854  01D086  00                 	db	0
   855  01D087  00                 	db	0
   856  01D088  00                 	db	0
   857  01D089  00                 	db	0
   858  01D08A  00                 	db	0
   859  01D08B  00                 	db	0
   860  01D08C  00                 	db	0
   861  01D08D  00                 	db	0
   862  01D08E  00                 	db	0
   863  01D08F  00                 	db	0
   864  01D090  00                 	db	0
   865  01D091  00                 	db	0
   866  01D092  00                 	db	0
   867  01D093  00                 	db	0
   868  01D094  00                 	db	0
   869  01D095  00                 	db	0
   870  01D096  00                 	db	0
   871  01D097  00                 	db	0
   872  01D098  00                 	db	0
   873  01D099  00                 	db	0
   874  01D09A  00                 	db	0
   875  01D09B  00                 	db	0
   876  01D09C  00                 	db	0
   877  01D09D  00                 	db	0
   878  01D09E  00                 	db	0
   879  01D09F  00                 	db	0
   880  01D0A0  00                 	db	0
   881  01D0A1  00                 	db	0
   882  01D0A2  00                 	db	0
   883  01D0A3  00                 	db	0
   884  01D0A4  00                 	db	0
   885  01D0A5  00                 	db	0
   886  01D0A6  00                 	db	0
   887  01D0A7  00                 	db	0
   888  01D0A8  00                 	db	0
   889  01D0A9  00                 	db	0
   890  01D0AA  00                 	db	0
   891  01D0AB  00                 	db	0
   892  01D0AC  00                 	db	0
   893  01D0AD  00                 	db	0
   894  01D0AE  00                 	db	0
   895  01D0AF  00                 	db	0
   896  01D0B0  00                 	db	0
   897  01D0B1  00                 	db	0
   898  01D0B2  00                 	db	0
   899  01D0B3  00                 	db	0
   900  01D0B4  00                 	db	0
   901  01D0B5  00                 	db	0
   902  01D0B6  00                 	db	0
   903  01D0B7  00                 	db	0
   904  01D0B8  00                 	db	0
   905  01D0B9  00                 	db	0
   906  01D0BA  00                 	db	0
   907  01D0BB  00                 	db	0
   908  01D0BC  00                 	db	0
   909  01D0BD  00                 	db	0
   910  01D0BE  00                 	db	0
   911  01D0BF  00                 	db	0
   912  01D0C0  00                 	db	0
   913  01D0C1  00                 	db	0
   914  01D0C2  00                 	db	0
   915  01D0C3  00                 	db	0
   916  01D0C4  00                 	db	0
   917  01D0C5  00                 	db	0
   918  01D0C6  00                 	db	0
   919  01D0C7  00                 	db	0
   920  01D0C8  00                 	db	0
   921  01D0C9  00                 	db	0
   922  01D0CA  00                 	db	0
   923  01D0CB  00                 	db	0
   924  01D0CC  00                 	db	0
   925  01D0CD  00                 	db	0
   926  01D0CE  00                 	db	0
   927  01D0CF  00                 	db	0
   928  01D0D0  00                 	db	0
   929  01D0D1  00                 	db	0
   930  01D0D2  00                 	db	0
   931  01D0D3  00                 	db	0
   932  01D0D4  00                 	db	0
   933  01D0D5  00                 	db	0
   934  01D0D6  00                 	db	0
   935  01D0D7  00                 	db	0
   936  01D0D8  00                 	db	0
   937  01D0D9  00                 	db	0
   938  01D0DA  00                 	db	0
   939  01D0DB  00                 	db	0
   940  01D0DC  00                 	db	0
   941  01D0DD  00                 	db	0
   942  01D0DE  00                 	db	0
   943  01D0DF  00                 	db	0
   944  01D0E0  00                 	db	0
   945  01D0E1  00                 	db	0
   946  01D0E2  00                 	db	0
   947  01D0E3  00                 	db	0
   948  01D0E4  00                 	db	0
   949  01D0E5  00                 	db	0
   950  01D0E6  00                 	db	0
   951  01D0E7  00                 	db	0
   952  01D0E8  00                 	db	0
   953  01D0E9  00                 	db	0
   954  01D0EA  00                 	db	0
   955  01D0EB  00                 	db	0
   956  01D0EC  00                 	db	0
   957  01D0ED  00                 	db	0
   958  01D0EE  00                 	db	0
   959  01D0EF  00                 	db	0
   960  01D0F0  00                 	db	0
   961  01D0F1  00                 	db	0
   962  01D0F2  00                 	db	0
   963  01D0F3  00                 	db	0
   964  01D0F4  00                 	db	0
   965  01D0F5  00                 	db	0
   966  01D0F6  00                 	db	0
   967  01D0F7  00                 	db	0
   968  01D0F8  00                 	db	0
   969  01D0F9  00                 	db	0
   970  01D0FA  00                 	db	0
   971  01D0FB  00                 	db	0
   972  01D0FC  00                 	db	0
   973  01D0FD  00                 	db	0
   974  01D0FE  00                 	db	0
   975  01D0FF  00                 	db	0
   976  01D100  00                 	db	0
   977  01D101  00                 	db	0
   978  01D102  00                 	db	0
   979  01D103  00                 	db	0
   980  01D104  00                 	db	0
   981  01D105  00                 	db	0
   982  01D106  00                 	db	0
   983  01D107  00                 	db	0
   984  01D108  00                 	db	0
   985  01D109  00                 	db	0
   986  01D10A  00                 	db	0
   987  01D10B  00                 	db	0
   988  01D10C  00                 	db	0
   989  01D10D  00                 	db	0
   990  01D10E  00                 	db	0
   991  01D10F  00                 	db	0
   992  01D110  00                 	db	0
   993  01D111  00                 	db	0
   994  01D112  00                 	db	0
   995  01D113  00                 	db	0
   996  01D114  00                 	db	0
   997  01D115  00                 	db	0
   998  01D116  00                 	db	0
   999  01D117  00                 	db	0
  1000  01D118  00                 	db	0
  1001  01D119  00                 	db	0
  1002  01D11A  00                 	db	0
  1003  01D11B  00                 	db	0
  1004  01D11C  00                 	db	0
  1005  01D11D  00                 	db	0
  1006  01D11E  00                 	db	0
  1007  01D11F  00                 	db	0
  1008  01D120  00                 	db	0
  1009  01D121  00                 	db	0
  1010  01D122  00                 	db	0
  1011  01D123  00                 	db	0
  1012  01D124  00                 	db	0
  1013  01D125  00                 	db	0
  1014  01D126  00                 	db	0
  1015  01D127  00                 	db	0
  1016  01D128  00                 	db	0
  1017  01D129  00                 	db	0
  1018  01D12A  00                 	db	0
  1019  01D12B  00                 	db	0
  1020  01D12C  00                 	db	0
  1021  01D12D  00                 	db	0
  1022  01D12E  00                 	db	0
  1023  01D12F  00                 	db	0
  1024  01D130  00                 	db	0
  1025  01D131  00                 	db	0
  1026  01D132  00                 	db	0
  1027  01D133  00                 	db	0
  1028  01D134  00                 	db	0
  1029  01D135  00                 	db	0
  1030  01D136  00                 	db	0
  1031  01D137  00                 	db	0
  1032  01D138  00                 	db	0
  1033  01D139  00                 	db	0
  1034  01D13A  00                 	db	0
  1035  01D13B  00                 	db	0
  1036  01D13C  00                 	db	0
  1037  01D13D  00                 	db	0
  1038  01D13E  00                 	db	0
  1039  01D13F  00                 	db	0
  1040  01D140  00                 	db	0
  1041  01D141  00                 	db	0
  1042  01D142  00                 	db	0
  1043  01D143  00                 	db	0
  1044  01D144  00                 	db	0
  1045  01D145  00                 	db	0
  1046  01D146  00                 	db	0
  1047  01D147  00                 	db	0
  1048  01D148  00                 	db	0
  1049  01D149  00                 	db	0
  1050  01D14A  00                 	db	0
  1051  01D14B  00                 	db	0
  1052  01D14C  00                 	db	0
  1053  01D14D  00                 	db	0
  1054  01D14E  00                 	db	0
  1055  01D14F  00                 	db	0
  1056  01D150  00                 	db	0
  1057  01D151  00                 	db	0
  1058  01D152  00                 	db	0
  1059  01D153  00                 	db	0
  1060  01D154  00                 	db	0
  1061  01D155  00                 	db	0
  1062  01D156  00                 	db	0
  1063  01D157  00                 	db	0
  1064  01D158  00                 	db	0
  1065  01D159  00                 	db	0
  1066  01D15A  00                 	db	0
  1067  01D15B  00                 	db	0
  1068  01D15C  00                 	db	0
  1069  01D15D  00                 	db	0
  1070  01D15E  00                 	db	0
  1071  01D15F  00                 	db	0
  1072  01D160  00                 	db	0
  1073  01D161  00                 	db	0
  1074  01D162  00                 	db	0
  1075  01D163  00                 	db	0
  1076  01D164  00                 	db	0
  1077  01D165  00                 	db	0
  1078  01D166  00                 	db	0
  1079  01D167  00                 	db	0
  1080  01D168  00                 	db	0
  1081  01D169  00                 	db	0
  1082  01D16A  00                 	db	0
  1083  01D16B  00                 	db	0
  1084  01D16C  00                 	db	0
  1085  01D16D  00                 	db	0
  1086  01D16E  00                 	db	0
  1087  01D16F  00                 	db	0
  1088  01D170  00                 	db	0
  1089  01D171  00                 	db	0
  1090  01D172  00                 	db	0
  1091  01D173  00                 	db	0
  1092  01D174  00                 	db	0
  1093  01D175  00                 	db	0
  1094  01D176  00                 	db	0
  1095  01D177  00                 	db	0
  1096  01D178  00                 	db	0
  1097  01D179  00                 	db	0
  1098  01D17A  00                 	db	0
  1099  01D17B  00                 	db	0
  1100  01D17C  00                 	db	0
  1101  01D17D  00                 	db	0
  1102  01D17E  00                 	db	0
  1103  01D17F  00                 	db	0
  1104  01D180  00                 	db	0
  1105  01D181  00                 	db	0
  1106  01D182  00                 	db	0
  1107  01D183  00                 	db	0
  1108  01D184  00                 	db	0
  1109  01D185  00                 	db	0
  1110  01D186  00                 	db	0
  1111  01D187  00                 	db	0
  1112  01D188  00                 	db	0
  1113  01D189  00                 	db	0
  1114  01D18A  00                 	db	0
  1115  01D18B  00                 	db	0
  1116  01D18C  00                 	db	0
  1117  01D18D  00                 	db	0
  1118  01D18E  00                 	db	0
  1119  01D18F  00                 	db	0
  1120  01D190  00                 	db	0
  1121  01D191  00                 	db	0
  1122  01D192  00                 	db	0
  1123  01D193  00                 	db	0
  1124  01D194  00                 	db	0
  1125  01D195  00                 	db	0
  1126  01D196  00                 	db	0
  1127  01D197  00                 	db	0
  1128  01D198  00                 	db	0
  1129  01D199  00                 	db	0
  1130  01D19A  00                 	db	0
  1131  01D19B  00                 	db	0
  1132  01D19C  00                 	db	0
  1133  01D19D  00                 	db	0
  1134  01D19E  00                 	db	0
  1135  01D19F  00                 	db	0
  1136  01D1A0  00                 	db	0
  1137  01D1A1  00                 	db	0
  1138  01D1A2  00                 	db	0
  1139  01D1A3  00                 	db	0
  1140  01D1A4  00                 	db	0
  1141  01D1A5  00                 	db	0
  1142  01D1A6  00                 	db	0
  1143  01D1A7  00                 	db	0
  1144  01D1A8  00                 	db	0
  1145  01D1A9  00                 	db	0
  1146  01D1AA  00                 	db	0
  1147  01D1AB  00                 	db	0
  1148  01D1AC  00                 	db	0
  1149  01D1AD  00                 	db	0
  1150  01D1AE  00                 	db	0
  1151  01D1AF  00                 	db	0
  1152  01D1B0  00                 	db	0
  1153  01D1B1  00                 	db	0
  1154  01D1B2  00                 	db	0
  1155  01D1B3  00                 	db	0
  1156  01D1B4  00                 	db	0
  1157  01D1B5  00                 	db	0
  1158  01D1B6  00                 	db	0
  1159  01D1B7  00                 	db	0
  1160  01D1B8  00                 	db	0
  1161  01D1B9  00                 	db	0
  1162  01D1BA  00                 	db	0
  1163  01D1BB  00                 	db	0
  1164  01D1BC  00                 	db	0
  1165  01D1BD  00                 	db	0
  1166  01D1BE  00                 	db	0
  1167  01D1BF  00                 	db	0
  1168  01D1C0  00                 	db	0
  1169  01D1C1  00                 	db	0
  1170  01D1C2  00                 	db	0
  1171  01D1C3  00                 	db	0
  1172  01D1C4  00                 	db	0
  1173  01D1C5  00                 	db	0
  1174  01D1C6  00                 	db	0
  1175  01D1C7  00                 	db	0
  1176  01D1C8  00                 	db	0
  1177  01D1C9  00                 	db	0
  1178  01D1CA  00                 	db	0
  1179  01D1CB  00                 	db	0
  1180  01D1CC  00                 	db	0
  1181  01D1CD  00                 	db	0
  1182  01D1CE  00                 	db	0
  1183  01D1CF  00                 	db	0
  1184  01D1D0  00                 	db	0
  1185  01D1D1  00                 	db	0
  1186  01D1D2  00                 	db	0
  1187  01D1D3  00                 	db	0
  1188  01D1D4  00                 	db	0
  1189  01D1D5  00                 	db	0
  1190  01D1D6  00                 	db	0
  1191  01D1D7  00                 	db	0
  1192  01D1D8  00                 	db	0
  1193  01D1D9  00                 	db	0
  1194  01D1DA  00                 	db	0
  1195  01D1DB  00                 	db	0
  1196  01D1DC  00                 	db	0
  1197  01D1DD  00                 	db	0
  1198  01D1DE  00                 	db	0
  1199  01D1DF  00                 	db	0
  1200  01D1E0  00                 	db	0
  1201  01D1E1  00                 	db	0
  1202  01D1E2  00                 	db	0
  1203  01D1E3  00                 	db	0
  1204  01D1E4  00                 	db	0
  1205  01D1E5  00                 	db	0
  1206  01D1E6  00                 	db	0
  1207  01D1E7  00                 	db	0
  1208  01D1E8  00                 	db	0
  1209  01D1E9  00                 	db	0
  1210  01D1EA  00                 	db	0
  1211  01D1EB  00                 	db	0
  1212  01D1EC  00                 	db	0
  1213  01D1ED  00                 	db	0
  1214  01D1EE  00                 	db	0
  1215  01D1EF  00                 	db	0
  1216  01D1F0  00                 	db	0
  1217  01D1F1  00                 	db	0
  1218  01D1F2  00                 	db	0
  1219  01D1F3  00                 	db	0
  1220  01D1F4  00                 	db	0
  1221  01D1F5  00                 	db	0
  1222  01D1F6  00                 	db	0
  1223  01D1F7  00                 	db	0
  1224  01D1F8  00                 	db	0
  1225  01D1F9  00                 	db	0
  1226  01D1FA  00                 	db	0
  1227  01D1FB  00                 	db	0
  1228  01D1FC  00                 	db	0
  1229  01D1FD  00                 	db	0
  1230  01D1FE  00                 	db	0
  1231  01D1FF  00                 	db	0
  1232  01D200  00                 	db	0
  1233  01D201  00                 	db	0
  1234  01D202  00                 	db	0
  1235  01D203  00                 	db	0
  1236  01D204  00                 	db	0
  1237  01D205  00                 	db	0
  1238  01D206  00                 	db	0
  1239  01D207  00                 	db	0
  1240  01D208  00                 	db	0
  1241  01D209  00                 	db	0
  1242  01D20A  00                 	db	0
  1243  01D20B  00                 	db	0
  1244  01D20C  00                 	db	0
  1245  01D20D  00                 	db	0
  1246  01D20E  00                 	db	0
  1247  01D20F  00                 	db	0
  1248  01D210  00                 	db	0
  1249  01D211  00                 	db	0
  1250  01D212  00                 	db	0
  1251  01D213  00                 	db	0
  1252  01D214  00                 	db	0
  1253  01D215  00                 	db	0
  1254  01D216  00                 	db	0
  1255  01D217  00                 	db	0
  1256  01D218  00                 	db	0
  1257  01D219  00                 	db	0
  1258  01D21A  00                 	db	0
  1259  01D21B  00                 	db	0
  1260  01D21C  00                 	db	0
  1261  01D21D  00                 	db	0
  1262  01D21E  00                 	db	0
  1263  01D21F  00                 	db	0
  1264  01D220  00                 	db	0
  1265  01D221  00                 	db	0
  1266  01D222  00                 	db	0
  1267  01D223  00                 	db	0
  1268  01D224  00                 	db	0
  1269  01D225  00                 	db	0
  1270  01D226  00                 	db	0
  1271  01D227  00                 	db	0
  1272  01D228  00                 	db	0
  1273  01D229  00                 	db	0
  1274  01D22A  00                 	db	0
  1275  01D22B  00                 	db	0
  1276  01D22C  00                 	db	0
  1277  01D22D  00                 	db	0
  1278  01D22E  00                 	db	0
  1279  01D22F  00                 	db	0
  1280  01D230  00                 	db	0
  1281  01D231  00                 	db	0
  1282  01D232  00                 	db	0
  1283  01D233  00                 	db	0
  1284  01D234  00                 	db	0
  1285  01D235  00                 	db	0
  1286  01D236  00                 	db	0
  1287  01D237  00                 	db	0
  1288  01D238  00                 	db	0
  1289  01D239  00                 	db	0
  1290  01D23A  00                 	db	0
  1291  01D23B  00                 	db	0
  1292  01D23C  00                 	db	0
  1293  01D23D  00                 	db	0
  1294  01D23E  00                 	db	0
  1295  01D23F  00                 	db	0
  1296  01D240  00                 	db	0
  1297  01D241  00                 	db	0
  1298  01D242  00                 	db	0
  1299  01D243  00                 	db	0
  1300  01D244  00                 	db	0
  1301  01D245  00                 	db	0
  1302  01D246  00                 	db	0
  1303  01D247  00                 	db	0
  1304  01D248  00                 	db	0
  1305  01D249  00                 	db	0
  1306  01D24A  00                 	db	0
  1307  01D24B  00                 	db	0
  1308  01D24C  00                 	db	0
  1309  01D24D  00                 	db	0
  1310  01D24E  00                 	db	0
  1311  01D24F  00                 	db	0
  1312  01D250  00                 	db	0
  1313  01D251  00                 	db	0
  1314  01D252  00                 	db	0
  1315  01D253  00                 	db	0
  1316  01D254  00                 	db	0
  1317  01D255  00                 	db	0
  1318  01D256  00                 	db	0
  1319  01D257  00                 	db	0
  1320  01D258  00                 	db	0
  1321  01D259  00                 	db	0
  1322  01D25A  00                 	db	0
  1323  01D25B  00                 	db	0
  1324  01D25C  00                 	db	0
  1325  01D25D  00                 	db	0
  1326  01D25E  00                 	db	0
  1327  01D25F  00                 	db	0
  1328  01D260  00                 	db	0
  1329  01D261  00                 	db	0
  1330  01D262  00                 	db	0
  1331  01D263  00                 	db	0
  1332  01D264  00                 	db	0
  1333  01D265  00                 	db	0
  1334  01D266  00                 	db	0
  1335  01D267  00                 	db	0
  1336  01D268  00                 	db	0
  1337  01D269  00                 	db	0
  1338  01D26A  00                 	db	0
  1339  01D26B  00                 	db	0
  1340  01D26C  00                 	db	0
  1341  01D26D  00                 	db	0
  1342  01D26E  00                 	db	0
  1343  01D26F  00                 	db	0
  1344  01D270  00                 	db	0
  1345  01D271  00                 	db	0
  1346  01D272  00                 	db	0
  1347  01D273  00                 	db	0
  1348  01D274  00                 	db	0
  1349  01D275  00                 	db	0
  1350  01D276  00                 	db	0
  1351  01D277  00                 	db	0
  1352  01D278  00                 	db	0
  1353  01D279  00                 	db	0
  1354  01D27A  00                 	db	0
  1355  01D27B  00                 	db	0
  1356  01D27C  00                 	db	0
  1357  01D27D  00                 	db	0
  1358  01D27E  00                 	db	0
  1359  01D27F  00                 	db	0
  1360  01D280  00                 	db	0
  1361  01D281  00                 	db	0
  1362  01D282  00                 	db	0
  1363  01D283  00                 	db	0
  1364  01D284  00                 	db	0
  1365  01D285  00                 	db	0
  1366  01D286  00                 	db	0
  1367  01D287  00                 	db	0
  1368  01D288  00                 	db	0
  1369  01D289  00                 	db	0
  1370  01D28A  00                 	db	0
  1371  01D28B  00                 	db	0
  1372  01D28C  00                 	db	0
  1373  01D28D  00                 	db	0
  1374  01D28E  00                 	db	0
  1375  01D28F  00                 	db	0
  1376  01D290  00                 	db	0
  1377  01D291  00                 	db	0
  1378  01D292  00                 	db	0
  1379  01D293  00                 	db	0
  1380  01D294  00                 	db	0
  1381  01D295  00                 	db	0
  1382  01D296  00                 	db	0
  1383  01D297  00                 	db	0
  1384  01D298  00                 	db	0
  1385  01D299  00                 	db	0
  1386  01D29A  00                 	db	0
  1387  01D29B  00                 	db	0
  1388  01D29C  00                 	db	0
  1389  01D29D  00                 	db	0
  1390  01D29E  00                 	db	0
  1391  01D29F  00                 	db	0
  1392  01D2A0  00                 	db	0
  1393  01D2A1  00                 	db	0
  1394  01D2A2  00                 	db	0
  1395  01D2A3  00                 	db	0
  1396  01D2A4  00                 	db	0
  1397  01D2A5  00                 	db	0
  1398  01D2A6  00                 	db	0
  1399  01D2A7  00                 	db	0
  1400  01D2A8  00                 	db	0
  1401  01D2A9  00                 	db	0
  1402  01D2AA  00                 	db	0
  1403  01D2AB  00                 	db	0
  1404  01D2AC  00                 	db	0
  1405  01D2AD  00                 	db	0
  1406  01D2AE  00                 	db	0
  1407  01D2AF  00                 	db	0
  1408  01D2B0  00                 	db	0
  1409  01D2B1  00                 	db	0
  1410  01D2B2  00                 	db	0
  1411  01D2B3  00                 	db	0
  1412  01D2B4  00                 	db	0
  1413  01D2B5  00                 	db	0
  1414  01D2B6  00                 	db	0
  1415  01D2B7  00                 	db	0
  1416  01D2B8  00                 	db	0
  1417  01D2B9  00                 	db	0
  1418  01D2BA  00                 	db	0
  1419  01D2BB  00                 	db	0
  1420  01D2BC  00                 	db	0
  1421  01D2BD  00                 	db	0
  1422  01D2BE  00                 	db	0
  1423  01D2BF  00                 	db	0
  1424  01D2C0  00                 	db	0
  1425  01D2C1  00                 	db	0
  1426  01D2C2  00                 	db	0
  1427  01D2C3  00                 	db	0
  1428  01D2C4  00                 	db	0
  1429  01D2C5  00                 	db	0
  1430  01D2C6  00                 	db	0
  1431  01D2C7  00                 	db	0
  1432  01D2C8  00                 	db	0
  1433  01D2C9  00                 	db	0
  1434  01D2CA  00                 	db	0
  1435  01D2CB  00                 	db	0
  1436  01D2CC  00                 	db	0
  1437  01D2CD  00                 	db	0
  1438  01D2CE  00                 	db	0
  1439  01D2CF  00                 	db	0
  1440  01D2D0  00                 	db	0
  1441  01D2D1  00                 	db	0
  1442  01D2D2  00                 	db	0
  1443  01D2D3  00                 	db	0
  1444  01D2D4  00                 	db	0
  1445  01D2D5  00                 	db	0
  1446  01D2D6  00                 	db	0
  1447  01D2D7  00                 	db	0
  1448  01D2D8  00                 	db	0
  1449  01D2D9  00                 	db	0
  1450  01D2DA  00                 	db	0
  1451  01D2DB  00                 	db	0
  1452  01D2DC  00                 	db	0
  1453  01D2DD  00                 	db	0
  1454  01D2DE  00                 	db	0
  1455  01D2DF  00                 	db	0
  1456  01D2E0  00                 	db	0
  1457  01D2E1  00                 	db	0
  1458  01D2E2  00                 	db	0
  1459  01D2E3  00                 	db	0
  1460  01D2E4  00                 	db	0
  1461  01D2E5  00                 	db	0
  1462  01D2E6  00                 	db	0
  1463  01D2E7  00                 	db	0
  1464  01D2E8  00                 	db	0
  1465  01D2E9  00                 	db	0
  1466  01D2EA  00                 	db	0
  1467  01D2EB  00                 	db	0
  1468  01D2EC  00                 	db	0
  1469  01D2ED  00                 	db	0
  1470  01D2EE  00                 	db	0
  1471  01D2EF  00                 	db	0
  1472  01D2F0  00                 	db	0
  1473  01D2F1  00                 	db	0
  1474  01D2F2  00                 	db	0
  1475  01D2F3  00                 	db	0
  1476  01D2F4  00                 	db	0
  1477  01D2F5  00                 	db	0
  1478  01D2F6  00                 	db	0
  1479  01D2F7  00                 	db	0
  1480  01D2F8  00                 	db	0
  1481  01D2F9  00                 	db	0
  1482  01D2FA  00                 	db	0
  1483  01D2FB  00                 	db	0
  1484  01D2FC  00                 	db	0
  1485  01D2FD  00                 	db	0
  1486  01D2FE  00                 	db	0
  1487  01D2FF  00                 	db	0
  1488  01D300  00                 	db	0
  1489  01D301  00                 	db	0
  1490  01D302  00                 	db	0
  1491  01D303  00                 	db	0
  1492  01D304  00                 	db	0
  1493  01D305  00                 	db	0
  1494  01D306  00                 	db	0
  1495  01D307  00                 	db	0
  1496  01D308  00                 	db	0
  1497  01D309  00                 	db	0
  1498  01D30A  00                 	db	0
  1499  01D30B  00                 	db	0
  1500  01D30C  00                 	db	0
  1501  01D30D  00                 	db	0
  1502  01D30E  00                 	db	0
  1503  01D30F  00                 	db	0
  1504  01D310  00                 	db	0
  1505  01D311  00                 	db	0
  1506  01D312  00                 	db	0
  1507  01D313  00                 	db	0
  1508  01D314  00                 	db	0
  1509  01D315  00                 	db	0
  1510  01D316  00                 	db	0
  1511  01D317  00                 	db	0
  1512  01D318  00                 	db	0
  1513  01D319  00                 	db	0
  1514  01D31A  00                 	db	0
  1515  01D31B  00                 	db	0
  1516  01D31C  00                 	db	0
  1517  01D31D  00                 	db	0
  1518  01D31E  00                 	db	0
  1519  01D31F  00                 	db	0
  1520  01D320  00                 	db	0
  1521  01D321  00                 	db	0
  1522  01D322  00                 	db	0
  1523  01D323  00                 	db	0
  1524  01D324  00                 	db	0
  1525  01D325  00                 	db	0
  1526  01D326  00                 	db	0
  1527  01D327  00                 	db	0
  1528  01D328  00                 	db	0
  1529  01D329  00                 	db	0
  1530  01D32A  00                 	db	0
  1531  01D32B  00                 	db	0
  1532  01D32C  00                 	db	0
  1533  01D32D  00                 	db	0
  1534  01D32E  00                 	db	0
  1535  01D32F  00                 	db	0
  1536  01D330  00                 	db	0
  1537  01D331  00                 	db	0
  1538  01D332  00                 	db	0
  1539  01D333  00                 	db	0
  1540  01D334  00                 	db	0
  1541  01D335  00                 	db	0
  1542  01D336  00                 	db	0
  1543  01D337  00                 	db	0
  1544  01D338  00                 	db	0
  1545  01D339  00                 	db	0
  1546  01D33A  00                 	db	0
  1547  01D33B  00                 	db	0
  1548  01D33C  00                 	db	0
  1549  01D33D  00                 	db	0
  1550  01D33E  00                 	db	0
  1551  01D33F  00                 	db	0
  1552  01D340  00                 	db	0
  1553  01D341  00                 	db	0
  1554  01D342  00                 	db	0
  1555  01D343  00                 	db	0
  1556  01D344  00                 	db	0
  1557  01D345  00                 	db	0
  1558  01D346  00                 	db	0
  1559  01D347  00                 	db	0
  1560  01D348  00                 	db	0
  1561  01D349  00                 	db	0
  1562  01D34A  00                 	db	0
  1563  01D34B  00                 	db	0
  1564  01D34C  00                 	db	0
  1565  01D34D  00                 	db	0
  1566  01D34E  00                 	db	0
  1567  01D34F  00                 	db	0
  1568  01D350  00                 	db	0
  1569  01D351  00                 	db	0
  1570  01D352  00                 	db	0
  1571  01D353  00                 	db	0
  1572  01D354  00                 	db	0
  1573  01D355  00                 	db	0
  1574  01D356  00                 	db	0
  1575  01D357  00                 	db	0
  1576  01D358  00                 	db	0
  1577  01D359  00                 	db	0
  1578  01D35A  00                 	db	0
  1579  01D35B  00                 	db	0
  1580  01D35C  00                 	db	0
  1581  01D35D  00                 	db	0
  1582  01D35E  00                 	db	0
  1583  01D35F  00                 	db	0
  1584  01D360  00                 	db	0
  1585  01D361  00                 	db	0
  1586  01D362  00                 	db	0
  1587  01D363  00                 	db	0
  1588  01D364  00                 	db	0
  1589  01D365  00                 	db	0
  1590  01D366  00                 	db	0
  1591  01D367  00                 	db	0
  1592  01D368  00                 	db	0
  1593  01D369  00                 	db	0
  1594  01D36A  00                 	db	0
  1595  01D36B  00                 	db	0
  1596  01D36C  00                 	db	0
  1597  01D36D  00                 	db	0
  1598  01D36E  00                 	db	0
  1599  01D36F  00                 	db	0
  1600  01D370  00                 	db	0
  1601  01D371  00                 	db	0
  1602  01D372  00                 	db	0
  1603  01D373  00                 	db	0
  1604  01D374  00                 	db	0
  1605  01D375  00                 	db	0
  1606  01D376  00                 	db	0
  1607  01D377  00                 	db	0
  1608  01D378  00                 	db	0
  1609  01D379  00                 	db	0
  1610  01D37A  00                 	db	0
  1611  01D37B  00                 	db	0
  1612  01D37C  00                 	db	0
  1613  01D37D  00                 	db	0
  1614  01D37E  00                 	db	0
  1615  01D37F  00                 	db	0
  1616  01D380  00                 	db	0
  1617  01D381  00                 	db	0
  1618  01D382  00                 	db	0
  1619  01D383  00                 	db	0
  1620  01D384  00                 	db	0
  1621  01D385  00                 	db	0
  1622  01D386  00                 	db	0
  1623  01D387  00                 	db	0
  1624  01D388  00                 	db	0
  1625  01D389  00                 	db	0
  1626  01D38A  00                 	db	0
  1627  01D38B  00                 	db	0
  1628  01D38C  00                 	db	0
  1629  01D38D  00                 	db	0
  1630  01D38E  00                 	db	0
  1631  01D38F  00                 	db	0
  1632  01D390  00                 	db	0
  1633  01D391  00                 	db	0
  1634  01D392  00                 	db	0
  1635  01D393  00                 	db	0
  1636  01D394  00                 	db	0
  1637  01D395  00                 	db	0
  1638  01D396  00                 	db	0
  1639  01D397  00                 	db	0
  1640  01D398  00                 	db	0
  1641  01D399  00                 	db	0
  1642  01D39A  00                 	db	0
  1643  01D39B  00                 	db	0
  1644  01D39C  00                 	db	0
  1645  01D39D  00                 	db	0
  1646  01D39E  00                 	db	0
  1647  01D39F  00                 	db	0
  1648  01D3A0  00                 	db	0
  1649  01D3A1  00                 	db	0
  1650  01D3A2  00                 	db	0
  1651  01D3A3  00                 	db	0
  1652  01D3A4  00                 	db	0
  1653  01D3A5  00                 	db	0
  1654  01D3A6  00                 	db	0
  1655  01D3A7  00                 	db	0
  1656  01D3A8  00                 	db	0
  1657  01D3A9  00                 	db	0
  1658  01D3AA  00                 	db	0
  1659  01D3AB  00                 	db	0
  1660  01D3AC  00                 	db	0
  1661  01D3AD  00                 	db	0
  1662  01D3AE  00                 	db	0
  1663  01D3AF  00                 	db	0
  1664  01D3B0  00                 	db	0
  1665  01D3B1  00                 	db	0
  1666  01D3B2  00                 	db	0
  1667  01D3B3  00                 	db	0
  1668  01D3B4  00                 	db	0
  1669  01D3B5  00                 	db	0
  1670  01D3B6  00                 	db	0
  1671  01D3B7  00                 	db	0
  1672  01D3B8  00                 	db	0
  1673  01D3B9  00                 	db	0
  1674  01D3BA  00                 	db	0
  1675  01D3BB  00                 	db	0
  1676  01D3BC  00                 	db	0
  1677  01D3BD  00                 	db	0
  1678  01D3BE  00                 	db	0
  1679  01D3BF  00                 	db	0
  1680  01D3C0  00                 	db	0
  1681  01D3C1  00                 	db	0
  1682  01D3C2  00                 	db	0
  1683  01D3C3  00                 	db	0
  1684  01D3C4  00                 	db	0
  1685  01D3C5  00                 	db	0
  1686  01D3C6  00                 	db	0
  1687  01D3C7  00                 	db	0
  1688  01D3C8  00                 	db	0
  1689  01D3C9  00                 	db	0
  1690  01D3CA  00                 	db	0
  1691  01D3CB  00                 	db	0
  1692  01D3CC  00                 	db	0
  1693  01D3CD  00                 	db	0
  1694  01D3CE  00                 	db	0
  1695  01D3CF  00                 	db	0
  1696  01D3D0  00                 	db	0
  1697  01D3D1  00                 	db	0
  1698  01D3D2  00                 	db	0
  1699  01D3D3  00                 	db	0
  1700  01D3D4  00                 	db	0
  1701  01D3D5  00                 	db	0
  1702  01D3D6  00                 	db	0
  1703  01D3D7  00                 	db	0
  1704  01D3D8  00                 	db	0
  1705  01D3D9  00                 	db	0
  1706  01D3DA  00                 	db	0
  1707  01D3DB  00                 	db	0
  1708  01D3DC  00                 	db	0
  1709  01D3DD  00                 	db	0
  1710  01D3DE  00                 	db	0
  1711  01D3DF  00                 	db	0
  1712  01D3E0  00                 	db	0
  1713  01D3E1  00                 	db	0
  1714  01D3E2  00                 	db	0
  1715  01D3E3  00                 	db	0
  1716  01D3E4  00                 	db	0
  1717  01D3E5  00                 	db	0
  1718  01D3E6  00                 	db	0
  1719  01D3E7  00                 	db	0
  1720  01D3E8  00                 	db	0
  1721  01D3E9  00                 	db	0
  1722  01D3EA  00                 	db	0
  1723  01D3EB  00                 	db	0
  1724  01D3EC  00                 	db	0
  1725  01D3ED  00                 	db	0
  1726  01D3EE  00                 	db	0
  1727  01D3EF  00                 	db	0
  1728  01D3F0  00                 	db	0
  1729  01D3F1  00                 	db	0
  1730  01D3F2  00                 	db	0
  1731  01D3F3  00                 	db	0
  1732  01D3F4  00                 	db	0
  1733  01D3F5  00                 	db	0
  1734  01D3F6  00                 	db	0
  1735  01D3F7  00                 	db	0
  1736  01D3F8  00                 	db	0
  1737  01D3F9  00                 	db	0
  1738  01D3FA  00                 	db	0
  1739  01D3FB  00                 	db	0
  1740  01D3FC  00                 	db	0
  1741  01D3FD  00                 	db	0
  1742  01D3FE  00                 	db	0
  1743  01D3FF  00                 	db	0
  1744  01D400  00                 	db	0
  1745  01D401  00                 	db	0
  1746  01D402  00                 	db	0
  1747  01D403  00                 	db	0
  1748  01D404  00                 	db	0
  1749  01D405  00                 	db	0
  1750  01D406  00                 	db	0
  1751  01D407  00                 	db	0
  1752  01D408  00                 	db	0
  1753  01D409  00                 	db	0
  1754  01D40A  00                 	db	0
  1755  01D40B  00                 	db	0
  1756  01D40C  00                 	db	0
  1757  01D40D  00                 	db	0
  1758  01D40E  00                 	db	0
  1759  01D40F  00                 	db	0
  1760  01D410  00                 	db	0
  1761  01D411  00                 	db	0
  1762  01D412  00                 	db	0
  1763  01D413  00                 	db	0
  1764  01D414  00                 	db	0
  1765  01D415  00                 	db	0
  1766  01D416  00                 	db	0
  1767  01D417  00                 	db	0
  1768  01D418  00                 	db	0
  1769  01D419  00                 	db	0
  1770  01D41A  00                 	db	0
  1771  01D41B  00                 	db	0
  1772  01D41C  00                 	db	0
  1773  01D41D  00                 	db	0
  1774  01D41E  00                 	db	0
  1775  01D41F  00                 	db	0
  1776  01D420  00                 	db	0
  1777  01D421  00                 	db	0
  1778  01D422  00                 	db	0
  1779  01D423  00                 	db	0
  1780  01D424  00                 	db	0
  1781  01D425  00                 	db	0
  1782  01D426  00                 	db	0
  1783  01D427  00                 	db	0
  1784  01D428  00                 	db	0
  1785  01D429  00                 	db	0
  1786  01D42A  00                 	db	0
  1787  01D42B  00                 	db	0
  1788  01D42C  00                 	db	0
  1789  01D42D  00                 	db	0
  1790  01D42E  00                 	db	0
  1791  01D42F  00                 	db	0
  1792  01D430  00                 	db	0
  1793  01D431  00                 	db	0
  1794  01D432  00                 	db	0
  1795  01D433  00                 	db	0
  1796  01D434  00                 	db	0
  1797  01D435  00                 	db	0
  1798  01D436  00                 	db	0
  1799  01D437  00                 	db	0
  1800  01D438  00                 	db	0
  1801  01D439  00                 	db	0
  1802  01D43A  00                 	db	0
  1803  01D43B  00                 	db	0
  1804  01D43C  00                 	db	0
  1805  01D43D  00                 	db	0
  1806  01D43E  00                 	db	0
  1807  01D43F  00                 	db	0
  1808  01D440  00                 	db	0
  1809  01D441  00                 	db	0
  1810  01D442  00                 	db	0
  1811  01D443  00                 	db	0
  1812  01D444  00                 	db	0
  1813  01D445  00                 	db	0
  1814  01D446  00                 	db	0
  1815  01D447  00                 	db	0
  1816  01D448  00                 	db	0
  1817  01D449  00                 	db	0
  1818  01D44A  00                 	db	0
  1819  01D44B  00                 	db	0
  1820  01D44C  00                 	db	0
  1821  01D44D  00                 	db	0
  1822  01D44E  00                 	db	0
  1823  01D44F  00                 	db	0
  1824  01D450  00                 	db	0
  1825  01D451  00                 	db	0
  1826  01D452  00                 	db	0
  1827  01D453  00                 	db	0
  1828  01D454  00                 	db	0
  1829  01D455  00                 	db	0
  1830  01D456  00                 	db	0
  1831  01D457  00                 	db	0
  1832  01D458  00                 	db	0
  1833  01D459  00                 	db	0
  1834  01D45A  00                 	db	0
  1835  01D45B  00                 	db	0
  1836  01D45C  00                 	db	0
  1837  01D45D  00                 	db	0
  1838  01D45E  00                 	db	0
  1839  01D45F  00                 	db	0
  1840  01D460  00                 	db	0
  1841  01D461  00                 	db	0
  1842  01D462  00                 	db	0
  1843  01D463  00                 	db	0
  1844  01D464  00                 	db	0
  1845  01D465  00                 	db	0
  1846  01D466  00                 	db	0
  1847  01D467  00                 	db	0
  1848  01D468  00                 	db	0
  1849  01D469  00                 	db	0
  1850  01D46A  00                 	db	0
  1851  01D46B  00                 	db	0
  1852  01D46C  00                 	db	0
  1853  01D46D  00                 	db	0
  1854  01D46E  00                 	db	0
  1855  01D46F  00                 	db	0
  1856  01D470  00                 	db	0
  1857  01D471  00                 	db	0
  1858  01D472  00                 	db	0
  1859  01D473  00                 	db	0
  1860  01D474  00                 	db	0
  1861  01D475  00                 	db	0
  1862  01D476  00                 	db	0
  1863  01D477  00                 	db	0
  1864  01D478  00                 	db	0
  1865  01D479  00                 	db	0
  1866  01D47A  00                 	db	0
  1867  01D47B  00                 	db	0
  1868  01D47C  00                 	db	0
  1869  01D47D  00                 	db	0
  1870  01D47E  00                 	db	0
  1871  01D47F  00                 	db	0
  1872  01D480  00                 	db	0
  1873  01D481  00                 	db	0
  1874  01D482  00                 	db	0
  1875  01D483  00                 	db	0
  1876  01D484  00                 	db	0
  1877  01D485  00                 	db	0
  1878  01D486  00                 	db	0
  1879  01D487  00                 	db	0
  1880  01D488  00                 	db	0
  1881  01D489  00                 	db	0
  1882  01D48A  00                 	db	0
  1883  01D48B  00                 	db	0
  1884  01D48C  00                 	db	0
  1885  01D48D  00                 	db	0
  1886  01D48E  00                 	db	0
  1887  01D48F  00                 	db	0
  1888  01D490  00                 	db	0
  1889  01D491  00                 	db	0
  1890  01D492  00                 	db	0
  1891  01D493  00                 	db	0
  1892  01D494  00                 	db	0
  1893  01D495  00                 	db	0
  1894  01D496  00                 	db	0
  1895  01D497  00                 	db	0
  1896  01D498  00                 	db	0
  1897  01D499  00                 	db	0
  1898  01D49A  00                 	db	0
  1899  01D49B  00                 	db	0
  1900  01D49C  00                 	db	0
  1901  01D49D  00                 	db	0
  1902  01D49E  00                 	db	0
  1903  01D49F  00                 	db	0
  1904  01D4A0  00                 	db	0
  1905  01D4A1  00                 	db	0
  1906  01D4A2  00                 	db	0
  1907  01D4A3  00                 	db	0
  1908  01D4A4  00                 	db	0
  1909  01D4A5  00                 	db	0
  1910  01D4A6  00                 	db	0
  1911  01D4A7  00                 	db	0
  1912  01D4A8  00                 	db	0
  1913  01D4A9  00                 	db	0
  1914  01D4AA  00                 	db	0
  1915  01D4AB  00                 	db	0
  1916  01D4AC  00                 	db	0
  1917  01D4AD  00                 	db	0
  1918  01D4AE  00                 	db	0
  1919  01D4AF  00                 	db	0
  1920  01D4B0  00                 	db	0
  1921  01D4B1  00                 	db	0
  1922  01D4B2  00                 	db	0
  1923  01D4B3  00                 	db	0
  1924  01D4B4  00                 	db	0
  1925  01D4B5  00                 	db	0
  1926  01D4B6  00                 	db	0
  1927  01D4B7  00                 	db	0
  1928  01D4B8  00                 	db	0
  1929  01D4B9  00                 	db	0
  1930  01D4BA  00                 	db	0
  1931  01D4BB  00                 	db	0
  1932  01D4BC  00                 	db	0
  1933  01D4BD  00                 	db	0
  1934  01D4BE  00                 	db	0
  1935  01D4BF  00                 	db	0
  1936  01D4C0  00                 	db	0
  1937  01D4C1  00                 	db	0
  1938  01D4C2  00                 	db	0
  1939  01D4C3  00                 	db	0
  1940  01D4C4  00                 	db	0
  1941  01D4C5  00                 	db	0
  1942  01D4C6  00                 	db	0
  1943  01D4C7  00                 	db	0
  1944  01D4C8  00                 	db	0
  1945  01D4C9  00                 	db	0
  1946  01D4CA  00                 	db	0
  1947  01D4CB  00                 	db	0
  1948  01D4CC  00                 	db	0
  1949  01D4CD  00                 	db	0
  1950  01D4CE  00                 	db	0
  1951  01D4CF  00                 	db	0
  1952  01D4D0  00                 	db	0
  1953  01D4D1  00                 	db	0
  1954  01D4D2  00                 	db	0
  1955  01D4D3  00                 	db	0
  1956  01D4D4  00                 	db	0
  1957  01D4D5  00                 	db	0
  1958  01D4D6  00                 	db	0
  1959  01D4D7  00                 	db	0
  1960  01D4D8  00                 	db	0
  1961  01D4D9  00                 	db	0
  1962  01D4DA  00                 	db	0
  1963  01D4DB  00                 	db	0
  1964  01D4DC  00                 	db	0
  1965  01D4DD  00                 	db	0
  1966  01D4DE  00                 	db	0
  1967  01D4DF  00                 	db	0
  1968  01D4E0  00                 	db	0
  1969  01D4E1  00                 	db	0
  1970  01D4E2  00                 	db	0
  1971  01D4E3  00                 	db	0
  1972  01D4E4  00                 	db	0
  1973  01D4E5  00                 	db	0
  1974  01D4E6  00                 	db	0
  1975  01D4E7  00                 	db	0
  1976  01D4E8  00                 	db	0
  1977  01D4E9  00                 	db	0
  1978  01D4EA  00                 	db	0
  1979  01D4EB  00                 	db	0
  1980  01D4EC  00                 	db	0
  1981  01D4ED  00                 	db	0
  1982  01D4EE  00                 	db	0
  1983  01D4EF  00                 	db	0
  1984  01D4F0  00                 	db	0
  1985  01D4F1  00                 	db	0
  1986  01D4F2  00                 	db	0
  1987  01D4F3  00                 	db	0
  1988  01D4F4  00                 	db	0
  1989  01D4F5  00                 	db	0
  1990  01D4F6  00                 	db	0
  1991  01D4F7  00                 	db	0
  1992  01D4F8  00                 	db	0
  1993  01D4F9  00                 	db	0
  1994  01D4FA  00                 	db	0
  1995  01D4FB  00                 	db	0
  1996  01D4FC  00                 	db	0
  1997  01D4FD  00                 	db	0
  1998  01D4FE  00                 	db	0
  1999  01D4FF  00                 	db	0
  2000  01D500  00                 	db	0
  2001  01D501  00                 	db	0
  2002  01D502  00                 	db	0
  2003  01D503  00                 	db	0
  2004  01D504  00                 	db	0
  2005  01D505  00                 	db	0
  2006  01D506  00                 	db	0
  2007  01D507  00                 	db	0
  2008  01D508  00                 	db	0
  2009  01D509  00                 	db	0
  2010  01D50A  00                 	db	0
  2011  01D50B  00                 	db	0
  2012  01D50C  00                 	db	0
  2013  01D50D  00                 	db	0
  2014  01D50E  00                 	db	0
  2015  01D50F  00                 	db	0
  2016  01D510  00                 	db	0
  2017  01D511  00                 	db	0
  2018  01D512  00                 	db	0
  2019  01D513  00                 	db	0
  2020  01D514  00                 	db	0
  2021  01D515  00                 	db	0
  2022  01D516  00                 	db	0
  2023  01D517  00                 	db	0
  2024  01D518  00                 	db	0
  2025  01D519  00                 	db	0
  2026  01D51A  00                 	db	0
  2027  01D51B  00                 	db	0
  2028  01D51C  00                 	db	0
  2029  01D51D  00                 	db	0
  2030  01D51E  00                 	db	0
  2031  01D51F  00                 	db	0
  2032  01D520  00                 	db	0
  2033  01D521  00                 	db	0
  2034  01D522  00                 	db	0
  2035  01D523  00                 	db	0
  2036  01D524  00                 	db	0
  2037  01D525  00                 	db	0
  2038  01D526  00                 	db	0
  2039  01D527  00                 	db	0
  2040  01D528  00                 	db	0
  2041  01D529  00                 	db	0
  2042  01D52A  00                 	db	0
  2043  01D52B  00                 	db	0
  2044  01D52C  00                 	db	0
  2045  01D52D  00                 	db	0
  2046  01D52E  00                 	db	0
  2047  01D52F  00                 	db	0
  2048  01D530  00                 	db	0
  2049  01D531  00                 	db	0
  2050  01D532  00                 	db	0
  2051  01D533  00                 	db	0
  2052  01D534  00                 	db	0
  2053  01D535  00                 	db	0
  2054  01D536  00                 	db	0
  2055  01D537  00                 	db	0
  2056  01D538  00                 	db	0
  2057  01D539  00                 	db	0
  2058  01D53A  00                 	db	0
  2059  01D53B  00                 	db	0
  2060  01D53C  00                 	db	0
  2061  01D53D  00                 	db	0
  2062  01D53E  00                 	db	0
  2063  01D53F  00                 	db	0
  2064  01D540  00                 	db	0
  2065  01D541  00                 	db	0
  2066  01D542  00                 	db	0
  2067  01D543  00                 	db	0
  2068  01D544  00                 	db	0
  2069  01D545  00                 	db	0
  2070  01D546  00                 	db	0
  2071  01D547  00                 	db	0
  2072  01D548  00                 	db	0
  2073  01D549  00                 	db	0
  2074  01D54A  00                 	db	0
  2075  01D54B  00                 	db	0
  2076  01D54C  00                 	db	0
  2077  01D54D  00                 	db	0
  2078  01D54E  00                 	db	0
  2079  01D54F  00                 	db	0
  2080  01D550  00                 	db	0
  2081  01D551  00                 	db	0
  2082  01D552  00                 	db	0
  2083  01D553  00                 	db	0
  2084  01D554  00                 	db	0
  2085  01D555  00                 	db	0
  2086  01D556  00                 	db	0
  2087  01D557  00                 	db	0
  2088  01D558  00                 	db	0
  2089  01D559  00                 	db	0
  2090  01D55A  00                 	db	0
  2091  01D55B  00                 	db	0
  2092  01D55C  00                 	db	0
  2093  01D55D  00                 	db	0
  2094  01D55E  00                 	db	0
  2095  01D55F  00                 	db	0
  2096  01D560  00                 	db	0
  2097  01D561  00                 	db	0
  2098  01D562  00                 	db	0
  2099  01D563  00                 	db	0
  2100  01D564  00                 	db	0
  2101  01D565  00                 	db	0
  2102  01D566  00                 	db	0
  2103  01D567  00                 	db	0
  2104  01D568  00                 	db	0
  2105  01D569  00                 	db	0
  2106  01D56A  00                 	db	0
  2107  01D56B  00                 	db	0
  2108  01D56C  00                 	db	0
  2109  01D56D  00                 	db	0
  2110  01D56E  00                 	db	0
  2111  01D56F  00                 	db	0
  2112  01D570  00                 	db	0
  2113  01D571  00                 	db	0
  2114  01D572  00                 	db	0
  2115  01D573  00                 	db	0
  2116  01D574  00                 	db	0
  2117  01D575  00                 	db	0
  2118  01D576  00                 	db	0
  2119  01D577  00                 	db	0
  2120  01D578  00                 	db	0
  2121  01D579  00                 	db	0
  2122  01D57A  00                 	db	0
  2123  01D57B  00                 	db	0
  2124  01D57C  00                 	db	0
  2125  01D57D  00                 	db	0
  2126  01D57E  00                 	db	0
  2127  01D57F  00                 	db	0
  2128  01D580  00                 	db	0
  2129  01D581  00                 	db	0
  2130  01D582  00                 	db	0
  2131  01D583  00                 	db	0
  2132  01D584  00                 	db	0
  2133  01D585  00                 	db	0
  2134  01D586  00                 	db	0
  2135  01D587  00                 	db	0
  2136  01D588  00                 	db	0
  2137  01D589  00                 	db	0
  2138  01D58A  00                 	db	0
  2139  01D58B  00                 	db	0
  2140  01D58C  00                 	db	0
  2141  01D58D  00                 	db	0
  2142  01D58E  00                 	db	0
  2143  01D58F  00                 	db	0
  2144  01D590  00                 	db	0
  2145  01D591  00                 	db	0
  2146  01D592  00                 	db	0
  2147  01D593  00                 	db	0
  2148  01D594  00                 	db	0
  2149  01D595  00                 	db	0
  2150  01D596  00                 	db	0
  2151  01D597  00                 	db	0
  2152  01D598  00                 	db	0
  2153  01D599  00                 	db	0
  2154  01D59A  00                 	db	0
  2155  01D59B  00                 	db	0
  2156  01D59C  00                 	db	0
  2157  01D59D  00                 	db	0
  2158  01D59E  00                 	db	0
  2159  01D59F  00                 	db	0
  2160  01D5A0  00                 	db	0
  2161  01D5A1  00                 	db	0
  2162  01D5A2  00                 	db	0
  2163  01D5A3  00                 	db	0
  2164  01D5A4  00                 	db	0
  2165  01D5A5  00                 	db	0
  2166  01D5A6  00                 	db	0
  2167  01D5A7  00                 	db	0
  2168  01D5A8  00                 	db	0
  2169  01D5A9  00                 	db	0
  2170  01D5AA  00                 	db	0
  2171  01D5AB  00                 	db	0
  2172  01D5AC  00                 	db	0
  2173  01D5AD  00                 	db	0
  2174  01D5AE  00                 	db	0
  2175  01D5AF  00                 	db	0
  2176  01D5B0  00                 	db	0
  2177  01D5B1  00                 	db	0
  2178  01D5B2  00                 	db	0
  2179  01D5B3  00                 	db	0
  2180  01D5B4  00                 	db	0
  2181  01D5B5  00                 	db	0
  2182  01D5B6  00                 	db	0
  2183  01D5B7  00                 	db	0
  2184  01D5B8  00                 	db	0
  2185  01D5B9  00                 	db	0
  2186  01D5BA  00                 	db	0
  2187  01D5BB  00                 	db	0
  2188  01D5BC  00                 	db	0
  2189  01D5BD  00                 	db	0
  2190  01D5BE  00                 	db	0
  2191  01D5BF  00                 	db	0
  2192  01D5C0  00                 	db	0
  2193  01D5C1  00                 	db	0
  2194  01D5C2  00                 	db	0
  2195  01D5C3  00                 	db	0
  2196  01D5C4  00                 	db	0
  2197  01D5C5  00                 	db	0
  2198  01D5C6  00                 	db	0
  2199  01D5C7  00                 	db	0
  2200  01D5C8  00                 	db	0
  2201  01D5C9  00                 	db	0
  2202  01D5CA  00                 	db	0
  2203  01D5CB  00                 	db	0
  2204  01D5CC  00                 	db	0
  2205  01D5CD  00                 	db	0
  2206  01D5CE  00                 	db	0
  2207  01D5CF  00                 	db	0
  2208  01D5D0  00                 	db	0
  2209  01D5D1  00                 	db	0
  2210  01D5D2  00                 	db	0
  2211  01D5D3  00                 	db	0
  2212  01D5D4  00                 	db	0
  2213  01D5D5  00                 	db	0
  2214  01D5D6  00                 	db	0
  2215  01D5D7  00                 	db	0
  2216  01D5D8  00                 	db	0
  2217  01D5D9  00                 	db	0
  2218  01D5DA  00                 	db	0
  2219  01D5DB  00                 	db	0
  2220  01D5DC  00                 	db	0
  2221  01D5DD  00                 	db	0
  2222  01D5DE  00                 	db	0
  2223  01D5DF  00                 	db	0
  2224  01D5E0  00                 	db	0
  2225  01D5E1  00                 	db	0
  2226  01D5E2  00                 	db	0
  2227  01D5E3  00                 	db	0
  2228  01D5E4  00                 	db	0
  2229  01D5E5  00                 	db	0
  2230  01D5E6  00                 	db	0
  2231  01D5E7  00                 	db	0
  2232  01D5E8  00                 	db	0
  2233  01D5E9  00                 	db	0
  2234  01D5EA  00                 	db	0
  2235  01D5EB  00                 	db	0
  2236  01D5EC  00                 	db	0
  2237  01D5ED  00                 	db	0
  2238  01D5EE  00                 	db	0
  2239  01D5EF  00                 	db	0
  2240  01D5F0  00                 	db	0
  2241  01D5F1  00                 	db	0
  2242  01D5F2  00                 	db	0
  2243  01D5F3  00                 	db	0
  2244  01D5F4  00                 	db	0
  2245  01D5F5  00                 	db	0
  2246  01D5F6  00                 	db	0
  2247  01D5F7  00                 	db	0
  2248  01D5F8  00                 	db	0
  2249  01D5F9  00                 	db	0
  2250  01D5FA  00                 	db	0
  2251  01D5FB  00                 	db	0
  2252  01D5FC  00                 	db	0
  2253  01D5FD  00                 	db	0
  2254  01D5FE  00                 	db	0
  2255  01D5FF  00                 	db	0
  2256  01D600  00                 	db	0
  2257  01D601  00                 	db	0
  2258  01D602  00                 	db	0
  2259  01D603  00                 	db	0
  2260  01D604  00                 	db	0
  2261  01D605  00                 	db	0
  2262  01D606  00                 	db	0
  2263  01D607  00                 	db	0
  2264  01D608  00                 	db	0
  2265  01D609  00                 	db	0
  2266  01D60A  00                 	db	0
  2267  01D60B  00                 	db	0
  2268  01D60C  00                 	db	0
  2269  01D60D  00                 	db	0
  2270  01D60E  00                 	db	0
  2271  01D60F  00                 	db	0
  2272  01D610  00                 	db	0
  2273  01D611  00                 	db	0
  2274  01D612  00                 	db	0
  2275  01D613  00                 	db	0
  2276  01D614  00                 	db	0
  2277  01D615  00                 	db	0
  2278  01D616  00                 	db	0
  2279  01D617  00                 	db	0
  2280  01D618  00                 	db	0
  2281  01D619  00                 	db	0
  2282  01D61A  00                 	db	0
  2283  01D61B  00                 	db	0
  2284  01D61C  00                 	db	0
  2285  01D61D  00                 	db	0
  2286  01D61E  00                 	db	0
  2287  01D61F  00                 	db	0
  2288  01D620  00                 	db	0
  2289  01D621  00                 	db	0
  2290  01D622  00                 	db	0
  2291  01D623  00                 	db	0
  2292  01D624  00                 	db	0
  2293  01D625  00                 	db	0
  2294  01D626  00                 	db	0
  2295  01D627  00                 	db	0
  2296  01D628  00                 	db	0
  2297  01D629  00                 	db	0
  2298  01D62A  00                 	db	0
  2299  01D62B  00                 	db	0
  2300  01D62C  00                 	db	0
  2301  01D62D  00                 	db	0
  2302  01D62E  00                 	db	0
  2303  01D62F  00                 	db	0
  2304  01D630  00                 	db	0
  2305  01D631  00                 	db	0
  2306  01D632  00                 	db	0
  2307  01D633  00                 	db	0
  2308  01D634  00                 	db	0
  2309  01D635  00                 	db	0
  2310  01D636  00                 	db	0
  2311  01D637  00                 	db	0
  2312  01D638  00                 	db	0
  2313  01D639  00                 	db	0
  2314  01D63A  00                 	db	0
  2315  01D63B  00                 	db	0
  2316  01D63C  00                 	db	0
  2317  01D63D  00                 	db	0
  2318  01D63E  00                 	db	0
  2319  01D63F  00                 	db	0
  2320  01D640  00                 	db	0
  2321  01D641  00                 	db	0
  2322  01D642  00                 	db	0
  2323  01D643  00                 	db	0
  2324  01D644  00                 	db	0
  2325  01D645  00                 	db	0
  2326  01D646  00                 	db	0
  2327  01D647  00                 	db	0
  2328  01D648  00                 	db	0
  2329  01D649  00                 	db	0
  2330  01D64A  00                 	db	0
  2331  01D64B  00                 	db	0
  2332  01D64C  00                 	db	0
  2333  01D64D  00                 	db	0
  2334  01D64E  00                 	db	0
  2335  01D64F  00                 	db	0
  2336  01D650  00                 	db	0
  2337  01D651  00                 	db	0
  2338  01D652  00                 	db	0
  2339  01D653  00                 	db	0
  2340  01D654  00                 	db	0
  2341  01D655  00                 	db	0
  2342  01D656  00                 	db	0
  2343  01D657  00                 	db	0
  2344  01D658  00                 	db	0
  2345  01D659  00                 	db	0
  2346  01D65A  00                 	db	0
  2347  01D65B  00                 	db	0
  2348  01D65C  00                 	db	0
  2349  01D65D  00                 	db	0
  2350  01D65E  00                 	db	0
  2351  01D65F  00                 	db	0
  2352  01D660  00                 	db	0
  2353  01D661  00                 	db	0
  2354  01D662  00                 	db	0
  2355  01D663  00                 	db	0
  2356  01D664  00                 	db	0
  2357  01D665  00                 	db	0
  2358  01D666  00                 	db	0
  2359  01D667  00                 	db	0
  2360  01D668  00                 	db	0
  2361  01D669  00                 	db	0
  2362  01D66A  00                 	db	0
  2363  01D66B  00                 	db	0
  2364  01D66C  00                 	db	0
  2365  01D66D  00                 	db	0
  2366  01D66E  00                 	db	0
  2367  01D66F  00                 	db	0
  2368  01D670  00                 	db	0
  2369  01D671  00                 	db	0
  2370  01D672  00                 	db	0
  2371  01D673  00                 	db	0
  2372  01D674  00                 	db	0
  2373  01D675  00                 	db	0
  2374  01D676  00                 	db	0
  2375  01D677  00                 	db	0
  2376  01D678  00                 	db	0
  2377  01D679  00                 	db	0
  2378  01D67A  00                 	db	0
  2379  01D67B  00                 	db	0
  2380  01D67C  00                 	db	0
  2381  01D67D  00                 	db	0
  2382  01D67E  00                 	db	0
  2383  01D67F  00                 	db	0
  2384  01D680  00                 	db	0
  2385  01D681  00                 	db	0
  2386  01D682  00                 	db	0
  2387  01D683  00                 	db	0
  2388  01D684  00                 	db	0
  2389  01D685  00                 	db	0
  2390  01D686  00                 	db	0
  2391  01D687  00                 	db	0
  2392  01D688  00                 	db	0
  2393  01D689  00                 	db	0
  2394  01D68A  00                 	db	0
  2395  01D68B  00                 	db	0
  2396  01D68C  00                 	db	0
  2397  01D68D  00                 	db	0
  2398  01D68E  00                 	db	0
  2399  01D68F  00                 	db	0
  2400  01D690  00                 	db	0
  2401  01D691  00                 	db	0
  2402  01D692  00                 	db	0
  2403  01D693  00                 	db	0
  2404  01D694  00                 	db	0
  2405  01D695  00                 	db	0
  2406  01D696  00                 	db	0
  2407  01D697  00                 	db	0
  2408  01D698  00                 	db	0
  2409  01D699  00                 	db	0
  2410  01D69A  00                 	db	0
  2411  01D69B  00                 	db	0
  2412  01D69C  00                 	db	0
  2413  01D69D  00                 	db	0
  2414  01D69E  00                 	db	0
  2415  01D69F  00                 	db	0
  2416  01D6A0  00                 	db	0
  2417  01D6A1  00                 	db	0
  2418  01D6A2  00                 	db	0
  2419  01D6A3  00                 	db	0
  2420  01D6A4  00                 	db	0
  2421  01D6A5  00                 	db	0
  2422  01D6A6  00                 	db	0
  2423  01D6A7  00                 	db	0
  2424  01D6A8  00                 	db	0
  2425  01D6A9  00                 	db	0
  2426  01D6AA  00                 	db	0
  2427  01D6AB  00                 	db	0
  2428  01D6AC  00                 	db	0
  2429  01D6AD  00                 	db	0
  2430  01D6AE  00                 	db	0
  2431  01D6AF  00                 	db	0
  2432  01D6B0  00                 	db	0
  2433  01D6B1  00                 	db	0
  2434  01D6B2  00                 	db	0
  2435  01D6B3  00                 	db	0
  2436  01D6B4  00                 	db	0
  2437  01D6B5  00                 	db	0
  2438  01D6B6  00                 	db	0
  2439  01D6B7  00                 	db	0
  2440  01D6B8  00                 	db	0
  2441  01D6B9  00                 	db	0
  2442  01D6BA  00                 	db	0
  2443  01D6BB  00                 	db	0
  2444  01D6BC  00                 	db	0
  2445  01D6BD  00                 	db	0
  2446  01D6BE  00                 	db	0
  2447  01D6BF  00                 	db	0
  2448  01D6C0  00                 	db	0
  2449  01D6C1  00                 	db	0
  2450  01D6C2  00                 	db	0
  2451  01D6C3  00                 	db	0
  2452  01D6C4  00                 	db	0
  2453  01D6C5  00                 	db	0
  2454  01D6C6  00                 	db	0
  2455  01D6C7  00                 	db	0
  2456  01D6C8  00                 	db	0
  2457  01D6C9  00                 	db	0
  2458  01D6CA  00                 	db	0
  2459  01D6CB  00                 	db	0
  2460  01D6CC  00                 	db	0
  2461  01D6CD  00                 	db	0
  2462  01D6CE  00                 	db	0
  2463  01D6CF  00                 	db	0
  2464  01D6D0  00                 	db	0
  2465  01D6D1  00                 	db	0
  2466  01D6D2  00                 	db	0
  2467  01D6D3  00                 	db	0
  2468  01D6D4  00                 	db	0
  2469  01D6D5  00                 	db	0
  2470  01D6D6  00                 	db	0
  2471  01D6D7  00                 	db	0
  2472  01D6D8  00                 	db	0
  2473  01D6D9  00                 	db	0
  2474  01D6DA  00                 	db	0
  2475  01D6DB  00                 	db	0
  2476  01D6DC  00                 	db	0
  2477  01D6DD  00                 	db	0
  2478  01D6DE  00                 	db	0
  2479  01D6DF  00                 	db	0
  2480  01D6E0  00                 	db	0
  2481  01D6E1  00                 	db	0
  2482  01D6E2  00                 	db	0
  2483  01D6E3  00                 	db	0
  2484  01D6E4  00                 	db	0
  2485  01D6E5  00                 	db	0
  2486  01D6E6  00                 	db	0
  2487  01D6E7  00                 	db	0
  2488  01D6E8  00                 	db	0
  2489  01D6E9  00                 	db	0
  2490  01D6EA  00                 	db	0
  2491  01D6EB  00                 	db	0
  2492  01D6EC  00                 	db	0
  2493  01D6ED  00                 	db	0
  2494  01D6EE  00                 	db	0
  2495  01D6EF  00                 	db	0
  2496  01D6F0  00                 	db	0
  2497  01D6F1  00                 	db	0
  2498  01D6F2  00                 	db	0
  2499  01D6F3  00                 	db	0
  2500  01D6F4  00                 	db	0
  2501  01D6F5  00                 	db	0
  2502  01D6F6  00                 	db	0
  2503  01D6F7  00                 	db	0
  2504  01D6F8  00                 	db	0
  2505  01D6F9  00                 	db	0
  2506  01D6FA  00                 	db	0
  2507  01D6FB  00                 	db	0
  2508  01D6FC  00                 	db	0
  2509  01D6FD  00                 	db	0
  2510  01D6FE  00                 	db	0
  2511  01D6FF  00                 	db	0
  2512  01D700  00                 	db	0
  2513  01D701  00                 	db	0
  2514  01D702  00                 	db	0
  2515  01D703  00                 	db	0
  2516  01D704  00                 	db	0
  2517  01D705  00                 	db	0
  2518  01D706  00                 	db	0
  2519  01D707  00                 	db	0
  2520  01D708  00                 	db	0
  2521  01D709  00                 	db	0
  2522  01D70A  00                 	db	0
  2523  01D70B  00                 	db	0
  2524  01D70C  00                 	db	0
  2525  01D70D  00                 	db	0
  2526  01D70E  00                 	db	0
  2527  01D70F  00                 	db	0
  2528  01D710  00                 	db	0
  2529  01D711  00                 	db	0
  2530  01D712  00                 	db	0
  2531  01D713  00                 	db	0
  2532  01D714  00                 	db	0
  2533  01D715  00                 	db	0
  2534  01D716  00                 	db	0
  2535  01D717  00                 	db	0
  2536  01D718  00                 	db	0
  2537  01D719  00                 	db	0
  2538  01D71A  00                 	db	0
  2539  01D71B  00                 	db	0
  2540  01D71C  00                 	db	0
  2541  01D71D  00                 	db	0
  2542  01D71E  00                 	db	0
  2543  01D71F  00                 	db	0
  2544  01D720  00                 	db	0
  2545  01D721  00                 	db	0
  2546  01D722  00                 	db	0
  2547  01D723  00                 	db	0
  2548  01D724  00                 	db	0
  2549  01D725  00                 	db	0
  2550  01D726  00                 	db	0
  2551  01D727  00                 	db	0
  2552  01D728  00                 	db	0
  2553  01D729  00                 	db	0
  2554  01D72A  00                 	db	0
  2555  01D72B  00                 	db	0
  2556  01D72C  00                 	db	0
  2557  01D72D  00                 	db	0
  2558  01D72E  00                 	db	0
  2559  01D72F  00                 	db	0
  2560  01D730  00                 	db	0
  2561  01D731  00                 	db	0
  2562  01D732  00                 	db	0
  2563  01D733  00                 	db	0
  2564  01D734  00                 	db	0
  2565  01D735  00                 	db	0
  2566  01D736  00                 	db	0
  2567  01D737  00                 	db	0
  2568  01D738  00                 	db	0
  2569  01D739  00                 	db	0
  2570  01D73A  00                 	db	0
  2571  01D73B  00                 	db	0
  2572  01D73C  00                 	db	0
  2573  01D73D  00                 	db	0
  2574  01D73E  00                 	db	0
  2575  01D73F  00                 	db	0
  2576  01D740  00                 	db	0
  2577  01D741  00                 	db	0
  2578  01D742  00                 	db	0
  2579  01D743  00                 	db	0
  2580  01D744  00                 	db	0
  2581  01D745  00                 	db	0
  2582  01D746  00                 	db	0
  2583  01D747  00                 	db	0
  2584  01D748  00                 	db	0
  2585  01D749  00                 	db	0
  2586  01D74A  00                 	db	0
  2587  01D74B  00                 	db	0
  2588  01D74C  00                 	db	0
  2589  01D74D  00                 	db	0
  2590  01D74E  00                 	db	0
  2591  01D74F  00                 	db	0
  2592  01D750  00                 	db	0
  2593  01D751  00                 	db	0
  2594  01D752  00                 	db	0
  2595  01D753  00                 	db	0
  2596  01D754  00                 	db	0
  2597  01D755  00                 	db	0
  2598  01D756  00                 	db	0
  2599  01D757  00                 	db	0
  2600  01D758  00                 	db	0
  2601  01D759  00                 	db	0
  2602  01D75A  00                 	db	0
  2603  01D75B  00                 	db	0
  2604  01D75C  00                 	db	0
  2605  01D75D  00                 	db	0
  2606  01D75E  00                 	db	0
  2607  01D75F  00                 	db	0
  2608  01D760  00                 	db	0
  2609  01D761  00                 	db	0
  2610  01D762  00                 	db	0
  2611  01D763  00                 	db	0
  2612  01D764  00                 	db	0
  2613  01D765  00                 	db	0
  2614  01D766  00                 	db	0
  2615  01D767  00                 	db	0
  2616  01D768  00                 	db	0
  2617  01D769  00                 	db	0
  2618  01D76A  00                 	db	0
  2619  01D76B  00                 	db	0
  2620  01D76C  00                 	db	0
  2621  01D76D  00                 	db	0
  2622  01D76E  00                 	db	0
  2623  01D76F  00                 	db	0
  2624  01D770  00                 	db	0
  2625  01D771  00                 	db	0
  2626  01D772  00                 	db	0
  2627  01D773  00                 	db	0
  2628  01D774  00                 	db	0
  2629  01D775  00                 	db	0
  2630  01D776  00                 	db	0
  2631  01D777  00                 	db	0
  2632  01D778  00                 	db	0
  2633  01D779  00                 	db	0
  2634  01D77A  00                 	db	0
  2635  01D77B  00                 	db	0
  2636  01D77C  00                 	db	0
  2637  01D77D  00                 	db	0
  2638  01D77E  00                 	db	0
  2639  01D77F  00                 	db	0
  2640  01D780  00                 	db	0
  2641  01D781  00                 	db	0
  2642  01D782  00                 	db	0
  2643  01D783  00                 	db	0
  2644  01D784  00                 	db	0
  2645  01D785  00                 	db	0
  2646  01D786  00                 	db	0
  2647  01D787  00                 	db	0
  2648  01D788  00                 	db	0
  2649  01D789  00                 	db	0
  2650  01D78A  00                 	db	0
  2651  01D78B  00                 	db	0
  2652  01D78C  00                 	db	0
  2653  01D78D  00                 	db	0
  2654  01D78E  00                 	db	0
  2655  01D78F  00                 	db	0
  2656  01D790  00                 	db	0
  2657  01D791  00                 	db	0
  2658  01D792  00                 	db	0
  2659  01D793  00                 	db	0
  2660  01D794  00                 	db	0
  2661  01D795  00                 	db	0
  2662  01D796  00                 	db	0
  2663  01D797  00                 	db	0
  2664  01D798  00                 	db	0
  2665  01D799  00                 	db	0
  2666  01D79A  00                 	db	0
  2667  01D79B  00                 	db	0
  2668  01D79C  00                 	db	0
  2669  01D79D  00                 	db	0
  2670  01D79E  00                 	db	0
  2671  01D79F  00                 	db	0
  2672  01D7A0  00                 	db	0
  2673  01D7A1  00                 	db	0
  2674  01D7A2  00                 	db	0
  2675  01D7A3  00                 	db	0
  2676  01D7A4  00                 	db	0
  2677  01D7A5  00                 	db	0
  2678  01D7A6  00                 	db	0
  2679  01D7A7  00                 	db	0
  2680  01D7A8  00                 	db	0
  2681  01D7A9  00                 	db	0
  2682  01D7AA  00                 	db	0
  2683  01D7AB  00                 	db	0
  2684  01D7AC  00                 	db	0
  2685  01D7AD  00                 	db	0
  2686  01D7AE  00                 	db	0
  2687  01D7AF  00                 	db	0
  2688  01D7B0  00                 	db	0
  2689  01D7B1  00                 	db	0
  2690  01D7B2  00                 	db	0
  2691  01D7B3  00                 	db	0
  2692  01D7B4  00                 	db	0
  2693  01D7B5  00                 	db	0
  2694  01D7B6  00                 	db	0
  2695  01D7B7  00                 	db	0
  2696  01D7B8  00                 	db	0
  2697  01D7B9  00                 	db	0
  2698  01D7BA  00                 	db	0
  2699  01D7BB  00                 	db	0
  2700  01D7BC  00                 	db	0
  2701  01D7BD  00                 	db	0
  2702  01D7BE  00                 	db	0
  2703  01D7BF  00                 	db	0
  2704  01D7C0  00                 	db	0
  2705  01D7C1  00                 	db	0
  2706  01D7C2  00                 	db	0
  2707  01D7C3  00                 	db	0
  2708  01D7C4  00                 	db	0
  2709  01D7C5  00                 	db	0
  2710  01D7C6  00                 	db	0
  2711  01D7C7  00                 	db	0
  2712  01D7C8  00                 	db	0
  2713  01D7C9  00                 	db	0
  2714  01D7CA  00                 	db	0
  2715  01D7CB  00                 	db	0
  2716  01D7CC  00                 	db	0
  2717  01D7CD  00                 	db	0
  2718  01D7CE  00                 	db	0
  2719  01D7CF  00                 	db	0
  2720  01D7D0  00                 	db	0
  2721  01D7D1  00                 	db	0
  2722  01D7D2  00                 	db	0
  2723  01D7D3  00                 	db	0
  2724  01D7D4  00                 	db	0
  2725  01D7D5  00                 	db	0
  2726  01D7D6  00                 	db	0
  2727  01D7D7  00                 	db	0
  2728  01D7D8  00                 	db	0
  2729  01D7D9  00                 	db	0
  2730  01D7DA  00                 	db	0
  2731  01D7DB  00                 	db	0
  2732  01D7DC  00                 	db	0
  2733  01D7DD  00                 	db	0
  2734  01D7DE  00                 	db	0
  2735  01D7DF  00                 	db	0
  2736  01D7E0  00                 	db	0
  2737  01D7E1  00                 	db	0
  2738  01D7E2  00                 	db	0
  2739  01D7E3  00                 	db	0
  2740  01D7E4  00                 	db	0
  2741  01D7E5  00                 	db	0
  2742  01D7E6  00                 	db	0
  2743  01D7E7  00                 	db	0
  2744  01D7E8  00                 	db	0
  2745  01D7E9  00                 	db	0
  2746  01D7EA  00                 	db	0
  2747  01D7EB  00                 	db	0
  2748  01D7EC  00                 	db	0
  2749  01D7ED  00                 	db	0
  2750  01D7EE  00                 	db	0
  2751  01D7EF  00                 	db	0
  2752  01D7F0  00                 	db	0
  2753  01D7F1  00                 	db	0
  2754  01D7F2  00                 	db	0
  2755  01D7F3  00                 	db	0
  2756  01D7F4  00                 	db	0
  2757  01D7F5  00                 	db	0
  2758  01D7F6  00                 	db	0
  2759  01D7F7  00                 	db	0
  2760  01D7F8  00                 	db	0
  2761  01D7F9  00                 	db	0
  2762  01D7FA  00                 	db	0
  2763  01D7FB  00                 	db	0
  2764  01D7FC  00                 	db	0
  2765  01D7FD  00                 	db	0
  2766  01D7FE  00                 	db	0
  2767  01D7FF  00                 	db	0
  2768  01D800  00                 	db	0
  2769  01D801  00                 	db	0
  2770  01D802  00                 	db	0
  2771  01D803  00                 	db	0
  2772  01D804  00                 	db	0
  2773  01D805  00                 	db	0
  2774  01D806  00                 	db	0
  2775  01D807  00                 	db	0
  2776  01D808  00                 	db	0
  2777  01D809  00                 	db	0
  2778  01D80A  00                 	db	0
  2779  01D80B  00                 	db	0
  2780  01D80C  00                 	db	0
  2781  01D80D  00                 	db	0
  2782  01D80E  00                 	db	0
  2783  01D80F  00                 	db	0
  2784  01D810  00                 	db	0
  2785  01D811  00                 	db	0
  2786  01D812  00                 	db	0
  2787  01D813  00                 	db	0
  2788  01D814  00                 	db	0
  2789  01D815  00                 	db	0
  2790  01D816  00                 	db	0
  2791  01D817  00                 	db	0
  2792  01D818  00                 	db	0
  2793  01D819  00                 	db	0
  2794  01D81A  00                 	db	0
  2795  01D81B  00                 	db	0
  2796  01D81C  00                 	db	0
  2797  01D81D  00                 	db	0
  2798  01D81E  00                 	db	0
  2799  01D81F  00                 	db	0
  2800  01D820  00                 	db	0
  2801  01D821  00                 	db	0
  2802  01D822  00                 	db	0
  2803  01D823  00                 	db	0
  2804  01D824  00                 	db	0
  2805  01D825  00                 	db	0
  2806  01D826  00                 	db	0
  2807  01D827  00                 	db	0
  2808  01D828  00                 	db	0
  2809  01D829  00                 	db	0
  2810  01D82A  00                 	db	0
  2811  01D82B  00                 	db	0
  2812  01D82C  00                 	db	0
  2813  01D82D  00                 	db	0
  2814  01D82E  00                 	db	0
  2815  01D82F  00                 	db	0
  2816  01D830  00                 	db	0
  2817  01D831  00                 	db	0
  2818  01D832  00                 	db	0
  2819  01D833  00                 	db	0
  2820  01D834  00                 	db	0
  2821  01D835  00                 	db	0
  2822  01D836  00                 	db	0
  2823  01D837  00                 	db	0
  2824  01D838  00                 	db	0
  2825  01D839  00                 	db	0
  2826  01D83A  00                 	db	0
  2827  01D83B  00                 	db	0
  2828  01D83C  00                 	db	0
  2829  01D83D  00                 	db	0
  2830  01D83E  00                 	db	0
  2831  01D83F  00                 	db	0
  2832  01D840  00                 	db	0
  2833  01D841  00                 	db	0
  2834  01D842  00                 	db	0
  2835  01D843  00                 	db	0
  2836  01D844  00                 	db	0
  2837  01D845  00                 	db	0
  2838  01D846  00                 	db	0
  2839  01D847  00                 	db	0
  2840  01D848  00                 	db	0
  2841  01D849  00                 	db	0
  2842  01D84A  00                 	db	0
  2843  01D84B  00                 	db	0
  2844  01D84C  00                 	db	0
  2845  01D84D  00                 	db	0
  2846  01D84E  00                 	db	0
  2847  01D84F  00                 	db	0
  2848  01D850  00                 	db	0
  2849  01D851  00                 	db	0
  2850  01D852  00                 	db	0
  2851  01D853  00                 	db	0
  2852  01D854  00                 	db	0
  2853  01D855  00                 	db	0
  2854  01D856  00                 	db	0
  2855  01D857  00                 	db	0
  2856  01D858  00                 	db	0
  2857  01D859  00                 	db	0
  2858  01D85A  00                 	db	0
  2859  01D85B  00                 	db	0
  2860  01D85C  00                 	db	0
  2861  01D85D  00                 	db	0
  2862  01D85E  00                 	db	0
  2863  01D85F  00                 	db	0
  2864  01D860  00                 	db	0
  2865  01D861  00                 	db	0
  2866  01D862  00                 	db	0
  2867  01D863  00                 	db	0
  2868  01D864  00                 	db	0
  2869  01D865  00                 	db	0
  2870  01D866  00                 	db	0
  2871  01D867  00                 	db	0
  2872  01D868  00                 	db	0
  2873  01D869  00                 	db	0
  2874  01D86A  00                 	db	0
  2875  01D86B  00                 	db	0
  2876  01D86C  00                 	db	0
  2877  01D86D  00                 	db	0
  2878  01D86E  00                 	db	0
  2879  01D86F  00                 	db	0
  2880  01D870  00                 	db	0
  2881  01D871  00                 	db	0
  2882  01D872  00                 	db	0
  2883  01D873  00                 	db	0
  2884  01D874  00                 	db	0
  2885  01D875  00                 	db	0
  2886  01D876  00                 	db	0
  2887  01D877  00                 	db	0
  2888  01D878  00                 	db	0
  2889  01D879  00                 	db	0
  2890  01D87A  00                 	db	0
  2891  01D87B  00                 	db	0
  2892  01D87C  00                 	db	0
  2893  01D87D  00                 	db	0
  2894  01D87E  00                 	db	0
  2895  01D87F  00                 	db	0
  2896  01D880  00                 	db	0
  2897  01D881  00                 	db	0
  2898  01D882  00                 	db	0
  2899  01D883  00                 	db	0
  2900  01D884  00                 	db	0
  2901  01D885  00                 	db	0
  2902  01D886  00                 	db	0
  2903  01D887  00                 	db	0
  2904  01D888  00                 	db	0
  2905  01D889  00                 	db	0
  2906  01D88A  00                 	db	0
  2907  01D88B  00                 	db	0
  2908  01D88C  00                 	db	0
  2909  01D88D  00                 	db	0
  2910  01D88E  00                 	db	0
  2911  01D88F  00                 	db	0
  2912  01D890  00                 	db	0
  2913  01D891  00                 	db	0
  2914  01D892  00                 	db	0
  2915  01D893  00                 	db	0
  2916  01D894  00                 	db	0
  2917  01D895  00                 	db	0
  2918  01D896  00                 	db	0
  2919  01D897  00                 	db	0
  2920  01D898  00                 	db	0
  2921  01D899  00                 	db	0
  2922  01D89A  00                 	db	0
  2923  01D89B  00                 	db	0
  2924  01D89C  00                 	db	0
  2925  01D89D  00                 	db	0
  2926  01D89E  00                 	db	0
  2927  01D89F  00                 	db	0
  2928  01D8A0  00                 	db	0
  2929  01D8A1  00                 	db	0
  2930  01D8A2  00                 	db	0
  2931  01D8A3  00                 	db	0
  2932  01D8A4  00                 	db	0
  2933  01D8A5  00                 	db	0
  2934  01D8A6  00                 	db	0
  2935  01D8A7  00                 	db	0
  2936  01D8A8  00                 	db	0
  2937  01D8A9  00                 	db	0
  2938  01D8AA  00                 	db	0
  2939  01D8AB  00                 	db	0
  2940  01D8AC  00                 	db	0
  2941  01D8AD  00                 	db	0
  2942  01D8AE  00                 	db	0
  2943  01D8AF  00                 	db	0
  2944  01D8B0  00                 	db	0
  2945  01D8B1  00                 	db	0
  2946  01D8B2  00                 	db	0
  2947  01D8B3  00                 	db	0
  2948  01D8B4  00                 	db	0
  2949  01D8B5  00                 	db	0
  2950  01D8B6  00                 	db	0
  2951  01D8B7  00                 	db	0
  2952  01D8B8  00                 	db	0
  2953  01D8B9  00                 	db	0
  2954  01D8BA  00                 	db	0
  2955  01D8BB  00                 	db	0
  2956  01D8BC  00                 	db	0
  2957  01D8BD  00                 	db	0
  2958  01D8BE  00                 	db	0
  2959  01D8BF  00                 	db	0
  2960  01D8C0  00                 	db	0
  2961  01D8C1  00                 	db	0
  2962  01D8C2  00                 	db	0
  2963  01D8C3  00                 	db	0
  2964  01D8C4  00                 	db	0
  2965  01D8C5  00                 	db	0
  2966  01D8C6  00                 	db	0
  2967  01D8C7  00                 	db	0
  2968  01D8C8  00                 	db	0
  2969  01D8C9  00                 	db	0
  2970  01D8CA  00                 	db	0
  2971  01D8CB  00                 	db	0
  2972  01D8CC  00                 	db	0
  2973  01D8CD  00                 	db	0
  2974  01D8CE  00                 	db	0
  2975  01D8CF  00                 	db	0
  2976  01D8D0  00                 	db	0
  2977  01D8D1  00                 	db	0
  2978  01D8D2  00                 	db	0
  2979  01D8D3  00                 	db	0
  2980  01D8D4  00                 	db	0
  2981  01D8D5  00                 	db	0
  2982  01D8D6  00                 	db	0
  2983  01D8D7  00                 	db	0
  2984  01D8D8  00                 	db	0
  2985  01D8D9  00                 	db	0
  2986  01D8DA  00                 	db	0
  2987  01D8DB  00                 	db	0
  2988  01D8DC  00                 	db	0
  2989  01D8DD  00                 	db	0
  2990  01D8DE  00                 	db	0
  2991  01D8DF  00                 	db	0
  2992  01D8E0  00                 	db	0
  2993  01D8E1  00                 	db	0
  2994  01D8E2  00                 	db	0
  2995  01D8E3  00                 	db	0
  2996  01D8E4  00                 	db	0
  2997  01D8E5  00                 	db	0
  2998  01D8E6  00                 	db	0
  2999  01D8E7  00                 	db	0
  3000  01D8E8  00                 	db	0
  3001  01D8E9  00                 	db	0
  3002  01D8EA  00                 	db	0
  3003  01D8EB  00                 	db	0
  3004  01D8EC  00                 	db	0
  3005  01D8ED  00                 	db	0
  3006  01D8EE  00                 	db	0
  3007  01D8EF  00                 	db	0
  3008  01D8F0  00                 	db	0
  3009  01D8F1  00                 	db	0
  3010  01D8F2  00                 	db	0
  3011  01D8F3  00                 	db	0
  3012  01D8F4  00                 	db	0
  3013  01D8F5  00                 	db	0
  3014  01D8F6  00                 	db	0
  3015  01D8F7  00                 	db	0
  3016  01D8F8  00                 	db	0
  3017  01D8F9  00                 	db	0
  3018  01D8FA  00                 	db	0
  3019  01D8FB  00                 	db	0
  3020  01D8FC  00                 	db	0
  3021  01D8FD  00                 	db	0
  3022  01D8FE  00                 	db	0
  3023  01D8FF  00                 	db	0
  3024  01D900  00                 	db	0
  3025  01D901  00                 	db	0
  3026  01D902  00                 	db	0
  3027  01D903  00                 	db	0
  3028  01D904  00                 	db	0
  3029  01D905  00                 	db	0
  3030  01D906  00                 	db	0
  3031  01D907  00                 	db	0
  3032  01D908  00                 	db	0
  3033  01D909  00                 	db	0
  3034  01D90A  00                 	db	0
  3035  01D90B  00                 	db	0
  3036  01D90C  00                 	db	0
  3037  01D90D  00                 	db	0
  3038  01D90E  00                 	db	0
  3039  01D90F  00                 	db	0
  3040  01D910  00                 	db	0
  3041  01D911  00                 	db	0
  3042  01D912  00                 	db	0
  3043  01D913  00                 	db	0
  3044  01D914  00                 	db	0
  3045  01D915  00                 	db	0
  3046  01D916  00                 	db	0
  3047  01D917  00                 	db	0
  3048  01D918  00                 	db	0
  3049  01D919  00                 	db	0
  3050  01D91A  00                 	db	0
  3051  01D91B  00                 	db	0
  3052  01D91C  00                 	db	0
  3053  01D91D  00                 	db	0
  3054  01D91E  00                 	db	0
  3055  01D91F  00                 	db	0
  3056  01D920  00                 	db	0
  3057  01D921  00                 	db	0
  3058  01D922  00                 	db	0
  3059  01D923  00                 	db	0
  3060  01D924  00                 	db	0
  3061  01D925  00                 	db	0
  3062  01D926  00                 	db	0
  3063  01D927  00                 	db	0
  3064  01D928  00                 	db	0
  3065  01D929  00                 	db	0
  3066  01D92A  00                 	db	0
  3067  01D92B  00                 	db	0
  3068  01D92C  00                 	db	0
  3069  01D92D  00                 	db	0
  3070  01D92E  00                 	db	0
  3071  01D92F  00                 	db	0
  3072  01D930  00                 	db	0
  3073  01D931  00                 	db	0
  3074  01D932  00                 	db	0
  3075  01D933  00                 	db	0
  3076  01D934  00                 	db	0
  3077  01D935  00                 	db	0
  3078  01D936  00                 	db	0
  3079  01D937  00                 	db	0
  3080  01D938  00                 	db	0
  3081  01D939  00                 	db	0
  3082  01D93A  00                 	db	0
  3083  01D93B  00                 	db	0
  3084  01D93C  00                 	db	0
  3085  01D93D  00                 	db	0
  3086  01D93E  00                 	db	0
  3087  01D93F  00                 	db	0
  3088  01D940  00                 	db	0
  3089  01D941  00                 	db	0
  3090  01D942  00                 	db	0
  3091  01D943  00                 	db	0
  3092  01D944  00                 	db	0
  3093  01D945  00                 	db	0
  3094  01D946  00                 	db	0
  3095  01D947  00                 	db	0
  3096  01D948  00                 	db	0
  3097  01D949  00                 	db	0
  3098  01D94A  00                 	db	0
  3099  01D94B  00                 	db	0
  3100  01D94C  00                 	db	0
  3101  01D94D  00                 	db	0
  3102  01D94E  00                 	db	0
  3103  01D94F  00                 	db	0
  3104  01D950  00                 	db	0
  3105  01D951  00                 	db	0
  3106  01D952  00                 	db	0
  3107  01D953  00                 	db	0
  3108  01D954  00                 	db	0
  3109  01D955  00                 	db	0
  3110  01D956  00                 	db	0
  3111  01D957  00                 	db	0
  3112  01D958  00                 	db	0
  3113  01D959  00                 	db	0
  3114  01D95A  00                 	db	0
  3115  01D95B  00                 	db	0
  3116  01D95C  00                 	db	0
  3117  01D95D  00                 	db	0
  3118  01D95E  00                 	db	0
  3119  01D95F  00                 	db	0
  3120  01D960  00                 	db	0
  3121  01D961  00                 	db	0
  3122  01D962  00                 	db	0
  3123  01D963  00                 	db	0
  3124  01D964  00                 	db	0
  3125  01D965  00                 	db	0
  3126  01D966  00                 	db	0
  3127  01D967  00                 	db	0
  3128  01D968  00                 	db	0
  3129  01D969  00                 	db	0
  3130  01D96A  00                 	db	0
  3131  01D96B  00                 	db	0
  3132  01D96C  00                 	db	0
  3133  01D96D  00                 	db	0
  3134  01D96E  00                 	db	0
  3135  01D96F  00                 	db	0
  3136  01D970  00                 	db	0
  3137  01D971  00                 	db	0
  3138  01D972  00                 	db	0
  3139  01D973  00                 	db	0
  3140  01D974  00                 	db	0
  3141  01D975  00                 	db	0
  3142  01D976  00                 	db	0
  3143  01D977  00                 	db	0
  3144  01D978  00                 	db	0
  3145  01D979  00                 	db	0
  3146  01D97A  00                 	db	0
  3147  01D97B  00                 	db	0
  3148  01D97C  00                 	db	0
  3149  01D97D  00                 	db	0
  3150  01D97E  00                 	db	0
  3151  01D97F  00                 	db	0
  3152  01D980  00                 	db	0
  3153  01D981  00                 	db	0
  3154  01D982  00                 	db	0
  3155  01D983  00                 	db	0
  3156  01D984  00                 	db	0
  3157  01D985  00                 	db	0
  3158  01D986  00                 	db	0
  3159  01D987  00                 	db	0
  3160  01D988  00                 	db	0
  3161  01D989  00                 	db	0
  3162  01D98A  00                 	db	0
  3163  01D98B  00                 	db	0
  3164  01D98C  00                 	db	0
  3165  01D98D  00                 	db	0
  3166  01D98E  00                 	db	0
  3167  01D98F  00                 	db	0
  3168  01D990  00                 	db	0
  3169  01D991  00                 	db	0
  3170  01D992  00                 	db	0
  3171  01D993  00                 	db	0
  3172  01D994  00                 	db	0
  3173  01D995  00                 	db	0
  3174  01D996  00                 	db	0
  3175  01D997  00                 	db	0
  3176  01D998  00                 	db	0
  3177  01D999  00                 	db	0
  3178  01D99A  00                 	db	0
  3179  01D99B  00                 	db	0
  3180  01D99C  00                 	db	0
  3181  01D99D  00                 	db	0
  3182  01D99E  00                 	db	0
  3183  01D99F  00                 	db	0
  3184  01D9A0  00                 	db	0
  3185  01D9A1  00                 	db	0
  3186  01D9A2  00                 	db	0
  3187  01D9A3  00                 	db	0
  3188  01D9A4  00                 	db	0
  3189  01D9A5  00                 	db	0
  3190  01D9A6  00                 	db	0
  3191  01D9A7  00                 	db	0
  3192  01D9A8  00                 	db	0
  3193  01D9A9  00                 	db	0
  3194  01D9AA  00                 	db	0
  3195  01D9AB  00                 	db	0
  3196  01D9AC  00                 	db	0
  3197  01D9AD  00                 	db	0
  3198  01D9AE  00                 	db	0
  3199  01D9AF  00                 	db	0
  3200  01D9B0  00                 	db	0
  3201  01D9B1  00                 	db	0
  3202  01D9B2  00                 	db	0
  3203  01D9B3  00                 	db	0
  3204  01D9B4  00                 	db	0
  3205  01D9B5  00                 	db	0
  3206  01D9B6  00                 	db	0
  3207  01D9B7  00                 	db	0
  3208  01D9B8  00                 	db	0
  3209  01D9B9  00                 	db	0
  3210  01D9BA  00                 	db	0
  3211  01D9BB  00                 	db	0
  3212  01D9BC  00                 	db	0
  3213  01D9BD  00                 	db	0
  3214  01D9BE  00                 	db	0
  3215  01D9BF  00                 	db	0
  3216  01D9C0  00                 	db	0
  3217  01D9C1  00                 	db	0
  3218  01D9C2  00                 	db	0
  3219  01D9C3  00                 	db	0
  3220  01D9C4  00                 	db	0
  3221  01D9C5  00                 	db	0
  3222  01D9C6  00                 	db	0
  3223  01D9C7  00                 	db	0
  3224  01D9C8  00                 	db	0
  3225  01D9C9  00                 	db	0
  3226  01D9CA  00                 	db	0
  3227  01D9CB  00                 	db	0
  3228  01D9CC  00                 	db	0
  3229  01D9CD  00                 	db	0
  3230  01D9CE  00                 	db	0
  3231  01D9CF  00                 	db	0
  3232  01D9D0  00                 	db	0
  3233  01D9D1  00                 	db	0
  3234  01D9D2  00                 	db	0
  3235  01D9D3  00                 	db	0
  3236  01D9D4  00                 	db	0
  3237  01D9D5  00                 	db	0
  3238  01D9D6  00                 	db	0
  3239  01D9D7  00                 	db	0
  3240  01D9D8  00                 	db	0
  3241  01D9D9  00                 	db	0
  3242  01D9DA  00                 	db	0
  3243  01D9DB  00                 	db	0
  3244  01D9DC  00                 	db	0
  3245  01D9DD  00                 	db	0
  3246  01D9DE  00                 	db	0
  3247  01D9DF  00                 	db	0
  3248  01D9E0  00                 	db	0
  3249  01D9E1  00                 	db	0
  3250  01D9E2  00                 	db	0
  3251  01D9E3  00                 	db	0
  3252  01D9E4  00                 	db	0
  3253  01D9E5  00                 	db	0
  3254  01D9E6  00                 	db	0
  3255  01D9E7  00                 	db	0
  3256  01D9E8  00                 	db	0
  3257  01D9E9  00                 	db	0
  3258  01D9EA  00                 	db	0
  3259  01D9EB  00                 	db	0
  3260  01D9EC  00                 	db	0
  3261  01D9ED  00                 	db	0
  3262  01D9EE  00                 	db	0
  3263  01D9EF  00                 	db	0
  3264  01D9F0  00                 	db	0
  3265  01D9F1  00                 	db	0
  3266  01D9F2  00                 	db	0
  3267  01D9F3  00                 	db	0
  3268  01D9F4  00                 	db	0
  3269  01D9F5  00                 	db	0
  3270  01D9F6  00                 	db	0
  3271  01D9F7  00                 	db	0
  3272  01D9F8  00                 	db	0
  3273  01D9F9  00                 	db	0
  3274  01D9FA  00                 	db	0
  3275  01D9FB  00                 	db	0
  3276  01D9FC  00                 	db	0
  3277  01D9FD  00                 	db	0
  3278  01D9FE  00                 	db	0
  3279  01D9FF  00                 	db	0
  3280  01DA00  00                 	db	0
  3281  01DA01  00                 	db	0
  3282  01DA02  00                 	db	0
  3283  01DA03  00                 	db	0
  3284  01DA04  00                 	db	0
  3285  01DA05  00                 	db	0
  3286  01DA06  00                 	db	0
  3287  01DA07  00                 	db	0
  3288  01DA08  00                 	db	0
  3289  01DA09  00                 	db	0
  3290  01DA0A  00                 	db	0
  3291  01DA0B  00                 	db	0
  3292  01DA0C  00                 	db	0
  3293  01DA0D  00                 	db	0
  3294  01DA0E  00                 	db	0
  3295  01DA0F  00                 	db	0
  3296  01DA10  00                 	db	0
  3297  01DA11  00                 	db	0
  3298  01DA12  00                 	db	0
  3299  01DA13  00                 	db	0
  3300  01DA14  00                 	db	0
  3301  01DA15  00                 	db	0
  3302  01DA16  00                 	db	0
  3303  01DA17  00                 	db	0
  3304  01DA18  00                 	db	0
  3305  01DA19  00                 	db	0
  3306  01DA1A  00                 	db	0
  3307  01DA1B  00                 	db	0
  3308  01DA1C  00                 	db	0
  3309  01DA1D  00                 	db	0
  3310  01DA1E  00                 	db	0
  3311  01DA1F  00                 	db	0
  3312  01DA20  00                 	db	0
  3313  01DA21  00                 	db	0
  3314  01DA22  00                 	db	0
  3315  01DA23  00                 	db	0
  3316  01DA24  00                 	db	0
  3317  01DA25  00                 	db	0
  3318  01DA26  00                 	db	0
  3319  01DA27  00                 	db	0
  3320  01DA28  00                 	db	0
  3321  01DA29  00                 	db	0
  3322  01DA2A  00                 	db	0
  3323  01DA2B  00                 	db	0
  3324  01DA2C  00                 	db	0
  3325  01DA2D  00                 	db	0
  3326  01DA2E  00                 	db	0
  3327  01DA2F  00                 	db	0
  3328  01DA30  00                 	db	0
  3329  01DA31  00                 	db	0
  3330  01DA32  00                 	db	0
  3331  01DA33  00                 	db	0
  3332  01DA34  00                 	db	0
  3333  01DA35  00                 	db	0
  3334  01DA36  00                 	db	0
  3335  01DA37  00                 	db	0
  3336  01DA38  00                 	db	0
  3337  01DA39  00                 	db	0
  3338  01DA3A  00                 	db	0
  3339  01DA3B  00                 	db	0
  3340  01DA3C  00                 	db	0
  3341  01DA3D  00                 	db	0
  3342  01DA3E  00                 	db	0
  3343  01DA3F  00                 	db	0
  3344  01DA40  00                 	db	0
  3345  01DA41  00                 	db	0
  3346  01DA42  00                 	db	0
  3347  01DA43  00                 	db	0
  3348  01DA44  00                 	db	0
  3349  01DA45  00                 	db	0
  3350  01DA46  00                 	db	0
  3351  01DA47  00                 	db	0
  3352  01DA48  00                 	db	0
  3353  01DA49  00                 	db	0
  3354  01DA4A  00                 	db	0
  3355  01DA4B  00                 	db	0
  3356  01DA4C  00                 	db	0
  3357  01DA4D  00                 	db	0
  3358  01DA4E  00                 	db	0
  3359  01DA4F  00                 	db	0
  3360  01DA50  00                 	db	0
  3361  01DA51  00                 	db	0
  3362  01DA52  00                 	db	0
  3363  01DA53  00                 	db	0
  3364  01DA54  00                 	db	0
  3365  01DA55  00                 	db	0
  3366  01DA56  00                 	db	0
  3367  01DA57  00                 	db	0
  3368  01DA58  00                 	db	0
  3369  01DA59  00                 	db	0
  3370  01DA5A  00                 	db	0
  3371  01DA5B  00                 	db	0
  3372  01DA5C  00                 	db	0
  3373  01DA5D  00                 	db	0
  3374  01DA5E  00                 	db	0
  3375  01DA5F  00                 	db	0
  3376  01DA60  00                 	db	0
  3377  01DA61  00                 	db	0
  3378  01DA62  00                 	db	0
  3379  01DA63  00                 	db	0
  3380  01DA64  00                 	db	0
  3381  01DA65  00                 	db	0
  3382  01DA66  00                 	db	0
  3383  01DA67  00                 	db	0
  3384  01DA68  00                 	db	0
  3385  01DA69  00                 	db	0
  3386  01DA6A  00                 	db	0
  3387  01DA6B  00                 	db	0
  3388  01DA6C  00                 	db	0
  3389  01DA6D  00                 	db	0
  3390  01DA6E  00                 	db	0
  3391  01DA6F  00                 	db	0
  3392  01DA70  00                 	db	0
  3393  01DA71  00                 	db	0
  3394  01DA72  00                 	db	0
  3395  01DA73  00                 	db	0
  3396  01DA74  00                 	db	0
  3397  01DA75  00                 	db	0
  3398  01DA76  00                 	db	0
  3399  01DA77  00                 	db	0
  3400  01DA78  00                 	db	0
  3401  01DA79  00                 	db	0
  3402  01DA7A  00                 	db	0
  3403  01DA7B  00                 	db	0
  3404  01DA7C  00                 	db	0
  3405  01DA7D  00                 	db	0
  3406  01DA7E  00                 	db	0
  3407  01DA7F  00                 	db	0
  3408  01DA80  00                 	db	0
  3409  01DA81  00                 	db	0
  3410  01DA82  00                 	db	0
  3411  01DA83  00                 	db	0
  3412  01DA84  00                 	db	0
  3413  01DA85  00                 	db	0
  3414  01DA86  00                 	db	0
  3415  01DA87  00                 	db	0
  3416  01DA88  00                 	db	0
  3417  01DA89  00                 	db	0
  3418  01DA8A  00                 	db	0
  3419  01DA8B  00                 	db	0
  3420  01DA8C  00                 	db	0
  3421  01DA8D  00                 	db	0
  3422  01DA8E  00                 	db	0
  3423  01DA8F  00                 	db	0
  3424  01DA90  00                 	db	0
  3425  01DA91  00                 	db	0
  3426  01DA92  00                 	db	0
  3427  01DA93  00                 	db	0
  3428  01DA94  00                 	db	0
  3429  01DA95  00                 	db	0
  3430  01DA96  00                 	db	0
  3431  01DA97  00                 	db	0
  3432  01DA98  00                 	db	0
  3433  01DA99  00                 	db	0
  3434  01DA9A  00                 	db	0
  3435  01DA9B  00                 	db	0
  3436  01DA9C  00                 	db	0
  3437  01DA9D  00                 	db	0
  3438  01DA9E  00                 	db	0
  3439  01DA9F  00                 	db	0
  3440  01DAA0  00                 	db	0
  3441  01DAA1  00                 	db	0
  3442  01DAA2  00                 	db	0
  3443  01DAA3  00                 	db	0
  3444  01DAA4  00                 	db	0
  3445  01DAA5  00                 	db	0
  3446  01DAA6  00                 	db	0
  3447  01DAA7  00                 	db	0
  3448  01DAA8  00                 	db	0
  3449  01DAA9  00                 	db	0
  3450  01DAAA  00                 	db	0
  3451  01DAAB  00                 	db	0
  3452  01DAAC  00                 	db	0
  3453  01DAAD  00                 	db	0
  3454  01DAAE  00                 	db	0
  3455  01DAAF  00                 	db	0
  3456  01DAB0  00                 	db	0
  3457  01DAB1  00                 	db	0
  3458  01DAB2  00                 	db	0
  3459  01DAB3  00                 	db	0
  3460  01DAB4  00                 	db	0
  3461  01DAB5  00                 	db	0
  3462  01DAB6  00                 	db	0
  3463  01DAB7  00                 	db	0
  3464  01DAB8  00                 	db	0
  3465  01DAB9  00                 	db	0
  3466  01DABA  00                 	db	0
  3467  01DABB  00                 	db	0
  3468  01DABC  00                 	db	0
  3469  01DABD  00                 	db	0
  3470  01DABE  00                 	db	0
  3471  01DABF  00                 	db	0
  3472  01DAC0  00                 	db	0
  3473  01DAC1  00                 	db	0
  3474  01DAC2  00                 	db	0
  3475  01DAC3  00                 	db	0
  3476  01DAC4  00                 	db	0
  3477  01DAC5  00                 	db	0
  3478  01DAC6  00                 	db	0
  3479  01DAC7  00                 	db	0
  3480  01DAC8  00                 	db	0
  3481  01DAC9  00                 	db	0
  3482  01DACA  00                 	db	0
  3483  01DACB  00                 	db	0
  3484  01DACC  00                 	db	0
  3485  01DACD  00                 	db	0
  3486  01DACE  00                 	db	0
  3487  01DACF  00                 	db	0
  3488  01DAD0  00                 	db	0
  3489  01DAD1  00                 	db	0
  3490  01DAD2  00                 	db	0
  3491  01DAD3  00                 	db	0
  3492  01DAD4  00                 	db	0
  3493  01DAD5  00                 	db	0
  3494  01DAD6  00                 	db	0
  3495  01DAD7  00                 	db	0
  3496  01DAD8  00                 	db	0
  3497  01DAD9  00                 	db	0
  3498  01DADA  00                 	db	0
  3499  01DADB  00                 	db	0
  3500  01DADC  00                 	db	0
  3501  01DADD  00                 	db	0
  3502  01DADE  00                 	db	0
  3503  01DADF  00                 	db	0
  3504  01DAE0  00                 	db	0
  3505  01DAE1  00                 	db	0
  3506  01DAE2  00                 	db	0
  3507  01DAE3  00                 	db	0
  3508  01DAE4  00                 	db	0
  3509  01DAE5  00                 	db	0
  3510  01DAE6  00                 	db	0
  3511  01DAE7  00                 	db	0
  3512  01DAE8  00                 	db	0
  3513  01DAE9  00                 	db	0
  3514  01DAEA  00                 	db	0
  3515  01DAEB  00                 	db	0
  3516  01DAEC  00                 	db	0
  3517  01DAED  00                 	db	0
  3518  01DAEE  00                 	db	0
  3519  01DAEF  00                 	db	0
  3520  01DAF0  00                 	db	0
  3521  01DAF1  00                 	db	0
  3522  01DAF2  00                 	db	0
  3523  01DAF3  00                 	db	0
  3524  01DAF4  00                 	db	0
  3525  01DAF5  00                 	db	0
  3526  01DAF6  00                 	db	0
  3527  01DAF7  00                 	db	0
  3528  01DAF8  00                 	db	0
  3529  01DAF9  00                 	db	0
  3530  01DAFA  00                 	db	0
  3531  01DAFB  00                 	db	0
  3532  01DAFC  00                 	db	0
  3533  01DAFD  00                 	db	0
  3534  01DAFE  00                 	db	0
  3535  01DAFF  00                 	db	0
  3536  01DB00  00                 	db	0
  3537  01DB01  00                 	db	0
  3538  01DB02  00                 	db	0
  3539  01DB03  00                 	db	0
  3540  01DB04  00                 	db	0
  3541  01DB05  00                 	db	0
  3542  01DB06  00                 	db	0
  3543  01DB07  00                 	db	0
  3544  01DB08  00                 	db	0
  3545  01DB09  00                 	db	0
  3546  01DB0A  00                 	db	0
  3547  01DB0B  00                 	db	0
  3548  01DB0C  00                 	db	0
  3549  01DB0D  00                 	db	0
  3550  01DB0E  00                 	db	0
  3551  01DB0F  00                 	db	0
  3552  01DB10  00                 	db	0
  3553  01DB11  00                 	db	0
  3554  01DB12  00                 	db	0
  3555  01DB13  00                 	db	0
  3556  01DB14  00                 	db	0
  3557  01DB15  00                 	db	0
  3558  01DB16  00                 	db	0
  3559  01DB17  00                 	db	0
  3560  01DB18  00                 	db	0
  3561  01DB19  00                 	db	0
  3562  01DB1A  00                 	db	0
  3563  01DB1B  00                 	db	0
  3564  01DB1C  00                 	db	0
  3565  01DB1D  00                 	db	0
  3566  01DB1E  00                 	db	0
  3567  01DB1F  00                 	db	0
  3568  01DB20  00                 	db	0
  3569  01DB21  00                 	db	0
  3570  01DB22  00                 	db	0
  3571  01DB23  00                 	db	0
  3572  01DB24  00                 	db	0
  3573  01DB25  00                 	db	0
  3574  01DB26  00                 	db	0
  3575  01DB27  00                 	db	0
  3576  01DB28  00                 	db	0
  3577  01DB29  00                 	db	0
  3578  01DB2A  00                 	db	0
  3579  01DB2B  00                 	db	0
  3580  01DB2C  00                 	db	0
  3581  01DB2D  00                 	db	0
  3582  01DB2E  00                 	db	0
  3583  01DB2F  00                 	db	0
  3584  01DB30  00                 	db	0
  3585  01DB31  00                 	db	0
  3586  01DB32  00                 	db	0
  3587  01DB33  00                 	db	0
  3588  01DB34  00                 	db	0
  3589  01DB35  00                 	db	0
  3590  01DB36  00                 	db	0
  3591  01DB37  00                 	db	0
  3592  01DB38  00                 	db	0
  3593  01DB39  00                 	db	0
  3594  01DB3A  00                 	db	0
  3595  01DB3B  00                 	db	0
  3596  01DB3C  00                 	db	0
  3597  01DB3D  00                 	db	0
  3598  01DB3E  00                 	db	0
  3599  01DB3F  00                 	db	0
  3600  01DB40  00                 	db	0
  3601  01DB41  00                 	db	0
  3602  01DB42  00                 	db	0
  3603  01DB43  00                 	db	0
  3604  01DB44  00                 	db	0
  3605  01DB45  00                 	db	0
  3606  01DB46  00                 	db	0
  3607  01DB47  00                 	db	0
  3608  01DB48  00                 	db	0
  3609  01DB49  00                 	db	0
  3610  01DB4A  00                 	db	0
  3611  01DB4B  00                 	db	0
  3612  01DB4C  00                 	db	0
  3613  01DB4D  00                 	db	0
  3614  01DB4E  00                 	db	0
  3615  01DB4F  00                 	db	0
  3616  01DB50  00                 	db	0
  3617  01DB51  00                 	db	0
  3618  01DB52  00                 	db	0
  3619  01DB53  00                 	db	0
  3620  01DB54  00                 	db	0
  3621  01DB55  00                 	db	0
  3622  01DB56  00                 	db	0
  3623  01DB57  00                 	db	0
  3624  01DB58  00                 	db	0
  3625  01DB59  00                 	db	0
  3626  01DB5A  00                 	db	0
  3627  01DB5B  00                 	db	0
  3628  01DB5C  00                 	db	0
  3629  01DB5D  00                 	db	0
  3630  01DB5E  00                 	db	0
  3631  01DB5F  00                 	db	0
  3632  01DB60  00                 	db	0
  3633  01DB61  00                 	db	0
  3634  01DB62  00                 	db	0
  3635  01DB63  00                 	db	0
  3636  01DB64  00                 	db	0
  3637  01DB65  00                 	db	0
  3638  01DB66  00                 	db	0
  3639  01DB67  00                 	db	0
  3640  01DB68  00                 	db	0
  3641  01DB69  00                 	db	0
  3642  01DB6A  00                 	db	0
  3643  01DB6B  00                 	db	0
  3644  01DB6C  00                 	db	0
  3645  01DB6D  00                 	db	0
  3646  01DB6E  00                 	db	0
  3647  01DB6F  00                 	db	0
  3648  01DB70  00                 	db	0
  3649  01DB71  00                 	db	0
  3650  01DB72  00                 	db	0
  3651  01DB73  00                 	db	0
  3652  01DB74  00                 	db	0
  3653  01DB75  00                 	db	0
  3654  01DB76  00                 	db	0
  3655  01DB77  00                 	db	0
  3656  01DB78  00                 	db	0
  3657  01DB79  00                 	db	0
  3658  01DB7A  00                 	db	0
  3659  01DB7B  00                 	db	0
  3660  01DB7C  00                 	db	0
  3661  01DB7D  00                 	db	0
  3662  01DB7E  00                 	db	0
  3663  01DB7F  00                 	db	0
  3664  01DB80  00                 	db	0
  3665  01DB81  00                 	db	0
  3666  01DB82  00                 	db	0
  3667  01DB83  00                 	db	0
  3668  01DB84  00                 	db	0
  3669  01DB85  00                 	db	0
  3670  01DB86  00                 	db	0
  3671  01DB87  00                 	db	0
  3672  01DB88  00                 	db	0
  3673  01DB89  00                 	db	0
  3674  01DB8A  00                 	db	0
  3675  01DB8B  00                 	db	0
  3676  01DB8C  00                 	db	0
  3677  01DB8D  00                 	db	0
  3678  01DB8E  00                 	db	0
  3679  01DB8F  00                 	db	0
  3680  01DB90  00                 	db	0
  3681  01DB91  00                 	db	0
  3682  01DB92  00                 	db	0
  3683  01DB93  00                 	db	0
  3684  01DB94  00                 	db	0
  3685  01DB95  00                 	db	0
  3686  01DB96  00                 	db	0
  3687  01DB97  00                 	db	0
  3688  01DB98  00                 	db	0
  3689  01DB99  00                 	db	0
  3690  01DB9A  00                 	db	0
  3691  01DB9B  00                 	db	0
  3692  01DB9C  00                 	db	0
  3693  01DB9D  00                 	db	0
  3694  01DB9E  00                 	db	0
  3695  01DB9F  00                 	db	0
  3696  01DBA0  00                 	db	0
  3697  01DBA1  00                 	db	0
  3698  01DBA2  00                 	db	0
  3699  01DBA3  00                 	db	0
  3700  01DBA4  00                 	db	0
  3701  01DBA5  00                 	db	0
  3702  01DBA6  00                 	db	0
  3703  01DBA7  00                 	db	0
  3704  01DBA8  00                 	db	0
  3705  01DBA9  00                 	db	0
  3706  01DBAA  00                 	db	0
  3707  01DBAB  00                 	db	0
  3708  01DBAC  00                 	db	0
  3709  01DBAD  00                 	db	0
  3710  01DBAE  00                 	db	0
  3711  01DBAF  00                 	db	0
  3712  01DBB0  00                 	db	0
  3713  01DBB1  00                 	db	0
  3714  01DBB2  00                 	db	0
  3715  01DBB3  00                 	db	0
  3716  01DBB4  00                 	db	0
  3717  01DBB5  00                 	db	0
  3718  01DBB6  00                 	db	0
  3719  01DBB7  00                 	db	0
  3720  01DBB8  00                 	db	0
  3721  01DBB9  00                 	db	0
  3722  01DBBA  00                 	db	0
  3723  01DBBB  00                 	db	0
  3724  01DBBC  00                 	db	0
  3725  01DBBD  00                 	db	0
  3726  01DBBE  00                 	db	0
  3727  01DBBF  00                 	db	0
  3728  01DBC0  00                 	db	0
  3729  01DBC1  00                 	db	0
  3730  01DBC2  00                 	db	0
  3731  01DBC3  00                 	db	0
  3732  01DBC4  00                 	db	0
  3733  01DBC5  00                 	db	0
  3734  01DBC6  00                 	db	0
  3735  01DBC7  00                 	db	0
  3736  01DBC8  00                 	db	0
  3737  01DBC9  00                 	db	0
  3738  01DBCA  00                 	db	0
  3739  01DBCB  00                 	db	0
  3740  01DBCC  00                 	db	0
  3741  01DBCD  00                 	db	0
  3742  01DBCE  00                 	db	0
  3743  01DBCF  00                 	db	0
  3744  01DBD0  00                 	db	0
  3745  01DBD1  00                 	db	0
  3746  01DBD2  00                 	db	0
  3747  01DBD3  00                 	db	0
  3748  01DBD4  00                 	db	0
  3749  01DBD5  00                 	db	0
  3750  01DBD6  00                 	db	0
  3751  01DBD7  00                 	db	0
  3752  01DBD8  00                 	db	0
  3753  01DBD9  00                 	db	0
  3754  01DBDA  00                 	db	0
  3755  01DBDB  00                 	db	0
  3756  01DBDC  00                 	db	0
  3757  01DBDD  00                 	db	0
  3758  01DBDE  00                 	db	0
  3759  01DBDF  00                 	db	0
  3760  01DBE0  00                 	db	0
  3761  01DBE1  00                 	db	0
  3762  01DBE2  00                 	db	0
  3763  01DBE3  00                 	db	0
  3764  01DBE4  00                 	db	0
  3765  01DBE5  00                 	db	0
  3766  01DBE6  00                 	db	0
  3767  01DBE7  00                 	db	0
  3768  01DBE8  00                 	db	0
  3769  01DBE9  00                 	db	0
  3770  01DBEA  00                 	db	0
  3771  01DBEB  00                 	db	0
  3772  01DBEC  00                 	db	0
  3773  01DBED  00                 	db	0
  3774  01DBEE  00                 	db	0
  3775  01DBEF  00                 	db	0
  3776  01DBF0  00                 	db	0
  3777  01DBF1  00                 	db	0
  3778  01DBF2  00                 	db	0
  3779  01DBF3  00                 	db	0
  3780  01DBF4  00                 	db	0
  3781  01DBF5  00                 	db	0
  3782  01DBF6  00                 	db	0
  3783  01DBF7  00                 	db	0
  3784  01DBF8  00                 	db	0
  3785  01DBF9  00                 	db	0
  3786  01DBFA  00                 	db	0
  3787  01DBFB  00                 	db	0
  3788  01DBFC  00                 	db	0
  3789  01DBFD  00                 	db	0
  3790  01DBFE  00                 	db	0
  3791  01DBFF  00                 	db	0
  3792  01DC00  00                 	db	0
  3793  01DC01  00                 	db	0
  3794  01DC02  00                 	db	0
  3795  01DC03  00                 	db	0
  3796  01DC04  00                 	db	0
  3797  01DC05  00                 	db	0
  3798  01DC06  00                 	db	0
  3799  01DC07  00                 	db	0
  3800  01DC08  00                 	db	0
  3801  01DC09  00                 	db	0
  3802  01DC0A  00                 	db	0
  3803  01DC0B  00                 	db	0
  3804  01DC0C  00                 	db	0
  3805  01DC0D  00                 	db	0
  3806  01DC0E  00                 	db	0
  3807  01DC0F  00                 	db	0
  3808  01DC10  00                 	db	0
  3809  01DC11  00                 	db	0
  3810  01DC12  00                 	db	0
  3811  01DC13  00                 	db	0
  3812  01DC14  00                 	db	0
  3813  01DC15  00                 	db	0
  3814  01DC16  00                 	db	0
  3815  01DC17  00                 	db	0
  3816  01DC18  00                 	db	0
  3817  01DC19  00                 	db	0
  3818  01DC1A  00                 	db	0
  3819  01DC1B  00                 	db	0
  3820  01DC1C  00                 	db	0
  3821  01DC1D  00                 	db	0
  3822  01DC1E  00                 	db	0
  3823  01DC1F  00                 	db	0
  3824  01DC20  00                 	db	0
  3825  01DC21  00                 	db	0
  3826  01DC22  00                 	db	0
  3827  01DC23  00                 	db	0
  3828  01DC24  00                 	db	0
  3829  01DC25  00                 	db	0
  3830  01DC26  00                 	db	0
  3831  01DC27  00                 	db	0
  3832  01DC28  00                 	db	0
  3833  01DC29  00                 	db	0
  3834  01DC2A  00                 	db	0
  3835  01DC2B  00                 	db	0
  3836  01DC2C  00                 	db	0
  3837  01DC2D  00                 	db	0
  3838  01DC2E  00                 	db	0
  3839  01DC2F  00                 	db	0
  3840  01DC30  00                 	db	0
  3841  01DC31  00                 	db	0
  3842  01DC32  00                 	db	0
  3843  01DC33  00                 	db	0
  3844  01DC34  00                 	db	0
  3845  01DC35  00                 	db	0
  3846  01DC36  00                 	db	0
  3847  01DC37  00                 	db	0
  3848  01DC38  00                 	db	0
  3849  01DC39  00                 	db	0
  3850  01DC3A  00                 	db	0
  3851  01DC3B  00                 	db	0
  3852  01DC3C  00                 	db	0
  3853  01DC3D  00                 	db	0
  3854  01DC3E  00                 	db	0
  3855  01DC3F  00                 	db	0
  3856  01DC40  00                 	db	0
  3857  01DC41  00                 	db	0
  3858  01DC42  00                 	db	0
  3859  01DC43  00                 	db	0
  3860  01DC44  00                 	db	0
  3861  01DC45  00                 	db	0
  3862  01DC46  00                 	db	0
  3863  01DC47  00                 	db	0
  3864  01DC48  00                 	db	0
  3865  01DC49  00                 	db	0
  3866  01DC4A  00                 	db	0
  3867  01DC4B  00                 	db	0
  3868  01DC4C  00                 	db	0
  3869  01DC4D  00                 	db	0
  3870  01DC4E  00                 	db	0
  3871  01DC4F  00                 	db	0
  3872  01DC50  00                 	db	0
  3873  01DC51  00                 	db	0
  3874  01DC52  00                 	db	0
  3875  01DC53  00                 	db	0
  3876  01DC54  00                 	db	0
  3877  01DC55  00                 	db	0
  3878  01DC56  00                 	db	0
  3879  01DC57  00                 	db	0
  3880  01DC58  00                 	db	0
  3881  01DC59  00                 	db	0
  3882  01DC5A  00                 	db	0
  3883  01DC5B  00                 	db	0
  3884  01DC5C  00                 	db	0
  3885  01DC5D  00                 	db	0
  3886  01DC5E  00                 	db	0
  3887  01DC5F  00                 	db	0
  3888  01DC60  00                 	db	0
  3889  01DC61  00                 	db	0
  3890  01DC62  00                 	db	0
  3891  01DC63  00                 	db	0
  3892  01DC64  00                 	db	0
  3893  01DC65  00                 	db	0
  3894  01DC66  00                 	db	0
  3895  01DC67  00                 	db	0
  3896  01DC68  00                 	db	0
  3897  01DC69  00                 	db	0
  3898  01DC6A  00                 	db	0
  3899  01DC6B  00                 	db	0
  3900  01DC6C  00                 	db	0
  3901  01DC6D  00                 	db	0
  3902  01DC6E  00                 	db	0
  3903  01DC6F  00                 	db	0
  3904  01DC70  00                 	db	0
  3905  01DC71  00                 	db	0
  3906  01DC72  00                 	db	0
  3907  01DC73  00                 	db	0
  3908  01DC74  00                 	db	0
  3909  01DC75  00                 	db	0
  3910  01DC76  00                 	db	0
  3911  01DC77  00                 	db	0
  3912  01DC78  00                 	db	0
  3913  01DC79  00                 	db	0
  3914  01DC7A  00                 	db	0
  3915  01DC7B  00                 	db	0
  3916  01DC7C  00                 	db	0
  3917  01DC7D  00                 	db	0
  3918  01DC7E  00                 	db	0
  3919  01DC7F  00                 	db	0
  3920  01DC80  00                 	db	0
  3921  01DC81  00                 	db	0
  3922  01DC82  00                 	db	0
  3923  01DC83  00                 	db	0
  3924  01DC84  00                 	db	0
  3925  01DC85  00                 	db	0
  3926  01DC86  00                 	db	0
  3927  01DC87  00                 	db	0
  3928  01DC88  00                 	db	0
  3929  01DC89  00                 	db	0
  3930  01DC8A  00                 	db	0
  3931  01DC8B  00                 	db	0
  3932  01DC8C  00                 	db	0
  3933  01DC8D  00                 	db	0
  3934  01DC8E  00                 	db	0
  3935  01DC8F  00                 	db	0
  3936  01DC90  00                 	db	0
  3937  01DC91  00                 	db	0
  3938  01DC92  00                 	db	0
  3939  01DC93  00                 	db	0
  3940  01DC94  00                 	db	0
  3941  01DC95  00                 	db	0
  3942  01DC96  00                 	db	0
  3943  01DC97  00                 	db	0
  3944  01DC98  00                 	db	0
  3945  01DC99  00                 	db	0
  3946  01DC9A  00                 	db	0
  3947  01DC9B  00                 	db	0
  3948  01DC9C  00                 	db	0
  3949  01DC9D  00                 	db	0
  3950  01DC9E  00                 	db	0
  3951  01DC9F  00                 	db	0
  3952  01DCA0  00                 	db	0
  3953  01DCA1  00                 	db	0
  3954  01DCA2  00                 	db	0
  3955  01DCA3  00                 	db	0
  3956  01DCA4  00                 	db	0
  3957  01DCA5  00                 	db	0
  3958  01DCA6  00                 	db	0
  3959  01DCA7  00                 	db	0
  3960  01DCA8  00                 	db	0
  3961  01DCA9  00                 	db	0
  3962  01DCAA  00                 	db	0
  3963  01DCAB  00                 	db	0
  3964  01DCAC  00                 	db	0
  3965  01DCAD  00                 	db	0
  3966  01DCAE  00                 	db	0
  3967  01DCAF  00                 	db	0
  3968  01DCB0  00                 	db	0
  3969  01DCB1  00                 	db	0
  3970  01DCB2  00                 	db	0
  3971  01DCB3  00                 	db	0
  3972  01DCB4  00                 	db	0
  3973  01DCB5  00                 	db	0
  3974  01DCB6  00                 	db	0
  3975  01DCB7  00                 	db	0
  3976  01DCB8  00                 	db	0
  3977  01DCB9  00                 	db	0
  3978  01DCBA  00                 	db	0
  3979  01DCBB  00                 	db	0
  3980  01DCBC  00                 	db	0
  3981  01DCBD  00                 	db	0
  3982  01DCBE  00                 	db	0
  3983  01DCBF  00                 	db	0
  3984  01DCC0  00                 	db	0
  3985  01DCC1  00                 	db	0
  3986  01DCC2  00                 	db	0
  3987  01DCC3  00                 	db	0
  3988  01DCC4  00                 	db	0
  3989  01DCC5  00                 	db	0
  3990  01DCC6  00                 	db	0
  3991  01DCC7  00                 	db	0
  3992  01DCC8  00                 	db	0
  3993  01DCC9  00                 	db	0
  3994  01DCCA  00                 	db	0
  3995  01DCCB  00                 	db	0
  3996  01DCCC  00                 	db	0
  3997  01DCCD  00                 	db	0
  3998  01DCCE  00                 	db	0
  3999  01DCCF  00                 	db	0
  4000  01DCD0  00                 	db	0
  4001  01DCD1  00                 	db	0
  4002  01DCD2  00                 	db	0
  4003  01DCD3  00                 	db	0
  4004  01DCD4  00                 	db	0
  4005  01DCD5  00                 	db	0
  4006  01DCD6  00                 	db	0
  4007  01DCD7  00                 	db	0
  4008  01DCD8  00                 	db	0
  4009  01DCD9  00                 	db	0
  4010  01DCDA  00                 	db	0
  4011  01DCDB  00                 	db	0
  4012  01DCDC  00                 	db	0
  4013  01DCDD  00                 	db	0
  4014  01DCDE  00                 	db	0
  4015  01DCDF  00                 	db	0
  4016  01DCE0  00                 	db	0
  4017  01DCE1  00                 	db	0
  4018  01DCE2  00                 	db	0
  4019  01DCE3  00                 	db	0
  4020  01DCE4  00                 	db	0
  4021  01DCE5  00                 	db	0
  4022  01DCE6  00                 	db	0
  4023  01DCE7  00                 	db	0
  4024  01DCE8  00                 	db	0
  4025  01DCE9  00                 	db	0
  4026  01DCEA  00                 	db	0
  4027  01DCEB  00                 	db	0
  4028  01DCEC  00                 	db	0
  4029  01DCED  00                 	db	0
  4030  01DCEE  00                 	db	0
  4031  01DCEF  00                 	db	0
  4032  01DCF0  00                 	db	0
  4033  01DCF1  00                 	db	0
  4034  01DCF2  00                 	db	0
  4035  01DCF3  00                 	db	0
  4036  01DCF4  00                 	db	0
  4037  01DCF5  00                 	db	0
  4038  01DCF6  00                 	db	0
  4039  01DCF7  00                 	db	0
  4040  01DCF8  00                 	db	0
  4041  01DCF9  00                 	db	0
  4042  01DCFA  00                 	db	0
  4043  01DCFB  00                 	db	0
  4044  01DCFC  00                 	db	0
  4045  01DCFD  00                 	db	0
  4046  01DCFE  00                 	db	0
  4047  01DCFF  00                 	db	0
  4048  01DD00  00                 	db	0
  4049  01DD01  00                 	db	0
  4050  01DD02  00                 	db	0
  4051  01DD03  00                 	db	0
  4052  01DD04  00                 	db	0
  4053  01DD05  00                 	db	0
  4054  01DD06  00                 	db	0
  4055  01DD07  00                 	db	0
  4056  01DD08  00                 	db	0
  4057  01DD09  00                 	db	0
  4058  01DD0A  00                 	db	0
  4059  01DD0B  00                 	db	0
  4060  01DD0C  00                 	db	0
  4061  01DD0D  00                 	db	0
  4062  01DD0E  00                 	db	0
  4063  01DD0F  00                 	db	0
  4064  01DD10  00                 	db	0
  4065  01DD11  00                 	db	0
  4066  01DD12  00                 	db	0
  4067  01DD13  00                 	db	0
  4068  01DD14  00                 	db	0
  4069  01DD15  00                 	db	0
  4070  01DD16  00                 	db	0
  4071  01DD17  00                 	db	0
  4072  01DD18  00                 	db	0
  4073  01DD19  00                 	db	0
  4074  01DD1A  00                 	db	0
  4075  01DD1B  00                 	db	0
  4076  01DD1C  00                 	db	0
  4077  01DD1D  00                 	db	0
  4078  01DD1E  00                 	db	0
  4079  01DD1F  00                 	db	0
  4080  01DD20  00                 	db	0
  4081  01DD21  00                 	db	0
  4082  01DD22  00                 	db	0
  4083  01DD23  00                 	db	0
  4084  01DD24  00                 	db	0
  4085  01DD25  00                 	db	0
  4086  01DD26  00                 	db	0
  4087  01DD27  00                 	db	0
  4088  01DD28  00                 	db	0
  4089  01DD29  00                 	db	0
  4090  01DD2A  00                 	db	0
  4091  01DD2B  00                 	db	0
  4092  01DD2C  00                 	db	0
  4093  01DD2D  00                 	db	0
  4094  01DD2E  00                 	db	0
  4095  01DD2F  00                 	db	0
  4096  01DD30  00                 	db	0
  4097  01DD31  00                 	db	0
  4098  01DD32  00                 	db	0
  4099  01DD33  00                 	db	0
  4100  01DD34  00                 	db	0
  4101  01DD35  00                 	db	0
  4102  01DD36  00                 	db	0
  4103  01DD37  00                 	db	0
  4104  01DD38  00                 	db	0
  4105  01DD39  00                 	db	0
  4106  01DD3A  00                 	db	0
  4107  01DD3B  00                 	db	0
  4108  01DD3C  00                 	db	0
  4109  01DD3D  00                 	db	0
  4110  01DD3E  00                 	db	0
  4111  01DD3F  00                 	db	0
  4112  01DD40  00                 	db	0
  4113  01DD41  00                 	db	0
  4114  01DD42  00                 	db	0
  4115  01DD43  00                 	db	0
  4116  01DD44  00                 	db	0
  4117  01DD45  00                 	db	0
  4118  01DD46  00                 	db	0
  4119  01DD47  00                 	db	0
  4120  01DD48  00                 	db	0
  4121  01DD49  00                 	db	0
  4122  01DD4A  00                 	db	0
  4123  01DD4B  00                 	db	0
  4124  01DD4C  00                 	db	0
  4125  01DD4D  00                 	db	0
  4126  01DD4E  00                 	db	0
  4127  01DD4F  00                 	db	0
  4128  01DD50  00                 	db	0
  4129  01DD51  00                 	db	0
  4130  01DD52  00                 	db	0
  4131  01DD53  00                 	db	0
  4132  01DD54  00                 	db	0
  4133  01DD55  00                 	db	0
  4134  01DD56  00                 	db	0
  4135  01DD57  00                 	db	0
  4136  01DD58  00                 	db	0
  4137  01DD59  00                 	db	0
  4138  01DD5A  00                 	db	0
  4139  01DD5B  00                 	db	0
  4140  01DD5C  00                 	db	0
  4141  01DD5D  00                 	db	0
  4142  01DD5E  00                 	db	0
  4143  01DD5F  00                 	db	0
  4144  01DD60  00                 	db	0
  4145  01DD61  00                 	db	0
  4146  01DD62  00                 	db	0
  4147  01DD63  00                 	db	0
  4148  01DD64  00                 	db	0
  4149  01DD65  00                 	db	0
  4150  01DD66  00                 	db	0
  4151  01DD67  00                 	db	0
  4152  01DD68  00                 	db	0
  4153  01DD69  00                 	db	0
  4154  01DD6A  00                 	db	0
  4155  01DD6B  00                 	db	0
  4156  01DD6C  00                 	db	0
  4157  01DD6D  00                 	db	0
  4158  01DD6E  00                 	db	0
  4159  01DD6F  00                 	db	0
  4160  01DD70  00                 	db	0
  4161  01DD71  00                 	db	0
  4162  01DD72  00                 	db	0
  4163  01DD73  00                 	db	0
  4164  01DD74  00                 	db	0
  4165  01DD75  00                 	db	0
  4166  01DD76  00                 	db	0
  4167  01DD77  00                 	db	0
  4168  01DD78  00                 	db	0
  4169  01DD79  00                 	db	0
  4170  01DD7A  00                 	db	0
  4171  01DD7B  00                 	db	0
  4172  01DD7C  00                 	db	0
  4173  01DD7D  00                 	db	0
  4174  01DD7E  00                 	db	0
  4175  01DD7F  00                 	db	0
  4176  01DD80  00                 	db	0
  4177  01DD81  00                 	db	0
  4178  01DD82  00                 	db	0
  4179  01DD83  00                 	db	0
  4180  01DD84  00                 	db	0
  4181  01DD85  00                 	db	0
  4182  01DD86  00                 	db	0
  4183  01DD87  00                 	db	0
  4184  01DD88  00                 	db	0
  4185  01DD89  00                 	db	0
  4186  01DD8A  00                 	db	0
  4187  01DD8B  00                 	db	0
  4188  01DD8C  00                 	db	0
  4189  01DD8D  00                 	db	0
  4190  01DD8E  00                 	db	0
  4191  01DD8F  00                 	db	0
  4192  01DD90  00                 	db	0
  4193  01DD91  00                 	db	0
  4194  01DD92  00                 	db	0
  4195  01DD93  00                 	db	0
  4196  01DD94  00                 	db	0
  4197  01DD95  00                 	db	0
  4198  01DD96  00                 	db	0
  4199  01DD97  00                 	db	0
  4200  01DD98  00                 	db	0
  4201  01DD99  00                 	db	0
  4202  01DD9A  00                 	db	0
  4203  01DD9B  00                 	db	0
  4204  01DD9C  00                 	db	0
  4205  01DD9D  00                 	db	0
  4206  01DD9E  00                 	db	0
  4207  01DD9F  00                 	db	0
  4208  01DDA0  00                 	db	0
  4209  01DDA1  00                 	db	0
  4210  01DDA2  00                 	db	0
  4211  01DDA3  00                 	db	0
  4212  01DDA4  00                 	db	0
  4213  01DDA5  00                 	db	0
  4214  01DDA6  00                 	db	0
  4215  01DDA7  00                 	db	0
  4216  01DDA8  00                 	db	0
  4217  01DDA9  00                 	db	0
  4218  01DDAA  00                 	db	0
  4219  01DDAB  00                 	db	0
  4220  01DDAC  00                 	db	0
  4221  01DDAD  00                 	db	0
  4222  01DDAE  00                 	db	0
  4223  01DDAF  00                 	db	0
  4224  01DDB0  00                 	db	0
  4225  01DDB1  00                 	db	0
  4226  01DDB2  00                 	db	0
  4227  01DDB3  00                 	db	0
  4228  01DDB4  00                 	db	0
  4229  01DDB5  00                 	db	0
  4230  01DDB6  00                 	db	0
  4231  01DDB7  00                 	db	0
  4232  01DDB8  00                 	db	0
  4233  01DDB9  00                 	db	0
  4234  01DDBA  00                 	db	0
  4235  01DDBB  00                 	db	0
  4236  01DDBC  00                 	db	0
  4237  01DDBD  00                 	db	0
  4238  01DDBE  00                 	db	0
  4239  01DDBF  00                 	db	0
  4240  01DDC0  00                 	db	0
  4241  01DDC1  00                 	db	0
  4242  01DDC2  00                 	db	0
  4243  01DDC3  00                 	db	0
  4244  01DDC4  00                 	db	0
  4245  01DDC5  00                 	db	0
  4246  01DDC6  00                 	db	0
  4247  01DDC7  00                 	db	0
  4248  01DDC8  00                 	db	0
  4249  01DDC9  00                 	db	0
  4250  01DDCA  00                 	db	0
  4251  01DDCB  00                 	db	0
  4252  01DDCC  00                 	db	0
  4253  01DDCD  00                 	db	0
  4254  01DDCE  00                 	db	0
  4255  01DDCF  00                 	db	0
  4256  01DDD0  00                 	db	0
  4257  01DDD1  00                 	db	0
  4258  01DDD2  00                 	db	0
  4259  01DDD3  00                 	db	0
  4260  01DDD4  00                 	db	0
  4261  01DDD5  00                 	db	0
  4262  01DDD6  00                 	db	0
  4263  01DDD7  00                 	db	0
  4264  01DDD8  00                 	db	0
  4265  01DDD9  00                 	db	0
  4266  01DDDA  00                 	db	0
  4267  01DDDB  00                 	db	0
  4268  01DDDC  00                 	db	0
  4269  01DDDD  00                 	db	0
  4270  01DDDE  00                 	db	0
  4271  01DDDF  00                 	db	0
  4272  01DDE0  00                 	db	0
  4273  01DDE1  00                 	db	0
  4274  01DDE2  00                 	db	0
  4275  01DDE3  00                 	db	0
  4276  01DDE4  00                 	db	0
  4277  01DDE5  00                 	db	0
  4278  01DDE6  00                 	db	0
  4279  01DDE7  00                 	db	0
  4280  01DDE8  00                 	db	0
  4281  01DDE9  00                 	db	0
  4282  01DDEA  00                 	db	0
  4283  01DDEB  00                 	db	0
  4284  01DDEC  00                 	db	0
  4285  01DDED  00                 	db	0
  4286  01DDEE  00                 	db	0
  4287  01DDEF  00                 	db	0
  4288  01DDF0  00                 	db	0
  4289  01DDF1  00                 	db	0
  4290  01DDF2  00                 	db	0
  4291  01DDF3  00                 	db	0
  4292  01DDF4  00                 	db	0
  4293  01DDF5  00                 	db	0
  4294  01DDF6  00                 	db	0
  4295  01DDF7  00                 	db	0
  4296  01DDF8  00                 	db	0
  4297  01DDF9  00                 	db	0
  4298  01DDFA  00                 	db	0
  4299  01DDFB  00                 	db	0
  4300  01DDFC  00                 	db	0
  4301  01DDFD  00                 	db	0
  4302  01DDFE  00                 	db	0
  4303  01DDFF  00                 	db	0
  4304  01DE00  00                 	db	0
  4305  01DE01  00                 	db	0
  4306  01DE02  00                 	db	0
  4307  01DE03  00                 	db	0
  4308  01DE04  00                 	db	0
  4309  01DE05  00                 	db	0
  4310  01DE06  00                 	db	0
  4311  01DE07  00                 	db	0
  4312  01DE08  00                 	db	0
  4313  01DE09  00                 	db	0
  4314  01DE0A  00                 	db	0
  4315  01DE0B  00                 	db	0
  4316  01DE0C  00                 	db	0
  4317  01DE0D  00                 	db	0
  4318  01DE0E  00                 	db	0
  4319  01DE0F  00                 	db	0
  4320  01DE10  00                 	db	0
  4321  01DE11  00                 	db	0
  4322  01DE12  00                 	db	0
  4323  01DE13  00                 	db	0
  4324  01DE14  00                 	db	0
  4325  01DE15  00                 	db	0
  4326  01DE16  00                 	db	0
  4327  01DE17  00                 	db	0
  4328  01DE18  00                 	db	0
  4329  01DE19  00                 	db	0
  4330  01DE1A  00                 	db	0
  4331  01DE1B  00                 	db	0
  4332  01DE1C  00                 	db	0
  4333  01DE1D  00                 	db	0
  4334  01DE1E  00                 	db	0
  4335  01DE1F  00                 	db	0
  4336  01DE20  00                 	db	0
  4337  01DE21  00                 	db	0
  4338  01DE22  00                 	db	0
  4339  01DE23  00                 	db	0
  4340  01DE24  00                 	db	0
  4341  01DE25  00                 	db	0
  4342  01DE26  00                 	db	0
  4343  01DE27  00                 	db	0
  4344  01DE28  00                 	db	0
  4345  01DE29  00                 	db	0
  4346  01DE2A  00                 	db	0
  4347  01DE2B  00                 	db	0
  4348  01DE2C  00                 	db	0
  4349  01DE2D  00                 	db	0
  4350  01DE2E  00                 	db	0
  4351  01DE2F  00                 	db	0
  4352  01DE30  00                 	db	0
  4353  01DE31  00                 	db	0
  4354  01DE32  00                 	db	0
  4355  01DE33  00                 	db	0
  4356  01DE34  00                 	db	0
  4357  01DE35  00                 	db	0
  4358  01DE36  00                 	db	0
  4359  01DE37  00                 	db	0
  4360  01DE38  00                 	db	0
  4361  01DE39  00                 	db	0
  4362  01DE3A  00                 	db	0
  4363  01DE3B  00                 	db	0
  4364  01DE3C  00                 	db	0
  4365  01DE3D  00                 	db	0
  4366  01DE3E  00                 	db	0
  4367  01DE3F  00                 	db	0
  4368  01DE40  00                 	db	0
  4369  01DE41  00                 	db	0
  4370  01DE42  00                 	db	0
  4371  01DE43  00                 	db	0
  4372  01DE44  00                 	db	0
  4373  01DE45  00                 	db	0
  4374  01DE46  00                 	db	0
  4375  01DE47  00                 	db	0
  4376  01DE48  00                 	db	0
  4377  01DE49  00                 	db	0
  4378  01DE4A  00                 	db	0
  4379  01DE4B  00                 	db	0
  4380  01DE4C  00                 	db	0
  4381  01DE4D  00                 	db	0
  4382  01DE4E  00                 	db	0
  4383  01DE4F  00                 	db	0
  4384  01DE50  00                 	db	0
  4385  01DE51  00                 	db	0
  4386  01DE52  00                 	db	0
  4387  01DE53  00                 	db	0
  4388  01DE54  00                 	db	0
  4389  01DE55  00                 	db	0
  4390  01DE56  00                 	db	0
  4391  01DE57  00                 	db	0
  4392  01DE58  00                 	db	0
  4393  01DE59  00                 	db	0
  4394  01DE5A  00                 	db	0
  4395  01DE5B  00                 	db	0
  4396  01DE5C  00                 	db	0
  4397  01DE5D  00                 	db	0
  4398  01DE5E  00                 	db	0
  4399  01DE5F  00                 	db	0
  4400  01DE60  00                 	db	0
  4401  01DE61  00                 	db	0
  4402  01DE62  00                 	db	0
  4403  01DE63  00                 	db	0
  4404  01DE64  00                 	db	0
  4405  01DE65  00                 	db	0
  4406  01DE66  00                 	db	0
  4407  01DE67  00                 	db	0
  4408  01DE68  00                 	db	0
  4409  01DE69  00                 	db	0
  4410  01DE6A  00                 	db	0
  4411  01DE6B  00                 	db	0
  4412  01DE6C  00                 	db	0
  4413  01DE6D  00                 	db	0
  4414  01DE6E  00                 	db	0
  4415  01DE6F  00                 	db	0
  4416  01DE70  00                 	db	0
  4417  01DE71  00                 	db	0
  4418  01DE72  00                 	db	0
  4419  01DE73  00                 	db	0
  4420  01DE74  00                 	db	0
  4421  01DE75  00                 	db	0
  4422  01DE76  00                 	db	0
  4423  01DE77  00                 	db	0
  4424  01DE78  00                 	db	0
  4425  01DE79  00                 	db	0
  4426  01DE7A  00                 	db	0
  4427  01DE7B  00                 	db	0
  4428  01DE7C  00                 	db	0
  4429  01DE7D  00                 	db	0
  4430  01DE7E  00                 	db	0
  4431  01DE7F  00                 	db	0
  4432  01DE80  00                 	db	0
  4433  01DE81  00                 	db	0
  4434  01DE82  00                 	db	0
  4435  01DE83  00                 	db	0
  4436  01DE84  00                 	db	0
  4437  01DE85  00                 	db	0
  4438  01DE86  00                 	db	0
  4439  01DE87  00                 	db	0
  4440  01DE88  00                 	db	0
  4441  01DE89  00                 	db	0
  4442  01DE8A  00                 	db	0
  4443  01DE8B  00                 	db	0
  4444  01DE8C  00                 	db	0
  4445  01DE8D  00                 	db	0
  4446  01DE8E  00                 	db	0
  4447  01DE8F  00                 	db	0
  4448  01DE90  00                 	db	0
  4449  01DE91  00                 	db	0
  4450  01DE92  00                 	db	0
  4451  01DE93  00                 	db	0
  4452  01DE94  00                 	db	0
  4453  01DE95  00                 	db	0
  4454  01DE96  00                 	db	0
  4455  01DE97  00                 	db	0
  4456  01DE98  00                 	db	0
  4457  01DE99  00                 	db	0
  4458  01DE9A  00                 	db	0
  4459  01DE9B  00                 	db	0
  4460  01DE9C  00                 	db	0
  4461  01DE9D  00                 	db	0
  4462  01DE9E  00                 	db	0
  4463  01DE9F  00                 	db	0
  4464  01DEA0  00                 	db	0
  4465  01DEA1  00                 	db	0
  4466  01DEA2  00                 	db	0
  4467  01DEA3  00                 	db	0
  4468  01DEA4  00                 	db	0
  4469  01DEA5  00                 	db	0
  4470  01DEA6  00                 	db	0
  4471  01DEA7  00                 	db	0
  4472  01DEA8  00                 	db	0
  4473  01DEA9  00                 	db	0
  4474  01DEAA  00                 	db	0
  4475  01DEAB  00                 	db	0
  4476  01DEAC  00                 	db	0
  4477  01DEAD  00                 	db	0
  4478  01DEAE  00                 	db	0
  4479  01DEAF  00                 	db	0
  4480  01DEB0  00                 	db	0
  4481  01DEB1  00                 	db	0
  4482  01DEB2  00                 	db	0
  4483  01DEB3  00                 	db	0
  4484  01DEB4  00                 	db	0
  4485  01DEB5  00                 	db	0
  4486  01DEB6  00                 	db	0
  4487  01DEB7  00                 	db	0
  4488  01DEB8  00                 	db	0
  4489  01DEB9  00                 	db	0
  4490  01DEBA  00                 	db	0
  4491  01DEBB  00                 	db	0
  4492  01DEBC  00                 	db	0
  4493  01DEBD  00                 	db	0
  4494  01DEBE  00                 	db	0
  4495  01DEBF  00                 	db	0
  4496  01DEC0  00                 	db	0
  4497  01DEC1  00                 	db	0
  4498  01DEC2  00                 	db	0
  4499  01DEC3  00                 	db	0
  4500  01DEC4  00                 	db	0
  4501  01DEC5  00                 	db	0
  4502  01DEC6  00                 	db	0
  4503  01DEC7  00                 	db	0
  4504  01DEC8  00                 	db	0
  4505  01DEC9  00                 	db	0
  4506  01DECA  00                 	db	0
  4507  01DECB  00                 	db	0
  4508  01DECC  00                 	db	0
  4509  01DECD  00                 	db	0
  4510  01DECE  00                 	db	0
  4511  01DECF  00                 	db	0
  4512  01DED0  00                 	db	0
  4513  01DED1  00                 	db	0
  4514  01DED2  00                 	db	0
  4515  01DED3  00                 	db	0
  4516  01DED4  00                 	db	0
  4517  01DED5  00                 	db	0
  4518  01DED6  00                 	db	0
  4519  01DED7  00                 	db	0
  4520  01DED8  00                 	db	0
  4521  01DED9  00                 	db	0
  4522  01DEDA  00                 	db	0
  4523  01DEDB  00                 	db	0
  4524  01DEDC  00                 	db	0
  4525  01DEDD  00                 	db	0
  4526  01DEDE  00                 	db	0
  4527  01DEDF  00                 	db	0
  4528  01DEE0  00                 	db	0
  4529  01DEE1  00                 	db	0
  4530  01DEE2  00                 	db	0
  4531  01DEE3  00                 	db	0
  4532  01DEE4  00                 	db	0
  4533  01DEE5  00                 	db	0
  4534  01DEE6  00                 	db	0
  4535  01DEE7  00                 	db	0
  4536  01DEE8  00                 	db	0
  4537  01DEE9  00                 	db	0
  4538  01DEEA  00                 	db	0
  4539  01DEEB  00                 	db	0
  4540  01DEEC  00                 	db	0
  4541  01DEED  00                 	db	0
  4542  01DEEE  00                 	db	0
  4543  01DEEF  00                 	db	0
  4544  01DEF0  00                 	db	0
  4545  01DEF1  00                 	db	0
  4546  01DEF2  00                 	db	0
  4547  01DEF3  00                 	db	0
  4548  01DEF4  00                 	db	0
  4549  01DEF5  00                 	db	0
  4550  01DEF6  00                 	db	0
  4551  01DEF7  00                 	db	0
  4552  01DEF8  00                 	db	0
  4553  01DEF9  00                 	db	0
  4554  01DEFA  00                 	db	0
  4555  01DEFB  00                 	db	0
  4556  01DEFC  00                 	db	0
  4557  01DEFD  00                 	db	0
  4558  01DEFE  00                 	db	0
  4559  01DEFF  00                 	db	0
  4560  01DF00  00                 	db	0
  4561  01DF01  00                 	db	0
  4562  01DF02  00                 	db	0
  4563  01DF03  00                 	db	0
  4564  01DF04  00                 	db	0
  4565  01DF05  00                 	db	0
  4566  01DF06  00                 	db	0
  4567  01DF07  00                 	db	0
  4568  01DF08  00                 	db	0
  4569  01DF09  00                 	db	0
  4570  01DF0A  00                 	db	0
  4571  01DF0B  00                 	db	0
  4572  01DF0C  00                 	db	0
  4573  01DF0D  00                 	db	0
  4574  01DF0E  00                 	db	0
  4575  01DF0F  00                 	db	0
  4576  01DF10  00                 	db	0
  4577  01DF11  00                 	db	0
  4578  01DF12  00                 	db	0
  4579  01DF13  00                 	db	0
  4580  01DF14  00                 	db	0
  4581  01DF15  00                 	db	0
  4582  01DF16  00                 	db	0
  4583  01DF17  00                 	db	0
  4584  01DF18  00                 	db	0
  4585  01DF19  00                 	db	0
  4586  01DF1A  00                 	db	0
  4587  01DF1B  00                 	db	0
  4588  01DF1C  00                 	db	0
  4589  01DF1D  00                 	db	0
  4590  01DF1E  00                 	db	0
  4591  01DF1F  00                 	db	0
  4592  01DF20  00                 	db	0
  4593  01DF21  00                 	db	0
  4594  01DF22  00                 	db	0
  4595  01DF23  00                 	db	0
  4596  01DF24  00                 	db	0
  4597  01DF25  00                 	db	0
  4598  01DF26  00                 	db	0
  4599  01DF27  00                 	db	0
  4600  01DF28  00                 	db	0
  4601  01DF29  00                 	db	0
  4602  01DF2A  00                 	db	0
  4603  01DF2B  00                 	db	0
  4604  01DF2C  00                 	db	0
  4605  01DF2D  00                 	db	0
  4606  01DF2E  00                 	db	0
  4607  01DF2F  00                 	db	0
  4608  01DF30  00                 	db	0
  4609  01DF31  00                 	db	0
  4610  01DF32  00                 	db	0
  4611  01DF33  00                 	db	0
  4612  01DF34  00                 	db	0
  4613  01DF35  00                 	db	0
  4614  01DF36  00                 	db	0
  4615  01DF37  00                 	db	0
  4616  01DF38  00                 	db	0
  4617  01DF39  00                 	db	0
  4618  01DF3A  00                 	db	0
  4619  01DF3B  00                 	db	0
  4620  01DF3C  00                 	db	0
  4621  01DF3D  00                 	db	0
  4622  01DF3E  00                 	db	0
  4623  01DF3F  00                 	db	0
  4624  01DF40  00                 	db	0
  4625  01DF41  00                 	db	0
  4626  01DF42  00                 	db	0
  4627  01DF43  00                 	db	0
  4628  01DF44  00                 	db	0
  4629  01DF45  00                 	db	0
  4630  01DF46  00                 	db	0
  4631  01DF47  00                 	db	0
  4632  01DF48  00                 	db	0
  4633  01DF49  00                 	db	0
  4634  01DF4A  00                 	db	0
  4635  01DF4B  00                 	db	0
  4636  01DF4C  00                 	db	0
  4637  01DF4D  00                 	db	0
  4638  01DF4E  00                 	db	0
  4639  01DF4F  00                 	db	0
  4640  01DF50  00                 	db	0
  4641  01DF51  00                 	db	0
  4642  01DF52  00                 	db	0
  4643  01DF53  00                 	db	0
  4644  01DF54  00                 	db	0
  4645  01DF55  00                 	db	0
  4646  01DF56  00                 	db	0
  4647  01DF57  00                 	db	0
  4648  01DF58  00                 	db	0
  4649  01DF59  00                 	db	0
  4650  01DF5A  00                 	db	0
  4651  01DF5B  00                 	db	0
  4652  01DF5C  00                 	db	0
  4653  01DF5D  00                 	db	0
  4654  01DF5E  00                 	db	0
  4655  01DF5F  00                 	db	0
  4656  01DF60  00                 	db	0
  4657  01DF61  00                 	db	0
  4658  01DF62  00                 	db	0
  4659  01DF63  00                 	db	0
  4660  01DF64  00                 	db	0
  4661  01DF65  00                 	db	0
  4662  01DF66  00                 	db	0
  4663  01DF67  00                 	db	0
  4664  01DF68  00                 	db	0
  4665  01DF69  00                 	db	0
  4666  01DF6A  00                 	db	0
  4667  01DF6B  00                 	db	0
  4668  01DF6C  00                 	db	0
  4669  01DF6D  00                 	db	0
  4670  01DF6E  00                 	db	0
  4671  01DF6F  00                 	db	0
  4672  01DF70  00                 	db	0
  4673  01DF71  00                 	db	0
  4674  01DF72  00                 	db	0
  4675  01DF73  00                 	db	0
  4676  01DF74  00                 	db	0
  4677  01DF75  00                 	db	0
  4678  01DF76  00                 	db	0
  4679  01DF77  00                 	db	0
  4680  01DF78  00                 	db	0
  4681  01DF79  00                 	db	0
  4682  01DF7A  00                 	db	0
  4683  01DF7B  00                 	db	0
  4684  01DF7C  00                 	db	0
  4685  01DF7D  00                 	db	0
  4686  01DF7E  00                 	db	0
  4687  01DF7F  00                 	db	0
  4688  01DF80  00                 	db	0
  4689  01DF81  00                 	db	0
  4690  01DF82  00                 	db	0
  4691  01DF83  00                 	db	0
  4692  01DF84  00                 	db	0
  4693  01DF85  00                 	db	0
  4694  01DF86  00                 	db	0
  4695  01DF87  00                 	db	0
  4696  01DF88  00                 	db	0
  4697  01DF89  00                 	db	0
  4698  01DF8A  00                 	db	0
  4699  01DF8B  00                 	db	0
  4700  01DF8C  00                 	db	0
  4701  01DF8D  00                 	db	0
  4702  01DF8E  00                 	db	0
  4703  01DF8F  00                 	db	0
  4704  01DF90  00                 	db	0
  4705  01DF91  00                 	db	0
  4706  01DF92  00                 	db	0
  4707  01DF93  00                 	db	0
  4708  01DF94  00                 	db	0
  4709  01DF95  00                 	db	0
  4710  01DF96  00                 	db	0
  4711  01DF97  00                 	db	0
  4712  01DF98  00                 	db	0
  4713  01DF99  00                 	db	0
  4714  01DF9A  00                 	db	0
  4715  01DF9B  00                 	db	0
  4716  01DF9C  00                 	db	0
  4717  01DF9D  00                 	db	0
  4718  01DF9E  00                 	db	0
  4719  01DF9F  00                 	db	0
  4720  01DFA0  00                 	db	0
  4721  01DFA1  00                 	db	0
  4722  01DFA2  00                 	db	0
  4723  01DFA3  00                 	db	0
  4724  01DFA4  00                 	db	0
  4725  01DFA5  00                 	db	0
  4726  01DFA6  00                 	db	0
  4727  01DFA7  00                 	db	0
  4728  01DFA8  00                 	db	0
  4729  01DFA9  00                 	db	0
  4730  01DFAA  00                 	db	0
  4731  01DFAB  00                 	db	0
  4732  01DFAC  00                 	db	0
  4733  01DFAD  00                 	db	0
  4734  01DFAE  00                 	db	0
  4735  01DFAF  00                 	db	0
  4736  01DFB0  00                 	db	0
  4737  01DFB1  00                 	db	0
  4738  01DFB2  00                 	db	0
  4739  01DFB3  00                 	db	0
  4740  01DFB4  00                 	db	0
  4741  01DFB5  00                 	db	0
  4742  01DFB6  00                 	db	0
  4743  01DFB7  00                 	db	0
  4744  01DFB8  00                 	db	0
  4745  01DFB9  00                 	db	0
  4746  01DFBA  00                 	db	0
  4747  01DFBB  00                 	db	0
  4748  01DFBC  00                 	db	0
  4749  01DFBD  00                 	db	0
  4750  01DFBE  00                 	db	0
  4751  01DFBF  00                 	db	0
  4752  01DFC0  00                 	db	0
  4753  01DFC1  00                 	db	0
  4754  01DFC2  00                 	db	0
  4755  01DFC3  00                 	db	0
  4756  01DFC4  00                 	db	0
  4757  01DFC5  00                 	db	0
  4758  01DFC6  00                 	db	0
  4759  01DFC7  00                 	db	0
  4760  01DFC8  00                 	db	0
  4761  01DFC9  00                 	db	0
  4762  01DFCA  00                 	db	0
  4763  01DFCB  00                 	db	0
  4764  01DFCC  00                 	db	0
  4765  01DFCD  00                 	db	0
  4766  01DFCE  00                 	db	0
  4767  01DFCF  00                 	db	0
  4768  01DFD0  00                 	db	0
  4769  01DFD1  00                 	db	0
  4770  01DFD2  00                 	db	0
  4771  01DFD3  00                 	db	0
  4772  01DFD4  00                 	db	0
  4773  01DFD5  00                 	db	0
  4774  01DFD6  00                 	db	0
  4775  01DFD7  00                 	db	0
  4776  01DFD8  00                 	db	0
  4777  01DFD9  00                 	db	0
  4778  01DFDA  00                 	db	0
  4779  01DFDB  00                 	db	0
  4780  01DFDC  00                 	db	0
  4781  01DFDD  00                 	db	0
  4782  01DFDE  00                 	db	0
  4783  01DFDF  00                 	db	0
  4784  01DFE0  00                 	db	0
  4785  01DFE1  00                 	db	0
  4786  01DFE2  00                 	db	0
  4787  01DFE3  00                 	db	0
  4788  01DFE4  00                 	db	0
  4789  01DFE5  00                 	db	0
  4790  01DFE6  00                 	db	0
  4791  01DFE7  00                 	db	0
  4792  01DFE8  00                 	db	0
  4793  01DFE9  00                 	db	0
  4794  01DFEA  00                 	db	0
  4795  01DFEB  00                 	db	0
  4796  01DFEC  00                 	db	0
  4797  01DFED  00                 	db	0
  4798  01DFEE  00                 	db	0
  4799  01DFEF  00                 	db	0
  4800  01DFF0  00                 	db	0
  4801  01DFF1  00                 	db	0
  4802  01DFF2  00                 	db	0
  4803  01DFF3  00                 	db	0
  4804  01DFF4  00                 	db	0
  4805  01DFF5  00                 	db	0
  4806  01DFF6  00                 	db	0
  4807  01DFF7  00                 	db	0
  4808  01DFF8  00                 	db	0
  4809  01DFF9  00                 	db	0
  4810  01DFFA  00                 	db	0
  4811  01DFFB  00                 	db	0
  4812  01DFFC  00                 	db	0
  4813  01DFFD  00                 	db	0
  4814  01DFFE  00                 	db	0
  4815  01DFFF  00                 	db	0
  4816  01E000  00                 	db	0
  4817  01E001  00                 	db	0
  4818  01E002  00                 	db	0
  4819  01E003  00                 	db	0
  4820  01E004  00                 	db	0
  4821  01E005  00                 	db	0
  4822  01E006  00                 	db	0
  4823  01E007  00                 	db	0
  4824  01E008  00                 	db	0
  4825  01E009  00                 	db	0
  4826  01E00A  00                 	db	0
  4827  01E00B  00                 	db	0
  4828  01E00C  00                 	db	0
  4829  01E00D  00                 	db	0
  4830  01E00E  00                 	db	0
  4831  01E00F  00                 	db	0
  4832  01E010  00                 	db	0
  4833  01E011  00                 	db	0
  4834  01E012  00                 	db	0
  4835  01E013  00                 	db	0
  4836  01E014  00                 	db	0
  4837  01E015  00                 	db	0
  4838  01E016  00                 	db	0
  4839  01E017  00                 	db	0
  4840  01E018  00                 	db	0
  4841  01E019  00                 	db	0
  4842  01E01A  00                 	db	0
  4843  01E01B  00                 	db	0
  4844  01E01C  00                 	db	0
  4845  01E01D  00                 	db	0
  4846  01E01E  00                 	db	0
  4847  01E01F  00                 	db	0
  4848  01E020  00                 	db	0
  4849  01E021  00                 	db	0
  4850  01E022  00                 	db	0
  4851  01E023  00                 	db	0
  4852  01E024  00                 	db	0
  4853  01E025  00                 	db	0
  4854  01E026  00                 	db	0
  4855  01E027  00                 	db	0
  4856  01E028  00                 	db	0
  4857  01E029  00                 	db	0
  4858  01E02A  00                 	db	0
  4859  01E02B  00                 	db	0
  4860  01E02C  00                 	db	0
  4861  01E02D  00                 	db	0
  4862  01E02E  00                 	db	0
  4863  01E02F  00                 	db	0
  4864  01E030  00                 	db	0
  4865  01E031  00                 	db	0
  4866  01E032  00                 	db	0
  4867  01E033  00                 	db	0
  4868  01E034  00                 	db	0
  4869  01E035  00                 	db	0
  4870  01E036  00                 	db	0
  4871  01E037  00                 	db	0
  4872  01E038  00                 	db	0
  4873  01E039  00                 	db	0
  4874  01E03A  00                 	db	0
  4875  01E03B  00                 	db	0
  4876  01E03C  00                 	db	0
  4877  01E03D  00                 	db	0
  4878  01E03E  00                 	db	0
  4879  01E03F  00                 	db	0
  4880  01E040  00                 	db	0
  4881  01E041  00                 	db	0
  4882  01E042  00                 	db	0
  4883  01E043  00                 	db	0
  4884  01E044  00                 	db	0
  4885  01E045  00                 	db	0
  4886  01E046  00                 	db	0
  4887  01E047  00                 	db	0
  4888  01E048  00                 	db	0
  4889  01E049  00                 	db	0
  4890  01E04A  00                 	db	0
  4891  01E04B  00                 	db	0
  4892  01E04C  00                 	db	0
  4893  01E04D  00                 	db	0
  4894  01E04E  00                 	db	0
  4895  01E04F  00                 	db	0
  4896  01E050  00                 	db	0
  4897  01E051  00                 	db	0
  4898  01E052  00                 	db	0
  4899  01E053  00                 	db	0
  4900  01E054  00                 	db	0
  4901  01E055  00                 	db	0
  4902  01E056  00                 	db	0
  4903  01E057  00                 	db	0
  4904  01E058  00                 	db	0
  4905  01E059  00                 	db	0
  4906  01E05A  00                 	db	0
  4907  01E05B  00                 	db	0
  4908  01E05C  00                 	db	0
  4909  01E05D  00                 	db	0
  4910  01E05E  00                 	db	0
  4911  01E05F  00                 	db	0
  4912  01E060  00                 	db	0
  4913  01E061  00                 	db	0
  4914  01E062  00                 	db	0
  4915  01E063  00                 	db	0
  4916  01E064  00                 	db	0
  4917  01E065  00                 	db	0
  4918  01E066  00                 	db	0
  4919  01E067  00                 	db	0
  4920  01E068  00                 	db	0
  4921  01E069  00                 	db	0
  4922  01E06A  00                 	db	0
  4923  01E06B  00                 	db	0
  4924  01E06C  00                 	db	0
  4925  01E06D  00                 	db	0
  4926  01E06E  00                 	db	0
  4927  01E06F  00                 	db	0
  4928  01E070  00                 	db	0
  4929  01E071  00                 	db	0
  4930  01E072  00                 	db	0
  4931  01E073  00                 	db	0
  4932  01E074  00                 	db	0
  4933  01E075  00                 	db	0
  4934  01E076  00                 	db	0
  4935  01E077  00                 	db	0
  4936  01E078  00                 	db	0
  4937  01E079  00                 	db	0
  4938  01E07A  00                 	db	0
  4939  01E07B  00                 	db	0
  4940  01E07C  00                 	db	0
  4941  01E07D  00                 	db	0
  4942  01E07E  00                 	db	0
  4943  01E07F  00                 	db	0
  4944  01E080  00                 	db	0
  4945  01E081  00                 	db	0
  4946  01E082  00                 	db	0
  4947  01E083  00                 	db	0
  4948  01E084  00                 	db	0
  4949  01E085  00                 	db	0
  4950  01E086  00                 	db	0
  4951  01E087  00                 	db	0
  4952  01E088  00                 	db	0
  4953  01E089  00                 	db	0
  4954  01E08A  00                 	db	0
  4955  01E08B  00                 	db	0
  4956  01E08C  00                 	db	0
  4957  01E08D  00                 	db	0
  4958  01E08E  00                 	db	0
  4959  01E08F  00                 	db	0
  4960  01E090  00                 	db	0
  4961  01E091  00                 	db	0
  4962  01E092  00                 	db	0
  4963  01E093  00                 	db	0
  4964  01E094  00                 	db	0
  4965  01E095  00                 	db	0
  4966  01E096  00                 	db	0
  4967  01E097  00                 	db	0
  4968  01E098  00                 	db	0
  4969  01E099  00                 	db	0
  4970  01E09A  00                 	db	0
  4971  01E09B  00                 	db	0
  4972  01E09C  00                 	db	0
  4973  01E09D  00                 	db	0
  4974  01E09E  00                 	db	0
  4975  01E09F  00                 	db	0
  4976  01E0A0  00                 	db	0
  4977  01E0A1  00                 	db	0
  4978  01E0A2  00                 	db	0
  4979  01E0A3  00                 	db	0
  4980  01E0A4  00                 	db	0
  4981  01E0A5  00                 	db	0
  4982  01E0A6  00                 	db	0
  4983  01E0A7  00                 	db	0
  4984  01E0A8  00                 	db	0
  4985  01E0A9  00                 	db	0
  4986  01E0AA  00                 	db	0
  4987  01E0AB  00                 	db	0
  4988  01E0AC  00                 	db	0
  4989  01E0AD  00                 	db	0
  4990  01E0AE  00                 	db	0
  4991  01E0AF  00                 	db	0
  4992  01E0B0  00                 	db	0
  4993  01E0B1  00                 	db	0
  4994  01E0B2  00                 	db	0
  4995  01E0B3  00                 	db	0
  4996  01E0B4  00                 	db	0
  4997  01E0B5  00                 	db	0
  4998  01E0B6  00                 	db	0
  4999  01E0B7  00                 	db	0
  5000  01E0B8  00                 	db	0
  5001  01E0B9  00                 	db	0
  5002  01E0BA  00                 	db	0
  5003  01E0BB  00                 	db	0
  5004  01E0BC  00                 	db	0
  5005  01E0BD  00                 	db	0
  5006  01E0BE  00                 	db	0
  5007  01E0BF  00                 	db	0
  5008  01E0C0  00                 	db	0
  5009  01E0C1  00                 	db	0
  5010  01E0C2  00                 	db	0
  5011  01E0C3  00                 	db	0
  5012  01E0C4  00                 	db	0
  5013  01E0C5  00                 	db	0
  5014  01E0C6  00                 	db	0
  5015  01E0C7  00                 	db	0
  5016  01E0C8  00                 	db	0
  5017  01E0C9  00                 	db	0
  5018  01E0CA  00                 	db	0
  5019  01E0CB  00                 	db	0
  5020  01E0CC  00                 	db	0
  5021  01E0CD  00                 	db	0
  5022  01E0CE  00                 	db	0
  5023  01E0CF  00                 	db	0
  5024  01E0D0  00                 	db	0
  5025  01E0D1  00                 	db	0
  5026  01E0D2  00                 	db	0
  5027  01E0D3  00                 	db	0
  5028  01E0D4  00                 	db	0
  5029  01E0D5  00                 	db	0
  5030  01E0D6  00                 	db	0
  5031  01E0D7  00                 	db	0
  5032  01E0D8  00                 	db	0
  5033  01E0D9  00                 	db	0
  5034  01E0DA  00                 	db	0
  5035  01E0DB  00                 	db	0
  5036  01E0DC  00                 	db	0
  5037  01E0DD  00                 	db	0
  5038  01E0DE  00                 	db	0
  5039  01E0DF  00                 	db	0
  5040  01E0E0  00                 	db	0
  5041  01E0E1  00                 	db	0
  5042  01E0E2  00                 	db	0
  5043  01E0E3  00                 	db	0
  5044  01E0E4  00                 	db	0
  5045  01E0E5  00                 	db	0
  5046  01E0E6  00                 	db	0
  5047  01E0E7  00                 	db	0
  5048  01E0E8  00                 	db	0
  5049  01E0E9  00                 	db	0
  5050  01E0EA  00                 	db	0
  5051  01E0EB  00                 	db	0
  5052  01E0EC  00                 	db	0
  5053  01E0ED  00                 	db	0
  5054  01E0EE  00                 	db	0
  5055  01E0EF  00                 	db	0
  5056  01E0F0  00                 	db	0
  5057  01E0F1  00                 	db	0
  5058  01E0F2  00                 	db	0
  5059  01E0F3  00                 	db	0
  5060  01E0F4  00                 	db	0
  5061  01E0F5  00                 	db	0
  5062  01E0F6  00                 	db	0
  5063  01E0F7  00                 	db	0
  5064  01E0F8  00                 	db	0
  5065  01E0F9  00                 	db	0
  5066  01E0FA  00                 	db	0
  5067  01E0FB  00                 	db	0
  5068  01E0FC  00                 	db	0
  5069  01E0FD  00                 	db	0
  5070  01E0FE  00                 	db	0
  5071  01E0FF  00                 	db	0
  5072  01E100  00                 	db	0
  5073  01E101  00                 	db	0
  5074  01E102  00                 	db	0
  5075  01E103  00                 	db	0
  5076  01E104  00                 	db	0
  5077  01E105  00                 	db	0
  5078  01E106  00                 	db	0
  5079  01E107  00                 	db	0
  5080  01E108  00                 	db	0
  5081  01E109  00                 	db	0
  5082  01E10A  00                 	db	0
  5083  01E10B  00                 	db	0
  5084  01E10C  00                 	db	0
  5085  01E10D  00                 	db	0
  5086  01E10E  00                 	db	0
  5087  01E10F  00                 	db	0
  5088  01E110  00                 	db	0
  5089  01E111  00                 	db	0
  5090  01E112  00                 	db	0
  5091  01E113  00                 	db	0
  5092  01E114  00                 	db	0
  5093  01E115  00                 	db	0
  5094  01E116  00                 	db	0
  5095  01E117  00                 	db	0
  5096  01E118  00                 	db	0
  5097  01E119  00                 	db	0
  5098  01E11A  00                 	db	0
  5099  01E11B  00                 	db	0
  5100  01E11C  00                 	db	0
  5101  01E11D  00                 	db	0
  5102  01E11E  00                 	db	0
  5103  01E11F  00                 	db	0
  5104  01E120  00                 	db	0
  5105  01E121  00                 	db	0
  5106  01E122  00                 	db	0
  5107  01E123  00                 	db	0
  5108  01E124  00                 	db	0
  5109  01E125  00                 	db	0
  5110  01E126  00                 	db	0
  5111  01E127  00                 	db	0
  5112  01E128  00                 	db	0
  5113  01E129  00                 	db	0
  5114  01E12A  00                 	db	0
  5115  01E12B  00                 	db	0
  5116  01E12C  00                 	db	0
  5117  01E12D  00                 	db	0
  5118  01E12E  00                 	db	0
  5119  01E12F  00                 	db	0
  5120  01E130  00                 	db	0
  5121  01E131  00                 	db	0
  5122  01E132  00                 	db	0
  5123  01E133  00                 	db	0
  5124  01E134  00                 	db	0
  5125  01E135  00                 	db	0
  5126  01E136  00                 	db	0
  5127  01E137  00                 	db	0
  5128  01E138  00                 	db	0
  5129  01E139  00                 	db	0
  5130  01E13A  00                 	db	0
  5131  01E13B  00                 	db	0
  5132  01E13C  00                 	db	0
  5133  01E13D  00                 	db	0
  5134  01E13E  00                 	db	0
  5135  01E13F  00                 	db	0
  5136  01E140  00                 	db	0
  5137  01E141  00                 	db	0
  5138  01E142  00                 	db	0
  5139  01E143  00                 	db	0
  5140  01E144  00                 	db	0
  5141  01E145  00                 	db	0
  5142  01E146  00                 	db	0
  5143  01E147  00                 	db	0
  5144  01E148  00                 	db	0
  5145  01E149  00                 	db	0
  5146  01E14A  00                 	db	0
  5147  01E14B  00                 	db	0
  5148  01E14C  00                 	db	0
  5149  01E14D  00                 	db	0
  5150  01E14E  00                 	db	0
  5151  01E14F  00                 	db	0
  5152  01E150  00                 	db	0
  5153  01E151  00                 	db	0
  5154  01E152  00                 	db	0
  5155  01E153  00                 	db	0
  5156  01E154  00                 	db	0
  5157  01E155  00                 	db	0
  5158  01E156  00                 	db	0
  5159  01E157  00                 	db	0
  5160  01E158  00                 	db	0
  5161  01E159  00                 	db	0
  5162  01E15A  00                 	db	0
  5163  01E15B  00                 	db	0
  5164  01E15C  00                 	db	0
  5165  01E15D  00                 	db	0
  5166  01E15E  00                 	db	0
  5167  01E15F  00                 	db	0
  5168  01E160  00                 	db	0
  5169  01E161  00                 	db	0
  5170  01E162  00                 	db	0
  5171  01E163  00                 	db	0
  5172  01E164  00                 	db	0
  5173  01E165  00                 	db	0
  5174  01E166  00                 	db	0
  5175  01E167  00                 	db	0
  5176  01E168  00                 	db	0
  5177  01E169  00                 	db	0
  5178  01E16A  00                 	db	0
  5179  01E16B  00                 	db	0
  5180  01E16C  00                 	db	0
  5181  01E16D  00                 	db	0
  5182  01E16E  00                 	db	0
  5183  01E16F  00                 	db	0
  5184  01E170  00                 	db	0
  5185  01E171  00                 	db	0
  5186  01E172  00                 	db	0
  5187  01E173  00                 	db	0
  5188  01E174  00                 	db	0
  5189  01E175  00                 	db	0
  5190  01E176  00                 	db	0
  5191  01E177  00                 	db	0
  5192  01E178  00                 	db	0
  5193  01E179  00                 	db	0
  5194  01E17A  00                 	db	0
  5195  01E17B  00                 	db	0
  5196  01E17C  00                 	db	0
  5197  01E17D  00                 	db	0
  5198  01E17E  00                 	db	0
  5199  01E17F  00                 	db	0
  5200  01E180  00                 	db	0
  5201  01E181  00                 	db	0
  5202  01E182  00                 	db	0
  5203  01E183  00                 	db	0
  5204  01E184  00                 	db	0
  5205  01E185  00                 	db	0
  5206  01E186  00                 	db	0
  5207  01E187  00                 	db	0
  5208  01E188  00                 	db	0
  5209  01E189  00                 	db	0
  5210  01E18A  00                 	db	0
  5211  01E18B  00                 	db	0
  5212  01E18C  00                 	db	0
  5213  01E18D  00                 	db	0
  5214  01E18E  00                 	db	0
  5215  01E18F  00                 	db	0
  5216  01E190  00                 	db	0
  5217  01E191  00                 	db	0
  5218  01E192  00                 	db	0
  5219  01E193  00                 	db	0
  5220  01E194  00                 	db	0
  5221  01E195  00                 	db	0
  5222  01E196  00                 	db	0
  5223  01E197  00                 	db	0
  5224  01E198  00                 	db	0
  5225  01E199  00                 	db	0
  5226  01E19A  00                 	db	0
  5227  01E19B  00                 	db	0
  5228  01E19C  00                 	db	0
  5229  01E19D  00                 	db	0
  5230  01E19E  00                 	db	0
  5231  01E19F  00                 	db	0
  5232  01E1A0  00                 	db	0
  5233  01E1A1  00                 	db	0
  5234  01E1A2  00                 	db	0
  5235  01E1A3  00                 	db	0
  5236  01E1A4  00                 	db	0
  5237  01E1A5  00                 	db	0
  5238  01E1A6  00                 	db	0
  5239  01E1A7  00                 	db	0
  5240  01E1A8  00                 	db	0
  5241  01E1A9  00                 	db	0
  5242  01E1AA  00                 	db	0
  5243  01E1AB  00                 	db	0
  5244  01E1AC  00                 	db	0
  5245  01E1AD  00                 	db	0
  5246  01E1AE  00                 	db	0
  5247  01E1AF  00                 	db	0
  5248  01E1B0  00                 	db	0
  5249  01E1B1  00                 	db	0
  5250  01E1B2  00                 	db	0
  5251  01E1B3  00                 	db	0
  5252  01E1B4  00                 	db	0
  5253  01E1B5  00                 	db	0
  5254  01E1B6  00                 	db	0
  5255  01E1B7  00                 	db	0
  5256  01E1B8  00                 	db	0
  5257  01E1B9  00                 	db	0
  5258  01E1BA  00                 	db	0
  5259  01E1BB  00                 	db	0
  5260  01E1BC  00                 	db	0
  5261  01E1BD  00                 	db	0
  5262  01E1BE  00                 	db	0
  5263  01E1BF  00                 	db	0
  5264  01E1C0  00                 	db	0
  5265  01E1C1  00                 	db	0
  5266  01E1C2  00                 	db	0
  5267  01E1C3  00                 	db	0
  5268  01E1C4  00                 	db	0
  5269  01E1C5  00                 	db	0
  5270  01E1C6  00                 	db	0
  5271  01E1C7  00                 	db	0
  5272  01E1C8  00                 	db	0
  5273  01E1C9  00                 	db	0
  5274  01E1CA  00                 	db	0
  5275  01E1CB  00                 	db	0
  5276  01E1CC  00                 	db	0
  5277  01E1CD  00                 	db	0
  5278  01E1CE  00                 	db	0
  5279  01E1CF  00                 	db	0
  5280  01E1D0  00                 	db	0
  5281  01E1D1  00                 	db	0
  5282  01E1D2  00                 	db	0
  5283  01E1D3  00                 	db	0
  5284  01E1D4  00                 	db	0
  5285  01E1D5  00                 	db	0
  5286  01E1D6  00                 	db	0
  5287  01E1D7  00                 	db	0
  5288  01E1D8  00                 	db	0
  5289  01E1D9  00                 	db	0
  5290  01E1DA  00                 	db	0
  5291  01E1DB  00                 	db	0
  5292  01E1DC  00                 	db	0
  5293  01E1DD  00                 	db	0
  5294  01E1DE  00                 	db	0
  5295  01E1DF  00                 	db	0
  5296  01E1E0  00                 	db	0
  5297  01E1E1  00                 	db	0
  5298  01E1E2  00                 	db	0
  5299  01E1E3  00                 	db	0
  5300  01E1E4  00                 	db	0
  5301  01E1E5  00                 	db	0
  5302  01E1E6  00                 	db	0
  5303  01E1E7  00                 	db	0
  5304  01E1E8  00                 	db	0
  5305  01E1E9  00                 	db	0
  5306  01E1EA  00                 	db	0
  5307  01E1EB  00                 	db	0
  5308  01E1EC  00                 	db	0
  5309  01E1ED  00                 	db	0
  5310  01E1EE  00                 	db	0
  5311  01E1EF  00                 	db	0
  5312  01E1F0  00                 	db	0
  5313  01E1F1  00                 	db	0
  5314  01E1F2  00                 	db	0
  5315  01E1F3  00                 	db	0
  5316  01E1F4  00                 	db	0
  5317  01E1F5  00                 	db	0
  5318  01E1F6  00                 	db	0
  5319  01E1F7  00                 	db	0
  5320  01E1F8  00                 	db	0
  5321  01E1F9  00                 	db	0
  5322  01E1FA  00                 	db	0
  5323  01E1FB  00                 	db	0
  5324  01E1FC  00                 	db	0
  5325  01E1FD  00                 	db	0
  5326  01E1FE  00                 	db	0
  5327  01E1FF  00                 	db	0
  5328  01E200  00                 	db	0
  5329  01E201  00                 	db	0
  5330  01E202  00                 	db	0
  5331  01E203  00                 	db	0
  5332  01E204  00                 	db	0
  5333  01E205  00                 	db	0
  5334  01E206  00                 	db	0
  5335  01E207  00                 	db	0
  5336  01E208  00                 	db	0
  5337  01E209  00                 	db	0
  5338  01E20A  00                 	db	0
  5339  01E20B  00                 	db	0
  5340  01E20C  00                 	db	0
  5341  01E20D  00                 	db	0
  5342  01E20E  00                 	db	0
  5343  01E20F  00                 	db	0
  5344  01E210  00                 	db	0
  5345  01E211  00                 	db	0
  5346  01E212  00                 	db	0
  5347  01E213  00                 	db	0
  5348  01E214  00                 	db	0
  5349  01E215  00                 	db	0
  5350  01E216  00                 	db	0
  5351  01E217  00                 	db	0
  5352  01E218  00                 	db	0
  5353  01E219  00                 	db	0
  5354  01E21A  00                 	db	0
  5355  01E21B  00                 	db	0
  5356  01E21C  00                 	db	0
  5357  01E21D  00                 	db	0
  5358  01E21E  00                 	db	0
  5359  01E21F  00                 	db	0
  5360  01E220  00                 	db	0
  5361  01E221  00                 	db	0
  5362  01E222  00                 	db	0
  5363  01E223  00                 	db	0
  5364  01E224  00                 	db	0
  5365  01E225  00                 	db	0
  5366  01E226  00                 	db	0
  5367  01E227  00                 	db	0
  5368  01E228  00                 	db	0
  5369  01E229  00                 	db	0
  5370  01E22A  00                 	db	0
  5371  01E22B  00                 	db	0
  5372  01E22C  00                 	db	0
  5373  01E22D  00                 	db	0
  5374  01E22E  00                 	db	0
  5375  01E22F  00                 	db	0
  5376  01E230  00                 	db	0
  5377  01E231  00                 	db	0
  5378  01E232  00                 	db	0
  5379  01E233  00                 	db	0
  5380  01E234  00                 	db	0
  5381  01E235  00                 	db	0
  5382  01E236  00                 	db	0
  5383  01E237  00                 	db	0
  5384  01E238  00                 	db	0
  5385  01E239  00                 	db	0
  5386  01E23A  00                 	db	0
  5387  01E23B  00                 	db	0
  5388  01E23C  00                 	db	0
  5389  01E23D  00                 	db	0
  5390  01E23E  00                 	db	0
  5391  01E23F  00                 	db	0
  5392  01E240  00                 	db	0
  5393  01E241  00                 	db	0
  5394  01E242  00                 	db	0
  5395  01E243  00                 	db	0
  5396  01E244  00                 	db	0
  5397  01E245  00                 	db	0
  5398  01E246  00                 	db	0
  5399  01E247  00                 	db	0
  5400  01E248  00                 	db	0
  5401  01E249  00                 	db	0
  5402  01E24A  00                 	db	0
  5403  01E24B  00                 	db	0
  5404  01E24C  00                 	db	0
  5405  01E24D  00                 	db	0
  5406  01E24E  00                 	db	0
  5407  01E24F  00                 	db	0
  5408  01E250  00                 	db	0
  5409  01E251  00                 	db	0
  5410  01E252  00                 	db	0
  5411  01E253  00                 	db	0
  5412  01E254  00                 	db	0
  5413  01E255  00                 	db	0
  5414  01E256  00                 	db	0
  5415  01E257  00                 	db	0
  5416  01E258  00                 	db	0
  5417  01E259  00                 	db	0
  5418  01E25A  00                 	db	0
  5419  01E25B  00                 	db	0
  5420  01E25C  00                 	db	0
  5421  01E25D  00                 	db	0
  5422  01E25E  00                 	db	0
  5423  01E25F  00                 	db	0
  5424  01E260  00                 	db	0
  5425  01E261  00                 	db	0
  5426  01E262  00                 	db	0
  5427  01E263  00                 	db	0
  5428  01E264  00                 	db	0
  5429  01E265  00                 	db	0
  5430  01E266  00                 	db	0
  5431  01E267  00                 	db	0
  5432  01E268  00                 	db	0
  5433  01E269  00                 	db	0
  5434  01E26A  00                 	db	0
  5435  01E26B  00                 	db	0
  5436  01E26C  00                 	db	0
  5437  01E26D  00                 	db	0
  5438  01E26E  00                 	db	0
  5439  01E26F  00                 	db	0
  5440  01E270  00                 	db	0
  5441  01E271  00                 	db	0
  5442  01E272  00                 	db	0
  5443  01E273  00                 	db	0
  5444  01E274  00                 	db	0
  5445  01E275  00                 	db	0
  5446  01E276  00                 	db	0
  5447  01E277  00                 	db	0
  5448  01E278  00                 	db	0
  5449  01E279  00                 	db	0
  5450  01E27A  00                 	db	0
  5451  01E27B  00                 	db	0
  5452  01E27C  00                 	db	0
  5453  01E27D  00                 	db	0
  5454  01E27E  00                 	db	0
  5455  01E27F  00                 	db	0
  5456  01E280  00                 	db	0
  5457  01E281  00                 	db	0
  5458  01E282  00                 	db	0
  5459  01E283  00                 	db	0
  5460  01E284  00                 	db	0
  5461  01E285  00                 	db	0
  5462  01E286  00                 	db	0
  5463  01E287  00                 	db	0
  5464  01E288  00                 	db	0
  5465  01E289  00                 	db	0
  5466  01E28A  00                 	db	0
  5467  01E28B  00                 	db	0
  5468  01E28C  00                 	db	0
  5469  01E28D  00                 	db	0
  5470  01E28E  00                 	db	0
  5471  01E28F  00                 	db	0
  5472  01E290  00                 	db	0
  5473  01E291  00                 	db	0
  5474  01E292  00                 	db	0
  5475  01E293  00                 	db	0
  5476  01E294  00                 	db	0
  5477  01E295  00                 	db	0
  5478  01E296  00                 	db	0
  5479  01E297  00                 	db	0
  5480  01E298  00                 	db	0
  5481  01E299  00                 	db	0
  5482  01E29A  00                 	db	0
  5483  01E29B  00                 	db	0
  5484  01E29C  00                 	db	0
  5485  01E29D  00                 	db	0
  5486  01E29E  00                 	db	0
  5487  01E29F  00                 	db	0
  5488  01E2A0  00                 	db	0
  5489  01E2A1  00                 	db	0
  5490  01E2A2  00                 	db	0
  5491  01E2A3  00                 	db	0
  5492  01E2A4  00                 	db	0
  5493  01E2A5  00                 	db	0
  5494  01E2A6  00                 	db	0
  5495  01E2A7  00                 	db	0
  5496  01E2A8  00                 	db	0
  5497  01E2A9  00                 	db	0
  5498  01E2AA  00                 	db	0
  5499  01E2AB  00                 	db	0
  5500  01E2AC  00                 	db	0
  5501  01E2AD  00                 	db	0
  5502  01E2AE  00                 	db	0
  5503  01E2AF  00                 	db	0
  5504  01E2B0  00                 	db	0
  5505  01E2B1  00                 	db	0
  5506  01E2B2  00                 	db	0
  5507  01E2B3  00                 	db	0
  5508  01E2B4  00                 	db	0
  5509  01E2B5  00                 	db	0
  5510  01E2B6  00                 	db	0
  5511  01E2B7  00                 	db	0
  5512  01E2B8  00                 	db	0
  5513  01E2B9  00                 	db	0
  5514  01E2BA  00                 	db	0
  5515  01E2BB  00                 	db	0
  5516  01E2BC  00                 	db	0
  5517  01E2BD  00                 	db	0
  5518  01E2BE  00                 	db	0
  5519  01E2BF  00                 	db	0
  5520  01E2C0  00                 	db	0
  5521  01E2C1  00                 	db	0
  5522  01E2C2  00                 	db	0
  5523  01E2C3  00                 	db	0
  5524  01E2C4  00                 	db	0
  5525  01E2C5  00                 	db	0
  5526  01E2C6  00                 	db	0
  5527  01E2C7  00                 	db	0
  5528  01E2C8  00                 	db	0
  5529  01E2C9  00                 	db	0
  5530  01E2CA  00                 	db	0
  5531  01E2CB  00                 	db	0
  5532  01E2CC  00                 	db	0
  5533  01E2CD  00                 	db	0
  5534  01E2CE  00                 	db	0
  5535  01E2CF  00                 	db	0
  5536  01E2D0  00                 	db	0
  5537  01E2D1  00                 	db	0
  5538  01E2D2  00                 	db	0
  5539  01E2D3  00                 	db	0
  5540  01E2D4  00                 	db	0
  5541  01E2D5  00                 	db	0
  5542  01E2D6  00                 	db	0
  5543  01E2D7  00                 	db	0
  5544  01E2D8  00                 	db	0
  5545  01E2D9  00                 	db	0
  5546  01E2DA  00                 	db	0
  5547  01E2DB  00                 	db	0
  5548  01E2DC  00                 	db	0
  5549  01E2DD  00                 	db	0
  5550  01E2DE  00                 	db	0
  5551  01E2DF  00                 	db	0
  5552  01E2E0  00                 	db	0
  5553  01E2E1  00                 	db	0
  5554  01E2E2  00                 	db	0
  5555  01E2E3  00                 	db	0
  5556  01E2E4  00                 	db	0
  5557  01E2E5  00                 	db	0
  5558  01E2E6  00                 	db	0
  5559  01E2E7  00                 	db	0
  5560  01E2E8  00                 	db	0
  5561  01E2E9  00                 	db	0
  5562  01E2EA  00                 	db	0
  5563  01E2EB  00                 	db	0
  5564  01E2EC  00                 	db	0
  5565  01E2ED  00                 	db	0
  5566  01E2EE  00                 	db	0
  5567  01E2EF  00                 	db	0
  5568  01E2F0  00                 	db	0
  5569  01E2F1  00                 	db	0
  5570  01E2F2  00                 	db	0
  5571  01E2F3  00                 	db	0
  5572  01E2F4  00                 	db	0
  5573  01E2F5  00                 	db	0
  5574  01E2F6  00                 	db	0
  5575  01E2F7  00                 	db	0
  5576  01E2F8  00                 	db	0
  5577  01E2F9  00                 	db	0
  5578  01E2FA  00                 	db	0
  5579  01E2FB  00                 	db	0
  5580  01E2FC  00                 	db	0
  5581  01E2FD  00                 	db	0
  5582  01E2FE  00                 	db	0
  5583  01E2FF  00                 	db	0
  5584  01E300  00                 	db	0
  5585  01E301  00                 	db	0
  5586  01E302  00                 	db	0
  5587  01E303  00                 	db	0
  5588  01E304  00                 	db	0
  5589  01E305  00                 	db	0
  5590  01E306  00                 	db	0
  5591  01E307  00                 	db	0
  5592  01E308  00                 	db	0
  5593  01E309  00                 	db	0
  5594  01E30A  00                 	db	0
  5595  01E30B  00                 	db	0
  5596  01E30C  00                 	db	0
  5597  01E30D  00                 	db	0
  5598  01E30E  00                 	db	0
  5599  01E30F  00                 	db	0
  5600  01E310  00                 	db	0
  5601  01E311  00                 	db	0
  5602  01E312  00                 	db	0
  5603  01E313  00                 	db	0
  5604  01E314  00                 	db	0
  5605  01E315  00                 	db	0
  5606  01E316  00                 	db	0
  5607  01E317  00                 	db	0
  5608  01E318  00                 	db	0
  5609  01E319  00                 	db	0
  5610  01E31A  00                 	db	0
  5611  01E31B  00                 	db	0
  5612  01E31C  00                 	db	0
  5613  01E31D  00                 	db	0
  5614  01E31E  00                 	db	0
  5615  01E31F  00                 	db	0
  5616  01E320  00                 	db	0
  5617  01E321  00                 	db	0
  5618  01E322  00                 	db	0
  5619  01E323  00                 	db	0
  5620  01E324  00                 	db	0
  5621  01E325  00                 	db	0
  5622  01E326  00                 	db	0
  5623  01E327  00                 	db	0
  5624  01E328  00                 	db	0
  5625  01E329  00                 	db	0
  5626  01E32A  00                 	db	0
  5627  01E32B  00                 	db	0
  5628  01E32C  00                 	db	0
  5629  01E32D  00                 	db	0
  5630  01E32E  00                 	db	0
  5631  01E32F  00                 	db	0
  5632  01E330  00                 	db	0
  5633  01E331  00                 	db	0
  5634  01E332  00                 	db	0
  5635  01E333  00                 	db	0
  5636  01E334  00                 	db	0
  5637  01E335  00                 	db	0
  5638  01E336  00                 	db	0
  5639  01E337  00                 	db	0
  5640  01E338  00                 	db	0
  5641  01E339  00                 	db	0
  5642  01E33A  00                 	db	0
  5643  01E33B  00                 	db	0
  5644  01E33C  00                 	db	0
  5645  01E33D  00                 	db	0
  5646  01E33E  00                 	db	0
  5647  01E33F  00                 	db	0
  5648  01E340  00                 	db	0
  5649  01E341  00                 	db	0
  5650  01E342  00                 	db	0
  5651  01E343  00                 	db	0
  5652  01E344  00                 	db	0
  5653  01E345  00                 	db	0
  5654  01E346  00                 	db	0
  5655  01E347  00                 	db	0
  5656  01E348  00                 	db	0
  5657  01E349  00                 	db	0
  5658  01E34A  00                 	db	0
  5659  01E34B  00                 	db	0
  5660  01E34C  00                 	db	0
  5661  01E34D  00                 	db	0
  5662  01E34E  00                 	db	0
  5663  01E34F  00                 	db	0
  5664  01E350  00                 	db	0
  5665  01E351  00                 	db	0
  5666  01E352  00                 	db	0
  5667  01E353  00                 	db	0
  5668  01E354  00                 	db	0
  5669  01E355  00                 	db	0
  5670  01E356  00                 	db	0
  5671  01E357  00                 	db	0
  5672  01E358  00                 	db	0
  5673  01E359  00                 	db	0
  5674  01E35A  00                 	db	0
  5675  01E35B  00                 	db	0
  5676  01E35C  00                 	db	0
  5677  01E35D  00                 	db	0
  5678  01E35E  00                 	db	0
  5679  01E35F  00                 	db	0
  5680  01E360  00                 	db	0
  5681  01E361  00                 	db	0
  5682  01E362  00                 	db	0
  5683  01E363  00                 	db	0
  5684  01E364  00                 	db	0
  5685  01E365  00                 	db	0
  5686  01E366  00                 	db	0
  5687  01E367  00                 	db	0
  5688  01E368  00                 	db	0
  5689  01E369  00                 	db	0
  5690  01E36A  00                 	db	0
  5691  01E36B  00                 	db	0
  5692  01E36C  00                 	db	0
  5693  01E36D  00                 	db	0
  5694  01E36E  00                 	db	0
  5695  01E36F  00                 	db	0
  5696  01E370  00                 	db	0
  5697  01E371  00                 	db	0
  5698  01E372  00                 	db	0
  5699  01E373  00                 	db	0
  5700  01E374  00                 	db	0
  5701  01E375  00                 	db	0
  5702  01E376  00                 	db	0
  5703  01E377  00                 	db	0
  5704  01E378  00                 	db	0
  5705  01E379  00                 	db	0
  5706  01E37A  00                 	db	0
  5707  01E37B  00                 	db	0
  5708  01E37C  00                 	db	0
  5709  01E37D  00                 	db	0
  5710  01E37E  00                 	db	0
  5711  01E37F  00                 	db	0
  5712  01E380  00                 	db	0
  5713  01E381  00                 	db	0
  5714  01E382  00                 	db	0
  5715  01E383  00                 	db	0
  5716  01E384  00                 	db	0
  5717  01E385  00                 	db	0
  5718  01E386  00                 	db	0
  5719  01E387  00                 	db	0
  5720  01E388  00                 	db	0
  5721  01E389  00                 	db	0
  5722  01E38A  00                 	db	0
  5723  01E38B  00                 	db	0
  5724  01E38C  00                 	db	0
  5725  01E38D  00                 	db	0
  5726  01E38E  00                 	db	0
  5727  01E38F  00                 	db	0
  5728  01E390  00                 	db	0
  5729  01E391  00                 	db	0
  5730  01E392  00                 	db	0
  5731  01E393  00                 	db	0
  5732  01E394  00                 	db	0
  5733  01E395  00                 	db	0
  5734  01E396  00                 	db	0
  5735  01E397  00                 	db	0
  5736  01E398  00                 	db	0
  5737  01E399  00                 	db	0
  5738  01E39A  00                 	db	0
  5739  01E39B  00                 	db	0
  5740  01E39C  00                 	db	0
  5741  01E39D  00                 	db	0
  5742  01E39E  00                 	db	0
  5743  01E39F  00                 	db	0
  5744  01E3A0  00                 	db	0
  5745  01E3A1  00                 	db	0
  5746  01E3A2  00                 	db	0
  5747  01E3A3  00                 	db	0
  5748  01E3A4  00                 	db	0
  5749  01E3A5  00                 	db	0
  5750  01E3A6  00                 	db	0
  5751  01E3A7  00                 	db	0
  5752  01E3A8  00                 	db	0
  5753  01E3A9  00                 	db	0
  5754  01E3AA  00                 	db	0
  5755  01E3AB  00                 	db	0
  5756  01E3AC  00                 	db	0
  5757  01E3AD  00                 	db	0
  5758  01E3AE  00                 	db	0
  5759  01E3AF  00                 	db	0
  5760  01E3B0  00                 	db	0
  5761  01E3B1  00                 	db	0
  5762  01E3B2  00                 	db	0
  5763  01E3B3  00                 	db	0
  5764  01E3B4  00                 	db	0
  5765  01E3B5  00                 	db	0
  5766  01E3B6  00                 	db	0
  5767  01E3B7  00                 	db	0
  5768  01E3B8  00                 	db	0
  5769  01E3B9  00                 	db	0
  5770  01E3BA  00                 	db	0
  5771  01E3BB  00                 	db	0
  5772  01E3BC  00                 	db	0
  5773  01E3BD  00                 	db	0
  5774  01E3BE  00                 	db	0
  5775  01E3BF  00                 	db	0
  5776  01E3C0  00                 	db	0
  5777  01E3C1  00                 	db	0
  5778  01E3C2  00                 	db	0
  5779  01E3C3  00                 	db	0
  5780  01E3C4  00                 	db	0
  5781  01E3C5  00                 	db	0
  5782  01E3C6  00                 	db	0
  5783  01E3C7  00                 	db	0
  5784  01E3C8  00                 	db	0
  5785  01E3C9  00                 	db	0
  5786  01E3CA  00                 	db	0
  5787  01E3CB  00                 	db	0
  5788  01E3CC  00                 	db	0
  5789  01E3CD  00                 	db	0
  5790  01E3CE  00                 	db	0
  5791  01E3CF  00                 	db	0
  5792  01E3D0  00                 	db	0
  5793  01E3D1  00                 	db	0
  5794  01E3D2  00                 	db	0
  5795  01E3D3  00                 	db	0
  5796  01E3D4  00                 	db	0
  5797  01E3D5  00                 	db	0
  5798  01E3D6  00                 	db	0
  5799  01E3D7  00                 	db	0
  5800  01E3D8  00                 	db	0
  5801  01E3D9  00                 	db	0
  5802  01E3DA  00                 	db	0
  5803  01E3DB  00                 	db	0
  5804  01E3DC  00                 	db	0
  5805  01E3DD  00                 	db	0
  5806  01E3DE  00                 	db	0
  5807  01E3DF  00                 	db	0
  5808  01E3E0  00                 	db	0
  5809  01E3E1  00                 	db	0
  5810  01E3E2  00                 	db	0
  5811  01E3E3  00                 	db	0
  5812  01E3E4  00                 	db	0
  5813  01E3E5  00                 	db	0
  5814  01E3E6  00                 	db	0
  5815  01E3E7  00                 	db	0
  5816  01E3E8  00                 	db	0
  5817  01E3E9  00                 	db	0
  5818  01E3EA  00                 	db	0
  5819  01E3EB  00                 	db	0
  5820  01E3EC  00                 	db	0
  5821  01E3ED  00                 	db	0
  5822  01E3EE  00                 	db	0
  5823  01E3EF  00                 	db	0
  5824  01E3F0  00                 	db	0
  5825  01E3F1  00                 	db	0
  5826  01E3F2  00                 	db	0
  5827  01E3F3  00                 	db	0
  5828  01E3F4  00                 	db	0
  5829  01E3F5  00                 	db	0
  5830  01E3F6  00                 	db	0
  5831  01E3F7  00                 	db	0
  5832  01E3F8  00                 	db	0
  5833  01E3F9  00                 	db	0
  5834  01E3FA  00                 	db	0
  5835  01E3FB  00                 	db	0
  5836  01E3FC  00                 	db	0
  5837  01E3FD  00                 	db	0
  5838  01E3FE  00                 	db	0
  5839  01E3FF  00                 	db	0
  5840  01E400  00                 	db	0
  5841  01E401  00                 	db	0
  5842  01E402  00                 	db	0
  5843  01E403  00                 	db	0
  5844  01E404  00                 	db	0
  5845  01E405  00                 	db	0
  5846  01E406  00                 	db	0
  5847  01E407  00                 	db	0
  5848  01E408  00                 	db	0
  5849  01E409  00                 	db	0
  5850  01E40A  00                 	db	0
  5851  01E40B  00                 	db	0
  5852  01E40C  00                 	db	0
  5853  01E40D  00                 	db	0
  5854  01E40E  00                 	db	0
  5855  01E40F  00                 	db	0
  5856  01E410  00                 	db	0
  5857  01E411  00                 	db	0
  5858  01E412  00                 	db	0
  5859  01E413  00                 	db	0
  5860  01E414  00                 	db	0
  5861  01E415  00                 	db	0
  5862  01E416  00                 	db	0
  5863  01E417  00                 	db	0
  5864  01E418  00                 	db	0
  5865  01E419  00                 	db	0
  5866  01E41A  00                 	db	0
  5867  01E41B  00                 	db	0
  5868  01E41C  00                 	db	0
  5869  01E41D  00                 	db	0
  5870  01E41E  00                 	db	0
  5871  01E41F  00                 	db	0
  5872  01E420  00                 	db	0
  5873  01E421  00                 	db	0
  5874  01E422  00                 	db	0
  5875  01E423  00                 	db	0
  5876  01E424  00                 	db	0
  5877  01E425  00                 	db	0
  5878  01E426  00                 	db	0
  5879  01E427  00                 	db	0
  5880  01E428  00                 	db	0
  5881  01E429  00                 	db	0
  5882  01E42A  00                 	db	0
  5883  01E42B  00                 	db	0
  5884  01E42C  00                 	db	0
  5885  01E42D  00                 	db	0
  5886  01E42E  00                 	db	0
  5887  01E42F  00                 	db	0
  5888  01E430  00                 	db	0
  5889  01E431  00                 	db	0
  5890  01E432  00                 	db	0
  5891  01E433  00                 	db	0
  5892  01E434  00                 	db	0
  5893  01E435  00                 	db	0
  5894  01E436  00                 	db	0
  5895  01E437  00                 	db	0
  5896  01E438  00                 	db	0
  5897  01E439  00                 	db	0
  5898  01E43A  00                 	db	0
  5899  01E43B  00                 	db	0
  5900  01E43C  00                 	db	0
  5901  01E43D  00                 	db	0
  5902  01E43E  00                 	db	0
  5903  01E43F  00                 	db	0
  5904  01E440  00                 	db	0
  5905  01E441  00                 	db	0
  5906  01E442  00                 	db	0
  5907  01E443  00                 	db	0
  5908  01E444  00                 	db	0
  5909  01E445  00                 	db	0
  5910  01E446  00                 	db	0
  5911  01E447  00                 	db	0
  5912  01E448  00                 	db	0
  5913  01E449  00                 	db	0
  5914  01E44A  00                 	db	0
  5915  01E44B  00                 	db	0
  5916  01E44C  00                 	db	0
  5917  01E44D  00                 	db	0
  5918  01E44E  00                 	db	0
  5919  01E44F  00                 	db	0
  5920  01E450  00                 	db	0
  5921  01E451  00                 	db	0
  5922  01E452  00                 	db	0
  5923  01E453  00                 	db	0
  5924  01E454  00                 	db	0
  5925  01E455  00                 	db	0
  5926  01E456  00                 	db	0
  5927  01E457  00                 	db	0
  5928  01E458  00                 	db	0
  5929  01E459  00                 	db	0
  5930  01E45A  00                 	db	0
  5931  01E45B  00                 	db	0
  5932  01E45C  00                 	db	0
  5933  01E45D  00                 	db	0
  5934  01E45E  00                 	db	0
  5935  01E45F  00                 	db	0
  5936  01E460  00                 	db	0
  5937  01E461  00                 	db	0
  5938  01E462  00                 	db	0
  5939  01E463  00                 	db	0
  5940  01E464  00                 	db	0
  5941  01E465  00                 	db	0
  5942  01E466  00                 	db	0
  5943  01E467  00                 	db	0
  5944  01E468  00                 	db	0
  5945  01E469  00                 	db	0
  5946  01E46A  00                 	db	0
  5947  01E46B  00                 	db	0
  5948  01E46C  00                 	db	0
  5949  01E46D  00                 	db	0
  5950  01E46E  00                 	db	0
  5951  01E46F  00                 	db	0
  5952  01E470  00                 	db	0
  5953  01E471  00                 	db	0
  5954  01E472  00                 	db	0
  5955  01E473  00                 	db	0
  5956  01E474  00                 	db	0
  5957  01E475  00                 	db	0
  5958  01E476  00                 	db	0
  5959  01E477  00                 	db	0
  5960  01E478  00                 	db	0
  5961  01E479  00                 	db	0
  5962  01E47A  00                 	db	0
  5963  01E47B  00                 	db	0
  5964  01E47C  00                 	db	0
  5965  01E47D  00                 	db	0
  5966  01E47E  00                 	db	0
  5967  01E47F  00                 	db	0
  5968  01E480  00                 	db	0
  5969  01E481  00                 	db	0
  5970  01E482  00                 	db	0
  5971  01E483  00                 	db	0
  5972  01E484  00                 	db	0
  5973  01E485  00                 	db	0
  5974  01E486  00                 	db	0
  5975  01E487  00                 	db	0
  5976  01E488  00                 	db	0
  5977  01E489  00                 	db	0
  5978  01E48A  00                 	db	0
  5979  01E48B  00                 	db	0
  5980  01E48C  00                 	db	0
  5981  01E48D  00                 	db	0
  5982  01E48E  00                 	db	0
  5983  01E48F  00                 	db	0
  5984  01E490  00                 	db	0
  5985  01E491  00                 	db	0
  5986  01E492  00                 	db	0
  5987  01E493  00                 	db	0
  5988  01E494  00                 	db	0
  5989  01E495  00                 	db	0
  5990  01E496  00                 	db	0
  5991  01E497  00                 	db	0
  5992  01E498  00                 	db	0
  5993  01E499  00                 	db	0
  5994  01E49A  00                 	db	0
  5995  01E49B  00                 	db	0
  5996  01E49C  00                 	db	0
  5997  01E49D  00                 	db	0
  5998  01E49E  00                 	db	0
  5999  01E49F  00                 	db	0
  6000  01E4A0  00                 	db	0
  6001  01E4A1  00                 	db	0
  6002  01E4A2  00                 	db	0
  6003  01E4A3  00                 	db	0
  6004  01E4A4  00                 	db	0
  6005  01E4A5  00                 	db	0
  6006  01E4A6  00                 	db	0
  6007  01E4A7  00                 	db	0
  6008  01E4A8  00                 	db	0
  6009  01E4A9  00                 	db	0
  6010  01E4AA  00                 	db	0
  6011  01E4AB  00                 	db	0
  6012  01E4AC  00                 	db	0
  6013  01E4AD  00                 	db	0
  6014  01E4AE  00                 	db	0
  6015  01E4AF  00                 	db	0
  6016  01E4B0  00                 	db	0
  6017  01E4B1  00                 	db	0
  6018  01E4B2  00                 	db	0
  6019  01E4B3  00                 	db	0
  6020  01E4B4  00                 	db	0
  6021  01E4B5  00                 	db	0
  6022  01E4B6  00                 	db	0
  6023  01E4B7  00                 	db	0
  6024  01E4B8  00                 	db	0
  6025  01E4B9  00                 	db	0
  6026  01E4BA  00                 	db	0
  6027  01E4BB  00                 	db	0
  6028  01E4BC  00                 	db	0
  6029  01E4BD  00                 	db	0
  6030  01E4BE  00                 	db	0
  6031  01E4BF  00                 	db	0
  6032  01E4C0  00                 	db	0
  6033  01E4C1  00                 	db	0
  6034  01E4C2  00                 	db	0
  6035  01E4C3  00                 	db	0
  6036  01E4C4  00                 	db	0
  6037  01E4C5  00                 	db	0
  6038  01E4C6  00                 	db	0
  6039  01E4C7  00                 	db	0
  6040  01E4C8  00                 	db	0
  6041  01E4C9  00                 	db	0
  6042  01E4CA  00                 	db	0
  6043  01E4CB  00                 	db	0
  6044  01E4CC  00                 	db	0
  6045  01E4CD  00                 	db	0
  6046  01E4CE  00                 	db	0
  6047  01E4CF  00                 	db	0
  6048  01E4D0  00                 	db	0
  6049  01E4D1  00                 	db	0
  6050  01E4D2  00                 	db	0
  6051  01E4D3  00                 	db	0
  6052  01E4D4  00                 	db	0
  6053  01E4D5  00                 	db	0
  6054  01E4D6  00                 	db	0
  6055  01E4D7  00                 	db	0
  6056  01E4D8  00                 	db	0
  6057  01E4D9  00                 	db	0
  6058  01E4DA  00                 	db	0
  6059  01E4DB  00                 	db	0
  6060  01E4DC  00                 	db	0
  6061  01E4DD  00                 	db	0
  6062  01E4DE  00                 	db	0
  6063  01E4DF  00                 	db	0
  6064  01E4E0  00                 	db	0
  6065  01E4E1  00                 	db	0
  6066  01E4E2  00                 	db	0
  6067  01E4E3  00                 	db	0
  6068  01E4E4  00                 	db	0
  6069  01E4E5  00                 	db	0
  6070  01E4E6  00                 	db	0
  6071  01E4E7  00                 	db	0
  6072  01E4E8  00                 	db	0
  6073  01E4E9  00                 	db	0
  6074  01E4EA  00                 	db	0
  6075  01E4EB  00                 	db	0
  6076  01E4EC  00                 	db	0
  6077  01E4ED  00                 	db	0
  6078  01E4EE  00                 	db	0
  6079  01E4EF  00                 	db	0
  6080  01E4F0  00                 	db	0
  6081  01E4F1  00                 	db	0
  6082  01E4F2  00                 	db	0
  6083  01E4F3  00                 	db	0
  6084  01E4F4  00                 	db	0
  6085  01E4F5  00                 	db	0
  6086  01E4F6  00                 	db	0
  6087  01E4F7  00                 	db	0
  6088  01E4F8  00                 	db	0
  6089  01E4F9  00                 	db	0
  6090  01E4FA  00                 	db	0
  6091  01E4FB  00                 	db	0
  6092  01E4FC  00                 	db	0
  6093  01E4FD  00                 	db	0
  6094  01E4FE  00                 	db	0
  6095  01E4FF  00                 	db	0
  6096  01E500  00                 	db	0
  6097  01E501  00                 	db	0
  6098  01E502  00                 	db	0
  6099  01E503  00                 	db	0
  6100  01E504  00                 	db	0
  6101  01E505  00                 	db	0
  6102  01E506  00                 	db	0
  6103  01E507  00                 	db	0
  6104  01E508  00                 	db	0
  6105  01E509  00                 	db	0
  6106  01E50A  00                 	db	0
  6107  01E50B  00                 	db	0
  6108  01E50C  00                 	db	0
  6109  01E50D  00                 	db	0
  6110  01E50E  00                 	db	0
  6111  01E50F  00                 	db	0
  6112  01E510  00                 	db	0
  6113  01E511  00                 	db	0
  6114  01E512  00                 	db	0
  6115  01E513  00                 	db	0
  6116  01E514  00                 	db	0
  6117  01E515  00                 	db	0
  6118  01E516  00                 	db	0
  6119  01E517  00                 	db	0
  6120  01E518  00                 	db	0
  6121  01E519  00                 	db	0
  6122  01E51A  00                 	db	0
  6123  01E51B  00                 	db	0
  6124  01E51C  00                 	db	0
  6125  01E51D  00                 	db	0
  6126  01E51E  00                 	db	0
  6127  01E51F  00                 	db	0
  6128  01E520  00                 	db	0
  6129  01E521  00                 	db	0
  6130  01E522  00                 	db	0
  6131  01E523  00                 	db	0
  6132  01E524  00                 	db	0
  6133  01E525  00                 	db	0
  6134  01E526  00                 	db	0
  6135  01E527  00                 	db	0
  6136  01E528  00                 	db	0
  6137  01E529  00                 	db	0
  6138  01E52A  00                 	db	0
  6139  01E52B  00                 	db	0
  6140  01E52C  00                 	db	0
  6141  01E52D  00                 	db	0
  6142  01E52E  00                 	db	0
  6143  01E52F  00                 	db	0
  6144  01E530  00                 	db	0
  6145  01E531  00                 	db	0
  6146  01E532  00                 	db	0
  6147  01E533  00                 	db	0
  6148  01E534  00                 	db	0
  6149  01E535  00                 	db	0
  6150  01E536  00                 	db	0
  6151  01E537  00                 	db	0
  6152  01E538  00                 	db	0
  6153  01E539  00                 	db	0
  6154  01E53A  00                 	db	0
  6155  01E53B  00                 	db	0
  6156  01E53C  00                 	db	0
  6157  01E53D  00                 	db	0
  6158  01E53E  00                 	db	0
  6159  01E53F  00                 	db	0
  6160  01E540  00                 	db	0
  6161  01E541  00                 	db	0
  6162  01E542  00                 	db	0
  6163  01E543  00                 	db	0
  6164  01E544  00                 	db	0
  6165  01E545  00                 	db	0
  6166  01E546  00                 	db	0
  6167  01E547  00                 	db	0
  6168  01E548  00                 	db	0
  6169  01E549  00                 	db	0
  6170  01E54A  00                 	db	0
  6171  01E54B  00                 	db	0
  6172  01E54C  00                 	db	0
  6173  01E54D  00                 	db	0
  6174  01E54E  00                 	db	0
  6175  01E54F  00                 	db	0
  6176  01E550  00                 	db	0
  6177  01E551  00                 	db	0
  6178  01E552  00                 	db	0
  6179  01E553  00                 	db	0
  6180  01E554  00                 	db	0
  6181  01E555  00                 	db	0
  6182  01E556  00                 	db	0
  6183  01E557  00                 	db	0
  6184  01E558  00                 	db	0
  6185  01E559  00                 	db	0
  6186  01E55A  00                 	db	0
  6187  01E55B  00                 	db	0
  6188  01E55C  00                 	db	0
  6189  01E55D  00                 	db	0
  6190  01E55E  00                 	db	0
  6191  01E55F  00                 	db	0
  6192  01E560  00                 	db	0
  6193  01E561  00                 	db	0
  6194  01E562  00                 	db	0
  6195  01E563  00                 	db	0
  6196  01E564  00                 	db	0
  6197  01E565  00                 	db	0
  6198  01E566  00                 	db	0
  6199  01E567  00                 	db	0
  6200  01E568  00                 	db	0
  6201  01E569  00                 	db	0
  6202  01E56A  00                 	db	0
  6203  01E56B  00                 	db	0
  6204  01E56C  00                 	db	0
  6205  01E56D  00                 	db	0
  6206  01E56E  00                 	db	0
  6207  01E56F  00                 	db	0
  6208  01E570  00                 	db	0
  6209  01E571  00                 	db	0
  6210  01E572  00                 	db	0
  6211  01E573  00                 	db	0
  6212  01E574  00                 	db	0
  6213  01E575  00                 	db	0
  6214  01E576  00                 	db	0
  6215  01E577  00                 	db	0
  6216  01E578  00                 	db	0
  6217  01E579  00                 	db	0
  6218  01E57A  00                 	db	0
  6219  01E57B  00                 	db	0
  6220  01E57C  00                 	db	0
  6221  01E57D  00                 	db	0
  6222  01E57E  00                 	db	0
  6223  01E57F  00                 	db	0
  6224  01E580  00                 	db	0
  6225  01E581  00                 	db	0
  6226  01E582  00                 	db	0
  6227  01E583  00                 	db	0
  6228  01E584  00                 	db	0
  6229  01E585  00                 	db	0
  6230  01E586  00                 	db	0
  6231  01E587  00                 	db	0
  6232  01E588  00                 	db	0
  6233  01E589  00                 	db	0
  6234  01E58A  00                 	db	0
  6235  01E58B  00                 	db	0
  6236  01E58C  00                 	db	0
  6237  01E58D  00                 	db	0
  6238  01E58E  00                 	db	0
  6239  01E58F  00                 	db	0
  6240  01E590  00                 	db	0
  6241  01E591  00                 	db	0
  6242  01E592  00                 	db	0
  6243  01E593  00                 	db	0
  6244  01E594  00                 	db	0
  6245  01E595  00                 	db	0
  6246  01E596  00                 	db	0
  6247  01E597  00                 	db	0
  6248  01E598  00                 	db	0
  6249  01E599  00                 	db	0
  6250  01E59A  00                 	db	0
  6251  01E59B  00                 	db	0
  6252  01E59C  00                 	db	0
  6253  01E59D  00                 	db	0
  6254  01E59E  00                 	db	0
  6255  01E59F  00                 	db	0
  6256  01E5A0  00                 	db	0
  6257  01E5A1  00                 	db	0
  6258  01E5A2  00                 	db	0
  6259  01E5A3  00                 	db	0
  6260  01E5A4  00                 	db	0
  6261  01E5A5  00                 	db	0
  6262  01E5A6  00                 	db	0
  6263  01E5A7  00                 	db	0
  6264  01E5A8  00                 	db	0
  6265  01E5A9  00                 	db	0
  6266  01E5AA  00                 	db	0
  6267  01E5AB  00                 	db	0
  6268  01E5AC  00                 	db	0
  6269  01E5AD  00                 	db	0
  6270  01E5AE  00                 	db	0
  6271  01E5AF  00                 	db	0
  6272  01E5B0  00                 	db	0
  6273  01E5B1  00                 	db	0
  6274  01E5B2  00                 	db	0
  6275  01E5B3  00                 	db	0
  6276  01E5B4  00                 	db	0
  6277  01E5B5  00                 	db	0
  6278  01E5B6  00                 	db	0
  6279  01E5B7  00                 	db	0
  6280  01E5B8  00                 	db	0
  6281  01E5B9  00                 	db	0
  6282  01E5BA  00                 	db	0
  6283  01E5BB  00                 	db	0
  6284  01E5BC  00                 	db	0
  6285  01E5BD  00                 	db	0
  6286  01E5BE  00                 	db	0
  6287  01E5BF  00                 	db	0
  6288  01E5C0  00                 	db	0
  6289  01E5C1  00                 	db	0
  6290  01E5C2  00                 	db	0
  6291  01E5C3  00                 	db	0
  6292  01E5C4  00                 	db	0
  6293  01E5C5  00                 	db	0
  6294  01E5C6  00                 	db	0
  6295  01E5C7  00                 	db	0
  6296  01E5C8  00                 	db	0
  6297  01E5C9  00                 	db	0
  6298  01E5CA  00                 	db	0
  6299  01E5CB  00                 	db	0
  6300  01E5CC  00                 	db	0
  6301  01E5CD  00                 	db	0
  6302  01E5CE  00                 	db	0
  6303  01E5CF  00                 	db	0
  6304  01E5D0  00                 	db	0
  6305  01E5D1  00                 	db	0
  6306  01E5D2  00                 	db	0
  6307  01E5D3  00                 	db	0
  6308  01E5D4  00                 	db	0
  6309  01E5D5  00                 	db	0
  6310  01E5D6  00                 	db	0
  6311  01E5D7  00                 	db	0
  6312  01E5D8  00                 	db	0
  6313  01E5D9  00                 	db	0
  6314  01E5DA  00                 	db	0
  6315  01E5DB  00                 	db	0
  6316  01E5DC  00                 	db	0
  6317  01E5DD  00                 	db	0
  6318  01E5DE  00                 	db	0
  6319  01E5DF  00                 	db	0
  6320  01E5E0  00                 	db	0
  6321  01E5E1  00                 	db	0
  6322  01E5E2  00                 	db	0
  6323  01E5E3  00                 	db	0
  6324  01E5E4  00                 	db	0
  6325  01E5E5  00                 	db	0
  6326  01E5E6  00                 	db	0
  6327  01E5E7  00                 	db	0
  6328  01E5E8  00                 	db	0
  6329  01E5E9  00                 	db	0
  6330  01E5EA  00                 	db	0
  6331  01E5EB  00                 	db	0
  6332  01E5EC  00                 	db	0
  6333  01E5ED  00                 	db	0
  6334  01E5EE  00                 	db	0
  6335  01E5EF  00                 	db	0
  6336  01E5F0  00                 	db	0
  6337  01E5F1  00                 	db	0
  6338  01E5F2  00                 	db	0
  6339  01E5F3  00                 	db	0
  6340  01E5F4  00                 	db	0
  6341  01E5F5  00                 	db	0
  6342  01E5F6  00                 	db	0
  6343  01E5F7  00                 	db	0
  6344  01E5F8  00                 	db	0
  6345  01E5F9  00                 	db	0
  6346  01E5FA  00                 	db	0
  6347  01E5FB  00                 	db	0
  6348  01E5FC  00                 	db	0
  6349  01E5FD  00                 	db	0
  6350  01E5FE  00                 	db	0
  6351  01E5FF  00                 	db	0
  6352  01E600  00                 	db	0
  6353  01E601  00                 	db	0
  6354  01E602  00                 	db	0
  6355  01E603  00                 	db	0
  6356  01E604  00                 	db	0
  6357  01E605  00                 	db	0
  6358  01E606  00                 	db	0
  6359  01E607  00                 	db	0
  6360  01E608  00                 	db	0
  6361  01E609  00                 	db	0
  6362  01E60A  00                 	db	0
  6363  01E60B  00                 	db	0
  6364  01E60C  00                 	db	0
  6365  01E60D  00                 	db	0
  6366  01E60E  00                 	db	0
  6367  01E60F  00                 	db	0
  6368  01E610  00                 	db	0
  6369  01E611  00                 	db	0
  6370  01E612  00                 	db	0
  6371  01E613  00                 	db	0
  6372  01E614  00                 	db	0
  6373  01E615  00                 	db	0
  6374  01E616  00                 	db	0
  6375  01E617  00                 	db	0
  6376  01E618  00                 	db	0
  6377  01E619  00                 	db	0
  6378  01E61A  00                 	db	0
  6379  01E61B  00                 	db	0
  6380  01E61C  00                 	db	0
  6381  01E61D  00                 	db	0
  6382  01E61E  00                 	db	0
  6383  01E61F  00                 	db	0
  6384  01E620  00                 	db	0
  6385  01E621  00                 	db	0
  6386  01E622  00                 	db	0
  6387  01E623  00                 	db	0
  6388  01E624  00                 	db	0
  6389  01E625  00                 	db	0
  6390  01E626  00                 	db	0
  6391  01E627  00                 	db	0
  6392  01E628  00                 	db	0
  6393  01E629  00                 	db	0
  6394  01E62A  00                 	db	0
  6395  01E62B  00                 	db	0
  6396  01E62C  00                 	db	0
  6397  01E62D  00                 	db	0
  6398  01E62E  00                 	db	0
  6399  01E62F  00                 	db	0
  6400  01E630  00                 	db	0
  6401  01E631  00                 	db	0
  6402  01E632  00                 	db	0
  6403  01E633  00                 	db	0
  6404  01E634  00                 	db	0
  6405  01E635  00                 	db	0
  6406  01E636  00                 	db	0
  6407  01E637  00                 	db	0
  6408  01E638  00                 	db	0
  6409  01E639  00                 	db	0
  6410  01E63A  00                 	db	0
  6411  01E63B  00                 	db	0
  6412  01E63C  00                 	db	0
  6413  01E63D  00                 	db	0
  6414  01E63E  00                 	db	0
  6415  01E63F  00                 	db	0
  6416  01E640  00                 	db	0
  6417  01E641  00                 	db	0
  6418  01E642  00                 	db	0
  6419  01E643  00                 	db	0
  6420  01E644  00                 	db	0
  6421  01E645  00                 	db	0
  6422  01E646  00                 	db	0
  6423  01E647  00                 	db	0
  6424  01E648  00                 	db	0
  6425  01E649  00                 	db	0
  6426  01E64A  00                 	db	0
  6427  01E64B  00                 	db	0
  6428  01E64C  00                 	db	0
  6429  01E64D  00                 	db	0
  6430  01E64E  00                 	db	0
  6431  01E64F  00                 	db	0
  6432  01E650  00                 	db	0
  6433  01E651  00                 	db	0
  6434  01E652  00                 	db	0
  6435  01E653  00                 	db	0
  6436  01E654  00                 	db	0
  6437  01E655  00                 	db	0
  6438  01E656  00                 	db	0
  6439  01E657  00                 	db	0
  6440  01E658  00                 	db	0
  6441  01E659  00                 	db	0
  6442  01E65A  00                 	db	0
  6443  01E65B  00                 	db	0
  6444  01E65C  00                 	db	0
  6445  01E65D  00                 	db	0
  6446  01E65E  00                 	db	0
  6447  01E65F  00                 	db	0
  6448  01E660  00                 	db	0
  6449  01E661  00                 	db	0
  6450  01E662  00                 	db	0
  6451  01E663  00                 	db	0
  6452  01E664  00                 	db	0
  6453  01E665  00                 	db	0
  6454  01E666  00                 	db	0
  6455  01E667  00                 	db	0
  6456  01E668  00                 	db	0
  6457  01E669  00                 	db	0
  6458  01E66A  00                 	db	0
  6459  01E66B  00                 	db	0
  6460  01E66C  00                 	db	0
  6461  01E66D  00                 	db	0
  6462  01E66E  00                 	db	0
  6463  01E66F  00                 	db	0
  6464  01E670  00                 	db	0
  6465  01E671  00                 	db	0
  6466  01E672  00                 	db	0
  6467  01E673  00                 	db	0
  6468  01E674  00                 	db	0
  6469  01E675  00                 	db	0
  6470  01E676  00                 	db	0
  6471  01E677  00                 	db	0
  6472  01E678  00                 	db	0
  6473  01E679  00                 	db	0
  6474  01E67A  00                 	db	0
  6475  01E67B  00                 	db	0
  6476  01E67C  00                 	db	0
  6477  01E67D  00                 	db	0
  6478  01E67E  00                 	db	0
  6479  01E67F  00                 	db	0
  6480  01E680  00                 	db	0
  6481  01E681  00                 	db	0
  6482  01E682  00                 	db	0
  6483  01E683  00                 	db	0
  6484  01E684  00                 	db	0
  6485  01E685  00                 	db	0
  6486  01E686  00                 	db	0
  6487  01E687  00                 	db	0
  6488  01E688  00                 	db	0
  6489  01E689  00                 	db	0
  6490  01E68A  00                 	db	0
  6491  01E68B  00                 	db	0
  6492  01E68C  00                 	db	0
  6493  01E68D  00                 	db	0
  6494  01E68E  00                 	db	0
  6495  01E68F  00                 	db	0
  6496  01E690  00                 	db	0
  6497  01E691  00                 	db	0
  6498  01E692  00                 	db	0
  6499  01E693  00                 	db	0
  6500  01E694  00                 	db	0
  6501  01E695  00                 	db	0
  6502  01E696  00                 	db	0
  6503  01E697  00                 	db	0
  6504  01E698  00                 	db	0
  6505  01E699  00                 	db	0
  6506  01E69A  00                 	db	0
  6507  01E69B  00                 	db	0
  6508  01E69C  00                 	db	0
  6509  01E69D  00                 	db	0
  6510  01E69E  00                 	db	0
  6511  01E69F  00                 	db	0
  6512  01E6A0  00                 	db	0
  6513  01E6A1  00                 	db	0
  6514  01E6A2  00                 	db	0
  6515  01E6A3  00                 	db	0
  6516  01E6A4  00                 	db	0
  6517  01E6A5  00                 	db	0
  6518  01E6A6  00                 	db	0
  6519  01E6A7  00                 	db	0
  6520  01E6A8  00                 	db	0
  6521  01E6A9  00                 	db	0
  6522  01E6AA  00                 	db	0
  6523  01E6AB  00                 	db	0
  6524  01E6AC  00                 	db	0
  6525  01E6AD  00                 	db	0
  6526  01E6AE  00                 	db	0
  6527  01E6AF  00                 	db	0
  6528  01E6B0  00                 	db	0
  6529  01E6B1  00                 	db	0
  6530  01E6B2  00                 	db	0
  6531  01E6B3  00                 	db	0
  6532  01E6B4  00                 	db	0
  6533  01E6B5  00                 	db	0
  6534  01E6B6  00                 	db	0
  6535  01E6B7  00                 	db	0
  6536  01E6B8  00                 	db	0
  6537  01E6B9  00                 	db	0
  6538  01E6BA  00                 	db	0
  6539  01E6BB  00                 	db	0
  6540  01E6BC  00                 	db	0
  6541  01E6BD  00                 	db	0
  6542  01E6BE  00                 	db	0
  6543  01E6BF  00                 	db	0
  6544  01E6C0  00                 	db	0
  6545  01E6C1  00                 	db	0
  6546  01E6C2  00                 	db	0
  6547  01E6C3  00                 	db	0
  6548  01E6C4  00                 	db	0
  6549  01E6C5  00                 	db	0
  6550  01E6C6  00                 	db	0
  6551  01E6C7  00                 	db	0
  6552  01E6C8  00                 	db	0
  6553  01E6C9  00                 	db	0
  6554  01E6CA  00                 	db	0
  6555  01E6CB  00                 	db	0
  6556  01E6CC  00                 	db	0
  6557  01E6CD  00                 	db	0
  6558  01E6CE  00                 	db	0
  6559  01E6CF  00                 	db	0
  6560  01E6D0  00                 	db	0
  6561  01E6D1  00                 	db	0
  6562  01E6D2  00                 	db	0
  6563  01E6D3  00                 	db	0
  6564  01E6D4  00                 	db	0
  6565  01E6D5  00                 	db	0
  6566  01E6D6  00                 	db	0
  6567  01E6D7  00                 	db	0
  6568  01E6D8  00                 	db	0
  6569  01E6D9  00                 	db	0
  6570  01E6DA  00                 	db	0
  6571  01E6DB  00                 	db	0
  6572  01E6DC  00                 	db	0
  6573  01E6DD  00                 	db	0
  6574  01E6DE  00                 	db	0
  6575  01E6DF  00                 	db	0
  6576  01E6E0  00                 	db	0
  6577  01E6E1  00                 	db	0
  6578  01E6E2  00                 	db	0
  6579  01E6E3  00                 	db	0
  6580  01E6E4  00                 	db	0
  6581  01E6E5  00                 	db	0
  6582  01E6E6  00                 	db	0
  6583  01E6E7  00                 	db	0
  6584  01E6E8  00                 	db	0
  6585  01E6E9  00                 	db	0
  6586  01E6EA  00                 	db	0
  6587  01E6EB  00                 	db	0
  6588  01E6EC  00                 	db	0
  6589  01E6ED  00                 	db	0
  6590  01E6EE  00                 	db	0
  6591  01E6EF  00                 	db	0
  6592  01E6F0  00                 	db	0
  6593  01E6F1  00                 	db	0
  6594  01E6F2  00                 	db	0
  6595  01E6F3  00                 	db	0
  6596  01E6F4  00                 	db	0
  6597  01E6F5  00                 	db	0
  6598  01E6F6  00                 	db	0
  6599  01E6F7  00                 	db	0
  6600  01E6F8  00                 	db	0
  6601  01E6F9  00                 	db	0
  6602  01E6FA  00                 	db	0
  6603  01E6FB  00                 	db	0
  6604  01E6FC  00                 	db	0
  6605  01E6FD  00                 	db	0
  6606  01E6FE  00                 	db	0
  6607  01E6FF  00                 	db	0
  6608  01E700  00                 	db	0
  6609  01E701  00                 	db	0
  6610  01E702  00                 	db	0
  6611  01E703  00                 	db	0
  6612  01E704  00                 	db	0
  6613  01E705  00                 	db	0
  6614  01E706  00                 	db	0
  6615  01E707  00                 	db	0
  6616  01E708  00                 	db	0
  6617  01E709  00                 	db	0
  6618  01E70A  00                 	db	0
  6619  01E70B  00                 	db	0
  6620  01E70C  00                 	db	0
  6621  01E70D  00                 	db	0
  6622  01E70E  00                 	db	0
  6623  01E70F  00                 	db	0
  6624  01E710  00                 	db	0
  6625  01E711  00                 	db	0
  6626  01E712  00                 	db	0
  6627  01E713  00                 	db	0
  6628  01E714  00                 	db	0
  6629  01E715  00                 	db	0
  6630  01E716  00                 	db	0
  6631  01E717  00                 	db	0
  6632  01E718  00                 	db	0
  6633  01E719  00                 	db	0
  6634  01E71A  00                 	db	0
  6635  01E71B  00                 	db	0
  6636  01E71C  00                 	db	0
  6637  01E71D  00                 	db	0
  6638  01E71E  00                 	db	0
  6639  01E71F  00                 	db	0
  6640  01E720  00                 	db	0
  6641  01E721  00                 	db	0
  6642  01E722  00                 	db	0
  6643  01E723  00                 	db	0
  6644  01E724  00                 	db	0
  6645  01E725  00                 	db	0
  6646  01E726  00                 	db	0
  6647  01E727  00                 	db	0
  6648  01E728  00                 	db	0
  6649  01E729  00                 	db	0
  6650  01E72A  00                 	db	0
  6651  01E72B  00                 	db	0
  6652  01E72C  00                 	db	0
  6653  01E72D  00                 	db	0
  6654  01E72E  00                 	db	0
  6655  01E72F  00                 	db	0
  6656  01E730  00                 	db	0
  6657  01E731  00                 	db	0
  6658  01E732  00                 	db	0
  6659  01E733  00                 	db	0
  6660  01E734  00                 	db	0
  6661  01E735  00                 	db	0
  6662  01E736  00                 	db	0
  6663  01E737  00                 	db	0
  6664  01E738  00                 	db	0
  6665  01E739  00                 	db	0
  6666  01E73A  00                 	db	0
  6667  01E73B  00                 	db	0
  6668  01E73C  00                 	db	0
  6669  01E73D  00                 	db	0
  6670  01E73E  00                 	db	0
  6671  01E73F  00                 	db	0
  6672  01E740  00                 	db	0
  6673  01E741  00                 	db	0
  6674  01E742  00                 	db	0
  6675  01E743  00                 	db	0
  6676  01E744  00                 	db	0
  6677  01E745  00                 	db	0
  6678  01E746  00                 	db	0
  6679  01E747  00                 	db	0
  6680  01E748  00                 	db	0
  6681  01E749  00                 	db	0
  6682  01E74A  00                 	db	0
  6683  01E74B  00                 	db	0
  6684  01E74C  00                 	db	0
  6685  01E74D  00                 	db	0
  6686  01E74E  00                 	db	0
  6687  01E74F  00                 	db	0
  6688  01E750  00                 	db	0
  6689  01E751  00                 	db	0
  6690  01E752  00                 	db	0
  6691  01E753  00                 	db	0
  6692  01E754  00                 	db	0
  6693  01E755  00                 	db	0
  6694  01E756  00                 	db	0
  6695  01E757  00                 	db	0
  6696  01E758  00                 	db	0
  6697  01E759  00                 	db	0
  6698  01E75A  00                 	db	0
  6699  01E75B  00                 	db	0
  6700  01E75C  00                 	db	0
  6701  01E75D  00                 	db	0
  6702  01E75E  00                 	db	0
  6703  01E75F  00                 	db	0
  6704  01E760  00                 	db	0
  6705  01E761  00                 	db	0
  6706  01E762  00                 	db	0
  6707  01E763  00                 	db	0
  6708  01E764  00                 	db	0
  6709  01E765  00                 	db	0
  6710  01E766  00                 	db	0
  6711  01E767  00                 	db	0
  6712  01E768  00                 	db	0
  6713  01E769  00                 	db	0
  6714  01E76A  00                 	db	0
  6715  01E76B  00                 	db	0
  6716  01E76C  00                 	db	0
  6717  01E76D  00                 	db	0
  6718  01E76E  00                 	db	0
  6719  01E76F  00                 	db	0
  6720  01E770  00                 	db	0
  6721  01E771  00                 	db	0
  6722  01E772  00                 	db	0
  6723  01E773  00                 	db	0
  6724  01E774  00                 	db	0
  6725  01E775  00                 	db	0
  6726  01E776  00                 	db	0
  6727  01E777  00                 	db	0
  6728  01E778  00                 	db	0
  6729  01E779  00                 	db	0
  6730  01E77A  00                 	db	0
  6731  01E77B  00                 	db	0
  6732  01E77C  00                 	db	0
  6733  01E77D  00                 	db	0
  6734  01E77E  00                 	db	0
  6735  01E77F  00                 	db	0
  6736  01E780  00                 	db	0
  6737  01E781  00                 	db	0
  6738  01E782  00                 	db	0
  6739  01E783  00                 	db	0
  6740  01E784  00                 	db	0
  6741  01E785  00                 	db	0
  6742  01E786  00                 	db	0
  6743  01E787  00                 	db	0
  6744  01E788  00                 	db	0
  6745  01E789  00                 	db	0
  6746  01E78A  00                 	db	0
  6747  01E78B  00                 	db	0
  6748  01E78C  00                 	db	0
  6749  01E78D  00                 	db	0
  6750  01E78E  00                 	db	0
  6751  01E78F  00                 	db	0
  6752  01E790  00                 	db	0
  6753  01E791  00                 	db	0
  6754  01E792  00                 	db	0
  6755  01E793  00                 	db	0
  6756  01E794  00                 	db	0
  6757  01E795  00                 	db	0
  6758  01E796  00                 	db	0
  6759  01E797  00                 	db	0
  6760  01E798  00                 	db	0
  6761  01E799  00                 	db	0
  6762  01E79A  00                 	db	0
  6763  01E79B  00                 	db	0
  6764  01E79C  00                 	db	0
  6765  01E79D  00                 	db	0
  6766  01E79E  00                 	db	0
  6767  01E79F  00                 	db	0
  6768  01E7A0  00                 	db	0
  6769  01E7A1  00                 	db	0
  6770  01E7A2  00                 	db	0
  6771  01E7A3  00                 	db	0
  6772  01E7A4  00                 	db	0
  6773  01E7A5  00                 	db	0
  6774  01E7A6  00                 	db	0
  6775  01E7A7  00                 	db	0
  6776  01E7A8  00                 	db	0
  6777  01E7A9  00                 	db	0
  6778  01E7AA  00                 	db	0
  6779  01E7AB  00                 	db	0
  6780  01E7AC  00                 	db	0
  6781  01E7AD  00                 	db	0
  6782  01E7AE  00                 	db	0
  6783  01E7AF  00                 	db	0
  6784  01E7B0  00                 	db	0
  6785  01E7B1  00                 	db	0
  6786  01E7B2  00                 	db	0
  6787  01E7B3  00                 	db	0
  6788  01E7B4  00                 	db	0
  6789  01E7B5  00                 	db	0
  6790  01E7B6  00                 	db	0
  6791  01E7B7  00                 	db	0
  6792  01E7B8  00                 	db	0
  6793  01E7B9  00                 	db	0
  6794  01E7BA  00                 	db	0
  6795  01E7BB  00                 	db	0
  6796  01E7BC  00                 	db	0
  6797  01E7BD  00                 	db	0
  6798  01E7BE  00                 	db	0
  6799  01E7BF  00                 	db	0
  6800  01E7C0  00                 	db	0
  6801  01E7C1  00                 	db	0
  6802  01E7C2  00                 	db	0
  6803  01E7C3  00                 	db	0
  6804  01E7C4  00                 	db	0
  6805  01E7C5  00                 	db	0
  6806  01E7C6  00                 	db	0
  6807  01E7C7  00                 	db	0
  6808  01E7C8  00                 	db	0
  6809  01E7C9  00                 	db	0
  6810  01E7CA  00                 	db	0
  6811  01E7CB  00                 	db	0
  6812  01E7CC  00                 	db	0
  6813  01E7CD  00                 	db	0
  6814  01E7CE  00                 	db	0
  6815  01E7CF  00                 	db	0
  6816  01E7D0  00                 	db	0
  6817  01E7D1  00                 	db	0
  6818  01E7D2  00                 	db	0
  6819  01E7D3  00                 	db	0
  6820  01E7D4  00                 	db	0
  6821  01E7D5  00                 	db	0
  6822  01E7D6  00                 	db	0
  6823  01E7D7  00                 	db	0
  6824  01E7D8  00                 	db	0
  6825  01E7D9  00                 	db	0
  6826  01E7DA  00                 	db	0
  6827  01E7DB  00                 	db	0
  6828  01E7DC  00                 	db	0
  6829  01E7DD  00                 	db	0
  6830  01E7DE  00                 	db	0
  6831  01E7DF  00                 	db	0
  6832  01E7E0  00                 	db	0
  6833  01E7E1  00                 	db	0
  6834  01E7E2  00                 	db	0
  6835  01E7E3  00                 	db	0
  6836  01E7E4  00                 	db	0
  6837  01E7E5  00                 	db	0
  6838  01E7E6  00                 	db	0
  6839  01E7E7  00                 	db	0
  6840  01E7E8  00                 	db	0
  6841  01E7E9  00                 	db	0
  6842  01E7EA  00                 	db	0
  6843  01E7EB  00                 	db	0
  6844  01E7EC  00                 	db	0
  6845  01E7ED  00                 	db	0
  6846  01E7EE  00                 	db	0
  6847  01E7EF  00                 	db	0
  6848  01E7F0  00                 	db	0
  6849  01E7F1  00                 	db	0
  6850  01E7F2  00                 	db	0
  6851  01E7F3  00                 	db	0
  6852  01E7F4  00                 	db	0
  6853  01E7F5  00                 	db	0
  6854  01E7F6  00                 	db	0
  6855  01E7F7  00                 	db	0
  6856  01E7F8  00                 	db	0
  6857  01E7F9  00                 	db	0
  6858  01E7FA  00                 	db	0
  6859  01E7FB  00                 	db	0
  6860  01E7FC  00                 	db	0
  6861  01E7FD  00                 	db	0
  6862  01E7FE  00                 	db	0
  6863  01E7FF  00                 	db	0
  6864  01E800  00                 	db	0
  6865  01E801  00                 	db	0
  6866  01E802  00                 	db	0
  6867  01E803  00                 	db	0
  6868  01E804  00                 	db	0
  6869  01E805  00                 	db	0
  6870  01E806  00                 	db	0
  6871  01E807  00                 	db	0
  6872  01E808  00                 	db	0
  6873  01E809  00                 	db	0
  6874  01E80A  00                 	db	0
  6875  01E80B  00                 	db	0
  6876  01E80C  00                 	db	0
  6877  01E80D  00                 	db	0
  6878  01E80E  00                 	db	0
  6879  01E80F  00                 	db	0
  6880  01E810  00                 	db	0
  6881  01E811  00                 	db	0
  6882  01E812  00                 	db	0
  6883  01E813  00                 	db	0
  6884  01E814  00                 	db	0
  6885  01E815  00                 	db	0
  6886  01E816  00                 	db	0
  6887  01E817  00                 	db	0
  6888  01E818  00                 	db	0
  6889  01E819  00                 	db	0
  6890  01E81A  00                 	db	0
  6891  01E81B  00                 	db	0
  6892  01E81C  00                 	db	0
  6893  01E81D  00                 	db	0
  6894  01E81E  00                 	db	0
  6895  01E81F  00                 	db	0
  6896  01E820  00                 	db	0
  6897  01E821  00                 	db	0
  6898  01E822  00                 	db	0
  6899  01E823  00                 	db	0
  6900  01E824  00                 	db	0
  6901  01E825  00                 	db	0
  6902  01E826  00                 	db	0
  6903  01E827  00                 	db	0
  6904  01E828  00                 	db	0
  6905  01E829  00                 	db	0
  6906  01E82A  00                 	db	0
  6907  01E82B  00                 	db	0
  6908  01E82C  00                 	db	0
  6909  01E82D  00                 	db	0
  6910  01E82E  00                 	db	0
  6911  01E82F  00                 	db	0
  6912  01E830  00                 	db	0
  6913  01E831  00                 	db	0
  6914  01E832  00                 	db	0
  6915  01E833  00                 	db	0
  6916  01E834  00                 	db	0
  6917  01E835  00                 	db	0
  6918  01E836  00                 	db	0
  6919  01E837  00                 	db	0
  6920  01E838  00                 	db	0
  6921  01E839  00                 	db	0
  6922  01E83A  00                 	db	0
  6923  01E83B  00                 	db	0
  6924  01E83C  00                 	db	0
  6925  01E83D  00                 	db	0
  6926  01E83E  00                 	db	0
  6927  01E83F  00                 	db	0
  6928  01E840  00                 	db	0
  6929  01E841  00                 	db	0
  6930  01E842  00                 	db	0
  6931  01E843  00                 	db	0
  6932  01E844  00                 	db	0
  6933  01E845  00                 	db	0
  6934  01E846  00                 	db	0
  6935  01E847  00                 	db	0
  6936  01E848  00                 	db	0
  6937  01E849  00                 	db	0
  6938  01E84A  00                 	db	0
  6939  01E84B  00                 	db	0
  6940  01E84C  00                 	db	0
  6941  01E84D  00                 	db	0
  6942  01E84E  00                 	db	0
  6943  01E84F  00                 	db	0
  6944  01E850  00                 	db	0
  6945  01E851  00                 	db	0
  6946  01E852  00                 	db	0
  6947  01E853  00                 	db	0
  6948  01E854  00                 	db	0
  6949  01E855  00                 	db	0
  6950  01E856  00                 	db	0
  6951  01E857  00                 	db	0
  6952  01E858  00                 	db	0
  6953  01E859  00                 	db	0
  6954  01E85A  00                 	db	0
  6955  01E85B  00                 	db	0
  6956  01E85C  00                 	db	0
  6957  01E85D  00                 	db	0
  6958  01E85E  00                 	db	0
  6959  01E85F  00                 	db	0
  6960  01E860  00                 	db	0
  6961  01E861  00                 	db	0
  6962  01E862  00                 	db	0
  6963  01E863  00                 	db	0
  6964  01E864  00                 	db	0
  6965  01E865  00                 	db	0
  6966  01E866  00                 	db	0
  6967  01E867  00                 	db	0
  6968  01E868  00                 	db	0
  6969  01E869  00                 	db	0
  6970  01E86A  00                 	db	0
  6971  01E86B  00                 	db	0
  6972  01E86C  00                 	db	0
  6973  01E86D  00                 	db	0
  6974  01E86E  00                 	db	0
  6975  01E86F  00                 	db	0
  6976  01E870  00                 	db	0
  6977  01E871  00                 	db	0
  6978  01E872  00                 	db	0
  6979  01E873  00                 	db	0
  6980  01E874  00                 	db	0
  6981  01E875  00                 	db	0
  6982  01E876  00                 	db	0
  6983  01E877  00                 	db	0
  6984  01E878  00                 	db	0
  6985  01E879  00                 	db	0
  6986  01E87A  00                 	db	0
  6987  01E87B  00                 	db	0
  6988  01E87C  00                 	db	0
  6989  01E87D  00                 	db	0
  6990  01E87E  00                 	db	0
  6991  01E87F  00                 	db	0
  6992  01E880  00                 	db	0
  6993  01E881  00                 	db	0
  6994  01E882  00                 	db	0
  6995  01E883  00                 	db	0
  6996  01E884  00                 	db	0
  6997  01E885  00                 	db	0
  6998  01E886  00                 	db	0
  6999  01E887  00                 	db	0
  7000  01E888  00                 	db	0
  7001  01E889  00                 	db	0
  7002  01E88A  00                 	db	0
  7003  01E88B  00                 	db	0
  7004  01E88C  00                 	db	0
  7005  01E88D  00                 	db	0
  7006  01E88E  00                 	db	0
  7007  01E88F  00                 	db	0
  7008  01E890  00                 	db	0
  7009  01E891  00                 	db	0
  7010  01E892  00                 	db	0
  7011  01E893  00                 	db	0
  7012  01E894  00                 	db	0
  7013  01E895  00                 	db	0
  7014  01E896  00                 	db	0
  7015  01E897  00                 	db	0
  7016  01E898  00                 	db	0
  7017  01E899  00                 	db	0
  7018  01E89A  00                 	db	0
  7019  01E89B  00                 	db	0
  7020  01E89C  00                 	db	0
  7021  01E89D  00                 	db	0
  7022  01E89E  00                 	db	0
  7023  01E89F  00                 	db	0
  7024  01E8A0  00                 	db	0
  7025  01E8A1  00                 	db	0
  7026  01E8A2  00                 	db	0
  7027  01E8A3  00                 	db	0
  7028  01E8A4  00                 	db	0
  7029  01E8A5  00                 	db	0
  7030  01E8A6  00                 	db	0
  7031  01E8A7  00                 	db	0
  7032  01E8A8  00                 	db	0
  7033  01E8A9  00                 	db	0
  7034  01E8AA  00                 	db	0
  7035  01E8AB  00                 	db	0
  7036  01E8AC  00                 	db	0
  7037  01E8AD  00                 	db	0
  7038  01E8AE  00                 	db	0
  7039  01E8AF  00                 	db	0
  7040  01E8B0  00                 	db	0
  7041  01E8B1  00                 	db	0
  7042  01E8B2  00                 	db	0
  7043  01E8B3  00                 	db	0
  7044  01E8B4  00                 	db	0
  7045  01E8B5  00                 	db	0
  7046  01E8B6  00                 	db	0
  7047  01E8B7  00                 	db	0
  7048  01E8B8  00                 	db	0
  7049  01E8B9  00                 	db	0
  7050  01E8BA  00                 	db	0
  7051  01E8BB  00                 	db	0
  7052  01E8BC  00                 	db	0
  7053  01E8BD  00                 	db	0
  7054  01E8BE  00                 	db	0
  7055  01E8BF  00                 	db	0
  7056  01E8C0  00                 	db	0
  7057  01E8C1  00                 	db	0
  7058  01E8C2  00                 	db	0
  7059  01E8C3  00                 	db	0
  7060  01E8C4  00                 	db	0
  7061  01E8C5  00                 	db	0
  7062  01E8C6  00                 	db	0
  7063  01E8C7  00                 	db	0
  7064  01E8C8  00                 	db	0
  7065  01E8C9  00                 	db	0
  7066  01E8CA  00                 	db	0
  7067  01E8CB  00                 	db	0
  7068  01E8CC  00                 	db	0
  7069  01E8CD  00                 	db	0
  7070  01E8CE  00                 	db	0
  7071  01E8CF  00                 	db	0
  7072  01E8D0  00                 	db	0
  7073  01E8D1  00                 	db	0
  7074  01E8D2  00                 	db	0
  7075  01E8D3  00                 	db	0
  7076  01E8D4  00                 	db	0
  7077  01E8D5  00                 	db	0
  7078  01E8D6  00                 	db	0
  7079  01E8D7  00                 	db	0
  7080  01E8D8  00                 	db	0
  7081  01E8D9  00                 	db	0
  7082  01E8DA  00                 	db	0
  7083  01E8DB  00                 	db	0
  7084  01E8DC  00                 	db	0
  7085  01E8DD  00                 	db	0
  7086  01E8DE  00                 	db	0
  7087  01E8DF  00                 	db	0
  7088  01E8E0  00                 	db	0
  7089  01E8E1  00                 	db	0
  7090  01E8E2  00                 	db	0
  7091  01E8E3  00                 	db	0
  7092  01E8E4  00                 	db	0
  7093  01E8E5  00                 	db	0
  7094  01E8E6  00                 	db	0
  7095  01E8E7  00                 	db	0
  7096  01E8E8  00                 	db	0
  7097  01E8E9  00                 	db	0
  7098  01E8EA  00                 	db	0
  7099  01E8EB  00                 	db	0
  7100  01E8EC  00                 	db	0
  7101  01E8ED  00                 	db	0
  7102  01E8EE  00                 	db	0
  7103  01E8EF  00                 	db	0
  7104  01E8F0  00                 	db	0
  7105  01E8F1  00                 	db	0
  7106  01E8F2  00                 	db	0
  7107  01E8F3  00                 	db	0
  7108  01E8F4  00                 	db	0
  7109  01E8F5  00                 	db	0
  7110  01E8F6  00                 	db	0
  7111  01E8F7  00                 	db	0
  7112  01E8F8  00                 	db	0
  7113  01E8F9  00                 	db	0
  7114  01E8FA  00                 	db	0
  7115  01E8FB  00                 	db	0
  7116  01E8FC  00                 	db	0
  7117  01E8FD  00                 	db	0
  7118  01E8FE  00                 	db	0
  7119  01E8FF  00                 	db	0
  7120  01E900  00                 	db	0
  7121  01E901  00                 	db	0
  7122  01E902  00                 	db	0
  7123  01E903  00                 	db	0
  7124  01E904  00                 	db	0
  7125  01E905  00                 	db	0
  7126  01E906  00                 	db	0
  7127  01E907  00                 	db	0
  7128  01E908  00                 	db	0
  7129  01E909  00                 	db	0
  7130  01E90A  00                 	db	0
  7131  01E90B  00                 	db	0
  7132  01E90C  00                 	db	0
  7133  01E90D  00                 	db	0
  7134  01E90E  00                 	db	0
  7135  01E90F  00                 	db	0
  7136  01E910  00                 	db	0
  7137  01E911  00                 	db	0
  7138  01E912  00                 	db	0
  7139  01E913  00                 	db	0
  7140  01E914  00                 	db	0
  7141  01E915  00                 	db	0
  7142  01E916  00                 	db	0
  7143  01E917  00                 	db	0
  7144  01E918  00                 	db	0
  7145  01E919  00                 	db	0
  7146  01E91A  00                 	db	0
  7147  01E91B  00                 	db	0
  7148  01E91C  00                 	db	0
  7149  01E91D  00                 	db	0
  7150  01E91E  00                 	db	0
  7151  01E91F  00                 	db	0
  7152  01E920  00                 	db	0
  7153  01E921  00                 	db	0
  7154  01E922  00                 	db	0
  7155  01E923  00                 	db	0
  7156  01E924  00                 	db	0
  7157  01E925  00                 	db	0
  7158  01E926  00                 	db	0
  7159  01E927  00                 	db	0
  7160  01E928  00                 	db	0
  7161  01E929  00                 	db	0
  7162  01E92A  00                 	db	0
  7163  01E92B  00                 	db	0
  7164  01E92C  00                 	db	0
  7165  01E92D  00                 	db	0
  7166  01E92E  00                 	db	0
  7167  01E92F  00                 	db	0
  7168  01E930  00                 	db	0
  7169  01E931  00                 	db	0
  7170  01E932  00                 	db	0
  7171  01E933  00                 	db	0
  7172  01E934  00                 	db	0
  7173  01E935  00                 	db	0
  7174  01E936  00                 	db	0
  7175  01E937  00                 	db	0
  7176  01E938  00                 	db	0
  7177  01E939  00                 	db	0
  7178  01E93A  00                 	db	0
  7179  01E93B  00                 	db	0
  7180  01E93C  00                 	db	0
  7181  01E93D  00                 	db	0
  7182  01E93E  00                 	db	0
  7183  01E93F  00                 	db	0
  7184  01E940  00                 	db	0
  7185  01E941  00                 	db	0
  7186  01E942  00                 	db	0
  7187  01E943  00                 	db	0
  7188  01E944  00                 	db	0
  7189  01E945  00                 	db	0
  7190  01E946  00                 	db	0
  7191  01E947  00                 	db	0
  7192  01E948  00                 	db	0
  7193  01E949  00                 	db	0
  7194  01E94A  00                 	db	0
  7195  01E94B  00                 	db	0
  7196  01E94C  00                 	db	0
  7197  01E94D  00                 	db	0
  7198  01E94E  00                 	db	0
  7199  01E94F  00                 	db	0
  7200  01E950  00                 	db	0
  7201  01E951  00                 	db	0
  7202  01E952  00                 	db	0
  7203  01E953  00                 	db	0
  7204  01E954  00                 	db	0
  7205  01E955  00                 	db	0
  7206  01E956  00                 	db	0
  7207  01E957  00                 	db	0
  7208  01E958  00                 	db	0
  7209  01E959  00                 	db	0
  7210  01E95A  00                 	db	0
  7211  01E95B  00                 	db	0
  7212  01E95C  00                 	db	0
  7213  01E95D  00                 	db	0
  7214  01E95E  00                 	db	0
  7215  01E95F  00                 	db	0
  7216  01E960  00                 	db	0
  7217  01E961  00                 	db	0
  7218  01E962  00                 	db	0
  7219  01E963  00                 	db	0
  7220  01E964  00                 	db	0
  7221  01E965  00                 	db	0
  7222  01E966  00                 	db	0
  7223  01E967  00                 	db	0
  7224  01E968  00                 	db	0
  7225  01E969  00                 	db	0
  7226  01E96A  00                 	db	0
  7227  01E96B  00                 	db	0
  7228  01E96C  00                 	db	0
  7229  01E96D  00                 	db	0
  7230  01E96E  00                 	db	0
  7231  01E96F  00                 	db	0
  7232  01E970  00                 	db	0
  7233  01E971  00                 	db	0
  7234  01E972  00                 	db	0
  7235  01E973  00                 	db	0
  7236  01E974  00                 	db	0
  7237  01E975  00                 	db	0
  7238  01E976  00                 	db	0
  7239  01E977  00                 	db	0
  7240  01E978  00                 	db	0
  7241  01E979  00                 	db	0
  7242  01E97A  00                 	db	0
  7243  01E97B  00                 	db	0
  7244  01E97C  00                 	db	0
  7245  01E97D  00                 	db	0
  7246  01E97E  00                 	db	0
  7247  01E97F  00                 	db	0
  7248  01E980  00                 	db	0
  7249  01E981  00                 	db	0
  7250  01E982  00                 	db	0
  7251  01E983  00                 	db	0
  7252  01E984  00                 	db	0
  7253  01E985  00                 	db	0
  7254  01E986  00                 	db	0
  7255  01E987  00                 	db	0
  7256  01E988  00                 	db	0
  7257  01E989  00                 	db	0
  7258  01E98A  00                 	db	0
  7259  01E98B  00                 	db	0
  7260  01E98C  00                 	db	0
  7261  01E98D  00                 	db	0
  7262  01E98E  00                 	db	0
  7263  01E98F  00                 	db	0
  7264  01E990  00                 	db	0
  7265  01E991  00                 	db	0
  7266  01E992  00                 	db	0
  7267  01E993  00                 	db	0
  7268  01E994  00                 	db	0
  7269  01E995  00                 	db	0
  7270  01E996  00                 	db	0
  7271  01E997  00                 	db	0
  7272  01E998  00                 	db	0
  7273  01E999  00                 	db	0
  7274  01E99A  00                 	db	0
  7275  01E99B  00                 	db	0
  7276  01E99C  00                 	db	0
  7277  01E99D  00                 	db	0
  7278  01E99E  00                 	db	0
  7279  01E99F  00                 	db	0
  7280  01E9A0  00                 	db	0
  7281  01E9A1  00                 	db	0
  7282  01E9A2  00                 	db	0
  7283  01E9A3  00                 	db	0
  7284  01E9A4  00                 	db	0
  7285  01E9A5  00                 	db	0
  7286  01E9A6  00                 	db	0
  7287  01E9A7  00                 	db	0
  7288  01E9A8  00                 	db	0
  7289  01E9A9  00                 	db	0
  7290  01E9AA  00                 	db	0
  7291  01E9AB  00                 	db	0
  7292  01E9AC  00                 	db	0
  7293  01E9AD  00                 	db	0
  7294  01E9AE  00                 	db	0
  7295  01E9AF  00                 	db	0
  7296  01E9B0  00                 	db	0
  7297  01E9B1  00                 	db	0
  7298  01E9B2  00                 	db	0
  7299  01E9B3  00                 	db	0
  7300  01E9B4  00                 	db	0
  7301  01E9B5  00                 	db	0
  7302  01E9B6  00                 	db	0
  7303  01E9B7  00                 	db	0
  7304  01E9B8  00                 	db	0
  7305  01E9B9  00                 	db	0
  7306  01E9BA  00                 	db	0
  7307  01E9BB  00                 	db	0
  7308  01E9BC  00                 	db	0
  7309  01E9BD  00                 	db	0
  7310  01E9BE  00                 	db	0
  7311  01E9BF  00                 	db	0
  7312  01E9C0  00                 	db	0
  7313  01E9C1  00                 	db	0
  7314  01E9C2  00                 	db	0
  7315  01E9C3  00                 	db	0
  7316  01E9C4  00                 	db	0
  7317  01E9C5  00                 	db	0
  7318  01E9C6  00                 	db	0
  7319  01E9C7  00                 	db	0
  7320  01E9C8  00                 	db	0
  7321  01E9C9  00                 	db	0
  7322  01E9CA  00                 	db	0
  7323  01E9CB  00                 	db	0
  7324  01E9CC  00                 	db	0
  7325  01E9CD  00                 	db	0
  7326  01E9CE  00                 	db	0
  7327  01E9CF  00                 	db	0
  7328  01E9D0  00                 	db	0
  7329  01E9D1  00                 	db	0
  7330  01E9D2  00                 	db	0
  7331  01E9D3  00                 	db	0
  7332  01E9D4  00                 	db	0
  7333  01E9D5  00                 	db	0
  7334  01E9D6  00                 	db	0
  7335  01E9D7  00                 	db	0
  7336  01E9D8  00                 	db	0
  7337  01E9D9  00                 	db	0
  7338  01E9DA  00                 	db	0
  7339  01E9DB  00                 	db	0
  7340  01E9DC  00                 	db	0
  7341  01E9DD  00                 	db	0
  7342  01E9DE  00                 	db	0
  7343  01E9DF  00                 	db	0
  7344  01E9E0  00                 	db	0
  7345  01E9E1  00                 	db	0
  7346  01E9E2  00                 	db	0
  7347  01E9E3  00                 	db	0
  7348  01E9E4  00                 	db	0
  7349  01E9E5  00                 	db	0
  7350  01E9E6  00                 	db	0
  7351  01E9E7  00                 	db	0
  7352  01E9E8  00                 	db	0
  7353  01E9E9  00                 	db	0
  7354  01E9EA  00                 	db	0
  7355  01E9EB  00                 	db	0
  7356  01E9EC  00                 	db	0
  7357  01E9ED  00                 	db	0
  7358  01E9EE  00                 	db	0
  7359  01E9EF  00                 	db	0
  7360  01E9F0  00                 	db	0
  7361  01E9F1  00                 	db	0
  7362  01E9F2  00                 	db	0
  7363  01E9F3  00                 	db	0
  7364  01E9F4  00                 	db	0
  7365  01E9F5  00                 	db	0
  7366  01E9F6  00                 	db	0
  7367  01E9F7  00                 	db	0
  7368  01E9F8  00                 	db	0
  7369  01E9F9  00                 	db	0
  7370  01E9FA  00                 	db	0
  7371  01E9FB  00                 	db	0
  7372  01E9FC  00                 	db	0
  7373  01E9FD  00                 	db	0
  7374  01E9FE  00                 	db	0
  7375  01E9FF  00                 	db	0
  7376  01EA00  00                 	db	0
  7377  01EA01  00                 	db	0
  7378  01EA02  00                 	db	0
  7379  01EA03  00                 	db	0
  7380  01EA04  00                 	db	0
  7381  01EA05  00                 	db	0
  7382  01EA06  00                 	db	0
  7383  01EA07  00                 	db	0
  7384  01EA08  00                 	db	0
  7385  01EA09  00                 	db	0
  7386  01EA0A  00                 	db	0
  7387  01EA0B  00                 	db	0
  7388  01EA0C  00                 	db	0
  7389  01EA0D  00                 	db	0
  7390  01EA0E  00                 	db	0
  7391  01EA0F  00                 	db	0
  7392  01EA10  00                 	db	0
  7393  01EA11  00                 	db	0
  7394  01EA12  00                 	db	0
  7395  01EA13  00                 	db	0
  7396  01EA14  00                 	db	0
  7397  01EA15  00                 	db	0
  7398  01EA16  00                 	db	0
  7399  01EA17  00                 	db	0
  7400  01EA18  00                 	db	0
  7401  01EA19  00                 	db	0
  7402  01EA1A  00                 	db	0
  7403  01EA1B  00                 	db	0
  7404  01EA1C  00                 	db	0
  7405  01EA1D  00                 	db	0
  7406  01EA1E  00                 	db	0
  7407  01EA1F  00                 	db	0
  7408  01EA20  00                 	db	0
  7409  01EA21  00                 	db	0
  7410  01EA22  00                 	db	0
  7411  01EA23  00                 	db	0
  7412  01EA24  00                 	db	0
  7413  01EA25  00                 	db	0
  7414  01EA26  00                 	db	0
  7415  01EA27  00                 	db	0
  7416  01EA28  00                 	db	0
  7417  01EA29  00                 	db	0
  7418  01EA2A  00                 	db	0
  7419  01EA2B  00                 	db	0
  7420  01EA2C  00                 	db	0
  7421  01EA2D  00                 	db	0
  7422  01EA2E  00                 	db	0
  7423  01EA2F  00                 	db	0
  7424  01EA30  00                 	db	0
  7425  01EA31  00                 	db	0
  7426  01EA32  00                 	db	0
  7427  01EA33  00                 	db	0
  7428  01EA34  00                 	db	0
  7429  01EA35  00                 	db	0
  7430  01EA36  00                 	db	0
  7431  01EA37  00                 	db	0
  7432  01EA38  00                 	db	0
  7433  01EA39  00                 	db	0
  7434  01EA3A  00                 	db	0
  7435  01EA3B  00                 	db	0
  7436  01EA3C  00                 	db	0
  7437  01EA3D  00                 	db	0
  7438  01EA3E  00                 	db	0
  7439  01EA3F  00                 	db	0
  7440  01EA40  00                 	db	0
  7441  01EA41  00                 	db	0
  7442  01EA42  00                 	db	0
  7443  01EA43  00                 	db	0
  7444  01EA44  00                 	db	0
  7445  01EA45  00                 	db	0
  7446  01EA46  00                 	db	0
  7447  01EA47  00                 	db	0
  7448  01EA48  00                 	db	0
  7449  01EA49  00                 	db	0
  7450  01EA4A  00                 	db	0
  7451  01EA4B  00                 	db	0
  7452  01EA4C  00                 	db	0
  7453  01EA4D  00                 	db	0
  7454  01EA4E  00                 	db	0
  7455  01EA4F  00                 	db	0
  7456  01EA50  00                 	db	0
  7457  01EA51  00                 	db	0
  7458  01EA52  00                 	db	0
  7459  01EA53  00                 	db	0
  7460  01EA54  00                 	db	0
  7461  01EA55  00                 	db	0
  7462  01EA56  00                 	db	0
  7463  01EA57  00                 	db	0
  7464  01EA58  00                 	db	0
  7465  01EA59  00                 	db	0
  7466  01EA5A  00                 	db	0
  7467  01EA5B  00                 	db	0
  7468  01EA5C  00                 	db	0
  7469  01EA5D  00                 	db	0
  7470  01EA5E  00                 	db	0
  7471  01EA5F  00                 	db	0
  7472  01EA60  00                 	db	0
  7473  01EA61  00                 	db	0
  7474  01EA62  00                 	db	0
  7475  01EA63  00                 	db	0
  7476  01EA64  00                 	db	0
  7477  01EA65  00                 	db	0
  7478  01EA66  00                 	db	0
  7479  01EA67  00                 	db	0
  7480  01EA68  00                 	db	0
  7481  01EA69  00                 	db	0
  7482  01EA6A  00                 	db	0
  7483  01EA6B  00                 	db	0
  7484  01EA6C  00                 	db	0
  7485  01EA6D  00                 	db	0
  7486  01EA6E  00                 	db	0
  7487  01EA6F  00                 	db	0
  7488  01EA70  00                 	db	0
  7489  01EA71  00                 	db	0
  7490  01EA72  00                 	db	0
  7491  01EA73  00                 	db	0
  7492  01EA74  00                 	db	0
  7493  01EA75  00                 	db	0
  7494  01EA76  00                 	db	0
  7495  01EA77  00                 	db	0
  7496  01EA78  00                 	db	0
  7497  01EA79  00                 	db	0
  7498  01EA7A  00                 	db	0
  7499  01EA7B  00                 	db	0
  7500  01EA7C  00                 	db	0
  7501  01EA7D  00                 	db	0
  7502  01EA7E  00                 	db	0
  7503  01EA7F  00                 	db	0
  7504  01EA80  00                 	db	0
  7505  01EA81  00                 	db	0
  7506  01EA82  00                 	db	0
  7507  01EA83  00                 	db	0
  7508  01EA84  00                 	db	0
  7509  01EA85  00                 	db	0
  7510  01EA86  00                 	db	0
  7511  01EA87  00                 	db	0
  7512  01EA88  00                 	db	0
  7513  01EA89  00                 	db	0
  7514  01EA8A  00                 	db	0
  7515  01EA8B  00                 	db	0
  7516  01EA8C  00                 	db	0
  7517  01EA8D  00                 	db	0
  7518  01EA8E  00                 	db	0
  7519  01EA8F  00                 	db	0
  7520  01EA90  00                 	db	0
  7521  01EA91  00                 	db	0
  7522  01EA92  00                 	db	0
  7523  01EA93  00                 	db	0
  7524  01EA94  00                 	db	0
  7525  01EA95  00                 	db	0
  7526  01EA96  00                 	db	0
  7527  01EA97  00                 	db	0
  7528  01EA98  00                 	db	0
  7529  01EA99  00                 	db	0
  7530  01EA9A  00                 	db	0
  7531  01EA9B  00                 	db	0
  7532  01EA9C  00                 	db	0
  7533  01EA9D  00                 	db	0
  7534  01EA9E  00                 	db	0
  7535  01EA9F  00                 	db	0
  7536  01EAA0  00                 	db	0
  7537  01EAA1  00                 	db	0
  7538  01EAA2  00                 	db	0
  7539  01EAA3  00                 	db	0
  7540  01EAA4  00                 	db	0
  7541  01EAA5  00                 	db	0
  7542  01EAA6  00                 	db	0
  7543  01EAA7  00                 	db	0
  7544  01EAA8  00                 	db	0
  7545  01EAA9  00                 	db	0
  7546  01EAAA  00                 	db	0
  7547  01EAAB  00                 	db	0
  7548  01EAAC  00                 	db	0
  7549  01EAAD  00                 	db	0
  7550  01EAAE  00                 	db	0
  7551  01EAAF  00                 	db	0
  7552  01EAB0  00                 	db	0
  7553  01EAB1  00                 	db	0
  7554  01EAB2  00                 	db	0
  7555  01EAB3  00                 	db	0
  7556  01EAB4  00                 	db	0
  7557  01EAB5  00                 	db	0
  7558  01EAB6  00                 	db	0
  7559  01EAB7  00                 	db	0
  7560  01EAB8  00                 	db	0
  7561  01EAB9  00                 	db	0
  7562  01EABA  00                 	db	0
  7563  01EABB  00                 	db	0
  7564  01EABC  00                 	db	0
  7565  01EABD  00                 	db	0
  7566  01EABE  00                 	db	0
  7567  01EABF  00                 	db	0
  7568  01EAC0  00                 	db	0
  7569  01EAC1  00                 	db	0
  7570  01EAC2  00                 	db	0
  7571  01EAC3  00                 	db	0
  7572  01EAC4  00                 	db	0
  7573  01EAC5  00                 	db	0
  7574  01EAC6  00                 	db	0
  7575  01EAC7  00                 	db	0
  7576  01EAC8  00                 	db	0
  7577  01EAC9  00                 	db	0
  7578  01EACA  00                 	db	0
  7579  01EACB  00                 	db	0
  7580  01EACC  00                 	db	0
  7581  01EACD  00                 	db	0
  7582  01EACE  00                 	db	0
  7583  01EACF  00                 	db	0
  7584  01EAD0  00                 	db	0
  7585  01EAD1  00                 	db	0
  7586  01EAD2  00                 	db	0
  7587  01EAD3  00                 	db	0
  7588  01EAD4  00                 	db	0
  7589  01EAD5  00                 	db	0
  7590  01EAD6  00                 	db	0
  7591  01EAD7  00                 	db	0
  7592  01EAD8  00                 	db	0
  7593  01EAD9  00                 	db	0
  7594  01EADA  00                 	db	0
  7595  01EADB  00                 	db	0
  7596  01EADC  00                 	db	0
  7597  01EADD  00                 	db	0
  7598  01EADE  00                 	db	0
  7599  01EADF  00                 	db	0
  7600  01EAE0  00                 	db	0
  7601  01EAE1  00                 	db	0
  7602  01EAE2  00                 	db	0
  7603  01EAE3  00                 	db	0
  7604  01EAE4  00                 	db	0
  7605  01EAE5  00                 	db	0
  7606  01EAE6  00                 	db	0
  7607  01EAE7  00                 	db	0
  7608  01EAE8  00                 	db	0
  7609  01EAE9  00                 	db	0
  7610  01EAEA  00                 	db	0
  7611  01EAEB  00                 	db	0
  7612  01EAEC  00                 	db	0
  7613  01EAED  00                 	db	0
  7614  01EAEE  00                 	db	0
  7615  01EAEF  00                 	db	0
  7616  01EAF0  00                 	db	0
  7617  01EAF1  00                 	db	0
  7618  01EAF2  00                 	db	0
  7619  01EAF3  00                 	db	0
  7620  01EAF4  00                 	db	0
  7621  01EAF5  00                 	db	0
  7622  01EAF6  00                 	db	0
  7623  01EAF7  00                 	db	0
  7624  01EAF8  00                 	db	0
  7625  01EAF9  00                 	db	0
  7626  01EAFA  00                 	db	0
  7627  01EAFB  00                 	db	0
  7628  01EAFC  00                 	db	0
  7629  01EAFD  00                 	db	0
  7630  01EAFE  00                 	db	0
  7631  01EAFF  00                 	db	0
  7632  01EB00  00                 	db	0
  7633  01EB01  00                 	db	0
  7634  01EB02  00                 	db	0
  7635  01EB03  00                 	db	0
  7636  01EB04  00                 	db	0
  7637  01EB05  00                 	db	0
  7638  01EB06  00                 	db	0
  7639  01EB07  00                 	db	0
  7640  01EB08  00                 	db	0
  7641  01EB09  00                 	db	0
  7642  01EB0A  00                 	db	0
  7643  01EB0B  00                 	db	0
  7644  01EB0C  00                 	db	0
  7645  01EB0D  00                 	db	0
  7646  01EB0E  00                 	db	0
  7647  01EB0F  00                 	db	0
  7648  01EB10  00                 	db	0
  7649  01EB11  00                 	db	0
  7650  01EB12  00                 	db	0
  7651  01EB13  00                 	db	0
  7652  01EB14  00                 	db	0
  7653  01EB15  00                 	db	0
  7654  01EB16  00                 	db	0
  7655  01EB17  00                 	db	0
  7656  01EB18  00                 	db	0
  7657  01EB19  00                 	db	0
  7658  01EB1A  00                 	db	0
  7659  01EB1B  00                 	db	0
  7660  01EB1C  00                 	db	0
  7661  01EB1D  00                 	db	0
  7662  01EB1E  00                 	db	0
  7663  01EB1F  00                 	db	0
  7664  01EB20  00                 	db	0
  7665  01EB21  00                 	db	0
  7666  01EB22  00                 	db	0
  7667  01EB23  00                 	db	0
  7668  01EB24  00                 	db	0
  7669  01EB25  00                 	db	0
  7670  01EB26  00                 	db	0
  7671  01EB27  00                 	db	0
  7672  01EB28  00                 	db	0
  7673  01EB29  00                 	db	0
  7674  01EB2A  00                 	db	0
  7675  01EB2B  00                 	db	0
  7676  01EB2C  00                 	db	0
  7677  01EB2D  00                 	db	0
  7678  01EB2E  00                 	db	0
  7679  01EB2F  00                 	db	0
  7680  01EB30  00                 	db	0
  7681  01EB31  00                 	db	0
  7682  01EB32  00                 	db	0
  7683  01EB33  00                 	db	0
  7684  01EB34  00                 	db	0
  7685  01EB35  00                 	db	0
  7686  01EB36  00                 	db	0
  7687  01EB37  00                 	db	0
  7688  01EB38  00                 	db	0
  7689  01EB39  00                 	db	0
  7690  01EB3A  00                 	db	0
  7691  01EB3B  00                 	db	0
  7692  01EB3C  00                 	db	0
  7693  01EB3D  00                 	db	0
  7694  01EB3E  00                 	db	0
  7695  01EB3F  00                 	db	0
  7696  01EB40  00                 	db	0
  7697  01EB41  00                 	db	0
  7698  01EB42  00                 	db	0
  7699  01EB43  00                 	db	0
  7700  01EB44  00                 	db	0
  7701  01EB45  00                 	db	0
  7702  01EB46  00                 	db	0
  7703  01EB47  00                 	db	0
  7704  01EB48  00                 	db	0
  7705  01EB49  00                 	db	0
  7706  01EB4A  00                 	db	0
  7707  01EB4B  00                 	db	0
  7708  01EB4C  00                 	db	0
  7709  01EB4D  00                 	db	0
  7710  01EB4E  00                 	db	0
  7711  01EB4F  00                 	db	0
  7712  01EB50  00                 	db	0
  7713  01EB51  00                 	db	0
  7714  01EB52  00                 	db	0
  7715  01EB53  00                 	db	0
  7716  01EB54  00                 	db	0
  7717  01EB55  00                 	db	0
  7718  01EB56  00                 	db	0
  7719  01EB57  00                 	db	0
  7720  01EB58  00                 	db	0
  7721  01EB59  00                 	db	0
  7722  01EB5A  00                 	db	0
  7723  01EB5B  00                 	db	0
  7724  01EB5C  00                 	db	0
  7725  01EB5D  00                 	db	0
  7726  01EB5E  00                 	db	0
  7727  01EB5F  00                 	db	0
  7728  01EB60  00                 	db	0
  7729  01EB61  00                 	db	0
  7730  01EB62  00                 	db	0
  7731  01EB63  00                 	db	0
  7732  01EB64  00                 	db	0
  7733  01EB65  00                 	db	0
  7734  01EB66  00                 	db	0
  7735  01EB67  00                 	db	0
  7736  01EB68  00                 	db	0
  7737  01EB69  00                 	db	0
  7738  01EB6A  00                 	db	0
  7739  01EB6B  00                 	db	0
  7740  01EB6C  00                 	db	0
  7741  01EB6D  00                 	db	0
  7742  01EB6E  00                 	db	0
  7743  01EB6F  00                 	db	0
  7744  01EB70  00                 	db	0
  7745  01EB71  00                 	db	0
  7746  01EB72  00                 	db	0
  7747  01EB73  00                 	db	0
  7748  01EB74  00                 	db	0
  7749  01EB75  00                 	db	0
  7750  01EB76  00                 	db	0
  7751  01EB77  00                 	db	0
  7752  01EB78  00                 	db	0
  7753  01EB79  00                 	db	0
  7754  01EB7A  00                 	db	0
  7755  01EB7B  00                 	db	0
  7756  01EB7C  00                 	db	0
  7757  01EB7D  00                 	db	0
  7758  01EB7E  00                 	db	0
  7759  01EB7F  00                 	db	0
  7760  01EB80  00                 	db	0
  7761  01EB81  00                 	db	0
  7762  01EB82  00                 	db	0
  7763  01EB83  00                 	db	0
  7764  01EB84  00                 	db	0
  7765  01EB85  00                 	db	0
  7766  01EB86  00                 	db	0
  7767  01EB87  00                 	db	0
  7768  01EB88  00                 	db	0
  7769  01EB89  00                 	db	0
  7770  01EB8A  00                 	db	0
  7771  01EB8B  00                 	db	0
  7772  01EB8C  00                 	db	0
  7773  01EB8D  00                 	db	0
  7774  01EB8E  00                 	db	0
  7775  01EB8F  00                 	db	0
  7776  01EB90  00                 	db	0
  7777  01EB91  00                 	db	0
  7778  01EB92  00                 	db	0
  7779  01EB93  00                 	db	0
  7780  01EB94  00                 	db	0
  7781  01EB95  00                 	db	0
  7782  01EB96  00                 	db	0
  7783  01EB97  00                 	db	0
  7784  01EB98  00                 	db	0
  7785  01EB99  00                 	db	0
  7786  01EB9A  00                 	db	0
  7787  01EB9B  00                 	db	0
  7788  01EB9C  00                 	db	0
  7789  01EB9D  00                 	db	0
  7790  01EB9E  00                 	db	0
  7791  01EB9F  00                 	db	0
  7792  01EBA0  00                 	db	0
  7793  01EBA1  00                 	db	0
  7794  01EBA2  00                 	db	0
  7795  01EBA3  00                 	db	0
  7796  01EBA4  00                 	db	0
  7797  01EBA5  00                 	db	0
  7798  01EBA6  00                 	db	0
  7799  01EBA7  00                 	db	0
  7800  01EBA8  00                 	db	0
  7801  01EBA9  00                 	db	0
  7802  01EBAA  00                 	db	0
  7803  01EBAB  00                 	db	0
  7804  01EBAC  00                 	db	0
  7805  01EBAD  00                 	db	0
  7806  01EBAE  00                 	db	0
  7807  01EBAF  00                 	db	0
  7808  01EBB0  00                 	db	0
  7809  01EBB1  00                 	db	0
  7810  01EBB2  00                 	db	0
  7811  01EBB3  00                 	db	0
  7812  01EBB4  00                 	db	0
  7813  01EBB5  00                 	db	0
  7814  01EBB6  00                 	db	0
  7815  01EBB7  00                 	db	0
  7816  01EBB8  00                 	db	0
  7817  01EBB9  00                 	db	0
  7818  01EBBA  00                 	db	0
  7819  01EBBB  00                 	db	0
  7820  01EBBC  00                 	db	0
  7821  01EBBD  00                 	db	0
  7822  01EBBE  00                 	db	0
  7823  01EBBF  00                 	db	0
  7824  01EBC0  00                 	db	0
  7825  01EBC1  00                 	db	0
  7826  01EBC2  00                 	db	0
  7827  01EBC3  00                 	db	0
  7828  01EBC4  00                 	db	0
  7829  01EBC5  00                 	db	0
  7830  01EBC6  00                 	db	0
  7831  01EBC7  00                 	db	0
  7832  01EBC8  00                 	db	0
  7833  01EBC9  00                 	db	0
  7834  01EBCA  00                 	db	0
  7835  01EBCB  00                 	db	0
  7836  01EBCC  00                 	db	0
  7837  01EBCD  00                 	db	0
  7838  01EBCE  00                 	db	0
  7839  01EBCF  00                 	db	0
  7840  01EBD0  00                 	db	0
  7841  01EBD1  00                 	db	0
  7842  01EBD2  00                 	db	0
  7843  01EBD3  00                 	db	0
  7844  01EBD4  00                 	db	0
  7845  01EBD5  00                 	db	0
  7846  01EBD6  00                 	db	0
  7847  01EBD7  00                 	db	0
  7848  01EBD8  00                 	db	0
  7849  01EBD9  00                 	db	0
  7850  01EBDA  00                 	db	0
  7851  01EBDB  00                 	db	0
  7852  01EBDC  00                 	db	0
  7853  01EBDD  00                 	db	0
  7854  01EBDE  00                 	db	0
  7855  01EBDF  00                 	db	0
  7856  01EBE0  00                 	db	0
  7857  01EBE1  00                 	db	0
  7858  01EBE2  00                 	db	0
  7859  01EBE3  00                 	db	0
  7860  01EBE4  00                 	db	0
  7861  01EBE5  00                 	db	0
  7862  01EBE6  00                 	db	0
  7863  01EBE7  00                 	db	0
  7864  01EBE8  00                 	db	0
  7865  01EBE9  00                 	db	0
  7866  01EBEA  00                 	db	0
  7867  01EBEB  00                 	db	0
  7868  01EBEC  00                 	db	0
  7869  01EBED  00                 	db	0
  7870  01EBEE  00                 	db	0
  7871  01EBEF  00                 	db	0
  7872  01EBF0  00                 	db	0
  7873  01EBF1  00                 	db	0
  7874  01EBF2  00                 	db	0
  7875  01EBF3  00                 	db	0
  7876  01EBF4  00                 	db	0
  7877  01EBF5  00                 	db	0
  7878  01EBF6  00                 	db	0
  7879  01EBF7  00                 	db	0
  7880  01EBF8  00                 	db	0
  7881  01EBF9  00                 	db	0
  7882  01EBFA  00                 	db	0
  7883  01EBFB  00                 	db	0
  7884  01EBFC  00                 	db	0
  7885  01EBFD  00                 	db	0
  7886  01EBFE  00                 	db	0
  7887  01EBFF  00                 	db	0
  7888  01EC00  00                 	db	0
  7889  01EC01  00                 	db	0
  7890  01EC02  00                 	db	0
  7891  01EC03  00                 	db	0
  7892  01EC04  00                 	db	0
  7893  01EC05  00                 	db	0
  7894  01EC06  00                 	db	0
  7895  01EC07  00                 	db	0
  7896  01EC08  00                 	db	0
  7897  01EC09  00                 	db	0
  7898  01EC0A  00                 	db	0
  7899  01EC0B  00                 	db	0
  7900  01EC0C  00                 	db	0
  7901  01EC0D  00                 	db	0
  7902  01EC0E  00                 	db	0
  7903  01EC0F  00                 	db	0
  7904  01EC10  00                 	db	0
  7905  01EC11  00                 	db	0
  7906  01EC12  00                 	db	0
  7907  01EC13  00                 	db	0
  7908  01EC14  00                 	db	0
  7909  01EC15  00                 	db	0
  7910  01EC16  00                 	db	0
  7911  01EC17  00                 	db	0
  7912  01EC18  00                 	db	0
  7913  01EC19  00                 	db	0
  7914  01EC1A  00                 	db	0
  7915  01EC1B  00                 	db	0
  7916  01EC1C  00                 	db	0
  7917  01EC1D  00                 	db	0
  7918  01EC1E  00                 	db	0
  7919  01EC1F  00                 	db	0
  7920  01EC20  00                 	db	0
  7921  01EC21  00                 	db	0
  7922  01EC22  00                 	db	0
  7923  01EC23  00                 	db	0
  7924  01EC24  00                 	db	0
  7925  01EC25  00                 	db	0
  7926  01EC26  00                 	db	0
  7927  01EC27  00                 	db	0
  7928  01EC28  00                 	db	0
  7929  01EC29  00                 	db	0
  7930  01EC2A  00                 	db	0
  7931  01EC2B  00                 	db	0
  7932  01EC2C  00                 	db	0
  7933  01EC2D  00                 	db	0
  7934  01EC2E  00                 	db	0
  7935  01EC2F  00                 	db	0
  7936  01EC30  00                 	db	0
  7937  01EC31  00                 	db	0
  7938  01EC32  00                 	db	0
  7939  01EC33  00                 	db	0
  7940  01EC34  00                 	db	0
  7941  01EC35  00                 	db	0
  7942  01EC36  00                 	db	0
  7943  01EC37  00                 	db	0
  7944  01EC38  00                 	db	0
  7945  01EC39  00                 	db	0
  7946  01EC3A  00                 	db	0
  7947  01EC3B  00                 	db	0
  7948  01EC3C  00                 	db	0
  7949  01EC3D  00                 	db	0
  7950  01EC3E  00                 	db	0
  7951  01EC3F  00                 	db	0
  7952  01EC40  00                 	db	0
  7953  01EC41  00                 	db	0
  7954  01EC42  00                 	db	0
  7955  01EC43  00                 	db	0
  7956  01EC44  00                 	db	0
  7957  01EC45  00                 	db	0
  7958  01EC46  00                 	db	0
  7959  01EC47  00                 	db	0
  7960  01EC48  00                 	db	0
  7961  01EC49  00                 	db	0
  7962  01EC4A  00                 	db	0
  7963  01EC4B  00                 	db	0
  7964  01EC4C  00                 	db	0
  7965  01EC4D  00                 	db	0
  7966  01EC4E  00                 	db	0
  7967  01EC4F  00                 	db	0
  7968  01EC50  00                 	db	0
  7969  01EC51  00                 	db	0
  7970  01EC52  00                 	db	0
  7971  01EC53  00                 	db	0
  7972  01EC54  00                 	db	0
  7973  01EC55  00                 	db	0
  7974  01EC56  00                 	db	0
  7975  01EC57  00                 	db	0
  7976  01EC58  00                 	db	0
  7977  01EC59  00                 	db	0
  7978  01EC5A  00                 	db	0
  7979  01EC5B  00                 	db	0
  7980  01EC5C  00                 	db	0
  7981  01EC5D  00                 	db	0
  7982  01EC5E  00                 	db	0
  7983  01EC5F  00                 	db	0
  7984  01EC60  00                 	db	0
  7985  01EC61  00                 	db	0
  7986  01EC62  00                 	db	0
  7987  01EC63  00                 	db	0
  7988  01EC64  00                 	db	0
  7989  01EC65  00                 	db	0
  7990  01EC66  00                 	db	0
  7991  01EC67  00                 	db	0
  7992  01EC68  00                 	db	0
  7993  01EC69  00                 	db	0
  7994  01EC6A  00                 	db	0
  7995  01EC6B  00                 	db	0
  7996  01EC6C  00                 	db	0
  7997  01EC6D  00                 	db	0
  7998  01EC6E  00                 	db	0
  7999  01EC6F  00                 	db	0
  8000  01EC70  00                 	db	0
  8001  01EC71  00                 	db	0
  8002  01EC72  00                 	db	0
  8003  01EC73  00                 	db	0
  8004  01EC74  00                 	db	0
  8005  01EC75  00                 	db	0
  8006  01EC76  00                 	db	0
  8007  01EC77  00                 	db	0
  8008  01EC78  00                 	db	0
  8009  01EC79  00                 	db	0
  8010  01EC7A  00                 	db	0
  8011  01EC7B  00                 	db	0
  8012  01EC7C  00                 	db	0
  8013  01EC7D  00                 	db	0
  8014  01EC7E  00                 	db	0
  8015  01EC7F  00                 	db	0
  8016  01EC80  00                 	db	0
  8017  01EC81  00                 	db	0
  8018  01EC82  00                 	db	0
  8019  01EC83  00                 	db	0
  8020  01EC84  00                 	db	0
  8021  01EC85  00                 	db	0
  8022  01EC86  00                 	db	0
  8023  01EC87  00                 	db	0
  8024  01EC88  00                 	db	0
  8025  01EC89  00                 	db	0
  8026  01EC8A  00                 	db	0
  8027  01EC8B  00                 	db	0
  8028  01EC8C  00                 	db	0
  8029  01EC8D  00                 	db	0
  8030  01EC8E  00                 	db	0
  8031  01EC8F  00                 	db	0
  8032  01EC90  00                 	db	0
  8033  01EC91  00                 	db	0
  8034  01EC92  00                 	db	0
  8035  01EC93  00                 	db	0
  8036  01EC94  00                 	db	0
  8037  01EC95  00                 	db	0
  8038  01EC96  00                 	db	0
  8039  01EC97  00                 	db	0
  8040  01EC98  00                 	db	0
  8041  01EC99  00                 	db	0
  8042  01EC9A  00                 	db	0
  8043  01EC9B  00                 	db	0
  8044  01EC9C  00                 	db	0
  8045  01EC9D  00                 	db	0
  8046  01EC9E  00                 	db	0
  8047  01EC9F  00                 	db	0
  8048  01ECA0  00                 	db	0
  8049  01ECA1  00                 	db	0
  8050  01ECA2  00                 	db	0
  8051  01ECA3  00                 	db	0
  8052  01ECA4  00                 	db	0
  8053  01ECA5  00                 	db	0
  8054  01ECA6  00                 	db	0
  8055  01ECA7  00                 	db	0
  8056  01ECA8  00                 	db	0
  8057  01ECA9  00                 	db	0
  8058  01ECAA  00                 	db	0
  8059  01ECAB  00                 	db	0
  8060  01ECAC  00                 	db	0
  8061  01ECAD  00                 	db	0
  8062  01ECAE  00                 	db	0
  8063  01ECAF  00                 	db	0
  8064  01ECB0  00                 	db	0
  8065  01ECB1  00                 	db	0
  8066  01ECB2  00                 	db	0
  8067  01ECB3  00                 	db	0
  8068  01ECB4  00                 	db	0
  8069  01ECB5  00                 	db	0
  8070  01ECB6  00                 	db	0
  8071  01ECB7  00                 	db	0
  8072  01ECB8  00                 	db	0
  8073  01ECB9  00                 	db	0
  8074  01ECBA  00                 	db	0
  8075  01ECBB  00                 	db	0
  8076  01ECBC  00                 	db	0
  8077  01ECBD  00                 	db	0
  8078  01ECBE  00                 	db	0
  8079  01ECBF  00                 	db	0
  8080  01ECC0  00                 	db	0
  8081  01ECC1  00                 	db	0
  8082  01ECC2  00                 	db	0
  8083  01ECC3  00                 	db	0
  8084  01ECC4  00                 	db	0
  8085  01ECC5  00                 	db	0
  8086  01ECC6  00                 	db	0
  8087  01ECC7  00                 	db	0
  8088  01ECC8  00                 	db	0
  8089  01ECC9  00                 	db	0
  8090  01ECCA  00                 	db	0
  8091  01ECCB  00                 	db	0
  8092  01ECCC  00                 	db	0
  8093  01ECCD  00                 	db	0
  8094  01ECCE  00                 	db	0
  8095  01ECCF  00                 	db	0
  8096  01ECD0  00                 	db	0
  8097  01ECD1  00                 	db	0
  8098  01ECD2  00                 	db	0
  8099  01ECD3  00                 	db	0
  8100  01ECD4  00                 	db	0
  8101  01ECD5  00                 	db	0
  8102  01ECD6  00                 	db	0
  8103  01ECD7  00                 	db	0
  8104  01ECD8  00                 	db	0
  8105  01ECD9  00                 	db	0
  8106  01ECDA  00                 	db	0
  8107  01ECDB  00                 	db	0
  8108  01ECDC  00                 	db	0
  8109  01ECDD  00                 	db	0
  8110  01ECDE  00                 	db	0
  8111  01ECDF  00                 	db	0
  8112  01ECE0  00                 	db	0
  8113  01ECE1  00                 	db	0
  8114  01ECE2  00                 	db	0
  8115  01ECE3  00                 	db	0
  8116  01ECE4  00                 	db	0
  8117  01ECE5  00                 	db	0
  8118  01ECE6  00                 	db	0
  8119  01ECE7  00                 	db	0
  8120  01ECE8  00                 	db	0
  8121  01ECE9  00                 	db	0
  8122  01ECEA  00                 	db	0
  8123  01ECEB  00                 	db	0
  8124  01ECEC  00                 	db	0
  8125  01ECED  00                 	db	0
  8126  01ECEE  00                 	db	0
  8127  01ECEF  00                 	db	0
  8128  01ECF0  00                 	db	0
  8129  01ECF1  00                 	db	0
  8130  01ECF2  00                 	db	0
  8131  01ECF3  00                 	db	0
  8132  01ECF4  00                 	db	0
  8133  01ECF5  00                 	db	0
  8134  01ECF6  00                 	db	0
  8135  01ECF7  00                 	db	0
  8136  01ECF8  00                 	db	0
  8137  01ECF9  00                 	db	0
  8138  01ECFA  00                 	db	0
  8139  01ECFB  00                 	db	0
  8140  01ECFC  00                 	db	0
  8141  01ECFD  00                 	db	0
  8142  01ECFE  00                 	db	0
  8143  01ECFF  00                 	db	0
  8144  01ED00  00                 	db	0
  8145  01ED01  00                 	db	0
  8146  01ED02  00                 	db	0
  8147  01ED03  00                 	db	0
  8148  01ED04  00                 	db	0
  8149  01ED05  00                 	db	0
  8150  01ED06  00                 	db	0
  8151  01ED07  00                 	db	0
  8152  01ED08  00                 	db	0
  8153  01ED09  00                 	db	0
  8154  01ED0A  00                 	db	0
  8155  01ED0B  00                 	db	0
  8156  01ED0C  00                 	db	0
  8157  01ED0D  00                 	db	0
  8158  01ED0E  00                 	db	0
  8159  01ED0F  00                 	db	0
  8160  01ED10  00                 	db	0
  8161  01ED11  00                 	db	0
  8162  01ED12  00                 	db	0
  8163  01ED13  00                 	db	0
  8164  01ED14  00                 	db	0
  8165  01ED15  00                 	db	0
  8166  01ED16  00                 	db	0
  8167  01ED17  00                 	db	0
  8168  01ED18  00                 	db	0
  8169  01ED19  00                 	db	0
  8170  01ED1A  00                 	db	0
  8171  01ED1B  00                 	db	0
  8172  01ED1C  00                 	db	0
  8173  01ED1D  00                 	db	0
  8174  01ED1E  00                 	db	0
  8175  01ED1F  00                 	db	0
  8176  01ED20  00                 	db	0
  8177  01ED21  00                 	db	0
  8178  01ED22  00                 	db	0
  8179  01ED23  00                 	db	0
  8180  01ED24  00                 	db	0
  8181  01ED25  00                 	db	0
  8182  01ED26  00                 	db	0
  8183  01ED27  00                 	db	0
  8184  01ED28  00                 	db	0
  8185  01ED29  00                 	db	0
  8186  01ED2A  00                 	db	0
  8187  01ED2B  00                 	db	0
  8188  01ED2C  00                 	db	0
  8189  01ED2D  00                 	db	0
  8190  01ED2E  00                 	db	0
  8191  01ED2F  00                 	db	0
  8192  01ED30  00                 	db	0
  8193  01ED31  00                 	db	0
  8194  01ED32  00                 	db	0
  8195  01ED33  00                 	db	0
  8196  01ED34  00                 	db	0
  8197  01ED35  00                 	db	0
  8198  01ED36  00                 	db	0
  8199  01ED37  00                 	db	0
  8200  01ED38  00                 	db	0
  8201  01ED39  00                 	db	0
  8202  01ED3A  00                 	db	0
  8203  01ED3B  00                 	db	0
  8204  01ED3C  00                 	db	0
  8205  01ED3D  00                 	db	0
  8206  01ED3E  00                 	db	0
  8207  01ED3F  00                 	db	0
  8208  01ED40  00                 	db	0
  8209  01ED41  00                 	db	0
  8210  01ED42  00                 	db	0
  8211  01ED43  00                 	db	0
  8212  01ED44  00                 	db	0
  8213  01ED45  00                 	db	0
  8214  01ED46  00                 	db	0
  8215  01ED47  00                 	db	0
  8216  01ED48  00                 	db	0
  8217  01ED49  00                 	db	0
  8218  01ED4A  00                 	db	0
  8219  01ED4B  00                 	db	0
  8220  01ED4C  00                 	db	0
  8221  01ED4D  00                 	db	0
  8222  01ED4E  00                 	db	0
  8223  01ED4F  00                 	db	0
  8224  01ED50  00                 	db	0
  8225  01ED51  00                 	db	0
  8226  01ED52  00                 	db	0
  8227  01ED53  00                 	db	0
  8228  01ED54  00                 	db	0
  8229  01ED55  00                 	db	0
  8230  01ED56  00                 	db	0
  8231  01ED57  00                 	db	0
  8232  01ED58  00                 	db	0
  8233  01ED59  00                 	db	0
  8234  01ED5A  00                 	db	0
  8235  01ED5B  00                 	db	0
  8236  01ED5C  00                 	db	0
  8237  01ED5D  00                 	db	0
  8238  01ED5E  00                 	db	0
  8239  01ED5F  00                 	db	0
  8240  01ED60  00                 	db	0
  8241  01ED61  00                 	db	0
  8242  01ED62  00                 	db	0
  8243  01ED63  00                 	db	0
  8244  01ED64  00                 	db	0
  8245  01ED65  00                 	db	0
  8246  01ED66  00                 	db	0
  8247  01ED67  00                 	db	0
  8248  01ED68  00                 	db	0
  8249  01ED69  00                 	db	0
  8250  01ED6A  00                 	db	0
  8251  01ED6B  00                 	db	0
  8252  01ED6C  00                 	db	0
  8253  01ED6D  00                 	db	0
  8254  01ED6E  00                 	db	0
  8255  01ED6F  00                 	db	0
  8256  01ED70  00                 	db	0
  8257  01ED71  00                 	db	0
  8258  01ED72  00                 	db	0
  8259  01ED73  00                 	db	0
  8260  01ED74  00                 	db	0
  8261  01ED75  00                 	db	0
  8262  01ED76  00                 	db	0
  8263  01ED77  00                 	db	0
  8264  01ED78  00                 	db	0
  8265  01ED79  00                 	db	0
  8266  01ED7A  00                 	db	0
  8267  01ED7B  00                 	db	0
  8268  01ED7C  00                 	db	0
  8269  01ED7D  00                 	db	0
  8270  01ED7E  00                 	db	0
  8271  01ED7F  00                 	db	0
  8272  01ED80  00                 	db	0
  8273  01ED81  00                 	db	0
  8274  01ED82  00                 	db	0
  8275  01ED83  00                 	db	0
  8276  01ED84  00                 	db	0
  8277  01ED85  00                 	db	0
  8278  01ED86  00                 	db	0
  8279  01ED87  00                 	db	0
  8280  01ED88  00                 	db	0
  8281  01ED89  00                 	db	0
  8282  01ED8A  00                 	db	0
  8283  01ED8B  00                 	db	0
  8284  01ED8C  00                 	db	0
  8285  01ED8D  00                 	db	0
  8286  01ED8E  00                 	db	0
  8287  01ED8F  00                 	db	0
  8288  01ED90  00                 	db	0
  8289  01ED91  00                 	db	0
  8290  01ED92  00                 	db	0
  8291  01ED93  00                 	db	0
  8292  01ED94  00                 	db	0
  8293  01ED95  00                 	db	0
  8294  01ED96  00                 	db	0
  8295  01ED97  00                 	db	0
  8296  01ED98  00                 	db	0
  8297  01ED99  00                 	db	0
  8298  01ED9A  00                 	db	0
  8299  01ED9B  00                 	db	0
  8300  01ED9C  00                 	db	0
  8301  01ED9D  00                 	db	0
  8302  01ED9E  00                 	db	0
  8303  01ED9F  00                 	db	0
  8304  01EDA0  00                 	db	0
  8305  01EDA1  00                 	db	0
  8306  01EDA2  00                 	db	0
  8307  01EDA3  00                 	db	0
  8308  01EDA4  00                 	db	0
  8309  01EDA5  00                 	db	0
  8310  01EDA6  00                 	db	0
  8311  01EDA7  00                 	db	0
  8312  01EDA8  00                 	db	0
  8313  01EDA9  00                 	db	0
  8314  01EDAA  00                 	db	0
  8315  01EDAB  00                 	db	0
  8316  01EDAC  00                 	db	0
  8317  01EDAD  00                 	db	0
  8318  01EDAE  00                 	db	0
  8319  01EDAF  00                 	db	0
  8320  01EDB0  00                 	db	0
  8321  01EDB1  00                 	db	0
  8322  01EDB2  00                 	db	0
  8323  01EDB3  00                 	db	0
  8324  01EDB4  00                 	db	0
  8325  01EDB5  00                 	db	0
  8326  01EDB6  00                 	db	0
  8327  01EDB7  00                 	db	0
  8328  01EDB8  00                 	db	0
  8329  01EDB9  00                 	db	0
  8330  01EDBA  00                 	db	0
  8331  01EDBB  00                 	db	0
  8332  01EDBC  00                 	db	0
  8333  01EDBD  00                 	db	0
  8334  01EDBE  00                 	db	0
  8335  01EDBF  00                 	db	0
  8336  01EDC0  00                 	db	0
  8337  01EDC1  00                 	db	0
  8338  01EDC2  00                 	db	0
  8339  01EDC3  00                 	db	0
  8340  01EDC4  00                 	db	0
  8341  01EDC5  00                 	db	0
  8342  01EDC6  00                 	db	0
  8343  01EDC7  00                 	db	0
  8344  01EDC8  00                 	db	0
  8345  01EDC9  00                 	db	0
  8346  01EDCA  00                 	db	0
  8347  01EDCB  00                 	db	0
  8348  01EDCC  00                 	db	0
  8349  01EDCD  00                 	db	0
  8350  01EDCE  00                 	db	0
  8351  01EDCF  00                 	db	0
  8352  01EDD0  00                 	db	0
  8353  01EDD1  00                 	db	0
  8354  01EDD2  00                 	db	0
  8355  01EDD3  00                 	db	0
  8356  01EDD4  00                 	db	0
  8357  01EDD5  00                 	db	0
  8358  01EDD6  00                 	db	0
  8359  01EDD7  00                 	db	0
  8360  01EDD8  00                 	db	0
  8361  01EDD9  00                 	db	0
  8362  01EDDA  00                 	db	0
  8363  01EDDB  00                 	db	0
  8364  01EDDC  00                 	db	0
  8365  01EDDD  00                 	db	0
  8366  01EDDE  00                 	db	0
  8367  01EDDF  00                 	db	0
  8368  01EDE0  00                 	db	0
  8369  01EDE1  00                 	db	0
  8370  01EDE2  00                 	db	0
  8371  01EDE3  00                 	db	0
  8372  01EDE4  00                 	db	0
  8373  01EDE5  00                 	db	0
  8374  01EDE6  00                 	db	0
  8375  01EDE7  00                 	db	0
  8376  01EDE8  00                 	db	0
  8377  01EDE9  00                 	db	0
  8378  01EDEA  00                 	db	0
  8379  01EDEB  00                 	db	0
  8380  01EDEC  00                 	db	0
  8381  01EDED  00                 	db	0
  8382  01EDEE  00                 	db	0
  8383  01EDEF  00                 	db	0
  8384  01EDF0  00                 	db	0
  8385  01EDF1  00                 	db	0
  8386  01EDF2  00                 	db	0
  8387  01EDF3  00                 	db	0
  8388  01EDF4  00                 	db	0
  8389  01EDF5  00                 	db	0
  8390  01EDF6  00                 	db	0
  8391  01EDF7  00                 	db	0
  8392  01EDF8  00                 	db	0
  8393  01EDF9  00                 	db	0
  8394  01EDFA  00                 	db	0
  8395  01EDFB  00                 	db	0
  8396  01EDFC  00                 	db	0
  8397  01EDFD  00                 	db	0
  8398  01EDFE  00                 	db	0
  8399  01EDFF  00                 	db	0
  8400  01EE00  00                 	db	0
  8401  01EE01  00                 	db	0
  8402  01EE02  00                 	db	0
  8403  01EE03  00                 	db	0
  8404  01EE04  00                 	db	0
  8405  01EE05  00                 	db	0
  8406  01EE06  00                 	db	0
  8407  01EE07  00                 	db	0
  8408  01EE08  00                 	db	0
  8409  01EE09  00                 	db	0
  8410  01EE0A  00                 	db	0
  8411  01EE0B  00                 	db	0
  8412  01EE0C  00                 	db	0
  8413  01EE0D  00                 	db	0
  8414  01EE0E  00                 	db	0
  8415  01EE0F  00                 	db	0
  8416  01EE10  00                 	db	0
  8417  01EE11  00                 	db	0
  8418  01EE12  00                 	db	0
  8419  01EE13  00                 	db	0
  8420  01EE14  00                 	db	0
  8421  01EE15  00                 	db	0
  8422  01EE16  00                 	db	0
  8423  01EE17  00                 	db	0
  8424  01EE18  00                 	db	0
  8425  01EE19  00                 	db	0
  8426  01EE1A  00                 	db	0
  8427  01EE1B  00                 	db	0
  8428  01EE1C  00                 	db	0
  8429  01EE1D  00                 	db	0
  8430  01EE1E  00                 	db	0
  8431  01EE1F  00                 	db	0
  8432  01EE20  00                 	db	0
  8433  01EE21  00                 	db	0
  8434  01EE22  00                 	db	0
  8435  01EE23  00                 	db	0
  8436  01EE24  00                 	db	0
  8437  01EE25  00                 	db	0
  8438  01EE26  00                 	db	0
  8439  01EE27  00                 	db	0
  8440  01EE28  00                 	db	0
  8441  01EE29  00                 	db	0
  8442  01EE2A  00                 	db	0
  8443  01EE2B  00                 	db	0
  8444  01EE2C  00                 	db	0
  8445  01EE2D  00                 	db	0
  8446  01EE2E  00                 	db	0
  8447  01EE2F  00                 	db	0
  8448  01EE30  00                 	db	0
  8449  01EE31  00                 	db	0
  8450  01EE32  00                 	db	0
  8451  01EE33  00                 	db	0
  8452  01EE34  00                 	db	0
  8453  01EE35  00                 	db	0
  8454  01EE36  00                 	db	0
  8455  01EE37  00                 	db	0
  8456  01EE38  00                 	db	0
  8457  01EE39  00                 	db	0
  8458  01EE3A  00                 	db	0
  8459  01EE3B  00                 	db	0
  8460  01EE3C  00                 	db	0
  8461  01EE3D  00                 	db	0
  8462  01EE3E  00                 	db	0
  8463  01EE3F  00                 	db	0
  8464  01EE40  00                 	db	0
  8465  01EE41  00                 	db	0
  8466  01EE42  00                 	db	0
  8467  01EE43  00                 	db	0
  8468  01EE44  00                 	db	0
  8469  01EE45  00                 	db	0
  8470  01EE46  00                 	db	0
  8471  01EE47  00                 	db	0
  8472  01EE48  00                 	db	0
  8473  01EE49  00                 	db	0
  8474  01EE4A  00                 	db	0
  8475  01EE4B  00                 	db	0
  8476  01EE4C  00                 	db	0
  8477  01EE4D  00                 	db	0
  8478  01EE4E  00                 	db	0
  8479  01EE4F  00                 	db	0
  8480  01EE50  00                 	db	0
  8481  01EE51  00                 	db	0
  8482  01EE52  00                 	db	0
  8483  01EE53  00                 	db	0
  8484  01EE54  00                 	db	0
  8485  01EE55  00                 	db	0
  8486  01EE56  00                 	db	0
  8487  01EE57  00                 	db	0
  8488  01EE58  00                 	db	0
  8489  01EE59  00                 	db	0
  8490  01EE5A  00                 	db	0
  8491  01EE5B  00                 	db	0
  8492  01EE5C  00                 	db	0
  8493  01EE5D  00                 	db	0
  8494  01EE5E  00                 	db	0
  8495  01EE5F  00                 	db	0
  8496  01EE60  00                 	db	0
  8497  01EE61  00                 	db	0
  8498  01EE62  00                 	db	0
  8499  01EE63  00                 	db	0
  8500  01EE64  00                 	db	0
  8501  01EE65  00                 	db	0
  8502  01EE66  00                 	db	0
  8503  01EE67  00                 	db	0
  8504  01EE68  00                 	db	0
  8505  01EE69  00                 	db	0
  8506  01EE6A  00                 	db	0
  8507  01EE6B  00                 	db	0
  8508  01EE6C  00                 	db	0
  8509  01EE6D  00                 	db	0
  8510  01EE6E  00                 	db	0
  8511  01EE6F  00                 	db	0
  8512  01EE70  00                 	db	0
  8513  01EE71  00                 	db	0
  8514  01EE72  00                 	db	0
  8515  01EE73  00                 	db	0
  8516  01EE74  00                 	db	0
  8517  01EE75  00                 	db	0
  8518  01EE76  00                 	db	0
  8519  01EE77  00                 	db	0
  8520  01EE78  00                 	db	0
  8521  01EE79  00                 	db	0
  8522  01EE7A  00                 	db	0
  8523  01EE7B  00                 	db	0
  8524  01EE7C  00                 	db	0
  8525  01EE7D  00                 	db	0
  8526  01EE7E  00                 	db	0
  8527  01EE7F  00                 	db	0
  8528  01EE80  00                 	db	0
  8529  01EE81  00                 	db	0
  8530  01EE82  00                 	db	0
  8531  01EE83  00                 	db	0
  8532  01EE84  00                 	db	0
  8533  01EE85  00                 	db	0
  8534  01EE86  00                 	db	0
  8535  01EE87  00                 	db	0
  8536  01EE88  00                 	db	0
  8537  01EE89  00                 	db	0
  8538  01EE8A  00                 	db	0
  8539  01EE8B  00                 	db	0
  8540  01EE8C  00                 	db	0
  8541  01EE8D  00                 	db	0
  8542  01EE8E  00                 	db	0
  8543  01EE8F  00                 	db	0
  8544  01EE90  00                 	db	0
  8545  01EE91  00                 	db	0
  8546  01EE92  00                 	db	0
  8547  01EE93  00                 	db	0
  8548  01EE94  00                 	db	0
  8549  01EE95  00                 	db	0
  8550  01EE96  00                 	db	0
  8551  01EE97  00                 	db	0
  8552  01EE98  00                 	db	0
  8553  01EE99  00                 	db	0
  8554  01EE9A  00                 	db	0
  8555  01EE9B  00                 	db	0
  8556  01EE9C  00                 	db	0
  8557  01EE9D  00                 	db	0
  8558  01EE9E  00                 	db	0
  8559  01EE9F  00                 	db	0
  8560  01EEA0  00                 	db	0
  8561  01EEA1  00                 	db	0
  8562  01EEA2  00                 	db	0
  8563  01EEA3  00                 	db	0
  8564  01EEA4  00                 	db	0
  8565  01EEA5  00                 	db	0
  8566  01EEA6  00                 	db	0
  8567  01EEA7  00                 	db	0
  8568  01EEA8  00                 	db	0
  8569  01EEA9  00                 	db	0
  8570  01EEAA  00                 	db	0
  8571  01EEAB  00                 	db	0
  8572  01EEAC  00                 	db	0
  8573  01EEAD  00                 	db	0
  8574  01EEAE  00                 	db	0
  8575  01EEAF  00                 	db	0
  8576  01EEB0  00                 	db	0
  8577  01EEB1  00                 	db	0
  8578  01EEB2  00                 	db	0
  8579  01EEB3  00                 	db	0
  8580  01EEB4  00                 	db	0
  8581  01EEB5  00                 	db	0
  8582  01EEB6  00                 	db	0
  8583  01EEB7  00                 	db	0
  8584  01EEB8  00                 	db	0
  8585  01EEB9  00                 	db	0
  8586  01EEBA  00                 	db	0
  8587  01EEBB  00                 	db	0
  8588  01EEBC  00                 	db	0
  8589  01EEBD  00                 	db	0
  8590  01EEBE  00                 	db	0
  8591  01EEBF  00                 	db	0
  8592  01EEC0  00                 	db	0
  8593  01EEC1  00                 	db	0
  8594  01EEC2  00                 	db	0
  8595  01EEC3  00                 	db	0
  8596  01EEC4  00                 	db	0
  8597  01EEC5  00                 	db	0
  8598  01EEC6  00                 	db	0
  8599  01EEC7  00                 	db	0
  8600  01EEC8  00                 	db	0
  8601  01EEC9  00                 	db	0
  8602  01EECA  00                 	db	0
  8603  01EECB  00                 	db	0
  8604  01EECC  00                 	db	0
  8605  01EECD  00                 	db	0
  8606  01EECE  00                 	db	0
  8607  01EECF  00                 	db	0
  8608  01EED0  00                 	db	0
  8609  01EED1  00                 	db	0
  8610  01EED2  00                 	db	0
  8611  01EED3  00                 	db	0
  8612  01EED4  00                 	db	0
  8613  01EED5  00                 	db	0
  8614  01EED6  00                 	db	0
  8615  01EED7  00                 	db	0
  8616  01EED8  00                 	db	0
  8617  01EED9  00                 	db	0
  8618  01EEDA  00                 	db	0
  8619  01EEDB  00                 	db	0
  8620  01EEDC  00                 	db	0
  8621  01EEDD  00                 	db	0
  8622  01EEDE  00                 	db	0
  8623  01EEDF  00                 	db	0
  8624  01EEE0  00                 	db	0
  8625  01EEE1  00                 	db	0
  8626  01EEE2  00                 	db	0
  8627  01EEE3  00                 	db	0
  8628  01EEE4  00                 	db	0
  8629  01EEE5  00                 	db	0
  8630  01EEE6  00                 	db	0
  8631  01EEE7  00                 	db	0
  8632  01EEE8  00                 	db	0
  8633  01EEE9  00                 	db	0
  8634  01EEEA  00                 	db	0
  8635  01EEEB  00                 	db	0
  8636  01EEEC  00                 	db	0
  8637  01EEED  00                 	db	0
  8638  01EEEE  00                 	db	0
  8639  01EEEF  00                 	db	0
  8640  01EEF0  00                 	db	0
  8641  01EEF1  00                 	db	0
  8642  01EEF2  00                 	db	0
  8643  01EEF3  00                 	db	0
  8644  01EEF4  00                 	db	0
  8645  01EEF5  00                 	db	0
  8646  01EEF6  00                 	db	0
  8647  01EEF7  00                 	db	0
  8648  01EEF8  00                 	db	0
  8649  01EEF9  00                 	db	0
  8650  01EEFA  00                 	db	0
  8651  01EEFB  00                 	db	0
  8652  01EEFC  00                 	db	0
  8653  01EEFD  00                 	db	0
  8654  01EEFE  00                 	db	0
  8655  01EEFF  00                 	db	0
  8656  01EF00  00                 	db	0
  8657  01EF01  00                 	db	0
  8658  01EF02  00                 	db	0
  8659  01EF03  00                 	db	0
  8660  01EF04  00                 	db	0
  8661  01EF05  00                 	db	0
  8662  01EF06  00                 	db	0
  8663  01EF07  00                 	db	0
  8664  01EF08  00                 	db	0
  8665  01EF09  00                 	db	0
  8666  01EF0A  00                 	db	0
  8667  01EF0B  00                 	db	0
  8668  01EF0C  00                 	db	0
  8669  01EF0D  00                 	db	0
  8670  01EF0E  00                 	db	0
  8671  01EF0F  00                 	db	0
  8672  01EF10  00                 	db	0
  8673  01EF11  00                 	db	0
  8674  01EF12  00                 	db	0
  8675  01EF13  00                 	db	0
  8676  01EF14  00                 	db	0
  8677  01EF15  00                 	db	0
  8678  01EF16  00                 	db	0
  8679  01EF17  00                 	db	0
  8680  01EF18  00                 	db	0
  8681  01EF19  00                 	db	0
  8682  01EF1A  00                 	db	0
  8683  01EF1B  00                 	db	0
  8684  01EF1C  00                 	db	0
  8685  01EF1D  00                 	db	0
  8686  01EF1E  00                 	db	0
  8687  01EF1F  00                 	db	0
  8688  01EF20  00                 	db	0
  8689  01EF21  00                 	db	0
  8690  01EF22  00                 	db	0
  8691  01EF23  00                 	db	0
  8692  01EF24  00                 	db	0
  8693  01EF25  00                 	db	0
  8694  01EF26  00                 	db	0
  8695  01EF27  00                 	db	0
  8696  01EF28  00                 	db	0
  8697  01EF29  00                 	db	0
  8698  01EF2A  00                 	db	0
  8699  01EF2B  00                 	db	0
  8700  01EF2C  00                 	db	0
  8701  01EF2D  00                 	db	0
  8702  01EF2E  00                 	db	0
  8703  01EF2F  00                 	db	0
  8704  01EF30  00                 	db	0
  8705  01EF31  00                 	db	0
  8706  01EF32  00                 	db	0
  8707  01EF33  00                 	db	0
  8708  01EF34  00                 	db	0
  8709  01EF35  00                 	db	0
  8710  01EF36  00                 	db	0
  8711  01EF37  00                 	db	0
  8712  01EF38  00                 	db	0
  8713  01EF39  00                 	db	0
  8714  01EF3A  00                 	db	0
  8715  01EF3B  00                 	db	0
  8716  01EF3C  00                 	db	0
  8717  01EF3D  00                 	db	0
  8718  01EF3E  00                 	db	0
  8719  01EF3F  00                 	db	0
  8720  01EF40  00                 	db	0
  8721  01EF41  00                 	db	0
  8722  01EF42  00                 	db	0
  8723  01EF43  00                 	db	0
  8724  01EF44  00                 	db	0
  8725  01EF45  00                 	db	0
  8726  01EF46  00                 	db	0
  8727  01EF47  00                 	db	0
  8728  01EF48  00                 	db	0
  8729  01EF49  00                 	db	0
  8730  01EF4A  00                 	db	0
  8731  01EF4B  00                 	db	0
  8732  01EF4C  00                 	db	0
  8733  01EF4D  00                 	db	0
  8734  01EF4E  00                 	db	0
  8735  01EF4F  00                 	db	0
  8736  01EF50  00                 	db	0
  8737  01EF51  00                 	db	0
  8738  01EF52  00                 	db	0
  8739  01EF53  00                 	db	0
  8740  01EF54  00                 	db	0
  8741  01EF55  00                 	db	0
  8742  01EF56  00                 	db	0
  8743  01EF57  00                 	db	0
  8744  01EF58  00                 	db	0
  8745  01EF59  00                 	db	0
  8746  01EF5A  00                 	db	0
  8747  01EF5B  00                 	db	0
  8748  01EF5C  00                 	db	0
  8749  01EF5D  00                 	db	0
  8750  01EF5E  00                 	db	0
  8751  01EF5F  00                 	db	0
  8752  01EF60  00                 	db	0
  8753  01EF61  00                 	db	0
  8754  01EF62  00                 	db	0
  8755  01EF63  00                 	db	0
  8756  01EF64  00                 	db	0
  8757  01EF65  00                 	db	0
  8758  01EF66  00                 	db	0
  8759  01EF67  00                 	db	0
  8760  01EF68  00                 	db	0
  8761  01EF69  00                 	db	0
  8762  01EF6A  00                 	db	0
  8763  01EF6B  00                 	db	0
  8764  01EF6C  00                 	db	0
  8765  01EF6D  00                 	db	0
  8766  01EF6E  00                 	db	0
  8767  01EF6F  00                 	db	0
  8768  01EF70  00                 	db	0
  8769  01EF71  00                 	db	0
  8770  01EF72  00                 	db	0
  8771  01EF73  00                 	db	0
  8772  01EF74  00                 	db	0
  8773  01EF75  00                 	db	0
  8774  01EF76  00                 	db	0
  8775  01EF77  00                 	db	0
  8776  01EF78  00                 	db	0
  8777  01EF79  00                 	db	0
  8778  01EF7A  00                 	db	0
  8779  01EF7B  00                 	db	0
  8780  01EF7C  00                 	db	0
  8781  01EF7D  00                 	db	0
  8782  01EF7E  00                 	db	0
  8783  01EF7F  00                 	db	0
  8784  01EF80  00                 	db	0
  8785  01EF81  00                 	db	0
  8786  01EF82  00                 	db	0
  8787  01EF83  00                 	db	0
  8788  01EF84  00                 	db	0
  8789  01EF85  00                 	db	0
  8790  01EF86  00                 	db	0
  8791  01EF87  00                 	db	0
  8792  01EF88  00                 	db	0
  8793  01EF89  00                 	db	0
  8794  01EF8A  00                 	db	0
  8795  01EF8B  00                 	db	0
  8796  01EF8C  00                 	db	0
  8797  01EF8D  00                 	db	0
  8798  01EF8E  00                 	db	0
  8799  01EF8F  00                 	db	0
  8800  01EF90  00                 	db	0
  8801  01EF91  00                 	db	0
  8802  01EF92  00                 	db	0
  8803  01EF93  00                 	db	0
  8804  01EF94  00                 	db	0
  8805  01EF95  00                 	db	0
  8806  01EF96  00                 	db	0
  8807  01EF97  00                 	db	0
  8808  01EF98  00                 	db	0
  8809  01EF99  00                 	db	0
  8810  01EF9A  00                 	db	0
  8811  01EF9B  00                 	db	0
  8812  01EF9C  00                 	db	0
  8813  01EF9D  00                 	db	0
  8814  01EF9E  00                 	db	0
  8815  01EF9F  00                 	db	0
  8816  01EFA0  00                 	db	0
  8817  01EFA1  00                 	db	0
  8818  01EFA2  00                 	db	0
  8819  01EFA3  00                 	db	0
  8820  01EFA4  00                 	db	0
  8821  01EFA5  00                 	db	0
  8822  01EFA6  00                 	db	0
  8823  01EFA7  00                 	db	0
  8824  01EFA8  00                 	db	0
  8825  01EFA9  00                 	db	0
  8826  01EFAA  00                 	db	0
  8827  01EFAB  00                 	db	0
  8828  01EFAC  00                 	db	0
  8829  01EFAD  00                 	db	0
  8830  01EFAE  00                 	db	0
  8831  01EFAF  00                 	db	0
  8832  01EFB0  00                 	db	0
  8833  01EFB1  00                 	db	0
  8834  01EFB2  00                 	db	0
  8835  01EFB3  00                 	db	0
  8836  01EFB4  00                 	db	0
  8837  01EFB5  00                 	db	0
  8838  01EFB6  00                 	db	0
  8839  01EFB7  00                 	db	0
  8840  01EFB8  00                 	db	0
  8841  01EFB9  00                 	db	0
  8842  01EFBA  00                 	db	0
  8843  01EFBB  00                 	db	0
  8844  01EFBC  00                 	db	0
  8845  01EFBD  00                 	db	0
  8846  01EFBE  00                 	db	0
  8847  01EFBF  00                 	db	0
  8848  01EFC0  00                 	db	0
  8849  01EFC1  00                 	db	0
  8850  01EFC2  00                 	db	0
  8851  01EFC3  00                 	db	0
  8852  01EFC4  00                 	db	0
  8853  01EFC5  00                 	db	0
  8854  01EFC6  00                 	db	0
  8855  01EFC7  00                 	db	0
  8856  01EFC8  00                 	db	0
  8857  01EFC9  00                 	db	0
  8858  01EFCA  00                 	db	0
  8859  01EFCB  00                 	db	0
  8860  01EFCC  00                 	db	0
  8861  01EFCD  00                 	db	0
  8862  01EFCE  00                 	db	0
  8863  01EFCF  00                 	db	0
  8864  01EFD0  00                 	db	0
  8865  01EFD1  00                 	db	0
  8866  01EFD2  00                 	db	0
  8867  01EFD3  00                 	db	0
  8868  01EFD4  00                 	db	0
  8869  01EFD5  00                 	db	0
  8870  01EFD6  00                 	db	0
  8871  01EFD7  00                 	db	0
  8872  01EFD8  00                 	db	0
  8873  01EFD9  00                 	db	0
  8874  01EFDA  00                 	db	0
  8875  01EFDB  00                 	db	0
  8876  01EFDC  00                 	db	0
  8877  01EFDD  00                 	db	0
  8878  01EFDE  00                 	db	0
  8879  01EFDF  00                 	db	0
  8880  01EFE0  00                 	db	0
  8881  01EFE1  00                 	db	0
  8882  01EFE2  00                 	db	0
  8883  01EFE3  00                 	db	0
  8884  01EFE4  00                 	db	0
  8885  01EFE5  00                 	db	0
  8886  01EFE6  00                 	db	0
  8887  01EFE7  00                 	db	0
  8888  01EFE8  00                 	db	0
  8889  01EFE9  00                 	db	0
  8890  01EFEA  00                 	db	0
  8891  01EFEB  00                 	db	0
  8892  01EFEC  00                 	db	0
  8893  01EFED  00                 	db	0
  8894  01EFEE  00                 	db	0
  8895  01EFEF  00                 	db	0
  8896  01EFF0  00                 	db	0
  8897  01EFF1  00                 	db	0
  8898  01EFF2  00                 	db	0
  8899  01EFF3  00                 	db	0
  8900  01EFF4  00                 	db	0
  8901  01EFF5  00                 	db	0
  8902  01EFF6  00                 	db	0
  8903  01EFF7  00                 	db	0
  8904  01EFF8  00                 	db	0
  8905  01EFF9  00                 	db	0
  8906  01EFFA  00                 	db	0
  8907  01EFFB  00                 	db	0
  8908  01EFFC  00                 	db	0
  8909  01EFFD  00                 	db	0
  8910  01EFFE  00                 	db	0
  8911  01EFFF  00                 	db	0
  8912  01F000                     __end_of_reserveSettingsArr:
  8913                           	opt stack 0
  8914  0000                     _EDMADST	set	3828
  8915  0000                     _EDMAND	set	3826
  8916  0000                     _EDMAST	set	3824
  8917  0000                     _ERDPT	set	3962
  8918  0000                     _ERXND	set	3818
  8919  0000                     _ERXRDPT	set	3820
  8920  0000                     _ERXST	set	3816
  8921  0000                     _ERXWRPT	set	3822
  8922  0000                     _ETXND	set	3814
  8923  0000                     _ETXST	set	3812
  8924  0000                     _EWRPT	set	3810
  8925  0000                     _ADCON0	set	4034
  8926  0000                     _ADCON0bits	set	4034
  8927  0000                     _ADCON1	set	4033
  8928  0000                     _ADCON2	set	4032
  8929  0000                     _CMCON	set	4020
  8930  0000                     _ECON1bits	set	4050
  8931  0000                     _ECON2bits	set	3838
  8932  0000                     _EECON1bits	set	4006
  8933  0000                     _EECON2	set	4007
  8934  0000                     _EIRbits	set	3936
  8935  0000                     _EPKTCNT	set	3801
  8936  0000                     _ERDPTH	set	3963
  8937  0000                     _ERDPTL	set	3962
  8938  0000                     _ERXRDPTH	set	3821
  8939  0000                     _ERXRDPTL	set	3820
  8940  0000                     _ESTATbits	set	3837
  8941  0000                     _INTCON	set	4082
  8942  0000                     _INTCON2	set	4081
  8943  0000                     _INTCON2bits	set	4081
  8944  0000                     _INTCON3	set	4080
  8945  0000                     _INTCON3bits	set	4080
  8946  0000                     _INTCONbits	set	4082
  8947  0000                     _LATA	set	3977
  8948  0000                     _LATAbits	set	3977
  8949  0000                     _LATB	set	3978
  8950  0000                     _LATBbits	set	3978
  8951  0000                     _LATC	set	3979
  8952  0000                     _LATD	set	3980
  8953  0000                     _LATDbits	set	3980
  8954  0000                     _LATE	set	3981
  8955  0000                     _LATEbits	set	3981
  8956  0000                     _LATFbits	set	3982
  8957  0000                     _LATGbits	set	3983
  8958  0000                     _MAADR1	set	3716
  8959  0000                     _MAADR2	set	3717
  8960  0000                     _MAADR3	set	3714
  8961  0000                     _MAADR4	set	3715
  8962  0000                     _MAADR5	set	3712
  8963  0000                     _MAADR6	set	3713
  8964  0000                     _MABBIPG	set	3748
  8965  0000                     _MACON1	set	3744
  8966  0000                     _MACON3	set	3746
  8967  0000                     _MACON4	set	3747
  8968  0000                     _MAIPGH	set	3751
  8969  0000                     _MAIPGL	set	3750
  8970  0000                     _MAMXFLH	set	3755
  8971  0000                     _MAMXFLL	set	3754
  8972  0000                     _MICMD	set	3762
  8973  0000                     _MIRDH	set	3769
  8974  0000                     _MIRDL	set	3768
  8975  0000                     _MIREGADR	set	3764
  8976  0000                     _MISTATbits	set	3722
  8977  0000                     _OSCCONbits	set	4051
  8978  0000                     _OSCTUNE	set	3995
  8979  0000                     _PIE1bits	set	3997
  8980  0000                     _PIR1bits	set	3998
  8981  0000                     _PORTAbits	set	3968
  8982  0000                     _PORTBbits	set	3969
  8983  0000                     _PORTC	set	3970
  8984  0000                     _RCONbits	set	4048
  8985  0000                     _T0CON	set	4053
  8986  0000                     _T1CONbits	set	4045
  8987  0000                     _TABLAT	set	4085
  8988  0000                     _TBLPTRH	set	4087
  8989  0000                     _TBLPTRL	set	4086
  8990  0000                     _TBLPTRU	set	4088
  8991  0000                     _TMR0H	set	4055
  8992  0000                     _TMR0L	set	4054
  8993  0000                     _TMR1L	set	4046
  8994  0000                     _TRISA	set	3986
  8995  0000                     _TRISAbits	set	3986
  8996  0000                     _TRISB	set	3987
  8997  0000                     _TRISC	set	3988
  8998  0000                     _TRISD	set	3989
  8999  0000                     _TRISE	set	3990
  9000  0000                     _TRISF	set	3991
  9001  0000                     _TRISG	set	3992
  9002  0000                     
  9003                           	psect	nvBANK2
  9004  0002D3                     __pnvBANK2:
  9005                           	opt stack 0
  9006  0002D3                     _s_dacSettings:
  9007                           	opt stack 0
  9008  0002D3                     	ds	20
  9009  0002E7                     _s_dacSettingsTmp:
  9010                           	opt stack 0
  9011  0002E7                     	ds	20
  9012                           
  9013                           	psect	nvBANK3
  9014  000300                     __pnvBANK3:
  9015                           	opt stack 0
  9016  000300                     _s_dacSettingsOriginal:
  9017                           	opt stack 0
  9018  000300                     	ds	20
  9019  0000                     
  9020                           	psect	cinit
  9021  01A9C2                     __pcinit:
  9022                           	opt stack 0
  9023  01A9C2                     start_initialization:
  9024                           	opt stack 0
  9025  01A9C2                     __initialization:
  9026                           	opt stack 0
  9027                           
  9028                           ; Clear objects allocated to BANK4 (256 bytes)
  9029  01A9C2  EE04  F000         	lfsr	0,__pbssBANK4
  9030  01A9C6  EE11 F000          	lfsr	1,256
  9031  01A9CA                     clear_0:
  9032  01A9CA  6AEE               	clrf	postinc0,c
  9033  01A9CC  50E5               	movf	postdec1,w,c
  9034  01A9CE  50E1               	movf	fsr1l,w,c
  9035  01A9D0  E1FC               	bnz	clear_0
  9036  01A9D2  50E2               	movf	fsr1h,w,c
  9037  01A9D4  E1FA               	bnz	clear_0
  9038                           
  9039                           ; Clear objects allocated to BANK2 (211 bytes)
  9040  01A9D6  EE02  F000         	lfsr	0,__pbssBANK2
  9041  01A9DA  0ED3               	movlw	211
  9042  01A9DC                     clear_1:
  9043  01A9DC  6AEE               	clrf	postinc0,c
  9044  01A9DE  06E8               	decf	wreg,f,c
  9045  01A9E0  E1FD               	bnz	clear_1
  9046                           
  9047                           ; Clear objects allocated to BANK1 (73 bytes)
  9048  01A9E2  EE01  F0B3         	lfsr	0,__pbssBANK1
  9049  01A9E6  0E49               	movlw	73
  9050  01A9E8                     clear_2:
  9051  01A9E8  6AEE               	clrf	postinc0,c
  9052  01A9EA  06E8               	decf	wreg,f,c
  9053  01A9EC  E1FD               	bnz	clear_2
  9054                           
  9055                           ; Clear objects allocated to BANK0 (64 bytes)
  9056  01A9EE  EE00  F0B3         	lfsr	0,__pbssBANK0
  9057  01A9F2  0E40               	movlw	64
  9058  01A9F4                     clear_3:
  9059  01A9F4  6AEE               	clrf	postinc0,c
  9060  01A9F6  06E8               	decf	wreg,f,c
  9061  01A9F8  E1FD               	bnz	clear_3
  9062                           
  9063                           ; Clear objects allocated to COMRAM (1 bytes)
  9064  01A9FA  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  9065                           
  9066                           ; Initialize objects allocated to BANK1 (4 bytes)
  9067                           ; load TBLPTR registers with __pidataBANK1
  9068  01A9FC  0E0A               	movlw	low __pidataBANK1
  9069  01A9FE  6EF6               	movwf	tblptrl,c
  9070  01AA00  0EBB               	movlw	high __pidataBANK1
  9071  01AA02  6EF7               	movwf	tblptrh,c
  9072  01AA04  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  9073  01AA06  6EF8               	movwf	tblptru,c
  9074  01AA08  EE01  F0FC         	lfsr	0,__pdataBANK1
  9075  01AA0C  EE10 F004          	lfsr	1,4
  9076  01AA10                     copy_data0:
  9077  01AA10  0009               	tblrd		*+
  9078  01AA12  CFF5 FFEE          	movff	tablat,postinc0
  9079  01AA16  50E5               	movf	postdec1,w,c
  9080  01AA18  50E1               	movf	fsr1l,w,c
  9081  01AA1A  E1FA               	bnz	copy_data0
  9082                           
  9083                           ; Initialize objects allocated to BANK0 (11 bytes)
  9084                           ; load TBLPTR registers with __pidataBANK0
  9085  01AA1C  0EE0               	movlw	low __pidataBANK0
  9086  01AA1E  6EF6               	movwf	tblptrl,c
  9087  01AA20  0EBA               	movlw	high __pidataBANK0
  9088  01AA22  6EF7               	movwf	tblptrh,c
  9089  01AA24  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  9090  01AA26  6EF8               	movwf	tblptru,c
  9091  01AA28  EE00  F0F3         	lfsr	0,__pdataBANK0
  9092  01AA2C  EE10 F00B          	lfsr	1,11
  9093  01AA30                     copy_data1:
  9094  01AA30  0009               	tblrd		*+
  9095  01AA32  CFF5 FFEE          	movff	tablat,postinc0
  9096  01AA36  50E5               	movf	postdec1,w,c
  9097  01AA38  50E1               	movf	fsr1l,w,c
  9098  01AA3A  E1FA               	bnz	copy_data1
  9099  01AA3C                     end_of_initialization:
  9100                           	opt stack 0
  9101  01AA3C                     __end_of__initialization:
  9102                           	opt stack 0
  9103  01AA3C  0100               	movlb	0
  9104  01AA3E  EFFD  F0DA         	goto	_main	;jump to C main() function
  9105                           tblptru	equ	0xFF8
  9106                           tblptrh	equ	0xFF7
  9107                           tblptrl	equ	0xFF6
  9108                           tablat	equ	0xFF5
  9109                           postinc0	equ	0xFEE
  9110                           wreg	equ	0xFE8
  9111                           postdec1	equ	0xFE5
  9112                           fsr1h	equ	0xFE2
  9113                           fsr1l	equ	0xFE1
  9114                           
  9115                           	psect	bssCOMRAM
  9116  00005F                     __pbssCOMRAM:
  9117                           	opt stack 0
  9118  00005F                     StackInit@once:
  9119                           	opt stack 0
  9120  00005F                     	ds	1
  9121                           tblptru	equ	0xFF8
  9122                           tblptrh	equ	0xFF7
  9123                           tblptrl	equ	0xFF6
  9124                           tablat	equ	0xFF5
  9125                           postinc0	equ	0xFEE
  9126                           wreg	equ	0xFE8
  9127                           postdec1	equ	0xFE5
  9128                           fsr1h	equ	0xFE2
  9129                           fsr1l	equ	0xFE1
  9130                           
  9131                           	psect	bssBANK0
  9132  0000B3                     __pbssBANK0:
  9133                           	opt stack 0
  9134  0000B3                     ARPProcess@Target:
  9135                           	opt stack 0
  9136  0000B3                     	ds	10
  9137  0000BD                     _Cache:
  9138                           	opt stack 0
  9139  0000BD                     	ds	10
  9140  0000C7                     _vTickReading:
  9141                           	opt stack 0
  9142  0000C7                     	ds	6
  9143  0000CD                     CalcIPBufferChecksum@F7102:
  9144                           	opt stack 0
  9145  0000CD                     	ds	4
  9146  0000D1                     _dwInternalTicks:
  9147                           	opt stack 0
  9148  0000D1                     	ds	4
  9149  0000D5                     _s_encoderLastUpdate:
  9150                           	opt stack 0
  9151  0000D5                     	ds	4
  9152  0000D9                     _s_lastIRCodeReceived:
  9153                           	opt stack 0
  9154  0000D9                     	ds	4
  9155  0000DD                     _s_numTicksPrev:
  9156                           	opt stack 0
  9157  0000DD                     	ds	4
  9158  0000E1                     _CurrentPacketLocation:
  9159                           	opt stack 0
  9160  0000E1                     	ds	2
  9161  0000E3                     _NextPacketLocation:
  9162                           	opt stack 0
  9163  0000E3                     	ds	2
  9164  0000E5                     _NextPort:
  9165                           	opt stack 0
  9166  0000E5                     	ds	2
  9167  0000E7                     __Identifier:
  9168                           	opt stack 0
  9169  0000E7                     	ds	2
  9170  0000E9                     _s_numTicksDiffIdx:
  9171                           	opt stack 0
  9172  0000E9                     	ds	2
  9173  0000EB                     _wTXWatchdog:
  9174                           	opt stack 0
  9175  0000EB                     	ds	2
  9176  0000ED                     TCPServer@tcpServerState:
  9177                           	opt stack 0
  9178  0000ED                     	ds	1
  9179  0000EE                     _smStack:
  9180                           	opt stack 0
  9181  0000EE                     	ds	1
  9182  0000EF                     _toRotate:
  9183                           	opt stack 0
  9184  0000EF                     	ds	4
  9185                           tblptru	equ	0xFF8
  9186                           tblptrh	equ	0xFF7
  9187                           tblptrl	equ	0xFF6
  9188                           tablat	equ	0xFF5
  9189                           postinc0	equ	0xFEE
  9190                           wreg	equ	0xFE8
  9191                           postdec1	equ	0xFE5
  9192                           fsr1h	equ	0xFE2
  9193                           fsr1l	equ	0xFE1
  9194                           
  9195                           	psect	dataBANK0
  9196  0000F3                     __pdataBANK0:
  9197                           	opt stack 0
  9198  0000F3                     _dwLFSRRandSeed:
  9199                           	opt stack 0
  9200  0000F3                     	ds	4
  9201  0000F7                     _resOK:
  9202                           	opt stack 0
  9203  0000F7                     	ds	3
  9204  0000FA                     _badChecksum:
  9205                           	opt stack 0
  9206  0000FA                     	ds	2
  9207  0000FC                     _invalidCommand:
  9208                           	opt stack 0
  9209  0000FC                     	ds	2
  9210                           tblptru	equ	0xFF8
  9211                           tblptrh	equ	0xFF7
  9212                           tblptrl	equ	0xFF6
  9213                           tablat	equ	0xFF5
  9214                           postinc0	equ	0xFEE
  9215                           wreg	equ	0xFE8
  9216                           postdec1	equ	0xFE5
  9217                           fsr1h	equ	0xFE2
  9218                           fsr1l	equ	0xFE1
  9219                           
  9220                           	psect	bssBANK1
  9221  0001B3                     __pbssBANK1:
  9222                           	opt stack 0
  9223  0001B3                     ARPProcess@smARP:
  9224                           	opt stack 0
  9225  0001B3                     	ds	1
  9226  0001B4                     TCPServer@srvSocket:
  9227                           	opt stack 0
  9228  0001B4                     	ds	1
  9229  0001B5                     _IPHeaderLen:
  9230                           	opt stack 0
  9231  0001B5                     	ds	1
  9232  0001B6                     _flags:
  9233                           	opt stack 0
  9234  0001B6                     	ds	1
  9235  0001B7                     _s_irCodeByteIdx:
  9236                           	opt stack 0
  9237  0001B7                     	ds	1
  9238  0001B8                     _s_irLearn:
  9239                           	opt stack 0
  9240  0001B8                     	ds	1
  9241  0001B9                     _MyTCB:
  9242                           	opt stack 0
  9243  0001B9                     	ds	39
  9244  0001E0                     _MyTCBStub:
  9245                           	opt stack 0
  9246  0001E0                     	ds	28
  9247                           tblptru	equ	0xFF8
  9248                           tblptrh	equ	0xFF7
  9249                           tblptrl	equ	0xFF6
  9250                           tablat	equ	0xFF5
  9251                           postinc0	equ	0xFEE
  9252                           wreg	equ	0xFE8
  9253                           postdec1	equ	0xFE5
  9254                           fsr1h	equ	0xFE2
  9255                           fsr1l	equ	0xFE1
  9256                           
  9257                           	psect	dataBANK1
  9258  0001FC                     __pdataBANK1:
  9259                           	opt stack 0
  9260  0001FC                     SyncTCB@hLastTCB:
  9261                           	opt stack 0
  9262  0001FC                     	ds	1
  9263  0001FD                     _hCurrentTCP:
  9264                           	opt stack 0
  9265  0001FD                     	ds	1
  9266  0001FE                     _s_irCodeBitIdx:
  9267                           	opt stack 0
  9268  0001FE                     	ds	1
  9269  0001FF                     _s_prevIRPort:
  9270                           	opt stack 0
  9271  0001FF                     	ds	1
  9272                           tblptru	equ	0xFF8
  9273                           tblptrh	equ	0xFF7
  9274                           tblptrl	equ	0xFF6
  9275                           tablat	equ	0xFF5
  9276                           postinc0	equ	0xFEE
  9277                           wreg	equ	0xFE8
  9278                           postdec1	equ	0xFE5
  9279                           fsr1h	equ	0xFE2
  9280                           fsr1l	equ	0xFE1
  9281                           
  9282                           	psect	bssBANK2
  9283  000200                     __pbssBANK2:
  9284                           	opt stack 0
  9285  000200                     _SYNQueue:
  9286                           	opt stack 0
  9287  000200                     	ds	60
  9288  00023C                     _AppConfig:
  9289                           	opt stack 0
  9290  00023C                     	ds	51
  9291  00026F                     _TCBStubs:
  9292                           	opt stack 0
  9293  00026F                     	ds	28
  9294  00028B                     _dispbuf1:
  9295                           	opt stack 0
  9296  00028B                     	ds	17
  9297  00029C                     _dispbuf2:
  9298                           	opt stack 0
  9299  00029C                     	ds	17
  9300  0002AD                     _s_irCode:
  9301                           	opt stack 0
  9302  0002AD                     	ds	16
  9303  0002BD                     TCPGetRemoteInfo@RemoteInfo:
  9304                           	opt stack 0
  9305  0002BD                     	ds	12
  9306  0002C9                     _remoteNode:
  9307                           	opt stack 0
  9308  0002C9                     	ds	10
  9309                           tblptru	equ	0xFF8
  9310                           tblptrh	equ	0xFF7
  9311                           tblptrl	equ	0xFF6
  9312                           tablat	equ	0xFF5
  9313                           postinc0	equ	0xFEE
  9314                           wreg	equ	0xFE8
  9315                           postdec1	equ	0xFE5
  9316                           fsr1h	equ	0xFE2
  9317                           fsr1l	equ	0xFE1
  9318                           
  9319                           	psect	bssBANK4
  9320  000400                     __pbssBANK4:
  9321                           	opt stack 0
  9322  000400                     _s_numTicksDiff:
  9323                           	opt stack 0
  9324  000400                     	ds	256
  9325                           tblptru	equ	0xFF8
  9326                           tblptrh	equ	0xFF7
  9327                           tblptrl	equ	0xFF6
  9328                           tablat	equ	0xFF5
  9329                           postinc0	equ	0xFEE
  9330                           wreg	equ	0xFE8
  9331                           postdec1	equ	0xFE5
  9332                           fsr1h	equ	0xFE2
  9333                           fsr1l	equ	0xFE1
  9334                           
  9335                           	psect	cstackBANK1
  9336  000100                     __pcstackBANK1:
  9337                           	opt stack 0
  9338  000100                     ??_Delay10KTCYx:
  9339  000100                     ??_isdigit:
  9340  000100                     ?_swaps:
  9341                           	opt stack 0
  9342  000100                     ?_LFSRRand:
  9343                           	opt stack 0
  9344  000100                     ?_memcmp:
  9345                           	opt stack 0
  9346  000100                     ?_MACGetFreeRxSize:
  9347                           	opt stack 0
  9348  000100                     ?_CalcIPChecksum:
  9349                           	opt stack 0
  9350  000100                     ?___awmod:
  9351                           	opt stack 0
  9352  000100                     ?___ftpack:
  9353                           	opt stack 0
  9354  000100                     ?___ftneg:
  9355                           	opt stack 0
  9356  000100                     ?_TickGet:
  9357                           	opt stack 0
  9358  000100                     ?_TickGetDiv256:
  9359                           	opt stack 0
  9360  000100                     ?__tdiv_to_l_:
  9361                           	opt stack 0
  9362  000100                     ?__div_to_l_:
  9363                           	opt stack 0
  9364  000100                     ?_swapl:
  9365                           	opt stack 0
  9366  000100                     ?___lldiv:
  9367                           	opt stack 0
  9368  000100                     ?___llmod:
  9369                           	opt stack 0
  9370  000100                     WriteDataSLCD@data:
  9371                           	opt stack 0
  9372  000100                     WriteCmdSLCD@cmd:
  9373                           	opt stack 0
  9374  000100                     MACPut@val:
  9375                           	opt stack 0
  9376  000100                     Delay1KTCYx@unit:
  9377                           	opt stack 0
  9378  000100                     MACDiscardRx@NewRXRDLocation:
  9379                           	opt stack 0
  9380  000100                     MACSetReadPtrInRx@offset:
  9381                           	opt stack 0
  9382  000100                     MACSetWritePtr@address:
  9383                           	opt stack 0
  9384  000100                     MACSetReadPtr@address:
  9385                           	opt stack 0
  9386  000100                     MACGetArray@val:
  9387                           	opt stack 0
  9388  000100                     MACPutArray@val:
  9389                           	opt stack 0
  9390  000100                     WritePHYReg@Data:
  9391                           	opt stack 0
  9392  000100                     ARPIsResolved@IPAddr:
  9393                           	opt stack 0
  9394  000100                     swaps@v:
  9395                           	opt stack 0
  9396  000100                     CalcIPChecksum@buffer:
  9397                           	opt stack 0
  9398  000100                     strupr@s:
  9399                           	opt stack 0
  9400  000100                     GetCheckSum@data:
  9401                           	opt stack 0
  9402  000100                     ___awmod@dividend:
  9403                           	opt stack 0
  9404  000100                     memcmp@s1:
  9405                           	opt stack 0
  9406  000100                     memset@p1:
  9407                           	opt stack 0
  9408  000100                     __div_to_l_@f1:
  9409                           	opt stack 0
  9410  000100                     ___ftpack@arg:
  9411                           	opt stack 0
  9412  000100                     __tdiv_to_l_@f1:
  9413                           	opt stack 0
  9414  000100                     ___ftge@ff1:
  9415                           	opt stack 0
  9416  000100                     ___ftneg@f1:
  9417                           	opt stack 0
  9418  000100                     swapl@v:
  9419                           	opt stack 0
  9420  000100                     EraseFlash@startaddr:
  9421                           	opt stack 0
  9422  000100                     ReadFlash@startaddr:
  9423                           	opt stack 0
  9424  000100                     WriteBlockFlash@startaddr:
  9425                           	opt stack 0
  9426  000100                     ___lldiv@dividend:
  9427                           	opt stack 0
  9428  000100                     ___llmod@dividend:
  9429                           	opt stack 0
  9430                           
  9431                           ; 4 bytes @ 0x0
  9432  000100                     	ds	1
  9433  000101                     SLCDSetDDRamAddr@DDaddr:
  9434                           	opt stack 0
  9435  000101                     Delay10KTCYx@unit:
  9436                           	opt stack 0
  9437  000101                     _isdigit$10242:
  9438                           	opt stack 0
  9439  000101                     PutsSLCD@buffer:
  9440                           	opt stack 0
  9441  000101                     MACMemCopyAsync@destAddr:
  9442                           	opt stack 0
  9443                           
  9444                           ; 2 bytes @ 0x1
  9445  000101                     	ds	1
  9446  000102                     ??_LFSRRand:
  9447  000102                     ??_MACGetFreeRxSize:
  9448  000102                     ??_MACSetReadPtrInRx:
  9449  000102                     OpenSLCD@lcdtype:
  9450                           	opt stack 0
  9451  000102                     WritePHYReg@Register:
  9452                           	opt stack 0
  9453  000102                     swaps@b:
  9454                           	opt stack 0
  9455  000102                     GetCheckSum@dataLen:
  9456                           	opt stack 0
  9457  000102                     isdigit@c:
  9458                           	opt stack 0
  9459  000102                     MACSetWritePtr@oldVal:
  9460                           	opt stack 0
  9461  000102                     MACSetReadPtr@oldVal:
  9462                           	opt stack 0
  9463  000102                     MACGetArray@len:
  9464                           	opt stack 0
  9465  000102                     MACPutArray@len:
  9466                           	opt stack 0
  9467  000102                     ARPIsResolved@MACAddr:
  9468                           	opt stack 0
  9469  000102                     CalcIPChecksum@count:
  9470                           	opt stack 0
  9471  000102                     strupr@t:
  9472                           	opt stack 0
  9473  000102                     ___awmod@divisor:
  9474                           	opt stack 0
  9475  000102                     memcmp@s2:
  9476                           	opt stack 0
  9477  000102                     memset@c:
  9478                           	opt stack 0
  9479                           
  9480                           ; 2 bytes @ 0x2
  9481  000102                     	ds	1
  9482  000103                     WritePHYReg@GIESave:
  9483                           	opt stack 0
  9484  000103                     GetCheckSum@res:
  9485                           	opt stack 0
  9486  000103                     ___ftpack@exp:
  9487                           	opt stack 0
  9488  000103                     MACMemCopyAsync@sourceAddr:
  9489                           	opt stack 0
  9490  000103                     swaps@t:
  9491                           	opt stack 0
  9492  000103                     RefreshLine1Ex@line:
  9493                           	opt stack 0
  9494  000103                     RefreshLine2Ex@line:
  9495                           	opt stack 0
  9496  000103                     __div_to_l_@f2:
  9497                           	opt stack 0
  9498  000103                     __tdiv_to_l_@f2:
  9499                           	opt stack 0
  9500  000103                     ___ftge@ff2:
  9501                           	opt stack 0
  9502                           
  9503                           ; 3 bytes @ 0x3
  9504  000103                     	ds	1
  9505  000104                     ??_ARPIsResolved:
  9506  000104                     ??_CalcIPChecksum:
  9507  000104                     strupr@c:
  9508                           	opt stack 0
  9509  000104                     GetCheckSum@i:
  9510                           	opt stack 0
  9511  000104                     WriteBlockFlash@num_blocks:
  9512                           	opt stack 0
  9513  000104                     ___awmod@counter:
  9514                           	opt stack 0
  9515  000104                     ___ftpack@sign:
  9516                           	opt stack 0
  9517  000104                     MACGetFreeRxSize@WritePT:
  9518                           	opt stack 0
  9519  000104                     MACPutHeader@remote:
  9520                           	opt stack 0
  9521  000104                     MACSetReadPtrInRx@ReadPT:
  9522                           	opt stack 0
  9523  000104                     MACGetArray@w:
  9524                           	opt stack 0
  9525  000104                     ReadFlash@num_bytes:
  9526                           	opt stack 0
  9527  000104                     memcmp@n:
  9528                           	opt stack 0
  9529  000104                     memset@n:
  9530                           	opt stack 0
  9531  000104                     TickGet@dw:
  9532                           	opt stack 0
  9533  000104                     TickGetDiv256@dw:
  9534                           	opt stack 0
  9535  000104                     EraseFlash@endaddr:
  9536                           	opt stack 0
  9537  000104                     ___lldiv@divisor:
  9538                           	opt stack 0
  9539  000104                     ___llmod@divisor:
  9540                           	opt stack 0
  9541                           
  9542                           ; 4 bytes @ 0x4
  9543  000104                     	ds	1
  9544  000105                     ??___ftpack:
  9545  000105                     ___awmod@sign:
  9546                           	opt stack 0
  9547  000105                     MACMemCopyAsync@len:
  9548                           	opt stack 0
  9549  000105                     SwapARPPacket@p:
  9550                           	opt stack 0
  9551  000105                     FormatNetBIOSName@Name:
  9552                           	opt stack 0
  9553  000105                     SwapIPHeader@h:
  9554                           	opt stack 0
  9555  000105                     SwapTCPHeader@header:
  9556                           	opt stack 0
  9557  000105                     UpdateSampleRate@srStr:
  9558                           	opt stack 0
  9559  000105                     WriteBlockFlash@flash_array:
  9560                           	opt stack 0
  9561                           
  9562                           ; 2 bytes @ 0x5
  9563  000105                     	ds	1
  9564  000106                     ??_memcmp:
  9565  000106                     ??__tdiv_to_l_:
  9566  000106                     ??__div_to_l_:
  9567  000106                     ??___ftge:
  9568  000106                     ?_CalcIPBufferChecksum:
  9569                           	opt stack 0
  9570  000106                     ?___awdiv:
  9571                           	opt stack 0
  9572  000106                     MACPutHeader@type:
  9573                           	opt stack 0
  9574  000106                     MACGetFreeRxSize@ReadPT:
  9575                           	opt stack 0
  9576  000106                     CalcIPBufferChecksum@len:
  9577                           	opt stack 0
  9578  000106                     CalcIPChecksum@i:
  9579                           	opt stack 0
  9580  000106                     IPSetRxBuffer@Offset:
  9581                           	opt stack 0
  9582  000106                     ReadFlash@flash_array:
  9583                           	opt stack 0
  9584  000106                     ___awdiv@dividend:
  9585                           	opt stack 0
  9586  000106                     memset@p:
  9587                           	opt stack 0
  9588                           
  9589                           ; 2 bytes @ 0x6
  9590  000106                     	ds	1
  9591  000107                     ??_SwapTCPHeader:
  9592  000107                     ??_WriteBlockFlash:
  9593  000107                     ??_MACMemCopyAsync:
  9594  000107                     FormatNetBIOSName@i:
  9595                           	opt stack 0
  9596  000107                     MACPutHeader@dataLen:
  9597                           	opt stack 0
  9598                           
  9599                           ; 2 bytes @ 0x7
  9600  000107                     	ds	1
  9601  000108                     ??_MACFlush:
  9602  000108                     ??_CalcIPBufferChecksum:
  9603  000108                     ?_GetMaxSegSizeOption:
  9604                           	opt stack 0
  9605  000108                     ?___awtoft:
  9606                           	opt stack 0
  9607  000108                     ?___lltoft:
  9608                           	opt stack 0
  9609  000108                     ?___lwtoft:
  9610                           	opt stack 0
  9611  000108                     EraseFlash@flag:
  9612                           	opt stack 0
  9613  000108                     ___llmod@counter:
  9614                           	opt stack 0
  9615  000108                     CalcIPChecksum@val:
  9616                           	opt stack 0
  9617  000108                     ___awdiv@divisor:
  9618                           	opt stack 0
  9619  000108                     ___awtoft@c:
  9620                           	opt stack 0
  9621  000108                     ___lwtoft@c:
  9622                           	opt stack 0
  9623  000108                     WriteBlockFlash@startptr:
  9624                           	opt stack 0
  9625  000108                     ReadFlash@flash_addr:
  9626                           	opt stack 0
  9627  000108                     ___lldiv@quotient:
  9628                           	opt stack 0
  9629  000108                     ___lltoft@c:
  9630                           	opt stack 0
  9631                           
  9632                           ; 4 bytes @ 0x8
  9633  000108                     	ds	1
  9634  000109                     _MACPutHeader$1874:
  9635                           	opt stack 0
  9636  000109                     EraseFlash@flash_addr:
  9637                           	opt stack 0
  9638  000109                     __tdiv_to_l_@quot:
  9639                           	opt stack 0
  9640                           
  9641                           ; 4 bytes @ 0x9
  9642  000109                     	ds	1
  9643  00010A                     ___awdiv@counter:
  9644                           	opt stack 0
  9645  00010A                     GetMaxSegSizeOption@wMSS:
  9646                           	opt stack 0
  9647  00010A                     CalcIPChecksum@sum:
  9648                           	opt stack 0
  9649  00010A                     __div_to_l_@quot:
  9650                           	opt stack 0
  9651  00010A                     CalcIPBufferChecksum@DataBuffer:
  9652                           	opt stack 0
  9653                           
  9654                           ; 20 bytes @ 0xA
  9655  00010A                     	ds	1
  9656  00010B                     WriteBlockFlash@write_byte:
  9657                           	opt stack 0
  9658  00010B                     ___awdiv@sign:
  9659                           	opt stack 0
  9660  00010B                     ___awtoft@sign:
  9661                           	opt stack 0
  9662  00010B                     MACMemCopyAsync@ReadSave:
  9663                           	opt stack 0
  9664                           
  9665                           ; 2 bytes @ 0xB
  9666  00010B                     	ds	1
  9667  00010C                     ??___lltoft:
  9668  00010C                     ?___ftdiv:
  9669                           	opt stack 0
  9670  00010C                     MACFlush@i:
  9671                           	opt stack 0
  9672  00010C                     GetMaxSegSizeOption@vOptionsBytes:
  9673                           	opt stack 0
  9674  00010C                     WriteBlockFlash@flag:
  9675                           	opt stack 0
  9676  00010C                     ___lldiv@counter:
  9677                           	opt stack 0
  9678  00010C                     ___awdiv@quotient:
  9679                           	opt stack 0
  9680  00010C                     ___ftdiv@f1:
  9681                           	opt stack 0
  9682  00010C                     ReadFlash@tblptr_save:
  9683                           	opt stack 0
  9684                           
  9685                           ; 4 bytes @ 0xC
  9686  00010C                     	ds	1
  9687  00010D                     ??_MACIsTxReady:
  9688  00010D                     GetMaxSegSizeOption@vOption:
  9689                           	opt stack 0
  9690  00010D                     __tdiv_to_l_@cntr:
  9691                           	opt stack 0
  9692  00010D                     MACMemCopyAsync@WriteSave:
  9693                           	opt stack 0
  9694  00010D                     WriteBlockFlash@saddress:
  9695                           	opt stack 0
  9696                           
  9697                           ; 4 bytes @ 0xD
  9698  00010D                     	ds	1
  9699  00010E                     ?___wmul:
  9700                           	opt stack 0
  9701  00010E                     LFSRRand@i:
  9702                           	opt stack 0
  9703  00010E                     __div_to_l_@cntr:
  9704                           	opt stack 0
  9705  00010E                     __tdiv_to_l_@exp1:
  9706                           	opt stack 0
  9707  00010E                     IPPutHeader@remote:
  9708                           	opt stack 0
  9709  00010E                     ___wmul@multiplier:
  9710                           	opt stack 0
  9711                           
  9712                           ; 2 bytes @ 0xE
  9713  00010E                     	ds	1
  9714  00010F                     MACMemCopyAsync@UpdateWritePointer:
  9715                           	opt stack 0
  9716  00010F                     __div_to_l_@exp1:
  9717                           	opt stack 0
  9718  00010F                     ___ftdiv@f2:
  9719                           	opt stack 0
  9720  00010F                     LFSRSeedRand@dwSeed:
  9721                           	opt stack 0
  9722                           
  9723                           ; 4 bytes @ 0xF
  9724  00010F                     	ds	1
  9725  000110                     ??_RestoreFromFlash:
  9726  000110                     ?_FindEmpty:
  9727                           	opt stack 0
  9728  000110                     MACMemCopyAsync@UpdateReadPointer:
  9729                           	opt stack 0
  9730  000110                     IPPutHeader@protocol:
  9731                           	opt stack 0
  9732  000110                     ___lltoft@exp:
  9733                           	opt stack 0
  9734  000110                     ___wmul@multiplicand:
  9735                           	opt stack 0
  9736  000110                     FindEmpty@startAddr:
  9737                           	opt stack 0
  9738                           
  9739                           ; 4 bytes @ 0x10
  9740  000110                     	ds	1
  9741  000111                     IPPutHeader@len:
  9742                           	opt stack 0
  9743                           
  9744                           ; 2 bytes @ 0x11
  9745  000111                     	ds	1
  9746  000112                     ??___ftdiv:
  9747  000112                     ___wmul@product:
  9748                           	opt stack 0
  9749                           
  9750                           ; 2 bytes @ 0x12
  9751  000112                     	ds	1
  9752  000113                     LFSRSeedRand@dwOldSeed:
  9753                           	opt stack 0
  9754  000113                     IPPutHeader@header:
  9755                           	opt stack 0
  9756                           
  9757                           ; 20 bytes @ 0x13
  9758  000113                     	ds	1
  9759  000114                     ??_FindEmpty:
  9760  000114                     ?___ftmul:
  9761                           	opt stack 0
  9762  000114                     memcpy@d1:
  9763                           	opt stack 0
  9764  000114                     ___ftmul@f1:
  9765                           	opt stack 0
  9766                           
  9767                           ; 3 bytes @ 0x14
  9768  000114                     	ds	1
  9769  000115                     ___ftdiv@cntr:
  9770                           	opt stack 0
  9771                           
  9772                           ; 1 bytes @ 0x15
  9773  000115                     	ds	1
  9774  000116                     memcpy@s1:
  9775                           	opt stack 0
  9776  000116                     ___ftdiv@f3:
  9777                           	opt stack 0
  9778                           
  9779                           ; 3 bytes @ 0x16
  9780  000116                     	ds	1
  9781  000117                     LFSRSeedRand@i:
  9782                           	opt stack 0
  9783  000117                     ___ftmul@f2:
  9784                           	opt stack 0
  9785                           
  9786                           ; 3 bytes @ 0x17
  9787  000117                     	ds	1
  9788  000118                     ?_GenerateRandomDWORD:
  9789                           	opt stack 0
  9790  000118                     memcpy@n:
  9791                           	opt stack 0
  9792  000118                     RestoreFromFlash@addrStop:
  9793                           	opt stack 0
  9794                           
  9795                           ; 4 bytes @ 0x18
  9796  000118                     	ds	1
  9797  000119                     ___ftdiv@exp:
  9798                           	opt stack 0
  9799                           
  9800                           ; 1 bytes @ 0x19
  9801  000119                     	ds	1
  9802  00011A                     ??___ftmul:
  9803  00011A                     ___ftdiv@sign:
  9804                           	opt stack 0
  9805  00011A                     memcpy@d:
  9806                           	opt stack 0
  9807                           
  9808                           ; 2 bytes @ 0x1A
  9809  00011A                     	ds	2
  9810  00011C                     ??_GenerateRandomDWORD:
  9811  00011C                     RestoreFromFlash@chSum:
  9812                           	opt stack 0
  9813  00011C                     memcpy@s:
  9814                           	opt stack 0
  9815  00011C                     FindEmpty@addrStop:
  9816                           	opt stack 0
  9817                           
  9818                           ; 4 bytes @ 0x1C
  9819  00011C                     	ds	1
  9820  00011D                     ___ftmul@exp:
  9821                           	opt stack 0
  9822  00011D                     RestoreFromFlash@addr:
  9823                           	opt stack 0
  9824                           
  9825                           ; 4 bytes @ 0x1D
  9826  00011D                     	ds	1
  9827  00011E                     ??_SyncTCBStub:
  9828  00011E                     MACGetHeader@remote:
  9829                           	opt stack 0
  9830  00011E                     CalcIPBufferChecksum@Start:
  9831                           	opt stack 0
  9832  00011E                     ARPPut@packet:
  9833                           	opt stack 0
  9834  00011E                     GenerateRandomDWORD@w:
  9835                           	opt stack 0
  9836  00011E                     TCPRAMCopy@ptrDest:
  9837                           	opt stack 0
  9838  00011E                     ___ftmul@f3_as_product:
  9839                           	opt stack 0
  9840                           
  9841                           ; 3 bytes @ 0x1E
  9842  00011E                     	ds	2
  9843  000120                     SyncTCBStub@hTCP:
  9844                           	opt stack 0
  9845  000120                     TCPRAMCopy@vDestType:
  9846                           	opt stack 0
  9847  000120                     MACGetHeader@type:
  9848                           	opt stack 0
  9849  000120                     CalcIPBufferChecksum@DataPtr:
  9850                           	opt stack 0
  9851  000120                     ARPResolve@IPAddr:
  9852                           	opt stack 0
  9853  000120                     FindEmpty@blockEnd:
  9854                           	opt stack 0
  9855  000120                     GenerateRandomDWORD@dwTotalTime:
  9856                           	opt stack 0
  9857  000120                     ARPProcess@packet:
  9858                           	opt stack 0
  9859                           
  9860                           ; 28 bytes @ 0x20
  9861  000120                     	ds	1
  9862  000121                     ?_TCPIsGetReady:
  9863                           	opt stack 0
  9864  000121                     ?_TCPIsPutReady:
  9865                           	opt stack 0
  9866  000121                     TCPIsConnected@hTCP:
  9867                           	opt stack 0
  9868  000121                     ___ftmul@cntr:
  9869                           	opt stack 0
  9870  000121                     TCPRAMCopy@ptrSource:
  9871                           	opt stack 0
  9872                           
  9873                           ; 2 bytes @ 0x21
  9874  000121                     	ds	1
  9875  000122                     ??_MACGetHeader:
  9876  000122                     ??_ARPResolve:
  9877  000122                     ___ftmul@sign:
  9878                           	opt stack 0
  9879  000122                     CalcIPBufferChecksum@Checksum:
  9880                           	opt stack 0
  9881  000122                     FindEmpty@addr:
  9882                           	opt stack 0
  9883                           
  9884                           ; 4 bytes @ 0x22
  9885  000122                     	ds	1
  9886  000123                     ??_TCPIsGetReady:
  9887  000123                     ??_TCPIsPutReady:
  9888  000123                     ?_fround:
  9889                           	opt stack 0
  9890  000123                     ?_scale:
  9891                           	opt stack 0
  9892  000123                     TCPRAMCopy@vSourceType:
  9893                           	opt stack 0
  9894                           
  9895                           ; 1 bytes @ 0x23
  9896  000123                     	ds	1
  9897  000124                     GenerateRandomDWORD@vBitCount:
  9898                           	opt stack 0
  9899  000124                     TCPRAMCopy@wLength:
  9900                           	opt stack 0
  9901  000124                     MACGetHeader@header:
  9902                           	opt stack 0
  9903                           
  9904                           ; 20 bytes @ 0x24
  9905  000124                     	ds	1
  9906  000125                     GenerateRandomDWORD@ADCON0Save:
  9907                           	opt stack 0
  9908  000125                     TCPIsPutReady@hTCP:
  9909                           	opt stack 0
  9910  000125                     TCPIsGetReady@hTCP:
  9911                           	opt stack 0
  9912                           
  9913                           ; 1 bytes @ 0x25
  9914  000125                     	ds	1
  9915  000126                     ??_SyncTCB:
  9916  000126                     GenerateRandomDWORD@ADCON2Save:
  9917                           	opt stack 0
  9918  000126                     TCPIsPutReady@i:
  9919                           	opt stack 0
  9920  000126                     CalcIPBufferChecksum@ChunkLen:
  9921                           	opt stack 0
  9922  000126                     TCPGetArray@buffer:
  9923                           	opt stack 0
  9924  000126                     FindEmpty@tmpAddr:
  9925                           	opt stack 0
  9926  000126                     _fround$10833:
  9927                           	opt stack 0
  9928  000126                     _scale$10834:
  9929                           	opt stack 0
  9930                           
  9931                           ; 3 bytes @ 0x26
  9932  000126                     	ds	1
  9933  000127                     GenerateRandomDWORD@T0CONSave:
  9934                           	opt stack 0
  9935                           
  9936                           ; 1 bytes @ 0x27
  9937  000127                     	ds	1
  9938  000128                     ??_SaveToFlash:
  9939  000128                     ?_MACCalcRxChecksum:
  9940                           	opt stack 0
  9941  000128                     GenerateRandomDWORD@TMR0HSave:
  9942                           	opt stack 0
  9943  000128                     SendTCP@vSendFlags:
  9944                           	opt stack 0
  9945  000128                     MACCalcRxChecksum@offset:
  9946                           	opt stack 0
  9947  000128                     TCPGetArray@len:
  9948                           	opt stack 0
  9949  000128                     FindMatchingSocket@h:
  9950                           	opt stack 0
  9951  000128                     _CloseSocket$7622:
  9952                           	opt stack 0
  9953                           
  9954                           ; 2 bytes @ 0x28
  9955  000128                     	ds	1
  9956  000129                     ??_SendTCP:
  9957  000129                     GenerateRandomDWORD@TMR0LSave:
  9958                           	opt stack 0
  9959  000129                     scale@scl:
  9960                           	opt stack 0
  9961  000129                     _fround$10832:
  9962                           	opt stack 0
  9963                           
  9964                           ; 3 bytes @ 0x29
  9965  000129                     	ds	1
  9966  00012A                     ??_TCPGetArray:
  9967  00012A                     MACCalcRxChecksum@len:
  9968                           	opt stack 0
  9969  00012A                     GenerateRandomDWORD@wLastValue:
  9970                           	opt stack 0
  9971  00012A                     FindMatchingSocket@remote:
  9972                           	opt stack 0
  9973                           
  9974                           ; 2 bytes @ 0x2A
  9975  00012A                     	ds	2
  9976  00012C                     ??_FindMatchingSocket:
  9977  00012C                     ??_MACCalcRxChecksum:
  9978  00012C                     fround@prec:
  9979                           	opt stack 0
  9980  00012C                     GenerateRandomDWORD@randomResult:
  9981                           	opt stack 0
  9982                           
  9983                           ; 4 bytes @ 0x2C
  9984  00012C                     	ds	1
  9985  00012D                     ?___ftadd:
  9986                           	opt stack 0
  9987  00012D                     ___ftadd@f1:
  9988                           	opt stack 0
  9989  00012D                     SendTCP@options:
  9990                           	opt stack 0
  9991                           
  9992                           ; 4 bytes @ 0x2D
  9993  00012D                     	ds	1
  9994  00012E                     TCPGetArray@hTCP:
  9995                           	opt stack 0
  9996  00012E                     MACCalcRxChecksum@RDSave:
  9997                           	opt stack 0
  9998  00012E                     _ARPResolve$3399:
  9999                           	opt stack 0
 10000                           
 10001                           ; 4 bytes @ 0x2E
 10002  00012E                     	ds	1
 10003  00012F                     TCPGetArray@wGetReadyCount:
 10004                           	opt stack 0
 10005                           
 10006                           ; 2 bytes @ 0x2F
 10007  00012F                     	ds	1
 10008  000130                     MACCalcRxChecksum@temp:
 10009                           	opt stack 0
 10010  000130                     GenerateRandomDWORD@wTime:
 10011                           	opt stack 0
 10012  000130                     ___ftadd@f2:
 10013                           	opt stack 0
 10014                           
 10015                           ; 3 bytes @ 0x30
 10016  000130                     	ds	1
 10017  000131                     TCPGetArray@RightLen:
 10018                           	opt stack 0
 10019  000131                     SendTCP@wVal:
 10020                           	opt stack 0
 10021                           
 10022                           ; 2 bytes @ 0x31
 10023  000131                     	ds	1
 10024  000132                     ??_TCPInit:
 10025  000132                     IPGetHeader@localIP:
 10026                           	opt stack 0
 10027  000132                     ARPResolve@packet:
 10028                           	opt stack 0
 10029                           
 10030                           ; 28 bytes @ 0x32
 10031  000132                     	ds	1
 10032  000133                     ??___ftadd:
 10033  000133                     SendTCP@vTCPFlags:
 10034                           	opt stack 0
 10035                           
 10036                           ; 1 bytes @ 0x33
 10037  000133                     	ds	1
 10038  000134                     IPGetHeader@remote:
 10039                           	opt stack 0
 10040  000134                     SendTCP@len:
 10041                           	opt stack 0
 10042  000134                     FindMatchingSocket@hash:
 10043                           	opt stack 0
 10044  000134                     SaveToFlash@addr:
 10045                           	opt stack 0
 10046                           
 10047                           ; 4 bytes @ 0x34
 10048  000134                     	ds	2
 10049  000136                     FindMatchingSocket@partialMatch:
 10050                           	opt stack 0
 10051  000136                     ___ftadd@sign:
 10052                           	opt stack 0
 10053  000136                     IPGetHeader@protocol:
 10054                           	opt stack 0
 10055  000136                     SendTCP@pseudoHeader:
 10056                           	opt stack 0
 10057                           
 10058                           ; 12 bytes @ 0x36
 10059  000136                     	ds	1
 10060  000137                     FindMatchingSocket@hTCP:
 10061                           	opt stack 0
 10062  000137                     ___ftadd@exp2:
 10063                           	opt stack 0
 10064                           
 10065                           ; 1 bytes @ 0x37
 10066  000137                     	ds	1
 10067  000138                     TCPInit@vSocketsAllocated:
 10068                           	opt stack 0
 10069  000138                     ___ftadd@exp1:
 10070                           	opt stack 0
 10071  000138                     IPGetHeader@len:
 10072                           	opt stack 0
 10073  000138                     FindMatchingSocket@wQueueInsertPos:
 10074                           	opt stack 0
 10075  000138                     SaveToFlash@cmp:
 10076                           	opt stack 0
 10077                           
 10078                           ; 2 bytes @ 0x38
 10079  000138                     	ds	1
 10080  000139                     ?___ftsub:
 10081                           	opt stack 0
 10082  000139                     ?___fttol:
 10083                           	opt stack 0
 10084  000139                     TCPInit@ptrBaseAddress:
 10085                           	opt stack 0
 10086  000139                     ___ftsub@f1:
 10087                           	opt stack 0
 10088  000139                     ___fttol@f1:
 10089                           	opt stack 0
 10090                           
 10091                           ; 3 bytes @ 0x39
 10092  000139                     	ds	1
 10093  00013A                     ??_IPGetHeader:
 10094  00013A                     SaveToFlash@success:
 10095                           	opt stack 0
 10096                           
 10097                           ; 1 bytes @ 0x3A
 10098  00013A                     	ds	1
 10099  00013B                     TCPInit@wTXSize:
 10100                           	opt stack 0
 10101  00013B                     SaveToFlash@emptyAddr:
 10102                           	opt stack 0
 10103                           
 10104                           ; 4 bytes @ 0x3B
 10105  00013B                     	ds	1
 10106  00013C                     ___ftsub@f2:
 10107                           	opt stack 0
 10108                           
 10109                           ; 3 bytes @ 0x3C
 10110  00013C                     	ds	1
 10111  00013D                     ??___fttol:
 10112  00013D                     TCPInit@wRXSize:
 10113                           	opt stack 0
 10114                           
 10115                           ; 2 bytes @ 0x3D
 10116  00013D                     	ds	1
 10117  00013E                     IPGetHeader@CalcChecksum:
 10118                           	opt stack 0
 10119                           
 10120                           ; 2 bytes @ 0x3E
 10121  00013E                     	ds	1
 10122  00013F                     TCPInit@wCurrentETHAddress:
 10123                           	opt stack 0
 10124                           
 10125                           ; 2 bytes @ 0x3F
 10126  00013F                     	ds	1
 10127  000140                     IPGetHeader@header:
 10128                           	opt stack 0
 10129                           
 10130                           ; 20 bytes @ 0x40
 10131  000140                     	ds	1
 10132  000141                     TCPInit@vMedium:
 10133                           	opt stack 0
 10134                           
 10135                           ; 1 bytes @ 0x41
 10136  000141                     	ds	1
 10137  000142                     TCPInit@i:
 10138                           	opt stack 0
 10139  000142                     ___fttol@sign1:
 10140                           	opt stack 0
 10141  000142                     SendTCP@header:
 10142                           	opt stack 0
 10143                           
 10144                           ; 20 bytes @ 0x42
 10145  000142                     	ds	1
 10146  000143                     ___fttol@lval:
 10147                           	opt stack 0
 10148  000143                     _StackInit$10831:
 10149                           	opt stack 0
 10150                           
 10151                           ; 4 bytes @ 0x43
 10152  000143                     	ds	4
 10153  000147                     ___fttol@exp1:
 10154                           	opt stack 0
 10155                           
 10156                           ; 1 bytes @ 0x47
 10157  000147                     	ds	1
 10158  000148                     ?_sprintf:
 10159                           	opt stack 0
 10160  000148                     ?_DbToCode:
 10161                           	opt stack 0
 10162  000148                     DbToCode@volume:
 10163                           	opt stack 0
 10164  000148                     sprintf@sp:
 10165                           	opt stack 0
 10166                           
 10167                           ; 2 bytes @ 0x48
 10168  000148                     	ds	2
 10169  00014A                     ??_DbToCode:
 10170  00014A                     sprintf@f:
 10171                           	opt stack 0
 10172                           
 10173                           ; 2 bytes @ 0x4A
 10174  00014A                     	ds	5
 10175  00014F                     ??_sprintf:
 10176                           
 10177                           ; 0 bytes @ 0x4F
 10178  00014F                     	ds	1
 10179  000150                     DbToCode@k:
 10180                           	opt stack 0
 10181                           
 10182                           ; 3 bytes @ 0x50
 10183  000150                     	ds	3
 10184  000153                     ??_SendDataToDeviceCh:
 10185                           
 10186                           ; 0 bytes @ 0x53
 10187  000153                     	ds	2
 10188  000155                     _sprintf$10835:
 10189                           	opt stack 0
 10190                           
 10191                           ; 3 bytes @ 0x55
 10192  000155                     	ds	1
 10193  000156                     TCPDisconnect@hTCP:
 10194                           	opt stack 0
 10195  000156                     TCPFlush@hTCP:
 10196                           	opt stack 0
 10197  000156                     HandleTCPSeg@h:
 10198                           	opt stack 0
 10199  000156                     SendDataToDeviceCh@v:
 10200                           	opt stack 0
 10201  000156                     TCPOpen@dwRemoteHost:
 10202                           	opt stack 0
 10203                           
 10204                           ; 4 bytes @ 0x56
 10205  000156                     	ds	1
 10206  000157                     ??_TCPTick:
 10207  000157                     ?_TCPPutArray:
 10208                           	opt stack 0
 10209  000157                     TCPClose@hTCP:
 10210                           	opt stack 0
 10211  000157                     TCPPutArray@data:
 10212                           	opt stack 0
 10213                           
 10214                           ; 2 bytes @ 0x57
 10215  000157                     	ds	1
 10216  000158                     SendDataToDeviceCh@offset:
 10217                           	opt stack 0
 10218  000158                     HandleTCPSeg@len:
 10219                           	opt stack 0
 10220  000158                     _sprintf$9357:
 10221                           	opt stack 0
 10222                           
 10223                           ; 4 bytes @ 0x58
 10224  000158                     	ds	1
 10225  000159                     TCPPutArray@len:
 10226                           	opt stack 0
 10227  000159                     SendDataToDeviceCh@values:
 10228                           	opt stack 0
 10229                           
 10230                           ; 16 bytes @ 0x59
 10231  000159                     	ds	1
 10232  00015A                     ??_HandleTCPSeg:
 10233  00015A                     TCPOpen@vRemoteHostType:
 10234                           	opt stack 0
 10235                           
 10236                           ; 1 bytes @ 0x5A
 10237  00015A                     	ds	1
 10238  00015B                     ??_TCPPutArray:
 10239  00015B                     TCPOpen@wPort:
 10240                           	opt stack 0
 10241                           
 10242                           ; 2 bytes @ 0x5B
 10243  00015B                     	ds	1
 10244  00015C                     sprintf@ap:
 10245                           	opt stack 0
 10246                           
 10247                           ; 2 bytes @ 0x5C
 10248  00015C                     	ds	1
 10249  00015D                     TCPOpen@vSocketPurpose:
 10250                           	opt stack 0
 10251                           
 10252                           ; 1 bytes @ 0x5D
 10253  00015D                     	ds	1
 10254  00015E                     ??_TCPOpen:
 10255  00015E                     sprintf@vd:
 10256                           	opt stack 0
 10257                           
 10258                           ; 4 bytes @ 0x5E
 10259  00015E                     	ds	1
 10260  00015F                     TCPPutArray@wRightLen:
 10261                           	opt stack 0
 10262                           
 10263                           ; 2 bytes @ 0x5F
 10264  00015F                     	ds	2
 10265  000161                     TCPPutArray@wActualLen:
 10266                           	opt stack 0
 10267                           
 10268                           ; 2 bytes @ 0x61
 10269  000161                     	ds	1
 10270  000162                     TCPOpen@hTCP:
 10271                           	opt stack 0
 10272  000162                     HandleTCPSeg@wNewWindow:
 10273                           	opt stack 0
 10274  000162                     sprintf@vd_9359:
 10275                           	opt stack 0
 10276                           
 10277                           ; 4 bytes @ 0x62
 10278  000162                     	ds	1
 10279  000163                     TCPTick@bCloseSocket:
 10280                           	opt stack 0
 10281  000163                     TCPPutArray@wFreeTXSpace:
 10282                           	opt stack 0
 10283                           
 10284                           ; 2 bytes @ 0x63
 10285  000163                     	ds	1
 10286  000164                     TCPTick@bRetransmit:
 10287                           	opt stack 0
 10288  000164                     HandleTCPSeg@bSegmentAcceptable:
 10289                           	opt stack 0
 10290                           
 10291                           ; 1 bytes @ 0x64
 10292  000164                     	ds	1
 10293  000165                     TCPPutArray@hTCP:
 10294                           	opt stack 0
 10295  000165                     TCPTick@hTCP:
 10296                           	opt stack 0
 10297  000165                     HandleTCPSeg@localSeqNumber:
 10298                           	opt stack 0
 10299                           
 10300                           ; 4 bytes @ 0x65
 10301  000165                     	ds	1
 10302  000166                     TCPTick@vFlags:
 10303                           	opt stack 0
 10304  000166                     sprintf@ccnt:
 10305                           	opt stack 0
 10306                           
 10307                           ; 2 bytes @ 0x66
 10308  000166                     	ds	1
 10309  000167                     TCPTick@w:
 10310                           	opt stack 0
 10311                           
 10312                           ; 2 bytes @ 0x67
 10313  000167                     	ds	1
 10314  000168                     sprintf@integ:
 10315                           	opt stack 0
 10316                           
 10317                           ; 3 bytes @ 0x68
 10318  000168                     	ds	1
 10319  000169                     SendDataToDeviceCh@i:
 10320                           	opt stack 0
 10321  000169                     HandleTCPSeg@wSegmentLength:
 10322                           	opt stack 0
 10323                           
 10324                           ; 2 bytes @ 0x69
 10325  000169                     	ds	1
 10326  00016A                     SendDataToDeviceCh@mask:
 10327                           	opt stack 0
 10328                           
 10329                           ; 2 bytes @ 0x6A
 10330  00016A                     	ds	1
 10331  00016B                     HandleTCPSeg@dwTemp:
 10332                           	opt stack 0
 10333  00016B                     sprintf@_val:
 10334                           	opt stack 0
 10335                           
 10336                           ; 5 bytes @ 0x6B
 10337  00016B                     	ds	1
 10338  00016C                     
 10339                           ; 0 bytes @ 0x6C
 10340  00016C                     	ds	3
 10341  00016F                     HandleTCPSeg@lMissingBytes:
 10342                           	opt stack 0
 10343                           
 10344                           ; 4 bytes @ 0x6F
 10345  00016F                     	ds	1
 10346  000170                     sprintf@flag:
 10347                           	opt stack 0
 10348                           
 10349                           ; 2 bytes @ 0x70
 10350  000170                     	ds	2
 10351  000172                     sprintf@width:
 10352                           	opt stack 0
 10353                           
 10354                           ; 2 bytes @ 0x72
 10355  000172                     	ds	1
 10356  000173                     HandleTCPSeg@wFreeSpace:
 10357                           	opt stack 0
 10358                           
 10359                           ; 2 bytes @ 0x73
 10360  000173                     	ds	1
 10361  000174                     sprintf@exp:
 10362                           	opt stack 0
 10363                           
 10364                           ; 2 bytes @ 0x74
 10365  000174                     	ds	1
 10366  000175                     HandleTCPSeg@localAckNumber:
 10367                           	opt stack 0
 10368                           
 10369                           ; 4 bytes @ 0x75
 10370  000175                     	ds	1
 10371  000176                     sprintf@fval:
 10372                           	opt stack 0
 10373                           
 10374                           ; 3 bytes @ 0x76
 10375  000176                     	ds	3
 10376  000179                     HandleTCPSeg@localHeaderFlags:
 10377                           	opt stack 0
 10378  000179                     sprintf@prec:
 10379                           	opt stack 0
 10380                           
 10381                           ; 2 bytes @ 0x79
 10382  000179                     	ds	1
 10383  00017A                     HandleTCPSeg@wTemp:
 10384                           	opt stack 0
 10385                           
 10386                           ; 2 bytes @ 0x7A
 10387  00017A                     	ds	1
 10388  00017B                     sprintf@c:
 10389                           	opt stack 0
 10390                           
 10391                           ; 1 bytes @ 0x7B
 10392  00017B                     	ds	1
 10393  00017C                     ??_UpdateMasterVolume:
 10394  00017C                     HandleTCPSeg@wMissingBytes:
 10395                           	opt stack 0
 10396                           
 10397                           ; 2 bytes @ 0x7C
 10398  00017C                     	ds	2
 10399  00017E                     TCPProcess@remote:
 10400                           	opt stack 0
 10401  00017E                     UpdateMasterVolume@dvol:
 10402                           	opt stack 0
 10403                           
 10404                           ; 3 bytes @ 0x7E
 10405  00017E                     	ds	2
 10406  000180                     TCPProcess@localIP:
 10407                           	opt stack 0
 10408                           
 10409                           ; 2 bytes @ 0x80
 10410  000180                     	ds	1
 10411  000181                     UpdateMasterVolume@i:
 10412                           	opt stack 0
 10413                           
 10414                           ; 1 bytes @ 0x81
 10415  000181                     	ds	1
 10416  000182                     TCPProcess@len:
 10417                           	opt stack 0
 10418  000182                     TCPServer@wMaxGet:
 10419                           	opt stack 0
 10420                           
 10421                           ; 2 bytes @ 0x82
 10422  000182                     	ds	2
 10423  000184                     ??_TCPProcess:
 10424  000184                     TCPServer@wMaxPut:
 10425                           	opt stack 0
 10426                           
 10427                           ; 2 bytes @ 0x84
 10428  000184                     	ds	2
 10429  000186                     TCPServer@checksum:
 10430                           	opt stack 0
 10431  000186                     TCPProcess@checksum1:
 10432                           	opt stack 0
 10433                           
 10434                           ; 2 bytes @ 0x86
 10435  000186                     	ds	1
 10436  000187                     TCPServer@cmdBytes:
 10437                           	opt stack 0
 10438                           
 10439                           ; 18 bytes @ 0x87
 10440  000187                     	ds	1
 10441  000188                     TCPProcess@checksum2:
 10442                           	opt stack 0
 10443                           
 10444                           ; 2 bytes @ 0x88
 10445  000188                     	ds	2
 10446  00018A                     TCPProcess@optionsSize:
 10447                           	opt stack 0
 10448                           
 10449                           ; 1 bytes @ 0x8A
 10450  00018A                     	ds	1
 10451  00018B                     TCPProcess@pseudoHeader:
 10452                           	opt stack 0
 10453                           
 10454                           ; 12 bytes @ 0x8B
 10455  00018B                     	ds	12
 10456  000197                     TCPProcess@TCPHeader:
 10457                           	opt stack 0
 10458                           
 10459                           ; 20 bytes @ 0x97
 10460  000197                     	ds	20
 10461  0001AB                     StackTask@dataCount:
 10462                           	opt stack 0
 10463                           
 10464                           ; 2 bytes @ 0xAB
 10465  0001AB                     	ds	2
 10466  0001AD                     StackTask@tempLocalIP:
 10467                           	opt stack 0
 10468                           
 10469                           ; 4 bytes @ 0xAD
 10470  0001AD                     	ds	4
 10471  0001B1                     StackTask@cIPFrameType:
 10472                           	opt stack 0
 10473                           
 10474                           ; 1 bytes @ 0xB1
 10475  0001B1                     	ds	1
 10476  0001B2                     StackTask@cFrameType:
 10477                           	opt stack 0
 10478                           
 10479                           ; 1 bytes @ 0xB2
 10480  0001B2                     	ds	1
 10481  0001B3                     tblptru	equ	0xFF8
 10482                           tblptrh	equ	0xFF7
 10483                           tblptrl	equ	0xFF6
 10484                           tablat	equ	0xFF5
 10485                           postinc0	equ	0xFEE
 10486                           wreg	equ	0xFE8
 10487                           postdec1	equ	0xFE5
 10488                           fsr1h	equ	0xFE2
 10489                           fsr1l	equ	0xFE1
 10490                           
 10491                           ; 0 bytes @ 0xB3
 10492                           
 10493                           	psect	cstackBANK0
 10494  000060                     __pcstackBANK0:
 10495                           	opt stack 0
 10496  000060                     i2_sprintf$11863:
 10497                           	opt stack 0
 10498  000060                     i2SendDataToDeviceCh@values:
 10499                           	opt stack 0
 10500                           
 10501                           ; 16 bytes @ 0x0
 10502  000060                     	ds	3
 10503  000063                     i2_sprintf$9357:
 10504                           	opt stack 0
 10505                           
 10506                           ; 4 bytes @ 0x3
 10507  000063                     	ds	4
 10508  000067                     i2sprintf@ap:
 10509                           	opt stack 0
 10510                           
 10511                           ; 2 bytes @ 0x7
 10512  000067                     	ds	2
 10513  000069                     i2sprintf@vd:
 10514                           	opt stack 0
 10515                           
 10516                           ; 4 bytes @ 0x9
 10517  000069                     	ds	4
 10518  00006D                     i2sprintf@vd_9359:
 10519                           	opt stack 0
 10520                           
 10521                           ; 4 bytes @ 0xD
 10522  00006D                     	ds	3
 10523  000070                     i2SendDataToDeviceCh@v:
 10524                           	opt stack 0
 10525                           
 10526                           ; 2 bytes @ 0x10
 10527  000070                     	ds	1
 10528  000071                     i2sprintf@ccnt:
 10529                           	opt stack 0
 10530                           
 10531                           ; 2 bytes @ 0x11
 10532  000071                     	ds	1
 10533  000072                     i2SendDataToDeviceCh@offset:
 10534                           	opt stack 0
 10535                           
 10536                           ; 1 bytes @ 0x12
 10537  000072                     	ds	1
 10538  000073                     i2SendDataToDeviceCh@i:
 10539                           	opt stack 0
 10540  000073                     i2sprintf@integ:
 10541                           	opt stack 0
 10542                           
 10543                           ; 3 bytes @ 0x13
 10544  000073                     	ds	1
 10545  000074                     i2SendDataToDeviceCh@mask:
 10546                           	opt stack 0
 10547                           
 10548                           ; 2 bytes @ 0x14
 10549  000074                     	ds	2
 10550  000076                     i2sprintf@_val:
 10551                           	opt stack 0
 10552                           
 10553                           ; 5 bytes @ 0x16
 10554  000076                     	ds	5
 10555  00007B                     i2sprintf@flag:
 10556                           	opt stack 0
 10557                           
 10558                           ; 2 bytes @ 0x1B
 10559  00007B                     	ds	2
 10560  00007D                     i2sprintf@width:
 10561                           	opt stack 0
 10562                           
 10563                           ; 2 bytes @ 0x1D
 10564  00007D                     	ds	2
 10565  00007F                     i2sprintf@exp:
 10566                           	opt stack 0
 10567                           
 10568                           ; 2 bytes @ 0x1F
 10569  00007F                     	ds	2
 10570  000081                     i2sprintf@fval:
 10571                           	opt stack 0
 10572                           
 10573                           ; 3 bytes @ 0x21
 10574  000081                     	ds	3
 10575  000084                     i2sprintf@prec:
 10576                           	opt stack 0
 10577                           
 10578                           ; 2 bytes @ 0x24
 10579  000084                     	ds	2
 10580  000086                     i2sprintf@c:
 10581                           	opt stack 0
 10582                           
 10583                           ; 1 bytes @ 0x26
 10584  000086                     	ds	1
 10585  000087                     ??_ProcessIRCode:
 10586                           
 10587                           ; 0 bytes @ 0x27
 10588  000087                     	ds	12
 10589  000093                     ProcessIRCode@numTick:
 10590                           	opt stack 0
 10591                           
 10592                           ; 4 bytes @ 0x33
 10593  000093                     	ds	4
 10594  000097                     ProcessIRCode@delta:
 10595                           	opt stack 0
 10596                           
 10597                           ; 1 bytes @ 0x37
 10598  000097                     	ds	1
 10599  000098                     ??_ISRLP:
 10600                           
 10601                           ; 0 bytes @ 0x38
 10602  000098                     	ds	18
 10603  0000AA                     ISRLP@diff:
 10604                           	opt stack 0
 10605                           
 10606                           ; 4 bytes @ 0x4A
 10607  0000AA                     	ds	4
 10608  0000AE                     ISRLP@currentTS:
 10609                           	opt stack 0
 10610                           
 10611                           ; 4 bytes @ 0x4E
 10612  0000AE                     	ds	4
 10613  0000B2                     ISRLP@d:
 10614                           	opt stack 0
 10615                           
 10616                           ; 1 bytes @ 0x52
 10617  0000B2                     	ds	1
 10618                           tblptru	equ	0xFF8
 10619                           tblptrh	equ	0xFF7
 10620                           tblptrl	equ	0xFF6
 10621                           tablat	equ	0xFF5
 10622                           postinc0	equ	0xFEE
 10623                           wreg	equ	0xFE8
 10624                           postdec1	equ	0xFE5
 10625                           fsr1h	equ	0xFE2
 10626                           fsr1l	equ	0xFE1
 10627                           
 10628                           	psect	cstackCOMRAM
 10629  000001                     __pcstackCOMRAM:
 10630                           	opt stack 0
 10631  000001                     ??i2_Delay10KTCYx:
 10632  000001                     ??i2_isdigit:
 10633  000001                     ?i2___awmod:
 10634                           	opt stack 0
 10635  000001                     ?i2_memcmp:
 10636                           	opt stack 0
 10637  000001                     ?i2___ftpack:
 10638                           	opt stack 0
 10639  000001                     ?i2___ftneg:
 10640                           	opt stack 0
 10641  000001                     ?i2_TickGet:
 10642                           	opt stack 0
 10643  000001                     ?i2__div_to_l_:
 10644                           	opt stack 0
 10645  000001                     ?i2__tdiv_to_l_:
 10646                           	opt stack 0
 10647  000001                     ?i2___lldiv:
 10648                           	opt stack 0
 10649  000001                     ?i2___llmod:
 10650                           	opt stack 0
 10651  000001                     i2WriteDataSLCD@data:
 10652                           	opt stack 0
 10653  000001                     i2WriteCmdSLCD@cmd:
 10654                           	opt stack 0
 10655  000001                     i2Delay1KTCYx@unit:
 10656                           	opt stack 0
 10657  000001                     i2GetCheckSum@data:
 10658                           	opt stack 0
 10659  000001                     i2___awmod@dividend:
 10660                           	opt stack 0
 10661  000001                     i2memcmp@s1:
 10662                           	opt stack 0
 10663  000001                     i2memset@p1:
 10664                           	opt stack 0
 10665  000001                     i2__div_to_l_@f1:
 10666                           	opt stack 0
 10667  000001                     i2___ftpack@arg:
 10668                           	opt stack 0
 10669  000001                     i2__tdiv_to_l_@f1:
 10670                           	opt stack 0
 10671  000001                     i2___ftge@ff1:
 10672                           	opt stack 0
 10673  000001                     i2___ftneg@f1:
 10674                           	opt stack 0
 10675  000001                     i2EraseFlash@startaddr:
 10676                           	opt stack 0
 10677  000001                     i2ReadFlash@startaddr:
 10678                           	opt stack 0
 10679  000001                     i2WriteBlockFlash@startaddr:
 10680                           	opt stack 0
 10681  000001                     i2___lldiv@dividend:
 10682                           	opt stack 0
 10683  000001                     i2___llmod@dividend:
 10684                           	opt stack 0
 10685                           
 10686                           ; 4 bytes @ 0x0
 10687  000001                     	ds	1
 10688  000002                     i2SLCDSetDDRamAddr@DDaddr:
 10689                           	opt stack 0
 10690  000002                     i2Delay10KTCYx@unit:
 10691                           	opt stack 0
 10692  000002                     i2_isdigit$10242:
 10693                           	opt stack 0
 10694  000002                     i2PutsSLCD@buffer:
 10695                           	opt stack 0
 10696                           
 10697                           ; 2 bytes @ 0x1
 10698  000002                     	ds	1
 10699  000003                     i2GetCheckSum@dataLen:
 10700                           	opt stack 0
 10701  000003                     i2isdigit@c:
 10702                           	opt stack 0
 10703  000003                     i2___awmod@divisor:
 10704                           	opt stack 0
 10705  000003                     i2memcmp@s2:
 10706                           	opt stack 0
 10707  000003                     i2memset@c:
 10708                           	opt stack 0
 10709                           
 10710                           ; 2 bytes @ 0x2
 10711  000003                     	ds	1
 10712  000004                     i2GetCheckSum@res:
 10713                           	opt stack 0
 10714  000004                     i2___ftpack@exp:
 10715                           	opt stack 0
 10716  000004                     i2RefreshLine1Ex@line:
 10717                           	opt stack 0
 10718  000004                     i2RefreshLine2Ex@line:
 10719                           	opt stack 0
 10720  000004                     i2__div_to_l_@f2:
 10721                           	opt stack 0
 10722  000004                     i2__tdiv_to_l_@f2:
 10723                           	opt stack 0
 10724  000004                     i2___ftge@ff2:
 10725                           	opt stack 0
 10726                           
 10727                           ; 3 bytes @ 0x3
 10728  000004                     	ds	1
 10729  000005                     i2GetCheckSum@i:
 10730                           	opt stack 0
 10731  000005                     i2WriteBlockFlash@num_blocks:
 10732                           	opt stack 0
 10733  000005                     i2___awmod@counter:
 10734                           	opt stack 0
 10735  000005                     i2___ftpack@sign:
 10736                           	opt stack 0
 10737  000005                     i2ReadFlash@num_bytes:
 10738                           	opt stack 0
 10739  000005                     i2memcmp@n:
 10740                           	opt stack 0
 10741  000005                     i2memset@n:
 10742                           	opt stack 0
 10743  000005                     i2TickGet@dw:
 10744                           	opt stack 0
 10745  000005                     i2EraseFlash@endaddr:
 10746                           	opt stack 0
 10747  000005                     i2___lldiv@divisor:
 10748                           	opt stack 0
 10749  000005                     i2___llmod@divisor:
 10750                           	opt stack 0
 10751                           
 10752                           ; 4 bytes @ 0x4
 10753  000005                     	ds	1
 10754  000006                     ??i2___ftpack:
 10755  000006                     i2___awmod@sign:
 10756                           	opt stack 0
 10757  000006                     i2UpdateSampleRate@srStr:
 10758                           	opt stack 0
 10759  000006                     i2WriteBlockFlash@flash_array:
 10760                           	opt stack 0
 10761                           
 10762                           ; 2 bytes @ 0x5
 10763  000006                     	ds	1
 10764  000007                     ??i2__div_to_l_:
 10765  000007                     ??i2__tdiv_to_l_:
 10766  000007                     ??i2___ftge:
 10767  000007                     ??i2_memcmp:
 10768  000007                     ?i2___awdiv:
 10769                           	opt stack 0
 10770  000007                     i2ReadFlash@flash_array:
 10771                           	opt stack 0
 10772  000007                     i2___awdiv@dividend:
 10773                           	opt stack 0
 10774  000007                     i2memset@p:
 10775                           	opt stack 0
 10776                           
 10777                           ; 2 bytes @ 0x6
 10778  000007                     	ds	1
 10779  000008                     ??i2_WriteBlockFlash:
 10780                           
 10781                           ; 0 bytes @ 0x7
 10782  000008                     	ds	1
 10783  000009                     ??_ProcessIRInt:
 10784  000009                     ?i2___awtoft:
 10785                           	opt stack 0
 10786  000009                     ?i2___lltoft:
 10787                           	opt stack 0
 10788  000009                     ?i2___lwtoft:
 10789                           	opt stack 0
 10790  000009                     i2EraseFlash@flag:
 10791                           	opt stack 0
 10792  000009                     i2___llmod@counter:
 10793                           	opt stack 0
 10794  000009                     i2___awdiv@divisor:
 10795                           	opt stack 0
 10796  000009                     i2___awtoft@c:
 10797                           	opt stack 0
 10798  000009                     i2___lwtoft@c:
 10799                           	opt stack 0
 10800  000009                     i2WriteBlockFlash@startptr:
 10801                           	opt stack 0
 10802  000009                     i2ReadFlash@flash_addr:
 10803                           	opt stack 0
 10804  000009                     i2___lldiv@quotient:
 10805                           	opt stack 0
 10806  000009                     i2___lltoft@c:
 10807                           	opt stack 0
 10808                           
 10809                           ; 4 bytes @ 0x8
 10810  000009                     	ds	1
 10811  00000A                     i2EraseFlash@flash_addr:
 10812                           	opt stack 0
 10813  00000A                     i2__tdiv_to_l_@quot:
 10814                           	opt stack 0
 10815                           
 10816                           ; 4 bytes @ 0x9
 10817  00000A                     	ds	1
 10818  00000B                     i2___awdiv@counter:
 10819                           	opt stack 0
 10820  00000B                     i2__div_to_l_@quot:
 10821                           	opt stack 0
 10822                           
 10823                           ; 4 bytes @ 0xA
 10824  00000B                     	ds	1
 10825  00000C                     i2WriteBlockFlash@write_byte:
 10826                           	opt stack 0
 10827  00000C                     i2___awdiv@sign:
 10828                           	opt stack 0
 10829  00000C                     i2___awtoft@sign:
 10830                           	opt stack 0
 10831                           
 10832                           ; 1 bytes @ 0xB
 10833  00000C                     	ds	1
 10834  00000D                     ??i2___lltoft:
 10835  00000D                     ?i2___ftdiv:
 10836                           	opt stack 0
 10837  00000D                     i2WriteBlockFlash@flag:
 10838                           	opt stack 0
 10839  00000D                     i2___lldiv@counter:
 10840                           	opt stack 0
 10841  00000D                     i2___awdiv@quotient:
 10842                           	opt stack 0
 10843  00000D                     i2___ftdiv@f1:
 10844                           	opt stack 0
 10845  00000D                     ProcessIRInt@diff:
 10846                           	opt stack 0
 10847  00000D                     i2ReadFlash@tblptr_save:
 10848                           	opt stack 0
 10849                           
 10850                           ; 4 bytes @ 0xC
 10851  00000D                     	ds	1
 10852  00000E                     i2__tdiv_to_l_@cntr:
 10853                           	opt stack 0
 10854  00000E                     i2WriteBlockFlash@saddress:
 10855                           	opt stack 0
 10856                           
 10857                           ; 4 bytes @ 0xD
 10858  00000E                     	ds	1
 10859  00000F                     ?i2___wmul:
 10860                           	opt stack 0
 10861  00000F                     i2__div_to_l_@cntr:
 10862                           	opt stack 0
 10863  00000F                     i2__tdiv_to_l_@exp1:
 10864                           	opt stack 0
 10865  00000F                     i2___wmul@multiplier:
 10866                           	opt stack 0
 10867                           
 10868                           ; 2 bytes @ 0xE
 10869  00000F                     	ds	1
 10870  000010                     i2__div_to_l_@exp1:
 10871                           	opt stack 0
 10872  000010                     i2___ftdiv@f2:
 10873                           	opt stack 0
 10874                           
 10875                           ; 3 bytes @ 0xF
 10876  000010                     	ds	1
 10877  000011                     ?i2_FindEmpty:
 10878                           	opt stack 0
 10879  000011                     i2___lltoft@exp:
 10880                           	opt stack 0
 10881  000011                     i2___wmul@multiplicand:
 10882                           	opt stack 0
 10883  000011                     ProcessIRInt@numTicks:
 10884                           	opt stack 0
 10885  000011                     i2FindEmpty@startAddr:
 10886                           	opt stack 0
 10887                           
 10888                           ; 4 bytes @ 0x10
 10889  000011                     	ds	2
 10890  000013                     ??i2___ftdiv:
 10891  000013                     i2___wmul@product:
 10892                           	opt stack 0
 10893                           
 10894                           ; 2 bytes @ 0x12
 10895  000013                     	ds	2
 10896  000015                     ??i2_FindEmpty:
 10897  000015                     ?i2___ftmul:
 10898                           	opt stack 0
 10899  000015                     i2___ftmul@f1:
 10900                           	opt stack 0
 10901                           
 10902                           ; 3 bytes @ 0x14
 10903  000015                     	ds	1
 10904  000016                     i2___ftdiv@cntr:
 10905                           	opt stack 0
 10906                           
 10907                           ; 1 bytes @ 0x15
 10908  000016                     	ds	1
 10909  000017                     i2___ftdiv@f3:
 10910                           	opt stack 0
 10911                           
 10912                           ; 3 bytes @ 0x16
 10913  000017                     	ds	1
 10914  000018                     i2___ftmul@f2:
 10915                           	opt stack 0
 10916                           
 10917                           ; 3 bytes @ 0x17
 10918  000018                     	ds	2
 10919  00001A                     i2___ftdiv@exp:
 10920                           	opt stack 0
 10921                           
 10922                           ; 1 bytes @ 0x19
 10923  00001A                     	ds	1
 10924  00001B                     ??i2___ftmul:
 10925  00001B                     i2___ftdiv@sign:
 10926                           	opt stack 0
 10927                           
 10928                           ; 1 bytes @ 0x1A
 10929  00001B                     	ds	2
 10930  00001D                     i2FindEmpty@addrStop:
 10931                           	opt stack 0
 10932                           
 10933                           ; 4 bytes @ 0x1C
 10934  00001D                     	ds	1
 10935  00001E                     i2___ftmul@exp:
 10936                           	opt stack 0
 10937                           
 10938                           ; 1 bytes @ 0x1D
 10939  00001E                     	ds	1
 10940  00001F                     i2___ftmul@f3_as_product:
 10941                           	opt stack 0
 10942                           
 10943                           ; 3 bytes @ 0x1E
 10944  00001F                     	ds	2
 10945  000021                     i2FindEmpty@blockEnd:
 10946                           	opt stack 0
 10947                           
 10948                           ; 2 bytes @ 0x20
 10949  000021                     	ds	1
 10950  000022                     i2___ftmul@cntr:
 10951                           	opt stack 0
 10952                           
 10953                           ; 1 bytes @ 0x21
 10954  000022                     	ds	1
 10955  000023                     i2___ftmul@sign:
 10956                           	opt stack 0
 10957  000023                     i2FindEmpty@addr:
 10958                           	opt stack 0
 10959                           
 10960                           ; 4 bytes @ 0x22
 10961  000023                     	ds	1
 10962  000024                     ?i2_fround:
 10963                           	opt stack 0
 10964  000024                     ?i2_scale:
 10965                           	opt stack 0
 10966                           
 10967                           ; 3 bytes @ 0x23
 10968  000024                     	ds	3
 10969  000027                     i2FindEmpty@tmpAddr:
 10970                           	opt stack 0
 10971  000027                     i2_fround$11861:
 10972                           	opt stack 0
 10973  000027                     i2_scale$11862:
 10974                           	opt stack 0
 10975                           
 10976                           ; 3 bytes @ 0x26
 10977  000027                     	ds	2
 10978  000029                     ??i2_SaveToFlash:
 10979                           
 10980                           ; 0 bytes @ 0x28
 10981  000029                     	ds	1
 10982  00002A                     i2scale@scl:
 10983                           	opt stack 0
 10984  00002A                     i2_fround$11860:
 10985                           	opt stack 0
 10986                           
 10987                           ; 3 bytes @ 0x29
 10988  00002A                     	ds	3
 10989  00002D                     i2fround@prec:
 10990                           	opt stack 0
 10991                           
 10992                           ; 1 bytes @ 0x2C
 10993  00002D                     	ds	1
 10994  00002E                     ?i2___ftadd:
 10995                           	opt stack 0
 10996  00002E                     i2___ftadd@f1:
 10997                           	opt stack 0
 10998                           
 10999                           ; 3 bytes @ 0x2D
 11000  00002E                     	ds	3
 11001  000031                     i2___ftadd@f2:
 11002                           	opt stack 0
 11003                           
 11004                           ; 3 bytes @ 0x30
 11005  000031                     	ds	3
 11006  000034                     ??i2___ftadd:
 11007                           
 11008                           ; 0 bytes @ 0x33
 11009  000034                     	ds	1
 11010  000035                     i2SaveToFlash@addr:
 11011                           	opt stack 0
 11012                           
 11013                           ; 4 bytes @ 0x34
 11014  000035                     	ds	2
 11015  000037                     i2___ftadd@sign:
 11016                           	opt stack 0
 11017                           
 11018                           ; 1 bytes @ 0x36
 11019  000037                     	ds	1
 11020  000038                     i2___ftadd@exp2:
 11021                           	opt stack 0
 11022                           
 11023                           ; 1 bytes @ 0x37
 11024  000038                     	ds	1
 11025  000039                     i2___ftadd@exp1:
 11026                           	opt stack 0
 11027  000039                     i2SaveToFlash@cmp:
 11028                           	opt stack 0
 11029                           
 11030                           ; 2 bytes @ 0x38
 11031  000039                     	ds	1
 11032  00003A                     ?i2___ftsub:
 11033                           	opt stack 0
 11034  00003A                     ?i2___fttol:
 11035                           	opt stack 0
 11036  00003A                     i2___ftsub@f1:
 11037                           	opt stack 0
 11038  00003A                     i2___fttol@f1:
 11039                           	opt stack 0
 11040                           
 11041                           ; 3 bytes @ 0x39
 11042  00003A                     	ds	1
 11043  00003B                     i2SaveToFlash@success:
 11044                           	opt stack 0
 11045                           
 11046                           ; 1 bytes @ 0x3A
 11047  00003B                     	ds	1
 11048  00003C                     i2SaveToFlash@emptyAddr:
 11049                           	opt stack 0
 11050                           
 11051                           ; 4 bytes @ 0x3B
 11052  00003C                     	ds	1
 11053  00003D                     i2___ftsub@f2:
 11054                           	opt stack 0
 11055                           
 11056                           ; 3 bytes @ 0x3C
 11057  00003D                     	ds	1
 11058  00003E                     ??i2___fttol:
 11059                           
 11060                           ; 0 bytes @ 0x3D
 11061  00003E                     	ds	2
 11062  000040                     
 11063                           ; 0 bytes @ 0x3F
 11064  000040                     	ds	3
 11065  000043                     i2___fttol@sign1:
 11066                           	opt stack 0
 11067                           
 11068                           ; 1 bytes @ 0x42
 11069  000043                     	ds	1
 11070  000044                     i2___fttol@lval:
 11071                           	opt stack 0
 11072                           
 11073                           ; 4 bytes @ 0x43
 11074  000044                     	ds	4
 11075  000048                     i2___fttol@exp1:
 11076                           	opt stack 0
 11077                           
 11078                           ; 1 bytes @ 0x47
 11079  000048                     	ds	1
 11080  000049                     ?i2_DbToCode:
 11081                           	opt stack 0
 11082  000049                     ?i2_sprintf:
 11083                           	opt stack 0
 11084  000049                     i2DbToCode@volume:
 11085                           	opt stack 0
 11086  000049                     i2sprintf@sp:
 11087                           	opt stack 0
 11088                           
 11089                           ; 2 bytes @ 0x48
 11090  000049                     	ds	2
 11091  00004B                     ??i2_DbToCode:
 11092  00004B                     i2sprintf@f:
 11093                           	opt stack 0
 11094                           
 11095                           ; 2 bytes @ 0x4A
 11096  00004B                     	ds	5
 11097  000050                     ??i2_sprintf:
 11098                           
 11099                           ; 0 bytes @ 0x4F
 11100  000050                     	ds	1
 11101  000051                     i2DbToCode@k:
 11102                           	opt stack 0
 11103                           
 11104                           ; 3 bytes @ 0x50
 11105  000051                     	ds	3
 11106  000054                     ??i2_SendDataToDeviceCh:
 11107                           
 11108                           ; 0 bytes @ 0x53
 11109  000054                     	ds	3
 11110  000057                     ??i2_UpdateMasterVolume:
 11111  000057                     
 11112                           ; 0 bytes @ 0x56
 11113  000057                     	ds	2
 11114  000059                     i2UpdateMasterVolume@dvol:
 11115                           	opt stack 0
 11116                           
 11117                           ; 3 bytes @ 0x58
 11118  000059                     	ds	3
 11119  00005C                     i2UpdateMasterVolume@i:
 11120                           	opt stack 0
 11121                           
 11122                           ; 1 bytes @ 0x5B
 11123  00005C                     	ds	1
 11124  00005D                     ChangeMasterVolume@prev:
 11125                           	opt stack 0
 11126                           
 11127                           ; 1 bytes @ 0x5C
 11128  00005D                     	ds	1
 11129  00005E                     ChangeMasterVolume@d:
 11130                           	opt stack 0
 11131                           
 11132                           ; 1 bytes @ 0x5D
 11133  00005E                     	ds	1
 11134  00005F                     tblptru	equ	0xFF8
 11135                           tblptrh	equ	0xFF7
 11136                           tblptrl	equ	0xFF6
 11137                           tablat	equ	0xFF5
 11138                           postinc0	equ	0xFEE
 11139                           wreg	equ	0xFE8
 11140                           postdec1	equ	0xFE5
 11141                           fsr1h	equ	0xFE2
 11142                           fsr1l	equ	0xFE1
 11143                           
 11144                           ; 0 bytes @ 0x5E
 11145 ;;
 11146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 11147 ;;
 11148 ;; *************** function _main *****************
 11149 ;; Defined at:
 11150 ;;		line 398 in file "main.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;		None
 11153 ;; Auto vars:     Size  Location     Type
 11154 ;;		None
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  2  1719[COMRAM] int 
 11157 ;; Registers used:
 11158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 11164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;Total ram usage:        0 bytes
 11169 ;; Hardware stack levels required when called:   18
 11170 ;; This function calls:
 11171 ;;		_BusySLCD
 11172 ;;		_Configure
 11173 ;;		_OpenSLCD
 11174 ;;		_PowerOn
 11175 ;;		_RestoreFromFlash
 11176 ;;		_StackTask
 11177 ;;		_TCPServer
 11178 ;;		_WriteCmdSLCD
 11179 ;; This function is called by:
 11180 ;;		Startup code after reset
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           	psect	text0
 11185  01B5FA                     __ptext0:
 11186                           	opt stack 0
 11187  01B5FA                     _main:
 11188                           	opt stack 13
 11189                           
 11190                           ;main.c: 400: Configure();
 11191                           
 11192                           ;incstack = 0
 11193  01B5FA  EC3A  F0D6         	call	_Configure	;wreg free
 11194                           
 11195                           ;main.c: 404: OpenSLCD(0b00111100 & 0b00111000);
 11196  01B5FE  0E38               	movlw	56
 11197  01B600  ECB7  F0D2         	call	_OpenSLCD
 11198  01B604                     l16046:
 11199  01B604  EC26  F0DC         	call	_BusySLCD	;wreg free
 11200  01B608  0900               	iorlw	0
 11201  01B60A  A4D8               	btfss	status,2,c
 11202  01B60C  D7FB               	goto	l16046
 11203                           
 11204                           ;main.c: 406: WriteCmdSLCD(0b00001111&0b00001101&0b00001110);
 11205  01B60E  0E0C               	movlw	12
 11206  01B610  ECE0  F0DB         	call	_WriteCmdSLCD
 11207                           
 11208                           ;main.c: 408: RestoreFromFlash();
 11209  01B614  ECE4  F0B6         	call	_RestoreFromFlash	;wreg free
 11210                           
 11211                           ;main.c: 409: PowerOn();
 11212  01B618  EC44  F0D8         	call	_PowerOn	;wreg free
 11213                           
 11214                           ;main.c: 411: (INTCONbits.GIE = 1);
 11215  01B61C  8EF2               	bsf	intcon,7,c	;volatile
 11216  01B61E                     l16056:
 11217                           
 11218                           ;main.c: 413: {
 11219                           ;main.c: 414: StackTask();
 11220  01B61E  EC8B  F0CD         	call	_StackTask	;wreg free
 11221                           
 11222                           ;main.c: 415: TCPServer();
 11223  01B622  EC10  F0A1         	call	_TCPServer	;wreg free
 11224  01B626  D7FB               	goto	l16056
 11225  01B628                     __end_of_main:
 11226                           	opt stack 0
 11227                           tblptru	equ	0xFF8
 11228                           tblptrh	equ	0xFF7
 11229                           tblptrl	equ	0xFF6
 11230                           tablat	equ	0xFF5
 11231                           intcon	equ	0xFF2
 11232                           postinc0	equ	0xFEE
 11233                           wreg	equ	0xFE8
 11234                           postdec1	equ	0xFE5
 11235                           fsr1h	equ	0xFE2
 11236                           fsr1l	equ	0xFE1
 11237                           status	equ	0xFD8
 11238                           
 11239 ;; *************** function _TCPServer *****************
 11240 ;; Defined at:
 11241 ;;		line 231 in file "main.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;		None
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;  cmdBytes       18  135[BANK1 ] unsigned char [18]
 11246 ;;  checksum        1  134[BANK1 ] unsigned char 
 11247 ;;  wMaxPut         2  132[BANK1 ] unsigned int 
 11248 ;;  wMaxGet         2  130[BANK1 ] unsigned int 
 11249 ;; Return value:  Size  Location     Type
 11250 ;;		None               void
 11251 ;; Registers used:
 11252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11253 ;; Tracked objects:
 11254 ;;		On entry : 0/0
 11255 ;;		On exit  : 0/0
 11256 ;;		Unchanged: 0/0
 11257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 11258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11259 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11261 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11262 ;;Total ram usage:       23 bytes
 11263 ;; Hardware stack levels used:    1
 11264 ;; Hardware stack levels required when called:   17
 11265 ;; This function calls:
 11266 ;;		_GetCheckSum
 11267 ;;		_PowerOff
 11268 ;;		_PowerOn
 11269 ;;		_SaveToFlash
 11270 ;;		_SendVolumeToDevice
 11271 ;;		_TCPClose
 11272 ;;		_TCPGetArray
 11273 ;;		_TCPIsConnected
 11274 ;;		_TCPIsGetReady
 11275 ;;		_TCPIsPutReady
 11276 ;;		_TCPOpen
 11277 ;;		_TCPPutArray
 11278 ;;		_UpdateMasterVolume
 11279 ;;		_UpdateSampleRate
 11280 ;;		_memcpy
 11281 ;;		_memset
 11282 ;; This function is called by:
 11283 ;;		_main
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text1
 11288  014220                     __ptext1:
 11289                           	opt stack 0
 11290  014220                     _TCPServer:
 11291                           	opt stack 13
 11292                           
 11293                           ;main.c: 233: uint16_t wMaxGet, wMaxPut;
 11294                           ;main.c: 234: static TCP_SOCKET srvSocket;
 11295                           ;main.c: 235: static enum _TCPServerState
 11296                           ;main.c: 236: {
 11297                           ;main.c: 237: SM_HOME = 0,
 11298                           ;main.c: 238: SM_LISTENING,
 11299                           ;main.c: 239: SM_CLOSING,
 11300                           ;main.c: 240: } tcpServerState = SM_HOME;
 11301                           ;main.c: 245: switch(tcpServerState)
 11302                           
 11303                           ;incstack = 0
 11304  014220  D265               	goto	l15376
 11305  014222                     l15260:
 11306                           
 11307                           ;main.c: 249: srvSocket = TCPOpen(0, 0u, 89, 1);
 11308  014222  0E00               	movlw	0
 11309  014224  0101               	movlb	1	; () banked
 11310  014226  6F56               	movwf	TCPOpen@dwRemoteHost& (0+255),b
 11311  014228  0E00               	movlw	0
 11312  01422A  0101               	movlb	1	; () banked
 11313  01422C  6F57               	movwf	(TCPOpen@dwRemoteHost+1)& (0+255),b
 11314  01422E  0E00               	movlw	0
 11315  014230  0101               	movlb	1	; () banked
 11316  014232  6F58               	movwf	(TCPOpen@dwRemoteHost+2)& (0+255),b
 11317  014234  0E00               	movlw	0
 11318  014236  0101               	movlb	1	; () banked
 11319  014238  6F59               	movwf	(TCPOpen@dwRemoteHost+3)& (0+255),b
 11320  01423A  0E00               	movlw	0
 11321  01423C  0101               	movlb	1	; () banked
 11322  01423E  6F5A               	movwf	TCPOpen@vRemoteHostType& (0+255),b
 11323  014240  0E00               	movlw	0
 11324  014242  0101               	movlb	1	; () banked
 11325  014244  6F5C               	movwf	(TCPOpen@wPort+1)& (0+255),b
 11326  014246  0E59               	movlw	89
 11327  014248  0101               	movlb	1	; () banked
 11328  01424A  6F5B               	movwf	TCPOpen@wPort& (0+255),b
 11329  01424C  0E01               	movlw	1
 11330  01424E  0101               	movlb	1	; () banked
 11331  014250  6F5D               	movwf	TCPOpen@vSocketPurpose& (0+255),b
 11332  014252  EC89  F0AF         	call	_TCPOpen	;wreg free
 11333  014256  0101               	movlb	1	; () banked
 11334  014258  6FB4               	movwf	TCPServer@srvSocket& (0+255),b
 11335                           
 11336                           ; BSR set to: 1
 11337                           ;main.c: 250: if(srvSocket == (0xFE))
 11338  01425A  0101               	movlb	1	; () banked
 11339  01425C  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11340  01425E  0AFE               	xorlw	254
 11341  014260  B4D8               	btfsc	status,2,c
 11342  014262  0012               	return	
 11343                           
 11344                           ; BSR set to: 1
 11345                           ;main.c: 253: tcpServerState = SM_LISTENING;
 11346                           
 11347                           ; BSR set to: 1
 11348                           
 11349                           ; BSR set to: 1
 11350                           ;main.c: 251: return;
 11351  014264  0E01               	movlw	1
 11352  014266  0100               	movlb	0	; () banked
 11353  014268  6FED               	movwf	TCPServer@tcpServerState& (0+255),b
 11354                           
 11355                           ;main.c: 254: break;
 11356  01426A  0012               	return	
 11357  01426C                     l15268:
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;main.c: 258: if(!TCPIsConnected(srvSocket))
 11361  01426C  0101               	movlb	1	; () banked
 11362  01426E  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11363  014270  EC57  F0DB         	call	_TCPIsConnected
 11364  014274  0900               	iorlw	0
 11365  014276  B4D8               	btfsc	status,2,c
 11366  014278  0012               	return	
 11367                           
 11368                           ;main.c: 262: wMaxGet = TCPIsGetReady(srvSocket);
 11369                           
 11370                           ;main.c: 259: return;
 11371  01427A  0101               	movlb	1	; () banked
 11372  01427C  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11373  01427E  EC23  F0CD         	call	_TCPIsGetReady
 11374  014282  0101               	movlb	1	; () banked
 11375  014284  C121  F182         	movff	?_TCPIsGetReady,TCPServer@wMaxGet
 11376  014288  0101               	movlb	1	; () banked
 11377  01428A  C122  F183         	movff	?_TCPIsGetReady+1,TCPServer@wMaxGet+1
 11378                           
 11379                           ;main.c: 263: wMaxPut = TCPIsPutReady(srvSocket);
 11380  01428E  0101               	movlb	1	; () banked
 11381  014290  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11382  014292  ECDB  F0C4         	call	_TCPIsPutReady
 11383  014296  0101               	movlb	1	; () banked
 11384  014298  C121  F184         	movff	?_TCPIsPutReady,TCPServer@wMaxPut
 11385  01429C  0101               	movlb	1	; () banked
 11386  01429E  C122  F185         	movff	?_TCPIsPutReady+1,TCPServer@wMaxPut+1
 11387                           
 11388                           ; BSR set to: 1
 11389                           ;main.c: 273: uint8_t cmdBytes[sizeof(s_dacSettings.ChannelScaling) + 2];
 11390                           ;main.c: 274: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11391  0142A2  0101               	movlb	1	; () banked
 11392  0142A4  0E01               	movlw	high TCPServer@cmdBytes
 11393  0142A6  0101               	movlb	1	; () banked
 11394  0142A8  6F01               	movwf	(memset@p1+1)& (0+255),b
 11395  0142AA  0101               	movlb	1	; () banked
 11396  0142AC  0E87               	movlw	low TCPServer@cmdBytes
 11397  0142AE  0101               	movlb	1	; () banked
 11398  0142B0  6F00               	movwf	memset@p1& (0+255),b
 11399  0142B2  0E00               	movlw	0
 11400  0142B4  0101               	movlb	1	; () banked
 11401  0142B6  6F03               	movwf	(memset@c+1)& (0+255),b
 11402  0142B8  0E00               	movlw	0
 11403  0142BA  0101               	movlb	1	; () banked
 11404  0142BC  6F02               	movwf	memset@c& (0+255),b
 11405  0142BE  0E00               	movlw	0
 11406  0142C0  0101               	movlb	1	; () banked
 11407  0142C2  6F05               	movwf	(memset@n+1)& (0+255),b
 11408  0142C4  0E12               	movlw	18
 11409  0142C6  0101               	movlb	1	; () banked
 11410  0142C8  6F04               	movwf	memset@n& (0+255),b
 11411  0142CA  ECF9  F0D9         	call	_memset	;wreg free
 11412                           
 11413                           ;main.c: 275: TCPGetArray(srvSocket, cmdBytes, sizeof(cmdBytes));
 11414  0142CE  0101               	movlb	1	; () banked
 11415  0142D0  0E01               	movlw	high TCPServer@cmdBytes
 11416  0142D2  0101               	movlb	1	; () banked
 11417  0142D4  6F27               	movwf	(TCPGetArray@buffer+1)& (0+255),b
 11418  0142D6  0101               	movlb	1	; () banked
 11419  0142D8  0E87               	movlw	low TCPServer@cmdBytes
 11420  0142DA  0101               	movlb	1	; () banked
 11421  0142DC  6F26               	movwf	TCPGetArray@buffer& (0+255),b
 11422  0142DE  0E00               	movlw	0
 11423  0142E0  0101               	movlb	1	; () banked
 11424  0142E2  6F29               	movwf	(TCPGetArray@len+1)& (0+255),b
 11425  0142E4  0E12               	movlw	18
 11426  0142E6  0101               	movlb	1	; () banked
 11427  0142E8  6F28               	movwf	TCPGetArray@len& (0+255),b
 11428  0142EA  0101               	movlb	1	; () banked
 11429  0142EC  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 11430  0142EE  EC5F  F0B3         	call	_TCPGetArray
 11431                           
 11432                           ;main.c: 276: uint8_t checksum = GetCheckSum(cmdBytes, sizeof(cmdBytes) - 1);
 11433  0142F2  0101               	movlb	1	; () banked
 11434  0142F4  0E01               	movlw	high TCPServer@cmdBytes
 11435  0142F6  0101               	movlb	1	; () banked
 11436  0142F8  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 11437  0142FA  0101               	movlb	1	; () banked
 11438  0142FC  0E87               	movlw	low TCPServer@cmdBytes
 11439  0142FE  0101               	movlb	1	; () banked
 11440  014300  6F00               	movwf	GetCheckSum@data& (0+255),b
 11441  014302  0E11               	movlw	17
 11442  014304  0101               	movlb	1	; () banked
 11443  014306  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 11444  014308  EC60  F0D9         	call	_GetCheckSum	;wreg free
 11445  01430C  0101               	movlb	1	; () banked
 11446  01430E  6F86               	movwf	TCPServer@checksum& (0+255),b
 11447                           
 11448                           ; BSR set to: 1
 11449                           ;main.c: 277: if (checksum != cmdBytes[sizeof(cmdBytes) - 1])
 11450  014310  0101               	movlb	1	; () banked
 11451  014312  5198               	movf	(TCPServer@cmdBytes+17)& (0+255),w,b
 11452  014314  0101               	movlb	1	; () banked
 11453  014316  1986               	xorwf	TCPServer@checksum& (0+255),w,b
 11454  014318  B4D8               	btfsc	status,2,c
 11455  01431A  D19A               	goto	l15362
 11456                           
 11457                           ; BSR set to: 1
 11458                           ;main.c: 278: {
 11459                           ;main.c: 279: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11460  01431C  0101               	movlb	1	; () banked
 11461  01431E  0E01               	movlw	high TCPServer@cmdBytes
 11462  014320  0101               	movlb	1	; () banked
 11463  014322  6F01               	movwf	(memset@p1+1)& (0+255),b
 11464  014324  0101               	movlb	1	; () banked
 11465  014326  0E87               	movlw	low TCPServer@cmdBytes
 11466  014328  0101               	movlb	1	; () banked
 11467  01432A  6F00               	movwf	memset@p1& (0+255),b
 11468  01432C  0E00               	movlw	0
 11469  01432E  0101               	movlb	1	; () banked
 11470  014330  6F03               	movwf	(memset@c+1)& (0+255),b
 11471  014332  0E00               	movlw	0
 11472  014334  0101               	movlb	1	; () banked
 11473  014336  6F02               	movwf	memset@c& (0+255),b
 11474  014338  0E00               	movlw	0
 11475  01433A  0101               	movlb	1	; () banked
 11476  01433C  6F05               	movwf	(memset@n+1)& (0+255),b
 11477  01433E  0E12               	movlw	18
 11478  014340  0101               	movlb	1	; () banked
 11479  014342  6F04               	movwf	memset@n& (0+255),b
 11480  014344  ECF9  F0D9         	call	_memset	;wreg free
 11481                           
 11482                           ;main.c: 280: cmdBytes[0] = 0xFF;
 11483  014348  0101               	movlb	1	; () banked
 11484  01434A  6987               	setf	TCPServer@cmdBytes& (0+255),b
 11485                           
 11486                           ; BSR set to: 1
 11487                           ;main.c: 281: cmdBytes[1] = 0x00;
 11488  01434C  0E00               	movlw	0
 11489  01434E  D17D               	goto	L1
 11490  014350                     l15286:
 11491                           
 11492                           ; BSR set to: 1
 11493                           ;main.c: 288: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11494  014350  0101               	movlb	1	; () banked
 11495  014352  0E01               	movlw	high TCPServer@cmdBytes
 11496  014354  0101               	movlb	1	; () banked
 11497  014356  6F01               	movwf	(memset@p1+1)& (0+255),b
 11498  014358  0101               	movlb	1	; () banked
 11499  01435A  0E87               	movlw	low TCPServer@cmdBytes
 11500  01435C  0101               	movlb	1	; () banked
 11501  01435E  6F00               	movwf	memset@p1& (0+255),b
 11502  014360  0E00               	movlw	0
 11503  014362  0101               	movlb	1	; () banked
 11504  014364  6F03               	movwf	(memset@c+1)& (0+255),b
 11505  014366  0E00               	movlw	0
 11506  014368  0101               	movlb	1	; () banked
 11507  01436A  6F02               	movwf	memset@c& (0+255),b
 11508  01436C  0E00               	movlw	0
 11509  01436E  0101               	movlb	1	; () banked
 11510  014370  6F05               	movwf	(memset@n+1)& (0+255),b
 11511  014372  0E12               	movlw	18
 11512  014374  0101               	movlb	1	; () banked
 11513  014376  6F04               	movwf	memset@n& (0+255),b
 11514  014378  ECF9  F0D9         	call	_memset	;wreg free
 11515                           
 11516                           ;main.c: 289: cmdBytes[0] = 0x01;
 11517  01437C  0E01               	movlw	1
 11518  01437E  0101               	movlb	1	; () banked
 11519  014380  6F87               	movwf	TCPServer@cmdBytes& (0+255),b
 11520                           
 11521                           ; BSR set to: 1
 11522                           ;main.c: 290: cmdBytes[1] = s_dacSettings.Volume;
 11523  014382  C2D5  F188         	movff	_s_dacSettings+2,TCPServer@cmdBytes+1
 11524                           
 11525                           ; BSR set to: 1
 11526                           ;main.c: 291: cmdBytes[2] = s_dacSettings.SampleRate;
 11527  014386  C2D4  F189         	movff	_s_dacSettings+1,TCPServer@cmdBytes+2
 11528                           
 11529                           ; BSR set to: 1
 11530                           ;main.c: 292: cmdBytes[3] = LATDbits.LD0;
 11531  01438A  0E00               	movlw	0
 11532  01438C  B08C               	btfsc	3980,0,c	;volatile
 11533  01438E  0E01               	movlw	1
 11534  014390  0101               	movlb	1	; () banked
 11535  014392  6F8A               	movwf	(TCPServer@cmdBytes+3)& (0+255),b
 11536                           
 11537                           ;main.c: 293: break;
 11538  014394  D17E               	goto	l15364
 11539  014396                     l1703:
 11540                           
 11541                           ; BSR set to: 1
 11542                           ;main.c: 295: s_dacSettings.Volume = cmdBytes[1];
 11543  014396  C188  F2D5         	movff	TCPServer@cmdBytes+1,_s_dacSettings+2
 11544                           
 11545                           ;main.c: 296: (INTCONbits.GIE = 0);
 11546  01439A  9EF2               	bcf	intcon,7,c	;volatile
 11547                           
 11548                           ; BSR set to: 1
 11549                           ;main.c: 297: UpdateMasterVolume();
 11550  01439C  EC7C  F0CF         	call	_UpdateMasterVolume	;wreg free
 11551                           
 11552                           ;main.c: 298: (INTCONbits.GIE = 1);
 11553  0143A0  8EF2               	bsf	intcon,7,c	;volatile
 11554                           
 11555                           ;main.c: 299: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11556  0143A2  0101               	movlb	1	; () banked
 11557  0143A4  0E01               	movlw	high TCPServer@cmdBytes
 11558  0143A6  0101               	movlb	1	; () banked
 11559  0143A8  6F01               	movwf	(memset@p1+1)& (0+255),b
 11560  0143AA  0101               	movlb	1	; () banked
 11561  0143AC  0E87               	movlw	low TCPServer@cmdBytes
 11562  0143AE  0101               	movlb	1	; () banked
 11563  0143B0  6F00               	movwf	memset@p1& (0+255),b
 11564  0143B2  0E00               	movlw	0
 11565  0143B4  0101               	movlb	1	; () banked
 11566  0143B6  6F03               	movwf	(memset@c+1)& (0+255),b
 11567  0143B8  0E00               	movlw	0
 11568  0143BA  0101               	movlb	1	; () banked
 11569  0143BC  6F02               	movwf	memset@c& (0+255),b
 11570  0143BE  0E00               	movlw	0
 11571  0143C0  0101               	movlb	1	; () banked
 11572  0143C2  6F05               	movwf	(memset@n+1)& (0+255),b
 11573  0143C4  0E12               	movlw	18
 11574  0143C6  0101               	movlb	1	; () banked
 11575  0143C8  6F04               	movwf	memset@n& (0+255),b
 11576  0143CA  ECF9  F0D9         	call	_memset	;wreg free
 11577                           
 11578                           ;main.c: 300: break;
 11579  0143CE  D161               	goto	l15364
 11580  0143D0                     l15302:
 11581                           
 11582                           ;main.c: 302: cmdBytes[0] = 0x02;
 11583  0143D0  0E02               	movlw	2
 11584  0143D2  0101               	movlb	1	; () banked
 11585  0143D4  6F87               	movwf	TCPServer@cmdBytes& (0+255),b
 11586                           
 11587                           ; BSR set to: 1
 11588                           ;main.c: 303: memcpy(&cmdBytes[1], &s_dacSettings.ChannelScaling, sizeof(s_dacSettings.C
      +                          hannelScaling));
 11589  0143D6  0101               	movlb	1	; () banked
 11590  0143D8  0E01               	movlw	high (TCPServer@cmdBytes+1)
 11591  0143DA  0101               	movlb	1	; () banked
 11592  0143DC  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 11593  0143DE  0101               	movlb	1	; () banked
 11594  0143E0  0E88               	movlw	low (TCPServer@cmdBytes+1)
 11595  0143E2  0101               	movlb	1	; () banked
 11596  0143E4  6F14               	movwf	memcpy@d1& (0+255),b
 11597  0143E6  0102               	movlb	2	; () banked
 11598  0143E8  0E02               	movlw	high (_s_dacSettings+3)
 11599  0143EA  0101               	movlb	1	; () banked
 11600  0143EC  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 11601  0143EE  0102               	movlb	2	; () banked
 11602  0143F0  0ED6               	movlw	low (_s_dacSettings+3)
 11603  0143F2  0101               	movlb	1	; () banked
 11604  0143F4  6F16               	movwf	memcpy@s1& (0+255),b
 11605  0143F6  0E00               	movlw	0
 11606  0143F8  0101               	movlb	1	; () banked
 11607  0143FA  6F19               	movwf	(memcpy@n+1)& (0+255),b
 11608  0143FC  0E10               	movlw	16
 11609  0143FE  0101               	movlb	1	; () banked
 11610  014400  6F18               	movwf	memcpy@n& (0+255),b
 11611  014402  ECCF  F0D5         	call	_memcpy	;wreg free
 11612                           
 11613                           ;main.c: 304: break;
 11614  014406  D145               	goto	l15364
 11615  014408                     l15306:
 11616                           
 11617                           ;main.c: 306: memcpy(&s_dacSettings.ChannelScaling, &cmdBytes[1], sizeof(s_dacSettings.C
      +                          hannelScaling));
 11618  014408  0102               	movlb	2	; () banked
 11619  01440A  0E02               	movlw	high (_s_dacSettings+3)
 11620  01440C  0101               	movlb	1	; () banked
 11621  01440E  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 11622  014410  0102               	movlb	2	; () banked
 11623  014412  0ED6               	movlw	low (_s_dacSettings+3)
 11624  014414  0101               	movlb	1	; () banked
 11625  014416  6F14               	movwf	memcpy@d1& (0+255),b
 11626  014418  0101               	movlb	1	; () banked
 11627  01441A  0E01               	movlw	high (TCPServer@cmdBytes+1)
 11628  01441C  0101               	movlb	1	; () banked
 11629  01441E  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 11630  014420  0101               	movlb	1	; () banked
 11631  014422  0E88               	movlw	low (TCPServer@cmdBytes+1)
 11632  014424  0101               	movlb	1	; () banked
 11633  014426  6F16               	movwf	memcpy@s1& (0+255),b
 11634  014428  0E00               	movlw	0
 11635  01442A  0101               	movlb	1	; () banked
 11636  01442C  6F19               	movwf	(memcpy@n+1)& (0+255),b
 11637  01442E  0E10               	movlw	16
 11638  014430  0101               	movlb	1	; () banked
 11639  014432  6F18               	movwf	memcpy@n& (0+255),b
 11640  014434  ECCF  F0D5         	call	_memcpy	;wreg free
 11641                           
 11642                           ;main.c: 307: (INTCONbits.GIE = 0);
 11643  014438  9EF2               	bcf	intcon,7,c	;volatile
 11644                           
 11645                           ;main.c: 308: SendVolumeToDevice();
 11646  01443A  ECD7  F0DC         	call	_SendVolumeToDevice	;wreg free
 11647                           
 11648                           ;main.c: 309: (INTCONbits.GIE = 1);
 11649  01443E  8EF2               	bsf	intcon,7,c	;volatile
 11650                           
 11651                           ;main.c: 310: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11652  014440  0101               	movlb	1	; () banked
 11653  014442  0E01               	movlw	high TCPServer@cmdBytes
 11654  014444  0101               	movlb	1	; () banked
 11655  014446  6F01               	movwf	(memset@p1+1)& (0+255),b
 11656  014448  0101               	movlb	1	; () banked
 11657  01444A  0E87               	movlw	low TCPServer@cmdBytes
 11658  01444C  0101               	movlb	1	; () banked
 11659  01444E  6F00               	movwf	memset@p1& (0+255),b
 11660  014450  0E00               	movlw	0
 11661  014452  0101               	movlb	1	; () banked
 11662  014454  6F03               	movwf	(memset@c+1)& (0+255),b
 11663  014456  0E00               	movlw	0
 11664  014458  0101               	movlb	1	; () banked
 11665  01445A  6F02               	movwf	memset@c& (0+255),b
 11666  01445C  0E00               	movlw	0
 11667  01445E  0101               	movlb	1	; () banked
 11668  014460  6F05               	movwf	(memset@n+1)& (0+255),b
 11669  014462  0E12               	movlw	18
 11670  014464  0101               	movlb	1	; () banked
 11671  014466  6F04               	movwf	memset@n& (0+255),b
 11672  014468  ECF9  F0D9         	call	_memset	;wreg free
 11673                           
 11674                           ;main.c: 311: break;
 11675  01446C  D112               	goto	l15364
 11676  01446E                     l15316:
 11677                           
 11678                           ;main.c: 313: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11679  01446E  0101               	movlb	1	; () banked
 11680  014470  0E01               	movlw	high TCPServer@cmdBytes
 11681  014472  0101               	movlb	1	; () banked
 11682  014474  6F01               	movwf	(memset@p1+1)& (0+255),b
 11683  014476  0101               	movlb	1	; () banked
 11684  014478  0E87               	movlw	low TCPServer@cmdBytes
 11685  01447A  0101               	movlb	1	; () banked
 11686  01447C  6F00               	movwf	memset@p1& (0+255),b
 11687  01447E  0E00               	movlw	0
 11688  014480  0101               	movlb	1	; () banked
 11689  014482  6F03               	movwf	(memset@c+1)& (0+255),b
 11690  014484  0E00               	movlw	0
 11691  014486  0101               	movlb	1	; () banked
 11692  014488  6F02               	movwf	memset@c& (0+255),b
 11693  01448A  0E00               	movlw	0
 11694  01448C  0101               	movlb	1	; () banked
 11695  01448E  6F05               	movwf	(memset@n+1)& (0+255),b
 11696  014490  0E12               	movlw	18
 11697  014492  0101               	movlb	1	; () banked
 11698  014494  6F04               	movwf	memset@n& (0+255),b
 11699  014496  ECF9  F0D9         	call	_memset	;wreg free
 11700                           
 11701                           ;main.c: 314: cmdBytes[0] = 0x01;
 11702  01449A  0E01               	movlw	1
 11703  01449C  0101               	movlb	1	; () banked
 11704  01449E  6F87               	movwf	TCPServer@cmdBytes& (0+255),b
 11705                           
 11706                           ; BSR set to: 1
 11707                           ;main.c: 315: cmdBytes[1] = s_dacSettings.SampleRate;
 11708  0144A0  C2D4  F188         	movff	_s_dacSettings+1,TCPServer@cmdBytes+1
 11709                           
 11710                           ;main.c: 316: break;
 11711  0144A4  D0F6               	goto	l15364
 11712  0144A6                     l1707:
 11713                           
 11714                           ; BSR set to: 1
 11715                           ;main.c: 318: s_dacSettings.SampleRate = cmdBytes[1];
 11716  0144A6  C188  F2D4         	movff	TCPServer@cmdBytes+1,_s_dacSettings+1
 11717                           
 11718                           ;main.c: 319: (INTCONbits.GIE = 0);
 11719  0144AA  9EF2               	bcf	intcon,7,c	;volatile
 11720                           
 11721                           ; BSR set to: 1
 11722                           ;main.c: 320: UpdateSampleRate();
 11723  0144AC  ECD8  F0D0         	call	_UpdateSampleRate	;wreg free
 11724                           
 11725                           ;main.c: 321: (INTCONbits.GIE = 1);
 11726  0144B0  8EF2               	bsf	intcon,7,c	;volatile
 11727                           
 11728                           ;main.c: 322: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11729  0144B2  0101               	movlb	1	; () banked
 11730  0144B4  0E01               	movlw	high TCPServer@cmdBytes
 11731  0144B6  0101               	movlb	1	; () banked
 11732  0144B8  6F01               	movwf	(memset@p1+1)& (0+255),b
 11733  0144BA  0101               	movlb	1	; () banked
 11734  0144BC  0E87               	movlw	low TCPServer@cmdBytes
 11735  0144BE  0101               	movlb	1	; () banked
 11736  0144C0  6F00               	movwf	memset@p1& (0+255),b
 11737  0144C2  0E00               	movlw	0
 11738  0144C4  0101               	movlb	1	; () banked
 11739  0144C6  6F03               	movwf	(memset@c+1)& (0+255),b
 11740  0144C8  0E00               	movlw	0
 11741  0144CA  0101               	movlb	1	; () banked
 11742  0144CC  6F02               	movwf	memset@c& (0+255),b
 11743  0144CE  0E00               	movlw	0
 11744  0144D0  0101               	movlb	1	; () banked
 11745  0144D2  6F05               	movwf	(memset@n+1)& (0+255),b
 11746  0144D4  0E12               	movlw	18
 11747  0144D6  0101               	movlb	1	; () banked
 11748  0144D8  6F04               	movwf	memset@n& (0+255),b
 11749  0144DA  ECF9  F0D9         	call	_memset	;wreg free
 11750                           
 11751                           ;main.c: 323: break;
 11752  0144DE  D0D9               	goto	l15364
 11753  0144E0                     l1708:
 11754                           
 11755                           ; BSR set to: 1
 11756                           ;main.c: 325: (INTCONbits.GIE = 0);
 11757  0144E0  9EF2               	bcf	intcon,7,c	;volatile
 11758                           
 11759                           ; BSR set to: 1
 11760                           ;main.c: 326: SaveToFlash();
 11761  0144E2  EC18  F0A5         	call	_SaveToFlash	;wreg free
 11762                           
 11763                           ;main.c: 327: (INTCONbits.GIE = 1);
 11764  0144E6  8EF2               	bsf	intcon,7,c	;volatile
 11765                           
 11766                           ;main.c: 328: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11767  0144E8  0101               	movlb	1	; () banked
 11768  0144EA  0E01               	movlw	high TCPServer@cmdBytes
 11769  0144EC  0101               	movlb	1	; () banked
 11770  0144EE  6F01               	movwf	(memset@p1+1)& (0+255),b
 11771  0144F0  0101               	movlb	1	; () banked
 11772  0144F2  0E87               	movlw	low TCPServer@cmdBytes
 11773  0144F4  0101               	movlb	1	; () banked
 11774  0144F6  6F00               	movwf	memset@p1& (0+255),b
 11775  0144F8  0E00               	movlw	0
 11776  0144FA  0101               	movlb	1	; () banked
 11777  0144FC  6F03               	movwf	(memset@c+1)& (0+255),b
 11778  0144FE  0E00               	movlw	0
 11779  014500  0101               	movlb	1	; () banked
 11780  014502  6F02               	movwf	memset@c& (0+255),b
 11781  014504  0E00               	movlw	0
 11782  014506  0101               	movlb	1	; () banked
 11783  014508  6F05               	movwf	(memset@n+1)& (0+255),b
 11784  01450A  0E12               	movlw	18
 11785  01450C  0101               	movlb	1	; () banked
 11786  01450E  6F04               	movwf	memset@n& (0+255),b
 11787  014510  ECF9  F0D9         	call	_memset	;wreg free
 11788                           
 11789                           ;main.c: 329: break;
 11790  014514  D0BE               	goto	l15364
 11791  014516                     l15334:
 11792                           
 11793                           ;main.c: 331: if (cmdBytes[1])
 11794  014516  0101               	movlb	1	; () banked
 11795  014518  5188               	movf	(TCPServer@cmdBytes+1)& (0+255),w,b
 11796  01451A  B4D8               	btfsc	status,2,c
 11797  01451C  D003               	goto	l15338
 11798                           
 11799                           ; BSR set to: 1
 11800                           ;main.c: 332: {
 11801                           ;main.c: 333: PowerOn();
 11802  01451E  EC44  F0D8         	call	_PowerOn	;wreg free
 11803                           
 11804                           ;main.c: 334: }
 11805  014522  D002               	goto	l15340
 11806  014524                     l15338:
 11807                           
 11808                           ;main.c: 335: else
 11809                           ;main.c: 336: {
 11810                           ;main.c: 337: PowerOff();
 11811  014524  EC7F  F0DD         	call	_PowerOff	;wreg free
 11812  014528                     l15340:
 11813                           
 11814                           ;main.c: 338: }
 11815                           ;main.c: 339: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11816  014528  0101               	movlb	1	; () banked
 11817  01452A  0E01               	movlw	high TCPServer@cmdBytes
 11818  01452C  0101               	movlb	1	; () banked
 11819  01452E  6F01               	movwf	(memset@p1+1)& (0+255),b
 11820  014530  0101               	movlb	1	; () banked
 11821  014532  0E87               	movlw	low TCPServer@cmdBytes
 11822  014534  0101               	movlb	1	; () banked
 11823  014536  6F00               	movwf	memset@p1& (0+255),b
 11824  014538  0E00               	movlw	0
 11825  01453A  0101               	movlb	1	; () banked
 11826  01453C  6F03               	movwf	(memset@c+1)& (0+255),b
 11827  01453E  0E00               	movlw	0
 11828  014540  0101               	movlb	1	; () banked
 11829  014542  6F02               	movwf	memset@c& (0+255),b
 11830  014544  0E00               	movlw	0
 11831  014546  0101               	movlb	1	; () banked
 11832  014548  6F05               	movwf	(memset@n+1)& (0+255),b
 11833  01454A  0E12               	movlw	18
 11834  01454C  0101               	movlb	1	; () banked
 11835  01454E  6F04               	movwf	memset@n& (0+255),b
 11836  014550  ECF9  F0D9         	call	_memset	;wreg free
 11837                           
 11838                           ;main.c: 340: break;
 11839  014554  D09E               	goto	l15364
 11840  014556                     l1712:
 11841                           
 11842                           ; BSR set to: 1
 11843                           ;main.c: 353: s_irLearn = 0xFF;
 11844  014556  0101               	movlb	1	; () banked
 11845  014558  69B8               	setf	_s_irLearn& (0+255),b	;volatile
 11846                           
 11847                           ; BSR set to: 1
 11848                           ;main.c: 354: if (cmdBytes[1] < 16)
 11849  01455A  0E10               	movlw	16
 11850  01455C  0101               	movlb	1	; () banked
 11851  01455E  5D88               	subwf	(TCPServer@cmdBytes+1)& (0+255),w,b
 11852  014560  B0D8               	btfsc	status,0,c
 11853  014562  D035               	goto	l1713
 11854                           
 11855                           ; BSR set to: 1
 11856                           ;main.c: 355: {
 11857                           ;main.c: 356: memcpy(&cmdBytes[1], &s_irCode, sizeof(cmdBytes) - 2);
 11858  014564  0101               	movlb	1	; () banked
 11859  014566  0E01               	movlw	high (TCPServer@cmdBytes+1)
 11860  014568  0101               	movlb	1	; () banked
 11861  01456A  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 11862  01456C  0101               	movlb	1	; () banked
 11863  01456E  0E88               	movlw	low (TCPServer@cmdBytes+1)
 11864  014570  0101               	movlb	1	; () banked
 11865  014572  6F14               	movwf	memcpy@d1& (0+255),b
 11866  014574  0102               	movlb	2	; () banked
 11867  014576  0E02               	movlw	high _s_irCode	;volatile
 11868  014578  0101               	movlb	1	; () banked
 11869  01457A  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 11870  01457C  0102               	movlb	2	; () banked
 11871  01457E  0EAD               	movlw	low _s_irCode	;volatile
 11872  014580  0101               	movlb	1	; () banked
 11873  014582  6F16               	movwf	memcpy@s1& (0+255),b
 11874  014584  0E00               	movlw	0
 11875  014586  0101               	movlb	1	; () banked
 11876  014588  6F19               	movwf	(memcpy@n+1)& (0+255),b
 11877  01458A  0E10               	movlw	16
 11878  01458C  0101               	movlb	1	; () banked
 11879  01458E  6F18               	movwf	memcpy@n& (0+255),b
 11880  014590  ECCF  F0D5         	call	_memcpy	;wreg free
 11881                           
 11882                           ;main.c: 357: memset(&s_irCode, 0, sizeof(s_irCode));
 11883  014594  0102               	movlb	2	; () banked
 11884  014596  0E02               	movlw	high _s_irCode	;volatile
 11885  014598  0101               	movlb	1	; () banked
 11886  01459A  6F01               	movwf	(memset@p1+1)& (0+255),b
 11887  01459C  0102               	movlb	2	; () banked
 11888  01459E  0EAD               	movlw	low _s_irCode	;volatile
 11889  0145A0  0101               	movlb	1	; () banked
 11890  0145A2  6F00               	movwf	memset@p1& (0+255),b
 11891  0145A4  0E00               	movlw	0
 11892  0145A6  0101               	movlb	1	; () banked
 11893  0145A8  6F03               	movwf	(memset@c+1)& (0+255),b
 11894  0145AA  0E00               	movlw	0
 11895  0145AC  0101               	movlb	1	; () banked
 11896  0145AE  6F02               	movwf	memset@c& (0+255),b
 11897  0145B0  0E00               	movlw	0
 11898  0145B2  0101               	movlb	1	; () banked
 11899  0145B4  6F05               	movwf	(memset@n+1)& (0+255),b
 11900  0145B6  0E10               	movlw	16
 11901  0145B8  0101               	movlb	1	; () banked
 11902  0145BA  6F04               	movwf	memset@n& (0+255),b
 11903  0145BC  ECF9  F0D9         	call	_memset	;wreg free
 11904                           
 11905                           ;main.c: 358: s_irCodeBitIdx = 1;
 11906  0145C0  0E01               	movlw	1
 11907  0145C2  0101               	movlb	1	; () banked
 11908  0145C4  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 11909                           
 11910                           ; BSR set to: 1
 11911                           ;main.c: 359: s_irCodeByteIdx = 0;
 11912  0145C6  0E00               	movlw	0
 11913  0145C8  0101               	movlb	1	; () banked
 11914  0145CA  6FB7               	movwf	_s_irCodeByteIdx& (0+255),b	;volatile
 11915                           
 11916                           ;main.c: 360: }
 11917  0145CC  D008               	goto	l15352
 11918  0145CE                     l1713:
 11919                           
 11920                           ; BSR set to: 1
 11921                           ;main.c: 361: else
 11922                           ;main.c: 362: {
 11923                           ;main.c: 363: cmdBytes[1] = s_irCodeBitIdx;
 11924  0145CE  C1FE  F188         	movff	_s_irCodeBitIdx,TCPServer@cmdBytes+1	;volatile
 11925                           
 11926                           ;main.c: 364: cmdBytes[2] = s_irCodeByteIdx;
 11927  0145D2  C1B7  F189         	movff	_s_irCodeByteIdx,TCPServer@cmdBytes+2	;volatile
 11928                           
 11929                           ;main.c: 365: cmdBytes[3] = s_prevIRPort;
 11930  0145D6  C1FF  F18A         	movff	_s_prevIRPort,TCPServer@cmdBytes+3
 11931                           
 11932                           ;main.c: 366: cmdBytes[4] = s_irLearn;
 11933  0145DA  C1B8  F18B         	movff	_s_irLearn,TCPServer@cmdBytes+4	;volatile
 11934  0145DE                     l15352:
 11935                           
 11936                           ; BSR set to: 1
 11937                           ;main.c: 367: }
 11938                           ;main.c: 369: cmdBytes[0] = 0x02;
 11939  0145DE  0E02               	movlw	2
 11940  0145E0  0101               	movlb	1	; () banked
 11941  0145E2  6F87               	movwf	TCPServer@cmdBytes& (0+255),b
 11942                           
 11943                           ;main.c: 370: break;
 11944  0145E4  D056               	goto	l15364
 11945  0145E6                     l1715:
 11946                           
 11947                           ; BSR set to: 1
 11948                           ;main.c: 372: s_irLearn = cmdBytes[1];
 11949  0145E6  C188  F1B8         	movff	TCPServer@cmdBytes+1,_s_irLearn	;volatile
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;main.c: 373: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11953  0145EA  0101               	movlb	1	; () banked
 11954  0145EC  0E01               	movlw	high TCPServer@cmdBytes
 11955  0145EE  0101               	movlb	1	; () banked
 11956  0145F0  6F01               	movwf	(memset@p1+1)& (0+255),b
 11957  0145F2  0101               	movlb	1	; () banked
 11958  0145F4  0E87               	movlw	low TCPServer@cmdBytes
 11959  0145F6  0101               	movlb	1	; () banked
 11960  0145F8  6F00               	movwf	memset@p1& (0+255),b
 11961  0145FA  0E00               	movlw	0
 11962  0145FC  0101               	movlb	1	; () banked
 11963  0145FE  6F03               	movwf	(memset@c+1)& (0+255),b
 11964  014600  0E00               	movlw	0
 11965  014602  0101               	movlb	1	; () banked
 11966  014604  6F02               	movwf	memset@c& (0+255),b
 11967  014606  0E00               	movlw	0
 11968  014608  0101               	movlb	1	; () banked
 11969  01460A  6F05               	movwf	(memset@n+1)& (0+255),b
 11970  01460C  0E12               	movlw	18
 11971  01460E  0101               	movlb	1	; () banked
 11972  014610  6F04               	movwf	memset@n& (0+255),b
 11973  014612  ECF9  F0D9         	call	_memset	;wreg free
 11974                           
 11975                           ;main.c: 374: break;
 11976  014616  D03D               	goto	l15364
 11977  014618                     l15356:
 11978                           
 11979                           ;main.c: 376: memset(&cmdBytes, 0, sizeof(cmdBytes));
 11980  014618  0101               	movlb	1	; () banked
 11981  01461A  0E01               	movlw	high TCPServer@cmdBytes
 11982  01461C  0101               	movlb	1	; () banked
 11983  01461E  6F01               	movwf	(memset@p1+1)& (0+255),b
 11984  014620  0101               	movlb	1	; () banked
 11985  014622  0E87               	movlw	low TCPServer@cmdBytes
 11986  014624  0101               	movlb	1	; () banked
 11987  014626  6F00               	movwf	memset@p1& (0+255),b
 11988  014628  0E00               	movlw	0
 11989  01462A  0101               	movlb	1	; () banked
 11990  01462C  6F03               	movwf	(memset@c+1)& (0+255),b
 11991  01462E  0E00               	movlw	0
 11992  014630  0101               	movlb	1	; () banked
 11993  014632  6F02               	movwf	memset@c& (0+255),b
 11994  014634  0E00               	movlw	0
 11995  014636  0101               	movlb	1	; () banked
 11996  014638  6F05               	movwf	(memset@n+1)& (0+255),b
 11997  01463A  0E12               	movlw	18
 11998  01463C  0101               	movlb	1	; () banked
 11999  01463E  6F04               	movwf	memset@n& (0+255),b
 12000  014640  ECF9  F0D9         	call	_memset	;wreg free
 12001                           
 12002                           ;main.c: 377: cmdBytes[0] = 0xFF;
 12003  014644  0101               	movlb	1	; () banked
 12004  014646  6987               	setf	TCPServer@cmdBytes& (0+255),b
 12005                           
 12006                           ; BSR set to: 1
 12007                           ;main.c: 378: cmdBytes[1] = 0x01;
 12008  014648  0E01               	movlw	1
 12009  01464A                     L1:
 12010  01464A  0101               	movlb	1	; () banked
 12011  01464C  6F88               	movwf	(TCPServer@cmdBytes+1)& (0+255),b
 12012                           
 12013                           ;main.c: 379: }
 12014  01464E  D021               	goto	l15364
 12015  014650                     l15362:
 12016                           
 12017                           ; BSR set to: 1
 12018  014650  0101               	movlb	1	; () banked
 12019  014652  5187               	movf	TCPServer@cmdBytes& (0+255),w,b
 12020                           
 12021                           ; Switch size 1, requested type "space"
 12022                           ; Number of cases is 10, Range of values is 0 to 11
 12023                           ; switch strategies available:
 12024                           ; Name         Instructions Cycles
 12025                           ; simple_byte           31    16 (average)
 12026                           ;	Chosen strategy is simple_byte
 12027  014654  0A00               	xorlw	0	; case 0
 12028  014656  B4D8               	btfsc	status,2,c
 12029  014658  D67B               	goto	l15286
 12030  01465A  0A01               	xorlw	1	; case 1
 12031  01465C  B4D8               	btfsc	status,2,c
 12032  01465E  D69B               	goto	l1703
 12033  014660  0A03               	xorlw	3	; case 2
 12034  014662  B4D8               	btfsc	status,2,c
 12035  014664  D6B5               	goto	l15302
 12036  014666  0A01               	xorlw	1	; case 3
 12037  014668  B4D8               	btfsc	status,2,c
 12038  01466A  D6CE               	goto	l15306
 12039  01466C  0A07               	xorlw	7	; case 4
 12040  01466E  B4D8               	btfsc	status,2,c
 12041  014670  D6FE               	goto	l15316
 12042  014672  0A01               	xorlw	1	; case 5
 12043  014674  B4D8               	btfsc	status,2,c
 12044  014676  D717               	goto	l1707
 12045  014678  0A02               	xorlw	2	; case 7
 12046  01467A  B4D8               	btfsc	status,2,c
 12047  01467C  D731               	goto	l1708
 12048  01467E  0A0E               	xorlw	14	; case 9
 12049  014680  B4D8               	btfsc	status,2,c
 12050  014682  D749               	goto	l15334
 12051  014684  0A03               	xorlw	3	; case 10
 12052  014686  B4D8               	btfsc	status,2,c
 12053  014688  D766               	goto	l1712
 12054  01468A  0A01               	xorlw	1	; case 11
 12055  01468C  B4D8               	btfsc	status,2,c
 12056  01468E  D7AB               	goto	l1715
 12057  014690  D7C3               	goto	l15356
 12058  014692                     l15364:
 12059                           
 12060                           ;main.c: 380: }
 12061                           ;main.c: 382: cmdBytes[sizeof(cmdBytes) - 1] = GetCheckSum(cmdBytes, sizeof(cmdBytes) - 
      +                          1);
 12062  014692  0101               	movlb	1	; () banked
 12063  014694  0E01               	movlw	high TCPServer@cmdBytes
 12064  014696  0101               	movlb	1	; () banked
 12065  014698  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 12066  01469A  0101               	movlb	1	; () banked
 12067  01469C  0E87               	movlw	low TCPServer@cmdBytes
 12068  01469E  0101               	movlb	1	; () banked
 12069  0146A0  6F00               	movwf	GetCheckSum@data& (0+255),b
 12070  0146A2  0E11               	movlw	17
 12071  0146A4  0101               	movlb	1	; () banked
 12072  0146A6  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 12073  0146A8  EC60  F0D9         	call	_GetCheckSum	;wreg free
 12074  0146AC  0101               	movlb	1	; () banked
 12075  0146AE  6F98               	movwf	(TCPServer@cmdBytes+17)& (0+255),b
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;main.c: 383: TCPPutArray(srvSocket, cmdBytes, sizeof(cmdBytes));
 12079  0146B0  0101               	movlb	1	; () banked
 12080  0146B2  0E01               	movlw	high TCPServer@cmdBytes
 12081  0146B4  0101               	movlb	1	; () banked
 12082  0146B6  6F58               	movwf	(TCPPutArray@data+1)& (0+255),b
 12083  0146B8  0101               	movlb	1	; () banked
 12084  0146BA  0E87               	movlw	low TCPServer@cmdBytes
 12085  0146BC  0101               	movlb	1	; () banked
 12086  0146BE  6F57               	movwf	TCPPutArray@data& (0+255),b
 12087  0146C0  0E00               	movlw	0
 12088  0146C2  0101               	movlb	1	; () banked
 12089  0146C4  6F5A               	movwf	(TCPPutArray@len+1)& (0+255),b
 12090  0146C6  0E12               	movlw	18
 12091  0146C8  0101               	movlb	1	; () banked
 12092  0146CA  6F59               	movwf	TCPPutArray@len& (0+255),b
 12093  0146CC  0101               	movlb	1	; () banked
 12094  0146CE  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 12095  0146D0  EC24  F0AA         	call	_TCPPutArray
 12096                           
 12097                           ;main.c: 385: tcpServerState = SM_CLOSING;
 12098  0146D4  0E02               	movlw	2
 12099  0146D6  0100               	movlb	0	; () banked
 12100  0146D8  6FED               	movwf	TCPServer@tcpServerState& (0+255),b
 12101                           
 12102                           ;main.c: 386: break;
 12103  0146DA  0012               	return	
 12104  0146DC                     l15370:
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;main.c: 390: TCPClose(srvSocket);
 12108  0146DC  0101               	movlb	1	; () banked
 12109  0146DE  51B4               	movf	TCPServer@srvSocket& (0+255),w,b
 12110  0146E0  EC04  F0DC         	call	_TCPClose
 12111                           
 12112                           ;main.c: 392: tcpServerState = SM_HOME;
 12113  0146E4  0E00               	movlw	0
 12114  0146E6  0100               	movlb	0	; () banked
 12115  0146E8  6FED               	movwf	TCPServer@tcpServerState& (0+255),b
 12116                           
 12117                           ;main.c: 393: break;
 12118  0146EA  0012               	return	
 12119  0146EC                     l15376:
 12120  0146EC  0100               	movlb	0	; () banked
 12121  0146EE  51ED               	movf	TCPServer@tcpServerState& (0+255),w,b
 12122                           
 12123                           ; Switch size 1, requested type "space"
 12124                           ; Number of cases is 3, Range of values is 0 to 2
 12125                           ; switch strategies available:
 12126                           ; Name         Instructions Cycles
 12127                           ; simple_byte           10     6 (average)
 12128                           ;	Chosen strategy is simple_byte
 12129  0146F0  0A00               	xorlw	0	; case 0
 12130  0146F2  B4D8               	btfsc	status,2,c
 12131  0146F4  D596               	goto	l15260
 12132  0146F6  0A01               	xorlw	1	; case 1
 12133  0146F8  B4D8               	btfsc	status,2,c
 12134  0146FA  D5B8               	goto	l15268
 12135  0146FC  0A03               	xorlw	3	; case 2
 12136  0146FE  A4D8               	btfss	status,2,c
 12137  014700  0012               	return	
 12138  014702  D7EC               	goto	l15370
 12139  014704                     __end_of_TCPServer:
 12140                           	opt stack 0
 12141                           tblptru	equ	0xFF8
 12142                           tblptrh	equ	0xFF7
 12143                           tblptrl	equ	0xFF6
 12144                           tablat	equ	0xFF5
 12145                           intcon	equ	0xFF2
 12146                           postinc0	equ	0xFEE
 12147                           wreg	equ	0xFE8
 12148                           postdec1	equ	0xFE5
 12149                           fsr1h	equ	0xFE2
 12150                           fsr1l	equ	0xFE1
 12151                           status	equ	0xFD8
 12152                           
 12153 ;; *************** function _TCPPutArray *****************
 12154 ;; Defined at:
 12155 ;;		line 1192 in file "../tcpip/tcp.c"
 12156 ;; Parameters:    Size  Location     Type
 12157 ;;  hTCP            1    wreg     unsigned char 
 12158 ;;  data            2   87[BANK1 ] PTR unsigned char 
 12159 ;;		 -> TCPServer@cmdBytes(18), 
 12160 ;;  len             2   89[BANK1 ] unsigned int 
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;  hTCP            1  101[BANK1 ] unsigned char 
 12163 ;;  wFreeTXSpace    2   99[BANK1 ] unsigned int 
 12164 ;;  wActualLen      2   97[BANK1 ] unsigned int 
 12165 ;;  wRightLen       2   95[BANK1 ] unsigned int 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  2   87[BANK1 ] unsigned int 
 12168 ;; Registers used:
 12169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12175 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12176 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12177 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12178 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12179 ;;Total ram usage:       15 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:   16
 12182 ;; This function calls:
 12183 ;;		_SyncTCBStub
 12184 ;;		_TCPFlush
 12185 ;;		_TCPIsPutReady
 12186 ;;		_TCPRAMCopy
 12187 ;;		_TickGetDiv256
 12188 ;; This function is called by:
 12189 ;;		_TCPServer
 12190 ;;		_TCPPutString
 12191 ;; This function uses a non-reentrant model
 12192 ;;
 12193                           
 12194                           	psect	text2
 12195  015448                     __ptext2:
 12196                           	opt stack 0
 12197  015448                     _TCPPutArray:
 12198                           	opt stack 13
 12199                           
 12200                           ;incstack = 0
 12201                           ;TCPPutArray@hTCP stored from wreg
 12202  015448  0101               	movlb	1	; () banked
 12203  01544A  6F65               	movwf	TCPPutArray@hTCP& (0+255),b
 12204                           
 12205                           ; BSR set to: 1
 12206                           ;tcp.c: 1194: uint16_t wActualLen;
 12207                           ;tcp.c: 1195: uint16_t wFreeTXSpace;
 12208                           ;tcp.c: 1196: uint16_t wRightLen = 0;
 12209  01544C  0E00               	movlw	0
 12210  01544E  0101               	movlb	1	; () banked
 12211  015450  6F60               	movwf	(TCPPutArray@wRightLen+1)& (0+255),b
 12212  015452  0E00               	movlw	0
 12213  015454  0101               	movlb	1	; () banked
 12214  015456  6F5F               	movwf	TCPPutArray@wRightLen& (0+255),b
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;tcp.c: 1198: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 12218  015458  0101               	movlb	1	; () banked
 12219  01545A  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 12220  01545C  B4D8               	btfsc	status,2,c
 12221  01545E  D007               	goto	l14506
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;tcp.c: 1199: {
 12225                           ;tcp.c: 1200: return 0;
 12226  015460  0E00               	movlw	0
 12227  015462  0101               	movlb	1	; () banked
 12228  015464  6F58               	movwf	(?_TCPPutArray+1)& (0+255),b
 12229  015466  0E00               	movlw	0
 12230  015468  0101               	movlb	1	; () banked
 12231  01546A  6F57               	movwf	?_TCPPutArray& (0+255),b
 12232  01546C  0012               	return	
 12233  01546E                     l14506:
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;tcp.c: 1201: }
 12237                           ;tcp.c: 1203: SyncTCBStub(hTCP);
 12238  01546E  0101               	movlb	1	; () banked
 12239  015470  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 12240  015472  EC30  F0D0         	call	_SyncTCBStub
 12241                           
 12242                           ;tcp.c: 1205: wFreeTXSpace = TCPIsPutReady(hTCP);
 12243  015476  0101               	movlb	1	; () banked
 12244  015478  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 12245  01547A  ECDB  F0C4         	call	_TCPIsPutReady
 12246  01547E  0101               	movlb	1	; () banked
 12247  015480  C121  F163         	movff	?_TCPIsPutReady,TCPPutArray@wFreeTXSpace
 12248  015484  0101               	movlb	1	; () banked
 12249  015486  C122  F164         	movff	?_TCPIsPutReady+1,TCPPutArray@wFreeTXSpace+1
 12250                           
 12251                           ; BSR set to: 1
 12252                           ;tcp.c: 1206: if(wFreeTXSpace == 0u)
 12253  01548A  0101               	movlb	1	; () banked
 12254  01548C  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 12255  01548E  1163               	iorwf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 12256  015490  A4D8               	btfss	status,2,c
 12257  015492  D00B               	goto	l976
 12258                           
 12259                           ; BSR set to: 1
 12260                           ;tcp.c: 1207: {
 12261                           ;tcp.c: 1208: TCPFlush(hTCP);
 12262  015494  0101               	movlb	1	; () banked
 12263  015496  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 12264  015498  ECFA  F0D8         	call	_TCPFlush
 12265                           
 12266                           ;tcp.c: 1209: return 0;
 12267  01549C  0E00               	movlw	0
 12268  01549E  0101               	movlb	1	; () banked
 12269  0154A0  6F58               	movwf	(?_TCPPutArray+1)& (0+255),b
 12270  0154A2  0E00               	movlw	0
 12271  0154A4  0101               	movlb	1	; () banked
 12272  0154A6  6F57               	movwf	?_TCPPutArray& (0+255),b
 12273  0154A8  0012               	return	
 12274  0154AA                     l976:
 12275                           
 12276                           ; BSR set to: 1
 12277                           ;tcp.c: 1210: }
 12278                           ;tcp.c: 1212: wActualLen = wFreeTXSpace;
 12279  0154AA  C163  F161         	movff	TCPPutArray@wFreeTXSpace,TCPPutArray@wActualLen
 12280  0154AE  C164  F162         	movff	TCPPutArray@wFreeTXSpace+1,TCPPutArray@wActualLen+1
 12281                           
 12282                           ; BSR set to: 1
 12283                           ;tcp.c: 1213: if(wFreeTXSpace > len)
 12284  0154B2  0101               	movlb	1	; () banked
 12285  0154B4  5163               	movf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 12286  0154B6  0101               	movlb	1	; () banked
 12287  0154B8  5D59               	subwf	TCPPutArray@len& (0+255),w,b
 12288  0154BA  0101               	movlb	1	; () banked
 12289  0154BC  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 12290  0154BE  0101               	movlb	1	; () banked
 12291  0154C0  595A               	subwfb	(TCPPutArray@len+1)& (0+255),w,b
 12292  0154C2  B0D8               	btfsc	status,0,c
 12293  0154C4  D004               	goto	l977
 12294                           
 12295                           ; BSR set to: 1
 12296                           ;tcp.c: 1214: wActualLen = len;
 12297  0154C6  C159  F161         	movff	TCPPutArray@len,TCPPutArray@wActualLen
 12298  0154CA  C15A  F162         	movff	TCPPutArray@len+1,TCPPutArray@wActualLen+1
 12299  0154CE                     l977:
 12300                           
 12301                           ; BSR set to: 1
 12302                           ;tcp.c: 1219: if((!MyTCBStub.Flags.bHalfFullFlush) && (wFreeTXSpace <= ((MyTCBStub.buffe
      +                          rRxStart-MyTCBStub.bufferTxStart)>>1)))
 12303  0154CE  0101               	movlb	1	; () banked
 12304  0154D0  B1F8               	btfsc	(_MyTCBStub+24)& (0+255),0,b
 12305  0154D2  D02C               	goto	l14528
 12306                           
 12307                           ; BSR set to: 1
 12308  0154D4  0101               	movlb	1	; () banked
 12309  0154D6  C1E0  F15B         	movff	_MyTCBStub,??_TCPPutArray
 12310  0154DA  0101               	movlb	1	; () banked
 12311  0154DC  C1E1  F15C         	movff	_MyTCBStub+1,??_TCPPutArray+1
 12312  0154E0  0101               	movlb	1	; () banked
 12313  0154E2  1F5B               	comf	??_TCPPutArray& (0+255),f,b
 12314  0154E4  1F5C               	comf	(??_TCPPutArray+1)& (0+255),f,b
 12315  0154E6  4B5B               	infsnz	??_TCPPutArray& (0+255),f,b
 12316  0154E8  2B5C               	incf	(??_TCPPutArray+1)& (0+255),f,b
 12317  0154EA  0101               	movlb	1	; () banked
 12318  0154EC  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 12319  0154EE  0101               	movlb	1	; () banked
 12320  0154F0  275B               	addwf	??_TCPPutArray& (0+255),f,b
 12321  0154F2  0101               	movlb	1	; () banked
 12322  0154F4  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 12323  0154F6  0101               	movlb	1	; () banked
 12324  0154F8  235C               	addwfc	(??_TCPPutArray+1)& (0+255),f,b
 12325  0154FA  90D8               	bcf	status,0,c
 12326  0154FC  0101               	movlb	1	; () banked
 12327  0154FE  315C               	rrcf	(??_TCPPutArray+1)& (0+255),w,b
 12328  015500  0101               	movlb	1	; () banked
 12329  015502  6F5E               	movwf	(??_TCPPutArray+3)& (0+255),b
 12330  015504  0101               	movlb	1	; () banked
 12331  015506  315B               	rrcf	??_TCPPutArray& (0+255),w,b
 12332  015508  0101               	movlb	1	; () banked
 12333  01550A  6F5D               	movwf	(??_TCPPutArray+2)& (0+255),b
 12334  01550C  0101               	movlb	1	; () banked
 12335  01550E  5163               	movf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 12336  015510  0101               	movlb	1	; () banked
 12337  015512  5D5D               	subwf	(??_TCPPutArray+2)& (0+255),w,b
 12338  015514  0101               	movlb	1	; () banked
 12339  015516  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 12340  015518  0101               	movlb	1	; () banked
 12341  01551A  595E               	subwfb	(??_TCPPutArray+3)& (0+255),w,b
 12342  01551C  A0D8               	btfss	status,0,c
 12343  01551E  D006               	goto	l14528
 12344                           
 12345                           ; BSR set to: 1
 12346                           ;tcp.c: 1220: {
 12347                           ;tcp.c: 1221: TCPFlush(hTCP);
 12348  015520  0101               	movlb	1	; () banked
 12349  015522  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 12350  015524  ECFA  F0D8         	call	_TCPFlush
 12351                           
 12352                           ;tcp.c: 1222: MyTCBStub.Flags.bHalfFullFlush = 1;
 12353  015528  0101               	movlb	1	; () banked
 12354  01552A  81F8               	bsf	(_MyTCBStub+24)& (0+255),0,b
 12355  01552C                     l14528:
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;tcp.c: 1223: }
 12359                           ;tcp.c: 1258: if(MyTCBStub.txHead + wActualLen >= MyTCBStub.bufferRxStart)
 12360  01552C  0101               	movlb	1	; () banked
 12361  01552E  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 12362  015532  CFDE F15B          	movff	postinc2,??_TCPPutArray
 12363  015536  CFDD F15C          	movff	postdec2,??_TCPPutArray+1
 12364  01553A  0101               	movlb	1	; () banked
 12365  01553C  5161               	movf	TCPPutArray@wActualLen& (0+255),w,b
 12366  01553E  0101               	movlb	1	; () banked
 12367  015540  275B               	addwf	??_TCPPutArray& (0+255),f,b
 12368  015542  0101               	movlb	1	; () banked
 12369  015544  5162               	movf	(TCPPutArray@wActualLen+1)& (0+255),w,b
 12370  015546  0101               	movlb	1	; () banked
 12371  015548  235C               	addwfc	(??_TCPPutArray+1)& (0+255),f,b
 12372  01554A  0101               	movlb	1	; () banked
 12373  01554C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 12374  01554E  0101               	movlb	1	; () banked
 12375  015550  5D5B               	subwf	??_TCPPutArray& (0+255),w,b
 12376  015552  0101               	movlb	1	; () banked
 12377  015554  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 12378  015556  0101               	movlb	1	; () banked
 12379  015558  595C               	subwfb	(??_TCPPutArray+1)& (0+255),w,b
 12380  01555A  A0D8               	btfss	status,0,c
 12381  01555C  D03F               	goto	l14540
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;tcp.c: 1259: {
 12385                           ;tcp.c: 1260: wRightLen = MyTCBStub.bufferRxStart-MyTCBStub.txHead;
 12386  01555E  0101               	movlb	1	; () banked
 12387  015560  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 12388  015564  CFDE F15B          	movff	postinc2,??_TCPPutArray
 12389  015568  CFDD F15C          	movff	postdec2,??_TCPPutArray+1
 12390  01556C  0101               	movlb	1	; () banked
 12391  01556E  1F5B               	comf	??_TCPPutArray& (0+255),f,b
 12392  015570  1F5C               	comf	(??_TCPPutArray+1)& (0+255),f,b
 12393  015572  4B5B               	infsnz	??_TCPPutArray& (0+255),f,b
 12394  015574  2B5C               	incf	(??_TCPPutArray+1)& (0+255),f,b
 12395  015576  0101               	movlb	1	; () banked
 12396  015578  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 12397  01557A  0101               	movlb	1	; () banked
 12398  01557C  255B               	addwf	??_TCPPutArray& (0+255),w,b
 12399  01557E  0101               	movlb	1	; () banked
 12400  015580  6F5F               	movwf	TCPPutArray@wRightLen& (0+255),b
 12401  015582  0101               	movlb	1	; () banked
 12402  015584  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 12403  015586  0101               	movlb	1	; () banked
 12404  015588  215C               	addwfc	(??_TCPPutArray+1)& (0+255),w,b
 12405  01558A  0101               	movlb	1	; () banked
 12406  01558C  6F60               	movwf	(TCPPutArray@wRightLen+1)& (0+255),b
 12407                           
 12408                           ; BSR set to: 1
 12409                           ;tcp.c: 1261: TCPRAMCopy(MyTCBStub.txHead, MyTCBStub.vMemoryMedium, (unsigned short)data
      +                          , 1u, wRightLen);
 12410  01558E  C1E6  F11E         	movff	_MyTCBStub+6,TCPRAMCopy@ptrDest
 12411  015592  C1E7  F11F         	movff	_MyTCBStub+7,TCPRAMCopy@ptrDest+1
 12412  015596  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 12413  01559A  C157  F121         	movff	TCPPutArray@data,TCPRAMCopy@ptrSource
 12414  01559E  C158  F122         	movff	TCPPutArray@data+1,TCPRAMCopy@ptrSource+1
 12415  0155A2  0E01               	movlw	1
 12416  0155A4  0101               	movlb	1	; () banked
 12417  0155A6  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 12418  0155A8  C15F  F124         	movff	TCPPutArray@wRightLen,TCPRAMCopy@wLength
 12419  0155AC  C160  F125         	movff	TCPPutArray@wRightLen+1,TCPRAMCopy@wLength+1
 12420  0155B0  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 12421                           
 12422                           ;tcp.c: 1262: data += wRightLen;
 12423  0155B4  0101               	movlb	1	; () banked
 12424  0155B6  515F               	movf	TCPPutArray@wRightLen& (0+255),w,b
 12425  0155B8  0101               	movlb	1	; () banked
 12426  0155BA  2757               	addwf	TCPPutArray@data& (0+255),f,b
 12427  0155BC  0101               	movlb	1	; () banked
 12428  0155BE  5160               	movf	(TCPPutArray@wRightLen+1)& (0+255),w,b
 12429  0155C0  0101               	movlb	1	; () banked
 12430  0155C2  2358               	addwfc	(TCPPutArray@data+1)& (0+255),f,b
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;tcp.c: 1263: wActualLen -= wRightLen;
 12434  0155C4  0101               	movlb	1	; () banked
 12435  0155C6  515F               	movf	TCPPutArray@wRightLen& (0+255),w,b
 12436  0155C8  0101               	movlb	1	; () banked
 12437  0155CA  5F61               	subwf	TCPPutArray@wActualLen& (0+255),f,b
 12438  0155CC  0101               	movlb	1	; () banked
 12439  0155CE  5160               	movf	(TCPPutArray@wRightLen+1)& (0+255),w,b
 12440  0155D0  0101               	movlb	1	; () banked
 12441  0155D2  5B62               	subwfb	(TCPPutArray@wActualLen+1)& (0+255),f,b
 12442                           
 12443                           ; BSR set to: 1
 12444                           ;tcp.c: 1264: MyTCBStub.txHead = MyTCBStub.bufferTxStart;
 12445  0155D4  C1E0  F1E6         	movff	_MyTCBStub,_MyTCBStub+6
 12446  0155D8  C1E1  F1E7         	movff	_MyTCBStub+1,_MyTCBStub+7
 12447  0155DC                     l14540:
 12448                           
 12449                           ; BSR set to: 1
 12450                           ;tcp.c: 1265: }
 12451                           ;tcp.c: 1267: TCPRAMCopy(MyTCBStub.txHead, MyTCBStub.vMemoryMedium, (unsigned short)data
      +                          , 1u, wActualLen);
 12452  0155DC  C1E6  F11E         	movff	_MyTCBStub+6,TCPRAMCopy@ptrDest
 12453  0155E0  C1E7  F11F         	movff	_MyTCBStub+7,TCPRAMCopy@ptrDest+1
 12454  0155E4  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 12455  0155E8  C157  F121         	movff	TCPPutArray@data,TCPRAMCopy@ptrSource
 12456  0155EC  C158  F122         	movff	TCPPutArray@data+1,TCPRAMCopy@ptrSource+1
 12457  0155F0  0E01               	movlw	1
 12458  0155F2  0101               	movlb	1	; () banked
 12459  0155F4  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 12460  0155F6  C161  F124         	movff	TCPPutArray@wActualLen,TCPRAMCopy@wLength
 12461  0155FA  C162  F125         	movff	TCPPutArray@wActualLen+1,TCPRAMCopy@wLength+1
 12462  0155FE  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 12463                           
 12464                           ;tcp.c: 1268: MyTCBStub.txHead += wActualLen;
 12465  015602  0101               	movlb	1	; () banked
 12466  015604  5161               	movf	TCPPutArray@wActualLen& (0+255),w,b
 12467  015606  0101               	movlb	1	; () banked
 12468  015608  27E6               	addwf	(_MyTCBStub+6)& (0+255),f,b
 12469  01560A  0101               	movlb	1	; () banked
 12470  01560C  5162               	movf	(TCPPutArray@wActualLen+1)& (0+255),w,b
 12471  01560E  0101               	movlb	1	; () banked
 12472  015610  23E7               	addwfc	(_MyTCBStub+7)& (0+255),f,b
 12473                           
 12474                           ; BSR set to: 1
 12475                           ;tcp.c: 1272: if(wFreeTXSpace <= len)
 12476  015612  0101               	movlb	1	; () banked
 12477  015614  5163               	movf	TCPPutArray@wFreeTXSpace& (0+255),w,b
 12478  015616  0101               	movlb	1	; () banked
 12479  015618  5D59               	subwf	TCPPutArray@len& (0+255),w,b
 12480  01561A  0101               	movlb	1	; () banked
 12481  01561C  5164               	movf	(TCPPutArray@wFreeTXSpace+1)& (0+255),w,b
 12482  01561E  0101               	movlb	1	; () banked
 12483  015620  595A               	subwfb	(TCPPutArray@len+1)& (0+255),w,b
 12484  015622  A0D8               	btfss	status,0,c
 12485  015624  D005               	goto	l980
 12486                           
 12487                           ; BSR set to: 1
 12488                           ;tcp.c: 1273: {
 12489                           ;tcp.c: 1274: TCPFlush(hTCP);
 12490  015626  0101               	movlb	1	; () banked
 12491  015628  5165               	movf	TCPPutArray@hTCP& (0+255),w,b
 12492  01562A  ECFA  F0D8         	call	_TCPFlush
 12493                           
 12494                           ;tcp.c: 1275: }
 12495  01562E  D019               	goto	l14552
 12496  015630                     l980:
 12497                           
 12498                           ; BSR set to: 1
 12499                           ;tcp.c: 1279: else if(!MyTCBStub.Flags.bTimer2Enabled)
 12500  015630  0101               	movlb	1	; () banked
 12501  015632  BBF7               	btfsc	(_MyTCBStub+23)& (0+255),5,b
 12502  015634  D016               	goto	l14552
 12503                           
 12504                           ; BSR set to: 1
 12505                           ;tcp.c: 1280: {
 12506                           ;tcp.c: 1281: MyTCBStub.Flags.bTimer2Enabled = 1;
 12507  015636  0101               	movlb	1	; () banked
 12508  015638  8BF7               	bsf	(_MyTCBStub+23)& (0+255),5,b
 12509                           
 12510                           ; BSR set to: 1
 12511                           ;tcp.c: 1282: MyTCBStub.eventTime2 = (uint16_t)TickGetDiv256() + ((((((40000000ul)/4)+12
      +                          8ull)/256ull))/25ull)/256ull;
 12512  01563A  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 12513  01563E  C100  F15B         	movff	?_TickGetDiv256,??_TCPPutArray
 12514  015642  C101  F15C         	movff	?_TickGetDiv256+1,??_TCPPutArray+1
 12515  015646  C102  F15D         	movff	?_TickGetDiv256+2,??_TCPPutArray+2
 12516  01564A  C103  F15E         	movff	?_TickGetDiv256+3,??_TCPPutArray+3
 12517  01564E  0E06               	movlw	6
 12518  015650  0101               	movlb	1	; () banked
 12519  015652  255B               	addwf	??_TCPPutArray& (0+255),w,b
 12520  015654  0101               	movlb	1	; () banked
 12521  015656  6FF2               	movwf	(_MyTCBStub+18)& (0+255),b
 12522  015658  0E00               	movlw	0
 12523  01565A  0101               	movlb	1	; () banked
 12524  01565C  215C               	addwfc	(??_TCPPutArray+1)& (0+255),w,b
 12525  01565E  0101               	movlb	1	; () banked
 12526  015660  6FF3               	movwf	(_MyTCBStub+19)& (0+255),b
 12527  015662                     l14552:
 12528                           
 12529                           ;tcp.c: 1283: }
 12530                           ;tcp.c: 1285: return wActualLen + wRightLen;
 12531  015662  0101               	movlb	1	; () banked
 12532  015664  515F               	movf	TCPPutArray@wRightLen& (0+255),w,b
 12533  015666  0101               	movlb	1	; () banked
 12534  015668  2561               	addwf	TCPPutArray@wActualLen& (0+255),w,b
 12535  01566A  0101               	movlb	1	; () banked
 12536  01566C  6F57               	movwf	?_TCPPutArray& (0+255),b
 12537  01566E  0101               	movlb	1	; () banked
 12538  015670  5160               	movf	(TCPPutArray@wRightLen+1)& (0+255),w,b
 12539  015672  0101               	movlb	1	; () banked
 12540  015674  2162               	addwfc	(TCPPutArray@wActualLen+1)& (0+255),w,b
 12541  015676  0101               	movlb	1	; () banked
 12542  015678  6F58               	movwf	(?_TCPPutArray+1)& (0+255),b
 12543  01567A  0012               	return	
 12544  01567C                     __end_of_TCPPutArray:
 12545                           	opt stack 0
 12546                           tblptru	equ	0xFF8
 12547                           tblptrh	equ	0xFF7
 12548                           tblptrl	equ	0xFF6
 12549                           tablat	equ	0xFF5
 12550                           intcon	equ	0xFF2
 12551                           postinc0	equ	0xFEE
 12552                           wreg	equ	0xFE8
 12553                           postdec1	equ	0xFE5
 12554                           fsr1h	equ	0xFE2
 12555                           fsr1l	equ	0xFE1
 12556                           postinc2	equ	0xFDE
 12557                           postdec2	equ	0xFDD
 12558                           status	equ	0xFD8
 12559                           
 12560 ;; *************** function _TCPIsPutReady *****************
 12561 ;; Defined at:
 12562 ;;		line 1048 in file "../tcpip/tcp.c"
 12563 ;; Parameters:    Size  Location     Type
 12564 ;;  hTCP            1    wreg     unsigned char 
 12565 ;; Auto vars:     Size  Location     Type
 12566 ;;  hTCP            1   37[BANK1 ] unsigned char 
 12567 ;;  i               1   38[BANK1 ] unsigned char 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2   33[BANK1 ] unsigned int 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12577 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12578 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12579 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12580 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12581 ;;Total ram usage:        6 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:   12
 12584 ;; This function calls:
 12585 ;;		_SyncTCBStub
 12586 ;; This function is called by:
 12587 ;;		_TCPPutArray
 12588 ;;		_TCPServer
 12589 ;;		_TCPPut
 12590 ;;		_TCPPutROMArray
 12591 ;;		_TCPGetTxFIFOFull
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text3
 12596  0189B6                     __ptext3:
 12597                           	opt stack 0
 12598  0189B6                     _TCPIsPutReady:
 12599                           	opt stack 16
 12600                           
 12601                           ; BSR set to: 1
 12602                           ;incstack = 0
 12603                           ;TCPIsPutReady@hTCP stored from wreg
 12604  0189B6  0101               	movlb	1	; () banked
 12605  0189B8  6F25               	movwf	TCPIsPutReady@hTCP& (0+255),b
 12606                           
 12607                           ; BSR set to: 1
 12608                           ;tcp.c: 1050: uint8_t i;
 12609                           ;tcp.c: 1052: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 12610  0189BA  0101               	movlb	1	; () banked
 12611  0189BC  5125               	movf	TCPIsPutReady@hTCP& (0+255),w,b
 12612  0189BE  B4D8               	btfsc	status,2,c
 12613  0189C0  D007               	goto	l13090
 12614                           
 12615                           ; BSR set to: 1
 12616                           ;tcp.c: 1053: {
 12617                           ;tcp.c: 1054: return 0;
 12618  0189C2  0E00               	movlw	0
 12619  0189C4  0101               	movlb	1	; () banked
 12620  0189C6  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 12621  0189C8  0E00               	movlw	0
 12622  0189CA  0101               	movlb	1	; () banked
 12623  0189CC  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 12624  0189CE  0012               	return	
 12625  0189D0                     l13090:
 12626                           
 12627                           ; BSR set to: 1
 12628                           ;tcp.c: 1055: }
 12629                           ;tcp.c: 1057: SyncTCBStub(hTCP);
 12630  0189D0  0101               	movlb	1	; () banked
 12631  0189D2  5125               	movf	TCPIsPutReady@hTCP& (0+255),w,b
 12632  0189D4  EC30  F0D0         	call	_SyncTCBStub
 12633                           
 12634                           ;tcp.c: 1059: i = MyTCBStub.smState;
 12635  0189D8  C1F6  F126         	movff	_MyTCBStub+22,TCPIsPutReady@i
 12636                           
 12637                           ;tcp.c: 1062: if(!( (i == (uint8_t)TCP_ESTABLISHED) || (i == (uint8_t)TCP_CLOSE_WAIT) ))
 12638  0189DC  0101               	movlb	1	; () banked
 12639  0189DE  5126               	movf	TCPIsPutReady@i& (0+255),w,b
 12640  0189E0  0A07               	xorlw	7
 12641  0189E2  B4D8               	btfsc	status,2,c
 12642  0189E4  D00C               	goto	l13102
 12643                           
 12644                           ; BSR set to: 1
 12645  0189E6  0101               	movlb	1	; () banked
 12646  0189E8  5126               	movf	TCPIsPutReady@i& (0+255),w,b
 12647  0189EA  0A0B               	xorlw	11
 12648  0189EC  B4D8               	btfsc	status,2,c
 12649  0189EE  D007               	goto	l13102
 12650                           
 12651                           ; BSR set to: 1
 12652                           ;tcp.c: 1063: return 0;
 12653  0189F0  0E00               	movlw	0
 12654  0189F2  0101               	movlb	1	; () banked
 12655  0189F4  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 12656  0189F6  0E00               	movlw	0
 12657  0189F8  0101               	movlb	1	; () banked
 12658  0189FA  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 12659  0189FC  0012               	return	
 12660  0189FE                     l13102:
 12661                           
 12662                           ; BSR set to: 1
 12663                           ;tcp.c: 1085: if(MyTCBStub.txHead >= MyTCBStub.txTail)
 12664  0189FE  0101               	movlb	1	; () banked
 12665  018A00  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 12666  018A04  0101               	movlb	1	; () banked
 12667  018A06  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 12668  018A0A  52E6               	movf	postinc1,f,c
 12669  018A0C  52DE               	movf	postinc2,f,c
 12670  018A0E  50DD               	movf	postdec2,w,c
 12671  018A10  5CE5               	subwf	postdec1,w,c
 12672  018A12  E102               	bnz	u14395
 12673  018A14  50DF               	movf	indf2,w,c
 12674  018A16  5CE7               	subwf	indf1,w,c
 12675  018A18                     u14395:
 12676  018A18  A0D8               	btfss	status,0,c
 12677  018A1A  D034               	goto	l13110
 12678                           
 12679                           ; BSR set to: 1
 12680                           ;tcp.c: 1086: return (MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart - 1) - (MyTCBStu
      +                          b.txHead - MyTCBStub.txTail);
 12681  018A1C  0101               	movlb	1	; () banked
 12682  018A1E  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 12683  018A22  CFDE F123          	movff	postinc2,??_TCPIsPutReady
 12684  018A26  CFDD F124          	movff	postdec2,??_TCPIsPutReady+1
 12685  018A2A  0101               	movlb	1	; () banked
 12686  018A2C  1F23               	comf	??_TCPIsPutReady& (0+255),f,b
 12687  018A2E  1F24               	comf	(??_TCPIsPutReady+1)& (0+255),f,b
 12688  018A30  4B23               	infsnz	??_TCPIsPutReady& (0+255),f,b
 12689  018A32  2B24               	incf	(??_TCPIsPutReady+1)& (0+255),f,b
 12690  018A34  0101               	movlb	1	; () banked
 12691  018A36  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 12692  018A38  0101               	movlb	1	; () banked
 12693  018A3A  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 12694  018A3C  0101               	movlb	1	; () banked
 12695  018A3E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 12696  018A40  0101               	movlb	1	; () banked
 12697  018A42  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 12698  018A44  0101               	movlb	1	; () banked
 12699  018A46  51E0               	movf	_MyTCBStub& (0+255),w,b
 12700  018A48  0101               	movlb	1	; () banked
 12701  018A4A  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 12702  018A4C  0101               	movlb	1	; () banked
 12703  018A4E  51E1               	movf	(_MyTCBStub+1)& (0+255),w,b
 12704  018A50  0101               	movlb	1	; () banked
 12705  018A52  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 12706  018A54  0101               	movlb	1	; () banked
 12707  018A56  1F23               	comf	??_TCPIsPutReady& (0+255),f,b
 12708  018A58  1F24               	comf	(??_TCPIsPutReady+1)& (0+255),f,b
 12709  018A5A  4B23               	infsnz	??_TCPIsPutReady& (0+255),f,b
 12710  018A5C  2B24               	incf	(??_TCPIsPutReady+1)& (0+255),f,b
 12711  018A5E  0101               	movlb	1	; () banked
 12712  018A60  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 12713  018A62  0101               	movlb	1	; () banked
 12714  018A64  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 12715  018A66  0101               	movlb	1	; () banked
 12716  018A68  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 12717  018A6A  0101               	movlb	1	; () banked
 12718  018A6C  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 12719  018A6E  0EFF               	movlw	255
 12720  018A70  0101               	movlb	1	; () banked
 12721  018A72  2523               	addwf	??_TCPIsPutReady& (0+255),w,b
 12722  018A74  0101               	movlb	1	; () banked
 12723  018A76  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 12724  018A78  0EFF               	movlw	255
 12725  018A7A  0101               	movlb	1	; () banked
 12726  018A7C  2124               	addwfc	(??_TCPIsPutReady+1)& (0+255),w,b
 12727  018A7E  0101               	movlb	1	; () banked
 12728  018A80  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 12729  018A82  0012               	return	
 12730  018A84                     l13110:
 12731                           
 12732                           ; BSR set to: 1
 12733                           ;tcp.c: 1087: else
 12734                           ;tcp.c: 1088: return MyTCBStub.txTail - MyTCBStub.txHead - 1;
 12735  018A84  0101               	movlb	1	; () banked
 12736  018A86  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 12737  018A8A  CFDE F123          	movff	postinc2,??_TCPIsPutReady
 12738  018A8E  CFDD F124          	movff	postdec2,??_TCPIsPutReady+1
 12739  018A92  0101               	movlb	1	; () banked
 12740  018A94  1F23               	comf	??_TCPIsPutReady& (0+255),f,b
 12741  018A96  1F24               	comf	(??_TCPIsPutReady+1)& (0+255),f,b
 12742  018A98  4B23               	infsnz	??_TCPIsPutReady& (0+255),f,b
 12743  018A9A  2B24               	incf	(??_TCPIsPutReady+1)& (0+255),f,b
 12744  018A9C  0101               	movlb	1	; () banked
 12745  018A9E  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 12746  018AA0  0101               	movlb	1	; () banked
 12747  018AA2  2723               	addwf	??_TCPIsPutReady& (0+255),f,b
 12748  018AA4  0101               	movlb	1	; () banked
 12749  018AA6  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 12750  018AA8  0101               	movlb	1	; () banked
 12751  018AAA  2324               	addwfc	(??_TCPIsPutReady+1)& (0+255),f,b
 12752  018AAC  0EFF               	movlw	255
 12753  018AAE  0101               	movlb	1	; () banked
 12754  018AB0  2523               	addwf	??_TCPIsPutReady& (0+255),w,b
 12755  018AB2  0101               	movlb	1	; () banked
 12756  018AB4  6F21               	movwf	?_TCPIsPutReady& (0+255),b
 12757  018AB6  0EFF               	movlw	255
 12758  018AB8  0101               	movlb	1	; () banked
 12759  018ABA  2124               	addwfc	(??_TCPIsPutReady+1)& (0+255),w,b
 12760  018ABC  0101               	movlb	1	; () banked
 12761  018ABE  6F22               	movwf	(?_TCPIsPutReady+1)& (0+255),b
 12762  018AC0  0012               	return	
 12763  018AC2                     __end_of_TCPIsPutReady:
 12764                           	opt stack 0
 12765                           tblptru	equ	0xFF8
 12766                           tblptrh	equ	0xFF7
 12767                           tblptrl	equ	0xFF6
 12768                           tablat	equ	0xFF5
 12769                           intcon	equ	0xFF2
 12770                           postinc0	equ	0xFEE
 12771                           wreg	equ	0xFE8
 12772                           indf1	equ	0xFE7
 12773                           postinc1	equ	0xFE6
 12774                           postdec1	equ	0xFE5
 12775                           fsr1h	equ	0xFE2
 12776                           fsr1l	equ	0xFE1
 12777                           indf2	equ	0xFDF
 12778                           postinc2	equ	0xFDE
 12779                           postdec2	equ	0xFDD
 12780                           status	equ	0xFD8
 12781                           
 12782 ;; *************** function _TCPFlush *****************
 12783 ;; Defined at:
 12784 ;;		line 1006 in file "../tcpip/tcp.c"
 12785 ;; Parameters:    Size  Location     Type
 12786 ;;  hTCP            1    wreg     unsigned char 
 12787 ;; Auto vars:     Size  Location     Type
 12788 ;;  hTCP            1   86[BANK1 ] unsigned char 
 12789 ;; Return value:  Size  Location     Type
 12790 ;;		None               void
 12791 ;; Registers used:
 12792 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12793 ;; Tracked objects:
 12794 ;;		On entry : 0/0
 12795 ;;		On exit  : 0/0
 12796 ;;		Unchanged: 0/0
 12797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12799 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12801 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12802 ;;Total ram usage:        1 bytes
 12803 ;; Hardware stack levels used:    1
 12804 ;; Hardware stack levels required when called:   15
 12805 ;; This function calls:
 12806 ;;		_SendTCP
 12807 ;;		_SyncTCB
 12808 ;;		_SyncTCBStub
 12809 ;; This function is called by:
 12810 ;;		_TCPPutArray
 12811 ;;		_TCPPut
 12812 ;;		_TCPPutROMArray
 12813 ;; This function uses a non-reentrant model
 12814 ;;
 12815                           
 12816                           	psect	text4
 12817  01B1F4                     __ptext4:
 12818                           	opt stack 0
 12819  01B1F4                     _TCPFlush:
 12820                           	opt stack 13
 12821                           
 12822                           ; BSR set to: 1
 12823                           ;incstack = 0
 12824                           ;TCPFlush@hTCP stored from wreg
 12825  01B1F4  0101               	movlb	1	; () banked
 12826  01B1F6  6F56               	movwf	TCPFlush@hTCP& (0+255),b
 12827                           
 12828                           ; BSR set to: 1
 12829                           ;tcp.c: 1008: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 12830  01B1F8  0101               	movlb	1	; () banked
 12831  01B1FA  5156               	movf	TCPFlush@hTCP& (0+255),w,b
 12832  01B1FC  A4D8               	btfss	status,2,c
 12833  01B1FE  0012               	return	
 12834                           
 12835                           ; BSR set to: 1
 12836                           ;tcp.c: 1011: }
 12837                           ;tcp.c: 1013: SyncTCBStub(hTCP);
 12838                           
 12839                           ; BSR set to: 1
 12840                           
 12841                           ; BSR set to: 1
 12842                           ;tcp.c: 1009: {
 12843                           ;tcp.c: 1010: return;
 12844  01B200  0101               	movlb	1	; () banked
 12845  01B202  5156               	movf	TCPFlush@hTCP& (0+255),w,b
 12846  01B204  EC30  F0D0         	call	_SyncTCBStub
 12847                           
 12848                           ;tcp.c: 1014: SyncTCB();
 12849  01B208  EC10  F0CB         	call	_SyncTCB	;wreg free
 12850                           
 12851                           ;tcp.c: 1018: if(MyTCBStub.txHead != MyTCB.txUnackedTail)
 12852  01B20C  0101               	movlb	1	; () banked
 12853  01B20E  EE21  F0C5         	lfsr	2,_MyTCB+12
 12854  01B212  0101               	movlb	1	; () banked
 12855  01B214  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 12856  01B218  52E6               	movf	postinc1,f,c
 12857  01B21A  52DE               	movf	postinc2,f,c
 12858  01B21C  50DD               	movf	postdec2,w,c
 12859  01B21E  18E5               	xorwf	postdec1,w,c
 12860  01B220  CFDF FFE8          	movff	indf2,wreg
 12861  01B224  B4D8               	btfsc	status,2,c
 12862  01B226  18E7               	xorwf	indf1,w,c
 12863  01B228  B4D8               	btfsc	status,2,c
 12864  01B22A  0012               	return	
 12865                           
 12866                           ; BSR set to: 1
 12867                           ;tcp.c: 1019: {
 12868                           ;tcp.c: 1021: SendTCP((0x10), 0x01);
 12869  01B22C  0E01               	movlw	1
 12870  01B22E  0101               	movlb	1	; () banked
 12871  01B230  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 12872  01B232  0E10               	movlw	16
 12873  01B234  ECC1  F096         	call	_SendTCP
 12874  01B238  0012               	return	
 12875  01B23A                     __end_of_TCPFlush:
 12876                           	opt stack 0
 12877                           tblptru	equ	0xFF8
 12878                           tblptrh	equ	0xFF7
 12879                           tblptrl	equ	0xFF6
 12880                           tablat	equ	0xFF5
 12881                           intcon	equ	0xFF2
 12882                           postinc0	equ	0xFEE
 12883                           wreg	equ	0xFE8
 12884                           indf1	equ	0xFE7
 12885                           postinc1	equ	0xFE6
 12886                           postdec1	equ	0xFE5
 12887                           fsr1h	equ	0xFE2
 12888                           fsr1l	equ	0xFE1
 12889                           indf2	equ	0xFDF
 12890                           postinc2	equ	0xFDE
 12891                           postdec2	equ	0xFDD
 12892                           status	equ	0xFD8
 12893                           
 12894 ;; *************** function _TCPOpen *****************
 12895 ;; Defined at:
 12896 ;;		line 553 in file "../tcpip/tcp.c"
 12897 ;; Parameters:    Size  Location     Type
 12898 ;;  dwRemoteHost    4   86[BANK1 ] unsigned long 
 12899 ;;  vRemoteHostT    1   90[BANK1 ] unsigned char 
 12900 ;;  wPort           2   91[BANK1 ] unsigned int 
 12901 ;;  vSocketPurpo    1   93[BANK1 ] unsigned char 
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;  hTCP            1   98[BANK1 ] unsigned char 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      unsigned char 
 12906 ;; Registers used:
 12907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 12913 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;Total ram usage:       13 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:   15
 12920 ;; This function calls:
 12921 ;;		_SendTCP
 12922 ;;		_SyncTCB
 12923 ;;		_SyncTCBStub
 12924 ;;		_TickGet
 12925 ;;		_memcpy
 12926 ;; This function is called by:
 12927 ;;		_TCPServer
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text5
 12932  015F12                     __ptext5:
 12933                           	opt stack 0
 12934  015F12                     _TCPOpen:
 12935                           	opt stack 14
 12936                           
 12937                           ;tcp.c: 555: TCP_SOCKET hTCP;
 12938                           ;tcp.c: 558: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitiali
      +                          zer[0])); hTCP++)
 12939                           
 12940                           ;incstack = 0
 12941  015F12  0E00               	movlw	0
 12942  015F14  0101               	movlb	1	; () banked
 12943  015F16  6F62               	movwf	TCPOpen@hTCP& (0+255),b
 12944  015F18  0101               	movlb	1	; () banked
 12945  015F1A  5162               	movf	TCPOpen@hTCP& (0+255),w,b
 12946  015F1C  A4D8               	btfss	status,2,c
 12947  015F1E  D0F3               	goto	l14472
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;tcp.c: 559: {
 12951                           ;tcp.c: 560: SyncTCBStub(hTCP);
 12952                           
 12953                           ; BSR set to: 1
 12954                           
 12955                           ; BSR set to: 1
 12956  015F20  0101               	movlb	1	; () banked
 12957  015F22  5162               	movf	TCPOpen@hTCP& (0+255),w,b
 12958  015F24  EC30  F0D0         	call	_SyncTCBStub
 12959                           
 12960                           ;tcp.c: 563: if(MyTCBStub.smState != TCP_CLOSED)
 12961  015F28  0101               	movlb	1	; () banked
 12962  015F2A  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 12963  015F2C  0A0D               	xorlw	13
 12964  015F2E  A4D8               	btfss	status,2,c
 12965  015F30  D0E7               	goto	l14468
 12966                           
 12967                           ; BSR set to: 1
 12968                           ;tcp.c: 566: SyncTCB();
 12969                           
 12970                           ; BSR set to: 1
 12971                           
 12972                           ; BSR set to: 1
 12973                           ;tcp.c: 564: continue;
 12974  015F32  EC10  F0CB         	call	_SyncTCB	;wreg free
 12975                           
 12976                           ;tcp.c: 569: if(MyTCB.vSocketPurpose != vSocketPurpose)
 12977  015F36  0101               	movlb	1	; () banked
 12978  015F38  51DF               	movf	(_MyTCB+38)& (0+255),w,b
 12979  015F3A  0101               	movlb	1	; () banked
 12980  015F3C  195D               	xorwf	TCPOpen@vSocketPurpose& (0+255),w,b
 12981  015F3E  A4D8               	btfss	status,2,c
 12982  015F40  D0DF               	goto	l14468
 12983                           
 12984                           ; BSR set to: 1
 12985                           ;tcp.c: 574: MyTCB.wRemoteMSS = 536;
 12986                           
 12987                           ; BSR set to: 1
 12988                           
 12989                           ; BSR set to: 1
 12990                           ;tcp.c: 570: continue;
 12991  015F42  0E02               	movlw	2
 12992  015F44  0101               	movlb	1	; () banked
 12993  015F46  6FDD               	movwf	(_MyTCB+36)& (0+255),b
 12994  015F48  0E18               	movlw	24
 12995  015F4A  0101               	movlb	1	; () banked
 12996  015F4C  6FDC               	movwf	(_MyTCB+35)& (0+255),b
 12997                           
 12998                           ; BSR set to: 1
 12999                           ;tcp.c: 577: if(vRemoteHostType == 0u)
 13000  015F4E  0101               	movlb	1	; () banked
 13001  015F50  675A               	tstfsz	TCPOpen@vRemoteHostType& (0+255),b
 13002  015F52  D00E               	goto	l14426
 13003                           
 13004                           ; BSR set to: 1
 13005                           ;tcp.c: 578: {
 13006                           ;tcp.c: 579: MyTCB.localPort.Val = wPort;
 13007  015F54  C15B  F1C9         	movff	TCPOpen@wPort,_MyTCB+16
 13008  015F58  C15C  F1CA         	movff	TCPOpen@wPort+1,_MyTCB+17
 13009                           
 13010                           ;tcp.c: 580: MyTCBStub.Flags.bServer = 1;
 13011  015F5C  0101               	movlb	1	; () banked
 13012  015F5E  87F7               	bsf	(_MyTCBStub+23)& (0+255),3,b
 13013                           
 13014                           ; BSR set to: 1
 13015                           ;tcp.c: 581: MyTCBStub.smState = TCP_LISTEN;
 13016  015F60  0E04               	movlw	4
 13017  015F62  0101               	movlb	1	; () banked
 13018  015F64  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 13019                           
 13020                           ; BSR set to: 1
 13021                           ;tcp.c: 582: MyTCBStub.remoteHash.Val = wPort;
 13022  015F66  C15B  F1F9         	movff	TCPOpen@wPort,_MyTCBStub+25
 13023  015F6A  C15C  F1FA         	movff	TCPOpen@wPort+1,_MyTCBStub+26
 13024                           
 13025                           ;tcp.c: 586: }
 13026  015F6E  D0C5               	goto	l14464
 13027  015F70                     l14426:
 13028                           
 13029                           ; BSR set to: 1
 13030                           ;tcp.c: 588: else
 13031                           ;tcp.c: 589: {
 13032                           ;tcp.c: 591: {
 13033                           ;tcp.c: 594: if(NextPort < (1024u) || NextPort > (5000u))
 13034  015F70  0E00               	movlw	0
 13035  015F72  0100               	movlb	0	; () banked
 13036  015F74  5DE5               	subwf	_NextPort& (0+255),w,b
 13037  015F76  0E04               	movlw	4
 13038  015F78  0100               	movlb	0	; () banked
 13039  015F7A  59E6               	subwfb	(_NextPort+1)& (0+255),w,b
 13040  015F7C  A0D8               	btfss	status,0,c
 13041  015F7E  D008               	goto	l14430
 13042                           
 13043                           ; BSR set to: 0
 13044  015F80  0E89               	movlw	137
 13045  015F82  0100               	movlb	0	; () banked
 13046  015F84  5DE5               	subwf	_NextPort& (0+255),w,b
 13047  015F86  0E13               	movlw	19
 13048  015F88  0100               	movlb	0	; () banked
 13049  015F8A  59E6               	subwfb	(_NextPort+1)& (0+255),w,b
 13050  015F8C  A0D8               	btfss	status,0,c
 13051  015F8E  D006               	goto	l14432
 13052  015F90                     l14430:
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;tcp.c: 595: NextPort = (1024u);
 13056  015F90  0E04               	movlw	4
 13057  015F92  0100               	movlb	0	; () banked
 13058  015F94  6FE6               	movwf	(_NextPort+1)& (0+255),b
 13059  015F96  0E00               	movlw	0
 13060  015F98  0100               	movlb	0	; () banked
 13061  015F9A  6FE5               	movwf	_NextPort& (0+255),b
 13062  015F9C                     l14432:
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;tcp.c: 598: MyTCB.localPort.Val = NextPort++;
 13066  015F9C  C0E5  F1C9         	movff	_NextPort,_MyTCB+16
 13067  015FA0  C0E6  F1CA         	movff	_NextPort+1,_MyTCB+17
 13068                           
 13069                           ; BSR set to: 0
 13070  015FA4  0100               	movlb	0	; () banked
 13071  015FA6  4BE5               	infsnz	_NextPort& (0+255),f,b
 13072  015FA8  2BE6               	incf	(_NextPort+1)& (0+255),f,b
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;tcp.c: 599: MyTCB.remotePort.Val = wPort;
 13076  015FAA  C15B  F1C7         	movff	TCPOpen@wPort,_MyTCB+14
 13077  015FAE  C15C  F1C8         	movff	TCPOpen@wPort+1,_MyTCB+15
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;tcp.c: 602: MyTCBStub.eventTime = TickGet();
 13081  015FB2  EC94  F0DB         	call	_TickGet	;wreg free
 13082  015FB6  C100  F1EE         	movff	?_TickGet,_MyTCBStub+14
 13083  015FBA  C101  F1EF         	movff	?_TickGet+1,_MyTCBStub+15
 13084  015FBE  C102  F1F0         	movff	?_TickGet+2,_MyTCBStub+16
 13085  015FC2  C103  F1F1         	movff	?_TickGet+3,_MyTCBStub+17
 13086                           
 13087                           ;tcp.c: 603: MyTCBStub.Flags.bTimerEnabled = 1;
 13088  015FC6  0101               	movlb	1	; () banked
 13089  015FC8  89F7               	bsf	(_MyTCBStub+23)& (0+255),4,b
 13090                           
 13091                           ;tcp.c: 605: switch(vRemoteHostType)
 13092  015FCA  D08F               	goto	l14462
 13093  015FCC                     l14442:
 13094                           
 13095                           ; BSR set to: 1
 13096                           ;tcp.c: 620: MyTCBStub.remoteHash.Val = (((TCPIP_UINT32_VAL*)&dwRemoteHost)->w[1]+((TCPI
      +                          P_UINT32_VAL*)&dwRemoteHost)->w[0] + wPort) ^ MyTCB.localPort.Val;
 13097  015FCC  0101               	movlb	1	; () banked
 13098  015FCE  EE21  F058         	lfsr	2,TCPOpen@dwRemoteHost+2
 13099  015FD2  CFDE F15E          	movff	postinc2,??_TCPOpen
 13100  015FD6  CFDD F15F          	movff	postdec2,??_TCPOpen+1
 13101  015FDA  0101               	movlb	1	; () banked
 13102  015FDC  5156               	movf	TCPOpen@dwRemoteHost& (0+255),w,b
 13103  015FDE  0101               	movlb	1	; () banked
 13104  015FE0  275E               	addwf	??_TCPOpen& (0+255),f,b
 13105  015FE2  0101               	movlb	1	; () banked
 13106  015FE4  5157               	movf	(TCPOpen@dwRemoteHost+1)& (0+255),w,b
 13107  015FE6  0101               	movlb	1	; () banked
 13108  015FE8  235F               	addwfc	(??_TCPOpen+1)& (0+255),f,b
 13109  015FEA  0101               	movlb	1	; () banked
 13110  015FEC  515B               	movf	TCPOpen@wPort& (0+255),w,b
 13111  015FEE  0101               	movlb	1	; () banked
 13112  015FF0  275E               	addwf	??_TCPOpen& (0+255),f,b
 13113  015FF2  0101               	movlb	1	; () banked
 13114  015FF4  515C               	movf	(TCPOpen@wPort+1)& (0+255),w,b
 13115  015FF6  0101               	movlb	1	; () banked
 13116  015FF8  235F               	addwfc	(??_TCPOpen+1)& (0+255),f,b
 13117  015FFA  0101               	movlb	1	; () banked
 13118  015FFC  51C9               	movf	(_MyTCB+16)& (0+255),w,b
 13119  015FFE  0101               	movlb	1	; () banked
 13120  016000  195E               	xorwf	??_TCPOpen& (0+255),w,b
 13121  016002  0101               	movlb	1	; () banked
 13122  016004  6FF9               	movwf	(_MyTCBStub+25)& (0+255),b
 13123  016006  0101               	movlb	1	; () banked
 13124  016008  51CA               	movf	(_MyTCB+17)& (0+255),w,b
 13125  01600A  0101               	movlb	1	; () banked
 13126  01600C  195F               	xorwf	(??_TCPOpen+1)& (0+255),w,b
 13127  01600E  0101               	movlb	1	; () banked
 13128  016010  6FFA               	movwf	(_MyTCBStub+26)& (0+255),b
 13129                           
 13130                           ; BSR set to: 1
 13131                           ;tcp.c: 621: MyTCB.remote.niRemoteMACIP.IPAddr.Val = dwRemoteHost;
 13132  016012  C156  F1CF         	movff	TCPOpen@dwRemoteHost,_MyTCB+22
 13133  016016  C157  F1D0         	movff	TCPOpen@dwRemoteHost+1,_MyTCB+23
 13134  01601A  C158  F1D1         	movff	TCPOpen@dwRemoteHost+2,_MyTCB+24
 13135  01601E  C159  F1D2         	movff	TCPOpen@dwRemoteHost+3,_MyTCB+25
 13136                           
 13137                           ; BSR set to: 1
 13138                           ;tcp.c: 622: MyTCB.retryCount = 0;
 13139  016022  0E00               	movlw	0
 13140  016024  0101               	movlb	1	; () banked
 13141  016026  6FDE               	movwf	(_MyTCB+37)& (0+255),b
 13142                           
 13143                           ; BSR set to: 1
 13144                           ;tcp.c: 623: MyTCB.retryInterval = ((((((40000000ul)/4)+128ull)/256ull))/4)/256;
 13145  016028  0E26               	movlw	38
 13146  01602A  0101               	movlb	1	; () banked
 13147  01602C  6FB9               	movwf	_MyTCB& (0+255),b
 13148  01602E  0E00               	movlw	0
 13149  016030  0101               	movlb	1	; () banked
 13150  016032  6FBA               	movwf	(_MyTCB+1)& (0+255),b
 13151  016034  0E00               	movlw	0
 13152  016036  0101               	movlb	1	; () banked
 13153  016038  6FBB               	movwf	(_MyTCB+2)& (0+255),b
 13154  01603A  0E00               	movlw	0
 13155  01603C  0101               	movlb	1	; () banked
 13156  01603E  6FBC               	movwf	(_MyTCB+3)& (0+255),b
 13157                           
 13158                           ; BSR set to: 1
 13159                           ;tcp.c: 624: MyTCBStub.smState = TCP_GATEWAY_SEND_ARP;
 13160  016040  0E02               	movlw	2
 13161  016042  0101               	movlb	1	; () banked
 13162  016044  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 13163                           
 13164                           ;tcp.c: 625: break;
 13165  016046  D059               	goto	l14464
 13166  016048                     l14452:
 13167                           
 13168                           ; BSR set to: 1
 13169                           ;tcp.c: 628: MyTCBStub.remoteHash.Val = (((NODE_INFO*)(unsigned short)dwRemoteHost)->IPA
      +                          ddr.w[1]+((NODE_INFO*)(unsigned short)dwRemoteHost)->IPAddr.w[0] + wPort) ^ MyTCB.localP
      +                          ort.Val;
 13170  016048  C156  FFD9         	movff	TCPOpen@dwRemoteHost,fsr2l
 13171  01604C  C157  FFDA         	movff	TCPOpen@dwRemoteHost+1,fsr2h
 13172  016050  CFDE F15E          	movff	postinc2,??_TCPOpen
 13173  016054  CFDD F15F          	movff	postdec2,??_TCPOpen+1
 13174  016058  0101               	movlb	1	; () banked
 13175  01605A  EE20 F002          	lfsr	2,2
 13176  01605E  0101               	movlb	1	; () banked
 13177  016060  5156               	movf	TCPOpen@dwRemoteHost& (0+255),w,b
 13178  016062  26D9               	addwf	fsr2l,f,c
 13179  016064  0101               	movlb	1	; () banked
 13180  016066  5157               	movf	(TCPOpen@dwRemoteHost+1)& (0+255),w,b
 13181  016068  22DA               	addwfc	fsr2h,f,c
 13182  01606A  CFDE F160          	movff	postinc2,??_TCPOpen+2
 13183  01606E  CFDD F161          	movff	postdec2,??_TCPOpen+3
 13184  016072  0101               	movlb	1	; () banked
 13185  016074  515E               	movf	??_TCPOpen& (0+255),w,b
 13186  016076  0101               	movlb	1	; () banked
 13187  016078  2760               	addwf	(??_TCPOpen+2)& (0+255),f,b
 13188  01607A  0101               	movlb	1	; () banked
 13189  01607C  515F               	movf	(??_TCPOpen+1)& (0+255),w,b
 13190  01607E  0101               	movlb	1	; () banked
 13191  016080  2361               	addwfc	(??_TCPOpen+3)& (0+255),f,b
 13192  016082  0101               	movlb	1	; () banked
 13193  016084  515B               	movf	TCPOpen@wPort& (0+255),w,b
 13194  016086  0101               	movlb	1	; () banked
 13195  016088  2760               	addwf	(??_TCPOpen+2)& (0+255),f,b
 13196  01608A  0101               	movlb	1	; () banked
 13197  01608C  515C               	movf	(TCPOpen@wPort+1)& (0+255),w,b
 13198  01608E  0101               	movlb	1	; () banked
 13199  016090  2361               	addwfc	(??_TCPOpen+3)& (0+255),f,b
 13200  016092  0101               	movlb	1	; () banked
 13201  016094  51C9               	movf	(_MyTCB+16)& (0+255),w,b
 13202  016096  0101               	movlb	1	; () banked
 13203  016098  1960               	xorwf	(??_TCPOpen+2)& (0+255),w,b
 13204  01609A  0101               	movlb	1	; () banked
 13205  01609C  6FF9               	movwf	(_MyTCBStub+25)& (0+255),b
 13206  01609E  0101               	movlb	1	; () banked
 13207  0160A0  51CA               	movf	(_MyTCB+17)& (0+255),w,b
 13208  0160A2  0101               	movlb	1	; () banked
 13209  0160A4  1961               	xorwf	(??_TCPOpen+3)& (0+255),w,b
 13210  0160A6  0101               	movlb	1	; () banked
 13211  0160A8  6FFA               	movwf	(_MyTCBStub+26)& (0+255),b
 13212                           
 13213                           ; BSR set to: 1
 13214                           ;tcp.c: 629: memcpy((void*)(uint8_t*)&MyTCB.remote, (void*)(uint8_t*)(unsigned short)dwR
      +                          emoteHost, sizeof(NODE_INFO));
 13215  0160AA  0101               	movlb	1	; () banked
 13216  0160AC  0E01               	movlw	high (_MyTCB+22)
 13217  0160AE  0101               	movlb	1	; () banked
 13218  0160B0  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 13219  0160B2  0101               	movlb	1	; () banked
 13220  0160B4  0ECF               	movlw	low (_MyTCB+22)
 13221  0160B6  0101               	movlb	1	; () banked
 13222  0160B8  6F14               	movwf	memcpy@d1& (0+255),b
 13223  0160BA  0101               	movlb	1	; () banked
 13224  0160BC  C157  F117         	movff	TCPOpen@dwRemoteHost+1,memcpy@s1+1
 13225  0160C0  0101               	movlb	1	; () banked
 13226  0160C2  C156  F116         	movff	TCPOpen@dwRemoteHost,memcpy@s1
 13227  0160C6  0E00               	movlw	0
 13228  0160C8  0101               	movlb	1	; () banked
 13229  0160CA  6F19               	movwf	(memcpy@n+1)& (0+255),b
 13230  0160CC  0E0A               	movlw	10
 13231  0160CE  0101               	movlb	1	; () banked
 13232  0160D0  6F18               	movwf	memcpy@n& (0+255),b
 13233  0160D2  ECCF  F0D5         	call	_memcpy	;wreg free
 13234                           
 13235                           ;tcp.c: 630: MyTCBStub.smState = TCP_SYN_SENT;
 13236  0160D6  0E05               	movlw	5
 13237  0160D8  0101               	movlb	1	; () banked
 13238  0160DA  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;tcp.c: 631: SendTCP((0x02), 0x01);
 13242  0160DC  0E01               	movlw	1
 13243  0160DE  0101               	movlb	1	; () banked
 13244  0160E0  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 13245  0160E2  0E02               	movlw	2
 13246  0160E4  ECC1  F096         	call	_SendTCP
 13247                           
 13248                           ;tcp.c: 632: break;
 13249  0160E8  D008               	goto	l14464
 13250  0160EA                     l14462:
 13251  0160EA  0101               	movlb	1	; () banked
 13252  0160EC  515A               	movf	TCPOpen@vRemoteHostType& (0+255),w,b
 13253                           
 13254                           ; Switch size 1, requested type "space"
 13255                           ; Number of cases is 2, Range of values is 3 to 4
 13256                           ; switch strategies available:
 13257                           ; Name         Instructions Cycles
 13258                           ; simple_byte            7     4 (average)
 13259                           ;	Chosen strategy is simple_byte
 13260  0160EE  0A03               	xorlw	3	; case 3
 13261  0160F0  B4D8               	btfsc	status,2,c
 13262  0160F2  D76C               	goto	l14442
 13263  0160F4  0A07               	xorlw	7	; case 4
 13264  0160F6  B4D8               	btfsc	status,2,c
 13265  0160F8  D7A7               	goto	l14452
 13266  0160FA                     l14464:
 13267                           
 13268                           ;tcp.c: 634: }
 13269                           ;tcp.c: 640: }
 13270                           ;tcp.c: 642: return hTCP;
 13271  0160FA  0101               	movlb	1	; () banked
 13272  0160FC  5162               	movf	TCPOpen@hTCP& (0+255),w,b
 13273  0160FE  0012               	return	
 13274  016100                     l14468:
 13275                           
 13276                           ; BSR set to: 1
 13277  016100  0101               	movlb	1	; () banked
 13278  016102  2B62               	incf	TCPOpen@hTCP& (0+255),f,b
 13279  016104  D709               	goto	L2
 13280  016106                     l14472:
 13281                           
 13282                           ; BSR set to: 1
 13283                           ;tcp.c: 643: }
 13284                           ;tcp.c: 646: return (0xFE);
 13285  016106  0EFE               	movlw	254
 13286  016108  0012               	return	
 13287  01610A                     __end_of_TCPOpen:
 13288                           	opt stack 0
 13289                           tblptru	equ	0xFF8
 13290                           tblptrh	equ	0xFF7
 13291                           tblptrl	equ	0xFF6
 13292                           tablat	equ	0xFF5
 13293                           intcon	equ	0xFF2
 13294                           postinc0	equ	0xFEE
 13295                           wreg	equ	0xFE8
 13296                           indf1	equ	0xFE7
 13297                           postinc1	equ	0xFE6
 13298                           postdec1	equ	0xFE5
 13299                           fsr1h	equ	0xFE2
 13300                           fsr1l	equ	0xFE1
 13301                           indf2	equ	0xFDF
 13302                           postinc2	equ	0xFDE
 13303                           postdec2	equ	0xFDD
 13304                           fsr2h	equ	0xFDA
 13305                           fsr2l	equ	0xFD9
 13306                           status	equ	0xFD8
 13307                           
 13308 ;; *************** function _TCPIsConnected *****************
 13309 ;; Defined at:
 13310 ;;		line 733 in file "../tcpip/tcp.c"
 13311 ;; Parameters:    Size  Location     Type
 13312 ;;  hTCP            1    wreg     unsigned char 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  hTCP            1   33[BANK1 ] unsigned char 
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  1    wreg      unsigned char 
 13317 ;; Registers used:
 13318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/0
 13321 ;;		On exit  : 0/0
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 13324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13325 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13327 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13328 ;;Total ram usage:        1 bytes
 13329 ;; Hardware stack levels used:    1
 13330 ;; Hardware stack levels required when called:   12
 13331 ;; This function calls:
 13332 ;;		_SyncTCBStub
 13333 ;; This function is called by:
 13334 ;;		_TCPServer
 13335 ;; This function uses a non-reentrant model
 13336 ;;
 13337                           
 13338                           	psect	text6
 13339  01B6AE                     __ptext6:
 13340                           	opt stack 0
 13341  01B6AE                     _TCPIsConnected:
 13342                           	opt stack 17
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;incstack = 0
 13346                           ;TCPIsConnected@hTCP stored from wreg
 13347  01B6AE  0101               	movlb	1	; () banked
 13348  01B6B0  6F21               	movwf	TCPIsConnected@hTCP& (0+255),b
 13349                           
 13350                           ; BSR set to: 1
 13351                           ;tcp.c: 735: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 13352  01B6B2  0101               	movlb	1	; () banked
 13353  01B6B4  5121               	movf	TCPIsConnected@hTCP& (0+255),w,b
 13354  01B6B6  B4D8               	btfsc	status,2,c
 13355  01B6B8  D002               	goto	l14482
 13356                           
 13357                           ; BSR set to: 1
 13358                           ;tcp.c: 736: {
 13359                           ;tcp.c: 737: return 0;
 13360  01B6BA  0E00               	movlw	0
 13361  01B6BC  0012               	return	
 13362  01B6BE                     l14482:
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;tcp.c: 738: }
 13366                           ;tcp.c: 740: SyncTCBStub(hTCP);
 13367  01B6BE  0101               	movlb	1	; () banked
 13368  01B6C0  5121               	movf	TCPIsConnected@hTCP& (0+255),w,b
 13369  01B6C2  EC30  F0D0         	call	_SyncTCBStub
 13370                           
 13371                           ;tcp.c: 741: return (MyTCBStub.smState == TCP_ESTABLISHED);
 13372  01B6C6  0101               	movlb	1	; () banked
 13373  01B6C8  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 13374  01B6CA  0A07               	xorlw	7
 13375  01B6CC  A4D8               	btfss	status,2,c
 13376  01B6CE  D002               	goto	u16600
 13377  01B6D0  0E01               	movlw	1
 13378  01B6D2  0012               	return	
 13379  01B6D4                     u16600:
 13380  01B6D4  0E00               	movlw	0
 13381  01B6D6  0012               	return	
 13382  01B6D8                     __end_of_TCPIsConnected:
 13383                           	opt stack 0
 13384                           tblptru	equ	0xFF8
 13385                           tblptrh	equ	0xFF7
 13386                           tblptrl	equ	0xFF6
 13387                           tablat	equ	0xFF5
 13388                           intcon	equ	0xFF2
 13389                           postinc0	equ	0xFEE
 13390                           wreg	equ	0xFE8
 13391                           indf1	equ	0xFE7
 13392                           postinc1	equ	0xFE6
 13393                           postdec1	equ	0xFE5
 13394                           fsr1h	equ	0xFE2
 13395                           fsr1l	equ	0xFE1
 13396                           indf2	equ	0xFDF
 13397                           postinc2	equ	0xFDE
 13398                           postdec2	equ	0xFDD
 13399                           fsr2h	equ	0xFDA
 13400                           fsr2l	equ	0xFD9
 13401                           status	equ	0xFD8
 13402                           
 13403 ;; *************** function _TCPGetArray *****************
 13404 ;; Defined at:
 13405 ;;		line 1661 in file "../tcpip/tcp.c"
 13406 ;; Parameters:    Size  Location     Type
 13407 ;;  hTCP            1    wreg     unsigned char 
 13408 ;;  buffer          2   38[BANK1 ] PTR unsigned char 
 13409 ;;		 -> TCPServer@cmdBytes(18), 
 13410 ;;  len             2   40[BANK1 ] unsigned int 
 13411 ;; Auto vars:     Size  Location     Type
 13412 ;;  hTCP            1   46[BANK1 ] unsigned char 
 13413 ;;  RightLen        2   49[BANK1 ] unsigned int 
 13414 ;;  wGetReadyCou    2   47[BANK1 ] unsigned int 
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  2   38[BANK1 ] unsigned int 
 13417 ;; Registers used:
 13418 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 13424 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13426 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13427 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13428 ;;Total ram usage:       13 bytes
 13429 ;; Hardware stack levels used:    1
 13430 ;; Hardware stack levels required when called:   13
 13431 ;; This function calls:
 13432 ;;		_SyncTCBStub
 13433 ;;		_TCPIsGetReady
 13434 ;;		_TCPRAMCopy
 13435 ;;		_TickGetDiv256
 13436 ;; This function is called by:
 13437 ;;		_TCPServer
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441                           	psect	text7
 13442  0166BE                     __ptext7:
 13443                           	opt stack 0
 13444  0166BE                     _TCPGetArray:
 13445                           	opt stack 16
 13446                           
 13447                           ; BSR set to: 1
 13448                           ;incstack = 0
 13449                           ;TCPGetArray@hTCP stored from wreg
 13450  0166BE  0101               	movlb	1	; () banked
 13451  0166C0  6F2E               	movwf	TCPGetArray@hTCP& (0+255),b
 13452                           
 13453                           ; BSR set to: 1
 13454                           ;tcp.c: 1663: uint16_t wGetReadyCount;
 13455                           ;tcp.c: 1664: uint16_t RightLen = 0;
 13456  0166C2  0E00               	movlw	0
 13457  0166C4  0101               	movlb	1	; () banked
 13458  0166C6  6F32               	movwf	(TCPGetArray@RightLen+1)& (0+255),b
 13459  0166C8  0E00               	movlw	0
 13460  0166CA  0101               	movlb	1	; () banked
 13461  0166CC  6F31               	movwf	TCPGetArray@RightLen& (0+255),b
 13462                           
 13463                           ; BSR set to: 1
 13464                           ;tcp.c: 1667: wGetReadyCount = TCPIsGetReady(hTCP);
 13465  0166CE  0101               	movlb	1	; () banked
 13466  0166D0  512E               	movf	TCPGetArray@hTCP& (0+255),w,b
 13467  0166D2  EC23  F0CD         	call	_TCPIsGetReady
 13468  0166D6  0101               	movlb	1	; () banked
 13469  0166D8  C121  F12F         	movff	?_TCPIsGetReady,TCPGetArray@wGetReadyCount
 13470  0166DC  0101               	movlb	1	; () banked
 13471  0166DE  C122  F130         	movff	?_TCPIsGetReady+1,TCPGetArray@wGetReadyCount+1
 13472                           
 13473                           ; BSR set to: 1
 13474                           ;tcp.c: 1668: if(wGetReadyCount == 0u)
 13475  0166E2  0101               	movlb	1	; () banked
 13476  0166E4  5130               	movf	(TCPGetArray@wGetReadyCount+1)& (0+255),w,b
 13477  0166E6  112F               	iorwf	TCPGetArray@wGetReadyCount& (0+255),w,b
 13478  0166E8  B4D8               	btfsc	status,2,c
 13479  0166EA  0012               	return	
 13480                           
 13481                           ; BSR set to: 1
 13482                           ;tcp.c: 1671: SyncTCBStub(hTCP);
 13483                           
 13484                           ; BSR set to: 1
 13485                           
 13486                           ; BSR set to: 1
 13487                           ;tcp.c: 1669: return 0x0000u;
 13488                           ;	Return value of _TCPGetArray is never used
 13489  0166EC  0101               	movlb	1	; () banked
 13490  0166EE  512E               	movf	TCPGetArray@hTCP& (0+255),w,b
 13491  0166F0  EC30  F0D0         	call	_SyncTCBStub
 13492                           
 13493                           ;tcp.c: 1674: if(len > wGetReadyCount)
 13494  0166F4  0101               	movlb	1	; () banked
 13495  0166F6  5128               	movf	TCPGetArray@len& (0+255),w,b
 13496  0166F8  0101               	movlb	1	; () banked
 13497  0166FA  5D2F               	subwf	TCPGetArray@wGetReadyCount& (0+255),w,b
 13498  0166FC  0101               	movlb	1	; () banked
 13499  0166FE  5129               	movf	(TCPGetArray@len+1)& (0+255),w,b
 13500  016700  0101               	movlb	1	; () banked
 13501  016702  5930               	subwfb	(TCPGetArray@wGetReadyCount+1)& (0+255),w,b
 13502  016704  B0D8               	btfsc	status,0,c
 13503  016706  D004               	goto	l14570
 13504                           
 13505                           ; BSR set to: 1
 13506                           ;tcp.c: 1675: len = wGetReadyCount;
 13507  016708  C12F  F128         	movff	TCPGetArray@wGetReadyCount,TCPGetArray@len
 13508  01670C  C130  F129         	movff	TCPGetArray@wGetReadyCount+1,TCPGetArray@len+1
 13509  016710                     l14570:
 13510                           
 13511                           ; BSR set to: 1
 13512                           ;tcp.c: 1678: if(MyTCBStub.rxTail + len > MyTCBStub.bufferEnd)
 13513  016710  0101               	movlb	1	; () banked
 13514  016712  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 13515  016716  CFDE F12A          	movff	postinc2,??_TCPGetArray
 13516  01671A  CFDD F12B          	movff	postdec2,??_TCPGetArray+1
 13517  01671E  0101               	movlb	1	; () banked
 13518  016720  5128               	movf	TCPGetArray@len& (0+255),w,b
 13519  016722  0101               	movlb	1	; () banked
 13520  016724  272A               	addwf	??_TCPGetArray& (0+255),f,b
 13521  016726  0101               	movlb	1	; () banked
 13522  016728  5129               	movf	(TCPGetArray@len+1)& (0+255),w,b
 13523  01672A  0101               	movlb	1	; () banked
 13524  01672C  232B               	addwfc	(??_TCPGetArray+1)& (0+255),f,b
 13525  01672E  0101               	movlb	1	; () banked
 13526  016730  512A               	movf	??_TCPGetArray& (0+255),w,b
 13527  016732  0101               	movlb	1	; () banked
 13528  016734  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 13529  016736  0101               	movlb	1	; () banked
 13530  016738  512B               	movf	(??_TCPGetArray+1)& (0+255),w,b
 13531  01673A  0101               	movlb	1	; () banked
 13532  01673C  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 13533  01673E  B0D8               	btfsc	status,0,c
 13534  016740  D04A               	goto	l14584
 13535                           
 13536                           ; BSR set to: 1
 13537                           ;tcp.c: 1679: {
 13538                           ;tcp.c: 1680: RightLen = MyTCBStub.bufferEnd - MyTCBStub.rxTail + 1;
 13539  016742  0101               	movlb	1	; () banked
 13540  016744  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 13541  016748  CFDE F12A          	movff	postinc2,??_TCPGetArray
 13542  01674C  CFDD F12B          	movff	postdec2,??_TCPGetArray+1
 13543  016750  0101               	movlb	1	; () banked
 13544  016752  1F2A               	comf	??_TCPGetArray& (0+255),f,b
 13545  016754  1F2B               	comf	(??_TCPGetArray+1)& (0+255),f,b
 13546  016756  4B2A               	infsnz	??_TCPGetArray& (0+255),f,b
 13547  016758  2B2B               	incf	(??_TCPGetArray+1)& (0+255),f,b
 13548  01675A  0101               	movlb	1	; () banked
 13549  01675C  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 13550  01675E  0101               	movlb	1	; () banked
 13551  016760  272A               	addwf	??_TCPGetArray& (0+255),f,b
 13552  016762  0101               	movlb	1	; () banked
 13553  016764  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 13554  016766  0101               	movlb	1	; () banked
 13555  016768  232B               	addwfc	(??_TCPGetArray+1)& (0+255),f,b
 13556  01676A  0E01               	movlw	1
 13557  01676C  0101               	movlb	1	; () banked
 13558  01676E  252A               	addwf	??_TCPGetArray& (0+255),w,b
 13559  016770  0101               	movlb	1	; () banked
 13560  016772  6F31               	movwf	TCPGetArray@RightLen& (0+255),b
 13561  016774  0E00               	movlw	0
 13562  016776  0101               	movlb	1	; () banked
 13563  016778  212B               	addwfc	(??_TCPGetArray+1)& (0+255),w,b
 13564  01677A  0101               	movlb	1	; () banked
 13565  01677C  6F32               	movwf	(TCPGetArray@RightLen+1)& (0+255),b
 13566                           
 13567                           ; BSR set to: 1
 13568                           ;tcp.c: 1681: if(buffer)
 13569  01677E  0101               	movlb	1	; () banked
 13570  016780  5127               	movf	(TCPGetArray@buffer+1)& (0+255),w,b
 13571  016782  1126               	iorwf	TCPGetArray@buffer& (0+255),w,b
 13572  016784  B4D8               	btfsc	status,2,c
 13573  016786  D01B               	goto	l14580
 13574                           
 13575                           ; BSR set to: 1
 13576                           ;tcp.c: 1682: {
 13577                           ;tcp.c: 1683: TCPRAMCopy((unsigned short)buffer, 1u, MyTCBStub.rxTail, MyTCBStub.vMemory
      +                          Medium, RightLen);
 13578  016788  C126  F11E         	movff	TCPGetArray@buffer,TCPRAMCopy@ptrDest
 13579  01678C  C127  F11F         	movff	TCPGetArray@buffer+1,TCPRAMCopy@ptrDest+1
 13580  016790  0E01               	movlw	1
 13581  016792  0101               	movlb	1	; () banked
 13582  016794  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 13583  016796  C1EC  F121         	movff	_MyTCBStub+12,TCPRAMCopy@ptrSource
 13584  01679A  C1ED  F122         	movff	_MyTCBStub+13,TCPRAMCopy@ptrSource+1
 13585  01679E  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 13586  0167A2  C131  F124         	movff	TCPGetArray@RightLen,TCPRAMCopy@wLength
 13587  0167A6  C132  F125         	movff	TCPGetArray@RightLen+1,TCPRAMCopy@wLength+1
 13588  0167AA  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 13589                           
 13590                           ;tcp.c: 1684: buffer += RightLen;
 13591  0167AE  0101               	movlb	1	; () banked
 13592  0167B0  5131               	movf	TCPGetArray@RightLen& (0+255),w,b
 13593  0167B2  0101               	movlb	1	; () banked
 13594  0167B4  2726               	addwf	TCPGetArray@buffer& (0+255),f,b
 13595  0167B6  0101               	movlb	1	; () banked
 13596  0167B8  5132               	movf	(TCPGetArray@RightLen+1)& (0+255),w,b
 13597  0167BA  0101               	movlb	1	; () banked
 13598  0167BC  2327               	addwfc	(TCPGetArray@buffer+1)& (0+255),f,b
 13599  0167BE                     l14580:
 13600                           
 13601                           ; BSR set to: 1
 13602                           ;tcp.c: 1685: }
 13603                           ;tcp.c: 1686: len -= RightLen;
 13604  0167BE  0101               	movlb	1	; () banked
 13605  0167C0  5131               	movf	TCPGetArray@RightLen& (0+255),w,b
 13606  0167C2  0101               	movlb	1	; () banked
 13607  0167C4  5F28               	subwf	TCPGetArray@len& (0+255),f,b
 13608  0167C6  0101               	movlb	1	; () banked
 13609  0167C8  5132               	movf	(TCPGetArray@RightLen+1)& (0+255),w,b
 13610  0167CA  0101               	movlb	1	; () banked
 13611  0167CC  5B29               	subwfb	(TCPGetArray@len+1)& (0+255),f,b
 13612                           
 13613                           ; BSR set to: 1
 13614                           ;tcp.c: 1687: MyTCBStub.rxTail = MyTCBStub.bufferRxStart;
 13615  0167CE  C1E2  F1EC         	movff	_MyTCBStub+2,_MyTCBStub+12
 13616  0167D2  C1E3  F1ED         	movff	_MyTCBStub+3,_MyTCBStub+13
 13617  0167D6                     l14584:
 13618                           
 13619                           ; BSR set to: 1
 13620                           ;tcp.c: 1688: }
 13621                           ;tcp.c: 1690: if(buffer)
 13622  0167D6  0101               	movlb	1	; () banked
 13623  0167D8  5127               	movf	(TCPGetArray@buffer+1)& (0+255),w,b
 13624  0167DA  1126               	iorwf	TCPGetArray@buffer& (0+255),w,b
 13625  0167DC  B4D8               	btfsc	status,2,c
 13626  0167DE  D013               	goto	l14588
 13627                           
 13628                           ; BSR set to: 1
 13629                           ;tcp.c: 1691: TCPRAMCopy((unsigned short)buffer, 1u, MyTCBStub.rxTail, MyTCBStub.vMemory
      +                          Medium, len);
 13630  0167E0  C126  F11E         	movff	TCPGetArray@buffer,TCPRAMCopy@ptrDest
 13631  0167E4  C127  F11F         	movff	TCPGetArray@buffer+1,TCPRAMCopy@ptrDest+1
 13632  0167E8  0E01               	movlw	1
 13633  0167EA  0101               	movlb	1	; () banked
 13634  0167EC  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 13635  0167EE  C1EC  F121         	movff	_MyTCBStub+12,TCPRAMCopy@ptrSource
 13636  0167F2  C1ED  F122         	movff	_MyTCBStub+13,TCPRAMCopy@ptrSource+1
 13637  0167F6  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 13638  0167FA  C128  F124         	movff	TCPGetArray@len,TCPRAMCopy@wLength
 13639  0167FE  C129  F125         	movff	TCPGetArray@len+1,TCPRAMCopy@wLength+1
 13640  016802  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 13641  016806                     l14588:
 13642                           
 13643                           ;tcp.c: 1692: MyTCBStub.rxTail += len;
 13644  016806  0101               	movlb	1	; () banked
 13645  016808  5128               	movf	TCPGetArray@len& (0+255),w,b
 13646  01680A  0101               	movlb	1	; () banked
 13647  01680C  27EC               	addwf	(_MyTCBStub+12)& (0+255),f,b
 13648  01680E  0101               	movlb	1	; () banked
 13649  016810  5129               	movf	(TCPGetArray@len+1)& (0+255),w,b
 13650  016812  0101               	movlb	1	; () banked
 13651  016814  23ED               	addwfc	(_MyTCBStub+13)& (0+255),f,b
 13652                           
 13653                           ; BSR set to: 1
 13654                           ;tcp.c: 1693: len += RightLen;
 13655  016816  0101               	movlb	1	; () banked
 13656  016818  5131               	movf	TCPGetArray@RightLen& (0+255),w,b
 13657  01681A  0101               	movlb	1	; () banked
 13658  01681C  2728               	addwf	TCPGetArray@len& (0+255),f,b
 13659  01681E  0101               	movlb	1	; () banked
 13660  016820  5132               	movf	(TCPGetArray@RightLen+1)& (0+255),w,b
 13661  016822  0101               	movlb	1	; () banked
 13662  016824  2329               	addwfc	(TCPGetArray@len+1)& (0+255),f,b
 13663                           
 13664                           ; BSR set to: 1
 13665                           ;tcp.c: 1696: if(wGetReadyCount - len <= len)
 13666  016826  0101               	movlb	1	; () banked
 13667  016828  C128  F12A         	movff	TCPGetArray@len,??_TCPGetArray
 13668  01682C  0101               	movlb	1	; () banked
 13669  01682E  C129  F12B         	movff	TCPGetArray@len+1,??_TCPGetArray+1
 13670  016832  0101               	movlb	1	; () banked
 13671  016834  1F2A               	comf	??_TCPGetArray& (0+255),f,b
 13672  016836  1F2B               	comf	(??_TCPGetArray+1)& (0+255),f,b
 13673  016838  4B2A               	infsnz	??_TCPGetArray& (0+255),f,b
 13674  01683A  2B2B               	incf	(??_TCPGetArray+1)& (0+255),f,b
 13675  01683C  0101               	movlb	1	; () banked
 13676  01683E  512F               	movf	TCPGetArray@wGetReadyCount& (0+255),w,b
 13677  016840  0101               	movlb	1	; () banked
 13678  016842  272A               	addwf	??_TCPGetArray& (0+255),f,b
 13679  016844  0101               	movlb	1	; () banked
 13680  016846  5130               	movf	(TCPGetArray@wGetReadyCount+1)& (0+255),w,b
 13681  016848  0101               	movlb	1	; () banked
 13682  01684A  232B               	addwfc	(??_TCPGetArray+1)& (0+255),f,b
 13683  01684C  0101               	movlb	1	; () banked
 13684  01684E  512A               	movf	??_TCPGetArray& (0+255),w,b
 13685  016850  0101               	movlb	1	; () banked
 13686  016852  5D28               	subwf	TCPGetArray@len& (0+255),w,b
 13687  016854  0101               	movlb	1	; () banked
 13688  016856  512B               	movf	(??_TCPGetArray+1)& (0+255),w,b
 13689  016858  0101               	movlb	1	; () banked
 13690  01685A  5929               	subwfb	(TCPGetArray@len+1)& (0+255),w,b
 13691  01685C  A0D8               	btfss	status,0,c
 13692  01685E  D003               	goto	l1031
 13693                           
 13694                           ; BSR set to: 1
 13695                           ;tcp.c: 1697: {
 13696                           ;tcp.c: 1698: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 13697  016860  0101               	movlb	1	; () banked
 13698  016862  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 13699                           
 13700                           ;tcp.c: 1699: }
 13701  016864  0012               	return	
 13702  016866                     l1031:
 13703                           
 13704                           ; BSR set to: 1
 13705                           ;tcp.c: 1700: else if(!MyTCBStub.Flags.bTimer2Enabled)
 13706  016866  0101               	movlb	1	; () banked
 13707  016868  BBF7               	btfsc	(_MyTCBStub+23)& (0+255),5,b
 13708  01686A  0012               	return	
 13709                           
 13710                           ; BSR set to: 1
 13711                           ;tcp.c: 1703: {
 13712                           ;tcp.c: 1704: MyTCBStub.Flags.bTimer2Enabled = 1;
 13713  01686C  0101               	movlb	1	; () banked
 13714  01686E  8BF7               	bsf	(_MyTCBStub+23)& (0+255),5,b
 13715                           
 13716                           ; BSR set to: 1
 13717                           ;tcp.c: 1705: MyTCBStub.eventTime2 = (uint16_t)TickGetDiv256() + ((((((40000000ul)/4)+12
      +                          8ull)/256ull))/5ull)/256ull;
 13718  016870  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 13719  016874  C100  F12A         	movff	?_TickGetDiv256,??_TCPGetArray
 13720  016878  C101  F12B         	movff	?_TickGetDiv256+1,??_TCPGetArray+1
 13721  01687C  C102  F12C         	movff	?_TickGetDiv256+2,??_TCPGetArray+2
 13722  016880  C103  F12D         	movff	?_TickGetDiv256+3,??_TCPGetArray+3
 13723  016884  0E1E               	movlw	30
 13724  016886  0101               	movlb	1	; () banked
 13725  016888  252A               	addwf	??_TCPGetArray& (0+255),w,b
 13726  01688A  0101               	movlb	1	; () banked
 13727  01688C  6FF2               	movwf	(_MyTCBStub+18)& (0+255),b
 13728  01688E  0E00               	movlw	0
 13729  016890  0101               	movlb	1	; () banked
 13730  016892  212B               	addwfc	(??_TCPGetArray+1)& (0+255),w,b
 13731  016894  0101               	movlb	1	; () banked
 13732  016896  6FF3               	movwf	(_MyTCBStub+19)& (0+255),b
 13733  016898  0012               	return	
 13734  01689A                     __end_of_TCPGetArray:
 13735                           	opt stack 0
 13736                           tblptru	equ	0xFF8
 13737                           tblptrh	equ	0xFF7
 13738                           tblptrl	equ	0xFF6
 13739                           tablat	equ	0xFF5
 13740                           intcon	equ	0xFF2
 13741                           postinc0	equ	0xFEE
 13742                           wreg	equ	0xFE8
 13743                           indf1	equ	0xFE7
 13744                           postinc1	equ	0xFE6
 13745                           postdec1	equ	0xFE5
 13746                           fsr1h	equ	0xFE2
 13747                           fsr1l	equ	0xFE1
 13748                           indf2	equ	0xFDF
 13749                           postinc2	equ	0xFDE
 13750                           postdec2	equ	0xFDD
 13751                           fsr2h	equ	0xFDA
 13752                           fsr2l	equ	0xFD9
 13753                           status	equ	0xFD8
 13754                           
 13755 ;; *************** function _TCPIsGetReady *****************
 13756 ;; Defined at:
 13757 ;;		line 1573 in file "../tcpip/tcp.c"
 13758 ;; Parameters:    Size  Location     Type
 13759 ;;  hTCP            1    wreg     unsigned char 
 13760 ;; Auto vars:     Size  Location     Type
 13761 ;;  hTCP            1   37[BANK1 ] unsigned char 
 13762 ;; Return value:  Size  Location     Type
 13763 ;;                  2   33[BANK1 ] unsigned int 
 13764 ;; Registers used:
 13765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13766 ;; Tracked objects:
 13767 ;;		On entry : 0/0
 13768 ;;		On exit  : 0/0
 13769 ;;		Unchanged: 0/0
 13770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 13771 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;Total ram usage:        5 bytes
 13776 ;; Hardware stack levels used:    1
 13777 ;; Hardware stack levels required when called:   12
 13778 ;; This function calls:
 13779 ;;		_SyncTCBStub
 13780 ;; This function is called by:
 13781 ;;		_TCPGetArray
 13782 ;;		_TCPServer
 13783 ;;		_TCPDiscard
 13784 ;;		_TCPGet
 13785 ;;		_TCPGetRxFIFOFree
 13786 ;;		_TCPPeekArray
 13787 ;;		_TCPFindArrayEx
 13788 ;;		_TCPFindROMArrayEx
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           	psect	text8
 13793  019A46                     __ptext8:
 13794                           	opt stack 0
 13795  019A46                     _TCPIsGetReady:
 13796                           	opt stack 17
 13797                           
 13798                           ; BSR set to: 1
 13799                           ;incstack = 0
 13800                           ;TCPIsGetReady@hTCP stored from wreg
 13801  019A46  0101               	movlb	1	; () banked
 13802  019A48  6F25               	movwf	TCPIsGetReady@hTCP& (0+255),b
 13803                           
 13804                           ; BSR set to: 1
 13805                           ;tcp.c: 1575: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 13806  019A4A  0101               	movlb	1	; () banked
 13807  019A4C  5125               	movf	TCPIsGetReady@hTCP& (0+255),w,b
 13808  019A4E  B4D8               	btfsc	status,2,c
 13809  019A50  D007               	goto	l13120
 13810                           
 13811                           ; BSR set to: 1
 13812                           ;tcp.c: 1576: {
 13813                           ;tcp.c: 1577: return 0;
 13814  019A52  0E00               	movlw	0
 13815  019A54  0101               	movlb	1	; () banked
 13816  019A56  6F22               	movwf	(?_TCPIsGetReady+1)& (0+255),b
 13817  019A58  0E00               	movlw	0
 13818  019A5A  0101               	movlb	1	; () banked
 13819  019A5C  6F21               	movwf	?_TCPIsGetReady& (0+255),b
 13820  019A5E  0012               	return	
 13821  019A60                     l13120:
 13822                           
 13823                           ; BSR set to: 1
 13824                           ;tcp.c: 1578: }
 13825                           ;tcp.c: 1580: SyncTCBStub(hTCP);
 13826  019A60  0101               	movlb	1	; () banked
 13827  019A62  5125               	movf	TCPIsGetReady@hTCP& (0+255),w,b
 13828  019A64  EC30  F0D0         	call	_SyncTCBStub
 13829                           
 13830                           ;tcp.c: 1582: if(MyTCBStub.rxHead >= MyTCBStub.rxTail)
 13831  019A68  0101               	movlb	1	; () banked
 13832  019A6A  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 13833  019A6E  0101               	movlb	1	; () banked
 13834  019A70  EE11  F0EA         	lfsr	1,_MyTCBStub+10
 13835  019A74  52E6               	movf	postinc1,f,c
 13836  019A76  52DE               	movf	postinc2,f,c
 13837  019A78  50DD               	movf	postdec2,w,c
 13838  019A7A  5CE5               	subwf	postdec1,w,c
 13839  019A7C  E102               	bnz	u14415
 13840  019A7E  50DF               	movf	indf2,w,c
 13841  019A80  5CE7               	subwf	indf1,w,c
 13842  019A82                     u14415:
 13843  019A82  A0D8               	btfss	status,0,c
 13844  019A84  D019               	goto	l13130
 13845                           
 13846                           ; BSR set to: 1
 13847                           ;tcp.c: 1583: return MyTCBStub.rxHead - MyTCBStub.rxTail;
 13848  019A86  0101               	movlb	1	; () banked
 13849  019A88  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 13850  019A8C  CFDE F123          	movff	postinc2,??_TCPIsGetReady
 13851  019A90  CFDD F124          	movff	postdec2,??_TCPIsGetReady+1
 13852  019A94  0101               	movlb	1	; () banked
 13853  019A96  1F23               	comf	??_TCPIsGetReady& (0+255),f,b
 13854  019A98  1F24               	comf	(??_TCPIsGetReady+1)& (0+255),f,b
 13855  019A9A  4B23               	infsnz	??_TCPIsGetReady& (0+255),f,b
 13856  019A9C  2B24               	incf	(??_TCPIsGetReady+1)& (0+255),f,b
 13857  019A9E  0101               	movlb	1	; () banked
 13858  019AA0  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 13859  019AA2  0101               	movlb	1	; () banked
 13860  019AA4  2523               	addwf	??_TCPIsGetReady& (0+255),w,b
 13861  019AA6  0101               	movlb	1	; () banked
 13862  019AA8  6F21               	movwf	?_TCPIsGetReady& (0+255),b
 13863  019AAA  0101               	movlb	1	; () banked
 13864  019AAC  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 13865  019AAE  0101               	movlb	1	; () banked
 13866  019AB0  2124               	addwfc	(??_TCPIsGetReady+1)& (0+255),w,b
 13867  019AB2  0101               	movlb	1	; () banked
 13868  019AB4  6F22               	movwf	(?_TCPIsGetReady+1)& (0+255),b
 13869  019AB6  0012               	return	
 13870  019AB8                     l13130:
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;tcp.c: 1584: else
 13874                           ;tcp.c: 1585: return (MyTCBStub.bufferEnd - MyTCBStub.rxTail + 1) + (MyTCBStub.rxHead - 
      +                          MyTCBStub.bufferRxStart);
 13875  019AB8  0101               	movlb	1	; () banked
 13876  019ABA  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 13877  019ABE  CFDE F123          	movff	postinc2,??_TCPIsGetReady
 13878  019AC2  CFDD F124          	movff	postdec2,??_TCPIsGetReady+1
 13879  019AC6  0101               	movlb	1	; () banked
 13880  019AC8  51EC               	movf	(_MyTCBStub+12)& (0+255),w,b
 13881  019ACA  0101               	movlb	1	; () banked
 13882  019ACC  2723               	addwf	??_TCPIsGetReady& (0+255),f,b
 13883  019ACE  0101               	movlb	1	; () banked
 13884  019AD0  51ED               	movf	(_MyTCBStub+13)& (0+255),w,b
 13885  019AD2  0101               	movlb	1	; () banked
 13886  019AD4  2324               	addwfc	(??_TCPIsGetReady+1)& (0+255),f,b
 13887  019AD6  0101               	movlb	1	; () banked
 13888  019AD8  1F23               	comf	??_TCPIsGetReady& (0+255),f,b
 13889  019ADA  1F24               	comf	(??_TCPIsGetReady+1)& (0+255),f,b
 13890  019ADC  4B23               	infsnz	??_TCPIsGetReady& (0+255),f,b
 13891  019ADE  2B24               	incf	(??_TCPIsGetReady+1)& (0+255),f,b
 13892  019AE0  0101               	movlb	1	; () banked
 13893  019AE2  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 13894  019AE4  0101               	movlb	1	; () banked
 13895  019AE6  2723               	addwf	??_TCPIsGetReady& (0+255),f,b
 13896  019AE8  0101               	movlb	1	; () banked
 13897  019AEA  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 13898  019AEC  0101               	movlb	1	; () banked
 13899  019AEE  2324               	addwfc	(??_TCPIsGetReady+1)& (0+255),f,b
 13900  019AF0  0101               	movlb	1	; () banked
 13901  019AF2  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 13902  019AF4  0101               	movlb	1	; () banked
 13903  019AF6  2723               	addwf	??_TCPIsGetReady& (0+255),f,b
 13904  019AF8  0101               	movlb	1	; () banked
 13905  019AFA  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 13906  019AFC  0101               	movlb	1	; () banked
 13907  019AFE  2324               	addwfc	(??_TCPIsGetReady+1)& (0+255),f,b
 13908  019B00  0E01               	movlw	1
 13909  019B02  0101               	movlb	1	; () banked
 13910  019B04  2523               	addwf	??_TCPIsGetReady& (0+255),w,b
 13911  019B06  0101               	movlb	1	; () banked
 13912  019B08  6F21               	movwf	?_TCPIsGetReady& (0+255),b
 13913  019B0A  0E00               	movlw	0
 13914  019B0C  0101               	movlb	1	; () banked
 13915  019B0E  2124               	addwfc	(??_TCPIsGetReady+1)& (0+255),w,b
 13916  019B10  0101               	movlb	1	; () banked
 13917  019B12  6F22               	movwf	(?_TCPIsGetReady+1)& (0+255),b
 13918  019B14  0012               	return	
 13919  019B16                     __end_of_TCPIsGetReady:
 13920                           	opt stack 0
 13921                           tblptru	equ	0xFF8
 13922                           tblptrh	equ	0xFF7
 13923                           tblptrl	equ	0xFF6
 13924                           tablat	equ	0xFF5
 13925                           intcon	equ	0xFF2
 13926                           postinc0	equ	0xFEE
 13927                           wreg	equ	0xFE8
 13928                           indf1	equ	0xFE7
 13929                           postinc1	equ	0xFE6
 13930                           postdec1	equ	0xFE5
 13931                           fsr1h	equ	0xFE2
 13932                           fsr1l	equ	0xFE1
 13933                           indf2	equ	0xFDF
 13934                           postinc2	equ	0xFDE
 13935                           postdec2	equ	0xFDD
 13936                           fsr2h	equ	0xFDA
 13937                           fsr2l	equ	0xFD9
 13938                           status	equ	0xFD8
 13939                           
 13940 ;; *************** function _TCPClose *****************
 13941 ;; Defined at:
 13942 ;;		line 919 in file "../tcpip/tcp.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;  hTCP            1    wreg     unsigned char 
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;  hTCP            1   87[BANK1 ] unsigned char 
 13947 ;; Return value:  Size  Location     Type
 13948 ;;		None               void
 13949 ;; Registers used:
 13950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13957 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13959 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13960 ;;Total ram usage:        1 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:   16
 13963 ;; This function calls:
 13964 ;;		_SyncTCBStub
 13965 ;;		_TCPDisconnect
 13966 ;; This function is called by:
 13967 ;;		_TCPServer
 13968 ;; This function uses a non-reentrant model
 13969 ;;
 13970                           
 13971                           	psect	text9
 13972  01B808                     __ptext9:
 13973                           	opt stack 0
 13974  01B808                     _TCPClose:
 13975                           	opt stack 13
 13976                           
 13977                           ; BSR set to: 1
 13978                           ;incstack = 0
 13979                           ;TCPClose@hTCP stored from wreg
 13980  01B808  0101               	movlb	1	; () banked
 13981  01B80A  6F57               	movwf	TCPClose@hTCP& (0+255),b
 13982                           
 13983                           ; BSR set to: 1
 13984                           ;tcp.c: 921: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 13985  01B80C  0101               	movlb	1	; () banked
 13986  01B80E  5157               	movf	TCPClose@hTCP& (0+255),w,b
 13987  01B810  A4D8               	btfss	status,2,c
 13988  01B812  0012               	return	
 13989                           
 13990                           ; BSR set to: 1
 13991                           ;tcp.c: 924: }
 13992                           ;tcp.c: 926: SyncTCBStub(hTCP);
 13993                           
 13994                           ; BSR set to: 1
 13995                           
 13996                           ; BSR set to: 1
 13997                           ;tcp.c: 922: {
 13998                           ;tcp.c: 923: return;
 13999  01B814  0101               	movlb	1	; () banked
 14000  01B816  5157               	movf	TCPClose@hTCP& (0+255),w,b
 14001  01B818  EC30  F0D0         	call	_SyncTCBStub
 14002                           
 14003                           ;tcp.c: 927: MyTCBStub.Flags.bServer = 0;
 14004  01B81C  0101               	movlb	1	; () banked
 14005  01B81E  97F7               	bcf	(_MyTCBStub+23)& (0+255),3,b
 14006                           
 14007                           ; BSR set to: 1
 14008                           ;tcp.c: 928: TCPDisconnect(hTCP);
 14009  01B820  0101               	movlb	1	; () banked
 14010  01B822  5157               	movf	TCPClose@hTCP& (0+255),w,b
 14011  01B824  EC68  F0C6         	call	_TCPDisconnect
 14012  01B828  0012               	return	
 14013  01B82A                     __end_of_TCPClose:
 14014                           	opt stack 0
 14015                           tblptru	equ	0xFF8
 14016                           tblptrh	equ	0xFF7
 14017                           tblptrl	equ	0xFF6
 14018                           tablat	equ	0xFF5
 14019                           intcon	equ	0xFF2
 14020                           postinc0	equ	0xFEE
 14021                           wreg	equ	0xFE8
 14022                           indf1	equ	0xFE7
 14023                           postinc1	equ	0xFE6
 14024                           postdec1	equ	0xFE5
 14025                           fsr1h	equ	0xFE2
 14026                           fsr1l	equ	0xFE1
 14027                           indf2	equ	0xFDF
 14028                           postinc2	equ	0xFDE
 14029                           postdec2	equ	0xFDD
 14030                           fsr2h	equ	0xFDA
 14031                           fsr2l	equ	0xFD9
 14032                           status	equ	0xFD8
 14033                           
 14034 ;; *************** function _SaveToFlash *****************
 14035 ;; Defined at:
 14036 ;;		line 83 in file "Persistence.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;		None
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;  emptyAddr       4   59[BANK1 ] unsigned long 
 14041 ;;  addr            4   52[BANK1 ] unsigned long 
 14042 ;;  success         1   58[BANK1 ] unsigned char 
 14043 ;;  cmp             2   56[BANK1 ] int 
 14044 ;; Return value:  Size  Location     Type
 14045 ;;		None               void
 14046 ;; Registers used:
 14047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14048 ;; Tracked objects:
 14049 ;;		On entry : 0/0
 14050 ;;		On exit  : 0/0
 14051 ;;		Unchanged: 0/0
 14052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 14053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14054 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14055 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14056 ;;      Totals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14057 ;;Total ram usage:       23 bytes
 14058 ;; Hardware stack levels used:    1
 14059 ;; Hardware stack levels required when called:   15
 14060 ;; This function calls:
 14061 ;;		_EraseFlash
 14062 ;;		_FindEmpty
 14063 ;;		_GetCheckSum
 14064 ;;		_ReadFlash
 14065 ;;		_RefreshLine1
 14066 ;;		_RefreshLine1Ex
 14067 ;;		_WriteBlockFlash
 14068 ;;		_memcmp
 14069 ;; This function is called by:
 14070 ;;		_TCPServer
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text10
 14075  014A30                     __ptext10:
 14076                           	opt stack 0
 14077  014A30                     _SaveToFlash:
 14078                           	opt stack 14
 14079                           
 14080                           ;Persistence.c: 85: s_dacSettingsOriginal.Sequence = s_dacSettings.Sequence;
 14081                           
 14082                           ;incstack = 0
 14083  014A30  C2D3  F300         	movff	_s_dacSettings,_s_dacSettingsOriginal
 14084                           
 14085                           ;Persistence.c: 86: int cmp = memcmp(&s_dacSettingsOriginal, &s_dacSettings, sizeof(s_da
      +                          cSettings) - 1);
 14086  014A34  0103               	movlb	3	; () banked
 14087  014A36  0E03               	movlw	high _s_dacSettingsOriginal
 14088  014A38  0101               	movlb	1	; () banked
 14089  014A3A  6F01               	movwf	(memcmp@s1+1)& (0+255),b
 14090  014A3C  0103               	movlb	3	; () banked
 14091  014A3E  0E00               	movlw	low _s_dacSettingsOriginal
 14092  014A40  0101               	movlb	1	; () banked
 14093  014A42  6F00               	movwf	memcmp@s1& (0+255),b
 14094  014A44  0102               	movlb	2	; () banked
 14095  014A46  0E02               	movlw	high _s_dacSettings
 14096  014A48  0101               	movlb	1	; () banked
 14097  014A4A  6F03               	movwf	(memcmp@s2+1)& (0+255),b
 14098  014A4C  0102               	movlb	2	; () banked
 14099  014A4E  0ED3               	movlw	low _s_dacSettings
 14100  014A50  0101               	movlb	1	; () banked
 14101  014A52  6F02               	movwf	memcmp@s2& (0+255),b
 14102  014A54  0E00               	movlw	0
 14103  014A56  0101               	movlb	1	; () banked
 14104  014A58  6F05               	movwf	(memcmp@n+1)& (0+255),b
 14105  014A5A  0E13               	movlw	19
 14106  014A5C  0101               	movlb	1	; () banked
 14107  014A5E  6F04               	movwf	memcmp@n& (0+255),b
 14108  014A60  EC55  F0CE         	call	_memcmp	;wreg free
 14109  014A64  0101               	movlb	1	; () banked
 14110  014A66  C100  F138         	movff	?_memcmp,SaveToFlash@cmp
 14111  014A6A  0101               	movlb	1	; () banked
 14112  014A6C  C101  F139         	movff	?_memcmp+1,SaveToFlash@cmp+1
 14113                           
 14114                           ; BSR set to: 1
 14115                           ;Persistence.c: 87: if (cmp)
 14116  014A70  0101               	movlb	1	; () banked
 14117  014A72  5139               	movf	(SaveToFlash@cmp+1)& (0+255),w,b
 14118  014A74  1138               	iorwf	SaveToFlash@cmp& (0+255),w,b
 14119  014A76  B4D8               	btfsc	status,2,c
 14120  014A78  D12F               	goto	l14686
 14121                           
 14122                           ; BSR set to: 1
 14123                           ;Persistence.c: 88: {
 14124                           ;Persistence.c: 89: unsigned long addr = SETTINGS_ADDR;
 14125  014A7A  0E07               	movlw	low _SETTINGS_ADDR
 14126  014A7C  6EF6               	movwf	tblptrl,c
 14127  014A7E                     	if	1	;There is more than 1 active tblptr byte
 14128  014A7E  0EFF               	movlw	high _SETTINGS_ADDR
 14129  014A80  6EF7               	movwf	tblptrh,c
 14130  014A82                     	endif
 14131  014A82                     	if	1	;There are 3 active tblptr bytes
 14132  014A82  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 14133  014A84  6EF8               	movwf	tblptru,c
 14134  014A86                     	endif
 14135  014A86  0009               	tblrd		*+
 14136  014A88  0101               	movlb	1	; () banked
 14137  014A8A  CFF5 F134          	movff	tablat,SaveToFlash@addr
 14138  014A8E  0009               	tblrd		*+
 14139  014A90  0101               	movlb	1	; () banked
 14140  014A92  CFF5 F135          	movff	tablat,SaveToFlash@addr+1
 14141  014A96  0009               	tblrd		*+
 14142  014A98  0101               	movlb	1	; () banked
 14143  014A9A  CFF5 F136          	movff	tablat,SaveToFlash@addr+2
 14144  014A9E  000A               	tblrd		*-
 14145  014AA0  0101               	movlb	1	; () banked
 14146  014AA2  CFF5 F137          	movff	tablat,SaveToFlash@addr+3
 14147                           
 14148                           ; BSR set to: 1
 14149                           ;Persistence.c: 90: uint8_t success = 0;
 14150  014AA6  0E00               	movlw	0
 14151  014AA8  0101               	movlb	1	; () banked
 14152  014AAA  6F3A               	movwf	SaveToFlash@success& (0+255),b
 14153                           
 14154                           ;Persistence.c: 91: while (!success)
 14155  014AAC  D0FF               	goto	l14680
 14156  014AAE                     l14654:
 14157                           
 14158                           ; BSR set to: 1
 14159                           ;Persistence.c: 92: {
 14160                           ;Persistence.c: 93: RefreshLine1Ex( "Preparing...    ");
 14161  014AAE  0EFF               	movlw	high STR_2
 14162  014AB0  0101               	movlb	1	; () banked
 14163  014AB2  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 14164  014AB4  0ED7               	movlw	low STR_2
 14165  014AB6  0101               	movlb	1	; () banked
 14166  014AB8  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 14167  014ABA  ECCB  F0DC         	call	_RefreshLine1Ex	;wreg free
 14168                           
 14169                           ;Persistence.c: 94: unsigned long emptyAddr = FindEmpty(addr);
 14170  014ABE  C134  F110         	movff	SaveToFlash@addr,FindEmpty@startAddr
 14171  014AC2  C135  F111         	movff	SaveToFlash@addr+1,FindEmpty@startAddr+1
 14172  014AC6  C136  F112         	movff	SaveToFlash@addr+2,FindEmpty@startAddr+2
 14173  014ACA  C137  F113         	movff	SaveToFlash@addr+3,FindEmpty@startAddr+3
 14174  014ACE  EC22  F0BA         	call	_FindEmpty	;wreg free
 14175  014AD2  C110  F13B         	movff	?_FindEmpty,SaveToFlash@emptyAddr
 14176  014AD6  C111  F13C         	movff	?_FindEmpty+1,SaveToFlash@emptyAddr+1
 14177  014ADA  C112  F13D         	movff	?_FindEmpty+2,SaveToFlash@emptyAddr+2
 14178  014ADE  C113  F13E         	movff	?_FindEmpty+3,SaveToFlash@emptyAddr+3
 14179                           
 14180                           ;Persistence.c: 95: if (emptyAddr)
 14181  014AE2  0101               	movlb	1	; () banked
 14182  014AE4  513E               	movf	(SaveToFlash@emptyAddr+3)& (0+255),w,b
 14183  014AE6  113B               	iorwf	SaveToFlash@emptyAddr& (0+255),w,b
 14184  014AE8  113C               	iorwf	(SaveToFlash@emptyAddr+1)& (0+255),w,b
 14185  014AEA  113D               	iorwf	(SaveToFlash@emptyAddr+2)& (0+255),w,b
 14186  014AEC  B4D8               	btfsc	status,2,c
 14187  014AEE  D06C               	goto	l14674
 14188                           
 14189                           ; BSR set to: 1
 14190                           ;Persistence.c: 96: {
 14191                           ;Persistence.c: 97: RefreshLine1Ex("Writing...      ");
 14192  014AF0  0EFF               	movlw	high STR_3
 14193  014AF2  0101               	movlb	1	; () banked
 14194  014AF4  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 14195  014AF6  0EC6               	movlw	low STR_3
 14196  014AF8  0101               	movlb	1	; () banked
 14197  014AFA  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 14198  014AFC  ECCB  F0DC         	call	_RefreshLine1Ex	;wreg free
 14199                           
 14200                           ;Persistence.c: 98: s_dacSettings.Sequence --;
 14201  014B00  0102               	movlb	2	; () banked
 14202  014B02  07D3               	decf	_s_dacSettings& (0+255),f,b
 14203                           
 14204                           ; BSR set to: 2
 14205                           ;Persistence.c: 99: s_dacSettings.CheckSum = GetCheckSum((unsigned char *)&s_dacSettings
      +                          , sizeof(s_dacSettings) - 1);
 14206  014B04  0102               	movlb	2	; () banked
 14207  014B06  0E02               	movlw	high _s_dacSettings
 14208  014B08  0101               	movlb	1	; () banked
 14209  014B0A  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 14210  014B0C  0102               	movlb	2	; () banked
 14211  014B0E  0ED3               	movlw	low _s_dacSettings
 14212  014B10  0101               	movlb	1	; () banked
 14213  014B12  6F00               	movwf	GetCheckSum@data& (0+255),b
 14214  014B14  0E13               	movlw	19
 14215  014B16  0101               	movlb	1	; () banked
 14216  014B18  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 14217  014B1A  EC60  F0D9         	call	_GetCheckSum	;wreg free
 14218  014B1E  0102               	movlb	2	; () banked
 14219  014B20  6FE6               	movwf	(_s_dacSettings+19)& (0+255),b
 14220                           
 14221                           ; BSR set to: 2
 14222                           ;Persistence.c: 100: WriteBlockFlash(emptyAddr, 1, (unsigned char *)&s_dacSettings);
 14223  014B22  C13B  F100         	movff	SaveToFlash@emptyAddr,WriteBlockFlash@startaddr
 14224  014B26  C13C  F101         	movff	SaveToFlash@emptyAddr+1,WriteBlockFlash@startaddr+1
 14225  014B2A  C13D  F102         	movff	SaveToFlash@emptyAddr+2,WriteBlockFlash@startaddr+2
 14226  014B2E  C13E  F103         	movff	SaveToFlash@emptyAddr+3,WriteBlockFlash@startaddr+3
 14227  014B32  0E01               	movlw	1
 14228  014B34  0101               	movlb	1	; () banked
 14229  014B36  6F04               	movwf	WriteBlockFlash@num_blocks& (0+255),b
 14230  014B38  0102               	movlb	2	; () banked
 14231  014B3A  0E02               	movlw	high _s_dacSettings
 14232  014B3C  0101               	movlb	1	; () banked
 14233  014B3E  6F06               	movwf	(WriteBlockFlash@flash_array+1)& (0+255),b
 14234  014B40  0102               	movlb	2	; () banked
 14235  014B42  0ED3               	movlw	low _s_dacSettings
 14236  014B44  0101               	movlb	1	; () banked
 14237  014B46  6F05               	movwf	WriteBlockFlash@flash_array& (0+255),b
 14238  014B48  EC8E  F0C1         	call	_WriteBlockFlash	;wreg free
 14239                           
 14240                           ;Persistence.c: 102: ReadFlash(emptyAddr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_
      +                          dacSettingsTmp);
 14241  014B4C  C13B  F100         	movff	SaveToFlash@emptyAddr,ReadFlash@startaddr
 14242  014B50  C13C  F101         	movff	SaveToFlash@emptyAddr+1,ReadFlash@startaddr+1
 14243  014B54  C13D  F102         	movff	SaveToFlash@emptyAddr+2,ReadFlash@startaddr+2
 14244  014B58  C13E  F103         	movff	SaveToFlash@emptyAddr+3,ReadFlash@startaddr+3
 14245  014B5C  0E00               	movlw	0
 14246  014B5E  0101               	movlb	1	; () banked
 14247  014B60  6F05               	movwf	(ReadFlash@num_bytes+1)& (0+255),b
 14248  014B62  0E14               	movlw	20
 14249  014B64  0101               	movlb	1	; () banked
 14250  014B66  6F04               	movwf	ReadFlash@num_bytes& (0+255),b
 14251  014B68  0102               	movlb	2	; () banked
 14252  014B6A  0E02               	movlw	high _s_dacSettingsTmp
 14253  014B6C  0101               	movlb	1	; () banked
 14254  014B6E  6F07               	movwf	(ReadFlash@flash_array+1)& (0+255),b
 14255  014B70  0102               	movlb	2	; () banked
 14256  014B72  0EE7               	movlw	low _s_dacSettingsTmp
 14257  014B74  0101               	movlb	1	; () banked
 14258  014B76  6F06               	movwf	ReadFlash@flash_array& (0+255),b
 14259  014B78  ECD5  F0D6         	call	_ReadFlash	;wreg free
 14260                           
 14261                           ;Persistence.c: 103: success = !memcmp(&s_dacSettingsTmp, &s_dacSettings, sizeof(s_dacSe
      +                          ttings));
 14262  014B7C  0102               	movlb	2	; () banked
 14263  014B7E  0E02               	movlw	high _s_dacSettingsTmp
 14264  014B80  0101               	movlb	1	; () banked
 14265  014B82  6F01               	movwf	(memcmp@s1+1)& (0+255),b
 14266  014B84  0102               	movlb	2	; () banked
 14267  014B86  0EE7               	movlw	low _s_dacSettingsTmp
 14268  014B88  0101               	movlb	1	; () banked
 14269  014B8A  6F00               	movwf	memcmp@s1& (0+255),b
 14270  014B8C  0102               	movlb	2	; () banked
 14271  014B8E  0E02               	movlw	high _s_dacSettings
 14272  014B90  0101               	movlb	1	; () banked
 14273  014B92  6F03               	movwf	(memcmp@s2+1)& (0+255),b
 14274  014B94  0102               	movlb	2	; () banked
 14275  014B96  0ED3               	movlw	low _s_dacSettings
 14276  014B98  0101               	movlb	1	; () banked
 14277  014B9A  6F02               	movwf	memcmp@s2& (0+255),b
 14278  014B9C  0E00               	movlw	0
 14279  014B9E  0101               	movlb	1	; () banked
 14280  014BA0  6F05               	movwf	(memcmp@n+1)& (0+255),b
 14281  014BA2  0E14               	movlw	20
 14282  014BA4  0101               	movlb	1	; () banked
 14283  014BA6  6F04               	movwf	memcmp@n& (0+255),b
 14284  014BA8  EC55  F0CE         	call	_memcmp	;wreg free
 14285  014BAC  0101               	movlb	1	; () banked
 14286  014BAE  5101               	movf	(?_memcmp+1)& (0+255),w,b
 14287  014BB0  0101               	movlb	1	; () banked
 14288  014BB2  1100               	iorwf	?_memcmp& (0+255),w,b
 14289  014BB4  A4D8               	btfss	status,2,c
 14290  014BB6  D002               	goto	u16790
 14291  014BB8  0E01               	movlw	1
 14292  014BBA  D001               	goto	u16796
 14293  014BBC                     u16790:
 14294  014BBC  0E00               	movlw	0
 14295  014BBE                     u16796:
 14296  014BBE  0101               	movlb	1	; () banked
 14297  014BC0  6F3A               	movwf	SaveToFlash@success& (0+255),b
 14298                           
 14299                           ; BSR set to: 1
 14300                           ;Persistence.c: 104: RefreshLine1();
 14301  014BC2  ECE2  F0DC         	call	_RefreshLine1	;wreg free
 14302                           
 14303                           ;Persistence.c: 105: }
 14304  014BC6  D072               	goto	l14680
 14305  014BC8                     l14674:
 14306                           
 14307                           ;Persistence.c: 106: else
 14308                           ;Persistence.c: 107: {
 14309                           ;Persistence.c: 108: RefreshLine1Ex("Erasing...      ");
 14310  014BC8  0EFF               	movlw	high STR_4
 14311  014BCA  0101               	movlb	1	; () banked
 14312  014BCC  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 14313  014BCE  0EB5               	movlw	low STR_4
 14314  014BD0  0101               	movlb	1	; () banked
 14315  014BD2  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 14316  014BD4  ECCB  F0DC         	call	_RefreshLine1Ex	;wreg free
 14317                           
 14318                           ;Persistence.c: 109: s_dacSettings.Sequence = 0xFF;
 14319  014BD8  0102               	movlb	2	; () banked
 14320  014BDA  69D3               	setf	_s_dacSettings& (0+255),b
 14321                           
 14322                           ; BSR set to: 2
 14323                           ;Persistence.c: 110: EraseFlash(SETTINGS_ADDR, SETTINGS_ADDR + SETTINGS_LEN - 1);
 14324  014BDC  0E07               	movlw	low _SETTINGS_ADDR
 14325  014BDE  6EF6               	movwf	tblptrl,c
 14326  014BE0                     	if	1	;There is more than 1 active tblptr byte
 14327  014BE0  0EFF               	movlw	high _SETTINGS_ADDR
 14328  014BE2  6EF7               	movwf	tblptrh,c
 14329  014BE4                     	endif
 14330  014BE4                     	if	1	;There are 3 active tblptr bytes
 14331  014BE4  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 14332  014BE6  6EF8               	movwf	tblptru,c
 14333  014BE8                     	endif
 14334  014BE8  0009               	tblrd		*+
 14335  014BEA  0101               	movlb	1	; () banked
 14336  014BEC  CFF5 F100          	movff	tablat,EraseFlash@startaddr
 14337  014BF0  0009               	tblrd		*+
 14338  014BF2  0101               	movlb	1	; () banked
 14339  014BF4  CFF5 F101          	movff	tablat,EraseFlash@startaddr+1
 14340  014BF8  0009               	tblrd		*+
 14341  014BFA  0101               	movlb	1	; () banked
 14342  014BFC  CFF5 F102          	movff	tablat,EraseFlash@startaddr+2
 14343  014C00  000A               	tblrd		*-
 14344  014C02  0101               	movlb	1	; () banked
 14345  014C04  CFF5 F103          	movff	tablat,EraseFlash@startaddr+3
 14346  014C08  0E0B               	movlw	low _SETTINGS_LEN
 14347  014C0A  6EF6               	movwf	tblptrl,c
 14348  014C0C                     	if	1	;There is more than 1 active tblptr byte
 14349  014C0C  0EFF               	movlw	high _SETTINGS_LEN
 14350  014C0E  6EF7               	movwf	tblptrh,c
 14351  014C10                     	endif
 14352  014C10                     	if	1	;There are 3 active tblptr bytes
 14353  014C10  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 14354  014C12  6EF8               	movwf	tblptru,c
 14355  014C14                     	endif
 14356  014C14  0009               	tblrd		*+
 14357  014C16  CFF5 F128          	movff	tablat,??_SaveToFlash
 14358  014C1A  0009               	tblrd		*+
 14359  014C1C  CFF5 F129          	movff	tablat,??_SaveToFlash+1
 14360  014C20  0009               	tblrd		*+
 14361  014C22  CFF5 F12A          	movff	tablat,??_SaveToFlash+2
 14362  014C26  0009               	tblrd		*+
 14363  014C28  CFF5 F12B          	movff	tablat,??_SaveToFlash+3
 14364  014C2C  0E07               	movlw	low _SETTINGS_ADDR
 14365  014C2E  6EF6               	movwf	tblptrl,c
 14366  014C30                     	if	1	;There is more than 1 active tblptr byte
 14367  014C30  0EFF               	movlw	high _SETTINGS_ADDR
 14368  014C32  6EF7               	movwf	tblptrh,c
 14369  014C34                     	endif
 14370  014C34                     	if	1	;There are 3 active tblptr bytes
 14371  014C34  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 14372  014C36  6EF8               	movwf	tblptru,c
 14373  014C38                     	endif
 14374  014C38  0009               	tblrd		*+
 14375  014C3A  CFF5 F12C          	movff	tablat,??_SaveToFlash+4
 14376  014C3E  0009               	tblrd		*+
 14377  014C40  CFF5 F12D          	movff	tablat,??_SaveToFlash+5
 14378  014C44  0009               	tblrd		*+
 14379  014C46  CFF5 F12E          	movff	tablat,??_SaveToFlash+6
 14380  014C4A  0009               	tblrd		*+
 14381  014C4C  CFF5 F12F          	movff	tablat,??_SaveToFlash+7
 14382  014C50  0101               	movlb	1	; () banked
 14383  014C52  5128               	movf	??_SaveToFlash& (0+255),w,b
 14384  014C54  0101               	movlb	1	; () banked
 14385  014C56  252C               	addwf	(??_SaveToFlash+4)& (0+255),w,b
 14386  014C58  0101               	movlb	1	; () banked
 14387  014C5A  6F30               	movwf	(??_SaveToFlash+8)& (0+255),b
 14388  014C5C  0101               	movlb	1	; () banked
 14389  014C5E  5129               	movf	(??_SaveToFlash+1)& (0+255),w,b
 14390  014C60  0101               	movlb	1	; () banked
 14391  014C62  212D               	addwfc	(??_SaveToFlash+5)& (0+255),w,b
 14392  014C64  0101               	movlb	1	; () banked
 14393  014C66  6F31               	movwf	(??_SaveToFlash+9)& (0+255),b
 14394  014C68  0101               	movlb	1	; () banked
 14395  014C6A  512A               	movf	(??_SaveToFlash+2)& (0+255),w,b
 14396  014C6C  0101               	movlb	1	; () banked
 14397  014C6E  212E               	addwfc	(??_SaveToFlash+6)& (0+255),w,b
 14398  014C70  0101               	movlb	1	; () banked
 14399  014C72  6F32               	movwf	(??_SaveToFlash+10)& (0+255),b
 14400  014C74  0101               	movlb	1	; () banked
 14401  014C76  512B               	movf	(??_SaveToFlash+3)& (0+255),w,b
 14402  014C78  0101               	movlb	1	; () banked
 14403  014C7A  212F               	addwfc	(??_SaveToFlash+7)& (0+255),w,b
 14404  014C7C  0101               	movlb	1	; () banked
 14405  014C7E  6F33               	movwf	(??_SaveToFlash+11)& (0+255),b
 14406  014C80  0EFF               	movlw	255
 14407  014C82  0101               	movlb	1	; () banked
 14408  014C84  2530               	addwf	(??_SaveToFlash+8)& (0+255),w,b
 14409  014C86  0101               	movlb	1	; () banked
 14410  014C88  6F04               	movwf	EraseFlash@endaddr& (0+255),b
 14411  014C8A  0EFF               	movlw	255
 14412  014C8C  0101               	movlb	1	; () banked
 14413  014C8E  2131               	addwfc	(??_SaveToFlash+9)& (0+255),w,b
 14414  014C90  0101               	movlb	1	; () banked
 14415  014C92  6F05               	movwf	(EraseFlash@endaddr+1)& (0+255),b
 14416  014C94  0EFF               	movlw	255
 14417  014C96  0101               	movlb	1	; () banked
 14418  014C98  2132               	addwfc	(??_SaveToFlash+10)& (0+255),w,b
 14419  014C9A  0101               	movlb	1	; () banked
 14420  014C9C  6F06               	movwf	(EraseFlash@endaddr+2)& (0+255),b
 14421  014C9E  0EFF               	movlw	255
 14422  014CA0  0101               	movlb	1	; () banked
 14423  014CA2  2133               	addwfc	(??_SaveToFlash+11)& (0+255),w,b
 14424  014CA4  0101               	movlb	1	; () banked
 14425  014CA6  6F07               	movwf	(EraseFlash@endaddr+3)& (0+255),b
 14426  014CA8  EC6D  F0D2         	call	_EraseFlash	;wreg free
 14427  014CAC                     l14680:
 14428  014CAC  0101               	movlb	1	; () banked
 14429  014CAE  513A               	movf	SaveToFlash@success& (0+255),w,b
 14430  014CB0  B4D8               	btfsc	status,2,c
 14431  014CB2  D6FD               	goto	l14654
 14432                           
 14433                           ; BSR set to: 1
 14434                           ;Persistence.c: 111: }
 14435                           ;Persistence.c: 112: }
 14436                           ;Persistence.c: 113: s_dacSettingsOriginal = s_dacSettings;
 14437                           
 14438                           ; BSR set to: 1
 14439  014CB4  EE22  F0D3         	lfsr	2,_s_dacSettings
 14440  014CB8  EE13  F000         	lfsr	1,_s_dacSettingsOriginal
 14441  014CBC  0E14               	movlw	20
 14442  014CBE                     u16811:
 14443  014CBE  CFDE FFE6          	movff	postinc2,postinc1
 14444  014CC2  2EE8               	decfsz	wreg,f,c
 14445  014CC4  D7FC               	goto	u16811
 14446                           
 14447                           ; BSR set to: 1
 14448                           ;Persistence.c: 114: RefreshLine1Ex("Stored          ");
 14449  014CC6  0EFF               	movlw	high STR_5
 14450  014CC8  0101               	movlb	1	; () banked
 14451  014CCA  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 14452  014CCC  0E93               	movlw	low STR_5
 14453  014CCE  0101               	movlb	1	; () banked
 14454  014CD0  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 14455  014CD2  ECCB  F0DC         	call	_RefreshLine1Ex	;wreg free
 14456                           
 14457                           ;Persistence.c: 115: }
 14458  014CD6  0012               	return	
 14459  014CD8                     l14686:
 14460                           
 14461                           ;Persistence.c: 116: else
 14462                           ;Persistence.c: 117: {
 14463                           ;Persistence.c: 118: RefreshLine1Ex("No change       ");
 14464  014CD8  0EFF               	movlw	high STR_6
 14465  014CDA  0101               	movlb	1	; () banked
 14466  014CDC  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 14467  014CDE  0EA4               	movlw	low STR_6
 14468  014CE0  0101               	movlb	1	; () banked
 14469  014CE2  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 14470  014CE4  ECCB  F0DC         	call	_RefreshLine1Ex	;wreg free
 14471  014CE8  0012               	return	
 14472  014CEA                     __end_of_SaveToFlash:
 14473                           	opt stack 0
 14474                           tblptru	equ	0xFF8
 14475                           tblptrh	equ	0xFF7
 14476                           tblptrl	equ	0xFF6
 14477                           tablat	equ	0xFF5
 14478                           intcon	equ	0xFF2
 14479                           postinc0	equ	0xFEE
 14480                           wreg	equ	0xFE8
 14481                           indf1	equ	0xFE7
 14482                           postinc1	equ	0xFE6
 14483                           postdec1	equ	0xFE5
 14484                           fsr1h	equ	0xFE2
 14485                           fsr1l	equ	0xFE1
 14486                           indf2	equ	0xFDF
 14487                           postinc2	equ	0xFDE
 14488                           postdec2	equ	0xFDD
 14489                           fsr2h	equ	0xFDA
 14490                           fsr2l	equ	0xFD9
 14491                           status	equ	0xFD8
 14492                           
 14493 ;; *************** function _memcmp *****************
 14494 ;; Defined at:
 14495 ;;		line 3 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcmp.c"
 14496 ;; Parameters:    Size  Location     Type
 14497 ;;  s1              2    0[BANK1 ] PTR const void 
 14498 ;;		 -> IR_VOLUME_DOWN(9), IR_VOLUME_UP(9), IR_POWER_OFF(3), IR_POWER_ON(3), 
 14499 ;;		 -> s_dacSettingsOriginal(20), s_dacSettingsTmp(20), 
 14500 ;;  s2              2    2[BANK1 ] PTR const void 
 14501 ;;		 -> s_irCode(16), s_dacSettings(20), 
 14502 ;;  n               2    4[BANK1 ] unsigned int 
 14503 ;; Auto vars:     Size  Location     Type
 14504 ;;		None
 14505 ;; Return value:  Size  Location     Type
 14506 ;;                  2    0[BANK1 ] int 
 14507 ;; Registers used:
 14508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14509 ;; Tracked objects:
 14510 ;;		On entry : 0/0
 14511 ;;		On exit  : 0/0
 14512 ;;		Unchanged: 0/0
 14513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 14514 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14516 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14517 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14518 ;;Total ram usage:        9 bytes
 14519 ;; Hardware stack levels used:    1
 14520 ;; Hardware stack levels required when called:   10
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		_SaveToFlash
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           	psect	text11
 14529  019CAA                     __ptext11:
 14530                           	opt stack 0
 14531  019CAA                     _memcmp:
 14532                           	opt stack 18
 14533                           
 14534                           ;incstack = 0
 14535  019CAA  D052               	goto	l13876
 14536  019CAC                     l13868:
 14537  019CAC  C102  FFD9         	movff	memcmp@s2,fsr2l
 14538  019CB0  C103  FFDA         	movff	memcmp@s2+1,fsr2h
 14539  019CB4  50DF               	movf	indf2,w,c
 14540  019CB6  0101               	movlb	1	; () banked
 14541  019CB8  6F06               	movwf	??_memcmp& (0+255),b
 14542  019CBA  0101               	movlb	1	; () banked
 14543  019CBC  C100  FFF6         	movff	memcmp@s1,tblptrl
 14544  019CC0  0101               	movlb	1	; () banked
 14545  019CC2  C101  FFF7         	movff	memcmp@s1+1,tblptrh
 14546  019CC6  0E00               	movlw	low (__mediumconst shr (0+16))
 14547  019CC8  6EF8               	movwf	tblptru,c
 14548  019CCA  0E0F               	movlw	(high __ramtop+-1)
 14549  019CCC  64F7               	cpfsgt	tblptrh,c
 14550  019CCE  D003               	bra	u15647
 14551  019CD0  0008               	tblrd		*
 14552  019CD2  50F5               	movf	tablat,w,c
 14553  019CD4  D005               	bra	u15640
 14554  019CD6                     u15647:
 14555  019CD6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14556  019CDA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14557  019CDE  50EF               	movf	indf0,w,c
 14558  019CE0                     u15640:
 14559  019CE0  0101               	movlb	1	; () banked
 14560  019CE2  1906               	xorwf	??_memcmp& (0+255),w,b
 14561  019CE4  B4D8               	btfsc	status,2,c
 14562  019CE6  D02E               	goto	l13874
 14563                           
 14564                           ; BSR set to: 1
 14565  019CE8  C102  FFD9         	movff	memcmp@s2,fsr2l
 14566  019CEC  C103  FFDA         	movff	memcmp@s2+1,fsr2h
 14567  019CF0  50DF               	movf	indf2,w,c
 14568  019CF2  0101               	movlb	1	; () banked
 14569  019CF4  6F06               	movwf	??_memcmp& (0+255),b
 14570  019CF6  6B07               	clrf	(??_memcmp+1)& (0+255),b
 14571  019CF8  0101               	movlb	1	; () banked
 14572  019CFA  1F06               	comf	??_memcmp& (0+255),f,b
 14573  019CFC  1F07               	comf	(??_memcmp+1)& (0+255),f,b
 14574  019CFE  4B06               	infsnz	??_memcmp& (0+255),f,b
 14575  019D00  2B07               	incf	(??_memcmp+1)& (0+255),f,b
 14576  019D02  0101               	movlb	1	; () banked
 14577  019D04  C100  FFF6         	movff	memcmp@s1,tblptrl
 14578  019D08  0101               	movlb	1	; () banked
 14579  019D0A  C101  FFF7         	movff	memcmp@s1+1,tblptrh
 14580  019D0E  0E00               	movlw	low (__mediumconst shr (0+16))
 14581  019D10  6EF8               	movwf	tblptru,c
 14582  019D12  0E0F               	movlw	(high __ramtop+-1)
 14583  019D14  64F7               	cpfsgt	tblptrh,c
 14584  019D16  D003               	bra	u15667
 14585  019D18  0008               	tblrd		*
 14586  019D1A  50F5               	movf	tablat,w,c
 14587  019D1C  D005               	bra	u15660
 14588  019D1E                     u15667:
 14589  019D1E  CFF6 FFE9          	movff	tblptrl,fsr0l
 14590  019D22  CFF7 FFEA          	movff	tblptrh,fsr0h
 14591  019D26  50EF               	movf	indf0,w,c
 14592  019D28                     u15660:
 14593  019D28  0101               	movlb	1	; () banked
 14594  019D2A  6F08               	movwf	(??_memcmp+2)& (0+255),b
 14595  019D2C  0101               	movlb	1	; () banked
 14596  019D2E  5108               	movf	(??_memcmp+2)& (0+255),w,b
 14597  019D30  0101               	movlb	1	; () banked
 14598  019D32  2506               	addwf	??_memcmp& (0+255),w,b
 14599  019D34  0101               	movlb	1	; () banked
 14600  019D36  6F00               	movwf	?_memcmp& (0+255),b
 14601  019D38  0E00               	movlw	0
 14602  019D3A  0101               	movlb	1	; () banked
 14603  019D3C  2107               	addwfc	(??_memcmp+1)& (0+255),w,b
 14604  019D3E  0101               	movlb	1	; () banked
 14605  019D40  6F01               	movwf	(?_memcmp+1)& (0+255),b
 14606  019D42  0012               	return	
 14607  019D44                     l13874:
 14608                           
 14609                           ; BSR set to: 1
 14610  019D44  0101               	movlb	1	; () banked
 14611  019D46  4B00               	infsnz	memcmp@s1& (0+255),f,b
 14612  019D48  2B01               	incf	(memcmp@s1+1)& (0+255),f,b
 14613  019D4A  0101               	movlb	1	; () banked
 14614  019D4C  4B02               	infsnz	memcmp@s2& (0+255),f,b
 14615  019D4E  2B03               	incf	(memcmp@s2+1)& (0+255),f,b
 14616  019D50                     l13876:
 14617  019D50  0101               	movlb	1	; () banked
 14618  019D52  0704               	decf	memcmp@n& (0+255),f,b
 14619  019D54  A0D8               	btfss	status,0,c
 14620  019D56  0705               	decf	(memcmp@n+1)& (0+255),f,b
 14621  019D58  0101               	movlb	1	; () banked
 14622  019D5A  2904               	incf	memcmp@n& (0+255),w,b
 14623  019D5C  B4D8               	btfsc	status,2,c
 14624  019D5E  2905               	incf	(memcmp@n+1)& (0+255),w,b
 14625  019D60  A4D8               	btfss	status,2,c
 14626  019D62  D7A4               	goto	l13868
 14627                           
 14628                           ; BSR set to: 1
 14629                           
 14630                           ; BSR set to: 1
 14631  019D64  0E00               	movlw	0
 14632  019D66  0101               	movlb	1	; () banked
 14633  019D68  6F01               	movwf	(?_memcmp+1)& (0+255),b
 14634  019D6A  0E00               	movlw	0
 14635  019D6C  0101               	movlb	1	; () banked
 14636  019D6E  6F00               	movwf	?_memcmp& (0+255),b
 14637  019D70  0012               	return	
 14638  019D72                     __end_of_memcmp:
 14639                           	opt stack 0
 14640                           tblptru	equ	0xFF8
 14641                           tblptrh	equ	0xFF7
 14642                           tblptrl	equ	0xFF6
 14643                           tablat	equ	0xFF5
 14644                           intcon	equ	0xFF2
 14645                           indf0	equ	0xFEF
 14646                           postinc0	equ	0xFEE
 14647                           fsr0h	equ	0xFEA
 14648                           fsr0l	equ	0xFE9
 14649                           wreg	equ	0xFE8
 14650                           indf1	equ	0xFE7
 14651                           postinc1	equ	0xFE6
 14652                           postdec1	equ	0xFE5
 14653                           fsr1h	equ	0xFE2
 14654                           fsr1l	equ	0xFE1
 14655                           indf2	equ	0xFDF
 14656                           postinc2	equ	0xFDE
 14657                           postdec2	equ	0xFDD
 14658                           fsr2h	equ	0xFDA
 14659                           fsr2l	equ	0xFD9
 14660                           status	equ	0xFD8
 14661                           
 14662 ;; *************** function _WriteBlockFlash *****************
 14663 ;; Defined at:
 14664 ;;		line 119 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\WriteBlockFlash.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;  startaddr       4    0[BANK1 ] unsigned long 
 14667 ;;  num_blocks      1    4[BANK1 ] unsigned char 
 14668 ;;  flash_array     2    5[BANK1 ] PTR unsigned char 
 14669 ;;		 -> s_dacSettings(20), 
 14670 ;; Auto vars:     Size  Location     Type
 14671 ;;  saddress        4   13[BANK1 ] unsigned long 
 14672 ;;  startptr        3    8[BANK1 ] PTR unsigned char 
 14673 ;;		 -> ROM(131063), 
 14674 ;;  flag            1   12[BANK1 ] unsigned char 
 14675 ;;  write_byte      1   11[BANK1 ] unsigned char 
 14676 ;; Return value:  Size  Location     Type
 14677 ;;		None               void
 14678 ;; Registers used:
 14679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14680 ;; Tracked objects:
 14681 ;;		On entry : 0/0
 14682 ;;		On exit  : 0/0
 14683 ;;		Unchanged: 0/0
 14684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 14685 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14686 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14687 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14688 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14689 ;;Total ram usage:       17 bytes
 14690 ;; Hardware stack levels used:    1
 14691 ;; Hardware stack levels required when called:   10
 14692 ;; This function calls:
 14693 ;;		Nothing
 14694 ;; This function is called by:
 14695 ;;		_SaveToFlash
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           	psect	text12
 14700  01831C                     __ptext12:
 14701                           	opt stack 0
 14702  01831C                     _WriteBlockFlash:
 14703                           	opt stack 18
 14704                           
 14705                           ; BSR set to: 1
 14706                           ;incstack = 0
 14707  01831C  0E00               	movlw	0
 14708  01831E  0101               	movlb	1	; () banked
 14709  018320  6F0B               	movwf	WriteBlockFlash@write_byte& (0+255),b
 14710  018322  0E00               	movlw	0
 14711  018324  0101               	movlb	1	; () banked
 14712  018326  6F0C               	movwf	WriteBlockFlash@flag& (0+255),b
 14713                           
 14714                           ; BSR set to: 1
 14715  018328  0E06               	movlw	6
 14716  01832A  0101               	movlb	1	; () banked
 14717  01832C  6F07               	movwf	??_WriteBlockFlash& (0+255),b
 14718  01832E                     u15685:
 14719  01832E  90D8               	bcf	status,0,c
 14720  018330  0101               	movlb	1	; () banked
 14721  018332  3303               	rrcf	(WriteBlockFlash@startaddr+3)& (0+255),f,b
 14722  018334  0101               	movlb	1	; () banked
 14723  018336  3302               	rrcf	(WriteBlockFlash@startaddr+2)& (0+255),f,b
 14724  018338  0101               	movlb	1	; () banked
 14725  01833A  3301               	rrcf	(WriteBlockFlash@startaddr+1)& (0+255),f,b
 14726  01833C  0101               	movlb	1	; () banked
 14727  01833E  3300               	rrcf	WriteBlockFlash@startaddr& (0+255),f,b
 14728  018340  0101               	movlb	1	; () banked
 14729  018342  2F07               	decfsz	??_WriteBlockFlash& (0+255),f,b
 14730  018344  D7F4               	goto	u15685
 14731                           
 14732                           ; BSR set to: 1
 14733  018346  0101               	movlb	1	; () banked
 14734  018348  0E06               	movlw	6
 14735  01834A                     u15695:
 14736  01834A  90D8               	bcf	status,0,c
 14737  01834C  0101               	movlb	1	; () banked
 14738  01834E  3700               	rlcf	WriteBlockFlash@startaddr& (0+255),f,b
 14739  018350  0101               	movlb	1	; () banked
 14740  018352  3701               	rlcf	(WriteBlockFlash@startaddr+1)& (0+255),f,b
 14741  018354  0101               	movlb	1	; () banked
 14742  018356  3702               	rlcf	(WriteBlockFlash@startaddr+2)& (0+255),f,b
 14743  018358  0101               	movlb	1	; () banked
 14744  01835A  3703               	rlcf	(WriteBlockFlash@startaddr+3)& (0+255),f,b
 14745  01835C  2EE8               	decfsz	wreg,f,c
 14746  01835E  D7F5               	goto	u15695
 14747                           
 14748                           ; BSR set to: 1
 14749  018360  C100  F10D         	movff	WriteBlockFlash@startaddr,WriteBlockFlash@saddress
 14750  018364  C101  F10E         	movff	WriteBlockFlash@startaddr+1,WriteBlockFlash@saddress+1
 14751  018368  C102  F10F         	movff	WriteBlockFlash@startaddr+2,WriteBlockFlash@saddress+2
 14752  01836C  C103  F110         	movff	WriteBlockFlash@startaddr+3,WriteBlockFlash@saddress+3
 14753  018370  D062               	goto	l13922
 14754  018372                     l13890:
 14755                           
 14756                           ; BSR set to: 1
 14757  018372  0101               	movlb	1	; () banked
 14758  018374  C10F  F10A         	movff	WriteBlockFlash@saddress+2,WriteBlockFlash@startptr+2
 14759  018378  0101               	movlb	1	; () banked
 14760  01837A  C10E  F109         	movff	WriteBlockFlash@saddress+1,WriteBlockFlash@startptr+1
 14761  01837E  0101               	movlb	1	; () banked
 14762  018380  C10D  F108         	movff	WriteBlockFlash@saddress,WriteBlockFlash@startptr
 14763                           
 14764                           ; BSR set to: 1
 14765  018384  0E40               	movlw	64
 14766  018386  0101               	movlb	1	; () banked
 14767  018388  6F0B               	movwf	WriteBlockFlash@write_byte& (0+255),b
 14768  01838A  D01D               	goto	l13900
 14769  01838C                     l13894:
 14770                           
 14771                           ; BSR set to: 1
 14772  01838C  C105  FFD9         	movff	WriteBlockFlash@flash_array,fsr2l
 14773  018390  C106  FFDA         	movff	WriteBlockFlash@flash_array+1,fsr2h
 14774  018394  50DF               	movf	indf2,w,c
 14775  018396  0101               	movlb	1	; () banked
 14776  018398  C108  FFF6         	movff	WriteBlockFlash@startptr,tblptrl
 14777  01839C  0101               	movlb	1	; () banked
 14778  01839E  C109  FFF7         	movff	WriteBlockFlash@startptr+1,tblptrh
 14779  0183A2  0101               	movlb	1	; () banked
 14780  0183A4  C10A  FFF8         	movff	WriteBlockFlash@startptr+2,tblptru
 14781  0183A8  6EF5               	movwf	tablat,c
 14782  0183AA  000C               	tblwt		*
 14783                           
 14784                           ; BSR set to: 1
 14785  0183AC  0101               	movlb	1	; () banked
 14786  0183AE  4B05               	infsnz	WriteBlockFlash@flash_array& (0+255),f,b
 14787  0183B0  2B06               	incf	(WriteBlockFlash@flash_array+1)& (0+255),f,b
 14788                           
 14789                           ; BSR set to: 1
 14790  0183B2  0101               	movlb	1	; () banked
 14791  0183B4  0E01               	movlw	1
 14792  0183B6  0101               	movlb	1	; () banked
 14793  0183B8  2708               	addwf	WriteBlockFlash@startptr& (0+255),f,b
 14794  0183BA  0E00               	movlw	0
 14795  0183BC  0101               	movlb	1	; () banked
 14796  0183BE  2309               	addwfc	(WriteBlockFlash@startptr+1)& (0+255),f,b
 14797  0183C0  0E00               	movlw	0
 14798  0183C2  0101               	movlb	1	; () banked
 14799  0183C4  230A               	addwfc	(WriteBlockFlash@startptr+2)& (0+255),f,b
 14800  0183C6                     l13900:
 14801                           
 14802                           ; BSR set to: 1
 14803  0183C6  0101               	movlb	1	; () banked
 14804  0183C8  070B               	decf	WriteBlockFlash@write_byte& (0+255),f,b
 14805  0183CA  0101               	movlb	1	; () banked
 14806  0183CC  290B               	incf	WriteBlockFlash@write_byte& (0+255),w,b
 14807  0183CE  A4D8               	btfss	status,2,c
 14808  0183D0  D7DD               	goto	l13894
 14809                           
 14810                           ; BSR set to: 1
 14811                           
 14812                           ; BSR set to: 1
 14813  0183D2  0101               	movlb	1	; () banked
 14814  0183D4  C10F  F10A         	movff	WriteBlockFlash@saddress+2,WriteBlockFlash@startptr+2
 14815  0183D8  0101               	movlb	1	; () banked
 14816  0183DA  C10E  F109         	movff	WriteBlockFlash@saddress+1,WriteBlockFlash@startptr+1
 14817  0183DE  0101               	movlb	1	; () banked
 14818  0183E0  C10D  F108         	movff	WriteBlockFlash@saddress,WriteBlockFlash@startptr
 14819                           
 14820                           ; BSR set to: 1
 14821  0183E4  84A6               	bsf	4006,2,c	;volatile
 14822                           
 14823                           ; BSR set to: 1
 14824  0183E6  AEF2               	btfss	intcon,7,c	;volatile
 14825  0183E8  D004               	goto	l2165
 14826                           
 14827                           ; BSR set to: 1
 14828  0183EA  9EF2               	bcf	intcon,7,c	;volatile
 14829                           
 14830                           ; BSR set to: 1
 14831  0183EC  0E01               	movlw	1
 14832  0183EE  0101               	movlb	1	; () banked
 14833  0183F0  6F0C               	movwf	WriteBlockFlash@flag& (0+255),b
 14834  0183F2                     l2165:
 14835                           
 14836                           ; BSR set to: 1
 14837  0183F2  0E55               	movlw	85
 14838  0183F4  6EA7               	movwf	4007,c	;volatile
 14839  0183F6  0EAA               	movlw	170
 14840  0183F8  6EA7               	movwf	4007,c	;volatile
 14841                           
 14842                           ; BSR set to: 1
 14843  0183FA  82A6               	bsf	4006,1,c	;volatile
 14844                           
 14845                           ; BSR set to: 1
 14846  0183FC  94A6               	bcf	4006,2,c	;volatile
 14847  0183FE  0101               	movlb	1	; () banked
 14848  018400  510C               	movf	WriteBlockFlash@flag& (0+255),w,b
 14849  018402  B4D8               	btfsc	status,2,c
 14850  018404  D004               	goto	l13920
 14851                           
 14852                           ; BSR set to: 1
 14853  018406  8EF2               	bsf	intcon,7,c	;volatile
 14854                           
 14855                           ; BSR set to: 1
 14856  018408  0E00               	movlw	0
 14857  01840A  0101               	movlb	1	; () banked
 14858  01840C  6F0C               	movwf	WriteBlockFlash@flag& (0+255),b
 14859  01840E                     l13920:
 14860                           
 14861                           ; BSR set to: 1
 14862  01840E  0E40               	movlw	64
 14863  018410  0101               	movlb	1	; () banked
 14864  018412  250D               	addwf	WriteBlockFlash@saddress& (0+255),w,b
 14865  018414  0101               	movlb	1	; () banked
 14866  018416  6F0D               	movwf	WriteBlockFlash@saddress& (0+255),b
 14867  018418  0E00               	movlw	0
 14868  01841A  0101               	movlb	1	; () banked
 14869  01841C  210E               	addwfc	(WriteBlockFlash@saddress+1)& (0+255),w,b
 14870  01841E  0101               	movlb	1	; () banked
 14871  018420  6F0E               	movwf	(WriteBlockFlash@saddress+1)& (0+255),b
 14872  018422  0E00               	movlw	0
 14873  018424  0101               	movlb	1	; () banked
 14874  018426  210F               	addwfc	(WriteBlockFlash@saddress+2)& (0+255),w,b
 14875  018428  0101               	movlb	1	; () banked
 14876  01842A  6F0F               	movwf	(WriteBlockFlash@saddress+2)& (0+255),b
 14877  01842C  0E00               	movlw	0
 14878  01842E  0101               	movlb	1	; () banked
 14879  018430  2110               	addwfc	(WriteBlockFlash@saddress+3)& (0+255),w,b
 14880  018432  0101               	movlb	1	; () banked
 14881  018434  6F10               	movwf	(WriteBlockFlash@saddress+3)& (0+255),b
 14882  018436                     l13922:
 14883                           
 14884                           ; BSR set to: 1
 14885  018436  0101               	movlb	1	; () banked
 14886  018438  0704               	decf	WriteBlockFlash@num_blocks& (0+255),f,b
 14887  01843A  0101               	movlb	1	; () banked
 14888  01843C  2904               	incf	WriteBlockFlash@num_blocks& (0+255),w,b
 14889  01843E  B4D8               	btfsc	status,2,c
 14890                           
 14891                           ; BSR set to: 1
 14892                           
 14893                           ; BSR set to: 1
 14894  018440  0012               	return	
 14895  018442  D797               	goto	l13890
 14896  018444                     __end_of_WriteBlockFlash:
 14897                           	opt stack 0
 14898                           tblptru	equ	0xFF8
 14899                           tblptrh	equ	0xFF7
 14900                           tblptrl	equ	0xFF6
 14901                           tablat	equ	0xFF5
 14902                           intcon	equ	0xFF2
 14903                           indf0	equ	0xFEF
 14904                           postinc0	equ	0xFEE
 14905                           fsr0h	equ	0xFEA
 14906                           fsr0l	equ	0xFE9
 14907                           wreg	equ	0xFE8
 14908                           indf1	equ	0xFE7
 14909                           postinc1	equ	0xFE6
 14910                           postdec1	equ	0xFE5
 14911                           fsr1h	equ	0xFE2
 14912                           fsr1l	equ	0xFE1
 14913                           indf2	equ	0xFDF
 14914                           postinc2	equ	0xFDE
 14915                           postdec2	equ	0xFDD
 14916                           fsr2h	equ	0xFDA
 14917                           fsr2l	equ	0xFD9
 14918                           status	equ	0xFD8
 14919                           
 14920 ;; *************** function _FindEmpty *****************
 14921 ;; Defined at:
 14922 ;;		line 61 in file "Persistence.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;  startAddr       4   16[BANK1 ] unsigned long 
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;  tmpAddr         2   38[BANK1 ] PTR unsigned char 
 14927 ;;		 -> s_dacSettingsTmp(20), 
 14928 ;;  blockEnd        2   32[BANK1 ] PTR unsigned char 
 14929 ;;		 -> s_dacSettingsTmp(20), 
 14930 ;;  addr            4   34[BANK1 ] unsigned long 
 14931 ;;  addrStop        4   28[BANK1 ] unsigned long 
 14932 ;; Return value:  Size  Location     Type
 14933 ;;                  4   16[BANK1 ] unsigned long 
 14934 ;; Registers used:
 14935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14936 ;; Tracked objects:
 14937 ;;		On entry : 0/0
 14938 ;;		On exit  : 0/0
 14939 ;;		Unchanged: 0/0
 14940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 14941 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14942 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14944 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;Total ram usage:       24 bytes
 14946 ;; Hardware stack levels used:    1
 14947 ;; Hardware stack levels required when called:   11
 14948 ;; This function calls:
 14949 ;;		_ReadFlash
 14950 ;; This function is called by:
 14951 ;;		_SaveToFlash
 14952 ;; This function uses a non-reentrant model
 14953 ;;
 14954                           
 14955                           	psect	text13
 14956  017444                     __ptext13:
 14957                           	opt stack 0
 14958  017444                     _FindEmpty:
 14959                           	opt stack 17
 14960                           
 14961                           ;Persistence.c: 63: unsigned long addrStop = SETTINGS_ADDR + SETTINGS_LEN;
 14962                           
 14963                           ; BSR set to: 1
 14964                           ;incstack = 0
 14965  017444  0E0B               	movlw	low _SETTINGS_LEN
 14966  017446  6EF6               	movwf	tblptrl,c
 14967  017448                     	if	1	;There is more than 1 active tblptr byte
 14968  017448  0EFF               	movlw	high _SETTINGS_LEN
 14969  01744A  6EF7               	movwf	tblptrh,c
 14970  01744C                     	endif
 14971  01744C                     	if	1	;There are 3 active tblptr bytes
 14972  01744C  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 14973  01744E  6EF8               	movwf	tblptru,c
 14974  017450                     	endif
 14975  017450  0009               	tblrd		*+
 14976  017452  CFF5 F114          	movff	tablat,??_FindEmpty
 14977  017456  0009               	tblrd		*+
 14978  017458  CFF5 F115          	movff	tablat,??_FindEmpty+1
 14979  01745C  0009               	tblrd		*+
 14980  01745E  CFF5 F116          	movff	tablat,??_FindEmpty+2
 14981  017462  0009               	tblrd		*+
 14982  017464  CFF5 F117          	movff	tablat,??_FindEmpty+3
 14983  017468  0E07               	movlw	low _SETTINGS_ADDR
 14984  01746A  6EF6               	movwf	tblptrl,c
 14985  01746C                     	if	1	;There is more than 1 active tblptr byte
 14986  01746C  0EFF               	movlw	high _SETTINGS_ADDR
 14987  01746E  6EF7               	movwf	tblptrh,c
 14988  017470                     	endif
 14989  017470                     	if	1	;There are 3 active tblptr bytes
 14990  017470  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 14991  017472  6EF8               	movwf	tblptru,c
 14992  017474                     	endif
 14993  017474  0009               	tblrd		*+
 14994  017476  CFF5 F118          	movff	tablat,??_FindEmpty+4
 14995  01747A  0009               	tblrd		*+
 14996  01747C  CFF5 F119          	movff	tablat,??_FindEmpty+5
 14997  017480  0009               	tblrd		*+
 14998  017482  CFF5 F11A          	movff	tablat,??_FindEmpty+6
 14999  017486  0009               	tblrd		*+
 15000  017488  CFF5 F11B          	movff	tablat,??_FindEmpty+7
 15001  01748C  0101               	movlb	1	; () banked
 15002  01748E  5114               	movf	??_FindEmpty& (0+255),w,b
 15003  017490  0101               	movlb	1	; () banked
 15004  017492  2518               	addwf	(??_FindEmpty+4)& (0+255),w,b
 15005  017494  0101               	movlb	1	; () banked
 15006  017496  6F1C               	movwf	FindEmpty@addrStop& (0+255),b
 15007  017498  0101               	movlb	1	; () banked
 15008  01749A  5115               	movf	(??_FindEmpty+1)& (0+255),w,b
 15009  01749C  0101               	movlb	1	; () banked
 15010  01749E  2119               	addwfc	(??_FindEmpty+5)& (0+255),w,b
 15011  0174A0  0101               	movlb	1	; () banked
 15012  0174A2  6F1D               	movwf	(FindEmpty@addrStop+1)& (0+255),b
 15013  0174A4  0101               	movlb	1	; () banked
 15014  0174A6  5116               	movf	(??_FindEmpty+2)& (0+255),w,b
 15015  0174A8  0101               	movlb	1	; () banked
 15016  0174AA  211A               	addwfc	(??_FindEmpty+6)& (0+255),w,b
 15017  0174AC  0101               	movlb	1	; () banked
 15018  0174AE  6F1E               	movwf	(FindEmpty@addrStop+2)& (0+255),b
 15019  0174B0  0101               	movlb	1	; () banked
 15020  0174B2  5117               	movf	(??_FindEmpty+3)& (0+255),w,b
 15021  0174B4  0101               	movlb	1	; () banked
 15022  0174B6  211B               	addwfc	(??_FindEmpty+7)& (0+255),w,b
 15023  0174B8  0101               	movlb	1	; () banked
 15024  0174BA  6F1F               	movwf	(FindEmpty@addrStop+3)& (0+255),b
 15025                           
 15026                           ; BSR set to: 1
 15027                           ;Persistence.c: 64: unsigned long addr = startAddr;
 15028  0174BC  C110  F122         	movff	FindEmpty@startAddr,FindEmpty@addr
 15029  0174C0  C111  F123         	movff	FindEmpty@startAddr+1,FindEmpty@addr+1
 15030  0174C4  C112  F124         	movff	FindEmpty@startAddr+2,FindEmpty@addr+2
 15031  0174C8  C113  F125         	movff	FindEmpty@startAddr+3,FindEmpty@addr+3
 15032                           
 15033                           ;Persistence.c: 65: while(addr < addrStop)
 15034  0174CC  D05E               	goto	l1802
 15035  0174CE                     l13842:
 15036                           
 15037                           ; BSR set to: 1
 15038                           ;Persistence.c: 66: {
 15039                           ;Persistence.c: 67: ReadFlash(addr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_dacSet
      +                          tingsTmp);
 15040  0174CE  C122  F100         	movff	FindEmpty@addr,ReadFlash@startaddr
 15041  0174D2  C123  F101         	movff	FindEmpty@addr+1,ReadFlash@startaddr+1
 15042  0174D6  C124  F102         	movff	FindEmpty@addr+2,ReadFlash@startaddr+2
 15043  0174DA  C125  F103         	movff	FindEmpty@addr+3,ReadFlash@startaddr+3
 15044  0174DE  0E00               	movlw	0
 15045  0174E0  0101               	movlb	1	; () banked
 15046  0174E2  6F05               	movwf	(ReadFlash@num_bytes+1)& (0+255),b
 15047  0174E4  0E14               	movlw	20
 15048  0174E6  0101               	movlb	1	; () banked
 15049  0174E8  6F04               	movwf	ReadFlash@num_bytes& (0+255),b
 15050  0174EA  0102               	movlb	2	; () banked
 15051  0174EC  0E02               	movlw	high _s_dacSettingsTmp
 15052  0174EE  0101               	movlb	1	; () banked
 15053  0174F0  6F07               	movwf	(ReadFlash@flash_array+1)& (0+255),b
 15054  0174F2  0102               	movlb	2	; () banked
 15055  0174F4  0EE7               	movlw	low _s_dacSettingsTmp
 15056  0174F6  0101               	movlb	1	; () banked
 15057  0174F8  6F06               	movwf	ReadFlash@flash_array& (0+255),b
 15058  0174FA  ECD5  F0D6         	call	_ReadFlash	;wreg free
 15059                           
 15060                           ;Persistence.c: 69: uint8_t *tmpAddr = (uint8_t *)&s_dacSettingsTmp;
 15061  0174FE  0102               	movlb	2	; () banked
 15062  017500  0E02               	movlw	high _s_dacSettingsTmp
 15063  017502  0101               	movlb	1	; () banked
 15064  017504  6F27               	movwf	(FindEmpty@tmpAddr+1)& (0+255),b
 15065  017506  0102               	movlb	2	; () banked
 15066  017508  0EE7               	movlw	low _s_dacSettingsTmp
 15067  01750A  0101               	movlb	1	; () banked
 15068  01750C  6F26               	movwf	FindEmpty@tmpAddr& (0+255),b
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;Persistence.c: 70: uint8_t *blockEnd = tmpAddr + sizeof(s_dacSettingsTmp);
 15072  01750E  0E14               	movlw	20
 15073  017510  0101               	movlb	1	; () banked
 15074  017512  2526               	addwf	FindEmpty@tmpAddr& (0+255),w,b
 15075  017514  0101               	movlb	1	; () banked
 15076  017516  6F20               	movwf	FindEmpty@blockEnd& (0+255),b
 15077  017518  0E00               	movlw	0
 15078  01751A  0101               	movlb	1	; () banked
 15079  01751C  2127               	addwfc	(FindEmpty@tmpAddr+1)& (0+255),w,b
 15080  01751E  0101               	movlb	1	; () banked
 15081  017520  6F21               	movwf	(FindEmpty@blockEnd+1)& (0+255),b
 15082                           
 15083                           ;Persistence.c: 71: while(tmpAddr < blockEnd)
 15084  017522  D00B               	goto	l13854
 15085  017524                     l13848:
 15086                           
 15087                           ; BSR set to: 1
 15088                           ;Persistence.c: 72: {
 15089                           ;Persistence.c: 73: if (*tmpAddr != 0xFF) break;
 15090  017524  C126  FFD9         	movff	FindEmpty@tmpAddr,fsr2l
 15091  017528  C127  FFDA         	movff	FindEmpty@tmpAddr+1,fsr2h
 15092  01752C  50DF               	movf	indf2,w,c
 15093  01752E  0AFF               	xorlw	255
 15094  017530  A4D8               	btfss	status,2,c
 15095  017532  D00D               	goto	l13856
 15096                           
 15097                           ; BSR set to: 1
 15098                           ;Persistence.c: 74: tmpAddr ++;
 15099                           
 15100                           ; BSR set to: 1
 15101                           
 15102                           ; BSR set to: 1
 15103  017534  0101               	movlb	1	; () banked
 15104  017536  4B26               	infsnz	FindEmpty@tmpAddr& (0+255),f,b
 15105  017538  2B27               	incf	(FindEmpty@tmpAddr+1)& (0+255),f,b
 15106  01753A                     l13854:
 15107                           
 15108                           ; BSR set to: 1
 15109  01753A  0101               	movlb	1	; () banked
 15110  01753C  5120               	movf	FindEmpty@blockEnd& (0+255),w,b
 15111  01753E  0101               	movlb	1	; () banked
 15112  017540  5D26               	subwf	FindEmpty@tmpAddr& (0+255),w,b
 15113  017542  0101               	movlb	1	; () banked
 15114  017544  5121               	movf	(FindEmpty@blockEnd+1)& (0+255),w,b
 15115  017546  0101               	movlb	1	; () banked
 15116  017548  5927               	subwfb	(FindEmpty@tmpAddr+1)& (0+255),w,b
 15117  01754A  A0D8               	btfss	status,0,c
 15118  01754C  D7EB               	goto	l13848
 15119  01754E                     l13856:
 15120                           
 15121                           ; BSR set to: 1
 15122                           ;Persistence.c: 75: }
 15123                           ;Persistence.c: 76: if (tmpAddr == blockEnd) return addr;
 15124  01754E  0101               	movlb	1	; () banked
 15125  017550  5121               	movf	(FindEmpty@blockEnd+1)& (0+255),w,b
 15126  017552  0101               	movlb	1	; () banked
 15127  017554  1927               	xorwf	(FindEmpty@tmpAddr+1)& (0+255),w,b
 15128  017556  E104               	bnz	u15625
 15129  017558  0101               	movlb	1	; () banked
 15130  01755A  5120               	movf	FindEmpty@blockEnd& (0+255),w,b
 15131  01755C  0101               	movlb	1	; () banked
 15132  01755E  1926               	xorwf	FindEmpty@tmpAddr& (0+255),w,b
 15133  017560                     u15625:
 15134  017560  A4D8               	btfss	status,2,c
 15135  017562  D009               	goto	l13860
 15136                           
 15137                           ; BSR set to: 1
 15138  017564  C122  F110         	movff	FindEmpty@addr,?_FindEmpty
 15139  017568  C123  F111         	movff	FindEmpty@addr+1,?_FindEmpty+1
 15140  01756C  C124  F112         	movff	FindEmpty@addr+2,?_FindEmpty+2
 15141  017570  C125  F113         	movff	FindEmpty@addr+3,?_FindEmpty+3
 15142  017574  0012               	return	
 15143  017576                     l13860:
 15144                           
 15145                           ; BSR set to: 1
 15146                           ;Persistence.c: 78: addr += 0x40;
 15147  017576  0E40               	movlw	64
 15148  017578  0101               	movlb	1	; () banked
 15149  01757A  2722               	addwf	FindEmpty@addr& (0+255),f,b
 15150  01757C  0E00               	movlw	0
 15151  01757E  0101               	movlb	1	; () banked
 15152  017580  2323               	addwfc	(FindEmpty@addr+1)& (0+255),f,b
 15153  017582  0101               	movlb	1	; () banked
 15154  017584  2324               	addwfc	(FindEmpty@addr+2)& (0+255),f,b
 15155  017586  0101               	movlb	1	; () banked
 15156  017588  2325               	addwfc	(FindEmpty@addr+3)& (0+255),f,b
 15157  01758A                     l1802:
 15158                           
 15159                           ; BSR set to: 1
 15160  01758A  0101               	movlb	1	; () banked
 15161  01758C  511C               	movf	FindEmpty@addrStop& (0+255),w,b
 15162  01758E  0101               	movlb	1	; () banked
 15163  017590  5D22               	subwf	FindEmpty@addr& (0+255),w,b
 15164  017592  0101               	movlb	1	; () banked
 15165  017594  511D               	movf	(FindEmpty@addrStop+1)& (0+255),w,b
 15166  017596  0101               	movlb	1	; () banked
 15167  017598  5923               	subwfb	(FindEmpty@addr+1)& (0+255),w,b
 15168  01759A  0101               	movlb	1	; () banked
 15169  01759C  511E               	movf	(FindEmpty@addrStop+2)& (0+255),w,b
 15170  01759E  0101               	movlb	1	; () banked
 15171  0175A0  5924               	subwfb	(FindEmpty@addr+2)& (0+255),w,b
 15172  0175A2  0101               	movlb	1	; () banked
 15173  0175A4  511F               	movf	(FindEmpty@addrStop+3)& (0+255),w,b
 15174  0175A6  0101               	movlb	1	; () banked
 15175  0175A8  5925               	subwfb	(FindEmpty@addr+3)& (0+255),w,b
 15176  0175AA  A0D8               	btfss	status,0,c
 15177  0175AC  D790               	goto	l13842
 15178                           
 15179                           ; BSR set to: 1
 15180                           ;Persistence.c: 79: }
 15181                           ;Persistence.c: 80: return 0;
 15182                           
 15183                           ; BSR set to: 1
 15184  0175AE  0E00               	movlw	0
 15185  0175B0  0101               	movlb	1	; () banked
 15186  0175B2  6F10               	movwf	?_FindEmpty& (0+255),b
 15187  0175B4  0E00               	movlw	0
 15188  0175B6  0101               	movlb	1	; () banked
 15189  0175B8  6F11               	movwf	(?_FindEmpty+1)& (0+255),b
 15190  0175BA  0E00               	movlw	0
 15191  0175BC  0101               	movlb	1	; () banked
 15192  0175BE  6F12               	movwf	(?_FindEmpty+2)& (0+255),b
 15193  0175C0  0E00               	movlw	0
 15194  0175C2  0101               	movlb	1	; () banked
 15195  0175C4  6F13               	movwf	(?_FindEmpty+3)& (0+255),b
 15196  0175C6  0012               	return	
 15197  0175C8                     __end_of_FindEmpty:
 15198                           	opt stack 0
 15199                           tblptru	equ	0xFF8
 15200                           tblptrh	equ	0xFF7
 15201                           tblptrl	equ	0xFF6
 15202                           tablat	equ	0xFF5
 15203                           intcon	equ	0xFF2
 15204                           indf0	equ	0xFEF
 15205                           postinc0	equ	0xFEE
 15206                           fsr0h	equ	0xFEA
 15207                           fsr0l	equ	0xFE9
 15208                           wreg	equ	0xFE8
 15209                           indf1	equ	0xFE7
 15210                           postinc1	equ	0xFE6
 15211                           postdec1	equ	0xFE5
 15212                           fsr1h	equ	0xFE2
 15213                           fsr1l	equ	0xFE1
 15214                           indf2	equ	0xFDF
 15215                           postinc2	equ	0xFDE
 15216                           postdec2	equ	0xFDD
 15217                           fsr2h	equ	0xFDA
 15218                           fsr2l	equ	0xFD9
 15219                           status	equ	0xFD8
 15220                           
 15221 ;; *************** function _EraseFlash *****************
 15222 ;; Defined at:
 15223 ;;		line 59 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\EraseFlash.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;  startaddr       4    0[BANK1 ] unsigned long 
 15226 ;;  endaddr         4    4[BANK1 ] unsigned long 
 15227 ;; Auto vars:     Size  Location     Type
 15228 ;;  flash_addr      4    9[BANK1 ] struct .
 15229 ;;  flag            1    8[BANK1 ] unsigned char 
 15230 ;; Return value:  Size  Location     Type
 15231 ;;		None               void
 15232 ;; Registers used:
 15233 ;;		wreg, status,2, status,0
 15234 ;; Tracked objects:
 15235 ;;		On entry : 0/0
 15236 ;;		On exit  : 0/0
 15237 ;;		Unchanged: 0/0
 15238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15239 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15240 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15242 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15243 ;;Total ram usage:       13 bytes
 15244 ;; Hardware stack levels used:    1
 15245 ;; Hardware stack levels required when called:   10
 15246 ;; This function calls:
 15247 ;;		Nothing
 15248 ;; This function is called by:
 15249 ;;		_SaveToFlash
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           	psect	text14
 15254  01A4DA                     __ptext14:
 15255                           	opt stack 0
 15256  01A4DA                     _EraseFlash:
 15257                           	opt stack 18
 15258                           
 15259                           ; BSR set to: 1
 15260                           ;incstack = 0
 15261  01A4DA  0E00               	movlw	0
 15262  01A4DC  0101               	movlb	1	; () banked
 15263  01A4DE  6F08               	movwf	EraseFlash@flag& (0+255),b
 15264                           
 15265                           ; BSR set to: 1
 15266  01A4E0  C100  F109         	movff	EraseFlash@startaddr,EraseFlash@flash_addr
 15267  01A4E4  C101  F10A         	movff	EraseFlash@startaddr+1,EraseFlash@flash_addr+1
 15268  01A4E8  C102  F10B         	movff	EraseFlash@startaddr+2,EraseFlash@flash_addr+2
 15269  01A4EC  C103  F10C         	movff	EraseFlash@startaddr+3,EraseFlash@flash_addr+3
 15270  01A4F0  D02B               	goto	l2132
 15271  01A4F2                     l2133:
 15272                           
 15273                           ; BSR set to: 1
 15274  01A4F2  C10B  FFF8         	movff	EraseFlash@flash_addr+2,tblptru	;volatile
 15275  01A4F6  C10A  FFF7         	movff	EraseFlash@flash_addr+1,tblptrh	;volatile
 15276  01A4FA  C109  FFF6         	movff	EraseFlash@flash_addr,tblptrl	;volatile
 15277  01A4FE  84A6               	bsf	4006,2,c	;volatile
 15278  01A500  88A6               	bsf	4006,4,c	;volatile
 15279  01A502  AEF2               	btfss	intcon,7,c	;volatile
 15280  01A504  D004               	goto	l2134
 15281                           
 15282                           ; BSR set to: 1
 15283  01A506  9EF2               	bcf	intcon,7,c	;volatile
 15284                           
 15285                           ; BSR set to: 1
 15286  01A508  0E01               	movlw	1
 15287  01A50A  0101               	movlb	1	; () banked
 15288  01A50C  6F08               	movwf	EraseFlash@flag& (0+255),b
 15289  01A50E                     l2134:
 15290                           
 15291                           ; BSR set to: 1
 15292  01A50E  0E55               	movlw	85
 15293  01A510  6EA7               	movwf	4007,c	;volatile
 15294  01A512  0EAA               	movlw	170
 15295  01A514  6EA7               	movwf	4007,c	;volatile
 15296                           
 15297                           ; BSR set to: 1
 15298  01A516  82A6               	bsf	4006,1,c	;volatile
 15299  01A518  0101               	movlb	1	; () banked
 15300  01A51A  5108               	movf	EraseFlash@flag& (0+255),w,b
 15301  01A51C  A4D8               	btfss	status,2,c
 15302                           
 15303                           ; BSR set to: 1
 15304  01A51E  8EF2               	bsf	intcon,7,c	;volatile
 15305                           
 15306                           ; BSR set to: 1
 15307                           
 15308                           ; BSR set to: 1
 15309  01A520  0E00               	movlw	0
 15310  01A522  0101               	movlb	1	; () banked
 15311  01A524  2509               	addwf	EraseFlash@flash_addr& (0+255),w,b
 15312  01A526  0101               	movlb	1	; () banked
 15313  01A528  6F09               	movwf	EraseFlash@flash_addr& (0+255),b
 15314  01A52A  0E04               	movlw	4
 15315  01A52C  0101               	movlb	1	; () banked
 15316  01A52E  210A               	addwfc	(EraseFlash@flash_addr+1)& (0+255),w,b
 15317  01A530  0101               	movlb	1	; () banked
 15318  01A532  6F0A               	movwf	(EraseFlash@flash_addr+1)& (0+255),b
 15319  01A534  0E00               	movlw	0
 15320  01A536  0101               	movlb	1	; () banked
 15321  01A538  210B               	addwfc	(EraseFlash@flash_addr+2)& (0+255),w,b
 15322  01A53A  0101               	movlb	1	; () banked
 15323  01A53C  6F0B               	movwf	(EraseFlash@flash_addr+2)& (0+255),b
 15324  01A53E  0E00               	movlw	0
 15325  01A540  0101               	movlb	1	; () banked
 15326  01A542  210C               	addwfc	(EraseFlash@flash_addr+3)& (0+255),w,b
 15327  01A544  0101               	movlb	1	; () banked
 15328  01A546  6F0C               	movwf	(EraseFlash@flash_addr+3)& (0+255),b
 15329  01A548                     l2132:
 15330                           
 15331                           ; BSR set to: 1
 15332  01A548  0101               	movlb	1	; () banked
 15333  01A54A  5104               	movf	EraseFlash@endaddr& (0+255),w,b
 15334  01A54C  0101               	movlb	1	; () banked
 15335  01A54E  5D09               	subwf	EraseFlash@flash_addr& (0+255),w,b
 15336  01A550  0101               	movlb	1	; () banked
 15337  01A552  5105               	movf	(EraseFlash@endaddr+1)& (0+255),w,b
 15338  01A554  0101               	movlb	1	; () banked
 15339  01A556  590A               	subwfb	(EraseFlash@flash_addr+1)& (0+255),w,b
 15340  01A558  0101               	movlb	1	; () banked
 15341  01A55A  5106               	movf	(EraseFlash@endaddr+2)& (0+255),w,b
 15342  01A55C  0101               	movlb	1	; () banked
 15343  01A55E  590B               	subwfb	(EraseFlash@flash_addr+2)& (0+255),w,b
 15344  01A560  0101               	movlb	1	; () banked
 15345  01A562  5107               	movf	(EraseFlash@endaddr+3)& (0+255),w,b
 15346  01A564  0101               	movlb	1	; () banked
 15347  01A566  590C               	subwfb	(EraseFlash@flash_addr+3)& (0+255),w,b
 15348  01A568  B0D8               	btfsc	status,0,c
 15349                           
 15350                           ; BSR set to: 1
 15351                           
 15352                           ; BSR set to: 1
 15353  01A56A  0012               	return	
 15354  01A56C  D7C2               	goto	l2133
 15355  01A56E                     __end_of_EraseFlash:
 15356                           	opt stack 0
 15357                           tblptru	equ	0xFF8
 15358                           tblptrh	equ	0xFF7
 15359                           tblptrl	equ	0xFF6
 15360                           tablat	equ	0xFF5
 15361                           intcon	equ	0xFF2
 15362                           indf0	equ	0xFEF
 15363                           postinc0	equ	0xFEE
 15364                           fsr0h	equ	0xFEA
 15365                           fsr0l	equ	0xFE9
 15366                           wreg	equ	0xFE8
 15367                           indf1	equ	0xFE7
 15368                           postinc1	equ	0xFE6
 15369                           postdec1	equ	0xFE5
 15370                           fsr1h	equ	0xFE2
 15371                           fsr1l	equ	0xFE1
 15372                           indf2	equ	0xFDF
 15373                           postinc2	equ	0xFDE
 15374                           postdec2	equ	0xFDD
 15375                           fsr2h	equ	0xFDA
 15376                           fsr2l	equ	0xFD9
 15377                           status	equ	0xFD8
 15378                           
 15379 ;; *************** function _PowerOn *****************
 15380 ;; Defined at:
 15381 ;;		line 283 in file "Device.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;		None
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;		None
 15386 ;; Return value:  Size  Location     Type
 15387 ;;		None               void
 15388 ;; Registers used:
 15389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15399 ;;Total ram usage:        0 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:   16
 15402 ;; This function calls:
 15403 ;;		_Delay10KTCYx
 15404 ;;		_UpdateMasterVolume
 15405 ;;		_UpdateSampleRate
 15406 ;; This function is called by:
 15407 ;;		_TCPServer
 15408 ;;		_main
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           	psect	text15
 15413  01B088                     __ptext15:
 15414                           	opt stack 0
 15415  01B088                     _PowerOn:
 15416                           	opt stack 13
 15417                           
 15418                           ;Device.c: 285: LATDbits.LD0 = 1;
 15419                           
 15420                           ; BSR set to: 1
 15421                           ;incstack = 0
 15422  01B088  808C               	bsf	3980,0,c	;volatile
 15423                           
 15424                           ;Device.c: 287: Delay10KTCYx(0);
 15425  01B08A  0E00               	movlw	0
 15426  01B08C  EC96  F0DC         	call	_Delay10KTCYx
 15427                           
 15428                           ;Device.c: 288: Delay10KTCYx(0);
 15429  01B090  0E00               	movlw	0
 15430  01B092  EC96  F0DC         	call	_Delay10KTCYx
 15431                           
 15432                           ;Device.c: 289: Delay10KTCYx(0);
 15433  01B096  0E00               	movlw	0
 15434  01B098  EC96  F0DC         	call	_Delay10KTCYx
 15435                           
 15436                           ;Device.c: 290: Delay10KTCYx(0);
 15437  01B09C  0E00               	movlw	0
 15438  01B09E  EC96  F0DC         	call	_Delay10KTCYx
 15439                           
 15440                           ;Device.c: 291: Delay10KTCYx(0);
 15441  01B0A2  0E00               	movlw	0
 15442  01B0A4  EC96  F0DC         	call	_Delay10KTCYx
 15443                           
 15444                           ;Device.c: 292: Delay10KTCYx(0);
 15445  01B0A8  0E00               	movlw	0
 15446  01B0AA  EC96  F0DC         	call	_Delay10KTCYx
 15447                           
 15448                           ;Device.c: 293: Delay10KTCYx(0);
 15449  01B0AE  0E00               	movlw	0
 15450  01B0B0  EC96  F0DC         	call	_Delay10KTCYx
 15451                           
 15452                           ;Device.c: 294: Delay10KTCYx(0);
 15453  01B0B4  0E00               	movlw	0
 15454  01B0B6  EC96  F0DC         	call	_Delay10KTCYx
 15455                           
 15456                           ;Device.c: 295: UpdateMasterVolume();
 15457  01B0BA  EC7C  F0CF         	call	_UpdateMasterVolume	;wreg free
 15458                           
 15459                           ;Device.c: 296: UpdateSampleRate();
 15460  01B0BE  ECD8  F0D0         	call	_UpdateSampleRate	;wreg free
 15461                           
 15462                           ;Device.c: 297: LATDbits.LD2 = 1;
 15463  01B0C2  848C               	bsf	3980,2,c	;volatile
 15464                           
 15465                           ;Device.c: 298: Delay10KTCYx(10);
 15466  01B0C4  0E0A               	movlw	10
 15467  01B0C6  EC96  F0DC         	call	_Delay10KTCYx
 15468                           
 15469                           ;Device.c: 299: LATBbits.LATB5 = 0;
 15470  01B0CA  9A8A               	bcf	3978,5,c	;volatile
 15471                           
 15472                           ;Device.c: 300: LATDbits.LD2 = 0;
 15473  01B0CC  948C               	bcf	3980,2,c	;volatile
 15474                           
 15475                           ;Device.c: 301: LATDbits.LD2 = 1;
 15476  01B0CE  848C               	bsf	3980,2,c	;volatile
 15477  01B0D0  0012               	return	
 15478  01B0D2                     __end_of_PowerOn:
 15479                           	opt stack 0
 15480                           tblptru	equ	0xFF8
 15481                           tblptrh	equ	0xFF7
 15482                           tblptrl	equ	0xFF6
 15483                           tablat	equ	0xFF5
 15484                           intcon	equ	0xFF2
 15485                           indf0	equ	0xFEF
 15486                           postinc0	equ	0xFEE
 15487                           fsr0h	equ	0xFEA
 15488                           fsr0l	equ	0xFE9
 15489                           wreg	equ	0xFE8
 15490                           indf1	equ	0xFE7
 15491                           postinc1	equ	0xFE6
 15492                           postdec1	equ	0xFE5
 15493                           fsr1h	equ	0xFE2
 15494                           fsr1l	equ	0xFE1
 15495                           indf2	equ	0xFDF
 15496                           postinc2	equ	0xFDE
 15497                           postdec2	equ	0xFDD
 15498                           fsr2h	equ	0xFDA
 15499                           fsr2l	equ	0xFD9
 15500                           status	equ	0xFD8
 15501                           
 15502 ;; *************** function _UpdateSampleRate *****************
 15503 ;; Defined at:
 15504 ;;		line 234 in file "Device.c"
 15505 ;; Parameters:    Size  Location     Type
 15506 ;;		None
 15507 ;; Auto vars:     Size  Location     Type
 15508 ;;  srStr           2    5[BANK1 ] PTR const unsigned char 
 15509 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 15510 ;;		 -> STR_9(17), STR_8(17), 
 15511 ;; Return value:  Size  Location     Type
 15512 ;;		None               void
 15513 ;; Registers used:
 15514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15515 ;; Tracked objects:
 15516 ;;		On entry : 0/0
 15517 ;;		On exit  : 0/0
 15518 ;;		Unchanged: 0/0
 15519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15521 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15523 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15524 ;;Total ram usage:        2 bytes
 15525 ;; Hardware stack levels used:    1
 15526 ;; Hardware stack levels required when called:   14
 15527 ;; This function calls:
 15528 ;;		_RefreshLine2Ex
 15529 ;; This function is called by:
 15530 ;;		_TCPServer
 15531 ;;		_PowerOn
 15532 ;; This function uses a non-reentrant model
 15533 ;;
 15534                           
 15535                           	psect	text16
 15536  01A1B0                     __ptext16:
 15537                           	opt stack 0
 15538  01A1B0                     _UpdateSampleRate:
 15539                           	opt stack 15
 15540                           
 15541                           ;Device.c: 246: const char * srStr;
 15542                           ;Device.c: 247: switch(s_dacSettings.SampleRate)
 15543                           
 15544                           ;incstack = 0
 15545  01A1B0  D036               	goto	l13776
 15546  01A1B2                     l13726:
 15547  01A1B2  0EFF               	movlw	high STR_8
 15548  01A1B4  0101               	movlb	1	; () banked
 15549  01A1B6  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 15550  01A1B8  0E60               	movlw	low STR_8
 15551  01A1BA  0101               	movlb	1	; () banked
 15552  01A1BC  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 15553                           
 15554                           ; BSR set to: 1
 15555                           ;Device.c: 250: LATEbits.LE2 = 0;
 15556  01A1BE  948D               	bcf	3981,2,c	;volatile
 15557  01A1C0  D007               	goto	L3
 15558  01A1C2                     l13734:
 15559  01A1C2  0EFF               	movlw	high STR_9
 15560  01A1C4  0101               	movlb	1	; () banked
 15561  01A1C6  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 15562  01A1C8  0E4F               	movlw	low STR_9
 15563  01A1CA  0101               	movlb	1	; () banked
 15564  01A1CC  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 15565                           
 15566                           ; BSR set to: 1
 15567                           ;Device.c: 255: LATEbits.LE2 = 1;
 15568  01A1CE  848D               	bsf	3981,2,c	;volatile
 15569  01A1D0                     L3:
 15570                           
 15571                           ; BSR set to: 1
 15572                           ;Device.c: 256: LATEbits.LE1 = 0;
 15573  01A1D0  928D               	bcf	3981,1,c	;volatile
 15574  01A1D2  D008               	goto	L4
 15575  01A1D4                     l13742:
 15576  01A1D4  0EFF               	movlw	high STR_10
 15577  01A1D6  0101               	movlb	1	; () banked
 15578  01A1D8  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 15579  01A1DA  0E71               	movlw	low STR_10
 15580  01A1DC  0101               	movlb	1	; () banked
 15581  01A1DE  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 15582                           
 15583                           ; BSR set to: 1
 15584                           ;Device.c: 260: LATEbits.LE2 = 0;
 15585  01A1E0  948D               	bcf	3981,2,c	;volatile
 15586  01A1E2  D009               	goto	L5
 15587  01A1E4                     L4:
 15588                           
 15589                           ; BSR set to: 1
 15590                           ;Device.c: 262: LATEbits.LE0 = 0;
 15591  01A1E4  908D               	bcf	3981,0,c	;volatile
 15592                           
 15593                           ;Device.c: 263: break;
 15594  01A1E6  D02D               	goto	l13778
 15595  01A1E8                     l13750:
 15596  01A1E8  0EFF               	movlw	high STR_11
 15597  01A1EA  0101               	movlb	1	; () banked
 15598  01A1EC  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 15599  01A1EE  0E3E               	movlw	low STR_11
 15600  01A1F0  0101               	movlb	1	; () banked
 15601  01A1F2  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 15602                           
 15603                           ; BSR set to: 1
 15604                           ;Device.c: 265: LATEbits.LE2 = 1;
 15605  01A1F4  848D               	bsf	3981,2,c	;volatile
 15606  01A1F6                     L5:
 15607                           
 15608                           ; BSR set to: 1
 15609                           ;Device.c: 266: LATEbits.LE1 = 1;
 15610  01A1F6  828D               	bsf	3981,1,c	;volatile
 15611  01A1F8  D7F5               	goto	L4
 15612  01A1FA                     l13758:
 15613  01A1FA  0EFF               	movlw	high STR_12
 15614  01A1FC  0101               	movlb	1	; () banked
 15615  01A1FE  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 15616  01A200  0E2D               	movlw	low STR_12
 15617  01A202  0101               	movlb	1	; () banked
 15618  01A204  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 15619                           
 15620                           ; BSR set to: 1
 15621                           ;Device.c: 270: LATEbits.LE2 = 1;
 15622  01A206  848D               	bsf	3981,2,c	;volatile
 15623  01A208  D007               	goto	L6
 15624  01A20A                     l13766:
 15625  01A20A  0EFF               	movlw	high STR_13
 15626  01A20C  0101               	movlb	1	; () banked
 15627  01A20E  6F06               	movwf	(UpdateSampleRate@srStr+1)& (0+255),b
 15628  01A210  0E82               	movlw	low STR_13
 15629  01A212  0101               	movlb	1	; () banked
 15630  01A214  6F05               	movwf	UpdateSampleRate@srStr& (0+255),b
 15631                           
 15632                           ; BSR set to: 1
 15633                           ;Device.c: 275: LATEbits.LE2 = 0;
 15634  01A216  948D               	bcf	3981,2,c	;volatile
 15635  01A218                     L6:
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;Device.c: 276: LATEbits.LE1 = 0;
 15639  01A218  928D               	bcf	3981,1,c	;volatile
 15640                           
 15641                           ; BSR set to: 1
 15642                           ;Device.c: 277: LATEbits.LE0 = 1;
 15643  01A21A  808D               	bsf	3981,0,c	;volatile
 15644                           
 15645                           ;Device.c: 278: break;
 15646  01A21C  D012               	goto	l13778
 15647  01A21E                     l13776:
 15648  01A21E  0102               	movlb	2	; () banked
 15649  01A220  51D4               	movf	(_s_dacSettings+1)& (0+255),w,b
 15650                           
 15651                           ; Switch size 1, requested type "space"
 15652                           ; Number of cases is 5, Range of values is 0 to 5
 15653                           ; switch strategies available:
 15654                           ; Name         Instructions Cycles
 15655                           ; simple_byte           16     9 (average)
 15656                           ;	Chosen strategy is simple_byte
 15657  01A222  0A00               	xorlw	0	; case 0
 15658  01A224  B4D8               	btfsc	status,2,c
 15659  01A226  D7C5               	goto	l13726
 15660  01A228  0A01               	xorlw	1	; case 1
 15661  01A22A  B4D8               	btfsc	status,2,c
 15662  01A22C  D7CA               	goto	l13734
 15663  01A22E  0A03               	xorlw	3	; case 2
 15664  01A230  B4D8               	btfsc	status,2,c
 15665  01A232  D7D0               	goto	l13742
 15666  01A234  0A01               	xorlw	1	; case 3
 15667  01A236  B4D8               	btfsc	status,2,c
 15668  01A238  D7D7               	goto	l13750
 15669  01A23A  0A06               	xorlw	6	; case 5
 15670  01A23C  B4D8               	btfsc	status,2,c
 15671  01A23E  D7DD               	goto	l13758
 15672  01A240  D7E4               	goto	l13766
 15673  01A242                     l13778:
 15674                           
 15675                           ;Device.c: 280: RefreshLine2Ex(srStr);
 15676  01A242  0101               	movlb	1	; () banked
 15677  01A244  C106  F104         	movff	UpdateSampleRate@srStr+1,RefreshLine2Ex@line+1
 15678  01A248  0101               	movlb	1	; () banked
 15679  01A24A  C105  F103         	movff	UpdateSampleRate@srStr,RefreshLine2Ex@line
 15680  01A24E  ECBF  F0DC         	call	_RefreshLine2Ex	;wreg free
 15681  01A252  0012               	return	
 15682  01A254                     __end_of_UpdateSampleRate:
 15683                           	opt stack 0
 15684                           tblptru	equ	0xFF8
 15685                           tblptrh	equ	0xFF7
 15686                           tblptrl	equ	0xFF6
 15687                           tablat	equ	0xFF5
 15688                           intcon	equ	0xFF2
 15689                           indf0	equ	0xFEF
 15690                           postinc0	equ	0xFEE
 15691                           fsr0h	equ	0xFEA
 15692                           fsr0l	equ	0xFE9
 15693                           wreg	equ	0xFE8
 15694                           indf1	equ	0xFE7
 15695                           postinc1	equ	0xFE6
 15696                           postdec1	equ	0xFE5
 15697                           fsr1h	equ	0xFE2
 15698                           fsr1l	equ	0xFE1
 15699                           indf2	equ	0xFDF
 15700                           postinc2	equ	0xFDE
 15701                           postdec2	equ	0xFDD
 15702                           fsr2h	equ	0xFDA
 15703                           fsr2l	equ	0xFD9
 15704                           status	equ	0xFD8
 15705                           
 15706 ;; *************** function _RefreshLine2Ex *****************
 15707 ;; Defined at:
 15708 ;;		line 25 in file "LCD.c"
 15709 ;; Parameters:    Size  Location     Type
 15710 ;;  line            2    3[BANK1 ] PTR const unsigned char 
 15711 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 15712 ;;		 -> STR_9(17), STR_8(17), dispbuf2(17), 
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;		None               void
 15717 ;; Registers used:
 15718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15724 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15727 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15728 ;;Total ram usage:        2 bytes
 15729 ;; Hardware stack levels used:    1
 15730 ;; Hardware stack levels required when called:   13
 15731 ;; This function calls:
 15732 ;;		_PutsSLCD
 15733 ;;		_SLCDSetDDRamAddr
 15734 ;; This function is called by:
 15735 ;;		_UpdateSampleRate
 15736 ;;		_RefreshLine2
 15737 ;; This function uses a non-reentrant model
 15738 ;;
 15739                           
 15740                           	psect	text17
 15741  01B97E                     __ptext17:
 15742                           	opt stack 0
 15743  01B97E                     _RefreshLine2Ex:
 15744                           	opt stack 15
 15745                           
 15746                           ;LCD.c: 27: SLCDSetDDRamAddr(0x40);
 15747                           
 15748                           ;incstack = 0
 15749  01B97E  0E40               	movlw	64
 15750  01B980  ECB2  F0DC         	call	_SLCDSetDDRamAddr
 15751                           
 15752                           ;LCD.c: 28: PutsSLCD(line);
 15753  01B984  0101               	movlb	1	; () banked
 15754  01B986  C104  F102         	movff	RefreshLine2Ex@line+1,PutsSLCD@buffer+1
 15755  01B98A  0101               	movlb	1	; () banked
 15756  01B98C  C103  F101         	movff	RefreshLine2Ex@line,PutsSLCD@buffer
 15757  01B990  EC05  F0D6         	call	_PutsSLCD	;wreg free
 15758  01B994  0012               	return	
 15759  01B996                     __end_of_RefreshLine2Ex:
 15760                           	opt stack 0
 15761                           tblptru	equ	0xFF8
 15762                           tblptrh	equ	0xFF7
 15763                           tblptrl	equ	0xFF6
 15764                           tablat	equ	0xFF5
 15765                           intcon	equ	0xFF2
 15766                           indf0	equ	0xFEF
 15767                           postinc0	equ	0xFEE
 15768                           fsr0h	equ	0xFEA
 15769                           fsr0l	equ	0xFE9
 15770                           wreg	equ	0xFE8
 15771                           indf1	equ	0xFE7
 15772                           postinc1	equ	0xFE6
 15773                           postdec1	equ	0xFE5
 15774                           fsr1h	equ	0xFE2
 15775                           fsr1l	equ	0xFE1
 15776                           indf2	equ	0xFDF
 15777                           postinc2	equ	0xFDE
 15778                           postdec2	equ	0xFDD
 15779                           fsr2h	equ	0xFDA
 15780                           fsr2l	equ	0xFD9
 15781                           status	equ	0xFD8
 15782                           
 15783 ;; *************** function _UpdateMasterVolume *****************
 15784 ;; Defined at:
 15785 ;;		line 161 in file "Device.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;		None
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;  dvol            3  126[BANK1 ] PTR const unsigned char 
 15790 ;;  i               1  129[BANK1 ] unsigned char 
 15791 ;; Return value:  Size  Location     Type
 15792 ;;		None               void
 15793 ;; Registers used:
 15794 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15803 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15804 ;;Total ram usage:        6 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:   15
 15807 ;; This function calls:
 15808 ;;		_RefreshLine1
 15809 ;;		_SendVolumeToDevice
 15810 ;;		___awtoft
 15811 ;;		___ftdiv
 15812 ;;		_sprintf
 15813 ;; This function is called by:
 15814 ;;		_TCPServer
 15815 ;;		_PowerOn
 15816 ;; This function uses a non-reentrant model
 15817 ;;
 15818                           
 15819                           	psect	text18
 15820  019EF8                     __ptext18:
 15821                           	opt stack 0
 15822  019EF8                     _UpdateMasterVolume:
 15823                           	opt stack 14
 15824                           
 15825                           ;Device.c: 163: double dvol = -s_dacSettings.Volume / 8.0;
 15826                           
 15827                           ;incstack = 0
 15828  019EF8  0102               	movlb	2	; () banked
 15829  019EFA  51D5               	movf	(_s_dacSettings+2)& (0+255),w,b
 15830  019EFC  0101               	movlb	1	; () banked
 15831  019EFE  6F7C               	movwf	??_UpdateMasterVolume& (0+255),b
 15832  019F00  6B7D               	clrf	(??_UpdateMasterVolume+1)& (0+255),b
 15833  019F02  0101               	movlb	1	; () banked
 15834  019F04  1F7C               	comf	??_UpdateMasterVolume& (0+255),f,b
 15835  019F06  1F7D               	comf	(??_UpdateMasterVolume+1)& (0+255),f,b
 15836  019F08  4B7C               	infsnz	??_UpdateMasterVolume& (0+255),f,b
 15837  019F0A  2B7D               	incf	(??_UpdateMasterVolume+1)& (0+255),f,b
 15838  019F0C  C17C  F108         	movff	??_UpdateMasterVolume,___awtoft@c
 15839  019F10  C17D  F109         	movff	??_UpdateMasterVolume+1,___awtoft@c+1
 15840  019F14  EC91  F0D7         	call	___awtoft	;wreg free
 15841  019F18  C108  F10C         	movff	?___awtoft,___ftdiv@f1
 15842  019F1C  C109  F10D         	movff	?___awtoft+1,___ftdiv@f1+1
 15843  019F20  C10A  F10E         	movff	?___awtoft+2,___ftdiv@f1+2
 15844  019F24  0E00               	movlw	0
 15845  019F26  0101               	movlb	1	; () banked
 15846  019F28  6F0F               	movwf	___ftdiv@f2& (0+255),b
 15847  019F2A  0E00               	movlw	0
 15848  019F2C  0101               	movlb	1	; () banked
 15849  019F2E  6F10               	movwf	(___ftdiv@f2+1)& (0+255),b
 15850  019F30  0E41               	movlw	65
 15851  019F32  0101               	movlb	1	; () banked
 15852  019F34  6F11               	movwf	(___ftdiv@f2+2)& (0+255),b
 15853  019F36  ECC8  F0BD         	call	___ftdiv	;wreg free
 15854  019F3A  C10C  F17E         	movff	?___ftdiv,UpdateMasterVolume@dvol
 15855  019F3E  C10D  F17F         	movff	?___ftdiv+1,UpdateMasterVolume@dvol+1
 15856  019F42  C10E  F180         	movff	?___ftdiv+2,UpdateMasterVolume@dvol+2
 15857                           
 15858                           ;Device.c: 165: uint8_t i = sprintf( &dispbuf1, "Volume %7.3fdB", dvol);
 15859  019F46  0102               	movlb	2	; () banked
 15860  019F48  0E02               	movlw	high _dispbuf1
 15861  019F4A  0101               	movlb	1	; () banked
 15862  019F4C  6F49               	movwf	(sprintf@sp+1)& (0+255),b
 15863  019F4E  0102               	movlb	2	; () banked
 15864  019F50  0E8B               	movlw	low _dispbuf1
 15865  019F52  0101               	movlb	1	; () banked
 15866  019F54  6F48               	movwf	sprintf@sp& (0+255),b
 15867  019F56  0EFF               	movlw	high STR_7
 15868  019F58  0101               	movlb	1	; () banked
 15869  019F5A  6F4B               	movwf	(sprintf@f+1)& (0+255),b
 15870  019F5C  0EE8               	movlw	low STR_7
 15871  019F5E  0101               	movlb	1	; () banked
 15872  019F60  6F4A               	movwf	sprintf@f& (0+255),b
 15873  019F62  C17E  F14C         	movff	UpdateMasterVolume@dvol,?_sprintf+4
 15874  019F66  C17F  F14D         	movff	UpdateMasterVolume@dvol+1,?_sprintf+5
 15875  019F6A  C180  F14E         	movff	UpdateMasterVolume@dvol+2,?_sprintf+6
 15876  019F6E  EC00  F0F8         	call	_sprintf	;wreg free
 15877  019F72  0101               	movlb	1	; () banked
 15878  019F74  5148               	movf	?_sprintf& (0+255),w,b
 15879  019F76  0101               	movlb	1	; () banked
 15880  019F78  6F81               	movwf	UpdateMasterVolume@i& (0+255),b
 15881  019F7A  D00F               	goto	L7
 15882  019F7C                     l13826:
 15883                           
 15884                           ; BSR set to: 1
 15885  019F7C  0101               	movlb	1	; () banked
 15886  019F7E  5181               	movf	UpdateMasterVolume@i& (0+255),w,b
 15887  019F80  0D01               	mullw	1
 15888  019F82  0102               	movlb	2	; () banked
 15889  019F84  0E8B               	movlw	low _dispbuf1
 15890  019F86  24F3               	addwf	prodl,w,c
 15891  019F88  6ED9               	movwf	fsr2l,c
 15892  019F8A  0102               	movlb	2	; () banked
 15893  019F8C  0E02               	movlw	high _dispbuf1
 15894  019F8E  20F4               	addwfc	prodh,w,c
 15895  019F90  6EDA               	movwf	fsr2h,c
 15896  019F92  0E20               	movlw	32
 15897  019F94  6EDF               	movwf	indf2,c
 15898                           
 15899                           ; BSR set to: 2
 15900  019F96  0101               	movlb	1	; () banked
 15901  019F98  2B81               	incf	UpdateMasterVolume@i& (0+255),f,b
 15902  019F9A                     L7:
 15903                           
 15904                           ; BSR set to: 1
 15905  019F9A  0E0F               	movlw	15
 15906  019F9C  0101               	movlb	1	; () banked
 15907  019F9E  6581               	cpfsgt	UpdateMasterVolume@i& (0+255),b
 15908  019FA0  D7ED               	goto	l13826
 15909                           
 15910                           ; BSR set to: 1
 15911                           ;Device.c: 167: dispbuf1[16] = 0;
 15912                           
 15913                           ; BSR set to: 1
 15914  019FA2  0E00               	movlw	0
 15915  019FA4  0102               	movlb	2	; () banked
 15916  019FA6  6F9B               	movwf	(_dispbuf1+16)& (0+255),b
 15917                           
 15918                           ; BSR set to: 2
 15919                           ;Device.c: 168: RefreshLine1();
 15920  019FA8  ECE2  F0DC         	call	_RefreshLine1	;wreg free
 15921                           
 15922                           ;Device.c: 170: SendVolumeToDevice();
 15923  019FAC  ECD7  F0DC         	call	_SendVolumeToDevice	;wreg free
 15924  019FB0  0012               	return	
 15925  019FB2                     __end_of_UpdateMasterVolume:
 15926                           	opt stack 0
 15927                           tblptru	equ	0xFF8
 15928                           tblptrh	equ	0xFF7
 15929                           tblptrl	equ	0xFF6
 15930                           tablat	equ	0xFF5
 15931                           prodh	equ	0xFF4
 15932                           prodl	equ	0xFF3
 15933                           intcon	equ	0xFF2
 15934                           indf0	equ	0xFEF
 15935                           postinc0	equ	0xFEE
 15936                           fsr0h	equ	0xFEA
 15937                           fsr0l	equ	0xFE9
 15938                           wreg	equ	0xFE8
 15939                           indf1	equ	0xFE7
 15940                           postinc1	equ	0xFE6
 15941                           postdec1	equ	0xFE5
 15942                           fsr1h	equ	0xFE2
 15943                           fsr1l	equ	0xFE1
 15944                           indf2	equ	0xFDF
 15945                           postinc2	equ	0xFDE
 15946                           postdec2	equ	0xFDD
 15947                           fsr2h	equ	0xFDA
 15948                           fsr2l	equ	0xFD9
 15949                           status	equ	0xFD8
 15950                           
 15951 ;; *************** function _sprintf *****************
 15952 ;; Defined at:
 15953 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 15954 ;; Parameters:    Size  Location     Type
 15955 ;;  sp              2   72[BANK1 ] PTR unsigned char 
 15956 ;;		 -> dispbuf1(17), 
 15957 ;;  f               2   74[BANK1 ] PTR const unsigned char 
 15958 ;;		 -> STR_7(15), 
 15959 ;; Auto vars:     Size  Location     Type
 15960 ;;  vd              4   94[BANK1 ] unsigned long 
 15961 ;;  vd              4   98[BANK1 ] unsigned long 
 15962 ;;  _val            5  107[BANK1 ] struct .
 15963 ;;  fval            3  118[BANK1 ] struct .
 15964 ;;  integ           3  104[BANK1 ] struct .
 15965 ;;  ival            3    0        struct .
 15966 ;;  prec            2  121[BANK1 ] int 
 15967 ;;  exp             2  116[BANK1 ] int 
 15968 ;;  width           2  114[BANK1 ] int 
 15969 ;;  flag            2  112[BANK1 ] unsigned short 
 15970 ;;  ccnt            2  102[BANK1 ] int 
 15971 ;;  ap              2   92[BANK1 ] PTR void [1]
 15972 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 15973 ;;  c               1  123[BANK1 ] char 
 15974 ;;  d               1    0        unsigned char 
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  2   72[BANK1 ] int 
 15977 ;; Registers used:
 15978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/0
 15981 ;;		On exit  : 0/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 15984 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15985 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15986 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15987 ;;      Totals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15988 ;;Total ram usage:       52 bytes
 15989 ;; Hardware stack levels used:    1
 15990 ;; Hardware stack levels required when called:   13
 15991 ;; This function calls:
 15992 ;;		___awdiv
 15993 ;;		___ftadd
 15994 ;;		___ftge
 15995 ;;		___ftmul
 15996 ;;		___ftneg
 15997 ;;		___ftsub
 15998 ;;		___fttol
 15999 ;;		___lldiv
 16000 ;;		___llmod
 16001 ;;		___lltoft
 16002 ;;		___wmul
 16003 ;;		__div_to_l_
 16004 ;;		__tdiv_to_l_
 16005 ;;		_fround
 16006 ;;		_isdigit
 16007 ;;		_scale
 16008 ;; This function is called by:
 16009 ;;		_UpdateMasterVolume
 16010 ;; This function uses a non-reentrant model
 16011 ;;
 16012                           
 16013                           	psect	text19
 16014  01F000                     __ptext19:
 16015                           	opt stack 0
 16016  01F000                     _sprintf:
 16017                           	opt stack 15
 16018                           
 16019                           ;doprnt.c: 494: va_list ap;
 16020                           ;doprnt.c: 499: signed char c;
 16021                           ;doprnt.c: 501: int width;
 16022                           ;doprnt.c: 504: int prec;
 16023                           ;doprnt.c: 508: unsigned short flag;
 16024                           ;doprnt.c: 510: int ccnt = 0;
 16025                           
 16026                           ;incstack = 0
 16027  01F000  0E00               	movlw	0
 16028  01F002  0101               	movlb	1	; () banked
 16029  01F004  6F67               	movwf	(sprintf@ccnt+1)& (0+255),b
 16030  01F006  0E00               	movlw	0
 16031  01F008  0101               	movlb	1	; () banked
 16032  01F00A  6F66               	movwf	sprintf@ccnt& (0+255),b
 16033                           
 16034                           ; BSR set to: 1
 16035                           ;doprnt.c: 515: char d;
 16036                           ;doprnt.c: 516: double fval, integ;
 16037                           ;doprnt.c: 517: int exp;
 16038                           ;doprnt.c: 518: double ival;
 16039                           ;doprnt.c: 519: union {
 16040                           ;doprnt.c: 520: unsigned long _val;
 16041                           ;doprnt.c: 521: struct {
 16042                           ;doprnt.c: 522: const char * _cp;
 16043                           ;doprnt.c: 523: unsigned _len;
 16044                           ;doprnt.c: 524: } _str;
 16045                           ;doprnt.c: 525: } _val;
 16046                           ;doprnt.c: 542: *ap = __va_start();
 16047  01F00C  0101               	movlb	1	; () banked
 16048  01F00E  0E01               	movlw	high (?_sprintf+4)
 16049  01F010  0101               	movlb	1	; () banked
 16050  01F012  6F5D               	movwf	(sprintf@ap+1)& (0+255),b
 16051  01F014  0101               	movlb	1	; () banked
 16052  01F016  0E4C               	movlw	low (?_sprintf+4)
 16053  01F018  0101               	movlb	1	; () banked
 16054  01F01A  6F5C               	movwf	sprintf@ap& (0+255),b
 16055                           
 16056                           ;doprnt.c: 545: while(c = *f++) {
 16057  01F01C  EF9E  F0FD         	goto	l12672
 16058  01F020                     l12396:
 16059                           
 16060                           ; BSR set to: 1
 16061                           ;doprnt.c: 547: if(c != '%')
 16062  01F020  0101               	movlb	1	; () banked
 16063  01F022  517B               	movf	sprintf@c& (0+255),w,b
 16064  01F024  0A25               	xorlw	37
 16065  01F026  B4D8               	btfsc	status,2,c
 16066  01F028  D009               	goto	l12404
 16067                           
 16068                           ; BSR set to: 1
 16069                           ;doprnt.c: 549: {
 16070                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
 16071  01F02A  C148  FFD9         	movff	sprintf@sp,fsr2l
 16072  01F02E  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 16073  01F032  0101               	movlb	1	; () banked
 16074  01F034  C17B  FFDF         	movff	sprintf@c,indf2
 16075  01F038  EF98  F0FD         	goto	L8
 16076  01F03C                     l12404:
 16077                           
 16078                           ; BSR set to: 1
 16079                           ;doprnt.c: 552: }
 16080                           ;doprnt.c: 555: width = 0;
 16081  01F03C  0E00               	movlw	0
 16082  01F03E  0101               	movlb	1	; () banked
 16083  01F040  6F73               	movwf	(sprintf@width+1)& (0+255),b
 16084  01F042  0E00               	movlw	0
 16085  01F044  0101               	movlb	1	; () banked
 16086  01F046  6F72               	movwf	sprintf@width& (0+255),b
 16087                           
 16088                           ;doprnt.c: 557: flag = 0;
 16089  01F048  0E00               	movlw	0
 16090  01F04A  0101               	movlb	1	; () banked
 16091  01F04C  6F71               	movwf	(sprintf@flag+1)& (0+255),b
 16092  01F04E  0E00               	movlw	0
 16093  01F050  0101               	movlb	1	; () banked
 16094  01F052  6F70               	movwf	sprintf@flag& (0+255),b
 16095                           
 16096                           ; BSR set to: 1
 16097                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 16098  01F054  0101               	movlb	1	; () banked
 16099  01F056  C14A  FFF6         	movff	sprintf@f,tblptrl
 16100  01F05A  0101               	movlb	1	; () banked
 16101  01F05C  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16102  01F060                     	if	0	;tblptru may be non-zero
 16103  01F060                     	endif
 16104  01F060                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16105  01F060  0E00               	movlw	low (__mediumconst shr (0+16))
 16106  01F062  6EF8               	movwf	tblptru,c
 16107  01F064                     	endif
 16108  01F064  0008               	tblrd		*
 16109  01F066  50F5               	movf	tablat,w,c
 16110  01F068  EC2B  F0DB         	call	_isdigit
 16111  01F06C  A0D8               	btfss	status,0,c
 16112  01F06E  D04B               	goto	l12418
 16113                           
 16114                           ;doprnt.c: 607: width = 0;
 16115  01F070  0E00               	movlw	0
 16116  01F072  0101               	movlb	1	; () banked
 16117  01F074  6F73               	movwf	(sprintf@width+1)& (0+255),b
 16118  01F076  0E00               	movlw	0
 16119  01F078  0101               	movlb	1	; () banked
 16120  01F07A  6F72               	movwf	sprintf@width& (0+255),b
 16121  01F07C                     l12410:
 16122                           
 16123                           ;doprnt.c: 609: width *= 10;
 16124  01F07C  C172  F10E         	movff	sprintf@width,___wmul@multiplier
 16125  01F080  C173  F10F         	movff	sprintf@width+1,___wmul@multiplier+1
 16126  01F084  0E00               	movlw	0
 16127  01F086  0101               	movlb	1	; () banked
 16128  01F088  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16129  01F08A  0E0A               	movlw	10
 16130  01F08C  0101               	movlb	1	; () banked
 16131  01F08E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 16132  01F090  EC15  F0DA         	call	___wmul	;wreg free
 16133  01F094  0101               	movlb	1	; () banked
 16134  01F096  C10E  F172         	movff	?___wmul,sprintf@width
 16135  01F09A  0101               	movlb	1	; () banked
 16136  01F09C  C10F  F173         	movff	?___wmul+1,sprintf@width+1
 16137                           
 16138                           ; BSR set to: 1
 16139                           ;doprnt.c: 610: width += *f++ - '0';
 16140  01F0A0  0ED0               	movlw	208
 16141  01F0A2  0101               	movlb	1	; () banked
 16142  01F0A4  6F4F               	movwf	??_sprintf& (0+255),b
 16143  01F0A6  0EFF               	movlw	255
 16144  01F0A8  6F50               	movwf	(??_sprintf+1)& (0+255),b
 16145  01F0AA  0101               	movlb	1	; () banked
 16146  01F0AC  C14A  FFF6         	movff	sprintf@f,tblptrl
 16147  01F0B0  0101               	movlb	1	; () banked
 16148  01F0B2  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16149  01F0B6                     	if	0	;tblptru may be non-zero
 16150  01F0B6                     	endif
 16151  01F0B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16152  01F0B6  0E00               	movlw	low (__mediumconst shr (0+16))
 16153  01F0B8  6EF8               	movwf	tblptru,c
 16154  01F0BA                     	endif
 16155  01F0BA  0008               	tblrd		*
 16156  01F0BC  50F5               	movf	tablat,w,c
 16157  01F0BE  0101               	movlb	1	; () banked
 16158  01F0C0  6F51               	movwf	(??_sprintf+2)& (0+255),b
 16159  01F0C2  6B52               	clrf	(??_sprintf+3)& (0+255),b
 16160  01F0C4  0101               	movlb	1	; () banked
 16161  01F0C6  514F               	movf	??_sprintf& (0+255),w,b
 16162  01F0C8  0101               	movlb	1	; () banked
 16163  01F0CA  2751               	addwf	(??_sprintf+2)& (0+255),f,b
 16164  01F0CC  0101               	movlb	1	; () banked
 16165  01F0CE  5150               	movf	(??_sprintf+1)& (0+255),w,b
 16166  01F0D0  0101               	movlb	1	; () banked
 16167  01F0D2  2352               	addwfc	(??_sprintf+3)& (0+255),f,b
 16168  01F0D4  0101               	movlb	1	; () banked
 16169  01F0D6  5151               	movf	(??_sprintf+2)& (0+255),w,b
 16170  01F0D8  0101               	movlb	1	; () banked
 16171  01F0DA  2772               	addwf	sprintf@width& (0+255),f,b
 16172  01F0DC  0101               	movlb	1	; () banked
 16173  01F0DE  5152               	movf	(??_sprintf+3)& (0+255),w,b
 16174  01F0E0  0101               	movlb	1	; () banked
 16175  01F0E2  2373               	addwfc	(sprintf@width+1)& (0+255),f,b
 16176                           
 16177                           ; BSR set to: 1
 16178  01F0E4  0101               	movlb	1	; () banked
 16179  01F0E6  4B4A               	infsnz	sprintf@f& (0+255),f,b
 16180  01F0E8  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 16181                           
 16182                           ; BSR set to: 1
 16183                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 16184  01F0EA  0101               	movlb	1	; () banked
 16185  01F0EC  C14A  FFF6         	movff	sprintf@f,tblptrl
 16186  01F0F0  0101               	movlb	1	; () banked
 16187  01F0F2  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16188  01F0F6                     	if	0	;tblptru may be non-zero
 16189  01F0F6                     	endif
 16190  01F0F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16191  01F0F6  0E00               	movlw	low (__mediumconst shr (0+16))
 16192  01F0F8  6EF8               	movwf	tblptru,c
 16193  01F0FA                     	endif
 16194  01F0FA  0008               	tblrd		*
 16195  01F0FC  50F5               	movf	tablat,w,c
 16196  01F0FE  EC2B  F0DB         	call	_isdigit
 16197  01F102  B0D8               	btfsc	status,0,c
 16198  01F104  D7BB               	goto	l12410
 16199  01F106                     l12418:
 16200                           
 16201                           ;doprnt.c: 617: }
 16202                           ;doprnt.c: 620: if(*f == '.') {
 16203  01F106  0101               	movlb	1	; () banked
 16204  01F108  C14A  FFF6         	movff	sprintf@f,tblptrl
 16205  01F10C  0101               	movlb	1	; () banked
 16206  01F10E  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16207  01F112                     	if	0	;tblptru may be non-zero
 16208  01F112                     	endif
 16209  01F112                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16210  01F112  0E00               	movlw	low (__mediumconst shr (0+16))
 16211  01F114  6EF8               	movwf	tblptru,c
 16212  01F116                     	endif
 16213  01F116  0008               	tblrd		*
 16214  01F118  50F5               	movf	tablat,w,c
 16215  01F11A  0A2E               	xorlw	46
 16216  01F11C  A4D8               	btfss	status,2,c
 16217  01F11E  D043               	goto	l12430
 16218                           
 16219                           ; BSR set to: 1
 16220                           ;doprnt.c: 621: flag |= 0x4000;
 16221  01F120  0101               	movlb	1	; () banked
 16222  01F122  8D71               	bsf	(sprintf@flag+1)& (0+255),6,b
 16223                           
 16224                           ;doprnt.c: 622: f++;
 16225  01F124  0101               	movlb	1	; () banked
 16226  01F126  4B4A               	infsnz	sprintf@f& (0+255),f,b
 16227  01F128  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 16228                           
 16229                           ; BSR set to: 1
 16230                           ;doprnt.c: 629: {
 16231                           ;doprnt.c: 630: prec = 0;
 16232  01F12A  0E00               	movlw	0
 16233  01F12C  0101               	movlb	1	; () banked
 16234  01F12E  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 16235  01F130  0E00               	movlw	0
 16236  01F132  0101               	movlb	1	; () banked
 16237  01F134  6F79               	movwf	sprintf@prec& (0+255),b
 16238                           
 16239                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 16240  01F136  D028               	goto	l12428
 16241  01F138                     l12424:
 16242                           
 16243                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 16244  01F138  C179  F10E         	movff	sprintf@prec,___wmul@multiplier
 16245  01F13C  C17A  F10F         	movff	sprintf@prec+1,___wmul@multiplier+1
 16246  01F140  0E00               	movlw	0
 16247  01F142  0101               	movlb	1	; () banked
 16248  01F144  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16249  01F146  0E0A               	movlw	10
 16250  01F148  0101               	movlb	1	; () banked
 16251  01F14A  6F10               	movwf	___wmul@multiplicand& (0+255),b
 16252  01F14C  EC15  F0DA         	call	___wmul	;wreg free
 16253  01F150  0101               	movlb	1	; () banked
 16254  01F152  C14A  FFF6         	movff	sprintf@f,tblptrl
 16255  01F156  0101               	movlb	1	; () banked
 16256  01F158  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16257  01F15C                     	if	0	;tblptru may be non-zero
 16258  01F15C                     	endif
 16259  01F15C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16260  01F15C  0E00               	movlw	low (__mediumconst shr (0+16))
 16261  01F15E  6EF8               	movwf	tblptru,c
 16262  01F160                     	endif
 16263  01F160  0008               	tblrd		*
 16264  01F162  50F5               	movf	tablat,w,c
 16265  01F164  0101               	movlb	1	; () banked
 16266  01F166  270E               	addwf	?___wmul& (0+255),f,b
 16267  01F168  0E00               	movlw	0
 16268  01F16A  0101               	movlb	1	; () banked
 16269  01F16C  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 16270  01F16E  0ED0               	movlw	208
 16271  01F170  0101               	movlb	1	; () banked
 16272  01F172  250E               	addwf	?___wmul& (0+255),w,b
 16273  01F174  0101               	movlb	1	; () banked
 16274  01F176  6F79               	movwf	sprintf@prec& (0+255),b
 16275  01F178  0EFF               	movlw	255
 16276  01F17A  0101               	movlb	1	; () banked
 16277  01F17C  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 16278  01F17E  0101               	movlb	1	; () banked
 16279  01F180  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 16280                           
 16281                           ; BSR set to: 1
 16282  01F182  0101               	movlb	1	; () banked
 16283  01F184  4B4A               	infsnz	sprintf@f& (0+255),f,b
 16284  01F186  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 16285  01F188                     l12428:
 16286                           
 16287                           ; BSR set to: 1
 16288  01F188  0101               	movlb	1	; () banked
 16289  01F18A  C14A  FFF6         	movff	sprintf@f,tblptrl
 16290  01F18E  0101               	movlb	1	; () banked
 16291  01F190  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16292  01F194                     	if	0	;tblptru may be non-zero
 16293  01F194                     	endif
 16294  01F194                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16295  01F194  0E00               	movlw	low (__mediumconst shr (0+16))
 16296  01F196  6EF8               	movwf	tblptru,c
 16297  01F198                     	endif
 16298  01F198  0008               	tblrd		*
 16299  01F19A  50F5               	movf	tablat,w,c
 16300  01F19C  EC2B  F0DB         	call	_isdigit
 16301  01F1A0  A0D8               	btfss	status,0,c
 16302  01F1A2  D00D               	goto	l12438
 16303  01F1A4  D7C9               	goto	l12424
 16304  01F1A6                     l12430:
 16305                           
 16306                           ;doprnt.c: 635: prec = 0;
 16307  01F1A6  0E00               	movlw	0
 16308  01F1A8  0101               	movlb	1	; () banked
 16309  01F1AA  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 16310  01F1AC  0E00               	movlw	0
 16311  01F1AE  0101               	movlb	1	; () banked
 16312  01F1B0  6F79               	movwf	sprintf@prec& (0+255),b
 16313                           
 16314                           ; BSR set to: 1
 16315                           ;doprnt.c: 637: flag |= 0x1000;
 16316  01F1B2  0101               	movlb	1	; () banked
 16317  01F1B4  8971               	bsf	(sprintf@flag+1)& (0+255),4,b
 16318  01F1B6  D003               	goto	l12438
 16319  01F1B8                     l12434:
 16320                           
 16321                           ; BSR set to: 1
 16322                           ;doprnt.c: 672: flag |= 0x400;
 16323  01F1B8  0101               	movlb	1	; () banked
 16324  01F1BA  8571               	bsf	(sprintf@flag+1)& (0+255),2,b
 16325                           
 16326                           ;doprnt.c: 673: break;
 16327  01F1BC  D01A               	goto	l12440
 16328  01F1BE                     l12438:
 16329  01F1BE  0101               	movlb	1	; () banked
 16330  01F1C0  C14A  FFF6         	movff	sprintf@f,tblptrl
 16331  01F1C4  0101               	movlb	1	; () banked
 16332  01F1C6  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 16333  01F1CA  0101               	movlb	1	; () banked
 16334  01F1CC  4B4A               	infsnz	sprintf@f& (0+255),f,b
 16335  01F1CE  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 16336  01F1D0                     	if	0	;tblptru may be non-zero
 16337  01F1D0                     	endif
 16338  01F1D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16339  01F1D0  0E00               	movlw	low (__mediumconst shr (0+16))
 16340  01F1D2  6EF8               	movwf	tblptru,c
 16341  01F1D4                     	endif
 16342  01F1D4  0008               	tblrd		*
 16343  01F1D6  0101               	movlb	1	; () banked
 16344  01F1D8  CFF5 F17B          	movff	tablat,sprintf@c
 16345  01F1DC  0101               	movlb	1	; () banked
 16346  01F1DE  517B               	movf	sprintf@c& (0+255),w,b
 16347                           
 16348                           ; Switch size 1, requested type "space"
 16349                           ; Number of cases is 2, Range of values is 0 to 102
 16350                           ; switch strategies available:
 16351                           ; Name         Instructions Cycles
 16352                           ; simple_byte            7     4 (average)
 16353                           ;	Chosen strategy is simple_byte
 16354  01F1E0  0A00               	xorlw	0	; case 0
 16355  01F1E2  B4D8               	btfsc	status,2,c
 16356  01F1E4  EFB1  F0FD         	goto	l12674
 16357  01F1E8  0A66               	xorlw	102	; case 102
 16358  01F1EA  B4D8               	btfsc	status,2,c
 16359  01F1EC  D7E5               	goto	l12434
 16360  01F1EE  EF9E  F0FD         	goto	l12672
 16361  01F1F2                     l12440:
 16362                           
 16363                           ; BSR set to: 1
 16364                           ;doprnt.c: 834: if(flag & (0x700)) {
 16365  01F1F2  0E07               	movlw	7
 16366  01F1F4  0101               	movlb	1	; () banked
 16367  01F1F6  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 16368  01F1F8  B4D8               	btfsc	status,2,c
 16369  01F1FA  D3D2               	goto	l12620
 16370                           
 16371                           ; BSR set to: 1
 16372                           ;doprnt.c: 836: if(flag & 0x1000)
 16373  01F1FC  0101               	movlb	1	; () banked
 16374  01F1FE  A971               	btfss	(sprintf@flag+1)& (0+255),4,b
 16375  01F200  D006               	goto	l12446
 16376                           
 16377                           ; BSR set to: 1
 16378                           ;doprnt.c: 838: prec = 6;
 16379  01F202  0E00               	movlw	0
 16380  01F204  0101               	movlb	1	; () banked
 16381  01F206  6F7A               	movwf	(sprintf@prec+1)& (0+255),b
 16382  01F208  0E06               	movlw	6
 16383  01F20A  0101               	movlb	1	; () banked
 16384  01F20C  6F79               	movwf	sprintf@prec& (0+255),b
 16385  01F20E                     l12446:
 16386                           
 16387                           ; BSR set to: 1
 16388                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 16389  01F20E  C15C  FFD9         	movff	sprintf@ap,fsr2l
 16390  01F212  C15D  FFDA         	movff	sprintf@ap+1,fsr2h
 16391  01F216  0101               	movlb	1	; () banked
 16392  01F218  CFDE F176          	movff	postinc2,sprintf@fval
 16393  01F21C  0101               	movlb	1	; () banked
 16394  01F21E  CFDE F177          	movff	postinc2,sprintf@fval+1
 16395  01F222  0101               	movlb	1	; () banked
 16396  01F224  CFDD F178          	movff	postdec2,sprintf@fval+2
 16397                           
 16398                           ; BSR set to: 1
 16399  01F228  0E03               	movlw	3
 16400  01F22A  0101               	movlb	1	; () banked
 16401  01F22C  275C               	addwf	sprintf@ap& (0+255),f,b
 16402  01F22E  0E00               	movlw	0
 16403  01F230  0101               	movlb	1	; () banked
 16404  01F232  235D               	addwfc	(sprintf@ap+1)& (0+255),f,b
 16405                           
 16406                           ; BSR set to: 1
 16407                           ;doprnt.c: 840: if(fval < 0.0) {
 16408  01F234  0101               	movlb	1	; () banked
 16409  01F236  5178               	movf	(sprintf@fval+2)& (0+255),w,b
 16410  01F238  0A80               	xorlw	128
 16411  01F23A  0F80               	addlw	128
 16412  01F23C  E107               	bnz	u13665
 16413  01F23E  0E00               	movlw	0
 16414  01F240  0101               	movlb	1	; () banked
 16415  01F242  5D77               	subwf	(sprintf@fval+1)& (0+255),w,b
 16416  01F244  E103               	bnz	u13665
 16417  01F246  0E00               	movlw	0
 16418  01F248  0101               	movlb	1	; () banked
 16419  01F24A  5D76               	subwf	sprintf@fval& (0+255),w,b
 16420  01F24C                     u13665:
 16421  01F24C  B0D8               	btfsc	status,0,c
 16422  01F24E  D011               	goto	l12456
 16423                           
 16424                           ; BSR set to: 1
 16425                           ;doprnt.c: 841: fval = -fval;
 16426  01F250  C176  F100         	movff	sprintf@fval,___ftneg@f1
 16427  01F254  C177  F101         	movff	sprintf@fval+1,___ftneg@f1+1
 16428  01F258  C178  F102         	movff	sprintf@fval+2,___ftneg@f1+2
 16429  01F25C  EC99  F0DA         	call	___ftneg	;wreg free
 16430  01F260  C100  F176         	movff	?___ftneg,sprintf@fval
 16431  01F264  C101  F177         	movff	?___ftneg+1,sprintf@fval+1
 16432  01F268  C102  F178         	movff	?___ftneg+2,sprintf@fval+2
 16433                           
 16434                           ;doprnt.c: 842: flag |= 0x03;
 16435  01F26C  0E03               	movlw	3
 16436  01F26E  0101               	movlb	1	; () banked
 16437  01F270  1370               	iorwf	sprintf@flag& (0+255),f,b
 16438  01F272                     l12456:
 16439                           
 16440                           ; BSR set to: 1
 16441                           ;doprnt.c: 843: }
 16442                           ;doprnt.c: 844: exp = 0;
 16443  01F272  0E00               	movlw	0
 16444  01F274  0101               	movlb	1	; () banked
 16445  01F276  6F75               	movwf	(sprintf@exp+1)& (0+255),b
 16446  01F278  0E00               	movlw	0
 16447  01F27A  0101               	movlb	1	; () banked
 16448  01F27C  6F74               	movwf	sprintf@exp& (0+255),b
 16449                           
 16450                           ; BSR set to: 1
 16451                           ;doprnt.c: 845: if( fval!=0) {
 16452  01F27E  0E7F               	movlw	127
 16453  01F280  0101               	movlb	1	; () banked
 16454  01F282  1578               	andwf	(sprintf@fval+2)& (0+255),w,b
 16455  01F284  0101               	movlb	1	; () banked
 16456  01F286  1177               	iorwf	(sprintf@fval+1)& (0+255),w,b
 16457  01F288  0101               	movlb	1	; () banked
 16458  01F28A  1176               	iorwf	sprintf@fval& (0+255),w,b
 16459  01F28C  B4D8               	btfsc	status,2,c
 16460  01F28E  D0AA               	goto	l12484
 16461                           
 16462                           ; BSR set to: 1
 16463                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 16464  01F290  0E82               	movlw	130
 16465  01F292  0101               	movlb	1	; () banked
 16466  01F294  6F4F               	movwf	??_sprintf& (0+255),b
 16467  01F296  0EFF               	movlw	255
 16468  01F298  6F50               	movwf	(??_sprintf+1)& (0+255),b
 16469  01F29A  0101               	movlb	1	; () banked
 16470  01F29C  C176  F151         	movff	sprintf@fval,??_sprintf+2
 16471  01F2A0  0101               	movlb	1	; () banked
 16472  01F2A2  C177  F152         	movff	sprintf@fval+1,??_sprintf+3
 16473  01F2A6  0101               	movlb	1	; () banked
 16474  01F2A8  C178  F153         	movff	sprintf@fval+2,??_sprintf+4
 16475  01F2AC  0101               	movlb	1	; () banked
 16476  01F2AE  C179  F154         	movff	sprintf@fval+3,??_sprintf+5
 16477  01F2B2  0E10               	movlw	16
 16478  01F2B4  D006               	goto	u13680
 16479  01F2B6                     u13685:
 16480  01F2B6  0101               	movlb	1	; () banked
 16481  01F2B8  90D8               	bcf	status,0,c
 16482  01F2BA  3354               	rrcf	(??_sprintf+5)& (0+255),f,b
 16483  01F2BC  3353               	rrcf	(??_sprintf+4)& (0+255),f,b
 16484  01F2BE  3352               	rrcf	(??_sprintf+3)& (0+255),f,b
 16485  01F2C0  3351               	rrcf	(??_sprintf+2)& (0+255),f,b
 16486  01F2C2                     u13680:
 16487  01F2C2  2EE8               	decfsz	wreg,f,c
 16488  01F2C4  D7F8               	goto	u13685
 16489  01F2C6  0101               	movlb	1	; () banked
 16490  01F2C8  5151               	movf	(??_sprintf+2)& (0+255),w,b
 16491  01F2CA  0101               	movlb	1	; () banked
 16492  01F2CC  254F               	addwf	??_sprintf& (0+255),w,b
 16493  01F2CE  0101               	movlb	1	; () banked
 16494  01F2D0  6F74               	movwf	sprintf@exp& (0+255),b
 16495  01F2D2  0E00               	movlw	0
 16496  01F2D4  0101               	movlb	1	; () banked
 16497  01F2D6  2150               	addwfc	(??_sprintf+1)& (0+255),w,b
 16498  01F2D8  0101               	movlb	1	; () banked
 16499  01F2DA  6F75               	movwf	(sprintf@exp+1)& (0+255),b
 16500                           
 16501                           ; BSR set to: 1
 16502                           ;doprnt.c: 847: exp--;
 16503  01F2DC  0101               	movlb	1	; () banked
 16504  01F2DE  0774               	decf	sprintf@exp& (0+255),f,b
 16505  01F2E0  A0D8               	btfss	status,0,c
 16506  01F2E2  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 16507                           
 16508                           ; BSR set to: 1
 16509                           ;doprnt.c: 848: exp *= 3;
 16510  01F2E4  C174  F10E         	movff	sprintf@exp,___wmul@multiplier
 16511  01F2E8  C175  F10F         	movff	sprintf@exp+1,___wmul@multiplier+1
 16512  01F2EC  0E00               	movlw	0
 16513  01F2EE  0101               	movlb	1	; () banked
 16514  01F2F0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16515  01F2F2  0E03               	movlw	3
 16516  01F2F4  0101               	movlb	1	; () banked
 16517  01F2F6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 16518  01F2F8  EC15  F0DA         	call	___wmul	;wreg free
 16519  01F2FC  0101               	movlb	1	; () banked
 16520  01F2FE  C10E  F174         	movff	?___wmul,sprintf@exp
 16521  01F302  0101               	movlb	1	; () banked
 16522  01F304  C10F  F175         	movff	?___wmul+1,sprintf@exp+1
 16523                           
 16524                           ; BSR set to: 1
 16525                           ;doprnt.c: 849: exp /= 10;
 16526  01F308  C174  F106         	movff	sprintf@exp,___awdiv@dividend
 16527  01F30C  C175  F107         	movff	sprintf@exp+1,___awdiv@dividend+1
 16528  01F310  0E00               	movlw	0
 16529  01F312  0101               	movlb	1	; () banked
 16530  01F314  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 16531  01F316  0E0A               	movlw	10
 16532  01F318  0101               	movlb	1	; () banked
 16533  01F31A  6F08               	movwf	___awdiv@divisor& (0+255),b
 16534  01F31C  ECC2  F0C9         	call	___awdiv	;wreg free
 16535  01F320  0101               	movlb	1	; () banked
 16536  01F322  C106  F174         	movff	?___awdiv,sprintf@exp
 16537  01F326  0101               	movlb	1	; () banked
 16538  01F328  C107  F175         	movff	?___awdiv+1,sprintf@exp+1
 16539                           
 16540                           ; BSR set to: 1
 16541                           ;doprnt.c: 850: if(exp < 0)
 16542  01F32C  0101               	movlb	1	; () banked
 16543  01F32E  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 16544  01F330  0A80               	xorlw	128
 16545  01F332  6EF3               	movwf	prodl,c
 16546  01F334  0E80               	movlw	128
 16547  01F336  5CF3               	subwf	prodl,w,c
 16548  01F338  0E00               	movlw	0
 16549  01F33A  B4D8               	btfsc	status,2,c
 16550  01F33C  5D74               	subwf	sprintf@exp& (0+255),w,b
 16551  01F33E  B0D8               	btfsc	status,0,c
 16552  01F340  D004               	goto	l12472
 16553                           
 16554                           ; BSR set to: 1
 16555                           ;doprnt.c: 851: exp--;
 16556  01F342  0101               	movlb	1	; () banked
 16557  01F344  0774               	decf	sprintf@exp& (0+255),f,b
 16558  01F346  A0D8               	btfss	status,0,c
 16559  01F348  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 16560  01F34A                     l12472:
 16561                           
 16562                           ; BSR set to: 1
 16563                           ;doprnt.c: 855: integ = scale(-exp);
 16564  01F34A  0101               	movlb	1	; () banked
 16565  01F34C  5174               	movf	sprintf@exp& (0+255),w,b
 16566  01F34E  0800               	sublw	0
 16567  01F350  EC2F  F09E         	call	_scale
 16568  01F354  C123  F168         	movff	?_scale,sprintf@integ
 16569  01F358  C124  F169         	movff	?_scale+1,sprintf@integ+1
 16570  01F35C  C125  F16A         	movff	?_scale+2,sprintf@integ+2
 16571                           
 16572                           ;doprnt.c: 856: integ *= fval;
 16573  01F360  C168  F114         	movff	sprintf@integ,___ftmul@f1
 16574  01F364  C169  F115         	movff	sprintf@integ+1,___ftmul@f1+1
 16575  01F368  C16A  F116         	movff	sprintf@integ+2,___ftmul@f1+2
 16576  01F36C  C176  F117         	movff	sprintf@fval,___ftmul@f2
 16577  01F370  C177  F118         	movff	sprintf@fval+1,___ftmul@f2+1
 16578  01F374  C178  F119         	movff	sprintf@fval+2,___ftmul@f2+2
 16579  01F378  ECA2  F0BB         	call	___ftmul	;wreg free
 16580  01F37C  C114  F168         	movff	?___ftmul,sprintf@integ
 16581  01F380  C115  F169         	movff	?___ftmul+1,sprintf@integ+1
 16582  01F384  C116  F16A         	movff	?___ftmul+2,sprintf@integ+2
 16583                           
 16584                           ;doprnt.c: 857: if(integ < 1.0)
 16585  01F388  C168  F100         	movff	sprintf@integ,___ftge@ff1
 16586  01F38C  C169  F101         	movff	sprintf@integ+1,___ftge@ff1+1
 16587  01F390  C16A  F102         	movff	sprintf@integ+2,___ftge@ff1+2
 16588  01F394  0E00               	movlw	0
 16589  01F396  0101               	movlb	1	; () banked
 16590  01F398  6F03               	movwf	___ftge@ff2& (0+255),b
 16591  01F39A  0E80               	movlw	128
 16592  01F39C  0101               	movlb	1	; () banked
 16593  01F39E  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 16594  01F3A0  0E3F               	movlw	63
 16595  01F3A2  0101               	movlb	1	; () banked
 16596  01F3A4  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 16597  01F3A6  EC50  F0CC         	call	___ftge	;wreg free
 16598  01F3AA  B0D8               	btfsc	status,0,c
 16599  01F3AC  D005               	goto	l12480
 16600                           
 16601                           ;doprnt.c: 858: exp--;
 16602  01F3AE  0101               	movlb	1	; () banked
 16603  01F3B0  0774               	decf	sprintf@exp& (0+255),f,b
 16604  01F3B2  A0D8               	btfss	status,0,c
 16605  01F3B4  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 16606  01F3B6  D016               	goto	l12484
 16607  01F3B8                     l12480:
 16608                           
 16609                           ;doprnt.c: 859: else if(integ >= 10.0)
 16610  01F3B8  C168  F100         	movff	sprintf@integ,___ftge@ff1
 16611  01F3BC  C169  F101         	movff	sprintf@integ+1,___ftge@ff1+1
 16612  01F3C0  C16A  F102         	movff	sprintf@integ+2,___ftge@ff1+2
 16613  01F3C4  0E00               	movlw	0
 16614  01F3C6  0101               	movlb	1	; () banked
 16615  01F3C8  6F03               	movwf	___ftge@ff2& (0+255),b
 16616  01F3CA  0E20               	movlw	32
 16617  01F3CC  0101               	movlb	1	; () banked
 16618  01F3CE  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 16619  01F3D0  0E41               	movlw	65
 16620  01F3D2  0101               	movlb	1	; () banked
 16621  01F3D4  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 16622  01F3D6  EC50  F0CC         	call	___ftge	;wreg free
 16623  01F3DA  A0D8               	btfss	status,0,c
 16624  01F3DC  D003               	goto	l12484
 16625                           
 16626                           ;doprnt.c: 860: exp++;
 16627  01F3DE  0101               	movlb	1	; () banked
 16628  01F3E0  4B74               	infsnz	sprintf@exp& (0+255),f,b
 16629  01F3E2  2B75               	incf	(sprintf@exp+1)& (0+255),f,b
 16630  01F3E4                     l12484:
 16631                           
 16632                           ;doprnt.c: 861: }
 16633                           ;doprnt.c: 1121: if(prec <= 12)
 16634  01F3E4  0101               	movlb	1	; () banked
 16635  01F3E6  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 16636  01F3E8  0A80               	xorlw	128
 16637  01F3EA  6EF3               	movwf	prodl,c
 16638  01F3EC  0E80               	movlw	128
 16639  01F3EE  5CF3               	subwf	prodl,w,c
 16640  01F3F0  0E0D               	movlw	13
 16641  01F3F2  B4D8               	btfsc	status,2,c
 16642  01F3F4  5D79               	subwf	sprintf@prec& (0+255),w,b
 16643  01F3F6  B0D8               	btfsc	status,0,c
 16644  01F3F8  D018               	goto	l12488
 16645                           
 16646                           ; BSR set to: 1
 16647                           ;doprnt.c: 1122: fval += fround(prec);
 16648  01F3FA  C176  F12D         	movff	sprintf@fval,___ftadd@f1
 16649  01F3FE  C177  F12E         	movff	sprintf@fval+1,___ftadd@f1+1
 16650  01F402  C178  F12F         	movff	sprintf@fval+2,___ftadd@f1+2
 16651  01F406  0101               	movlb	1	; () banked
 16652  01F408  5179               	movf	sprintf@prec& (0+255),w,b
 16653  01F40A  EC82  F0A3         	call	_fround
 16654  01F40E  C123  F130         	movff	?_fround,___ftadd@f2
 16655  01F412  C124  F131         	movff	?_fround+1,___ftadd@f2+1
 16656  01F416  C125  F132         	movff	?_fround+2,___ftadd@f2+2
 16657  01F41A  EC75  F0A6         	call	___ftadd	;wreg free
 16658  01F41E  C12D  F176         	movff	?___ftadd,sprintf@fval
 16659  01F422  C12E  F177         	movff	?___ftadd+1,sprintf@fval+1
 16660  01F426  C12F  F178         	movff	?___ftadd+2,sprintf@fval+2
 16661  01F42A                     l12488:
 16662                           
 16663                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 16664  01F42A  0101               	movlb	1	; () banked
 16665  01F42C  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 16666  01F42E  0A80               	xorlw	128
 16667  01F430  6EF3               	movwf	prodl,c
 16668  01F432  0E80               	movlw	128
 16669  01F434  5CF3               	subwf	prodl,w,c
 16670  01F436  0E0A               	movlw	10
 16671  01F438  B4D8               	btfsc	status,2,c
 16672  01F43A  5D74               	subwf	sprintf@exp& (0+255),w,b
 16673  01F43C  B0D8               	btfsc	status,0,c
 16674  01F43E  D029               	goto	l12496
 16675                           
 16676                           ; BSR set to: 1
 16677  01F440  0E7F               	movlw	127
 16678  01F442  0101               	movlb	1	; () banked
 16679  01F444  1578               	andwf	(sprintf@fval+2)& (0+255),w,b
 16680  01F446  0101               	movlb	1	; () banked
 16681  01F448  1177               	iorwf	(sprintf@fval+1)& (0+255),w,b
 16682  01F44A  0101               	movlb	1	; () banked
 16683  01F44C  1176               	iorwf	sprintf@fval& (0+255),w,b
 16684  01F44E  B4D8               	btfsc	status,2,c
 16685  01F450  D06F               	goto	l12512
 16686                           
 16687                           ; BSR set to: 1
 16688  01F452  C176  F139         	movff	sprintf@fval,___fttol@f1
 16689  01F456  C177  F13A         	movff	sprintf@fval+1,___fttol@f1+1
 16690  01F45A  C178  F13B         	movff	sprintf@fval+2,___fttol@f1+2
 16691  01F45E  ECE4  F0BA         	call	___fttol	;wreg free
 16692  01F462  C139  F14F         	movff	?___fttol,??_sprintf
 16693  01F466  C13A  F150         	movff	?___fttol+1,??_sprintf+1
 16694  01F46A  C13B  F151         	movff	?___fttol+2,??_sprintf+2
 16695  01F46E  C13C  F152         	movff	?___fttol+3,??_sprintf+3
 16696  01F472  0101               	movlb	1	; () banked
 16697  01F474  5152               	movf	(??_sprintf+3)& (0+255),w,b
 16698  01F476  114F               	iorwf	??_sprintf& (0+255),w,b
 16699  01F478  1150               	iorwf	(??_sprintf+1)& (0+255),w,b
 16700  01F47A  1151               	iorwf	(??_sprintf+2)& (0+255),w,b
 16701  01F47C  A4D8               	btfss	status,2,c
 16702  01F47E  D058               	goto	l12512
 16703                           
 16704                           ; BSR set to: 1
 16705  01F480  0101               	movlb	1	; () banked
 16706  01F482  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 16707  01F484  0A80               	xorlw	128
 16708  01F486  0F80               	addlw	-128
 16709  01F488  0E02               	movlw	2
 16710  01F48A  B4D8               	btfsc	status,2,c
 16711  01F48C  5D74               	subwf	sprintf@exp& (0+255),w,b
 16712  01F48E  A0D8               	btfss	status,0,c
 16713  01F490  D04F               	goto	l12512
 16714  01F492                     l12496:
 16715                           
 16716                           ; BSR set to: 1
 16717                           ;doprnt.c: 1129: if(integ < 4.294967296){
 16718  01F492  C168  F100         	movff	sprintf@integ,___ftge@ff1
 16719  01F496  C169  F101         	movff	sprintf@integ+1,___ftge@ff1+1
 16720  01F49A  C16A  F102         	movff	sprintf@integ+2,___ftge@ff1+2
 16721  01F49E  0E70               	movlw	112
 16722  01F4A0  0101               	movlb	1	; () banked
 16723  01F4A2  6F03               	movwf	___ftge@ff2& (0+255),b
 16724  01F4A4  0E89               	movlw	137
 16725  01F4A6  0101               	movlb	1	; () banked
 16726  01F4A8  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 16727  01F4AA  0E40               	movlw	64
 16728  01F4AC  0101               	movlb	1	; () banked
 16729  01F4AE  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 16730  01F4B0  EC50  F0CC         	call	___ftge	;wreg free
 16731  01F4B4  B0D8               	btfsc	status,0,c
 16732  01F4B6  D003               	goto	l12500
 16733                           
 16734                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 16735  01F4B8  0101               	movlb	1	; () banked
 16736  01F4BA  0EF7               	movlw	247
 16737  01F4BC  D002               	goto	L9
 16738  01F4BE                     l12500:
 16739                           
 16740                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 16741  01F4BE  0101               	movlb	1	; () banked
 16742  01F4C0  0EF8               	movlw	248
 16743  01F4C2                     L9:
 16744  01F4C2  0101               	movlb	1	; () banked
 16745  01F4C4  2774               	addwf	sprintf@exp& (0+255),f,b
 16746  01F4C6  0EFF               	movlw	255
 16747  01F4C8  0101               	movlb	1	; () banked
 16748  01F4CA  2375               	addwfc	(sprintf@exp+1)& (0+255),f,b
 16749                           
 16750                           ; BSR set to: 1
 16751                           ;doprnt.c: 1133: }
 16752                           ;doprnt.c: 1134: integ = scale(exp);
 16753                           
 16754                           ; BSR set to: 1
 16755  01F4CC  0101               	movlb	1	; () banked
 16756  01F4CE  5174               	movf	sprintf@exp& (0+255),w,b
 16757  01F4D0  EC2F  F09E         	call	_scale
 16758  01F4D4  C123  F168         	movff	?_scale,sprintf@integ
 16759  01F4D8  C124  F169         	movff	?_scale+1,sprintf@integ+1
 16760  01F4DC  C125  F16A         	movff	?_scale+2,sprintf@integ+2
 16761                           
 16762                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 16763  01F4E0  C176  F100         	movff	sprintf@fval,__tdiv_to_l_@f1
 16764  01F4E4  C177  F101         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
 16765  01F4E8  C178  F102         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
 16766  01F4EC  C168  F103         	movff	sprintf@integ,__tdiv_to_l_@f2
 16767  01F4F0  C169  F104         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
 16768  01F4F4  C16A  F105         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
 16769  01F4F8  EC80  F0B1         	call	__tdiv_to_l_	;wreg free
 16770  01F4FC  C100  F158         	movff	?__tdiv_to_l_,_sprintf$9357
 16771  01F500  C101  F159         	movff	?__tdiv_to_l_+1,_sprintf$9357+1
 16772  01F504  C102  F15A         	movff	?__tdiv_to_l_+2,_sprintf$9357+2
 16773  01F508  C103  F15B         	movff	?__tdiv_to_l_+3,_sprintf$9357+3
 16774  01F50C  C158  F16B         	movff	_sprintf$9357,sprintf@_val
 16775  01F510  C159  F16C         	movff	_sprintf$9357+1,sprintf@_val+1
 16776  01F514  C15A  F16D         	movff	_sprintf$9357+2,sprintf@_val+2
 16777  01F518  C15B  F16E         	movff	_sprintf$9357+3,sprintf@_val+3
 16778                           
 16779                           ;doprnt.c: 1138: fval = 0.0;
 16780  01F51C  0E00               	movlw	0
 16781  01F51E  0101               	movlb	1	; () banked
 16782  01F520  6F76               	movwf	sprintf@fval& (0+255),b
 16783  01F522  0E00               	movlw	0
 16784  01F524  0101               	movlb	1	; () banked
 16785  01F526  6F77               	movwf	(sprintf@fval+1)& (0+255),b
 16786  01F528  0E00               	movlw	0
 16787  01F52A  0101               	movlb	1	; () banked
 16788  01F52C  6F78               	movwf	(sprintf@fval+2)& (0+255),b
 16789                           
 16790                           ;doprnt.c: 1139: } else {
 16791  01F52E  D034               	goto	l12516
 16792  01F530                     l12512:
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 16796  01F530  C176  F139         	movff	sprintf@fval,___fttol@f1
 16797  01F534  C177  F13A         	movff	sprintf@fval+1,___fttol@f1+1
 16798  01F538  C178  F13B         	movff	sprintf@fval+2,___fttol@f1+2
 16799  01F53C  ECE4  F0BA         	call	___fttol	;wreg free
 16800  01F540  C139  F16B         	movff	?___fttol,sprintf@_val
 16801  01F544  C13A  F16C         	movff	?___fttol+1,sprintf@_val+1
 16802  01F548  C13B  F16D         	movff	?___fttol+2,sprintf@_val+2
 16803  01F54C  C13C  F16E         	movff	?___fttol+3,sprintf@_val+3
 16804                           
 16805                           ;doprnt.c: 1141: fval -= (double)_val._val;
 16806  01F550  C176  F139         	movff	sprintf@fval,___ftsub@f1
 16807  01F554  C177  F13A         	movff	sprintf@fval+1,___ftsub@f1+1
 16808  01F558  C178  F13B         	movff	sprintf@fval+2,___ftsub@f1+2
 16809  01F55C  C16B  F108         	movff	sprintf@_val,___lltoft@c
 16810  01F560  C16C  F109         	movff	sprintf@_val+1,___lltoft@c+1
 16811  01F564  C16D  F10A         	movff	sprintf@_val+2,___lltoft@c+2
 16812  01F568  C16E  F10B         	movff	sprintf@_val+3,___lltoft@c+3
 16813  01F56C  EC21  F0D5         	call	___lltoft	;wreg free
 16814  01F570  C108  F13C         	movff	?___lltoft,___ftsub@f2
 16815  01F574  C109  F13D         	movff	?___lltoft+1,___ftsub@f2+1
 16816  01F578  C10A  F13E         	movff	?___lltoft+2,___ftsub@f2+2
 16817  01F57C  ECBF  F0D9         	call	___ftsub	;wreg free
 16818  01F580  C139  F176         	movff	?___ftsub,sprintf@fval
 16819  01F584  C13A  F177         	movff	?___ftsub+1,sprintf@fval+1
 16820  01F588  C13B  F178         	movff	?___ftsub+2,sprintf@fval+2
 16821                           
 16822                           ;doprnt.c: 1142: exp = 0;
 16823  01F58C  0E00               	movlw	0
 16824  01F58E  0101               	movlb	1	; () banked
 16825  01F590  6F75               	movwf	(sprintf@exp+1)& (0+255),b
 16826  01F592  0E00               	movlw	0
 16827  01F594  0101               	movlb	1	; () banked
 16828  01F596  6F74               	movwf	sprintf@exp& (0+255),b
 16829  01F598                     l12516:
 16830                           
 16831                           ; BSR set to: 1
 16832                           ;doprnt.c: 1143: }
 16833                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 16834  01F598  0E01               	movlw	1
 16835  01F59A  0101               	movlb	1	; () banked
 16836  01F59C  6F7B               	movwf	sprintf@c& (0+255),b
 16837  01F59E                     
 16838                           ; BSR set to: 1
 16839  01F59E  0101               	movlb	1	; () banked
 16840  01F5A0  517B               	movf	sprintf@c& (0+255),w,b
 16841  01F5A2  0A0A               	xorlw	10
 16842  01F5A4  B4D8               	btfsc	status,2,c
 16843  01F5A6  D021               	goto	l12530
 16844                           
 16845                           ; BSR set to: 1
 16846                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 16847                           
 16848                           ; BSR set to: 1
 16849                           
 16850                           ; BSR set to: 1
 16851  01F5A8  0101               	movlb	1	; () banked
 16852  01F5AA  517B               	movf	sprintf@c& (0+255),w,b
 16853  01F5AC  0D04               	mullw	4
 16854  01F5AE  0E8B               	movlw	low _dpowers
 16855  01F5B0  24F3               	addwf	prodl,w,c
 16856  01F5B2  6EF6               	movwf	tblptrl,c
 16857  01F5B4  0EFE               	movlw	high _dpowers
 16858  01F5B6  20F4               	addwfc	prodh,w,c
 16859  01F5B8  6EF7               	movwf	tblptrh,c
 16860  01F5BA                     	if	1	;There are 3 active tblptr bytes
 16861  01F5BA  6AF8               	clrf	tblptru,c
 16862  01F5BC  0E00               	movlw	low (__mediumconst shr (0+16))
 16863  01F5BE  22F8               	addwfc	tblptru,f,c
 16864  01F5C0                     	endif
 16865  01F5C0  0009               	tblrd		*+
 16866  01F5C2  50F5               	movf	tablat,w,c
 16867  01F5C4  0101               	movlb	1	; () banked
 16868  01F5C6  5D6B               	subwf	sprintf@_val& (0+255),w,b
 16869  01F5C8  0009               	tblrd		*+
 16870  01F5CA  50F5               	movf	tablat,w,c
 16871  01F5CC  0101               	movlb	1	; () banked
 16872  01F5CE  596C               	subwfb	(sprintf@_val+1)& (0+255),w,b
 16873  01F5D0  0009               	tblrd		*+
 16874  01F5D2  50F5               	movf	tablat,w,c
 16875  01F5D4  0101               	movlb	1	; () banked
 16876  01F5D6  596D               	subwfb	(sprintf@_val+2)& (0+255),w,b
 16877  01F5D8  0009               	tblrd		*+
 16878  01F5DA  50F5               	movf	tablat,w,c
 16879  01F5DC  0101               	movlb	1	; () banked
 16880  01F5DE  596E               	subwfb	(sprintf@_val+3)& (0+255),w,b
 16881  01F5E0  A0D8               	btfss	status,0,c
 16882  01F5E2  D003               	goto	l12530
 16883                           
 16884                           ; BSR set to: 1
 16885                           
 16886                           ; BSR set to: 1
 16887                           
 16888                           ; BSR set to: 1
 16889                           ;doprnt.c: 1147: break;
 16890  01F5E4  0101               	movlb	1	; () banked
 16891  01F5E6  2B7B               	incf	sprintf@c& (0+255),f,b
 16892  01F5E8  D7DA               	goto	L10
 16893  01F5EA                     l12530:
 16894                           
 16895                           ; BSR set to: 1
 16896                           ;doprnt.c: 1151: width -= prec + c + exp;
 16897  01F5EA  0101               	movlb	1	; () banked
 16898  01F5EC  C17B  F14F         	movff	sprintf@c,??_sprintf
 16899  01F5F0  0101               	movlb	1	; () banked
 16900  01F5F2  6B50               	clrf	(??_sprintf+1)& (0+255),b
 16901  01F5F4  BF4F               	btfsc	??_sprintf& (0+255),7,b
 16902  01F5F6  0750               	decf	(??_sprintf+1)& (0+255),f,b
 16903  01F5F8  0101               	movlb	1	; () banked
 16904  01F5FA  5179               	movf	sprintf@prec& (0+255),w,b
 16905  01F5FC  0101               	movlb	1	; () banked
 16906  01F5FE  274F               	addwf	??_sprintf& (0+255),f,b
 16907  01F600  0101               	movlb	1	; () banked
 16908  01F602  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 16909  01F604  0101               	movlb	1	; () banked
 16910  01F606  2350               	addwfc	(??_sprintf+1)& (0+255),f,b
 16911  01F608  0101               	movlb	1	; () banked
 16912  01F60A  5174               	movf	sprintf@exp& (0+255),w,b
 16913  01F60C  0101               	movlb	1	; () banked
 16914  01F60E  274F               	addwf	??_sprintf& (0+255),f,b
 16915  01F610  0101               	movlb	1	; () banked
 16916  01F612  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 16917  01F614  0101               	movlb	1	; () banked
 16918  01F616  2350               	addwfc	(??_sprintf+1)& (0+255),f,b
 16919  01F618  0101               	movlb	1	; () banked
 16920  01F61A  514F               	movf	??_sprintf& (0+255),w,b
 16921  01F61C  0101               	movlb	1	; () banked
 16922  01F61E  5F72               	subwf	sprintf@width& (0+255),f,b
 16923  01F620  0101               	movlb	1	; () banked
 16924  01F622  5150               	movf	(??_sprintf+1)& (0+255),w,b
 16925  01F624  0101               	movlb	1	; () banked
 16926  01F626  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
 16927                           
 16928                           ;doprnt.c: 1152: if(
 16929                           ;doprnt.c: 1156: prec)
 16930  01F628  0101               	movlb	1	; () banked
 16931  01F62A  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 16932  01F62C  1179               	iorwf	sprintf@prec& (0+255),w,b
 16933  01F62E  B4D8               	btfsc	status,2,c
 16934  01F630  D004               	goto	l12534
 16935                           
 16936                           ; BSR set to: 1
 16937                           ;doprnt.c: 1157: width--;
 16938  01F632  0101               	movlb	1	; () banked
 16939  01F634  0772               	decf	sprintf@width& (0+255),f,b
 16940  01F636  A0D8               	btfss	status,0,c
 16941  01F638  0773               	decf	(sprintf@width+1)& (0+255),f,b
 16942  01F63A                     l12534:
 16943                           
 16944                           ; BSR set to: 1
 16945                           ;doprnt.c: 1158: if(flag & 0x03)
 16946  01F63A  0E03               	movlw	3
 16947  01F63C  0101               	movlb	1	; () banked
 16948  01F63E  1570               	andwf	sprintf@flag& (0+255),w,b
 16949  01F640  0101               	movlb	1	; () banked
 16950  01F642  6F4F               	movwf	??_sprintf& (0+255),b
 16951  01F644  0E00               	movlw	0
 16952  01F646  0101               	movlb	1	; () banked
 16953  01F648  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 16954  01F64A  0101               	movlb	1	; () banked
 16955  01F64C  6F50               	movwf	(??_sprintf+1)& (0+255),b
 16956  01F64E  0101               	movlb	1	; () banked
 16957  01F650  5150               	movf	(??_sprintf+1)& (0+255),w,b
 16958  01F652  114F               	iorwf	??_sprintf& (0+255),w,b
 16959  01F654  B4D8               	btfsc	status,2,c
 16960  01F656  D011               	goto	l12546
 16961  01F658  D00C               	goto	L11
 16962  01F65A                     l12538:
 16963                           
 16964                           ; BSR set to: 1
 16965                           ;doprnt.c: 1190: ((*sp++ = (' ')),(++ccnt));
 16966  01F65A  C148  FFD9         	movff	sprintf@sp,fsr2l
 16967  01F65E  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 16968  01F662  0E20               	movlw	32
 16969  01F664  6EDF               	movwf	indf2,c
 16970                           
 16971                           ; BSR set to: 1
 16972  01F666  0101               	movlb	1	; () banked
 16973  01F668  4B48               	infsnz	sprintf@sp& (0+255),f,b
 16974  01F66A  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 16975                           
 16976                           ; BSR set to: 1
 16977  01F66C  0101               	movlb	1	; () banked
 16978  01F66E  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 16979  01F670  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 16980  01F672                     L11:
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;doprnt.c: 1191: width--;
 16984  01F672  0101               	movlb	1	; () banked
 16985  01F674  0772               	decf	sprintf@width& (0+255),f,b
 16986  01F676  A0D8               	btfss	status,0,c
 16987  01F678  0773               	decf	(sprintf@width+1)& (0+255),f,b
 16988  01F67A                     l12546:
 16989                           
 16990                           ; BSR set to: 1
 16991  01F67A  0101               	movlb	1	; () banked
 16992  01F67C  5173               	movf	(sprintf@width+1)& (0+255),w,b
 16993  01F67E  0A80               	xorlw	128
 16994  01F680  6EF3               	movwf	prodl,c
 16995  01F682  0E80               	movlw	128
 16996  01F684  5CF3               	subwf	prodl,w,c
 16997  01F686  0E01               	movlw	1
 16998  01F688  B4D8               	btfsc	status,2,c
 16999  01F68A  5D72               	subwf	sprintf@width& (0+255),w,b
 17000  01F68C  B0D8               	btfsc	status,0,c
 17001  01F68E  D7E5               	goto	l12538
 17002                           
 17003                           ; BSR set to: 1
 17004                           ;doprnt.c: 1192: }
 17005                           ;doprnt.c: 1197: if(flag & 0x03)
 17006                           
 17007                           ; BSR set to: 1
 17008  01F690  0E03               	movlw	3
 17009  01F692  0101               	movlb	1	; () banked
 17010  01F694  1570               	andwf	sprintf@flag& (0+255),w,b
 17011  01F696  0101               	movlb	1	; () banked
 17012  01F698  6F4F               	movwf	??_sprintf& (0+255),b
 17013  01F69A  0E00               	movlw	0
 17014  01F69C  0101               	movlb	1	; () banked
 17015  01F69E  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 17016  01F6A0  0101               	movlb	1	; () banked
 17017  01F6A2  6F50               	movwf	(??_sprintf+1)& (0+255),b
 17018  01F6A4  0101               	movlb	1	; () banked
 17019  01F6A6  5150               	movf	(??_sprintf+1)& (0+255),w,b
 17020  01F6A8  114F               	iorwf	??_sprintf& (0+255),w,b
 17021  01F6AA  B4D8               	btfsc	status,2,c
 17022  01F6AC  D060               	goto	l12566
 17023                           
 17024                           ; BSR set to: 1
 17025                           ;doprnt.c: 1199: ((*sp++ = ('-')),(++ccnt));
 17026  01F6AE  C148  FFD9         	movff	sprintf@sp,fsr2l
 17027  01F6B2  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17028  01F6B6  0E2D               	movlw	45
 17029  01F6B8  D053               	goto	L12
 17030  01F6BA                     l12556:
 17031                           
 17032                           ; BSR set to: 1
 17033                           ;doprnt.c: 1209: {
 17034                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
 17035  01F6BA  C16B  F100         	movff	sprintf@_val,___lldiv@dividend
 17036  01F6BE  C16C  F101         	movff	sprintf@_val+1,___lldiv@dividend+1
 17037  01F6C2  C16D  F102         	movff	sprintf@_val+2,___lldiv@dividend+2
 17038  01F6C6  C16E  F103         	movff	sprintf@_val+3,___lldiv@dividend+3
 17039  01F6CA  0101               	movlb	1	; () banked
 17040  01F6CC  517B               	movf	sprintf@c& (0+255),w,b
 17041  01F6CE  0D04               	mullw	4
 17042  01F6D0  0E8B               	movlw	low _dpowers
 17043  01F6D2  24F3               	addwf	prodl,w,c
 17044  01F6D4  6EF6               	movwf	tblptrl,c
 17045  01F6D6  0EFE               	movlw	high _dpowers
 17046  01F6D8  20F4               	addwfc	prodh,w,c
 17047  01F6DA  6EF7               	movwf	tblptrh,c
 17048  01F6DC                     	if	1	;There are 3 active tblptr bytes
 17049  01F6DC  6AF8               	clrf	tblptru,c
 17050  01F6DE  0E00               	movlw	low (__mediumconst shr (0+16))
 17051  01F6E0  22F8               	addwfc	tblptru,f,c
 17052  01F6E2                     	endif
 17053  01F6E2  0009               	tblrd		*+
 17054  01F6E4  0101               	movlb	1	; () banked
 17055  01F6E6  CFF5 F104          	movff	tablat,___lldiv@divisor
 17056  01F6EA  0009               	tblrd		*+
 17057  01F6EC  0101               	movlb	1	; () banked
 17058  01F6EE  CFF5 F105          	movff	tablat,___lldiv@divisor+1
 17059  01F6F2  0009               	tblrd		*+
 17060  01F6F4  0101               	movlb	1	; () banked
 17061  01F6F6  CFF5 F106          	movff	tablat,___lldiv@divisor+2
 17062  01F6FA  000A               	tblrd		*-
 17063  01F6FC  0101               	movlb	1	; () banked
 17064  01F6FE  CFF5 F107          	movff	tablat,___lldiv@divisor+3
 17065  01F702  ECE6  F0CB         	call	___lldiv	;wreg free
 17066  01F706  C100  F15E         	movff	?___lldiv,sprintf@vd
 17067  01F70A  C101  F15F         	movff	?___lldiv+1,sprintf@vd+1
 17068  01F70E  C102  F160         	movff	?___lldiv+2,sprintf@vd+2
 17069  01F712  C103  F161         	movff	?___lldiv+3,sprintf@vd+3
 17070                           
 17071                           ;doprnt.c: 1211: vd %= 10;
 17072  01F716  C15E  F100         	movff	sprintf@vd,___llmod@dividend
 17073  01F71A  C15F  F101         	movff	sprintf@vd+1,___llmod@dividend+1
 17074  01F71E  C160  F102         	movff	sprintf@vd+2,___llmod@dividend+2
 17075  01F722  C161  F103         	movff	sprintf@vd+3,___llmod@dividend+3
 17076  01F726  0E0A               	movlw	10
 17077  01F728  0101               	movlb	1	; () banked
 17078  01F72A  6F04               	movwf	___llmod@divisor& (0+255),b
 17079  01F72C  0E00               	movlw	0
 17080  01F72E  0101               	movlb	1	; () banked
 17081  01F730  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 17082  01F732  0E00               	movlw	0
 17083  01F734  0101               	movlb	1	; () banked
 17084  01F736  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 17085  01F738  0E00               	movlw	0
 17086  01F73A  0101               	movlb	1	; () banked
 17087  01F73C  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 17088  01F73E  EC2A  F0D1         	call	___llmod	;wreg free
 17089  01F742  C100  F15E         	movff	?___llmod,sprintf@vd
 17090  01F746  C101  F15F         	movff	?___llmod+1,sprintf@vd+1
 17091  01F74A  C102  F160         	movff	?___llmod+2,sprintf@vd+2
 17092  01F74E  C103  F161         	movff	?___llmod+3,sprintf@vd+3
 17093                           
 17094                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)),(++ccnt));
 17095  01F752  0101               	movlb	1	; () banked
 17096  01F754  515E               	movf	sprintf@vd& (0+255),w,b
 17097  01F756  0F30               	addlw	48
 17098  01F758  C148  FFD9         	movff	sprintf@sp,fsr2l
 17099  01F75C  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17100  01F760                     L12:
 17101  01F760  6EDF               	movwf	indf2,c
 17102                           
 17103                           ; BSR set to: 1
 17104  01F762  0101               	movlb	1	; () banked
 17105  01F764  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17106  01F766  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17107                           
 17108                           ; BSR set to: 1
 17109  01F768  0101               	movlb	1	; () banked
 17110  01F76A  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17111  01F76C  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17112  01F76E                     l12566:
 17113                           
 17114                           ; BSR set to: 1
 17115  01F76E  0101               	movlb	1	; () banked
 17116  01F770  077B               	decf	sprintf@c& (0+255),f,b
 17117  01F772  0101               	movlb	1	; () banked
 17118  01F774  297B               	incf	sprintf@c& (0+255),w,b
 17119  01F776  B4D8               	btfsc	status,2,c
 17120  01F778  D011               	goto	l12576
 17121  01F77A  D79F               	goto	l12556
 17122  01F77C                     l12568:
 17123                           
 17124                           ; BSR set to: 1
 17125                           ;doprnt.c: 1217: ((*sp++ = ('0')),(++ccnt));
 17126  01F77C  C148  FFD9         	movff	sprintf@sp,fsr2l
 17127  01F780  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17128  01F784  0E30               	movlw	48
 17129  01F786  6EDF               	movwf	indf2,c
 17130                           
 17131                           ; BSR set to: 1
 17132  01F788  0101               	movlb	1	; () banked
 17133  01F78A  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17134  01F78C  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17135                           
 17136                           ; BSR set to: 1
 17137  01F78E  0101               	movlb	1	; () banked
 17138  01F790  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17139  01F792  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17140                           
 17141                           ; BSR set to: 1
 17142                           ;doprnt.c: 1218: exp--;
 17143  01F794  0101               	movlb	1	; () banked
 17144  01F796  0774               	decf	sprintf@exp& (0+255),f,b
 17145  01F798  A0D8               	btfss	status,0,c
 17146  01F79A  0775               	decf	(sprintf@exp+1)& (0+255),f,b
 17147  01F79C                     l12576:
 17148                           
 17149                           ; BSR set to: 1
 17150  01F79C  0101               	movlb	1	; () banked
 17151  01F79E  5175               	movf	(sprintf@exp+1)& (0+255),w,b
 17152  01F7A0  0A80               	xorlw	128
 17153  01F7A2  6EF3               	movwf	prodl,c
 17154  01F7A4  0E80               	movlw	128
 17155  01F7A6  5CF3               	subwf	prodl,w,c
 17156  01F7A8  0E01               	movlw	1
 17157  01F7AA  B4D8               	btfsc	status,2,c
 17158  01F7AC  5D74               	subwf	sprintf@exp& (0+255),w,b
 17159  01F7AE  B0D8               	btfsc	status,0,c
 17160  01F7B0  D7E5               	goto	l12568
 17161                           
 17162                           ; BSR set to: 1
 17163                           ;doprnt.c: 1219: }
 17164                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 17165                           
 17166                           ; BSR set to: 1
 17167  01F7B2  0101               	movlb	1	; () banked
 17168  01F7B4  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17169  01F7B6  0A80               	xorlw	128
 17170  01F7B8  0F80               	addlw	-128
 17171  01F7BA  0E09               	movlw	9
 17172  01F7BC  B4D8               	btfsc	status,2,c
 17173  01F7BE  5D79               	subwf	sprintf@prec& (0+255),w,b
 17174  01F7C0  A0D8               	btfss	status,0,c
 17175  01F7C2  D004               	goto	l2093
 17176                           
 17177                           ; BSR set to: 1
 17178                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
 17179  01F7C4  0E08               	movlw	8
 17180  01F7C6  0101               	movlb	1	; () banked
 17181  01F7C8  6F7B               	movwf	sprintf@c& (0+255),b
 17182  01F7CA  D002               	goto	l12582
 17183  01F7CC                     l2093:
 17184                           
 17185                           ; BSR set to: 1
 17186                           ;doprnt.c: 1222: else
 17187                           ;doprnt.c: 1223: c = prec;
 17188  01F7CC  C179  F17B         	movff	sprintf@prec,sprintf@c
 17189  01F7D0                     l12582:
 17190                           
 17191                           ; BSR set to: 1
 17192                           ;doprnt.c: 1224: prec -= c;
 17193  01F7D0  0101               	movlb	1	; () banked
 17194  01F7D2  517B               	movf	sprintf@c& (0+255),w,b
 17195  01F7D4  0101               	movlb	1	; () banked
 17196  01F7D6  5F79               	subwf	sprintf@prec& (0+255),f,b
 17197  01F7D8  0E00               	movlw	0
 17198  01F7DA  0101               	movlb	1	; () banked
 17199  01F7DC  BF7B               	btfsc	sprintf@c& (0+255),7,b
 17200  01F7DE  0EFF               	movlw	255
 17201  01F7E0  0101               	movlb	1	; () banked
 17202  01F7E2  5B7A               	subwfb	(sprintf@prec+1)& (0+255),f,b
 17203                           
 17204                           ; BSR set to: 1
 17205                           ;doprnt.c: 1228: if(c)
 17206  01F7E4  0101               	movlb	1	; () banked
 17207  01F7E6  517B               	movf	sprintf@c& (0+255),w,b
 17208  01F7E8  B4D8               	btfsc	status,2,c
 17209  01F7EA  D00C               	goto	l12592
 17210                           
 17211                           ; BSR set to: 1
 17212                           ;doprnt.c: 1230: ((*sp++ = ('.')),(++ccnt));
 17213  01F7EC  C148  FFD9         	movff	sprintf@sp,fsr2l
 17214  01F7F0  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17215  01F7F4  0E2E               	movlw	46
 17216  01F7F6  6EDF               	movwf	indf2,c
 17217                           
 17218                           ; BSR set to: 1
 17219  01F7F8  0101               	movlb	1	; () banked
 17220  01F7FA  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17221  01F7FC  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17222                           
 17223                           ; BSR set to: 1
 17224  01F7FE  0101               	movlb	1	; () banked
 17225  01F800  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17226  01F802  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17227  01F804                     l12592:
 17228                           
 17229                           ; BSR set to: 1
 17230                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 17231  01F804  0101               	movlb	1	; () banked
 17232  01F806  517B               	movf	sprintf@c& (0+255),w,b
 17233  01F808  EC2F  F09E         	call	_scale
 17234  01F80C  C123  F155         	movff	?_scale,_sprintf$10835
 17235  01F810  C124  F156         	movff	?_scale+1,_sprintf$10835+1
 17236  01F814  C125  F157         	movff	?_scale+2,_sprintf$10835+2
 17237                           
 17238                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 17239  01F818  C176  F117         	movff	sprintf@fval,___ftmul@f2
 17240  01F81C  C177  F118         	movff	sprintf@fval+1,___ftmul@f2+1
 17241  01F820  C178  F119         	movff	sprintf@fval+2,___ftmul@f2+2
 17242  01F824  C155  F114         	movff	_sprintf$10835,___ftmul@f1
 17243  01F828  C156  F115         	movff	_sprintf$10835+1,___ftmul@f1+1
 17244  01F82C  C157  F116         	movff	_sprintf$10835+2,___ftmul@f1+2
 17245  01F830  ECA2  F0BB         	call	___ftmul	;wreg free
 17246  01F834  C114  F139         	movff	?___ftmul,___fttol@f1
 17247  01F838  C115  F13A         	movff	?___ftmul+1,___fttol@f1+1
 17248  01F83C  C116  F13B         	movff	?___ftmul+2,___fttol@f1+2
 17249  01F840  ECE4  F0BA         	call	___fttol	;wreg free
 17250  01F844  C139  F16B         	movff	?___fttol,sprintf@_val
 17251  01F848  C13A  F16C         	movff	?___fttol+1,sprintf@_val+1
 17252  01F84C  C13B  F16D         	movff	?___fttol+2,sprintf@_val+2
 17253  01F850  C13C  F16E         	movff	?___fttol+3,sprintf@_val+3
 17254                           
 17255                           ;doprnt.c: 1237: while(c--) {
 17256  01F854  D088               	goto	l12608
 17257  01F856                     l12596:
 17258                           
 17259                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
 17260  01F856  C16B  F100         	movff	sprintf@_val,___lldiv@dividend
 17261  01F85A  C16C  F101         	movff	sprintf@_val+1,___lldiv@dividend+1
 17262  01F85E  C16D  F102         	movff	sprintf@_val+2,___lldiv@dividend+2
 17263  01F862  C16E  F103         	movff	sprintf@_val+3,___lldiv@dividend+3
 17264  01F866  0101               	movlb	1	; () banked
 17265  01F868  517B               	movf	sprintf@c& (0+255),w,b
 17266  01F86A  0D04               	mullw	4
 17267  01F86C  0E8B               	movlw	low _dpowers
 17268  01F86E  24F3               	addwf	prodl,w,c
 17269  01F870  6EF6               	movwf	tblptrl,c
 17270  01F872  0EFE               	movlw	high _dpowers
 17271  01F874  20F4               	addwfc	prodh,w,c
 17272  01F876  6EF7               	movwf	tblptrh,c
 17273  01F878                     	if	1	;There are 3 active tblptr bytes
 17274  01F878  6AF8               	clrf	tblptru,c
 17275  01F87A  0E00               	movlw	low (__mediumconst shr (0+16))
 17276  01F87C  22F8               	addwfc	tblptru,f,c
 17277  01F87E                     	endif
 17278  01F87E  0009               	tblrd		*+
 17279  01F880  0101               	movlb	1	; () banked
 17280  01F882  CFF5 F104          	movff	tablat,___lldiv@divisor
 17281  01F886  0009               	tblrd		*+
 17282  01F888  0101               	movlb	1	; () banked
 17283  01F88A  CFF5 F105          	movff	tablat,___lldiv@divisor+1
 17284  01F88E  0009               	tblrd		*+
 17285  01F890  0101               	movlb	1	; () banked
 17286  01F892  CFF5 F106          	movff	tablat,___lldiv@divisor+2
 17287  01F896  000A               	tblrd		*-
 17288  01F898  0101               	movlb	1	; () banked
 17289  01F89A  CFF5 F107          	movff	tablat,___lldiv@divisor+3
 17290  01F89E  ECE6  F0CB         	call	___lldiv	;wreg free
 17291  01F8A2  C100  F162         	movff	?___lldiv,sprintf@vd_9359
 17292  01F8A6  C101  F163         	movff	?___lldiv+1,sprintf@vd_9359+1
 17293  01F8AA  C102  F164         	movff	?___lldiv+2,sprintf@vd_9359+2
 17294  01F8AE  C103  F165         	movff	?___lldiv+3,sprintf@vd_9359+3
 17295                           
 17296                           ;doprnt.c: 1239: vd %= 10;
 17297  01F8B2  C162  F100         	movff	sprintf@vd_9359,___llmod@dividend
 17298  01F8B6  C163  F101         	movff	sprintf@vd_9359+1,___llmod@dividend+1
 17299  01F8BA  C164  F102         	movff	sprintf@vd_9359+2,___llmod@dividend+2
 17300  01F8BE  C165  F103         	movff	sprintf@vd_9359+3,___llmod@dividend+3
 17301  01F8C2  0E0A               	movlw	10
 17302  01F8C4  0101               	movlb	1	; () banked
 17303  01F8C6  6F04               	movwf	___llmod@divisor& (0+255),b
 17304  01F8C8  0E00               	movlw	0
 17305  01F8CA  0101               	movlb	1	; () banked
 17306  01F8CC  6F05               	movwf	(___llmod@divisor+1)& (0+255),b
 17307  01F8CE  0E00               	movlw	0
 17308  01F8D0  0101               	movlb	1	; () banked
 17309  01F8D2  6F06               	movwf	(___llmod@divisor+2)& (0+255),b
 17310  01F8D4  0E00               	movlw	0
 17311  01F8D6  0101               	movlb	1	; () banked
 17312  01F8D8  6F07               	movwf	(___llmod@divisor+3)& (0+255),b
 17313  01F8DA  EC2A  F0D1         	call	___llmod	;wreg free
 17314  01F8DE  C100  F162         	movff	?___llmod,sprintf@vd_9359
 17315  01F8E2  C101  F163         	movff	?___llmod+1,sprintf@vd_9359+1
 17316  01F8E6  C102  F164         	movff	?___llmod+2,sprintf@vd_9359+2
 17317  01F8EA  C103  F165         	movff	?___llmod+3,sprintf@vd_9359+3
 17318                           
 17319                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)),(++ccnt));
 17320  01F8EE  0101               	movlb	1	; () banked
 17321  01F8F0  5162               	movf	sprintf@vd_9359& (0+255),w,b
 17322  01F8F2  0F30               	addlw	48
 17323  01F8F4  C148  FFD9         	movff	sprintf@sp,fsr2l
 17324  01F8F8  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17325  01F8FC  6EDF               	movwf	indf2,c
 17326                           
 17327                           ; BSR set to: 1
 17328  01F8FE  0101               	movlb	1	; () banked
 17329  01F900  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17330  01F902  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17331                           
 17332                           ; BSR set to: 1
 17333  01F904  0101               	movlb	1	; () banked
 17334  01F906  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17335  01F908  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17336                           
 17337                           ; BSR set to: 1
 17338                           ;doprnt.c: 1241: _val._val %= dpowers[c];
 17339  01F90A  C16B  F100         	movff	sprintf@_val,___llmod@dividend
 17340  01F90E  C16C  F101         	movff	sprintf@_val+1,___llmod@dividend+1
 17341  01F912  C16D  F102         	movff	sprintf@_val+2,___llmod@dividend+2
 17342  01F916  C16E  F103         	movff	sprintf@_val+3,___llmod@dividend+3
 17343  01F91A  0101               	movlb	1	; () banked
 17344  01F91C  517B               	movf	sprintf@c& (0+255),w,b
 17345  01F91E  0D04               	mullw	4
 17346  01F920  0E8B               	movlw	low _dpowers
 17347  01F922  24F3               	addwf	prodl,w,c
 17348  01F924  6EF6               	movwf	tblptrl,c
 17349  01F926  0EFE               	movlw	high _dpowers
 17350  01F928  20F4               	addwfc	prodh,w,c
 17351  01F92A  6EF7               	movwf	tblptrh,c
 17352  01F92C                     	if	1	;There are 3 active tblptr bytes
 17353  01F92C  6AF8               	clrf	tblptru,c
 17354  01F92E  0E00               	movlw	low (__mediumconst shr (0+16))
 17355  01F930  22F8               	addwfc	tblptru,f,c
 17356  01F932                     	endif
 17357  01F932  0009               	tblrd		*+
 17358  01F934  0101               	movlb	1	; () banked
 17359  01F936  CFF5 F104          	movff	tablat,___llmod@divisor
 17360  01F93A  0009               	tblrd		*+
 17361  01F93C  0101               	movlb	1	; () banked
 17362  01F93E  CFF5 F105          	movff	tablat,___llmod@divisor+1
 17363  01F942  0009               	tblrd		*+
 17364  01F944  0101               	movlb	1	; () banked
 17365  01F946  CFF5 F106          	movff	tablat,___llmod@divisor+2
 17366  01F94A  000A               	tblrd		*-
 17367  01F94C  0101               	movlb	1	; () banked
 17368  01F94E  CFF5 F107          	movff	tablat,___llmod@divisor+3
 17369  01F952  EC2A  F0D1         	call	___llmod	;wreg free
 17370  01F956  C100  F16B         	movff	?___llmod,sprintf@_val
 17371  01F95A  C101  F16C         	movff	?___llmod+1,sprintf@_val+1
 17372  01F95E  C102  F16D         	movff	?___llmod+2,sprintf@_val+2
 17373  01F962  C103  F16E         	movff	?___llmod+3,sprintf@_val+3
 17374  01F966                     l12608:
 17375  01F966  0101               	movlb	1	; () banked
 17376  01F968  077B               	decf	sprintf@c& (0+255),f,b
 17377  01F96A  0101               	movlb	1	; () banked
 17378  01F96C  297B               	incf	sprintf@c& (0+255),w,b
 17379  01F96E  B4D8               	btfsc	status,2,c
 17380  01F970  D011               	goto	l12618
 17381  01F972  D771               	goto	l12596
 17382  01F974                     l12610:
 17383                           
 17384                           ; BSR set to: 1
 17385                           ;doprnt.c: 1245: ((*sp++ = ('0')),(++ccnt));
 17386  01F974  C148  FFD9         	movff	sprintf@sp,fsr2l
 17387  01F978  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17388  01F97C  0E30               	movlw	48
 17389  01F97E  6EDF               	movwf	indf2,c
 17390                           
 17391                           ; BSR set to: 1
 17392  01F980  0101               	movlb	1	; () banked
 17393  01F982  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17394  01F984  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17395                           
 17396                           ; BSR set to: 1
 17397  01F986  0101               	movlb	1	; () banked
 17398  01F988  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17399  01F98A  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17400                           
 17401                           ; BSR set to: 1
 17402                           ;doprnt.c: 1246: prec--;
 17403  01F98C  0101               	movlb	1	; () banked
 17404  01F98E  0779               	decf	sprintf@prec& (0+255),f,b
 17405  01F990  A0D8               	btfss	status,0,c
 17406  01F992  077A               	decf	(sprintf@prec+1)& (0+255),f,b
 17407  01F994                     l12618:
 17408                           
 17409                           ; BSR set to: 1
 17410  01F994  0101               	movlb	1	; () banked
 17411  01F996  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17412  01F998  1179               	iorwf	sprintf@prec& (0+255),w,b
 17413  01F99A  B4D8               	btfsc	status,2,c
 17414  01F99C  D0CF               	goto	l12672
 17415  01F99E  D7EA               	goto	l12610
 17416  01F9A0                     l12620:
 17417                           
 17418                           ; BSR set to: 1
 17419                           ;doprnt.c: 1255: }
 17420                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 17421  01F9A0  0101               	movlb	1	; () banked
 17422  01F9A2  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17423  01F9A4  1179               	iorwf	sprintf@prec& (0+255),w,b
 17424  01F9A6  A4D8               	btfss	status,2,c
 17425  01F9A8  D00A               	goto	l12626
 17426                           
 17427                           ; BSR set to: 1
 17428  01F9AA  0101               	movlb	1	; () banked
 17429  01F9AC  516E               	movf	(sprintf@_val+3)& (0+255),w,b
 17430  01F9AE  116B               	iorwf	sprintf@_val& (0+255),w,b
 17431  01F9B0  116C               	iorwf	(sprintf@_val+1)& (0+255),w,b
 17432  01F9B2  116D               	iorwf	(sprintf@_val+2)& (0+255),w,b
 17433  01F9B4  A4D8               	btfss	status,2,c
 17434  01F9B6  D003               	goto	l12626
 17435                           
 17436                           ; BSR set to: 1
 17437                           ;doprnt.c: 1300: prec++;
 17438  01F9B8  0101               	movlb	1	; () banked
 17439  01F9BA  4B79               	infsnz	sprintf@prec& (0+255),f,b
 17440  01F9BC  2B7A               	incf	(sprintf@prec+1)& (0+255),f,b
 17441  01F9BE                     l12626:
 17442                           
 17443                           ; BSR set to: 1
 17444                           ;doprnt.c: 1348: if(c < prec)
 17445  01F9BE  0E80               	movlw	128
 17446  01F9C0  0101               	movlb	1	; () banked
 17447  01F9C2  BF7B               	btfsc	sprintf@c& (0+255),7,b
 17448  01F9C4  0E7F               	movlw	127
 17449  01F9C6  0101               	movlb	1	; () banked
 17450  01F9C8  6F4F               	movwf	??_sprintf& (0+255),b
 17451  01F9CA  0101               	movlb	1	; () banked
 17452  01F9CC  5179               	movf	sprintf@prec& (0+255),w,b
 17453  01F9CE  0101               	movlb	1	; () banked
 17454  01F9D0  5D7B               	subwf	sprintf@c& (0+255),w,b
 17455  01F9D2  0101               	movlb	1	; () banked
 17456  01F9D4  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17457  01F9D6  0A80               	xorlw	128
 17458  01F9D8  0101               	movlb	1	; () banked
 17459  01F9DA  594F               	subwfb	??_sprintf& (0+255),w,b
 17460  01F9DC  B0D8               	btfsc	status,0,c
 17461  01F9DE  D003               	goto	l12630
 17462                           
 17463                           ; BSR set to: 1
 17464                           ;doprnt.c: 1349: c = prec;
 17465  01F9E0  C179  F17B         	movff	sprintf@prec,sprintf@c
 17466  01F9E4  D01A               	goto	l12634
 17467  01F9E6                     l12630:
 17468                           
 17469                           ; BSR set to: 1
 17470                           ;doprnt.c: 1350: else if(prec < c)
 17471  01F9E6  0101               	movlb	1	; () banked
 17472  01F9E8  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17473  01F9EA  0A80               	xorlw	128
 17474  01F9EC  0101               	movlb	1	; () banked
 17475  01F9EE  6F4F               	movwf	??_sprintf& (0+255),b
 17476  01F9F0  0101               	movlb	1	; () banked
 17477  01F9F2  517B               	movf	sprintf@c& (0+255),w,b
 17478  01F9F4  0101               	movlb	1	; () banked
 17479  01F9F6  5D79               	subwf	sprintf@prec& (0+255),w,b
 17480  01F9F8  0E80               	movlw	128
 17481  01F9FA  0101               	movlb	1	; () banked
 17482  01F9FC  BF7B               	btfsc	sprintf@c& (0+255),7,b
 17483  01F9FE  0E7F               	movlw	127
 17484  01FA00  0101               	movlb	1	; () banked
 17485  01FA02  594F               	subwfb	??_sprintf& (0+255),w,b
 17486  01FA04  B0D8               	btfsc	status,0,c
 17487  01FA06  D009               	goto	l12634
 17488                           
 17489                           ; BSR set to: 1
 17490                           ;doprnt.c: 1351: prec = c;
 17491  01FA08  0101               	movlb	1	; () banked
 17492  01FA0A  517B               	movf	sprintf@c& (0+255),w,b
 17493  01FA0C  0101               	movlb	1	; () banked
 17494  01FA0E  6F79               	movwf	sprintf@prec& (0+255),b
 17495  01FA10  0101               	movlb	1	; () banked
 17496  01FA12  6B7A               	clrf	(sprintf@prec+1)& (0+255),b
 17497  01FA14  0101               	movlb	1	; () banked
 17498  01FA16  BF79               	btfsc	sprintf@prec& (0+255),7,b
 17499  01FA18  077A               	decf	(sprintf@prec+1)& (0+255),f,b
 17500  01FA1A                     l12634:
 17501                           
 17502                           ; BSR set to: 1
 17503                           ;doprnt.c: 1354: if(width && flag & 0x03)
 17504  01FA1A  0101               	movlb	1	; () banked
 17505  01FA1C  5173               	movf	(sprintf@width+1)& (0+255),w,b
 17506  01FA1E  1172               	iorwf	sprintf@width& (0+255),w,b
 17507  01FA20  B4D8               	btfsc	status,2,c
 17508  01FA22  D013               	goto	l12640
 17509                           
 17510                           ; BSR set to: 1
 17511  01FA24  0E03               	movlw	3
 17512  01FA26  0101               	movlb	1	; () banked
 17513  01FA28  1570               	andwf	sprintf@flag& (0+255),w,b
 17514  01FA2A  0101               	movlb	1	; () banked
 17515  01FA2C  6F4F               	movwf	??_sprintf& (0+255),b
 17516  01FA2E  0E00               	movlw	0
 17517  01FA30  0101               	movlb	1	; () banked
 17518  01FA32  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 17519  01FA34  0101               	movlb	1	; () banked
 17520  01FA36  6F50               	movwf	(??_sprintf+1)& (0+255),b
 17521  01FA38  0101               	movlb	1	; () banked
 17522  01FA3A  5150               	movf	(??_sprintf+1)& (0+255),w,b
 17523  01FA3C  114F               	iorwf	??_sprintf& (0+255),w,b
 17524  01FA3E  B4D8               	btfsc	status,2,c
 17525  01FA40  D004               	goto	l12640
 17526                           
 17527                           ; BSR set to: 1
 17528                           ;doprnt.c: 1355: width--;
 17529  01FA42  0101               	movlb	1	; () banked
 17530  01FA44  0772               	decf	sprintf@width& (0+255),f,b
 17531  01FA46  A0D8               	btfss	status,0,c
 17532  01FA48  0773               	decf	(sprintf@width+1)& (0+255),f,b
 17533  01FA4A                     l12640:
 17534                           
 17535                           ; BSR set to: 1
 17536                           ;doprnt.c: 1357: if(flag & 0x4000) {
 17537  01FA4A  0101               	movlb	1	; () banked
 17538  01FA4C  AD71               	btfss	(sprintf@flag+1)& (0+255),6,b
 17539  01FA4E  D01F               	goto	l12648
 17540                           
 17541                           ; BSR set to: 1
 17542                           ;doprnt.c: 1358: if(width > prec)
 17543  01FA50  0101               	movlb	1	; () banked
 17544  01FA52  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17545  01FA54  0A80               	xorlw	128
 17546  01FA56  0101               	movlb	1	; () banked
 17547  01FA58  6F4F               	movwf	??_sprintf& (0+255),b
 17548  01FA5A  0101               	movlb	1	; () banked
 17549  01FA5C  5172               	movf	sprintf@width& (0+255),w,b
 17550  01FA5E  0101               	movlb	1	; () banked
 17551  01FA60  5D79               	subwf	sprintf@prec& (0+255),w,b
 17552  01FA62  0101               	movlb	1	; () banked
 17553  01FA64  5173               	movf	(sprintf@width+1)& (0+255),w,b
 17554  01FA66  0A80               	xorlw	128
 17555  01FA68  0101               	movlb	1	; () banked
 17556  01FA6A  594F               	subwfb	??_sprintf& (0+255),w,b
 17557  01FA6C  B0D8               	btfsc	status,0,c
 17558  01FA6E  D009               	goto	l12646
 17559                           
 17560                           ; BSR set to: 1
 17561                           ;doprnt.c: 1359: width -= prec;
 17562  01FA70  0101               	movlb	1	; () banked
 17563  01FA72  5179               	movf	sprintf@prec& (0+255),w,b
 17564  01FA74  0101               	movlb	1	; () banked
 17565  01FA76  5F72               	subwf	sprintf@width& (0+255),f,b
 17566  01FA78  0101               	movlb	1	; () banked
 17567  01FA7A  517A               	movf	(sprintf@prec+1)& (0+255),w,b
 17568  01FA7C  0101               	movlb	1	; () banked
 17569  01FA7E  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
 17570  01FA80  D006               	goto	l12648
 17571  01FA82                     l12646:
 17572                           
 17573                           ; BSR set to: 1
 17574                           ;doprnt.c: 1360: else
 17575                           ;doprnt.c: 1361: width = 0;
 17576  01FA82  0E00               	movlw	0
 17577  01FA84  0101               	movlb	1	; () banked
 17578  01FA86  6F73               	movwf	(sprintf@width+1)& (0+255),b
 17579  01FA88  0E00               	movlw	0
 17580  01FA8A  0101               	movlb	1	; () banked
 17581  01FA8C  6F72               	movwf	sprintf@width& (0+255),b
 17582  01FA8E                     l12648:
 17583                           
 17584                           ; BSR set to: 1
 17585                           ;doprnt.c: 1362: }
 17586                           ;doprnt.c: 1390: if(width > c)
 17587  01FA8E  0E80               	movlw	128
 17588  01FA90  0101               	movlb	1	; () banked
 17589  01FA92  BF7B               	btfsc	sprintf@c& (0+255),7,b
 17590  01FA94  0E7F               	movlw	127
 17591  01FA96  0101               	movlb	1	; () banked
 17592  01FA98  6F4F               	movwf	??_sprintf& (0+255),b
 17593  01FA9A  0101               	movlb	1	; () banked
 17594  01FA9C  5172               	movf	sprintf@width& (0+255),w,b
 17595  01FA9E  0101               	movlb	1	; () banked
 17596  01FAA0  5D7B               	subwf	sprintf@c& (0+255),w,b
 17597  01FAA2  0101               	movlb	1	; () banked
 17598  01FAA4  5173               	movf	(sprintf@width+1)& (0+255),w,b
 17599  01FAA6  0A80               	xorlw	128
 17600  01FAA8  0101               	movlb	1	; () banked
 17601  01FAAA  594F               	subwfb	??_sprintf& (0+255),w,b
 17602  01FAAC  B0D8               	btfsc	status,0,c
 17603  01FAAE  D00B               	goto	l12652
 17604                           
 17605                           ; BSR set to: 1
 17606                           ;doprnt.c: 1391: width -= c;
 17607  01FAB0  0101               	movlb	1	; () banked
 17608  01FAB2  517B               	movf	sprintf@c& (0+255),w,b
 17609  01FAB4  0101               	movlb	1	; () banked
 17610  01FAB6  5F72               	subwf	sprintf@width& (0+255),f,b
 17611  01FAB8  0E00               	movlw	0
 17612  01FABA  0101               	movlb	1	; () banked
 17613  01FABC  BF7B               	btfsc	sprintf@c& (0+255),7,b
 17614  01FABE  0EFF               	movlw	255
 17615  01FAC0  0101               	movlb	1	; () banked
 17616  01FAC2  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
 17617  01FAC4  D006               	goto	l12654
 17618  01FAC6                     l12652:
 17619                           
 17620                           ; BSR set to: 1
 17621                           ;doprnt.c: 1392: else
 17622                           ;doprnt.c: 1393: width = 0;
 17623  01FAC6  0E00               	movlw	0
 17624  01FAC8  0101               	movlb	1	; () banked
 17625  01FACA  6F73               	movwf	(sprintf@width+1)& (0+255),b
 17626  01FACC  0E00               	movlw	0
 17627  01FACE  0101               	movlb	1	; () banked
 17628  01FAD0  6F72               	movwf	sprintf@width& (0+255),b
 17629  01FAD2                     l12654:
 17630                           
 17631                           ; BSR set to: 1
 17632                           ;doprnt.c: 1431: {
 17633                           ;doprnt.c: 1433: if(width
 17634                           ;doprnt.c: 1437: )
 17635  01FAD2  0101               	movlb	1	; () banked
 17636  01FAD4  5173               	movf	(sprintf@width+1)& (0+255),w,b
 17637  01FAD6  1172               	iorwf	sprintf@width& (0+255),w,b
 17638  01FAD8  B4D8               	btfsc	status,2,c
 17639  01FADA  D015               	goto	l12664
 17640  01FADC                     l12656:
 17641                           
 17642                           ; BSR set to: 1
 17643                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
 17644  01FADC  C148  FFD9         	movff	sprintf@sp,fsr2l
 17645  01FAE0  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17646  01FAE4  0E20               	movlw	32
 17647  01FAE6  6EDF               	movwf	indf2,c
 17648                           
 17649                           ; BSR set to: 1
 17650  01FAE8  0101               	movlb	1	; () banked
 17651  01FAEA  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17652  01FAEC  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17653                           
 17654                           ; BSR set to: 1
 17655  01FAEE  0101               	movlb	1	; () banked
 17656  01FAF0  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17657  01FAF2  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17658                           
 17659                           ; BSR set to: 1
 17660                           ;doprnt.c: 1440: while(--width);
 17661  01FAF4  0101               	movlb	1	; () banked
 17662  01FAF6  0772               	decf	sprintf@width& (0+255),f,b
 17663  01FAF8  A0D8               	btfss	status,0,c
 17664  01FAFA  0773               	decf	(sprintf@width+1)& (0+255),f,b
 17665  01FAFC  0101               	movlb	1	; () banked
 17666  01FAFE  5173               	movf	(sprintf@width+1)& (0+255),w,b
 17667  01FB00  1172               	iorwf	sprintf@width& (0+255),w,b
 17668  01FB02  A4D8               	btfss	status,2,c
 17669  01FB04  D7EB               	goto	l12656
 17670  01FB06                     l12664:
 17671                           
 17672                           ; BSR set to: 1
 17673                           ;doprnt.c: 1447: if(flag & 0x03)
 17674  01FB06  0E03               	movlw	3
 17675  01FB08  0101               	movlb	1	; () banked
 17676  01FB0A  1570               	andwf	sprintf@flag& (0+255),w,b
 17677  01FB0C  0101               	movlb	1	; () banked
 17678  01FB0E  6F4F               	movwf	??_sprintf& (0+255),b
 17679  01FB10  0E00               	movlw	0
 17680  01FB12  0101               	movlb	1	; () banked
 17681  01FB14  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
 17682  01FB16  0101               	movlb	1	; () banked
 17683  01FB18  6F50               	movwf	(??_sprintf+1)& (0+255),b
 17684  01FB1A  0101               	movlb	1	; () banked
 17685  01FB1C  5150               	movf	(??_sprintf+1)& (0+255),w,b
 17686  01FB1E  114F               	iorwf	??_sprintf& (0+255),w,b
 17687  01FB20  B4D8               	btfsc	status,2,c
 17688  01FB22  D00C               	goto	l12672
 17689                           
 17690                           ; BSR set to: 1
 17691                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
 17692  01FB24  C148  FFD9         	movff	sprintf@sp,fsr2l
 17693  01FB28  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17694  01FB2C  0E2D               	movlw	45
 17695  01FB2E  6EDF               	movwf	indf2,c
 17696  01FB30                     L8:
 17697                           
 17698                           ; BSR set to: 1
 17699  01FB30  0101               	movlb	1	; () banked
 17700  01FB32  4B48               	infsnz	sprintf@sp& (0+255),f,b
 17701  01FB34  2B49               	incf	(sprintf@sp+1)& (0+255),f,b
 17702                           
 17703                           ; BSR set to: 1
 17704  01FB36  0101               	movlb	1	; () banked
 17705  01FB38  4B66               	infsnz	sprintf@ccnt& (0+255),f,b
 17706  01FB3A  2B67               	incf	(sprintf@ccnt+1)& (0+255),f,b
 17707  01FB3C                     l12672:
 17708                           
 17709                           ; BSR set to: 1
 17710  01FB3C  0101               	movlb	1	; () banked
 17711  01FB3E  C14A  FFF6         	movff	sprintf@f,tblptrl
 17712  01FB42  0101               	movlb	1	; () banked
 17713  01FB44  C14B  FFF7         	movff	sprintf@f+1,tblptrh
 17714  01FB48  0101               	movlb	1	; () banked
 17715  01FB4A  4B4A               	infsnz	sprintf@f& (0+255),f,b
 17716  01FB4C  2B4B               	incf	(sprintf@f+1)& (0+255),f,b
 17717  01FB4E                     	if	0	;tblptru may be non-zero
 17718  01FB4E                     	endif
 17719  01FB4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17720  01FB4E  0E00               	movlw	low (__mediumconst shr (0+16))
 17721  01FB50  6EF8               	movwf	tblptru,c
 17722  01FB52                     	endif
 17723  01FB52  0008               	tblrd		*
 17724  01FB54  0101               	movlb	1	; () banked
 17725  01FB56  CFF5 F17B          	movff	tablat,sprintf@c
 17726  01FB5A  0101               	movlb	1	; () banked
 17727  01FB5C  677B               	tstfsz	sprintf@c& (0+255),b
 17728  01FB5E  EF10  F0F8         	goto	l12396
 17729  01FB62                     l12674:
 17730                           
 17731                           ; BSR set to: 1
 17732                           ;doprnt.c: 1547: *sp = 0;
 17733  01FB62  C148  FFD9         	movff	sprintf@sp,fsr2l
 17734  01FB66  C149  FFDA         	movff	sprintf@sp+1,fsr2h
 17735  01FB6A  0E00               	movlw	0
 17736  01FB6C  6EDF               	movwf	indf2,c
 17737                           
 17738                           ; BSR set to: 1
 17739                           ;doprnt.c: 1549: return ccnt;
 17740  01FB6E  C166  F148         	movff	sprintf@ccnt,?_sprintf
 17741  01FB72  C167  F149         	movff	sprintf@ccnt+1,?_sprintf+1
 17742  01FB76  0012               	return	
 17743  01FB78                     __end_of_sprintf:
 17744                           	opt stack 0
 17745                           tblptru	equ	0xFF8
 17746                           tblptrh	equ	0xFF7
 17747                           tblptrl	equ	0xFF6
 17748                           tablat	equ	0xFF5
 17749                           prodh	equ	0xFF4
 17750                           prodl	equ	0xFF3
 17751                           intcon	equ	0xFF2
 17752                           indf0	equ	0xFEF
 17753                           postinc0	equ	0xFEE
 17754                           fsr0h	equ	0xFEA
 17755                           fsr0l	equ	0xFE9
 17756                           wreg	equ	0xFE8
 17757                           indf1	equ	0xFE7
 17758                           postinc1	equ	0xFE6
 17759                           postdec1	equ	0xFE5
 17760                           fsr1h	equ	0xFE2
 17761                           fsr1l	equ	0xFE1
 17762                           indf2	equ	0xFDF
 17763                           postinc2	equ	0xFDE
 17764                           postdec2	equ	0xFDD
 17765                           fsr2h	equ	0xFDA
 17766                           fsr2l	equ	0xFD9
 17767                           status	equ	0xFD8
 17768                           
 17769 ;; *************** function _scale *****************
 17770 ;; Defined at:
 17771 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 17772 ;; Parameters:    Size  Location     Type
 17773 ;;  scl             1    wreg     char 
 17774 ;; Auto vars:     Size  Location     Type
 17775 ;;  scl             1   41[BANK1 ] char 
 17776 ;; Return value:  Size  Location     Type
 17777 ;;                  3   35[BANK1 ] char 
 17778 ;; Registers used:
 17779 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17780 ;; Tracked objects:
 17781 ;;		On entry : 0/0
 17782 ;;		On exit  : 0/0
 17783 ;;		Unchanged: 0/0
 17784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 17785 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17786 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17788 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17789 ;;Total ram usage:        7 bytes
 17790 ;; Hardware stack levels used:    1
 17791 ;; Hardware stack levels required when called:   12
 17792 ;; This function calls:
 17793 ;;		___awdiv
 17794 ;;		___awmod
 17795 ;;		___ftmul
 17796 ;;		___wmul
 17797 ;; This function is called by:
 17798 ;;		_sprintf
 17799 ;; This function uses a non-reentrant model
 17800 ;;
 17801                           
 17802                           	psect	text20
 17803  013C5E                     __ptext20:
 17804                           	opt stack 0
 17805  013C5E                     _scale:
 17806                           	opt stack 15
 17807                           
 17808                           ; BSR set to: 1
 17809                           ;incstack = 0
 17810                           ;scale@scl stored from wreg
 17811  013C5E  0101               	movlb	1	; () banked
 17812  013C60  6F29               	movwf	scale@scl& (0+255),b
 17813                           
 17814                           ; BSR set to: 1
 17815                           ;doprnt.c: 428: if(scl < 0) {
 17816  013C62  0101               	movlb	1	; () banked
 17817  013C64  AF29               	btfss	scale@scl& (0+255),7,b
 17818  013C66  D16F               	goto	l11326
 17819                           
 17820                           ; BSR set to: 1
 17821                           ;doprnt.c: 429: scl = -scl;
 17822  013C68  0101               	movlb	1	; () banked
 17823  013C6A  6D29               	negf	scale@scl& (0+255),b
 17824                           
 17825                           ;doprnt.c: 430: if(scl>=110)
 17826  013C6C  0101               	movlb	1	; () banked
 17827  013C6E  5129               	movf	scale@scl& (0+255),w,b
 17828  013C70  0A80               	xorlw	128
 17829  013C72  0F12               	addlw	-238
 17830  013C74  A0D8               	btfss	status,0,c
 17831  013C76  D0CF               	goto	l11316
 17832                           
 17833                           ; BSR set to: 1
 17834                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17835  013C78  0E00               	movlw	0
 17836  013C7A  0101               	movlb	1	; () banked
 17837  013C7C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17838  013C7E  0E03               	movlw	3
 17839  013C80  0101               	movlb	1	; () banked
 17840  013C82  6F10               	movwf	___wmul@multiplicand& (0+255),b
 17841  013C84  0E00               	movlw	0
 17842  013C86  0101               	movlb	1	; () banked
 17843  013C88  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 17844  013C8A  0E0A               	movlw	10
 17845  013C8C  0101               	movlb	1	; () banked
 17846  013C8E  6F08               	movwf	___awdiv@divisor& (0+255),b
 17847  013C90  0E00               	movlw	0
 17848  013C92  0101               	movlb	1	; () banked
 17849  013C94  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 17850  013C96  0E64               	movlw	100
 17851  013C98  0101               	movlb	1	; () banked
 17852  013C9A  6F02               	movwf	___awmod@divisor& (0+255),b
 17853  013C9C  0101               	movlb	1	; () banked
 17854  013C9E  5129               	movf	scale@scl& (0+255),w,b
 17855  013CA0  0101               	movlb	1	; () banked
 17856  013CA2  6F00               	movwf	___awmod@dividend& (0+255),b
 17857  013CA4  0101               	movlb	1	; () banked
 17858  013CA6  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 17859  013CA8  0101               	movlb	1	; () banked
 17860  013CAA  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 17861  013CAC  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 17862  013CAE  ECB9  F0CE         	call	___awmod	;wreg free
 17863  013CB2  0101               	movlb	1	; () banked
 17864  013CB4  C100  F106         	movff	?___awmod,___awdiv@dividend
 17865  013CB8  0101               	movlb	1	; () banked
 17866  013CBA  C101  F107         	movff	?___awmod+1,___awdiv@dividend+1
 17867  013CBE  ECC2  F0C9         	call	___awdiv	;wreg free
 17868  013CC2  0E09               	movlw	9
 17869  013CC4  0101               	movlb	1	; () banked
 17870  013CC6  2506               	addwf	?___awdiv& (0+255),w,b
 17871  013CC8  0101               	movlb	1	; () banked
 17872  013CCA  6F0E               	movwf	___wmul@multiplier& (0+255),b
 17873  013CCC  0E00               	movlw	0
 17874  013CCE  0101               	movlb	1	; () banked
 17875  013CD0  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 17876  013CD2  0101               	movlb	1	; () banked
 17877  013CD4  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 17878  013CD6  EC15  F0DA         	call	___wmul	;wreg free
 17879  013CDA  0EB3               	movlw	low __npowers_
 17880  013CDC  0101               	movlb	1	; () banked
 17881  013CDE  250E               	addwf	?___wmul& (0+255),w,b
 17882  013CE0  6EF6               	movwf	tblptrl,c
 17883  013CE2  0EFE               	movlw	high __npowers_
 17884  013CE4  0101               	movlb	1	; () banked
 17885  013CE6  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 17886  013CE8  6EF7               	movwf	tblptrh,c
 17887  013CEA                     	if	1	;There are 3 active tblptr bytes
 17888  013CEA  6AF8               	clrf	tblptru,c
 17889  013CEC  0E00               	movlw	low (__mediumconst shr (0+16))
 17890  013CEE  22F8               	addwfc	tblptru,f,c
 17891  013CF0                     	endif
 17892  013CF0  0009               	tblrd		*+
 17893  013CF2  0101               	movlb	1	; () banked
 17894  013CF4  CFF5 F117          	movff	tablat,___ftmul@f2
 17895  013CF8  0009               	tblrd		*+
 17896  013CFA  0101               	movlb	1	; () banked
 17897  013CFC  CFF5 F118          	movff	tablat,___ftmul@f2+1
 17898  013D00  000A               	tblrd		*-
 17899  013D02  0101               	movlb	1	; () banked
 17900  013D04  CFF5 F119          	movff	tablat,___ftmul@f2+2
 17901  013D08  0E00               	movlw	0
 17902  013D0A  0101               	movlb	1	; () banked
 17903  013D0C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 17904  013D0E  0E64               	movlw	100
 17905  013D10  0101               	movlb	1	; () banked
 17906  013D12  6F08               	movwf	___awdiv@divisor& (0+255),b
 17907  013D14  0101               	movlb	1	; () banked
 17908  013D16  5129               	movf	scale@scl& (0+255),w,b
 17909  013D18  0101               	movlb	1	; () banked
 17910  013D1A  6F06               	movwf	___awdiv@dividend& (0+255),b
 17911  013D1C  0101               	movlb	1	; () banked
 17912  013D1E  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 17913  013D20  0101               	movlb	1	; () banked
 17914  013D22  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 17915  013D24  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 17916  013D26  ECC2  F0C9         	call	___awdiv	;wreg free
 17917  013D2A  0E12               	movlw	18
 17918  013D2C  0101               	movlb	1	; () banked
 17919  013D2E  2506               	addwf	?___awdiv& (0+255),w,b
 17920  013D30  0101               	movlb	1	; () banked
 17921  013D32  6F0E               	movwf	___wmul@multiplier& (0+255),b
 17922  013D34  0E00               	movlw	0
 17923  013D36  0101               	movlb	1	; () banked
 17924  013D38  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 17925  013D3A  0101               	movlb	1	; () banked
 17926  013D3C  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 17927  013D3E  0E00               	movlw	0
 17928  013D40  0101               	movlb	1	; () banked
 17929  013D42  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17930  013D44  0E03               	movlw	3
 17931  013D46  0101               	movlb	1	; () banked
 17932  013D48  6F10               	movwf	___wmul@multiplicand& (0+255),b
 17933  013D4A  EC15  F0DA         	call	___wmul	;wreg free
 17934  013D4E  0EB3               	movlw	low __npowers_
 17935  013D50  0101               	movlb	1	; () banked
 17936  013D52  250E               	addwf	?___wmul& (0+255),w,b
 17937  013D54  6EF6               	movwf	tblptrl,c
 17938  013D56  0EFE               	movlw	high __npowers_
 17939  013D58  0101               	movlb	1	; () banked
 17940  013D5A  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 17941  013D5C  6EF7               	movwf	tblptrh,c
 17942  013D5E                     	if	1	;There are 3 active tblptr bytes
 17943  013D5E  6AF8               	clrf	tblptru,c
 17944  013D60  0E00               	movlw	low (__mediumconst shr (0+16))
 17945  013D62  22F8               	addwfc	tblptru,f,c
 17946  013D64                     	endif
 17947  013D64  0009               	tblrd		*+
 17948  013D66  0101               	movlb	1	; () banked
 17949  013D68  CFF5 F114          	movff	tablat,___ftmul@f1
 17950  013D6C  0009               	tblrd		*+
 17951  013D6E  0101               	movlb	1	; () banked
 17952  013D70  CFF5 F115          	movff	tablat,___ftmul@f1+1
 17953  013D74  000A               	tblrd		*-
 17954  013D76  0101               	movlb	1	; () banked
 17955  013D78  CFF5 F116          	movff	tablat,___ftmul@f1+2
 17956  013D7C  ECA2  F0BB         	call	___ftmul	;wreg free
 17957  013D80  C114  F126         	movff	?___ftmul,_scale$10834
 17958  013D84  C115  F127         	movff	?___ftmul+1,_scale$10834+1
 17959  013D88  C116  F128         	movff	?___ftmul+2,_scale$10834+2
 17960                           
 17961                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 17962  013D8C  C126  F114         	movff	_scale$10834,___ftmul@f1
 17963  013D90  C127  F115         	movff	_scale$10834+1,___ftmul@f1+1
 17964  013D94  C128  F116         	movff	_scale$10834+2,___ftmul@f1+2
 17965  013D98  0E00               	movlw	0
 17966  013D9A  0101               	movlb	1	; () banked
 17967  013D9C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17968  013D9E  0E03               	movlw	3
 17969  013DA0  0101               	movlb	1	; () banked
 17970  013DA2  6F10               	movwf	___wmul@multiplicand& (0+255),b
 17971  013DA4  0E00               	movlw	0
 17972  013DA6  0101               	movlb	1	; () banked
 17973  013DA8  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 17974  013DAA  0E0A               	movlw	10
 17975  013DAC  0101               	movlb	1	; () banked
 17976  013DAE  6F02               	movwf	___awmod@divisor& (0+255),b
 17977  013DB0  0101               	movlb	1	; () banked
 17978  013DB2  5129               	movf	scale@scl& (0+255),w,b
 17979  013DB4  0101               	movlb	1	; () banked
 17980  013DB6  6F00               	movwf	___awmod@dividend& (0+255),b
 17981  013DB8  0101               	movlb	1	; () banked
 17982  013DBA  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 17983  013DBC  0101               	movlb	1	; () banked
 17984  013DBE  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 17985  013DC0  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 17986  013DC2  ECB9  F0CE         	call	___awmod	;wreg free
 17987  013DC6  0101               	movlb	1	; () banked
 17988  013DC8  C100  F10E         	movff	?___awmod,___wmul@multiplier
 17989  013DCC  0101               	movlb	1	; () banked
 17990  013DCE  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 17991  013DD2  EC15  F0DA         	call	___wmul	;wreg free
 17992  013DD6  0EB3               	movlw	low __npowers_
 17993  013DD8  0101               	movlb	1	; () banked
 17994  013DDA  250E               	addwf	?___wmul& (0+255),w,b
 17995  013DDC  6EF6               	movwf	tblptrl,c
 17996  013DDE  0EFE               	movlw	high __npowers_
 17997  013DE0  0101               	movlb	1	; () banked
 17998  013DE2  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 17999  013DE4  6EF7               	movwf	tblptrh,c
 18000  013DE6                     	if	1	;There are 3 active tblptr bytes
 18001  013DE6  6AF8               	clrf	tblptru,c
 18002  013DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 18003  013DEA  22F8               	addwfc	tblptru,f,c
 18004  013DEC                     	endif
 18005  013DEC  0009               	tblrd		*+
 18006  013DEE  0101               	movlb	1	; () banked
 18007  013DF0  CFF5 F117          	movff	tablat,___ftmul@f2
 18008  013DF4  0009               	tblrd		*+
 18009  013DF6  0101               	movlb	1	; () banked
 18010  013DF8  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18011  013DFC  000A               	tblrd		*-
 18012  013DFE  0101               	movlb	1	; () banked
 18013  013E00  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18014  013E04  ECA2  F0BB         	call	___ftmul	;wreg free
 18015  013E08  C114  F123         	movff	?___ftmul,?_scale
 18016  013E0C  C115  F124         	movff	?___ftmul+1,?_scale+1
 18017  013E10  C116  F125         	movff	?___ftmul+2,?_scale+2
 18018  013E14  0012               	return	
 18019  013E16                     l11316:
 18020                           
 18021                           ;doprnt.c: 432: else if(scl > 10)
 18022  013E16  0101               	movlb	1	; () banked
 18023  013E18  5129               	movf	scale@scl& (0+255),w,b
 18024  013E1A  0A80               	xorlw	128
 18025  013E1C  0F75               	addlw	-139
 18026  013E1E  A0D8               	btfss	status,0,c
 18027  013E20  D079               	goto	l11322
 18028                           
 18029                           ; BSR set to: 1
 18030                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 18031  013E22  0E00               	movlw	0
 18032  013E24  0101               	movlb	1	; () banked
 18033  013E26  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18034  013E28  0E0A               	movlw	10
 18035  013E2A  0101               	movlb	1	; () banked
 18036  013E2C  6F08               	movwf	___awdiv@divisor& (0+255),b
 18037  013E2E  0101               	movlb	1	; () banked
 18038  013E30  5129               	movf	scale@scl& (0+255),w,b
 18039  013E32  0101               	movlb	1	; () banked
 18040  013E34  6F06               	movwf	___awdiv@dividend& (0+255),b
 18041  013E36  0101               	movlb	1	; () banked
 18042  013E38  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 18043  013E3A  0101               	movlb	1	; () banked
 18044  013E3C  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 18045  013E3E  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 18046  013E40  ECC2  F0C9         	call	___awdiv	;wreg free
 18047  013E44  0E09               	movlw	9
 18048  013E46  0101               	movlb	1	; () banked
 18049  013E48  2506               	addwf	?___awdiv& (0+255),w,b
 18050  013E4A  0101               	movlb	1	; () banked
 18051  013E4C  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18052  013E4E  0E00               	movlw	0
 18053  013E50  0101               	movlb	1	; () banked
 18054  013E52  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18055  013E54  0101               	movlb	1	; () banked
 18056  013E56  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18057  013E58  0E00               	movlw	0
 18058  013E5A  0101               	movlb	1	; () banked
 18059  013E5C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18060  013E5E  0E03               	movlw	3
 18061  013E60  0101               	movlb	1	; () banked
 18062  013E62  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18063  013E64  EC15  F0DA         	call	___wmul	;wreg free
 18064  013E68  0EB3               	movlw	low __npowers_
 18065  013E6A  0101               	movlb	1	; () banked
 18066  013E6C  250E               	addwf	?___wmul& (0+255),w,b
 18067  013E6E  6EF6               	movwf	tblptrl,c
 18068  013E70  0EFE               	movlw	high __npowers_
 18069  013E72  0101               	movlb	1	; () banked
 18070  013E74  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18071  013E76  6EF7               	movwf	tblptrh,c
 18072  013E78                     	if	1	;There are 3 active tblptr bytes
 18073  013E78  6AF8               	clrf	tblptru,c
 18074  013E7A  0E00               	movlw	low (__mediumconst shr (0+16))
 18075  013E7C  22F8               	addwfc	tblptru,f,c
 18076  013E7E                     	endif
 18077  013E7E  0009               	tblrd		*+
 18078  013E80  0101               	movlb	1	; () banked
 18079  013E82  CFF5 F114          	movff	tablat,___ftmul@f1
 18080  013E86  0009               	tblrd		*+
 18081  013E88  0101               	movlb	1	; () banked
 18082  013E8A  CFF5 F115          	movff	tablat,___ftmul@f1+1
 18083  013E8E  000A               	tblrd		*-
 18084  013E90  0101               	movlb	1	; () banked
 18085  013E92  CFF5 F116          	movff	tablat,___ftmul@f1+2
 18086  013E96  0E00               	movlw	0
 18087  013E98  0101               	movlb	1	; () banked
 18088  013E9A  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18089  013E9C  0E03               	movlw	3
 18090  013E9E  0101               	movlb	1	; () banked
 18091  013EA0  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18092  013EA2  0E00               	movlw	0
 18093  013EA4  0101               	movlb	1	; () banked
 18094  013EA6  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18095  013EA8  0E0A               	movlw	10
 18096  013EAA  0101               	movlb	1	; () banked
 18097  013EAC  6F02               	movwf	___awmod@divisor& (0+255),b
 18098  013EAE  0101               	movlb	1	; () banked
 18099  013EB0  5129               	movf	scale@scl& (0+255),w,b
 18100  013EB2  0101               	movlb	1	; () banked
 18101  013EB4  6F00               	movwf	___awmod@dividend& (0+255),b
 18102  013EB6  0101               	movlb	1	; () banked
 18103  013EB8  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18104  013EBA  0101               	movlb	1	; () banked
 18105  013EBC  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 18106  013EBE  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 18107  013EC0  ECB9  F0CE         	call	___awmod	;wreg free
 18108  013EC4  0101               	movlb	1	; () banked
 18109  013EC6  C100  F10E         	movff	?___awmod,___wmul@multiplier
 18110  013ECA  0101               	movlb	1	; () banked
 18111  013ECC  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 18112  013ED0  EC15  F0DA         	call	___wmul	;wreg free
 18113  013ED4  0EB3               	movlw	low __npowers_
 18114  013ED6  0101               	movlb	1	; () banked
 18115  013ED8  250E               	addwf	?___wmul& (0+255),w,b
 18116  013EDA  6EF6               	movwf	tblptrl,c
 18117  013EDC  0EFE               	movlw	high __npowers_
 18118  013EDE  0101               	movlb	1	; () banked
 18119  013EE0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18120  013EE2  6EF7               	movwf	tblptrh,c
 18121  013EE4                     	if	1	;There are 3 active tblptr bytes
 18122  013EE4  6AF8               	clrf	tblptru,c
 18123  013EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 18124  013EE8  22F8               	addwfc	tblptru,f,c
 18125  013EEA                     	endif
 18126  013EEA  0009               	tblrd		*+
 18127  013EEC  0101               	movlb	1	; () banked
 18128  013EEE  CFF5 F117          	movff	tablat,___ftmul@f2
 18129  013EF2  0009               	tblrd		*+
 18130  013EF4  0101               	movlb	1	; () banked
 18131  013EF6  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18132  013EFA  000A               	tblrd		*-
 18133  013EFC  0101               	movlb	1	; () banked
 18134  013EFE  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18135  013F02  ECA2  F0BB         	call	___ftmul	;wreg free
 18136  013F06  C114  F123         	movff	?___ftmul,?_scale
 18137  013F0A  C115  F124         	movff	?___ftmul+1,?_scale+1
 18138  013F0E  C116  F125         	movff	?___ftmul+2,?_scale+2
 18139  013F12  0012               	return	
 18140  013F14                     l11322:
 18141                           
 18142                           ;doprnt.c: 434: return _npowers_[scl];
 18143  013F14  0101               	movlb	1	; () banked
 18144  013F16  5129               	movf	scale@scl& (0+255),w,b
 18145  013F18  0D03               	mullw	3
 18146  013F1A  0EB3               	movlw	low __npowers_
 18147  013F1C  24F3               	addwf	prodl,w,c
 18148  013F1E  6EF6               	movwf	tblptrl,c
 18149  013F20  0EFE               	movlw	high __npowers_
 18150  013F22  20F4               	addwfc	prodh,w,c
 18151  013F24  6EF7               	movwf	tblptrh,c
 18152  013F26                     	if	1	;There are 3 active tblptr bytes
 18153  013F26  6AF8               	clrf	tblptru,c
 18154  013F28  0E00               	movlw	low (__mediumconst shr (0+16))
 18155  013F2A  22F8               	addwfc	tblptru,f,c
 18156  013F2C                     	endif
 18157  013F2C  0009               	tblrd		*+
 18158  013F2E  0101               	movlb	1	; () banked
 18159  013F30  CFF5 F123          	movff	tablat,?_scale
 18160  013F34  0009               	tblrd		*+
 18161  013F36  0101               	movlb	1	; () banked
 18162  013F38  CFF5 F124          	movff	tablat,?_scale+1
 18163  013F3C  000A               	tblrd		*-
 18164  013F3E  0101               	movlb	1	; () banked
 18165  013F40  CFF5 F125          	movff	tablat,?_scale+2
 18166  013F44  0012               	return	
 18167  013F46                     l11326:
 18168                           
 18169                           ; BSR set to: 1
 18170                           ;doprnt.c: 435: }
 18171                           ;doprnt.c: 436: if(scl>=110)
 18172  013F46  0101               	movlb	1	; () banked
 18173  013F48  5129               	movf	scale@scl& (0+255),w,b
 18174  013F4A  0A80               	xorlw	128
 18175  013F4C  0F12               	addlw	-238
 18176  013F4E  A0D8               	btfss	status,0,c
 18177  013F50  D0CF               	goto	l11334
 18178                           
 18179                           ; BSR set to: 1
 18180                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18181  013F52  0E00               	movlw	0
 18182  013F54  0101               	movlb	1	; () banked
 18183  013F56  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18184  013F58  0E03               	movlw	3
 18185  013F5A  0101               	movlb	1	; () banked
 18186  013F5C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18187  013F5E  0E00               	movlw	0
 18188  013F60  0101               	movlb	1	; () banked
 18189  013F62  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18190  013F64  0E0A               	movlw	10
 18191  013F66  0101               	movlb	1	; () banked
 18192  013F68  6F08               	movwf	___awdiv@divisor& (0+255),b
 18193  013F6A  0E00               	movlw	0
 18194  013F6C  0101               	movlb	1	; () banked
 18195  013F6E  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18196  013F70  0E64               	movlw	100
 18197  013F72  0101               	movlb	1	; () banked
 18198  013F74  6F02               	movwf	___awmod@divisor& (0+255),b
 18199  013F76  0101               	movlb	1	; () banked
 18200  013F78  5129               	movf	scale@scl& (0+255),w,b
 18201  013F7A  0101               	movlb	1	; () banked
 18202  013F7C  6F00               	movwf	___awmod@dividend& (0+255),b
 18203  013F7E  0101               	movlb	1	; () banked
 18204  013F80  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18205  013F82  0101               	movlb	1	; () banked
 18206  013F84  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 18207  013F86  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 18208  013F88  ECB9  F0CE         	call	___awmod	;wreg free
 18209  013F8C  0101               	movlb	1	; () banked
 18210  013F8E  C100  F106         	movff	?___awmod,___awdiv@dividend
 18211  013F92  0101               	movlb	1	; () banked
 18212  013F94  C101  F107         	movff	?___awmod+1,___awdiv@dividend+1
 18213  013F98  ECC2  F0C9         	call	___awdiv	;wreg free
 18214  013F9C  0E09               	movlw	9
 18215  013F9E  0101               	movlb	1	; () banked
 18216  013FA0  2506               	addwf	?___awdiv& (0+255),w,b
 18217  013FA2  0101               	movlb	1	; () banked
 18218  013FA4  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18219  013FA6  0E00               	movlw	0
 18220  013FA8  0101               	movlb	1	; () banked
 18221  013FAA  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18222  013FAC  0101               	movlb	1	; () banked
 18223  013FAE  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18224  013FB0  EC15  F0DA         	call	___wmul	;wreg free
 18225  013FB4  0EDA               	movlw	low __powers_
 18226  013FB6  0101               	movlb	1	; () banked
 18227  013FB8  250E               	addwf	?___wmul& (0+255),w,b
 18228  013FBA  6EF6               	movwf	tblptrl,c
 18229  013FBC  0EFE               	movlw	high __powers_
 18230  013FBE  0101               	movlb	1	; () banked
 18231  013FC0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18232  013FC2  6EF7               	movwf	tblptrh,c
 18233  013FC4                     	if	1	;There are 3 active tblptr bytes
 18234  013FC4  6AF8               	clrf	tblptru,c
 18235  013FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 18236  013FC8  22F8               	addwfc	tblptru,f,c
 18237  013FCA                     	endif
 18238  013FCA  0009               	tblrd		*+
 18239  013FCC  0101               	movlb	1	; () banked
 18240  013FCE  CFF5 F117          	movff	tablat,___ftmul@f2
 18241  013FD2  0009               	tblrd		*+
 18242  013FD4  0101               	movlb	1	; () banked
 18243  013FD6  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18244  013FDA  000A               	tblrd		*-
 18245  013FDC  0101               	movlb	1	; () banked
 18246  013FDE  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18247  013FE2  0E00               	movlw	0
 18248  013FE4  0101               	movlb	1	; () banked
 18249  013FE6  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18250  013FE8  0E64               	movlw	100
 18251  013FEA  0101               	movlb	1	; () banked
 18252  013FEC  6F08               	movwf	___awdiv@divisor& (0+255),b
 18253  013FEE  0101               	movlb	1	; () banked
 18254  013FF0  5129               	movf	scale@scl& (0+255),w,b
 18255  013FF2  0101               	movlb	1	; () banked
 18256  013FF4  6F06               	movwf	___awdiv@dividend& (0+255),b
 18257  013FF6  0101               	movlb	1	; () banked
 18258  013FF8  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 18259  013FFA  0101               	movlb	1	; () banked
 18260  013FFC  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 18261  013FFE  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 18262  014000  ECC2  F0C9         	call	___awdiv	;wreg free
 18263  014004  0E12               	movlw	18
 18264  014006  0101               	movlb	1	; () banked
 18265  014008  2506               	addwf	?___awdiv& (0+255),w,b
 18266  01400A  0101               	movlb	1	; () banked
 18267  01400C  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18268  01400E  0E00               	movlw	0
 18269  014010  0101               	movlb	1	; () banked
 18270  014012  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18271  014014  0101               	movlb	1	; () banked
 18272  014016  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18273  014018  0E00               	movlw	0
 18274  01401A  0101               	movlb	1	; () banked
 18275  01401C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18276  01401E  0E03               	movlw	3
 18277  014020  0101               	movlb	1	; () banked
 18278  014022  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18279  014024  EC15  F0DA         	call	___wmul	;wreg free
 18280  014028  0EDA               	movlw	low __powers_
 18281  01402A  0101               	movlb	1	; () banked
 18282  01402C  250E               	addwf	?___wmul& (0+255),w,b
 18283  01402E  6EF6               	movwf	tblptrl,c
 18284  014030  0EFE               	movlw	high __powers_
 18285  014032  0101               	movlb	1	; () banked
 18286  014034  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18287  014036  6EF7               	movwf	tblptrh,c
 18288  014038                     	if	1	;There are 3 active tblptr bytes
 18289  014038  6AF8               	clrf	tblptru,c
 18290  01403A  0E00               	movlw	low (__mediumconst shr (0+16))
 18291  01403C  22F8               	addwfc	tblptru,f,c
 18292  01403E                     	endif
 18293  01403E  0009               	tblrd		*+
 18294  014040  0101               	movlb	1	; () banked
 18295  014042  CFF5 F114          	movff	tablat,___ftmul@f1
 18296  014046  0009               	tblrd		*+
 18297  014048  0101               	movlb	1	; () banked
 18298  01404A  CFF5 F115          	movff	tablat,___ftmul@f1+1
 18299  01404E  000A               	tblrd		*-
 18300  014050  0101               	movlb	1	; () banked
 18301  014052  CFF5 F116          	movff	tablat,___ftmul@f1+2
 18302  014056  ECA2  F0BB         	call	___ftmul	;wreg free
 18303  01405A  C114  F126         	movff	?___ftmul,_scale$10834
 18304  01405E  C115  F127         	movff	?___ftmul+1,_scale$10834+1
 18305  014062  C116  F128         	movff	?___ftmul+2,_scale$10834+2
 18306                           
 18307                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 18308  014066  C126  F114         	movff	_scale$10834,___ftmul@f1
 18309  01406A  C127  F115         	movff	_scale$10834+1,___ftmul@f1+1
 18310  01406E  C128  F116         	movff	_scale$10834+2,___ftmul@f1+2
 18311  014072  0E00               	movlw	0
 18312  014074  0101               	movlb	1	; () banked
 18313  014076  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18314  014078  0E03               	movlw	3
 18315  01407A  0101               	movlb	1	; () banked
 18316  01407C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18317  01407E  0E00               	movlw	0
 18318  014080  0101               	movlb	1	; () banked
 18319  014082  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18320  014084  0E0A               	movlw	10
 18321  014086  0101               	movlb	1	; () banked
 18322  014088  6F02               	movwf	___awmod@divisor& (0+255),b
 18323  01408A  0101               	movlb	1	; () banked
 18324  01408C  5129               	movf	scale@scl& (0+255),w,b
 18325  01408E  0101               	movlb	1	; () banked
 18326  014090  6F00               	movwf	___awmod@dividend& (0+255),b
 18327  014092  0101               	movlb	1	; () banked
 18328  014094  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18329  014096  0101               	movlb	1	; () banked
 18330  014098  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 18331  01409A  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 18332  01409C  ECB9  F0CE         	call	___awmod	;wreg free
 18333  0140A0  0101               	movlb	1	; () banked
 18334  0140A2  C100  F10E         	movff	?___awmod,___wmul@multiplier
 18335  0140A6  0101               	movlb	1	; () banked
 18336  0140A8  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 18337  0140AC  EC15  F0DA         	call	___wmul	;wreg free
 18338  0140B0  0EDA               	movlw	low __powers_
 18339  0140B2  0101               	movlb	1	; () banked
 18340  0140B4  250E               	addwf	?___wmul& (0+255),w,b
 18341  0140B6  6EF6               	movwf	tblptrl,c
 18342  0140B8  0EFE               	movlw	high __powers_
 18343  0140BA  0101               	movlb	1	; () banked
 18344  0140BC  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18345  0140BE  6EF7               	movwf	tblptrh,c
 18346  0140C0                     	if	1	;There are 3 active tblptr bytes
 18347  0140C0  6AF8               	clrf	tblptru,c
 18348  0140C2  0E00               	movlw	low (__mediumconst shr (0+16))
 18349  0140C4  22F8               	addwfc	tblptru,f,c
 18350  0140C6                     	endif
 18351  0140C6  0009               	tblrd		*+
 18352  0140C8  0101               	movlb	1	; () banked
 18353  0140CA  CFF5 F117          	movff	tablat,___ftmul@f2
 18354  0140CE  0009               	tblrd		*+
 18355  0140D0  0101               	movlb	1	; () banked
 18356  0140D2  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18357  0140D6  000A               	tblrd		*-
 18358  0140D8  0101               	movlb	1	; () banked
 18359  0140DA  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18360  0140DE  ECA2  F0BB         	call	___ftmul	;wreg free
 18361  0140E2  C114  F123         	movff	?___ftmul,?_scale
 18362  0140E6  C115  F124         	movff	?___ftmul+1,?_scale+1
 18363  0140EA  C116  F125         	movff	?___ftmul+2,?_scale+2
 18364  0140EE  0012               	return	
 18365  0140F0                     l11334:
 18366                           
 18367                           ;doprnt.c: 438: else if(scl > 10)
 18368  0140F0  0101               	movlb	1	; () banked
 18369  0140F2  5129               	movf	scale@scl& (0+255),w,b
 18370  0140F4  0A80               	xorlw	128
 18371  0140F6  0F75               	addlw	-139
 18372  0140F8  A0D8               	btfss	status,0,c
 18373  0140FA  D079               	goto	l11340
 18374                           
 18375                           ; BSR set to: 1
 18376                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 18377  0140FC  0E00               	movlw	0
 18378  0140FE  0101               	movlb	1	; () banked
 18379  014100  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18380  014102  0E0A               	movlw	10
 18381  014104  0101               	movlb	1	; () banked
 18382  014106  6F08               	movwf	___awdiv@divisor& (0+255),b
 18383  014108  0101               	movlb	1	; () banked
 18384  01410A  5129               	movf	scale@scl& (0+255),w,b
 18385  01410C  0101               	movlb	1	; () banked
 18386  01410E  6F06               	movwf	___awdiv@dividend& (0+255),b
 18387  014110  0101               	movlb	1	; () banked
 18388  014112  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 18389  014114  0101               	movlb	1	; () banked
 18390  014116  BF06               	btfsc	___awdiv@dividend& (0+255),7,b
 18391  014118  0707               	decf	(___awdiv@dividend+1)& (0+255),f,b
 18392  01411A  ECC2  F0C9         	call	___awdiv	;wreg free
 18393  01411E  0E09               	movlw	9
 18394  014120  0101               	movlb	1	; () banked
 18395  014122  2506               	addwf	?___awdiv& (0+255),w,b
 18396  014124  0101               	movlb	1	; () banked
 18397  014126  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18398  014128  0E00               	movlw	0
 18399  01412A  0101               	movlb	1	; () banked
 18400  01412C  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18401  01412E  0101               	movlb	1	; () banked
 18402  014130  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18403  014132  0E00               	movlw	0
 18404  014134  0101               	movlb	1	; () banked
 18405  014136  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18406  014138  0E03               	movlw	3
 18407  01413A  0101               	movlb	1	; () banked
 18408  01413C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18409  01413E  EC15  F0DA         	call	___wmul	;wreg free
 18410  014142  0EDA               	movlw	low __powers_
 18411  014144  0101               	movlb	1	; () banked
 18412  014146  250E               	addwf	?___wmul& (0+255),w,b
 18413  014148  6EF6               	movwf	tblptrl,c
 18414  01414A  0EFE               	movlw	high __powers_
 18415  01414C  0101               	movlb	1	; () banked
 18416  01414E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18417  014150  6EF7               	movwf	tblptrh,c
 18418  014152                     	if	1	;There are 3 active tblptr bytes
 18419  014152  6AF8               	clrf	tblptru,c
 18420  014154  0E00               	movlw	low (__mediumconst shr (0+16))
 18421  014156  22F8               	addwfc	tblptru,f,c
 18422  014158                     	endif
 18423  014158  0009               	tblrd		*+
 18424  01415A  0101               	movlb	1	; () banked
 18425  01415C  CFF5 F114          	movff	tablat,___ftmul@f1
 18426  014160  0009               	tblrd		*+
 18427  014162  0101               	movlb	1	; () banked
 18428  014164  CFF5 F115          	movff	tablat,___ftmul@f1+1
 18429  014168  000A               	tblrd		*-
 18430  01416A  0101               	movlb	1	; () banked
 18431  01416C  CFF5 F116          	movff	tablat,___ftmul@f1+2
 18432  014170  0E00               	movlw	0
 18433  014172  0101               	movlb	1	; () banked
 18434  014174  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18435  014176  0E03               	movlw	3
 18436  014178  0101               	movlb	1	; () banked
 18437  01417A  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18438  01417C  0E00               	movlw	0
 18439  01417E  0101               	movlb	1	; () banked
 18440  014180  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18441  014182  0E0A               	movlw	10
 18442  014184  0101               	movlb	1	; () banked
 18443  014186  6F02               	movwf	___awmod@divisor& (0+255),b
 18444  014188  0101               	movlb	1	; () banked
 18445  01418A  5129               	movf	scale@scl& (0+255),w,b
 18446  01418C  0101               	movlb	1	; () banked
 18447  01418E  6F00               	movwf	___awmod@dividend& (0+255),b
 18448  014190  0101               	movlb	1	; () banked
 18449  014192  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18450  014194  0101               	movlb	1	; () banked
 18451  014196  BF00               	btfsc	___awmod@dividend& (0+255),7,b
 18452  014198  0701               	decf	(___awmod@dividend+1)& (0+255),f,b
 18453  01419A  ECB9  F0CE         	call	___awmod	;wreg free
 18454  01419E  0101               	movlb	1	; () banked
 18455  0141A0  C100  F10E         	movff	?___awmod,___wmul@multiplier
 18456  0141A4  0101               	movlb	1	; () banked
 18457  0141A6  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 18458  0141AA  EC15  F0DA         	call	___wmul	;wreg free
 18459  0141AE  0EDA               	movlw	low __powers_
 18460  0141B0  0101               	movlb	1	; () banked
 18461  0141B2  250E               	addwf	?___wmul& (0+255),w,b
 18462  0141B4  6EF6               	movwf	tblptrl,c
 18463  0141B6  0EFE               	movlw	high __powers_
 18464  0141B8  0101               	movlb	1	; () banked
 18465  0141BA  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18466  0141BC  6EF7               	movwf	tblptrh,c
 18467  0141BE                     	if	1	;There are 3 active tblptr bytes
 18468  0141BE  6AF8               	clrf	tblptru,c
 18469  0141C0  0E00               	movlw	low (__mediumconst shr (0+16))
 18470  0141C2  22F8               	addwfc	tblptru,f,c
 18471  0141C4                     	endif
 18472  0141C4  0009               	tblrd		*+
 18473  0141C6  0101               	movlb	1	; () banked
 18474  0141C8  CFF5 F117          	movff	tablat,___ftmul@f2
 18475  0141CC  0009               	tblrd		*+
 18476  0141CE  0101               	movlb	1	; () banked
 18477  0141D0  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18478  0141D4  000A               	tblrd		*-
 18479  0141D6  0101               	movlb	1	; () banked
 18480  0141D8  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18481  0141DC  ECA2  F0BB         	call	___ftmul	;wreg free
 18482  0141E0  C114  F123         	movff	?___ftmul,?_scale
 18483  0141E4  C115  F124         	movff	?___ftmul+1,?_scale+1
 18484  0141E8  C116  F125         	movff	?___ftmul+2,?_scale+2
 18485  0141EC  0012               	return	
 18486  0141EE                     l11340:
 18487                           
 18488                           ;doprnt.c: 440: return _powers_[scl];
 18489  0141EE  0101               	movlb	1	; () banked
 18490  0141F0  5129               	movf	scale@scl& (0+255),w,b
 18491  0141F2  0D03               	mullw	3
 18492  0141F4  0EDA               	movlw	low __powers_
 18493  0141F6  24F3               	addwf	prodl,w,c
 18494  0141F8  6EF6               	movwf	tblptrl,c
 18495  0141FA  0EFE               	movlw	high __powers_
 18496  0141FC  20F4               	addwfc	prodh,w,c
 18497  0141FE  6EF7               	movwf	tblptrh,c
 18498  014200                     	if	1	;There are 3 active tblptr bytes
 18499  014200  6AF8               	clrf	tblptru,c
 18500  014202  0E00               	movlw	low (__mediumconst shr (0+16))
 18501  014204  22F8               	addwfc	tblptru,f,c
 18502  014206                     	endif
 18503  014206  0009               	tblrd		*+
 18504  014208  0101               	movlb	1	; () banked
 18505  01420A  CFF5 F123          	movff	tablat,?_scale
 18506  01420E  0009               	tblrd		*+
 18507  014210  0101               	movlb	1	; () banked
 18508  014212  CFF5 F124          	movff	tablat,?_scale+1
 18509  014216  000A               	tblrd		*-
 18510  014218  0101               	movlb	1	; () banked
 18511  01421A  CFF5 F125          	movff	tablat,?_scale+2
 18512  01421E  0012               	return	
 18513  014220                     __end_of_scale:
 18514                           	opt stack 0
 18515                           tblptru	equ	0xFF8
 18516                           tblptrh	equ	0xFF7
 18517                           tblptrl	equ	0xFF6
 18518                           tablat	equ	0xFF5
 18519                           prodh	equ	0xFF4
 18520                           prodl	equ	0xFF3
 18521                           intcon	equ	0xFF2
 18522                           indf0	equ	0xFEF
 18523                           postinc0	equ	0xFEE
 18524                           fsr0h	equ	0xFEA
 18525                           fsr0l	equ	0xFE9
 18526                           wreg	equ	0xFE8
 18527                           indf1	equ	0xFE7
 18528                           postinc1	equ	0xFE6
 18529                           postdec1	equ	0xFE5
 18530                           fsr1h	equ	0xFE2
 18531                           fsr1l	equ	0xFE1
 18532                           indf2	equ	0xFDF
 18533                           postinc2	equ	0xFDE
 18534                           postdec2	equ	0xFDD
 18535                           fsr2h	equ	0xFDA
 18536                           fsr2l	equ	0xFD9
 18537                           status	equ	0xFD8
 18538                           
 18539 ;; *************** function _isdigit *****************
 18540 ;; Defined at:
 18541 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 18542 ;; Parameters:    Size  Location     Type
 18543 ;;  c               1    wreg     unsigned char 
 18544 ;; Auto vars:     Size  Location     Type
 18545 ;;  c               1    2[BANK1 ] unsigned char 
 18546 ;; Return value:  Size  Location     Type
 18547 ;;		None               void
 18548 ;; Registers used:
 18549 ;;		wreg, status,2, status,0
 18550 ;; Tracked objects:
 18551 ;;		On entry : 0/0
 18552 ;;		On exit  : 0/0
 18553 ;;		Unchanged: 0/0
 18554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 18555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18556 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18557 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18558 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18559 ;;Total ram usage:        3 bytes
 18560 ;; Hardware stack levels used:    1
 18561 ;; Hardware stack levels required when called:   10
 18562 ;; This function calls:
 18563 ;;		Nothing
 18564 ;; This function is called by:
 18565 ;;		_sprintf
 18566 ;; This function uses a non-reentrant model
 18567 ;;
 18568                           
 18569                           	psect	text21
 18570  01B656                     __ptext21:
 18571                           	opt stack 0
 18572  01B656                     _isdigit:
 18573                           	opt stack 17
 18574                           
 18575                           ;incstack = 0
 18576                           ;isdigit@c stored from wreg
 18577  01B656  0101               	movlb	1	; () banked
 18578  01B658  6F02               	movwf	isdigit@c& (0+255),b
 18579                           
 18580                           ; BSR set to: 1
 18581  01B65A  0E00               	movlw	0
 18582  01B65C  0101               	movlb	1	; () banked
 18583  01B65E  6F01               	movwf	_isdigit$10242& (0+255),b
 18584                           
 18585                           ; BSR set to: 1
 18586  01B660  0E3A               	movlw	58
 18587  01B662  0101               	movlb	1	; () banked
 18588  01B664  5D02               	subwf	isdigit@c& (0+255),w,b
 18589  01B666  B0D8               	btfsc	status,0,c
 18590  01B668  D007               	goto	l11352
 18591                           
 18592                           ; BSR set to: 1
 18593  01B66A  0E2F               	movlw	47
 18594  01B66C  0101               	movlb	1	; () banked
 18595  01B66E  6502               	cpfsgt	isdigit@c& (0+255),b
 18596  01B670  D003               	goto	l11352
 18597                           
 18598                           ; BSR set to: 1
 18599  01B672  0E01               	movlw	1
 18600  01B674  0101               	movlb	1	; () banked
 18601  01B676  6F01               	movwf	_isdigit$10242& (0+255),b
 18602  01B678                     l11352:
 18603                           
 18604                           ; BSR set to: 1
 18605  01B678  C101  F100         	movff	_isdigit$10242,??_isdigit
 18606  01B67C  0101               	movlb	1	; () banked
 18607  01B67E  3100               	rrcf	??_isdigit& (0+255),w,b
 18608  01B680  0012               	return	
 18609  01B682                     __end_of_isdigit:
 18610                           	opt stack 0
 18611                           tblptru	equ	0xFF8
 18612                           tblptrh	equ	0xFF7
 18613                           tblptrl	equ	0xFF6
 18614                           tablat	equ	0xFF5
 18615                           prodh	equ	0xFF4
 18616                           prodl	equ	0xFF3
 18617                           intcon	equ	0xFF2
 18618                           indf0	equ	0xFEF
 18619                           postinc0	equ	0xFEE
 18620                           fsr0h	equ	0xFEA
 18621                           fsr0l	equ	0xFE9
 18622                           wreg	equ	0xFE8
 18623                           indf1	equ	0xFE7
 18624                           postinc1	equ	0xFE6
 18625                           postdec1	equ	0xFE5
 18626                           fsr1h	equ	0xFE2
 18627                           fsr1l	equ	0xFE1
 18628                           indf2	equ	0xFDF
 18629                           postinc2	equ	0xFDE
 18630                           postdec2	equ	0xFDD
 18631                           fsr2h	equ	0xFDA
 18632                           fsr2l	equ	0xFD9
 18633                           status	equ	0xFD8
 18634                           
 18635 ;; *************** function _fround *****************
 18636 ;; Defined at:
 18637 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;  prec            1    wreg     unsigned char 
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;  prec            1   44[BANK1 ] unsigned char 
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  3   35[BANK1 ] unsigned char 
 18644 ;; Registers used:
 18645 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 18651 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18652 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18654 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18655 ;;Total ram usage:       10 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   12
 18658 ;; This function calls:
 18659 ;;		___awdiv
 18660 ;;		___awmod
 18661 ;;		___ftmul
 18662 ;;		___wmul
 18663 ;; This function is called by:
 18664 ;;		_sprintf
 18665 ;; This function uses a non-reentrant model
 18666 ;;
 18667                           
 18668                           	psect	text22
 18669  014704                     __ptext22:
 18670                           	opt stack 0
 18671  014704                     _fround:
 18672                           	opt stack 15
 18673                           
 18674                           ; BSR set to: 1
 18675                           ;incstack = 0
 18676                           ;fround@prec stored from wreg
 18677  014704  0101               	movlb	1	; () banked
 18678  014706  6F2C               	movwf	fround@prec& (0+255),b
 18679                           
 18680                           ; BSR set to: 1
 18681                           ;doprnt.c: 413: if(prec>=110)
 18682  014708  0E6D               	movlw	109
 18683  01470A  0101               	movlb	1	; () banked
 18684  01470C  652C               	cpfsgt	fround@prec& (0+255),b
 18685  01470E  D0DA               	goto	l11294
 18686                           
 18687                           ; BSR set to: 1
 18688                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18689  014710  0E00               	movlw	0
 18690  014712  0101               	movlb	1	; () banked
 18691  014714  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18692  014716  0E03               	movlw	3
 18693  014718  0101               	movlb	1	; () banked
 18694  01471A  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18695  01471C  0E00               	movlw	0
 18696  01471E  0101               	movlb	1	; () banked
 18697  014720  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18698  014722  0E0A               	movlw	10
 18699  014724  0101               	movlb	1	; () banked
 18700  014726  6F08               	movwf	___awdiv@divisor& (0+255),b
 18701  014728  0E00               	movlw	0
 18702  01472A  0101               	movlb	1	; () banked
 18703  01472C  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18704  01472E  0E64               	movlw	100
 18705  014730  0101               	movlb	1	; () banked
 18706  014732  6F02               	movwf	___awmod@divisor& (0+255),b
 18707  014734  0101               	movlb	1	; () banked
 18708  014736  C12C  F100         	movff	fround@prec,___awmod@dividend
 18709  01473A  0101               	movlb	1	; () banked
 18710  01473C  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18711  01473E  ECB9  F0CE         	call	___awmod	;wreg free
 18712  014742  0101               	movlb	1	; () banked
 18713  014744  C100  F106         	movff	?___awmod,___awdiv@dividend
 18714  014748  0101               	movlb	1	; () banked
 18715  01474A  C101  F107         	movff	?___awmod+1,___awdiv@dividend+1
 18716  01474E  ECC2  F0C9         	call	___awdiv	;wreg free
 18717  014752  0E09               	movlw	9
 18718  014754  0101               	movlb	1	; () banked
 18719  014756  2506               	addwf	?___awdiv& (0+255),w,b
 18720  014758  0101               	movlb	1	; () banked
 18721  01475A  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18722  01475C  0E00               	movlw	0
 18723  01475E  0101               	movlb	1	; () banked
 18724  014760  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18725  014762  0101               	movlb	1	; () banked
 18726  014764  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18727  014766  EC15  F0DA         	call	___wmul	;wreg free
 18728  01476A  0EB3               	movlw	low __npowers_
 18729  01476C  0101               	movlb	1	; () banked
 18730  01476E  250E               	addwf	?___wmul& (0+255),w,b
 18731  014770  6EF6               	movwf	tblptrl,c
 18732  014772  0EFE               	movlw	high __npowers_
 18733  014774  0101               	movlb	1	; () banked
 18734  014776  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18735  014778  6EF7               	movwf	tblptrh,c
 18736  01477A                     	if	1	;There are 3 active tblptr bytes
 18737  01477A  6AF8               	clrf	tblptru,c
 18738  01477C  0E00               	movlw	low (__mediumconst shr (0+16))
 18739  01477E  22F8               	addwfc	tblptru,f,c
 18740  014780                     	endif
 18741  014780  0009               	tblrd		*+
 18742  014782  0101               	movlb	1	; () banked
 18743  014784  CFF5 F117          	movff	tablat,___ftmul@f2
 18744  014788  0009               	tblrd		*+
 18745  01478A  0101               	movlb	1	; () banked
 18746  01478C  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18747  014790  000A               	tblrd		*-
 18748  014792  0101               	movlb	1	; () banked
 18749  014794  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18750  014798  0E00               	movlw	0
 18751  01479A  0101               	movlb	1	; () banked
 18752  01479C  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18753  01479E  0E64               	movlw	100
 18754  0147A0  0101               	movlb	1	; () banked
 18755  0147A2  6F08               	movwf	___awdiv@divisor& (0+255),b
 18756  0147A4  0101               	movlb	1	; () banked
 18757  0147A6  C12C  F106         	movff	fround@prec,___awdiv@dividend
 18758  0147AA  0101               	movlb	1	; () banked
 18759  0147AC  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 18760  0147AE  ECC2  F0C9         	call	___awdiv	;wreg free
 18761  0147B2  0E12               	movlw	18
 18762  0147B4  0101               	movlb	1	; () banked
 18763  0147B6  2506               	addwf	?___awdiv& (0+255),w,b
 18764  0147B8  0101               	movlb	1	; () banked
 18765  0147BA  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18766  0147BC  0E00               	movlw	0
 18767  0147BE  0101               	movlb	1	; () banked
 18768  0147C0  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18769  0147C2  0101               	movlb	1	; () banked
 18770  0147C4  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18771  0147C6  0E00               	movlw	0
 18772  0147C8  0101               	movlb	1	; () banked
 18773  0147CA  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18774  0147CC  0E03               	movlw	3
 18775  0147CE  0101               	movlb	1	; () banked
 18776  0147D0  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18777  0147D2  EC15  F0DA         	call	___wmul	;wreg free
 18778  0147D6  0EB3               	movlw	low __npowers_
 18779  0147D8  0101               	movlb	1	; () banked
 18780  0147DA  250E               	addwf	?___wmul& (0+255),w,b
 18781  0147DC  6EF6               	movwf	tblptrl,c
 18782  0147DE  0EFE               	movlw	high __npowers_
 18783  0147E0  0101               	movlb	1	; () banked
 18784  0147E2  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18785  0147E4  6EF7               	movwf	tblptrh,c
 18786  0147E6                     	if	1	;There are 3 active tblptr bytes
 18787  0147E6  6AF8               	clrf	tblptru,c
 18788  0147E8  0E00               	movlw	low (__mediumconst shr (0+16))
 18789  0147EA  22F8               	addwfc	tblptru,f,c
 18790  0147EC                     	endif
 18791  0147EC  0009               	tblrd		*+
 18792  0147EE  0101               	movlb	1	; () banked
 18793  0147F0  CFF5 F114          	movff	tablat,___ftmul@f1
 18794  0147F4  0009               	tblrd		*+
 18795  0147F6  0101               	movlb	1	; () banked
 18796  0147F8  CFF5 F115          	movff	tablat,___ftmul@f1+1
 18797  0147FC  000A               	tblrd		*-
 18798  0147FE  0101               	movlb	1	; () banked
 18799  014800  CFF5 F116          	movff	tablat,___ftmul@f1+2
 18800  014804  ECA2  F0BB         	call	___ftmul	;wreg free
 18801  014808  C114  F129         	movff	?___ftmul,_fround$10832
 18802  01480C  C115  F12A         	movff	?___ftmul+1,_fround$10832+1
 18803  014810  C116  F12B         	movff	?___ftmul+2,_fround$10832+2
 18804                           
 18805                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18806  014814  0E00               	movlw	0
 18807  014816  0101               	movlb	1	; () banked
 18808  014818  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18809  01481A  0E03               	movlw	3
 18810  01481C  0101               	movlb	1	; () banked
 18811  01481E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18812  014820  0E00               	movlw	0
 18813  014822  0101               	movlb	1	; () banked
 18814  014824  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18815  014826  0E0A               	movlw	10
 18816  014828  0101               	movlb	1	; () banked
 18817  01482A  6F02               	movwf	___awmod@divisor& (0+255),b
 18818  01482C  0101               	movlb	1	; () banked
 18819  01482E  C12C  F100         	movff	fround@prec,___awmod@dividend
 18820  014832  0101               	movlb	1	; () banked
 18821  014834  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18822  014836  ECB9  F0CE         	call	___awmod	;wreg free
 18823  01483A  0101               	movlb	1	; () banked
 18824  01483C  C100  F10E         	movff	?___awmod,___wmul@multiplier
 18825  014840  0101               	movlb	1	; () banked
 18826  014842  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 18827  014846  EC15  F0DA         	call	___wmul	;wreg free
 18828  01484A  0EB3               	movlw	low __npowers_
 18829  01484C  0101               	movlb	1	; () banked
 18830  01484E  250E               	addwf	?___wmul& (0+255),w,b
 18831  014850  6EF6               	movwf	tblptrl,c
 18832  014852  0EFE               	movlw	high __npowers_
 18833  014854  0101               	movlb	1	; () banked
 18834  014856  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18835  014858  6EF7               	movwf	tblptrh,c
 18836  01485A                     	if	1	;There are 3 active tblptr bytes
 18837  01485A  6AF8               	clrf	tblptru,c
 18838  01485C  0E00               	movlw	low (__mediumconst shr (0+16))
 18839  01485E  22F8               	addwfc	tblptru,f,c
 18840  014860                     	endif
 18841  014860  0009               	tblrd		*+
 18842  014862  0101               	movlb	1	; () banked
 18843  014864  CFF5 F117          	movff	tablat,___ftmul@f2
 18844  014868  0009               	tblrd		*+
 18845  01486A  0101               	movlb	1	; () banked
 18846  01486C  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18847  014870  000A               	tblrd		*-
 18848  014872  0101               	movlb	1	; () banked
 18849  014874  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18850  014878  C129  F114         	movff	_fround$10832,___ftmul@f1
 18851  01487C  C12A  F115         	movff	_fround$10832+1,___ftmul@f1+1
 18852  014880  C12B  F116         	movff	_fround$10832+2,___ftmul@f1+2
 18853  014884  ECA2  F0BB         	call	___ftmul	;wreg free
 18854  014888  C114  F126         	movff	?___ftmul,_fround$10833
 18855  01488C  C115  F127         	movff	?___ftmul+1,_fround$10833+1
 18856  014890  C116  F128         	movff	?___ftmul+2,_fround$10833+2
 18857                           
 18858                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 18859  014894  C126  F114         	movff	_fround$10833,___ftmul@f1
 18860  014898  C127  F115         	movff	_fround$10833+1,___ftmul@f1+1
 18861  01489C  C128  F116         	movff	_fround$10833+2,___ftmul@f1+2
 18862  0148A0  0E00               	movlw	0
 18863  0148A2  0101               	movlb	1	; () banked
 18864  0148A4  6F17               	movwf	___ftmul@f2& (0+255),b
 18865  0148A6  0E00               	movlw	0
 18866  0148A8  0101               	movlb	1	; () banked
 18867  0148AA  6F18               	movwf	(___ftmul@f2+1)& (0+255),b
 18868  0148AC  0E3F               	movlw	63
 18869  0148AE  0101               	movlb	1	; () banked
 18870  0148B0  6F19               	movwf	(___ftmul@f2+2)& (0+255),b
 18871  0148B2  ECA2  F0BB         	call	___ftmul	;wreg free
 18872  0148B6  C114  F123         	movff	?___ftmul,?_fround
 18873  0148BA  C115  F124         	movff	?___ftmul+1,?_fround+1
 18874  0148BE  C116  F125         	movff	?___ftmul+2,?_fround+2
 18875  0148C2  0012               	return	
 18876  0148C4                     l11294:
 18877                           
 18878                           ;doprnt.c: 415: else if(prec > 10)
 18879  0148C4  0E0A               	movlw	10
 18880  0148C6  0101               	movlb	1	; () banked
 18881  0148C8  652C               	cpfsgt	fround@prec& (0+255),b
 18882  0148CA  D088               	goto	l11302
 18883                           
 18884                           ; BSR set to: 1
 18885                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18886  0148CC  0E00               	movlw	0
 18887  0148CE  0101               	movlb	1	; () banked
 18888  0148D0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18889  0148D2  0E03               	movlw	3
 18890  0148D4  0101               	movlb	1	; () banked
 18891  0148D6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18892  0148D8  0E00               	movlw	0
 18893  0148DA  0101               	movlb	1	; () banked
 18894  0148DC  6F03               	movwf	(___awmod@divisor+1)& (0+255),b
 18895  0148DE  0E0A               	movlw	10
 18896  0148E0  0101               	movlb	1	; () banked
 18897  0148E2  6F02               	movwf	___awmod@divisor& (0+255),b
 18898  0148E4  0101               	movlb	1	; () banked
 18899  0148E6  C12C  F100         	movff	fround@prec,___awmod@dividend
 18900  0148EA  0101               	movlb	1	; () banked
 18901  0148EC  6B01               	clrf	(___awmod@dividend+1)& (0+255),b
 18902  0148EE  ECB9  F0CE         	call	___awmod	;wreg free
 18903  0148F2  0101               	movlb	1	; () banked
 18904  0148F4  C100  F10E         	movff	?___awmod,___wmul@multiplier
 18905  0148F8  0101               	movlb	1	; () banked
 18906  0148FA  C101  F10F         	movff	?___awmod+1,___wmul@multiplier+1
 18907  0148FE  EC15  F0DA         	call	___wmul	;wreg free
 18908  014902  0EB3               	movlw	low __npowers_
 18909  014904  0101               	movlb	1	; () banked
 18910  014906  250E               	addwf	?___wmul& (0+255),w,b
 18911  014908  6EF6               	movwf	tblptrl,c
 18912  01490A  0EFE               	movlw	high __npowers_
 18913  01490C  0101               	movlb	1	; () banked
 18914  01490E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18915  014910  6EF7               	movwf	tblptrh,c
 18916  014912                     	if	1	;There are 3 active tblptr bytes
 18917  014912  6AF8               	clrf	tblptru,c
 18918  014914  0E00               	movlw	low (__mediumconst shr (0+16))
 18919  014916  22F8               	addwfc	tblptru,f,c
 18920  014918                     	endif
 18921  014918  0009               	tblrd		*+
 18922  01491A  0101               	movlb	1	; () banked
 18923  01491C  CFF5 F117          	movff	tablat,___ftmul@f2
 18924  014920  0009               	tblrd		*+
 18925  014922  0101               	movlb	1	; () banked
 18926  014924  CFF5 F118          	movff	tablat,___ftmul@f2+1
 18927  014928  000A               	tblrd		*-
 18928  01492A  0101               	movlb	1	; () banked
 18929  01492C  CFF5 F119          	movff	tablat,___ftmul@f2+2
 18930  014930  0E00               	movlw	0
 18931  014932  0101               	movlb	1	; () banked
 18932  014934  6F09               	movwf	(___awdiv@divisor+1)& (0+255),b
 18933  014936  0E0A               	movlw	10
 18934  014938  0101               	movlb	1	; () banked
 18935  01493A  6F08               	movwf	___awdiv@divisor& (0+255),b
 18936  01493C  0101               	movlb	1	; () banked
 18937  01493E  C12C  F106         	movff	fround@prec,___awdiv@dividend
 18938  014942  0101               	movlb	1	; () banked
 18939  014944  6B07               	clrf	(___awdiv@dividend+1)& (0+255),b
 18940  014946  ECC2  F0C9         	call	___awdiv	;wreg free
 18941  01494A  0E09               	movlw	9
 18942  01494C  0101               	movlb	1	; () banked
 18943  01494E  2506               	addwf	?___awdiv& (0+255),w,b
 18944  014950  0101               	movlb	1	; () banked
 18945  014952  6F0E               	movwf	___wmul@multiplier& (0+255),b
 18946  014954  0E00               	movlw	0
 18947  014956  0101               	movlb	1	; () banked
 18948  014958  2107               	addwfc	(?___awdiv+1)& (0+255),w,b
 18949  01495A  0101               	movlb	1	; () banked
 18950  01495C  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 18951  01495E  0E00               	movlw	0
 18952  014960  0101               	movlb	1	; () banked
 18953  014962  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 18954  014964  0E03               	movlw	3
 18955  014966  0101               	movlb	1	; () banked
 18956  014968  6F10               	movwf	___wmul@multiplicand& (0+255),b
 18957  01496A  EC15  F0DA         	call	___wmul	;wreg free
 18958  01496E  0EB3               	movlw	low __npowers_
 18959  014970  0101               	movlb	1	; () banked
 18960  014972  250E               	addwf	?___wmul& (0+255),w,b
 18961  014974  6EF6               	movwf	tblptrl,c
 18962  014976  0EFE               	movlw	high __npowers_
 18963  014978  0101               	movlb	1	; () banked
 18964  01497A  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 18965  01497C  6EF7               	movwf	tblptrh,c
 18966  01497E                     	if	1	;There are 3 active tblptr bytes
 18967  01497E  6AF8               	clrf	tblptru,c
 18968  014980  0E00               	movlw	low (__mediumconst shr (0+16))
 18969  014982  22F8               	addwfc	tblptru,f,c
 18970  014984                     	endif
 18971  014984  0009               	tblrd		*+
 18972  014986  0101               	movlb	1	; () banked
 18973  014988  CFF5 F114          	movff	tablat,___ftmul@f1
 18974  01498C  0009               	tblrd		*+
 18975  01498E  0101               	movlb	1	; () banked
 18976  014990  CFF5 F115          	movff	tablat,___ftmul@f1+1
 18977  014994  000A               	tblrd		*-
 18978  014996  0101               	movlb	1	; () banked
 18979  014998  CFF5 F116          	movff	tablat,___ftmul@f1+2
 18980  01499C  ECA2  F0BB         	call	___ftmul	;wreg free
 18981  0149A0  C114  F129         	movff	?___ftmul,_fround$10832
 18982  0149A4  C115  F12A         	movff	?___ftmul+1,_fround$10832+1
 18983  0149A8  C116  F12B         	movff	?___ftmul+2,_fround$10832+2
 18984                           
 18985                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 18986  0149AC  C129  F114         	movff	_fround$10832,___ftmul@f1
 18987  0149B0  C12A  F115         	movff	_fround$10832+1,___ftmul@f1+1
 18988  0149B4  C12B  F116         	movff	_fround$10832+2,___ftmul@f1+2
 18989  0149B8  0E00               	movlw	0
 18990  0149BA  0101               	movlb	1	; () banked
 18991  0149BC  6F17               	movwf	___ftmul@f2& (0+255),b
 18992  0149BE  0E00               	movlw	0
 18993  0149C0  0101               	movlb	1	; () banked
 18994  0149C2  6F18               	movwf	(___ftmul@f2+1)& (0+255),b
 18995  0149C4  0E3F               	movlw	63
 18996  0149C6  0101               	movlb	1	; () banked
 18997  0149C8  6F19               	movwf	(___ftmul@f2+2)& (0+255),b
 18998  0149CA  ECA2  F0BB         	call	___ftmul	;wreg free
 18999  0149CE  C114  F123         	movff	?___ftmul,?_fround
 19000  0149D2  C115  F124         	movff	?___ftmul+1,?_fround+1
 19001  0149D6  C116  F125         	movff	?___ftmul+2,?_fround+2
 19002  0149DA  0012               	return	
 19003  0149DC                     l11302:
 19004                           
 19005                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 19006  0149DC  0101               	movlb	1	; () banked
 19007  0149DE  512C               	movf	fround@prec& (0+255),w,b
 19008  0149E0  0D03               	mullw	3
 19009  0149E2  0EB3               	movlw	low __npowers_
 19010  0149E4  24F3               	addwf	prodl,w,c
 19011  0149E6  6EF6               	movwf	tblptrl,c
 19012  0149E8  0EFE               	movlw	high __npowers_
 19013  0149EA  20F4               	addwfc	prodh,w,c
 19014  0149EC  6EF7               	movwf	tblptrh,c
 19015  0149EE                     	if	1	;There are 3 active tblptr bytes
 19016  0149EE  6AF8               	clrf	tblptru,c
 19017  0149F0  0E00               	movlw	low (__mediumconst shr (0+16))
 19018  0149F2  22F8               	addwfc	tblptru,f,c
 19019  0149F4                     	endif
 19020  0149F4  0009               	tblrd		*+
 19021  0149F6  0101               	movlb	1	; () banked
 19022  0149F8  CFF5 F114          	movff	tablat,___ftmul@f1
 19023  0149FC  0009               	tblrd		*+
 19024  0149FE  0101               	movlb	1	; () banked
 19025  014A00  CFF5 F115          	movff	tablat,___ftmul@f1+1
 19026  014A04  000A               	tblrd		*-
 19027  014A06  0101               	movlb	1	; () banked
 19028  014A08  CFF5 F116          	movff	tablat,___ftmul@f1+2
 19029  014A0C  0E00               	movlw	0
 19030  014A0E  0101               	movlb	1	; () banked
 19031  014A10  6F17               	movwf	___ftmul@f2& (0+255),b
 19032  014A12  0E00               	movlw	0
 19033  014A14  0101               	movlb	1	; () banked
 19034  014A16  6F18               	movwf	(___ftmul@f2+1)& (0+255),b
 19035  014A18  0E3F               	movlw	63
 19036  014A1A  0101               	movlb	1	; () banked
 19037  014A1C  6F19               	movwf	(___ftmul@f2+2)& (0+255),b
 19038  014A1E  ECA2  F0BB         	call	___ftmul	;wreg free
 19039  014A22  C114  F123         	movff	?___ftmul,?_fround
 19040  014A26  C115  F124         	movff	?___ftmul+1,?_fround+1
 19041  014A2A  C116  F125         	movff	?___ftmul+2,?_fround+2
 19042  014A2E  0012               	return	
 19043  014A30                     __end_of_fround:
 19044                           	opt stack 0
 19045                           tblptru	equ	0xFF8
 19046                           tblptrh	equ	0xFF7
 19047                           tblptrl	equ	0xFF6
 19048                           tablat	equ	0xFF5
 19049                           prodh	equ	0xFF4
 19050                           prodl	equ	0xFF3
 19051                           intcon	equ	0xFF2
 19052                           indf0	equ	0xFEF
 19053                           postinc0	equ	0xFEE
 19054                           fsr0h	equ	0xFEA
 19055                           fsr0l	equ	0xFE9
 19056                           wreg	equ	0xFE8
 19057                           indf1	equ	0xFE7
 19058                           postinc1	equ	0xFE6
 19059                           postdec1	equ	0xFE5
 19060                           fsr1h	equ	0xFE2
 19061                           fsr1l	equ	0xFE1
 19062                           indf2	equ	0xFDF
 19063                           postinc2	equ	0xFDE
 19064                           postdec2	equ	0xFDD
 19065                           fsr2h	equ	0xFDA
 19066                           fsr2l	equ	0xFD9
 19067                           status	equ	0xFD8
 19068                           
 19069 ;; *************** function ___awmod *****************
 19070 ;; Defined at:
 19071 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 19072 ;; Parameters:    Size  Location     Type
 19073 ;;  dividend        2    0[BANK1 ] int 
 19074 ;;  divisor         2    2[BANK1 ] int 
 19075 ;; Auto vars:     Size  Location     Type
 19076 ;;  sign            1    5[BANK1 ] unsigned char 
 19077 ;;  counter         1    4[BANK1 ] unsigned char 
 19078 ;; Return value:  Size  Location     Type
 19079 ;;                  2    0[BANK1 ] int 
 19080 ;; Registers used:
 19081 ;;		wreg, status,2, status,0, prodl
 19082 ;; Tracked objects:
 19083 ;;		On entry : 0/0
 19084 ;;		On exit  : 0/0
 19085 ;;		Unchanged: 0/0
 19086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19087 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19088 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19090 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19091 ;;Total ram usage:        6 bytes
 19092 ;; Hardware stack levels used:    1
 19093 ;; Hardware stack levels required when called:   10
 19094 ;; This function calls:
 19095 ;;		Nothing
 19096 ;; This function is called by:
 19097 ;;		_fround
 19098 ;;		_scale
 19099 ;; This function uses a non-reentrant model
 19100 ;;
 19101                           
 19102                           	psect	text23
 19103  019D72                     __ptext23:
 19104                           	opt stack 0
 19105  019D72                     ___awmod:
 19106                           	opt stack 16
 19107                           
 19108                           ;incstack = 0
 19109  019D72  0E00               	movlw	0
 19110  019D74  0101               	movlb	1	; () banked
 19111  019D76  6F05               	movwf	___awmod@sign& (0+255),b
 19112                           
 19113                           ; BSR set to: 1
 19114  019D78  0101               	movlb	1	; () banked
 19115  019D7A  5101               	movf	(___awmod@dividend+1)& (0+255),w,b
 19116  019D7C  0A80               	xorlw	128
 19117  019D7E  6EF3               	movwf	prodl,c
 19118  019D80  0E80               	movlw	128
 19119  019D82  5CF3               	subwf	prodl,w,c
 19120  019D84  0E00               	movlw	0
 19121  019D86  B4D8               	btfsc	status,2,c
 19122  019D88  5D00               	subwf	___awmod@dividend& (0+255),w,b
 19123  019D8A  B0D8               	btfsc	status,0,c
 19124  019D8C  D009               	goto	l10728
 19125                           
 19126                           ; BSR set to: 1
 19127  019D8E  0101               	movlb	1	; () banked
 19128  019D90  6D00               	negf	___awmod@dividend& (0+255),b
 19129  019D92  0101               	movlb	1	; () banked
 19130  019D94  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 19131  019D96  B0D8               	btfsc	status,0,c
 19132  019D98  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 19133                           
 19134                           ; BSR set to: 1
 19135  019D9A  0E01               	movlw	1
 19136  019D9C  0101               	movlb	1	; () banked
 19137  019D9E  6F05               	movwf	___awmod@sign& (0+255),b
 19138  019DA0                     l10728:
 19139                           
 19140                           ; BSR set to: 1
 19141  019DA0  0101               	movlb	1	; () banked
 19142  019DA2  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 19143  019DA4  0A80               	xorlw	128
 19144  019DA6  6EF3               	movwf	prodl,c
 19145  019DA8  0E80               	movlw	128
 19146  019DAA  5CF3               	subwf	prodl,w,c
 19147  019DAC  0E00               	movlw	0
 19148  019DAE  B4D8               	btfsc	status,2,c
 19149  019DB0  5D02               	subwf	___awmod@divisor& (0+255),w,b
 19150  019DB2  B0D8               	btfsc	status,0,c
 19151  019DB4  D006               	goto	l10732
 19152                           
 19153                           ; BSR set to: 1
 19154  019DB6  0101               	movlb	1	; () banked
 19155  019DB8  6D02               	negf	___awmod@divisor& (0+255),b
 19156  019DBA  0101               	movlb	1	; () banked
 19157  019DBC  1F03               	comf	(___awmod@divisor+1)& (0+255),f,b
 19158  019DBE  B0D8               	btfsc	status,0,c
 19159  019DC0  2B03               	incf	(___awmod@divisor+1)& (0+255),f,b
 19160  019DC2                     l10732:
 19161                           
 19162                           ; BSR set to: 1
 19163  019DC2  0101               	movlb	1	; () banked
 19164  019DC4  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 19165  019DC6  1102               	iorwf	___awmod@divisor& (0+255),w,b
 19166  019DC8  B4D8               	btfsc	status,2,c
 19167  019DCA  D026               	goto	l10748
 19168                           
 19169                           ; BSR set to: 1
 19170  019DCC  0E01               	movlw	1
 19171  019DCE  0101               	movlb	1	; () banked
 19172  019DD0  6F04               	movwf	___awmod@counter& (0+255),b
 19173  019DD2  D006               	goto	l10738
 19174  019DD4                     l10736:
 19175                           
 19176                           ; BSR set to: 1
 19177  019DD4  0101               	movlb	1	; () banked
 19178  019DD6  90D8               	bcf	status,0,c
 19179  019DD8  3702               	rlcf	___awmod@divisor& (0+255),f,b
 19180  019DDA  3703               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 19181  019DDC  0101               	movlb	1	; () banked
 19182  019DDE  2B04               	incf	___awmod@counter& (0+255),f,b
 19183  019DE0                     l10738:
 19184                           
 19185                           ; BSR set to: 1
 19186  019DE0  0101               	movlb	1	; () banked
 19187  019DE2  AF03               	btfss	(___awmod@divisor+1)& (0+255),7,b
 19188  019DE4  D7F7               	goto	l10736
 19189  019DE6                     l10740:
 19190                           
 19191                           ; BSR set to: 1
 19192  019DE6  0101               	movlb	1	; () banked
 19193  019DE8  5102               	movf	___awmod@divisor& (0+255),w,b
 19194  019DEA  0101               	movlb	1	; () banked
 19195  019DEC  5D00               	subwf	___awmod@dividend& (0+255),w,b
 19196  019DEE  0101               	movlb	1	; () banked
 19197  019DF0  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 19198  019DF2  0101               	movlb	1	; () banked
 19199  019DF4  5901               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 19200  019DF6  A0D8               	btfss	status,0,c
 19201  019DF8  D008               	goto	l10744
 19202                           
 19203                           ; BSR set to: 1
 19204  019DFA  0101               	movlb	1	; () banked
 19205  019DFC  5102               	movf	___awmod@divisor& (0+255),w,b
 19206  019DFE  0101               	movlb	1	; () banked
 19207  019E00  5F00               	subwf	___awmod@dividend& (0+255),f,b
 19208  019E02  0101               	movlb	1	; () banked
 19209  019E04  5103               	movf	(___awmod@divisor+1)& (0+255),w,b
 19210  019E06  0101               	movlb	1	; () banked
 19211  019E08  5B01               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 19212  019E0A                     l10744:
 19213                           
 19214                           ; BSR set to: 1
 19215  019E0A  0101               	movlb	1	; () banked
 19216  019E0C  90D8               	bcf	status,0,c
 19217  019E0E  3303               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 19218  019E10  3302               	rrcf	___awmod@divisor& (0+255),f,b
 19219                           
 19220                           ; BSR set to: 1
 19221  019E12  0101               	movlb	1	; () banked
 19222  019E14  2F04               	decfsz	___awmod@counter& (0+255),f,b
 19223  019E16  D7E7               	goto	l10740
 19224  019E18                     l10748:
 19225                           
 19226                           ; BSR set to: 1
 19227  019E18  0101               	movlb	1	; () banked
 19228  019E1A  5105               	movf	___awmod@sign& (0+255),w,b
 19229  019E1C  B4D8               	btfsc	status,2,c
 19230  019E1E  D006               	goto	l10752
 19231                           
 19232                           ; BSR set to: 1
 19233  019E20  0101               	movlb	1	; () banked
 19234  019E22  6D00               	negf	___awmod@dividend& (0+255),b
 19235  019E24  0101               	movlb	1	; () banked
 19236  019E26  1F01               	comf	(___awmod@dividend+1)& (0+255),f,b
 19237  019E28  B0D8               	btfsc	status,0,c
 19238  019E2A  2B01               	incf	(___awmod@dividend+1)& (0+255),f,b
 19239  019E2C                     l10752:
 19240                           
 19241                           ; BSR set to: 1
 19242  019E2C  C100  F100         	movff	___awmod@dividend,?___awmod
 19243  019E30  C101  F101         	movff	___awmod@dividend+1,?___awmod+1
 19244  019E34  0012               	return	
 19245  019E36                     __end_of___awmod:
 19246                           	opt stack 0
 19247                           tblptru	equ	0xFF8
 19248                           tblptrh	equ	0xFF7
 19249                           tblptrl	equ	0xFF6
 19250                           tablat	equ	0xFF5
 19251                           prodh	equ	0xFF4
 19252                           prodl	equ	0xFF3
 19253                           intcon	equ	0xFF2
 19254                           indf0	equ	0xFEF
 19255                           postinc0	equ	0xFEE
 19256                           fsr0h	equ	0xFEA
 19257                           fsr0l	equ	0xFE9
 19258                           wreg	equ	0xFE8
 19259                           indf1	equ	0xFE7
 19260                           postinc1	equ	0xFE6
 19261                           postdec1	equ	0xFE5
 19262                           fsr1h	equ	0xFE2
 19263                           fsr1l	equ	0xFE1
 19264                           indf2	equ	0xFDF
 19265                           postinc2	equ	0xFDE
 19266                           postdec2	equ	0xFDD
 19267                           fsr2h	equ	0xFDA
 19268                           fsr2l	equ	0xFD9
 19269                           status	equ	0xFD8
 19270                           
 19271 ;; *************** function ___awdiv *****************
 19272 ;; Defined at:
 19273 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 19274 ;; Parameters:    Size  Location     Type
 19275 ;;  dividend        2    6[BANK1 ] int 
 19276 ;;  divisor         2    8[BANK1 ] int 
 19277 ;; Auto vars:     Size  Location     Type
 19278 ;;  quotient        2   12[BANK1 ] int 
 19279 ;;  sign            1   11[BANK1 ] unsigned char 
 19280 ;;  counter         1   10[BANK1 ] unsigned char 
 19281 ;; Return value:  Size  Location     Type
 19282 ;;                  2    6[BANK1 ] int 
 19283 ;; Registers used:
 19284 ;;		wreg, status,2, status,0, prodl
 19285 ;; Tracked objects:
 19286 ;;		On entry : 0/0
 19287 ;;		On exit  : 0/0
 19288 ;;		Unchanged: 0/0
 19289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19290 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19291 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19293 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19294 ;;Total ram usage:        8 bytes
 19295 ;; Hardware stack levels used:    1
 19296 ;; Hardware stack levels required when called:   10
 19297 ;; This function calls:
 19298 ;;		Nothing
 19299 ;; This function is called by:
 19300 ;;		_fround
 19301 ;;		_scale
 19302 ;;		_sprintf
 19303 ;; This function uses a non-reentrant model
 19304 ;;
 19305                           
 19306                           	psect	text24
 19307  019384                     __ptext24:
 19308                           	opt stack 0
 19309  019384                     ___awdiv:
 19310                           	opt stack 16
 19311                           
 19312                           ; BSR set to: 1
 19313                           ;incstack = 0
 19314  019384  0E00               	movlw	0
 19315  019386  0101               	movlb	1	; () banked
 19316  019388  6F0B               	movwf	___awdiv@sign& (0+255),b
 19317                           
 19318                           ; BSR set to: 1
 19319  01938A  0101               	movlb	1	; () banked
 19320  01938C  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19321  01938E  0A80               	xorlw	128
 19322  019390  6EF3               	movwf	prodl,c
 19323  019392  0E80               	movlw	128
 19324  019394  5CF3               	subwf	prodl,w,c
 19325  019396  0E00               	movlw	0
 19326  019398  B4D8               	btfsc	status,2,c
 19327  01939A  5D08               	subwf	___awdiv@divisor& (0+255),w,b
 19328  01939C  B0D8               	btfsc	status,0,c
 19329  01939E  D009               	goto	l10684
 19330                           
 19331                           ; BSR set to: 1
 19332  0193A0  0101               	movlb	1	; () banked
 19333  0193A2  6D08               	negf	___awdiv@divisor& (0+255),b
 19334  0193A4  0101               	movlb	1	; () banked
 19335  0193A6  1F09               	comf	(___awdiv@divisor+1)& (0+255),f,b
 19336  0193A8  B0D8               	btfsc	status,0,c
 19337  0193AA  2B09               	incf	(___awdiv@divisor+1)& (0+255),f,b
 19338                           
 19339                           ; BSR set to: 1
 19340  0193AC  0E01               	movlw	1
 19341  0193AE  0101               	movlb	1	; () banked
 19342  0193B0  6F0B               	movwf	___awdiv@sign& (0+255),b
 19343  0193B2                     l10684:
 19344                           
 19345                           ; BSR set to: 1
 19346  0193B2  0101               	movlb	1	; () banked
 19347  0193B4  5107               	movf	(___awdiv@dividend+1)& (0+255),w,b
 19348  0193B6  0A80               	xorlw	128
 19349  0193B8  6EF3               	movwf	prodl,c
 19350  0193BA  0E80               	movlw	128
 19351  0193BC  5CF3               	subwf	prodl,w,c
 19352  0193BE  0E00               	movlw	0
 19353  0193C0  B4D8               	btfsc	status,2,c
 19354  0193C2  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 19355  0193C4  B0D8               	btfsc	status,0,c
 19356  0193C6  D009               	goto	l10690
 19357                           
 19358                           ; BSR set to: 1
 19359  0193C8  0101               	movlb	1	; () banked
 19360  0193CA  6D06               	negf	___awdiv@dividend& (0+255),b
 19361  0193CC  0101               	movlb	1	; () banked
 19362  0193CE  1F07               	comf	(___awdiv@dividend+1)& (0+255),f,b
 19363  0193D0  B0D8               	btfsc	status,0,c
 19364  0193D2  2B07               	incf	(___awdiv@dividend+1)& (0+255),f,b
 19365                           
 19366                           ; BSR set to: 1
 19367  0193D4  0E01               	movlw	1
 19368  0193D6  0101               	movlb	1	; () banked
 19369  0193D8  1B0B               	xorwf	___awdiv@sign& (0+255),f,b
 19370  0193DA                     l10690:
 19371                           
 19372                           ; BSR set to: 1
 19373  0193DA  0E00               	movlw	0
 19374  0193DC  0101               	movlb	1	; () banked
 19375  0193DE  6F0D               	movwf	(___awdiv@quotient+1)& (0+255),b
 19376  0193E0  0E00               	movlw	0
 19377  0193E2  0101               	movlb	1	; () banked
 19378  0193E4  6F0C               	movwf	___awdiv@quotient& (0+255),b
 19379                           
 19380                           ; BSR set to: 1
 19381  0193E6  0101               	movlb	1	; () banked
 19382  0193E8  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19383  0193EA  1108               	iorwf	___awdiv@divisor& (0+255),w,b
 19384  0193EC  B4D8               	btfsc	status,2,c
 19385  0193EE  D02C               	goto	l10712
 19386                           
 19387                           ; BSR set to: 1
 19388  0193F0  0E01               	movlw	1
 19389  0193F2  0101               	movlb	1	; () banked
 19390  0193F4  6F0A               	movwf	___awdiv@counter& (0+255),b
 19391  0193F6  D006               	goto	l10698
 19392  0193F8                     l10696:
 19393                           
 19394                           ; BSR set to: 1
 19395  0193F8  0101               	movlb	1	; () banked
 19396  0193FA  90D8               	bcf	status,0,c
 19397  0193FC  3708               	rlcf	___awdiv@divisor& (0+255),f,b
 19398  0193FE  3709               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 19399  019400  0101               	movlb	1	; () banked
 19400  019402  2B0A               	incf	___awdiv@counter& (0+255),f,b
 19401  019404                     l10698:
 19402                           
 19403                           ; BSR set to: 1
 19404  019404  0101               	movlb	1	; () banked
 19405  019406  AF09               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 19406  019408  D7F7               	goto	l10696
 19407  01940A                     l10700:
 19408                           
 19409                           ; BSR set to: 1
 19410  01940A  0101               	movlb	1	; () banked
 19411  01940C  90D8               	bcf	status,0,c
 19412  01940E  370C               	rlcf	___awdiv@quotient& (0+255),f,b
 19413  019410  370D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 19414                           
 19415                           ; BSR set to: 1
 19416  019412  0101               	movlb	1	; () banked
 19417  019414  5108               	movf	___awdiv@divisor& (0+255),w,b
 19418  019416  0101               	movlb	1	; () banked
 19419  019418  5D06               	subwf	___awdiv@dividend& (0+255),w,b
 19420  01941A  0101               	movlb	1	; () banked
 19421  01941C  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19422  01941E  0101               	movlb	1	; () banked
 19423  019420  5907               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 19424  019422  A0D8               	btfss	status,0,c
 19425  019424  D00A               	goto	l10708
 19426                           
 19427                           ; BSR set to: 1
 19428  019426  0101               	movlb	1	; () banked
 19429  019428  5108               	movf	___awdiv@divisor& (0+255),w,b
 19430  01942A  0101               	movlb	1	; () banked
 19431  01942C  5F06               	subwf	___awdiv@dividend& (0+255),f,b
 19432  01942E  0101               	movlb	1	; () banked
 19433  019430  5109               	movf	(___awdiv@divisor+1)& (0+255),w,b
 19434  019432  0101               	movlb	1	; () banked
 19435  019434  5B07               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 19436                           
 19437                           ; BSR set to: 1
 19438  019436  0101               	movlb	1	; () banked
 19439  019438  810C               	bsf	___awdiv@quotient& (0+255),0,b
 19440  01943A                     l10708:
 19441                           
 19442                           ; BSR set to: 1
 19443  01943A  0101               	movlb	1	; () banked
 19444  01943C  90D8               	bcf	status,0,c
 19445  01943E  3309               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 19446  019440  3308               	rrcf	___awdiv@divisor& (0+255),f,b
 19447                           
 19448                           ; BSR set to: 1
 19449  019442  0101               	movlb	1	; () banked
 19450  019444  2F0A               	decfsz	___awdiv@counter& (0+255),f,b
 19451  019446  D7E1               	goto	l10700
 19452  019448                     l10712:
 19453                           
 19454                           ; BSR set to: 1
 19455  019448  0101               	movlb	1	; () banked
 19456  01944A  510B               	movf	___awdiv@sign& (0+255),w,b
 19457  01944C  B4D8               	btfsc	status,2,c
 19458  01944E  D006               	goto	l10716
 19459                           
 19460                           ; BSR set to: 1
 19461  019450  0101               	movlb	1	; () banked
 19462  019452  6D0C               	negf	___awdiv@quotient& (0+255),b
 19463  019454  0101               	movlb	1	; () banked
 19464  019456  1F0D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 19465  019458  B0D8               	btfsc	status,0,c
 19466  01945A  2B0D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 19467  01945C                     l10716:
 19468                           
 19469                           ; BSR set to: 1
 19470  01945C  C10C  F106         	movff	___awdiv@quotient,?___awdiv
 19471  019460  C10D  F107         	movff	___awdiv@quotient+1,?___awdiv+1
 19472  019464  0012               	return	
 19473  019466                     __end_of___awdiv:
 19474                           	opt stack 0
 19475                           tblptru	equ	0xFF8
 19476                           tblptrh	equ	0xFF7
 19477                           tblptrl	equ	0xFF6
 19478                           tablat	equ	0xFF5
 19479                           prodh	equ	0xFF4
 19480                           prodl	equ	0xFF3
 19481                           intcon	equ	0xFF2
 19482                           indf0	equ	0xFEF
 19483                           postinc0	equ	0xFEE
 19484                           fsr0h	equ	0xFEA
 19485                           fsr0l	equ	0xFE9
 19486                           wreg	equ	0xFE8
 19487                           indf1	equ	0xFE7
 19488                           postinc1	equ	0xFE6
 19489                           postdec1	equ	0xFE5
 19490                           fsr1h	equ	0xFE2
 19491                           fsr1l	equ	0xFE1
 19492                           indf2	equ	0xFDF
 19493                           postinc2	equ	0xFDE
 19494                           postdec2	equ	0xFDD
 19495                           fsr2h	equ	0xFDA
 19496                           fsr2l	equ	0xFD9
 19497                           status	equ	0xFD8
 19498                           
 19499 ;; *************** function __tdiv_to_l_ *****************
 19500 ;; Defined at:
 19501 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
 19502 ;; Parameters:    Size  Location     Type
 19503 ;;  f1              3    0[BANK1 ] float 
 19504 ;;  f2              3    3[BANK1 ] float 
 19505 ;; Auto vars:     Size  Location     Type
 19506 ;;  quot            4    9[BANK1 ] unsigned long 
 19507 ;;  exp1            1   14[BANK1 ] unsigned char 
 19508 ;;  cntr            1   13[BANK1 ] unsigned char 
 19509 ;; Return value:  Size  Location     Type
 19510 ;;                  4    0[BANK1 ] unsigned long 
 19511 ;; Registers used:
 19512 ;;		wreg, status,2, status,0
 19513 ;; Tracked objects:
 19514 ;;		On entry : 0/0
 19515 ;;		On exit  : 0/0
 19516 ;;		Unchanged: 0/0
 19517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19518 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19519 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19520 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19521 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19522 ;;Total ram usage:       15 bytes
 19523 ;; Hardware stack levels used:    1
 19524 ;; Hardware stack levels required when called:   10
 19525 ;; This function calls:
 19526 ;;		Nothing
 19527 ;; This function is called by:
 19528 ;;		_sprintf
 19529 ;; This function uses a non-reentrant model
 19530 ;;
 19531                           
 19532                           	psect	text25
 19533  016300                     __ptext25:
 19534                           	opt stack 0
 19535  016300                     __tdiv_to_l_:
 19536                           	opt stack 17
 19537                           
 19538                           ; BSR set to: 1
 19539                           ;incstack = 0
 19540  016300  0101               	movlb	1	; () banked
 19541  016302  C102  F106         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 19542  016306  0101               	movlb	1	; () banked
 19543  016308  6B07               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 19544  01630A  6B08               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 19545  01630C  0101               	movlb	1	; () banked
 19546  01630E  3501               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 19547  016310  0101               	movlb	1	; () banked
 19548  016312  3706               	rlcf	??__tdiv_to_l_& (0+255),f,b
 19549  016314  E301               	bnc	u12211
 19550  016316  8107               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 19551  016318                     u12211:
 19552  016318  0101               	movlb	1	; () banked
 19553  01631A  5106               	movf	??__tdiv_to_l_& (0+255),w,b
 19554  01631C  0101               	movlb	1	; () banked
 19555  01631E  6F0E               	movwf	__tdiv_to_l_@exp1& (0+255),b
 19556  016320  0101               	movlb	1	; () banked
 19557  016322  670E               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 19558  016324  D00D               	goto	l11362
 19559                           
 19560                           ; BSR set to: 1
 19561  016326  0E00               	movlw	0
 19562  016328  0101               	movlb	1	; () banked
 19563  01632A  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 19564  01632C  0E00               	movlw	0
 19565  01632E  0101               	movlb	1	; () banked
 19566  016330  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19567  016332  0E00               	movlw	0
 19568  016334  0101               	movlb	1	; () banked
 19569  016336  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19570  016338  0E00               	movlw	0
 19571  01633A  0101               	movlb	1	; () banked
 19572  01633C  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19573  01633E  0012               	return	
 19574  016340                     l11362:
 19575                           
 19576                           ; BSR set to: 1
 19577  016340  0101               	movlb	1	; () banked
 19578  016342  C105  F106         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 19579  016346  0101               	movlb	1	; () banked
 19580  016348  6B07               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 19581  01634A  6B08               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 19582  01634C  0101               	movlb	1	; () banked
 19583  01634E  3504               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 19584  016350  0101               	movlb	1	; () banked
 19585  016352  3706               	rlcf	??__tdiv_to_l_& (0+255),f,b
 19586  016354  E301               	bnc	u12231
 19587  016356  8107               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 19588  016358                     u12231:
 19589  016358  0101               	movlb	1	; () banked
 19590  01635A  5106               	movf	??__tdiv_to_l_& (0+255),w,b
 19591  01635C  0101               	movlb	1	; () banked
 19592  01635E  6F0D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 19593  016360  0101               	movlb	1	; () banked
 19594  016362  670D               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
 19595  016364  D00D               	goto	l11368
 19596                           
 19597                           ; BSR set to: 1
 19598  016366  0E00               	movlw	0
 19599  016368  0101               	movlb	1	; () banked
 19600  01636A  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 19601  01636C  0E00               	movlw	0
 19602  01636E  0101               	movlb	1	; () banked
 19603  016370  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19604  016372  0E00               	movlw	0
 19605  016374  0101               	movlb	1	; () banked
 19606  016376  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19607  016378  0E00               	movlw	0
 19608  01637A  0101               	movlb	1	; () banked
 19609  01637C  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19610  01637E  0012               	return	
 19611  016380                     l11368:
 19612                           
 19613                           ; BSR set to: 1
 19614  016380  0101               	movlb	1	; () banked
 19615  016382  8F01               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 19616                           
 19617                           ; BSR set to: 1
 19618  016384  0EFF               	movlw	255
 19619  016386  0101               	movlb	1	; () banked
 19620  016388  1700               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 19621  01638A  0EFF               	movlw	255
 19622  01638C  0101               	movlb	1	; () banked
 19623  01638E  1701               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 19624  016390  0E00               	movlw	0
 19625  016392  0101               	movlb	1	; () banked
 19626  016394  1702               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 19627  016396  0101               	movlb	1	; () banked
 19628  016398  8F04               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 19629                           
 19630                           ; BSR set to: 1
 19631  01639A  0EFF               	movlw	255
 19632  01639C  0101               	movlb	1	; () banked
 19633  01639E  1703               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 19634  0163A0  0EFF               	movlw	255
 19635  0163A2  0101               	movlb	1	; () banked
 19636  0163A4  1704               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 19637  0163A6  0E00               	movlw	0
 19638  0163A8  0101               	movlb	1	; () banked
 19639  0163AA  1705               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 19640                           
 19641                           ; BSR set to: 1
 19642  0163AC  0E00               	movlw	0
 19643  0163AE  0101               	movlb	1	; () banked
 19644  0163B0  6F09               	movwf	__tdiv_to_l_@quot& (0+255),b
 19645  0163B2  0E00               	movlw	0
 19646  0163B4  0101               	movlb	1	; () banked
 19647  0163B6  6F0A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 19648  0163B8  0E00               	movlw	0
 19649  0163BA  0101               	movlb	1	; () banked
 19650  0163BC  6F0B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 19651  0163BE  0E00               	movlw	0
 19652  0163C0  0101               	movlb	1	; () banked
 19653  0163C2  6F0C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 19654                           
 19655                           ; BSR set to: 1
 19656  0163C4  0E7F               	movlw	127
 19657  0163C6  0101               	movlb	1	; () banked
 19658  0163C8  5F0E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 19659                           
 19660                           ; BSR set to: 1
 19661  0163CA  0101               	movlb	1	; () banked
 19662  0163CC  510D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 19663  0163CE  0F98               	addlw	152
 19664  0163D0  0101               	movlb	1	; () banked
 19665  0163D2  5F0E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 19666                           
 19667                           ; BSR set to: 1
 19668  0163D4  0E18               	movlw	24
 19669  0163D6  0101               	movlb	1	; () banked
 19670  0163D8  6F0D               	movwf	__tdiv_to_l_@cntr& (0+255),b
 19671  0163DA                     l2587:
 19672                           
 19673                           ; BSR set to: 1
 19674  0163DA  0101               	movlb	1	; () banked
 19675  0163DC  90D8               	bcf	status,0,c
 19676  0163DE  0101               	movlb	1	; () banked
 19677  0163E0  3709               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 19678  0163E2  0101               	movlb	1	; () banked
 19679  0163E4  370A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 19680  0163E6  0101               	movlb	1	; () banked
 19681  0163E8  370B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 19682  0163EA  0101               	movlb	1	; () banked
 19683  0163EC  370C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 19684                           
 19685                           ; BSR set to: 1
 19686  0163EE  0101               	movlb	1	; () banked
 19687  0163F0  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
 19688  0163F2  0101               	movlb	1	; () banked
 19689  0163F4  5D00               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 19690  0163F6  0101               	movlb	1	; () banked
 19691  0163F8  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 19692  0163FA  0101               	movlb	1	; () banked
 19693  0163FC  5901               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 19694  0163FE  0101               	movlb	1	; () banked
 19695  016400  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 19696  016402  0101               	movlb	1	; () banked
 19697  016404  5902               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 19698  016406  A0D8               	btfss	status,0,c
 19699  016408  D00E               	goto	l2588
 19700                           
 19701                           ; BSR set to: 1
 19702  01640A  0101               	movlb	1	; () banked
 19703  01640C  5103               	movf	__tdiv_to_l_@f2& (0+255),w,b
 19704  01640E  0101               	movlb	1	; () banked
 19705  016410  5F00               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 19706  016412  0101               	movlb	1	; () banked
 19707  016414  5104               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 19708  016416  0101               	movlb	1	; () banked
 19709  016418  5B01               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 19710  01641A  0101               	movlb	1	; () banked
 19711  01641C  5105               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 19712  01641E  0101               	movlb	1	; () banked
 19713  016420  5B02               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 19714                           
 19715                           ; BSR set to: 1
 19716  016422  0101               	movlb	1	; () banked
 19717  016424  8109               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 19718  016426                     l2588:
 19719                           
 19720                           ; BSR set to: 1
 19721  016426  0101               	movlb	1	; () banked
 19722  016428  90D8               	bcf	status,0,c
 19723  01642A  0101               	movlb	1	; () banked
 19724  01642C  3700               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 19725  01642E  0101               	movlb	1	; () banked
 19726  016430  3701               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 19727  016432  0101               	movlb	1	; () banked
 19728  016434  3702               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 19729                           
 19730                           ; BSR set to: 1
 19731  016436  0101               	movlb	1	; () banked
 19732  016438  2F0D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 19733  01643A  D7CF               	goto	l2587
 19734                           
 19735                           ; BSR set to: 1
 19736  01643C  0101               	movlb	1	; () banked
 19737  01643E  AF0E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 19738  016440  D026               	goto	l11400
 19739                           
 19740                           ; BSR set to: 1
 19741  016442  0101               	movlb	1	; () banked
 19742  016444  510E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 19743  016446  0A80               	xorlw	128
 19744  016448  0101               	movlb	1	; () banked
 19745  01644A  6F06               	movwf	??__tdiv_to_l_& (0+255),b
 19746  01644C  0EE9               	movlw	233
 19747  01644E  0A80               	xorlw	128
 19748  016450  0101               	movlb	1	; () banked
 19749  016452  5D06               	subwf	??__tdiv_to_l_& (0+255),w,b
 19750  016454  B0D8               	btfsc	status,0,c
 19751  016456  D00D               	goto	l11396
 19752                           
 19753                           ; BSR set to: 1
 19754  016458  0E00               	movlw	0
 19755  01645A  0101               	movlb	1	; () banked
 19756  01645C  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 19757  01645E  0E00               	movlw	0
 19758  016460  0101               	movlb	1	; () banked
 19759  016462  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19760  016464  0E00               	movlw	0
 19761  016466  0101               	movlb	1	; () banked
 19762  016468  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19763  01646A  0E00               	movlw	0
 19764  01646C  0101               	movlb	1	; () banked
 19765  01646E  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19766  016470  0012               	return	
 19767  016472                     l11396:
 19768                           
 19769                           ; BSR set to: 1
 19770  016472  0101               	movlb	1	; () banked
 19771  016474  90D8               	bcf	status,0,c
 19772  016476  0101               	movlb	1	; () banked
 19773  016478  330C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 19774  01647A  0101               	movlb	1	; () banked
 19775  01647C  330B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 19776  01647E  0101               	movlb	1	; () banked
 19777  016480  330A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 19778  016482  0101               	movlb	1	; () banked
 19779  016484  3309               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 19780                           
 19781                           ; BSR set to: 1
 19782  016486  0101               	movlb	1	; () banked
 19783  016488  3F0E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 19784  01648A  D7F3               	goto	l11396
 19785  01648C  D020               	goto	l2594
 19786  01648E                     l11400:
 19787                           
 19788                           ; BSR set to: 1
 19789  01648E  0E17               	movlw	23
 19790  016490  0101               	movlb	1	; () banked
 19791  016492  650E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 19792  016494  D019               	goto	l11408
 19793                           
 19794                           ; BSR set to: 1
 19795  016496  0E00               	movlw	0
 19796  016498  0101               	movlb	1	; () banked
 19797  01649A  6F00               	movwf	?__tdiv_to_l_& (0+255),b
 19798  01649C  0E00               	movlw	0
 19799  01649E  0101               	movlb	1	; () banked
 19800  0164A0  6F01               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 19801  0164A2  0E00               	movlw	0
 19802  0164A4  0101               	movlb	1	; () banked
 19803  0164A6  6F02               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 19804  0164A8  0E00               	movlw	0
 19805  0164AA  0101               	movlb	1	; () banked
 19806  0164AC  6F03               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 19807  0164AE  0012               	return	
 19808  0164B0                     l11406:
 19809                           
 19810                           ; BSR set to: 1
 19811  0164B0  0101               	movlb	1	; () banked
 19812  0164B2  90D8               	bcf	status,0,c
 19813  0164B4  0101               	movlb	1	; () banked
 19814  0164B6  3709               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 19815  0164B8  0101               	movlb	1	; () banked
 19816  0164BA  370A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 19817  0164BC  0101               	movlb	1	; () banked
 19818  0164BE  370B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 19819  0164C0  0101               	movlb	1	; () banked
 19820  0164C2  370C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 19821  0164C4  0101               	movlb	1	; () banked
 19822  0164C6  070E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 19823  0164C8                     l11408:
 19824                           
 19825                           ; BSR set to: 1
 19826  0164C8  0101               	movlb	1	; () banked
 19827  0164CA  670E               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 19828  0164CC  D7F1               	goto	l11406
 19829  0164CE                     l2594:
 19830                           
 19831                           ; BSR set to: 1
 19832  0164CE  C109  F100         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 19833  0164D2  C10A  F101         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 19834  0164D6  C10B  F102         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 19835  0164DA  C10C  F103         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 19836                           
 19837                           ; BSR set to: 1
 19838  0164DE  0012               	return	
 19839  0164E0                     __end_of__tdiv_to_l_:
 19840                           	opt stack 0
 19841                           tblptru	equ	0xFF8
 19842                           tblptrh	equ	0xFF7
 19843                           tblptrl	equ	0xFF6
 19844                           tablat	equ	0xFF5
 19845                           prodh	equ	0xFF4
 19846                           prodl	equ	0xFF3
 19847                           intcon	equ	0xFF2
 19848                           indf0	equ	0xFEF
 19849                           postinc0	equ	0xFEE
 19850                           fsr0h	equ	0xFEA
 19851                           fsr0l	equ	0xFE9
 19852                           wreg	equ	0xFE8
 19853                           indf1	equ	0xFE7
 19854                           postinc1	equ	0xFE6
 19855                           postdec1	equ	0xFE5
 19856                           fsr1h	equ	0xFE2
 19857                           fsr1l	equ	0xFE1
 19858                           indf2	equ	0xFDF
 19859                           postinc2	equ	0xFDE
 19860                           postdec2	equ	0xFDD
 19861                           fsr2h	equ	0xFDA
 19862                           fsr2l	equ	0xFD9
 19863                           status	equ	0xFD8
 19864                           
 19865 ;; *************** function __div_to_l_ *****************
 19866 ;; Defined at:
 19867 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;  f1              3    0[BANK1 ] unsigned long 
 19870 ;;  f2              3    3[BANK1 ] unsigned long 
 19871 ;; Auto vars:     Size  Location     Type
 19872 ;;  quot            4   10[BANK1 ] unsigned long 
 19873 ;;  exp1            1   15[BANK1 ] unsigned char 
 19874 ;;  cntr            1   14[BANK1 ] unsigned char 
 19875 ;; Return value:  Size  Location     Type
 19876 ;;                  4    0[BANK1 ] unsigned long 
 19877 ;; Registers used:
 19878 ;;		wreg, status,2, status,0
 19879 ;; Tracked objects:
 19880 ;;		On entry : 0/0
 19881 ;;		On exit  : 0/0
 19882 ;;		Unchanged: 0/0
 19883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 19884 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19885 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19886 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19887 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19888 ;;Total ram usage:       16 bytes
 19889 ;; Hardware stack levels used:    1
 19890 ;; Hardware stack levels required when called:   10
 19891 ;; This function calls:
 19892 ;;		Nothing
 19893 ;; This function is called by:
 19894 ;;		_sprintf
 19895 ;; This function uses a non-reentrant model
 19896 ;;
 19897                           
 19898                           	psect	text26
 19899  0158AC                     __ptext26:
 19900                           	opt stack 0
 19901  0158AC                     __div_to_l_:
 19902                           	opt stack 17
 19903                           
 19904                           ; BSR set to: 1
 19905                           ;incstack = 0
 19906  0158AC  0101               	movlb	1	; () banked
 19907  0158AE  C100  F106         	movff	__div_to_l_@f1,??__div_to_l_
 19908  0158B2  0101               	movlb	1	; () banked
 19909  0158B4  C101  F107         	movff	__div_to_l_@f1+1,??__div_to_l_+1
 19910  0158B8  0101               	movlb	1	; () banked
 19911  0158BA  C102  F108         	movff	__div_to_l_@f1+2,??__div_to_l_+2
 19912  0158BE  0101               	movlb	1	; () banked
 19913  0158C0  C103  F109         	movff	__div_to_l_@f1+3,??__div_to_l_+3
 19914  0158C4  0E18               	movlw	24
 19915  0158C6  D006               	goto	u12300
 19916  0158C8                     u12305:
 19917  0158C8  0101               	movlb	1	; () banked
 19918  0158CA  90D8               	bcf	status,0,c
 19919  0158CC  3309               	rrcf	(??__div_to_l_+3)& (0+255),f,b
 19920  0158CE  3308               	rrcf	(??__div_to_l_+2)& (0+255),f,b
 19921  0158D0  3307               	rrcf	(??__div_to_l_+1)& (0+255),f,b
 19922  0158D2  3306               	rrcf	??__div_to_l_& (0+255),f,b
 19923  0158D4                     u12300:
 19924  0158D4  2EE8               	decfsz	wreg,f,c
 19925  0158D6  D7F8               	goto	u12305
 19926  0158D8  0101               	movlb	1	; () banked
 19927  0158DA  5106               	movf	??__div_to_l_& (0+255),w,b
 19928  0158DC  0101               	movlb	1	; () banked
 19929  0158DE  6F0F               	movwf	__div_to_l_@exp1& (0+255),b
 19930  0158E0  0101               	movlb	1	; () banked
 19931  0158E2  670F               	tstfsz	__div_to_l_@exp1& (0+255),b
 19932  0158E4  D00D               	goto	l11416
 19933                           
 19934                           ; BSR set to: 1
 19935  0158E6  0E00               	movlw	0
 19936  0158E8  0101               	movlb	1	; () banked
 19937  0158EA  6F00               	movwf	?__div_to_l_& (0+255),b
 19938  0158EC  0E00               	movlw	0
 19939  0158EE  0101               	movlb	1	; () banked
 19940  0158F0  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 19941  0158F2  0E00               	movlw	0
 19942  0158F4  0101               	movlb	1	; () banked
 19943  0158F6  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 19944  0158F8  0E00               	movlw	0
 19945  0158FA  0101               	movlb	1	; () banked
 19946  0158FC  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 19947  0158FE  0012               	return	
 19948  015900                     l11416:
 19949                           
 19950                           ; BSR set to: 1
 19951  015900  0101               	movlb	1	; () banked
 19952  015902  C103  F106         	movff	__div_to_l_@f2,??__div_to_l_
 19953  015906  0101               	movlb	1	; () banked
 19954  015908  C104  F107         	movff	__div_to_l_@f2+1,??__div_to_l_+1
 19955  01590C  0101               	movlb	1	; () banked
 19956  01590E  C105  F108         	movff	__div_to_l_@f2+2,??__div_to_l_+2
 19957  015912  0101               	movlb	1	; () banked
 19958  015914  C106  F109         	movff	__div_to_l_@f2+3,??__div_to_l_+3
 19959  015918  0E18               	movlw	24
 19960  01591A  D006               	goto	u12320
 19961  01591C                     u12325:
 19962  01591C  0101               	movlb	1	; () banked
 19963  01591E  90D8               	bcf	status,0,c
 19964  015920  3309               	rrcf	(??__div_to_l_+3)& (0+255),f,b
 19965  015922  3308               	rrcf	(??__div_to_l_+2)& (0+255),f,b
 19966  015924  3307               	rrcf	(??__div_to_l_+1)& (0+255),f,b
 19967  015926  3306               	rrcf	??__div_to_l_& (0+255),f,b
 19968  015928                     u12320:
 19969  015928  2EE8               	decfsz	wreg,f,c
 19970  01592A  D7F8               	goto	u12325
 19971  01592C  0101               	movlb	1	; () banked
 19972  01592E  5106               	movf	??__div_to_l_& (0+255),w,b
 19973  015930  0101               	movlb	1	; () banked
 19974  015932  6F0E               	movwf	__div_to_l_@cntr& (0+255),b
 19975  015934  0101               	movlb	1	; () banked
 19976  015936  670E               	tstfsz	__div_to_l_@cntr& (0+255),b
 19977  015938  D00D               	goto	l11422
 19978                           
 19979                           ; BSR set to: 1
 19980  01593A  0E00               	movlw	0
 19981  01593C  0101               	movlb	1	; () banked
 19982  01593E  6F00               	movwf	?__div_to_l_& (0+255),b
 19983  015940  0E00               	movlw	0
 19984  015942  0101               	movlb	1	; () banked
 19985  015944  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 19986  015946  0E00               	movlw	0
 19987  015948  0101               	movlb	1	; () banked
 19988  01594A  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 19989  01594C  0E00               	movlw	0
 19990  01594E  0101               	movlb	1	; () banked
 19991  015950  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 19992  015952  0012               	return	
 19993  015954                     l11422:
 19994                           
 19995                           ; BSR set to: 1
 19996  015954  0101               	movlb	1	; () banked
 19997  015956  8F02               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 19998                           
 19999                           ; BSR set to: 1
 20000  015958  0EFF               	movlw	255
 20001  01595A  0101               	movlb	1	; () banked
 20002  01595C  1700               	andwf	__div_to_l_@f1& (0+255),f,b
 20003  01595E  0EFF               	movlw	255
 20004  015960  0101               	movlb	1	; () banked
 20005  015962  1701               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 20006  015964  0EFF               	movlw	255
 20007  015966  0101               	movlb	1	; () banked
 20008  015968  1702               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 20009  01596A  0E00               	movlw	0
 20010  01596C  0101               	movlb	1	; () banked
 20011  01596E  1703               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 20012                           
 20013                           ; BSR set to: 1
 20014  015970  0101               	movlb	1	; () banked
 20015  015972  8F05               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 20016  015974  0EFF               	movlw	255
 20017  015976  0101               	movlb	1	; () banked
 20018  015978  1703               	andwf	__div_to_l_@f2& (0+255),f,b
 20019  01597A  0EFF               	movlw	255
 20020  01597C  0101               	movlb	1	; () banked
 20021  01597E  1704               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 20022  015980  0EFF               	movlw	255
 20023  015982  0101               	movlb	1	; () banked
 20024  015984  1705               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 20025  015986  0E00               	movlw	0
 20026  015988  0101               	movlb	1	; () banked
 20027  01598A  1706               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 20028                           
 20029                           ; BSR set to: 1
 20030  01598C  0E00               	movlw	0
 20031  01598E  0101               	movlb	1	; () banked
 20032  015990  6F0A               	movwf	__div_to_l_@quot& (0+255),b
 20033  015992  0E00               	movlw	0
 20034  015994  0101               	movlb	1	; () banked
 20035  015996  6F0B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 20036  015998  0E00               	movlw	0
 20037  01599A  0101               	movlb	1	; () banked
 20038  01599C  6F0C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 20039  01599E  0E00               	movlw	0
 20040  0159A0  0101               	movlb	1	; () banked
 20041  0159A2  6F0D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 20042                           
 20043                           ; BSR set to: 1
 20044  0159A4  0E7F               	movlw	127
 20045  0159A6  0101               	movlb	1	; () banked
 20046  0159A8  5F0F               	subwf	__div_to_l_@exp1& (0+255),f,b
 20047                           
 20048                           ; BSR set to: 1
 20049  0159AA  0101               	movlb	1	; () banked
 20050  0159AC  510E               	movf	__div_to_l_@cntr& (0+255),w,b
 20051  0159AE  0FA0               	addlw	160
 20052  0159B0  0101               	movlb	1	; () banked
 20053  0159B2  5F0F               	subwf	__div_to_l_@exp1& (0+255),f,b
 20054                           
 20055                           ; BSR set to: 1
 20056  0159B4  0E20               	movlw	32
 20057  0159B6  0101               	movlb	1	; () banked
 20058  0159B8  6F0E               	movwf	__div_to_l_@cntr& (0+255),b
 20059  0159BA                     l11436:
 20060                           
 20061                           ; BSR set to: 1
 20062  0159BA  0101               	movlb	1	; () banked
 20063  0159BC  90D8               	bcf	status,0,c
 20064  0159BE  0101               	movlb	1	; () banked
 20065  0159C0  370A               	rlcf	__div_to_l_@quot& (0+255),f,b
 20066  0159C2  0101               	movlb	1	; () banked
 20067  0159C4  370B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 20068  0159C6  0101               	movlb	1	; () banked
 20069  0159C8  370C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 20070  0159CA  0101               	movlb	1	; () banked
 20071  0159CC  370D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 20072                           
 20073                           ; BSR set to: 1
 20074  0159CE  0101               	movlb	1	; () banked
 20075  0159D0  5103               	movf	__div_to_l_@f2& (0+255),w,b
 20076  0159D2  0101               	movlb	1	; () banked
 20077  0159D4  5D00               	subwf	__div_to_l_@f1& (0+255),w,b
 20078  0159D6  0101               	movlb	1	; () banked
 20079  0159D8  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 20080  0159DA  0101               	movlb	1	; () banked
 20081  0159DC  5901               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 20082  0159DE  0101               	movlb	1	; () banked
 20083  0159E0  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 20084  0159E2  0101               	movlb	1	; () banked
 20085  0159E4  5902               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 20086  0159E6  0101               	movlb	1	; () banked
 20087  0159E8  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 20088  0159EA  0101               	movlb	1	; () banked
 20089  0159EC  5903               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 20090  0159EE  A0D8               	btfss	status,0,c
 20091  0159F0  D012               	goto	l11444
 20092                           
 20093                           ; BSR set to: 1
 20094  0159F2  0101               	movlb	1	; () banked
 20095  0159F4  5103               	movf	__div_to_l_@f2& (0+255),w,b
 20096  0159F6  0101               	movlb	1	; () banked
 20097  0159F8  5F00               	subwf	__div_to_l_@f1& (0+255),f,b
 20098  0159FA  0101               	movlb	1	; () banked
 20099  0159FC  5104               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 20100  0159FE  0101               	movlb	1	; () banked
 20101  015A00  5B01               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 20102  015A02  0101               	movlb	1	; () banked
 20103  015A04  5105               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 20104  015A06  0101               	movlb	1	; () banked
 20105  015A08  5B02               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 20106  015A0A  0101               	movlb	1	; () banked
 20107  015A0C  5106               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 20108  015A0E  0101               	movlb	1	; () banked
 20109  015A10  5B03               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 20110                           
 20111                           ; BSR set to: 1
 20112  015A12  0101               	movlb	1	; () banked
 20113  015A14  810A               	bsf	__div_to_l_@quot& (0+255),0,b
 20114  015A16                     l11444:
 20115                           
 20116                           ; BSR set to: 1
 20117  015A16  0101               	movlb	1	; () banked
 20118  015A18  90D8               	bcf	status,0,c
 20119  015A1A  0101               	movlb	1	; () banked
 20120  015A1C  3700               	rlcf	__div_to_l_@f1& (0+255),f,b
 20121  015A1E  0101               	movlb	1	; () banked
 20122  015A20  3701               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 20123  015A22  0101               	movlb	1	; () banked
 20124  015A24  3702               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 20125  015A26  0101               	movlb	1	; () banked
 20126  015A28  3703               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 20127                           
 20128                           ; BSR set to: 1
 20129  015A2A  0101               	movlb	1	; () banked
 20130  015A2C  2F0E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 20131  015A2E  D7C5               	goto	l11436
 20132                           
 20133                           ; BSR set to: 1
 20134  015A30  0101               	movlb	1	; () banked
 20135  015A32  AF0F               	btfss	__div_to_l_@exp1& (0+255),7,b
 20136  015A34  D026               	goto	l11458
 20137                           
 20138                           ; BSR set to: 1
 20139  015A36  0101               	movlb	1	; () banked
 20140  015A38  510F               	movf	__div_to_l_@exp1& (0+255),w,b
 20141  015A3A  0A80               	xorlw	128
 20142  015A3C  0101               	movlb	1	; () banked
 20143  015A3E  6F06               	movwf	??__div_to_l_& (0+255),b
 20144  015A40  0EE1               	movlw	225
 20145  015A42  0A80               	xorlw	128
 20146  015A44  0101               	movlb	1	; () banked
 20147  015A46  5D06               	subwf	??__div_to_l_& (0+255),w,b
 20148  015A48  B0D8               	btfsc	status,0,c
 20149  015A4A  D00D               	goto	l11454
 20150                           
 20151                           ; BSR set to: 1
 20152  015A4C  0E00               	movlw	0
 20153  015A4E  0101               	movlb	1	; () banked
 20154  015A50  6F00               	movwf	?__div_to_l_& (0+255),b
 20155  015A52  0E00               	movlw	0
 20156  015A54  0101               	movlb	1	; () banked
 20157  015A56  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 20158  015A58  0E00               	movlw	0
 20159  015A5A  0101               	movlb	1	; () banked
 20160  015A5C  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 20161  015A5E  0E00               	movlw	0
 20162  015A60  0101               	movlb	1	; () banked
 20163  015A62  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 20164  015A64  0012               	return	
 20165  015A66                     l11454:
 20166                           
 20167                           ; BSR set to: 1
 20168  015A66  0101               	movlb	1	; () banked
 20169  015A68  90D8               	bcf	status,0,c
 20170  015A6A  0101               	movlb	1	; () banked
 20171  015A6C  330D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 20172  015A6E  0101               	movlb	1	; () banked
 20173  015A70  330C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 20174  015A72  0101               	movlb	1	; () banked
 20175  015A74  330B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 20176  015A76  0101               	movlb	1	; () banked
 20177  015A78  330A               	rrcf	__div_to_l_@quot& (0+255),f,b
 20178                           
 20179                           ; BSR set to: 1
 20180  015A7A  0101               	movlb	1	; () banked
 20181  015A7C  3F0F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 20182  015A7E  D7F3               	goto	l11454
 20183  015A80  D020               	goto	l2476
 20184  015A82                     l11458:
 20185                           
 20186                           ; BSR set to: 1
 20187  015A82  0E1F               	movlw	31
 20188  015A84  0101               	movlb	1	; () banked
 20189  015A86  650F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 20190  015A88  D019               	goto	l11466
 20191                           
 20192                           ; BSR set to: 1
 20193  015A8A  0E00               	movlw	0
 20194  015A8C  0101               	movlb	1	; () banked
 20195  015A8E  6F00               	movwf	?__div_to_l_& (0+255),b
 20196  015A90  0E00               	movlw	0
 20197  015A92  0101               	movlb	1	; () banked
 20198  015A94  6F01               	movwf	(?__div_to_l_+1)& (0+255),b
 20199  015A96  0E00               	movlw	0
 20200  015A98  0101               	movlb	1	; () banked
 20201  015A9A  6F02               	movwf	(?__div_to_l_+2)& (0+255),b
 20202  015A9C  0E00               	movlw	0
 20203  015A9E  0101               	movlb	1	; () banked
 20204  015AA0  6F03               	movwf	(?__div_to_l_+3)& (0+255),b
 20205  015AA2  0012               	return	
 20206  015AA4                     l11464:
 20207                           
 20208                           ; BSR set to: 1
 20209  015AA4  0101               	movlb	1	; () banked
 20210  015AA6  90D8               	bcf	status,0,c
 20211  015AA8  0101               	movlb	1	; () banked
 20212  015AAA  370A               	rlcf	__div_to_l_@quot& (0+255),f,b
 20213  015AAC  0101               	movlb	1	; () banked
 20214  015AAE  370B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 20215  015AB0  0101               	movlb	1	; () banked
 20216  015AB2  370C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 20217  015AB4  0101               	movlb	1	; () banked
 20218  015AB6  370D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 20219  015AB8  0101               	movlb	1	; () banked
 20220  015ABA  070F               	decf	__div_to_l_@exp1& (0+255),f,b
 20221  015ABC                     l11466:
 20222                           
 20223                           ; BSR set to: 1
 20224  015ABC  0101               	movlb	1	; () banked
 20225  015ABE  670F               	tstfsz	__div_to_l_@exp1& (0+255),b
 20226  015AC0  D7F1               	goto	l11464
 20227  015AC2                     l2476:
 20228                           
 20229                           ; BSR set to: 1
 20230  015AC2  C10A  F100         	movff	__div_to_l_@quot,?__div_to_l_
 20231  015AC6  C10B  F101         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 20232  015ACA  C10C  F102         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 20233  015ACE  C10D  F103         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 20234                           
 20235                           ; BSR set to: 1
 20236  015AD2  0012               	return	
 20237  015AD4                     __end_of__div_to_l_:
 20238                           	opt stack 0
 20239                           tblptru	equ	0xFF8
 20240                           tblptrh	equ	0xFF7
 20241                           tblptrl	equ	0xFF6
 20242                           tablat	equ	0xFF5
 20243                           prodh	equ	0xFF4
 20244                           prodl	equ	0xFF3
 20245                           intcon	equ	0xFF2
 20246                           indf0	equ	0xFEF
 20247                           postinc0	equ	0xFEE
 20248                           fsr0h	equ	0xFEA
 20249                           fsr0l	equ	0xFE9
 20250                           wreg	equ	0xFE8
 20251                           indf1	equ	0xFE7
 20252                           postinc1	equ	0xFE6
 20253                           postdec1	equ	0xFE5
 20254                           fsr1h	equ	0xFE2
 20255                           fsr1l	equ	0xFE1
 20256                           indf2	equ	0xFDF
 20257                           postinc2	equ	0xFDE
 20258                           postdec2	equ	0xFDD
 20259                           fsr2h	equ	0xFDA
 20260                           fsr2l	equ	0xFD9
 20261                           status	equ	0xFD8
 20262                           
 20263 ;; *************** function ___lltoft *****************
 20264 ;; Defined at:
 20265 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
 20266 ;; Parameters:    Size  Location     Type
 20267 ;;  c               4    8[BANK1 ] unsigned long 
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;  exp             1   16[BANK1 ] unsigned char 
 20270 ;; Return value:  Size  Location     Type
 20271 ;;                  3    8[BANK1 ] float 
 20272 ;; Registers used:
 20273 ;;		wreg, status,2, status,0, cstack
 20274 ;; Tracked objects:
 20275 ;;		On entry : 0/0
 20276 ;;		On exit  : 0/0
 20277 ;;		Unchanged: 0/0
 20278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20279 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20280 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20281 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20282 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20283 ;;Total ram usage:        9 bytes
 20284 ;; Hardware stack levels used:    1
 20285 ;; Hardware stack levels required when called:   11
 20286 ;; This function calls:
 20287 ;;		___ftpack
 20288 ;; This function is called by:
 20289 ;;		_sprintf
 20290 ;; This function uses a non-reentrant model
 20291 ;;
 20292                           
 20293                           	psect	text27
 20294  01AA42                     __ptext27:
 20295                           	opt stack 0
 20296  01AA42                     ___lltoft:
 20297                           	opt stack 16
 20298                           
 20299                           ; BSR set to: 1
 20300                           ;incstack = 0
 20301  01AA42  0E8E               	movlw	142
 20302  01AA44  0101               	movlb	1	; () banked
 20303  01AA46  6F10               	movwf	___lltoft@exp& (0+255),b
 20304  01AA48  D00C               	goto	l11538
 20305  01AA4A                     l11536:
 20306                           
 20307                           ; BSR set to: 1
 20308  01AA4A  0101               	movlb	1	; () banked
 20309  01AA4C  90D8               	bcf	status,0,c
 20310  01AA4E  0101               	movlb	1	; () banked
 20311  01AA50  330B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 20312  01AA52  0101               	movlb	1	; () banked
 20313  01AA54  330A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 20314  01AA56  0101               	movlb	1	; () banked
 20315  01AA58  3309               	rrcf	(___lltoft@c+1)& (0+255),f,b
 20316  01AA5A  0101               	movlb	1	; () banked
 20317  01AA5C  3308               	rrcf	___lltoft@c& (0+255),f,b
 20318  01AA5E  0101               	movlb	1	; () banked
 20319  01AA60  2B10               	incf	___lltoft@exp& (0+255),f,b
 20320  01AA62                     l11538:
 20321                           
 20322                           ; BSR set to: 1
 20323  01AA62  0E00               	movlw	0
 20324  01AA64  0101               	movlb	1	; () banked
 20325  01AA66  1508               	andwf	___lltoft@c& (0+255),w,b
 20326  01AA68  0101               	movlb	1	; () banked
 20327  01AA6A  6F0C               	movwf	??___lltoft& (0+255),b
 20328  01AA6C  0E00               	movlw	0
 20329  01AA6E  0101               	movlb	1	; () banked
 20330  01AA70  1509               	andwf	(___lltoft@c+1)& (0+255),w,b
 20331  01AA72  0101               	movlb	1	; () banked
 20332  01AA74  6F0D               	movwf	(??___lltoft+1)& (0+255),b
 20333  01AA76  0E00               	movlw	0
 20334  01AA78  0101               	movlb	1	; () banked
 20335  01AA7A  150A               	andwf	(___lltoft@c+2)& (0+255),w,b
 20336  01AA7C  0101               	movlb	1	; () banked
 20337  01AA7E  6F0E               	movwf	(??___lltoft+2)& (0+255),b
 20338  01AA80  0EFF               	movlw	255
 20339  01AA82  0101               	movlb	1	; () banked
 20340  01AA84  150B               	andwf	(___lltoft@c+3)& (0+255),w,b
 20341  01AA86  0101               	movlb	1	; () banked
 20342  01AA88  6F0F               	movwf	(??___lltoft+3)& (0+255),b
 20343  01AA8A  0101               	movlb	1	; () banked
 20344  01AA8C  510F               	movf	(??___lltoft+3)& (0+255),w,b
 20345  01AA8E  110C               	iorwf	??___lltoft& (0+255),w,b
 20346  01AA90  110D               	iorwf	(??___lltoft+1)& (0+255),w,b
 20347  01AA92  110E               	iorwf	(??___lltoft+2)& (0+255),w,b
 20348  01AA94  A4D8               	btfss	status,2,c
 20349  01AA96  D7D9               	goto	l11536
 20350                           
 20351                           ; BSR set to: 1
 20352                           
 20353                           ; BSR set to: 1
 20354  01AA98  C108  F100         	movff	___lltoft@c,___ftpack@arg
 20355  01AA9C  C109  F101         	movff	___lltoft@c+1,___ftpack@arg+1
 20356  01AAA0  C10A  F102         	movff	___lltoft@c+2,___ftpack@arg+2
 20357  01AAA4  C110  F103         	movff	___lltoft@exp,___ftpack@exp
 20358  01AAA8  0E00               	movlw	0
 20359  01AAAA  0101               	movlb	1	; () banked
 20360  01AAAC  6F04               	movwf	___ftpack@sign& (0+255),b
 20361  01AAAE  EC61  F0C5         	call	___ftpack	;wreg free
 20362  01AAB2  C100  F108         	movff	?___ftpack,?___lltoft
 20363  01AAB6  C101  F109         	movff	?___ftpack+1,?___lltoft+1
 20364  01AABA  C102  F10A         	movff	?___ftpack+2,?___lltoft+2
 20365  01AABE  0012               	return	
 20366  01AAC0                     __end_of___lltoft:
 20367                           	opt stack 0
 20368                           tblptru	equ	0xFF8
 20369                           tblptrh	equ	0xFF7
 20370                           tblptrl	equ	0xFF6
 20371                           tablat	equ	0xFF5
 20372                           prodh	equ	0xFF4
 20373                           prodl	equ	0xFF3
 20374                           intcon	equ	0xFF2
 20375                           indf0	equ	0xFEF
 20376                           postinc0	equ	0xFEE
 20377                           fsr0h	equ	0xFEA
 20378                           fsr0l	equ	0xFE9
 20379                           wreg	equ	0xFE8
 20380                           indf1	equ	0xFE7
 20381                           postinc1	equ	0xFE6
 20382                           postdec1	equ	0xFE5
 20383                           fsr1h	equ	0xFE2
 20384                           fsr1l	equ	0xFE1
 20385                           indf2	equ	0xFDF
 20386                           postinc2	equ	0xFDE
 20387                           postdec2	equ	0xFDD
 20388                           fsr2h	equ	0xFDA
 20389                           fsr2l	equ	0xFD9
 20390                           status	equ	0xFD8
 20391                           
 20392 ;; *************** function ___llmod *****************
 20393 ;; Defined at:
 20394 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 20395 ;; Parameters:    Size  Location     Type
 20396 ;;  dividend        4    0[BANK1 ] unsigned long 
 20397 ;;  divisor         4    4[BANK1 ] unsigned long 
 20398 ;; Auto vars:     Size  Location     Type
 20399 ;;  counter         1    8[BANK1 ] unsigned char 
 20400 ;; Return value:  Size  Location     Type
 20401 ;;                  4    0[BANK1 ] unsigned long 
 20402 ;; Registers used:
 20403 ;;		wreg, status,2, status,0
 20404 ;; Tracked objects:
 20405 ;;		On entry : 0/0
 20406 ;;		On exit  : 0/0
 20407 ;;		Unchanged: 0/0
 20408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20409 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20410 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20412 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20413 ;;Total ram usage:        9 bytes
 20414 ;; Hardware stack levels used:    1
 20415 ;; Hardware stack levels required when called:   10
 20416 ;; This function calls:
 20417 ;;		Nothing
 20418 ;; This function is called by:
 20419 ;;		_sprintf
 20420 ;; This function uses a non-reentrant model
 20421 ;;
 20422                           
 20423                           	psect	text28
 20424  01A254                     __ptext28:
 20425                           	opt stack 0
 20426  01A254                     ___llmod:
 20427                           	opt stack 17
 20428                           
 20429                           ;incstack = 0
 20430  01A254  0101               	movlb	1	; () banked
 20431  01A256  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 20432  01A258  1104               	iorwf	___llmod@divisor& (0+255),w,b
 20433  01A25A  1105               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 20434  01A25C  1106               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 20435  01A25E  B4D8               	btfsc	status,2,c
 20436  01A260  D042               	goto	l2683
 20437                           
 20438                           ; BSR set to: 1
 20439  01A262  0E01               	movlw	1
 20440  01A264  0101               	movlb	1	; () banked
 20441  01A266  6F08               	movwf	___llmod@counter& (0+255),b
 20442  01A268  D00C               	goto	l11524
 20443  01A26A                     l11522:
 20444                           
 20445                           ; BSR set to: 1
 20446  01A26A  0101               	movlb	1	; () banked
 20447  01A26C  90D8               	bcf	status,0,c
 20448  01A26E  0101               	movlb	1	; () banked
 20449  01A270  3704               	rlcf	___llmod@divisor& (0+255),f,b
 20450  01A272  0101               	movlb	1	; () banked
 20451  01A274  3705               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 20452  01A276  0101               	movlb	1	; () banked
 20453  01A278  3706               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 20454  01A27A  0101               	movlb	1	; () banked
 20455  01A27C  3707               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 20456  01A27E  0101               	movlb	1	; () banked
 20457  01A280  2B08               	incf	___llmod@counter& (0+255),f,b
 20458  01A282                     l11524:
 20459                           
 20460                           ; BSR set to: 1
 20461  01A282  0101               	movlb	1	; () banked
 20462  01A284  AF07               	btfss	(___llmod@divisor+3)& (0+255),7,b
 20463  01A286  D7F1               	goto	l11522
 20464  01A288                     l11526:
 20465                           
 20466                           ; BSR set to: 1
 20467  01A288  0101               	movlb	1	; () banked
 20468  01A28A  5104               	movf	___llmod@divisor& (0+255),w,b
 20469  01A28C  0101               	movlb	1	; () banked
 20470  01A28E  5D00               	subwf	___llmod@dividend& (0+255),w,b
 20471  01A290  0101               	movlb	1	; () banked
 20472  01A292  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 20473  01A294  0101               	movlb	1	; () banked
 20474  01A296  5901               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 20475  01A298  0101               	movlb	1	; () banked
 20476  01A29A  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 20477  01A29C  0101               	movlb	1	; () banked
 20478  01A29E  5902               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 20479  01A2A0  0101               	movlb	1	; () banked
 20480  01A2A2  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 20481  01A2A4  0101               	movlb	1	; () banked
 20482  01A2A6  5903               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 20483  01A2A8  A0D8               	btfss	status,0,c
 20484  01A2AA  D010               	goto	l11530
 20485                           
 20486                           ; BSR set to: 1
 20487  01A2AC  0101               	movlb	1	; () banked
 20488  01A2AE  5104               	movf	___llmod@divisor& (0+255),w,b
 20489  01A2B0  0101               	movlb	1	; () banked
 20490  01A2B2  5F00               	subwf	___llmod@dividend& (0+255),f,b
 20491  01A2B4  0101               	movlb	1	; () banked
 20492  01A2B6  5105               	movf	(___llmod@divisor+1)& (0+255),w,b
 20493  01A2B8  0101               	movlb	1	; () banked
 20494  01A2BA  5B01               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 20495  01A2BC  0101               	movlb	1	; () banked
 20496  01A2BE  5106               	movf	(___llmod@divisor+2)& (0+255),w,b
 20497  01A2C0  0101               	movlb	1	; () banked
 20498  01A2C2  5B02               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 20499  01A2C4  0101               	movlb	1	; () banked
 20500  01A2C6  5107               	movf	(___llmod@divisor+3)& (0+255),w,b
 20501  01A2C8  0101               	movlb	1	; () banked
 20502  01A2CA  5B03               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 20503  01A2CC                     l11530:
 20504                           
 20505                           ; BSR set to: 1
 20506  01A2CC  0101               	movlb	1	; () banked
 20507  01A2CE  90D8               	bcf	status,0,c
 20508  01A2D0  0101               	movlb	1	; () banked
 20509  01A2D2  3307               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 20510  01A2D4  0101               	movlb	1	; () banked
 20511  01A2D6  3306               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 20512  01A2D8  0101               	movlb	1	; () banked
 20513  01A2DA  3305               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 20514  01A2DC  0101               	movlb	1	; () banked
 20515  01A2DE  3304               	rrcf	___llmod@divisor& (0+255),f,b
 20516                           
 20517                           ; BSR set to: 1
 20518  01A2E0  0101               	movlb	1	; () banked
 20519  01A2E2  2F08               	decfsz	___llmod@counter& (0+255),f,b
 20520  01A2E4  D7D1               	goto	l11526
 20521  01A2E6                     l2683:
 20522                           
 20523                           ; BSR set to: 1
 20524  01A2E6  C100  F100         	movff	___llmod@dividend,?___llmod
 20525  01A2EA  C101  F101         	movff	___llmod@dividend+1,?___llmod+1
 20526  01A2EE  C102  F102         	movff	___llmod@dividend+2,?___llmod+2
 20527  01A2F2  C103  F103         	movff	___llmod@dividend+3,?___llmod+3
 20528                           
 20529                           ; BSR set to: 1
 20530  01A2F6  0012               	return	
 20531  01A2F8                     __end_of___llmod:
 20532                           	opt stack 0
 20533                           tblptru	equ	0xFF8
 20534                           tblptrh	equ	0xFF7
 20535                           tblptrl	equ	0xFF6
 20536                           tablat	equ	0xFF5
 20537                           prodh	equ	0xFF4
 20538                           prodl	equ	0xFF3
 20539                           intcon	equ	0xFF2
 20540                           indf0	equ	0xFEF
 20541                           postinc0	equ	0xFEE
 20542                           fsr0h	equ	0xFEA
 20543                           fsr0l	equ	0xFE9
 20544                           wreg	equ	0xFE8
 20545                           indf1	equ	0xFE7
 20546                           postinc1	equ	0xFE6
 20547                           postdec1	equ	0xFE5
 20548                           fsr1h	equ	0xFE2
 20549                           fsr1l	equ	0xFE1
 20550                           indf2	equ	0xFDF
 20551                           postinc2	equ	0xFDE
 20552                           postdec2	equ	0xFDD
 20553                           fsr2h	equ	0xFDA
 20554                           fsr2l	equ	0xFD9
 20555                           status	equ	0xFD8
 20556                           
 20557 ;; *************** function ___lldiv *****************
 20558 ;; Defined at:
 20559 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 20560 ;; Parameters:    Size  Location     Type
 20561 ;;  dividend        4    0[BANK1 ] unsigned long 
 20562 ;;  divisor         4    4[BANK1 ] unsigned long 
 20563 ;; Auto vars:     Size  Location     Type
 20564 ;;  quotient        4    8[BANK1 ] unsigned long 
 20565 ;;  counter         1   12[BANK1 ] unsigned char 
 20566 ;; Return value:  Size  Location     Type
 20567 ;;                  4    0[BANK1 ] unsigned long 
 20568 ;; Registers used:
 20569 ;;		wreg, status,2, status,0
 20570 ;; Tracked objects:
 20571 ;;		On entry : 0/0
 20572 ;;		On exit  : 0/0
 20573 ;;		Unchanged: 0/0
 20574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20575 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20576 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20578 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20579 ;;Total ram usage:       13 bytes
 20580 ;; Hardware stack levels used:    1
 20581 ;; Hardware stack levels required when called:   10
 20582 ;; This function calls:
 20583 ;;		Nothing
 20584 ;; This function is called by:
 20585 ;;		_sprintf
 20586 ;;		_TickConvertToMilliseconds
 20587 ;; This function uses a non-reentrant model
 20588 ;;
 20589                           
 20590                           	psect	text29
 20591  0197CC                     __ptext29:
 20592                           	opt stack 0
 20593  0197CC                     ___lldiv:
 20594                           	opt stack 17
 20595                           
 20596                           ; BSR set to: 1
 20597                           ;incstack = 0
 20598  0197CC  0E00               	movlw	0
 20599  0197CE  0101               	movlb	1	; () banked
 20600  0197D0  6F08               	movwf	___lldiv@quotient& (0+255),b
 20601  0197D2  0E00               	movlw	0
 20602  0197D4  0101               	movlb	1	; () banked
 20603  0197D6  6F09               	movwf	(___lldiv@quotient+1)& (0+255),b
 20604  0197D8  0E00               	movlw	0
 20605  0197DA  0101               	movlb	1	; () banked
 20606  0197DC  6F0A               	movwf	(___lldiv@quotient+2)& (0+255),b
 20607  0197DE  0E00               	movlw	0
 20608  0197E0  0101               	movlb	1	; () banked
 20609  0197E2  6F0B               	movwf	(___lldiv@quotient+3)& (0+255),b
 20610                           
 20611                           ; BSR set to: 1
 20612  0197E4  0101               	movlb	1	; () banked
 20613  0197E6  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20614  0197E8  1104               	iorwf	___lldiv@divisor& (0+255),w,b
 20615  0197EA  1105               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 20616  0197EC  1106               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 20617  0197EE  B4D8               	btfsc	status,2,c
 20618  0197F0  D04E               	goto	l2673
 20619                           
 20620                           ; BSR set to: 1
 20621  0197F2  0E01               	movlw	1
 20622  0197F4  0101               	movlb	1	; () banked
 20623  0197F6  6F0C               	movwf	___lldiv@counter& (0+255),b
 20624  0197F8  D00C               	goto	l11504
 20625  0197FA                     l11502:
 20626                           
 20627                           ; BSR set to: 1
 20628  0197FA  0101               	movlb	1	; () banked
 20629  0197FC  90D8               	bcf	status,0,c
 20630  0197FE  0101               	movlb	1	; () banked
 20631  019800  3704               	rlcf	___lldiv@divisor& (0+255),f,b
 20632  019802  0101               	movlb	1	; () banked
 20633  019804  3705               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 20634  019806  0101               	movlb	1	; () banked
 20635  019808  3706               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 20636  01980A  0101               	movlb	1	; () banked
 20637  01980C  3707               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 20638  01980E  0101               	movlb	1	; () banked
 20639  019810  2B0C               	incf	___lldiv@counter& (0+255),f,b
 20640  019812                     l11504:
 20641                           
 20642                           ; BSR set to: 1
 20643  019812  0101               	movlb	1	; () banked
 20644  019814  AF07               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 20645  019816  D7F1               	goto	l11502
 20646  019818                     l11506:
 20647                           
 20648                           ; BSR set to: 1
 20649  019818  0101               	movlb	1	; () banked
 20650  01981A  90D8               	bcf	status,0,c
 20651  01981C  0101               	movlb	1	; () banked
 20652  01981E  3708               	rlcf	___lldiv@quotient& (0+255),f,b
 20653  019820  0101               	movlb	1	; () banked
 20654  019822  3709               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 20655  019824  0101               	movlb	1	; () banked
 20656  019826  370A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 20657  019828  0101               	movlb	1	; () banked
 20658  01982A  370B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 20659                           
 20660                           ; BSR set to: 1
 20661  01982C  0101               	movlb	1	; () banked
 20662  01982E  5104               	movf	___lldiv@divisor& (0+255),w,b
 20663  019830  0101               	movlb	1	; () banked
 20664  019832  5D00               	subwf	___lldiv@dividend& (0+255),w,b
 20665  019834  0101               	movlb	1	; () banked
 20666  019836  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20667  019838  0101               	movlb	1	; () banked
 20668  01983A  5901               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 20669  01983C  0101               	movlb	1	; () banked
 20670  01983E  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20671  019840  0101               	movlb	1	; () banked
 20672  019842  5902               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 20673  019844  0101               	movlb	1	; () banked
 20674  019846  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20675  019848  0101               	movlb	1	; () banked
 20676  01984A  5903               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 20677  01984C  A0D8               	btfss	status,0,c
 20678  01984E  D012               	goto	l11514
 20679                           
 20680                           ; BSR set to: 1
 20681  019850  0101               	movlb	1	; () banked
 20682  019852  5104               	movf	___lldiv@divisor& (0+255),w,b
 20683  019854  0101               	movlb	1	; () banked
 20684  019856  5F00               	subwf	___lldiv@dividend& (0+255),f,b
 20685  019858  0101               	movlb	1	; () banked
 20686  01985A  5105               	movf	(___lldiv@divisor+1)& (0+255),w,b
 20687  01985C  0101               	movlb	1	; () banked
 20688  01985E  5B01               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 20689  019860  0101               	movlb	1	; () banked
 20690  019862  5106               	movf	(___lldiv@divisor+2)& (0+255),w,b
 20691  019864  0101               	movlb	1	; () banked
 20692  019866  5B02               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 20693  019868  0101               	movlb	1	; () banked
 20694  01986A  5107               	movf	(___lldiv@divisor+3)& (0+255),w,b
 20695  01986C  0101               	movlb	1	; () banked
 20696  01986E  5B03               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 20697                           
 20698                           ; BSR set to: 1
 20699  019870  0101               	movlb	1	; () banked
 20700  019872  8108               	bsf	___lldiv@quotient& (0+255),0,b
 20701  019874                     l11514:
 20702                           
 20703                           ; BSR set to: 1
 20704  019874  0101               	movlb	1	; () banked
 20705  019876  90D8               	bcf	status,0,c
 20706  019878  0101               	movlb	1	; () banked
 20707  01987A  3307               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 20708  01987C  0101               	movlb	1	; () banked
 20709  01987E  3306               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 20710  019880  0101               	movlb	1	; () banked
 20711  019882  3305               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 20712  019884  0101               	movlb	1	; () banked
 20713  019886  3304               	rrcf	___lldiv@divisor& (0+255),f,b
 20714                           
 20715                           ; BSR set to: 1
 20716  019888  0101               	movlb	1	; () banked
 20717  01988A  2F0C               	decfsz	___lldiv@counter& (0+255),f,b
 20718  01988C  D7C5               	goto	l11506
 20719  01988E                     l2673:
 20720                           
 20721                           ; BSR set to: 1
 20722  01988E  C108  F100         	movff	___lldiv@quotient,?___lldiv
 20723  019892  C109  F101         	movff	___lldiv@quotient+1,?___lldiv+1
 20724  019896  C10A  F102         	movff	___lldiv@quotient+2,?___lldiv+2
 20725  01989A  C10B  F103         	movff	___lldiv@quotient+3,?___lldiv+3
 20726                           
 20727                           ; BSR set to: 1
 20728  01989E  0012               	return	
 20729  0198A0                     __end_of___lldiv:
 20730                           	opt stack 0
 20731                           tblptru	equ	0xFF8
 20732                           tblptrh	equ	0xFF7
 20733                           tblptrl	equ	0xFF6
 20734                           tablat	equ	0xFF5
 20735                           prodh	equ	0xFF4
 20736                           prodl	equ	0xFF3
 20737                           intcon	equ	0xFF2
 20738                           indf0	equ	0xFEF
 20739                           postinc0	equ	0xFEE
 20740                           fsr0h	equ	0xFEA
 20741                           fsr0l	equ	0xFE9
 20742                           wreg	equ	0xFE8
 20743                           indf1	equ	0xFE7
 20744                           postinc1	equ	0xFE6
 20745                           postdec1	equ	0xFE5
 20746                           fsr1h	equ	0xFE2
 20747                           fsr1l	equ	0xFE1
 20748                           indf2	equ	0xFDF
 20749                           postinc2	equ	0xFDE
 20750                           postdec2	equ	0xFDD
 20751                           fsr2h	equ	0xFDA
 20752                           fsr2l	equ	0xFD9
 20753                           status	equ	0xFD8
 20754                           
 20755 ;; *************** function ___ftsub *****************
 20756 ;; Defined at:
 20757 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
 20758 ;; Parameters:    Size  Location     Type
 20759 ;;  f1              3   57[BANK1 ] float 
 20760 ;;  f2              3   60[BANK1 ] float 
 20761 ;; Auto vars:     Size  Location     Type
 20762 ;;		None
 20763 ;; Return value:  Size  Location     Type
 20764 ;;                  3   57[BANK1 ] float 
 20765 ;; Registers used:
 20766 ;;		wreg, status,2, status,0, cstack
 20767 ;; Tracked objects:
 20768 ;;		On entry : 0/0
 20769 ;;		On exit  : 0/0
 20770 ;;		Unchanged: 0/0
 20771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20772 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20775 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20776 ;;Total ram usage:        6 bytes
 20777 ;; Hardware stack levels used:    1
 20778 ;; Hardware stack levels required when called:   12
 20779 ;; This function calls:
 20780 ;;		___ftadd
 20781 ;; This function is called by:
 20782 ;;		_sprintf
 20783 ;; This function uses a non-reentrant model
 20784 ;;
 20785                           
 20786                           	psect	text30
 20787  01B37E                     __ptext30:
 20788                           	opt stack 0
 20789  01B37E                     ___ftsub:
 20790                           	opt stack 15
 20791                           
 20792                           ; BSR set to: 1
 20793                           ;incstack = 0
 20794  01B37E  0E00               	movlw	0
 20795  01B380  0101               	movlb	1	; () banked
 20796  01B382  1B3C               	xorwf	___ftsub@f2& (0+255),f,b
 20797  01B384  0E00               	movlw	0
 20798  01B386  0101               	movlb	1	; () banked
 20799  01B388  1B3D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 20800  01B38A  0E80               	movlw	128
 20801  01B38C  0101               	movlb	1	; () banked
 20802  01B38E  1B3E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 20803                           
 20804                           ; BSR set to: 1
 20805  01B390  C139  F12D         	movff	___ftsub@f1,___ftadd@f1
 20806  01B394  C13A  F12E         	movff	___ftsub@f1+1,___ftadd@f1+1
 20807  01B398  C13B  F12F         	movff	___ftsub@f1+2,___ftadd@f1+2
 20808  01B39C  C13C  F130         	movff	___ftsub@f2,___ftadd@f2
 20809  01B3A0  C13D  F131         	movff	___ftsub@f2+1,___ftadd@f2+1
 20810  01B3A4  C13E  F132         	movff	___ftsub@f2+2,___ftadd@f2+2
 20811  01B3A8  EC75  F0A6         	call	___ftadd	;wreg free
 20812  01B3AC  C12D  F139         	movff	?___ftadd,?___ftsub
 20813  01B3B0  C12E  F13A         	movff	?___ftadd+1,?___ftsub+1
 20814  01B3B4  C12F  F13B         	movff	?___ftadd+2,?___ftsub+2
 20815  01B3B8  0012               	return	
 20816  01B3BA                     __end_of___ftsub:
 20817                           	opt stack 0
 20818                           tblptru	equ	0xFF8
 20819                           tblptrh	equ	0xFF7
 20820                           tblptrl	equ	0xFF6
 20821                           tablat	equ	0xFF5
 20822                           prodh	equ	0xFF4
 20823                           prodl	equ	0xFF3
 20824                           intcon	equ	0xFF2
 20825                           indf0	equ	0xFEF
 20826                           postinc0	equ	0xFEE
 20827                           fsr0h	equ	0xFEA
 20828                           fsr0l	equ	0xFE9
 20829                           wreg	equ	0xFE8
 20830                           indf1	equ	0xFE7
 20831                           postinc1	equ	0xFE6
 20832                           postdec1	equ	0xFE5
 20833                           fsr1h	equ	0xFE2
 20834                           fsr1l	equ	0xFE1
 20835                           indf2	equ	0xFDF
 20836                           postinc2	equ	0xFDE
 20837                           postdec2	equ	0xFDD
 20838                           fsr2h	equ	0xFDA
 20839                           fsr2l	equ	0xFD9
 20840                           status	equ	0xFD8
 20841                           
 20842 ;; *************** function ___ftneg *****************
 20843 ;; Defined at:
 20844 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
 20845 ;; Parameters:    Size  Location     Type
 20846 ;;  f1              3    0[BANK1 ] float 
 20847 ;; Auto vars:     Size  Location     Type
 20848 ;;		None
 20849 ;; Return value:  Size  Location     Type
 20850 ;;                  3    0[BANK1 ] float 
 20851 ;; Registers used:
 20852 ;;		wreg, status,2, status,0
 20853 ;; Tracked objects:
 20854 ;;		On entry : 0/0
 20855 ;;		On exit  : 0/0
 20856 ;;		Unchanged: 0/0
 20857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20858 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20861 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20862 ;;Total ram usage:        3 bytes
 20863 ;; Hardware stack levels used:    1
 20864 ;; Hardware stack levels required when called:   10
 20865 ;; This function calls:
 20866 ;;		Nothing
 20867 ;; This function is called by:
 20868 ;;		_sprintf
 20869 ;; This function uses a non-reentrant model
 20870 ;;
 20871                           
 20872                           	psect	text31
 20873  01B532                     __ptext31:
 20874                           	opt stack 0
 20875  01B532                     ___ftneg:
 20876                           	opt stack 17
 20877                           
 20878                           ;incstack = 0
 20879  01B532  0E7F               	movlw	127
 20880  01B534  0101               	movlb	1	; () banked
 20881  01B536  1502               	andwf	(___ftneg@f1+2)& (0+255),w,b
 20882  01B538  0101               	movlb	1	; () banked
 20883  01B53A  1101               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 20884  01B53C  0101               	movlb	1	; () banked
 20885  01B53E  1100               	iorwf	___ftneg@f1& (0+255),w,b
 20886  01B540  B4D8               	btfsc	status,2,c
 20887  01B542  D009               	goto	l2619
 20888                           
 20889                           ; BSR set to: 1
 20890  01B544  0E00               	movlw	0
 20891  01B546  0101               	movlb	1	; () banked
 20892  01B548  1B00               	xorwf	___ftneg@f1& (0+255),f,b
 20893  01B54A  0E00               	movlw	0
 20894  01B54C  0101               	movlb	1	; () banked
 20895  01B54E  1B01               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 20896  01B550  0E80               	movlw	128
 20897  01B552  0101               	movlb	1	; () banked
 20898  01B554  1B02               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 20899  01B556                     l2619:
 20900                           
 20901                           ; BSR set to: 1
 20902  01B556  C100  F100         	movff	___ftneg@f1,?___ftneg
 20903  01B55A  C101  F101         	movff	___ftneg@f1+1,?___ftneg+1
 20904  01B55E  C102  F102         	movff	___ftneg@f1+2,?___ftneg+2
 20905                           
 20906                           ; BSR set to: 1
 20907  01B562  0012               	return	
 20908  01B564                     __end_of___ftneg:
 20909                           	opt stack 0
 20910                           tblptru	equ	0xFF8
 20911                           tblptrh	equ	0xFF7
 20912                           tblptrl	equ	0xFF6
 20913                           tablat	equ	0xFF5
 20914                           prodh	equ	0xFF4
 20915                           prodl	equ	0xFF3
 20916                           intcon	equ	0xFF2
 20917                           indf0	equ	0xFEF
 20918                           postinc0	equ	0xFEE
 20919                           fsr0h	equ	0xFEA
 20920                           fsr0l	equ	0xFE9
 20921                           wreg	equ	0xFE8
 20922                           indf1	equ	0xFE7
 20923                           postinc1	equ	0xFE6
 20924                           postdec1	equ	0xFE5
 20925                           fsr1h	equ	0xFE2
 20926                           fsr1l	equ	0xFE1
 20927                           indf2	equ	0xFDF
 20928                           postinc2	equ	0xFDE
 20929                           postdec2	equ	0xFDD
 20930                           fsr2h	equ	0xFDA
 20931                           fsr2l	equ	0xFD9
 20932                           status	equ	0xFD8
 20933                           
 20934 ;; *************** function ___ftge *****************
 20935 ;; Defined at:
 20936 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
 20937 ;; Parameters:    Size  Location     Type
 20938 ;;  ff1             3    0[BANK1 ] float 
 20939 ;;  ff2             3    3[BANK1 ] float 
 20940 ;; Auto vars:     Size  Location     Type
 20941 ;;		None
 20942 ;; Return value:  Size  Location     Type
 20943 ;;		None               void
 20944 ;; Registers used:
 20945 ;;		wreg, status,2, status,0
 20946 ;; Tracked objects:
 20947 ;;		On entry : 0/0
 20948 ;;		On exit  : 0/0
 20949 ;;		Unchanged: 0/0
 20950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 20951 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20953 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20954 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20955 ;;Total ram usage:        9 bytes
 20956 ;; Hardware stack levels used:    1
 20957 ;; Hardware stack levels required when called:   10
 20958 ;; This function calls:
 20959 ;;		Nothing
 20960 ;; This function is called by:
 20961 ;;		_sprintf
 20962 ;; This function uses a non-reentrant model
 20963 ;;
 20964                           
 20965                           	psect	text32
 20966  0198A0                     __ptext32:
 20967                           	opt stack 0
 20968  0198A0                     ___ftge:
 20969                           	opt stack 17
 20970                           
 20971                           ; BSR set to: 1
 20972                           ;incstack = 0
 20973  0198A0  0101               	movlb	1	; () banked
 20974  0198A2  AF02               	btfss	(___ftge@ff1+2)& (0+255),7,b
 20975  0198A4  D020               	goto	l11478
 20976                           
 20977                           ; BSR set to: 1
 20978  0198A6  0101               	movlb	1	; () banked
 20979  0198A8  C100  F106         	movff	___ftge@ff1,??___ftge
 20980  0198AC  0101               	movlb	1	; () banked
 20981  0198AE  C101  F107         	movff	___ftge@ff1+1,??___ftge+1
 20982  0198B2  0101               	movlb	1	; () banked
 20983  0198B4  C102  F108         	movff	___ftge@ff1+2,??___ftge+2
 20984  0198B8  0101               	movlb	1	; () banked
 20985  0198BA  1F06               	comf	??___ftge& (0+255),f,b
 20986  0198BC  1F07               	comf	(??___ftge+1)& (0+255),f,b
 20987  0198BE  1F08               	comf	(??___ftge+2)& (0+255),f,b
 20988  0198C0  2B06               	incf	??___ftge& (0+255),f,b
 20989  0198C2  0E00               	movlw	0
 20990  0198C4  2307               	addwfc	(??___ftge+1)& (0+255),f,b
 20991  0198C6  2308               	addwfc	(??___ftge+2)& (0+255),f,b
 20992  0198C8  0E00               	movlw	0
 20993  0198CA  0101               	movlb	1	; () banked
 20994  0198CC  2506               	addwf	??___ftge& (0+255),w,b
 20995  0198CE  0101               	movlb	1	; () banked
 20996  0198D0  6F00               	movwf	___ftge@ff1& (0+255),b
 20997  0198D2  0E00               	movlw	0
 20998  0198D4  0101               	movlb	1	; () banked
 20999  0198D6  2107               	addwfc	(??___ftge+1)& (0+255),w,b
 21000  0198D8  0101               	movlb	1	; () banked
 21001  0198DA  6F01               	movwf	(___ftge@ff1+1)& (0+255),b
 21002  0198DC  0E80               	movlw	128
 21003  0198DE  0101               	movlb	1	; () banked
 21004  0198E0  2108               	addwfc	(??___ftge+2)& (0+255),w,b
 21005  0198E2  0101               	movlb	1	; () banked
 21006  0198E4  6F02               	movwf	(___ftge@ff1+2)& (0+255),b
 21007  0198E6                     l11478:
 21008                           
 21009                           ; BSR set to: 1
 21010  0198E6  0101               	movlb	1	; () banked
 21011  0198E8  AF05               	btfss	(___ftge@ff2+2)& (0+255),7,b
 21012  0198EA  D020               	goto	l11482
 21013                           
 21014                           ; BSR set to: 1
 21015  0198EC  0101               	movlb	1	; () banked
 21016  0198EE  C103  F106         	movff	___ftge@ff2,??___ftge
 21017  0198F2  0101               	movlb	1	; () banked
 21018  0198F4  C104  F107         	movff	___ftge@ff2+1,??___ftge+1
 21019  0198F8  0101               	movlb	1	; () banked
 21020  0198FA  C105  F108         	movff	___ftge@ff2+2,??___ftge+2
 21021  0198FE  0101               	movlb	1	; () banked
 21022  019900  1F06               	comf	??___ftge& (0+255),f,b
 21023  019902  1F07               	comf	(??___ftge+1)& (0+255),f,b
 21024  019904  1F08               	comf	(??___ftge+2)& (0+255),f,b
 21025  019906  2B06               	incf	??___ftge& (0+255),f,b
 21026  019908  0E00               	movlw	0
 21027  01990A  2307               	addwfc	(??___ftge+1)& (0+255),f,b
 21028  01990C  2308               	addwfc	(??___ftge+2)& (0+255),f,b
 21029  01990E  0E00               	movlw	0
 21030  019910  0101               	movlb	1	; () banked
 21031  019912  2506               	addwf	??___ftge& (0+255),w,b
 21032  019914  0101               	movlb	1	; () banked
 21033  019916  6F03               	movwf	___ftge@ff2& (0+255),b
 21034  019918  0E00               	movlw	0
 21035  01991A  0101               	movlb	1	; () banked
 21036  01991C  2107               	addwfc	(??___ftge+1)& (0+255),w,b
 21037  01991E  0101               	movlb	1	; () banked
 21038  019920  6F04               	movwf	(___ftge@ff2+1)& (0+255),b
 21039  019922  0E80               	movlw	128
 21040  019924  0101               	movlb	1	; () banked
 21041  019926  2108               	addwfc	(??___ftge+2)& (0+255),w,b
 21042  019928  0101               	movlb	1	; () banked
 21043  01992A  6F05               	movwf	(___ftge@ff2+2)& (0+255),b
 21044  01992C                     l11482:
 21045                           
 21046                           ; BSR set to: 1
 21047  01992C  0E00               	movlw	0
 21048  01992E  0101               	movlb	1	; () banked
 21049  019930  1B00               	xorwf	___ftge@ff1& (0+255),f,b
 21050  019932  0E00               	movlw	0
 21051  019934  0101               	movlb	1	; () banked
 21052  019936  1B01               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 21053  019938  0E80               	movlw	128
 21054  01993A  0101               	movlb	1	; () banked
 21055  01993C  1B02               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 21056                           
 21057                           ; BSR set to: 1
 21058  01993E  0E00               	movlw	0
 21059  019940  0101               	movlb	1	; () banked
 21060  019942  1B03               	xorwf	___ftge@ff2& (0+255),f,b
 21061  019944  0E00               	movlw	0
 21062  019946  0101               	movlb	1	; () banked
 21063  019948  1B04               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 21064  01994A  0E80               	movlw	128
 21065  01994C  0101               	movlb	1	; () banked
 21066  01994E  1B05               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 21067  019950  0101               	movlb	1	; () banked
 21068  019952  5103               	movf	___ftge@ff2& (0+255),w,b
 21069  019954  0101               	movlb	1	; () banked
 21070  019956  5D00               	subwf	___ftge@ff1& (0+255),w,b
 21071  019958  0101               	movlb	1	; () banked
 21072  01995A  5104               	movf	(___ftge@ff2+1)& (0+255),w,b
 21073  01995C  0101               	movlb	1	; () banked
 21074  01995E  5901               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 21075  019960  0101               	movlb	1	; () banked
 21076  019962  5105               	movf	(___ftge@ff2+2)& (0+255),w,b
 21077  019964  0101               	movlb	1	; () banked
 21078  019966  5902               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 21079  019968  B0D8               	btfsc	status,0,c
 21080  01996A  D002               	goto	l11488
 21081                           
 21082                           ; BSR set to: 1
 21083  01996C  90D8               	bcf	status,0,c
 21084  01996E  0012               	return	
 21085  019970                     l11488:
 21086                           
 21087                           ; BSR set to: 1
 21088  019970  80D8               	bsf	status,0,c
 21089  019972  0012               	return	
 21090  019974                     __end_of___ftge:
 21091                           	opt stack 0
 21092                           tblptru	equ	0xFF8
 21093                           tblptrh	equ	0xFF7
 21094                           tblptrl	equ	0xFF6
 21095                           tablat	equ	0xFF5
 21096                           prodh	equ	0xFF4
 21097                           prodl	equ	0xFF3
 21098                           intcon	equ	0xFF2
 21099                           indf0	equ	0xFEF
 21100                           postinc0	equ	0xFEE
 21101                           fsr0h	equ	0xFEA
 21102                           fsr0l	equ	0xFE9
 21103                           wreg	equ	0xFE8
 21104                           indf1	equ	0xFE7
 21105                           postinc1	equ	0xFE6
 21106                           postdec1	equ	0xFE5
 21107                           fsr1h	equ	0xFE2
 21108                           fsr1l	equ	0xFE1
 21109                           indf2	equ	0xFDF
 21110                           postinc2	equ	0xFDE
 21111                           postdec2	equ	0xFDD
 21112                           fsr2h	equ	0xFDA
 21113                           fsr2l	equ	0xFD9
 21114                           status	equ	0xFD8
 21115                           
 21116 ;; *************** function ___ftdiv *****************
 21117 ;; Defined at:
 21118 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 21119 ;; Parameters:    Size  Location     Type
 21120 ;;  f1              3   12[BANK1 ] float 
 21121 ;;  f2              3   15[BANK1 ] float 
 21122 ;; Auto vars:     Size  Location     Type
 21123 ;;  f3              3   22[BANK1 ] float 
 21124 ;;  sign            1   26[BANK1 ] unsigned char 
 21125 ;;  exp             1   25[BANK1 ] unsigned char 
 21126 ;;  cntr            1   21[BANK1 ] unsigned char 
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  3   12[BANK1 ] float 
 21129 ;; Registers used:
 21130 ;;		wreg, status,2, status,0, cstack
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21136 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21137 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21138 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21139 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21140 ;;Total ram usage:       15 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; Hardware stack levels required when called:   11
 21143 ;; This function calls:
 21144 ;;		___ftpack
 21145 ;; This function is called by:
 21146 ;;		_UpdateMasterVolume
 21147 ;; This function uses a non-reentrant model
 21148 ;;
 21149                           
 21150                           	psect	text33
 21151  017B90                     __ptext33:
 21152                           	opt stack 0
 21153  017B90                     ___ftdiv:
 21154                           	opt stack 17
 21155                           
 21156                           ; BSR set to: 1
 21157                           ;incstack = 0
 21158  017B90  0101               	movlb	1	; () banked
 21159  017B92  C10E  F112         	movff	___ftdiv@f1+2,??___ftdiv
 21160  017B96  0101               	movlb	1	; () banked
 21161  017B98  6B13               	clrf	(??___ftdiv+1)& (0+255),b
 21162  017B9A  6B14               	clrf	(??___ftdiv+2)& (0+255),b
 21163  017B9C  0101               	movlb	1	; () banked
 21164  017B9E  350D               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 21165  017BA0  0101               	movlb	1	; () banked
 21166  017BA2  3712               	rlcf	??___ftdiv& (0+255),f,b
 21167  017BA4  E301               	bnc	u14041
 21168  017BA6  8113               	bsf	(??___ftdiv+1)& (0+255),0,b
 21169  017BA8                     u14041:
 21170  017BA8  0101               	movlb	1	; () banked
 21171  017BAA  5112               	movf	??___ftdiv& (0+255),w,b
 21172  017BAC  0101               	movlb	1	; () banked
 21173  017BAE  6F19               	movwf	___ftdiv@exp& (0+255),b
 21174  017BB0  0101               	movlb	1	; () banked
 21175  017BB2  6719               	tstfsz	___ftdiv@exp& (0+255),b
 21176  017BB4  D00A               	goto	l12686
 21177                           
 21178                           ; BSR set to: 1
 21179  017BB6  0E00               	movlw	0
 21180  017BB8  0101               	movlb	1	; () banked
 21181  017BBA  6F0C               	movwf	?___ftdiv& (0+255),b
 21182  017BBC  0E00               	movlw	0
 21183  017BBE  0101               	movlb	1	; () banked
 21184  017BC0  6F0D               	movwf	(?___ftdiv+1)& (0+255),b
 21185  017BC2  0E00               	movlw	0
 21186  017BC4  0101               	movlb	1	; () banked
 21187  017BC6  6F0E               	movwf	(?___ftdiv+2)& (0+255),b
 21188  017BC8  0012               	return	
 21189  017BCA                     l12686:
 21190                           
 21191                           ; BSR set to: 1
 21192  017BCA  0101               	movlb	1	; () banked
 21193  017BCC  C111  F112         	movff	___ftdiv@f2+2,??___ftdiv
 21194  017BD0  0101               	movlb	1	; () banked
 21195  017BD2  6B13               	clrf	(??___ftdiv+1)& (0+255),b
 21196  017BD4  6B14               	clrf	(??___ftdiv+2)& (0+255),b
 21197  017BD6  0101               	movlb	1	; () banked
 21198  017BD8  3510               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 21199  017BDA  0101               	movlb	1	; () banked
 21200  017BDC  3712               	rlcf	??___ftdiv& (0+255),f,b
 21201  017BDE  E301               	bnc	u14061
 21202  017BE0  8113               	bsf	(??___ftdiv+1)& (0+255),0,b
 21203  017BE2                     u14061:
 21204  017BE2  0101               	movlb	1	; () banked
 21205  017BE4  5112               	movf	??___ftdiv& (0+255),w,b
 21206  017BE6  0101               	movlb	1	; () banked
 21207  017BE8  6F1A               	movwf	___ftdiv@sign& (0+255),b
 21208  017BEA  0101               	movlb	1	; () banked
 21209  017BEC  671A               	tstfsz	___ftdiv@sign& (0+255),b
 21210  017BEE  D00A               	goto	l12692
 21211                           
 21212                           ; BSR set to: 1
 21213  017BF0  0E00               	movlw	0
 21214  017BF2  0101               	movlb	1	; () banked
 21215  017BF4  6F0C               	movwf	?___ftdiv& (0+255),b
 21216  017BF6  0E00               	movlw	0
 21217  017BF8  0101               	movlb	1	; () banked
 21218  017BFA  6F0D               	movwf	(?___ftdiv+1)& (0+255),b
 21219  017BFC  0E00               	movlw	0
 21220  017BFE  0101               	movlb	1	; () banked
 21221  017C00  6F0E               	movwf	(?___ftdiv+2)& (0+255),b
 21222  017C02  0012               	return	
 21223  017C04                     l12692:
 21224                           
 21225                           ; BSR set to: 1
 21226  017C04  0E00               	movlw	0
 21227  017C06  0101               	movlb	1	; () banked
 21228  017C08  6F16               	movwf	___ftdiv@f3& (0+255),b
 21229  017C0A  0E00               	movlw	0
 21230  017C0C  0101               	movlb	1	; () banked
 21231  017C0E  6F17               	movwf	(___ftdiv@f3+1)& (0+255),b
 21232  017C10  0E00               	movlw	0
 21233  017C12  0101               	movlb	1	; () banked
 21234  017C14  6F18               	movwf	(___ftdiv@f3+2)& (0+255),b
 21235                           
 21236                           ; BSR set to: 1
 21237  017C16  0101               	movlb	1	; () banked
 21238  017C18  511A               	movf	___ftdiv@sign& (0+255),w,b
 21239  017C1A  0F89               	addlw	137
 21240  017C1C  0101               	movlb	1	; () banked
 21241  017C1E  5F19               	subwf	___ftdiv@exp& (0+255),f,b
 21242                           
 21243                           ; BSR set to: 1
 21244  017C20  C10E  F11A         	movff	___ftdiv@f1+2,___ftdiv@sign
 21245                           
 21246                           ; BSR set to: 1
 21247  017C24  0101               	movlb	1	; () banked
 21248  017C26  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21249  017C28  0101               	movlb	1	; () banked
 21250  017C2A  1B1A               	xorwf	___ftdiv@sign& (0+255),f,b
 21251                           
 21252                           ; BSR set to: 1
 21253  017C2C  0E80               	movlw	128
 21254  017C2E  0101               	movlb	1	; () banked
 21255  017C30  171A               	andwf	___ftdiv@sign& (0+255),f,b
 21256                           
 21257                           ; BSR set to: 1
 21258  017C32  0101               	movlb	1	; () banked
 21259  017C34  8F0D               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 21260                           
 21261                           ; BSR set to: 1
 21262  017C36  0EFF               	movlw	255
 21263  017C38  0101               	movlb	1	; () banked
 21264  017C3A  170C               	andwf	___ftdiv@f1& (0+255),f,b
 21265  017C3C  0EFF               	movlw	255
 21266  017C3E  0101               	movlb	1	; () banked
 21267  017C40  170D               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 21268  017C42  0E00               	movlw	0
 21269  017C44  0101               	movlb	1	; () banked
 21270  017C46  170E               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 21271                           
 21272                           ; BSR set to: 1
 21273  017C48  0101               	movlb	1	; () banked
 21274  017C4A  8F10               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 21275                           
 21276                           ; BSR set to: 1
 21277  017C4C  0EFF               	movlw	255
 21278  017C4E  0101               	movlb	1	; () banked
 21279  017C50  170F               	andwf	___ftdiv@f2& (0+255),f,b
 21280  017C52  0EFF               	movlw	255
 21281  017C54  0101               	movlb	1	; () banked
 21282  017C56  1710               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 21283  017C58  0E00               	movlw	0
 21284  017C5A  0101               	movlb	1	; () banked
 21285  017C5C  1711               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 21286                           
 21287                           ; BSR set to: 1
 21288  017C5E  0E18               	movlw	24
 21289  017C60  0101               	movlb	1	; () banked
 21290  017C62  6F15               	movwf	___ftdiv@cntr& (0+255),b
 21291  017C64                     l12712:
 21292                           
 21293                           ; BSR set to: 1
 21294  017C64  0101               	movlb	1	; () banked
 21295  017C66  90D8               	bcf	status,0,c
 21296  017C68  0101               	movlb	1	; () banked
 21297  017C6A  3716               	rlcf	___ftdiv@f3& (0+255),f,b
 21298  017C6C  0101               	movlb	1	; () banked
 21299  017C6E  3717               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 21300  017C70  0101               	movlb	1	; () banked
 21301  017C72  3718               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 21302                           
 21303                           ; BSR set to: 1
 21304  017C74  0101               	movlb	1	; () banked
 21305  017C76  510F               	movf	___ftdiv@f2& (0+255),w,b
 21306  017C78  0101               	movlb	1	; () banked
 21307  017C7A  5D0C               	subwf	___ftdiv@f1& (0+255),w,b
 21308  017C7C  0101               	movlb	1	; () banked
 21309  017C7E  5110               	movf	(___ftdiv@f2+1)& (0+255),w,b
 21310  017C80  0101               	movlb	1	; () banked
 21311  017C82  590D               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 21312  017C84  0101               	movlb	1	; () banked
 21313  017C86  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21314  017C88  0101               	movlb	1	; () banked
 21315  017C8A  590E               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 21316  017C8C  A0D8               	btfss	status,0,c
 21317  017C8E  D00E               	goto	l2580
 21318                           
 21319                           ; BSR set to: 1
 21320  017C90  0101               	movlb	1	; () banked
 21321  017C92  510F               	movf	___ftdiv@f2& (0+255),w,b
 21322  017C94  0101               	movlb	1	; () banked
 21323  017C96  5F0C               	subwf	___ftdiv@f1& (0+255),f,b
 21324  017C98  0101               	movlb	1	; () banked
 21325  017C9A  5110               	movf	(___ftdiv@f2+1)& (0+255),w,b
 21326  017C9C  0101               	movlb	1	; () banked
 21327  017C9E  5B0D               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 21328  017CA0  0101               	movlb	1	; () banked
 21329  017CA2  5111               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21330  017CA4  0101               	movlb	1	; () banked
 21331  017CA6  5B0E               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 21332                           
 21333                           ; BSR set to: 1
 21334  017CA8  0101               	movlb	1	; () banked
 21335  017CAA  8116               	bsf	___ftdiv@f3& (0+255),0,b
 21336  017CAC                     l2580:
 21337                           
 21338                           ; BSR set to: 1
 21339  017CAC  0101               	movlb	1	; () banked
 21340  017CAE  90D8               	bcf	status,0,c
 21341  017CB0  0101               	movlb	1	; () banked
 21342  017CB2  370C               	rlcf	___ftdiv@f1& (0+255),f,b
 21343  017CB4  0101               	movlb	1	; () banked
 21344  017CB6  370D               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 21345  017CB8  0101               	movlb	1	; () banked
 21346  017CBA  370E               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 21347                           
 21348                           ; BSR set to: 1
 21349  017CBC  0101               	movlb	1	; () banked
 21350  017CBE  2F15               	decfsz	___ftdiv@cntr& (0+255),f,b
 21351  017CC0  D7D1               	goto	l12712
 21352                           
 21353                           ; BSR set to: 1
 21354                           
 21355                           ; BSR set to: 1
 21356  017CC2  C116  F100         	movff	___ftdiv@f3,___ftpack@arg
 21357  017CC6  C117  F101         	movff	___ftdiv@f3+1,___ftpack@arg+1
 21358  017CCA  C118  F102         	movff	___ftdiv@f3+2,___ftpack@arg+2
 21359  017CCE  C119  F103         	movff	___ftdiv@exp,___ftpack@exp
 21360  017CD2  C11A  F104         	movff	___ftdiv@sign,___ftpack@sign
 21361  017CD6  EC61  F0C5         	call	___ftpack	;wreg free
 21362  017CDA  C100  F10C         	movff	?___ftpack,?___ftdiv
 21363  017CDE  C101  F10D         	movff	?___ftpack+1,?___ftdiv+1
 21364  017CE2  C102  F10E         	movff	?___ftpack+2,?___ftdiv+2
 21365  017CE6  0012               	return	
 21366  017CE8                     __end_of___ftdiv:
 21367                           	opt stack 0
 21368                           tblptru	equ	0xFF8
 21369                           tblptrh	equ	0xFF7
 21370                           tblptrl	equ	0xFF6
 21371                           tablat	equ	0xFF5
 21372                           prodh	equ	0xFF4
 21373                           prodl	equ	0xFF3
 21374                           intcon	equ	0xFF2
 21375                           indf0	equ	0xFEF
 21376                           postinc0	equ	0xFEE
 21377                           fsr0h	equ	0xFEA
 21378                           fsr0l	equ	0xFE9
 21379                           wreg	equ	0xFE8
 21380                           indf1	equ	0xFE7
 21381                           postinc1	equ	0xFE6
 21382                           postdec1	equ	0xFE5
 21383                           fsr1h	equ	0xFE2
 21384                           fsr1l	equ	0xFE1
 21385                           indf2	equ	0xFDF
 21386                           postinc2	equ	0xFDE
 21387                           postdec2	equ	0xFDD
 21388                           fsr2h	equ	0xFDA
 21389                           fsr2l	equ	0xFD9
 21390                           status	equ	0xFD8
 21391                           
 21392 ;; *************** function ___awtoft *****************
 21393 ;; Defined at:
 21394 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
 21395 ;; Parameters:    Size  Location     Type
 21396 ;;  c               2    8[BANK1 ] int 
 21397 ;; Auto vars:     Size  Location     Type
 21398 ;;  sign            1   11[BANK1 ] unsigned char 
 21399 ;; Return value:  Size  Location     Type
 21400 ;;                  3    8[BANK1 ] float 
 21401 ;; Registers used:
 21402 ;;		wreg, status,2, status,0, prodl, cstack
 21403 ;; Tracked objects:
 21404 ;;		On entry : 0/0
 21405 ;;		On exit  : 0/0
 21406 ;;		Unchanged: 0/0
 21407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21408 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21409 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21411 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21412 ;;Total ram usage:        4 bytes
 21413 ;; Hardware stack levels used:    1
 21414 ;; Hardware stack levels required when called:   11
 21415 ;; This function calls:
 21416 ;;		___ftpack
 21417 ;; This function is called by:
 21418 ;;		_UpdateMasterVolume
 21419 ;; This function uses a non-reentrant model
 21420 ;;
 21421                           
 21422                           	psect	text34
 21423  01AF22                     __ptext34:
 21424                           	opt stack 0
 21425  01AF22                     ___awtoft:
 21426                           	opt stack 17
 21427                           
 21428                           ;incstack = 0
 21429  01AF22  0E00               	movlw	0
 21430  01AF24  0101               	movlb	1	; () banked
 21431  01AF26  6F0B               	movwf	___awtoft@sign& (0+255),b
 21432                           
 21433                           ; BSR set to: 1
 21434  01AF28  0101               	movlb	1	; () banked
 21435  01AF2A  5109               	movf	(___awtoft@c+1)& (0+255),w,b
 21436  01AF2C  0A80               	xorlw	128
 21437  01AF2E  6EF3               	movwf	prodl,c
 21438  01AF30  0E80               	movlw	128
 21439  01AF32  5CF3               	subwf	prodl,w,c
 21440  01AF34  0E00               	movlw	0
 21441  01AF36  B4D8               	btfsc	status,2,c
 21442  01AF38  5D08               	subwf	___awtoft@c& (0+255),w,b
 21443  01AF3A  B0D8               	btfsc	status,0,c
 21444  01AF3C  D009               	goto	l12734
 21445                           
 21446                           ; BSR set to: 1
 21447  01AF3E  0101               	movlb	1	; () banked
 21448  01AF40  6D08               	negf	___awtoft@c& (0+255),b
 21449  01AF42  0101               	movlb	1	; () banked
 21450  01AF44  1F09               	comf	(___awtoft@c+1)& (0+255),f,b
 21451  01AF46  B0D8               	btfsc	status,0,c
 21452  01AF48  2B09               	incf	(___awtoft@c+1)& (0+255),f,b
 21453                           
 21454                           ; BSR set to: 1
 21455  01AF4A  0E01               	movlw	1
 21456  01AF4C  0101               	movlb	1	; () banked
 21457  01AF4E  6F0B               	movwf	___awtoft@sign& (0+255),b
 21458  01AF50                     l12734:
 21459                           
 21460                           ; BSR set to: 1
 21461  01AF50  0101               	movlb	1	; () banked
 21462  01AF52  C108  F100         	movff	___awtoft@c,___ftpack@arg
 21463  01AF56  0101               	movlb	1	; () banked
 21464  01AF58  C109  F101         	movff	___awtoft@c+1,___ftpack@arg+1
 21465  01AF5C  0101               	movlb	1	; () banked
 21466  01AF5E  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
 21467  01AF60  0E8E               	movlw	142
 21468  01AF62  0101               	movlb	1	; () banked
 21469  01AF64  6F03               	movwf	___ftpack@exp& (0+255),b
 21470  01AF66  C10B  F104         	movff	___awtoft@sign,___ftpack@sign
 21471  01AF6A  EC61  F0C5         	call	___ftpack	;wreg free
 21472  01AF6E  C100  F108         	movff	?___ftpack,?___awtoft
 21473  01AF72  C101  F109         	movff	?___ftpack+1,?___awtoft+1
 21474  01AF76  C102  F10A         	movff	?___ftpack+2,?___awtoft+2
 21475  01AF7A  0012               	return	
 21476  01AF7C                     __end_of___awtoft:
 21477                           	opt stack 0
 21478                           tblptru	equ	0xFF8
 21479                           tblptrh	equ	0xFF7
 21480                           tblptrl	equ	0xFF6
 21481                           tablat	equ	0xFF5
 21482                           prodh	equ	0xFF4
 21483                           prodl	equ	0xFF3
 21484                           intcon	equ	0xFF2
 21485                           indf0	equ	0xFEF
 21486                           postinc0	equ	0xFEE
 21487                           fsr0h	equ	0xFEA
 21488                           fsr0l	equ	0xFE9
 21489                           wreg	equ	0xFE8
 21490                           indf1	equ	0xFE7
 21491                           postinc1	equ	0xFE6
 21492                           postdec1	equ	0xFE5
 21493                           fsr1h	equ	0xFE2
 21494                           fsr1l	equ	0xFE1
 21495                           indf2	equ	0xFDF
 21496                           postinc2	equ	0xFDE
 21497                           postdec2	equ	0xFDD
 21498                           fsr2h	equ	0xFDA
 21499                           fsr2l	equ	0xFD9
 21500                           status	equ	0xFD8
 21501                           
 21502 ;; *************** function _SendVolumeToDevice *****************
 21503 ;; Defined at:
 21504 ;;		line 224 in file "Device.c"
 21505 ;; Parameters:    Size  Location     Type
 21506 ;;		None
 21507 ;; Auto vars:     Size  Location     Type
 21508 ;;		None
 21509 ;; Return value:  Size  Location     Type
 21510 ;;		None               void
 21511 ;; Registers used:
 21512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21513 ;; Tracked objects:
 21514 ;;		On entry : 0/0
 21515 ;;		On exit  : 0/0
 21516 ;;		Unchanged: 0/0
 21517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21522 ;;Total ram usage:        0 bytes
 21523 ;; Hardware stack levels used:    1
 21524 ;; Hardware stack levels required when called:   14
 21525 ;; This function calls:
 21526 ;;		_SendDataToDeviceCh
 21527 ;; This function is called by:
 21528 ;;		_TCPServer
 21529 ;;		_UpdateMasterVolume
 21530 ;; This function uses a non-reentrant model
 21531 ;;
 21532                           
 21533                           	psect	text35
 21534  01B9AE                     __ptext35:
 21535                           	opt stack 0
 21536  01B9AE                     _SendVolumeToDevice:
 21537                           	opt stack 14
 21538                           
 21539                           ;Device.c: 226: LATEbits.LE4 = 1;
 21540                           
 21541                           ;incstack = 0
 21542  01B9AE  888D               	bsf	3981,4,c	;volatile
 21543                           
 21544                           ;Device.c: 227: SendDataToDeviceCh(0);
 21545  01B9B0  0E00               	movlw	0
 21546  01B9B2  EC7A  F0AE         	call	_SendDataToDeviceCh
 21547                           
 21548                           ;Device.c: 228: LATEbits.LE4 = 0;
 21549  01B9B6  988D               	bcf	3981,4,c	;volatile
 21550                           
 21551                           ;Device.c: 229: LATEbits.LE5 = 1;
 21552  01B9B8  8A8D               	bsf	3981,5,c	;volatile
 21553                           
 21554                           ;Device.c: 230: SendDataToDeviceCh(8);
 21555  01B9BA  0E08               	movlw	8
 21556  01B9BC  EC7A  F0AE         	call	_SendDataToDeviceCh
 21557                           
 21558                           ;Device.c: 231: LATEbits.LE5 = 0;
 21559  01B9C0  9A8D               	bcf	3981,5,c	;volatile
 21560  01B9C2  0012               	return	
 21561  01B9C4                     __end_of_SendVolumeToDevice:
 21562                           	opt stack 0
 21563                           tblptru	equ	0xFF8
 21564                           tblptrh	equ	0xFF7
 21565                           tblptrl	equ	0xFF6
 21566                           tablat	equ	0xFF5
 21567                           prodh	equ	0xFF4
 21568                           prodl	equ	0xFF3
 21569                           intcon	equ	0xFF2
 21570                           indf0	equ	0xFEF
 21571                           postinc0	equ	0xFEE
 21572                           fsr0h	equ	0xFEA
 21573                           fsr0l	equ	0xFE9
 21574                           wreg	equ	0xFE8
 21575                           indf1	equ	0xFE7
 21576                           postinc1	equ	0xFE6
 21577                           postdec1	equ	0xFE5
 21578                           fsr1h	equ	0xFE2
 21579                           fsr1l	equ	0xFE1
 21580                           indf2	equ	0xFDF
 21581                           postinc2	equ	0xFDE
 21582                           postdec2	equ	0xFDD
 21583                           fsr2h	equ	0xFDA
 21584                           fsr2l	equ	0xFD9
 21585                           status	equ	0xFD8
 21586                           
 21587 ;; *************** function _SendDataToDeviceCh *****************
 21588 ;; Defined at:
 21589 ;;		line 192 in file "Device.c"
 21590 ;; Parameters:    Size  Location     Type
 21591 ;;  offset          1    wreg     unsigned char 
 21592 ;; Auto vars:     Size  Location     Type
 21593 ;;  offset          1   88[BANK1 ] unsigned char 
 21594 ;;  v               2   86[BANK1 ] unsigned int 
 21595 ;;  i               1  105[BANK1 ] unsigned char 
 21596 ;;  values         16   89[BANK1 ] unsigned int [8]
 21597 ;;  mask            2  106[BANK1 ] unsigned int 
 21598 ;; Return value:  Size  Location     Type
 21599 ;;		None               void
 21600 ;; Registers used:
 21601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21602 ;; Tracked objects:
 21603 ;;		On entry : 0/0
 21604 ;;		On exit  : 0/0
 21605 ;;		Unchanged: 0/0
 21606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 21607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21608 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21609 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21610 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21611 ;;Total ram usage:       25 bytes
 21612 ;; Hardware stack levels used:    1
 21613 ;; Hardware stack levels required when called:   13
 21614 ;; This function calls:
 21615 ;;		_DbToCode
 21616 ;; This function is called by:
 21617 ;;		_SendVolumeToDevice
 21618 ;; This function uses a non-reentrant model
 21619 ;;
 21620                           
 21621                           	psect	text36
 21622  015CF4                     __ptext36:
 21623                           	opt stack 0
 21624  015CF4                     _SendDataToDeviceCh:
 21625                           	opt stack 14
 21626                           
 21627                           ;incstack = 0
 21628                           ;SendDataToDeviceCh@offset stored from wreg
 21629  015CF4  0101               	movlb	1	; () banked
 21630  015CF6  6F58               	movwf	SendDataToDeviceCh@offset& (0+255),b
 21631                           
 21632                           ; BSR set to: 1
 21633                           ;Device.c: 194: uint16_t values[8];
 21634                           ;Device.c: 196: for(uint8_t i = 0; i < 8; i++)
 21635  015CF8  0E00               	movlw	0
 21636  015CFA  0101               	movlb	1	; () banked
 21637  015CFC  6F69               	movwf	SendDataToDeviceCh@i& (0+255),b
 21638  015CFE  D03B               	goto	L13
 21639  015D00                     l11238:
 21640                           
 21641                           ; BSR set to: 1
 21642                           ;Device.c: 197: {
 21643                           ;Device.c: 198: uint16_t v = ((uint16_t)s_dacSettings.ChannelScaling[i + offset]) + s_da
      +                          cSettings.Volume;
 21644  015D00  0101               	movlb	1	; () banked
 21645  015D02  5158               	movf	SendDataToDeviceCh@offset& (0+255),w,b
 21646  015D04  0101               	movlb	1	; () banked
 21647  015D06  C169  F153         	movff	SendDataToDeviceCh@i,??_SendDataToDeviceCh
 21648  015D0A  0101               	movlb	1	; () banked
 21649  015D0C  6B54               	clrf	(??_SendDataToDeviceCh+1)& (0+255),b
 21650  015D0E  0101               	movlb	1	; () banked
 21651  015D10  2753               	addwf	??_SendDataToDeviceCh& (0+255),f,b
 21652  015D12  0E00               	movlw	0
 21653  015D14  2354               	addwfc	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21654  015D16  0102               	movlb	2	; () banked
 21655  015D18  0ED6               	movlw	low (_s_dacSettings+3)
 21656  015D1A  0101               	movlb	1	; () banked
 21657  015D1C  2553               	addwf	??_SendDataToDeviceCh& (0+255),w,b
 21658  015D1E  6ED9               	movwf	fsr2l,c
 21659  015D20  0102               	movlb	2	; () banked
 21660  015D22  0E02               	movlw	high (_s_dacSettings+3)
 21661  015D24  0101               	movlb	1	; () banked
 21662  015D26  2154               	addwfc	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21663  015D28  6EDA               	movwf	fsr2h,c
 21664  015D2A  50DF               	movf	indf2,w,c
 21665  015D2C  0101               	movlb	1	; () banked
 21666  015D2E  6F55               	movwf	(??_SendDataToDeviceCh+2)& (0+255),b
 21667  015D30  0101               	movlb	1	; () banked
 21668  015D32  5155               	movf	(??_SendDataToDeviceCh+2)& (0+255),w,b
 21669  015D34  0102               	movlb	2	; () banked
 21670  015D36  25D5               	addwf	(_s_dacSettings+2)& (0+255),w,b
 21671  015D38  0101               	movlb	1	; () banked
 21672  015D3A  6F56               	movwf	SendDataToDeviceCh@v& (0+255),b
 21673  015D3C  0101               	movlb	1	; () banked
 21674  015D3E  6B57               	clrf	(SendDataToDeviceCh@v+1)& (0+255),b
 21675  015D40  0101               	movlb	1	; () banked
 21676  015D42  3757               	rlcf	(SendDataToDeviceCh@v+1)& (0+255),f,b
 21677                           
 21678                           ; BSR set to: 1
 21679                           ;Device.c: 199: values[i] = DbToCode(v);
 21680  015D44  C156  F148         	movff	SendDataToDeviceCh@v,DbToCode@volume
 21681  015D48  C157  F149         	movff	SendDataToDeviceCh@v+1,DbToCode@volume+1
 21682  015D4C  ECF0  F0A8         	call	_DbToCode	;wreg free
 21683  015D50  0101               	movlb	1	; () banked
 21684  015D52  5169               	movf	SendDataToDeviceCh@i& (0+255),w,b
 21685  015D54  0D02               	mullw	2
 21686  015D56  0101               	movlb	1	; () banked
 21687  015D58  0E59               	movlw	low SendDataToDeviceCh@values
 21688  015D5A  24F3               	addwf	prodl,w,c
 21689  015D5C  6ED9               	movwf	fsr2l,c
 21690  015D5E  0101               	movlb	1	; () banked
 21691  015D60  0E01               	movlw	high SendDataToDeviceCh@values
 21692  015D62  20F4               	addwfc	prodh,w,c
 21693  015D64  6EDA               	movwf	fsr2h,c
 21694  015D66  0101               	movlb	1	; () banked
 21695  015D68  C148  FFDE         	movff	?_DbToCode,postinc2
 21696  015D6C  0101               	movlb	1	; () banked
 21697  015D6E  C149  FFDD         	movff	?_DbToCode+1,postdec2
 21698                           
 21699                           ; BSR set to: 1
 21700  015D72  0101               	movlb	1	; () banked
 21701  015D74  2B69               	incf	SendDataToDeviceCh@i& (0+255),f,b
 21702  015D76                     L13:
 21703                           
 21704                           ; BSR set to: 1
 21705  015D76  0E07               	movlw	7
 21706  015D78  0101               	movlb	1	; () banked
 21707  015D7A  6569               	cpfsgt	SendDataToDeviceCh@i& (0+255),b
 21708  015D7C  D7C1               	goto	l11238
 21709                           
 21710                           ; BSR set to: 1
 21711                           ;Device.c: 200: }
 21712                           ;Device.c: 202: uint16_t mask = 0x0800;
 21713                           
 21714                           ; BSR set to: 1
 21715  015D7E  0E08               	movlw	8
 21716  015D80  0101               	movlb	1	; () banked
 21717  015D82  6F6B               	movwf	(SendDataToDeviceCh@mask+1)& (0+255),b
 21718  015D84  0E00               	movlw	0
 21719  015D86  0101               	movlb	1	; () banked
 21720  015D88  6F6A               	movwf	SendDataToDeviceCh@mask& (0+255),b
 21721                           
 21722                           ;Device.c: 204: while(mask > 0)
 21723  015D8A  D0BD               	goto	l11282
 21724  015D8C                     l1891:
 21725                           
 21726                           ; BSR set to: 1
 21727                           ;Device.c: 205: {
 21728                           ;Device.c: 206: LATEbits.LE3 = 0;
 21729  015D8C  968D               	bcf	3981,3,c	;volatile
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;Device.c: 207: if (values[0] & mask) LATFbits.LF1 = 1; else LATFbits.LF1 = 0;
 21733  015D8E  0101               	movlb	1	; () banked
 21734  015D90  C159  F153         	movff	SendDataToDeviceCh@values,??_SendDataToDeviceCh
 21735  015D94  0101               	movlb	1	; () banked
 21736  015D96  C15A  F154         	movff	SendDataToDeviceCh@values+1,??_SendDataToDeviceCh+1
 21737  015D9A  0101               	movlb	1	; () banked
 21738  015D9C  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21739  015D9E  0101               	movlb	1	; () banked
 21740  015DA0  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21741  015DA2  0101               	movlb	1	; () banked
 21742  015DA4  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21743  015DA6  0101               	movlb	1	; () banked
 21744  015DA8  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21745  015DAA  0101               	movlb	1	; () banked
 21746  015DAC  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21747  015DAE  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21748  015DB0  B4D8               	btfsc	status,2,c
 21749  015DB2  D002               	goto	l1892
 21750                           
 21751                           ; BSR set to: 1
 21752  015DB4  828E               	bsf	3982,1,c	;volatile
 21753  015DB6  D001               	goto	l11252
 21754  015DB8                     l1892:
 21755                           
 21756                           ; BSR set to: 1
 21757  015DB8  928E               	bcf	3982,1,c	;volatile
 21758  015DBA                     l11252:
 21759                           
 21760                           ; BSR set to: 1
 21761                           ;Device.c: 208: if (values[1] & mask) LATFbits.LF2 = 1; else LATFbits.LF2 = 0;
 21762  015DBA  0101               	movlb	1	; () banked
 21763  015DBC  EE21  F05B         	lfsr	2,SendDataToDeviceCh@values+2
 21764  015DC0  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21765  015DC4  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21766  015DC8  0101               	movlb	1	; () banked
 21767  015DCA  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21768  015DCC  0101               	movlb	1	; () banked
 21769  015DCE  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21770  015DD0  0101               	movlb	1	; () banked
 21771  015DD2  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21772  015DD4  0101               	movlb	1	; () banked
 21773  015DD6  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21774  015DD8  0101               	movlb	1	; () banked
 21775  015DDA  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21776  015DDC  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21777  015DDE  B4D8               	btfsc	status,2,c
 21778  015DE0  D002               	goto	l1894
 21779                           
 21780                           ; BSR set to: 1
 21781  015DE2  848E               	bsf	3982,2,c	;volatile
 21782  015DE4  D001               	goto	l11256
 21783  015DE6                     l1894:
 21784                           
 21785                           ; BSR set to: 1
 21786  015DE6  948E               	bcf	3982,2,c	;volatile
 21787  015DE8                     l11256:
 21788                           
 21789                           ; BSR set to: 1
 21790                           ;Device.c: 209: if (values[2] & mask) LATFbits.LF3 = 1; else LATFbits.LF3 = 0;
 21791  015DE8  0101               	movlb	1	; () banked
 21792  015DEA  EE21  F05D         	lfsr	2,SendDataToDeviceCh@values+4
 21793  015DEE  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21794  015DF2  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21795  015DF6  0101               	movlb	1	; () banked
 21796  015DF8  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21797  015DFA  0101               	movlb	1	; () banked
 21798  015DFC  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21799  015DFE  0101               	movlb	1	; () banked
 21800  015E00  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21801  015E02  0101               	movlb	1	; () banked
 21802  015E04  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21803  015E06  0101               	movlb	1	; () banked
 21804  015E08  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21805  015E0A  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21806  015E0C  B4D8               	btfsc	status,2,c
 21807  015E0E  D002               	goto	l1896
 21808                           
 21809                           ; BSR set to: 1
 21810  015E10  868E               	bsf	3982,3,c	;volatile
 21811  015E12  D001               	goto	l11260
 21812  015E14                     l1896:
 21813                           
 21814                           ; BSR set to: 1
 21815  015E14  968E               	bcf	3982,3,c	;volatile
 21816  015E16                     l11260:
 21817                           
 21818                           ; BSR set to: 1
 21819                           ;Device.c: 210: if (values[3] & mask) LATFbits.LF4 = 1; else LATFbits.LF4 = 0;
 21820  015E16  0101               	movlb	1	; () banked
 21821  015E18  EE21  F05F         	lfsr	2,SendDataToDeviceCh@values+6
 21822  015E1C  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21823  015E20  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21824  015E24  0101               	movlb	1	; () banked
 21825  015E26  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21826  015E28  0101               	movlb	1	; () banked
 21827  015E2A  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21828  015E2C  0101               	movlb	1	; () banked
 21829  015E2E  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21830  015E30  0101               	movlb	1	; () banked
 21831  015E32  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21832  015E34  0101               	movlb	1	; () banked
 21833  015E36  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21834  015E38  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21835  015E3A  B4D8               	btfsc	status,2,c
 21836  015E3C  D002               	goto	l1898
 21837                           
 21838                           ; BSR set to: 1
 21839  015E3E  888E               	bsf	3982,4,c	;volatile
 21840  015E40  D001               	goto	l11264
 21841  015E42                     l1898:
 21842                           
 21843                           ; BSR set to: 1
 21844  015E42  988E               	bcf	3982,4,c	;volatile
 21845  015E44                     l11264:
 21846                           
 21847                           ; BSR set to: 1
 21848                           ;Device.c: 211: if (values[4] & mask) LATFbits.LF5 = 1; else LATFbits.LF5 = 0;
 21849  015E44  0101               	movlb	1	; () banked
 21850  015E46  EE21  F061         	lfsr	2,SendDataToDeviceCh@values+8
 21851  015E4A  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21852  015E4E  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21853  015E52  0101               	movlb	1	; () banked
 21854  015E54  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21855  015E56  0101               	movlb	1	; () banked
 21856  015E58  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21857  015E5A  0101               	movlb	1	; () banked
 21858  015E5C  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21859  015E5E  0101               	movlb	1	; () banked
 21860  015E60  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21861  015E62  0101               	movlb	1	; () banked
 21862  015E64  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21863  015E66  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21864  015E68  B4D8               	btfsc	status,2,c
 21865  015E6A  D002               	goto	l1900
 21866                           
 21867                           ; BSR set to: 1
 21868  015E6C  8A8E               	bsf	3982,5,c	;volatile
 21869  015E6E  D001               	goto	l11268
 21870  015E70                     l1900:
 21871                           
 21872                           ; BSR set to: 1
 21873  015E70  9A8E               	bcf	3982,5,c	;volatile
 21874  015E72                     l11268:
 21875                           
 21876                           ; BSR set to: 1
 21877                           ;Device.c: 212: if (values[5] & mask) LATFbits.LF6 = 1; else LATFbits.LF6 = 0;
 21878  015E72  0101               	movlb	1	; () banked
 21879  015E74  EE21  F063         	lfsr	2,SendDataToDeviceCh@values+10
 21880  015E78  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21881  015E7C  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21882  015E80  0101               	movlb	1	; () banked
 21883  015E82  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21884  015E84  0101               	movlb	1	; () banked
 21885  015E86  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21886  015E88  0101               	movlb	1	; () banked
 21887  015E8A  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21888  015E8C  0101               	movlb	1	; () banked
 21889  015E8E  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21890  015E90  0101               	movlb	1	; () banked
 21891  015E92  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21892  015E94  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21893  015E96  B4D8               	btfsc	status,2,c
 21894  015E98  D002               	goto	l1902
 21895                           
 21896                           ; BSR set to: 1
 21897  015E9A  8C8E               	bsf	3982,6,c	;volatile
 21898  015E9C  D001               	goto	l11272
 21899  015E9E                     l1902:
 21900                           
 21901                           ; BSR set to: 1
 21902  015E9E  9C8E               	bcf	3982,6,c	;volatile
 21903  015EA0                     l11272:
 21904                           
 21905                           ; BSR set to: 1
 21906                           ;Device.c: 213: if (values[6] & mask) LATFbits.LF7 = 1; else LATFbits.LF7 = 0;
 21907  015EA0  0101               	movlb	1	; () banked
 21908  015EA2  EE21  F065         	lfsr	2,SendDataToDeviceCh@values+12
 21909  015EA6  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21910  015EAA  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21911  015EAE  0101               	movlb	1	; () banked
 21912  015EB0  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21913  015EB2  0101               	movlb	1	; () banked
 21914  015EB4  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21915  015EB6  0101               	movlb	1	; () banked
 21916  015EB8  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21917  015EBA  0101               	movlb	1	; () banked
 21918  015EBC  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21919  015EBE  0101               	movlb	1	; () banked
 21920  015EC0  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21921  015EC2  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21922  015EC4  B4D8               	btfsc	status,2,c
 21923  015EC6  D002               	goto	l1904
 21924                           
 21925                           ; BSR set to: 1
 21926  015EC8  8E8E               	bsf	3982,7,c	;volatile
 21927  015ECA  D001               	goto	l11276
 21928  015ECC                     l1904:
 21929                           
 21930                           ; BSR set to: 1
 21931  015ECC  9E8E               	bcf	3982,7,c	;volatile
 21932  015ECE                     l11276:
 21933                           
 21934                           ; BSR set to: 1
 21935                           ;Device.c: 214: if (values[7] & mask) LATGbits.LG4 = 1; else LATGbits.LG4 = 0;
 21936  015ECE  0101               	movlb	1	; () banked
 21937  015ED0  EE21  F067         	lfsr	2,SendDataToDeviceCh@values+14
 21938  015ED4  CFDE F153          	movff	postinc2,??_SendDataToDeviceCh
 21939  015ED8  CFDD F154          	movff	postdec2,??_SendDataToDeviceCh+1
 21940  015EDC  0101               	movlb	1	; () banked
 21941  015EDE  516A               	movf	SendDataToDeviceCh@mask& (0+255),w,b
 21942  015EE0  0101               	movlb	1	; () banked
 21943  015EE2  1753               	andwf	??_SendDataToDeviceCh& (0+255),f,b
 21944  015EE4  0101               	movlb	1	; () banked
 21945  015EE6  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21946  015EE8  0101               	movlb	1	; () banked
 21947  015EEA  1754               	andwf	(??_SendDataToDeviceCh+1)& (0+255),f,b
 21948  015EEC  0101               	movlb	1	; () banked
 21949  015EEE  5154               	movf	(??_SendDataToDeviceCh+1)& (0+255),w,b
 21950  015EF0  1153               	iorwf	??_SendDataToDeviceCh& (0+255),w,b
 21951  015EF2  B4D8               	btfsc	status,2,c
 21952  015EF4  D002               	goto	l1906
 21953                           
 21954                           ; BSR set to: 1
 21955  015EF6  888F               	bsf	3983,4,c	;volatile
 21956  015EF8  D001               	goto	l1907
 21957  015EFA                     l1906:
 21958                           
 21959                           ; BSR set to: 1
 21960  015EFA  988F               	bcf	3983,4,c	;volatile
 21961  015EFC                     l1907:
 21962                           
 21963                           ; BSR set to: 1
 21964                           ;Device.c: 215: LATEbits.LE3 = 1;
 21965  015EFC  868D               	bsf	3981,3,c	;volatile
 21966                           
 21967                           ; BSR set to: 1
 21968                           ;Device.c: 218: mask >>=1;
 21969  015EFE  0101               	movlb	1	; () banked
 21970  015F00  90D8               	bcf	status,0,c
 21971  015F02  336B               	rrcf	(SendDataToDeviceCh@mask+1)& (0+255),f,b
 21972  015F04  336A               	rrcf	SendDataToDeviceCh@mask& (0+255),f,b
 21973  015F06                     l11282:
 21974                           
 21975                           ; BSR set to: 1
 21976  015F06  0101               	movlb	1	; () banked
 21977  015F08  516B               	movf	(SendDataToDeviceCh@mask+1)& (0+255),w,b
 21978  015F0A  116A               	iorwf	SendDataToDeviceCh@mask& (0+255),w,b
 21979  015F0C  B4D8               	btfsc	status,2,c
 21980                           
 21981                           ; BSR set to: 1
 21982                           
 21983                           ; BSR set to: 1
 21984  015F0E  0012               	return	
 21985  015F10  D73D               	goto	l1891
 21986  015F12                     __end_of_SendDataToDeviceCh:
 21987                           	opt stack 0
 21988                           tblptru	equ	0xFF8
 21989                           tblptrh	equ	0xFF7
 21990                           tblptrl	equ	0xFF6
 21991                           tablat	equ	0xFF5
 21992                           prodh	equ	0xFF4
 21993                           prodl	equ	0xFF3
 21994                           intcon	equ	0xFF2
 21995                           indf0	equ	0xFEF
 21996                           postinc0	equ	0xFEE
 21997                           fsr0h	equ	0xFEA
 21998                           fsr0l	equ	0xFE9
 21999                           wreg	equ	0xFE8
 22000                           indf1	equ	0xFE7
 22001                           postinc1	equ	0xFE6
 22002                           postdec1	equ	0xFE5
 22003                           fsr1h	equ	0xFE2
 22004                           fsr1l	equ	0xFE1
 22005                           indf2	equ	0xFDF
 22006                           postinc2	equ	0xFDE
 22007                           postdec2	equ	0xFDD
 22008                           fsr2h	equ	0xFDA
 22009                           fsr2l	equ	0xFD9
 22010                           status	equ	0xFD8
 22011                           
 22012 ;; *************** function _DbToCode *****************
 22013 ;; Defined at:
 22014 ;;		line 64 in file "Device.c"
 22015 ;; Parameters:    Size  Location     Type
 22016 ;;  volume          2   72[BANK1 ] unsigned int 
 22017 ;; Auto vars:     Size  Location     Type
 22018 ;;  k               3   80[BANK1 ] unsigned int 
 22019 ;; Return value:  Size  Location     Type
 22020 ;;                  2   72[BANK1 ] unsigned int 
 22021 ;; Registers used:
 22022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22023 ;; Tracked objects:
 22024 ;;		On entry : 0/0
 22025 ;;		On exit  : 0/0
 22026 ;;		Unchanged: 0/0
 22027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22028 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22029 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22030 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22031 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22032 ;;Total ram usage:       11 bytes
 22033 ;; Hardware stack levels used:    1
 22034 ;; Hardware stack levels required when called:   12
 22035 ;; This function calls:
 22036 ;;		___ftadd
 22037 ;;		___ftmul
 22038 ;;		___fttol
 22039 ;;		___lwtoft
 22040 ;; This function is called by:
 22041 ;;		_SendDataToDeviceCh
 22042 ;; This function uses a non-reentrant model
 22043 ;;
 22044                           
 22045                           	psect	text37
 22046  0151E0                     __ptext37:
 22047                           	opt stack 0
 22048  0151E0                     _DbToCode:
 22049                           	opt stack 14
 22050                           
 22051                           ;Device.c: 66: double k = 1;
 22052                           
 22053                           ; BSR set to: 1
 22054                           ;incstack = 0
 22055  0151E0  0E00               	movlw	0
 22056  0151E2  0101               	movlb	1	; () banked
 22057  0151E4  6F50               	movwf	DbToCode@k& (0+255),b
 22058  0151E6  0E80               	movlw	128
 22059  0151E8  0101               	movlb	1	; () banked
 22060  0151EA  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22061  0151EC  0E3F               	movlw	63
 22062  0151EE  0101               	movlb	1	; () banked
 22063  0151F0  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22064                           
 22065                           ; BSR set to: 1
 22066                           ;Device.c: 67: if (volume < 192)
 22067  0151F2  0EC0               	movlw	192
 22068  0151F4  0101               	movlb	1	; () banked
 22069  0151F6  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22070  0151F8  0E00               	movlw	0
 22071  0151FA  0101               	movlb	1	; () banked
 22072  0151FC  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22073  0151FE  B0D8               	btfsc	status,0,c
 22074  015200  D039               	goto	l10620
 22075                           
 22076                           ; BSR set to: 1
 22077                           ;Device.c: 68: {
 22078                           ;Device.c: 69: if (volume < 96)
 22079  015202  0E60               	movlw	96
 22080  015204  0101               	movlb	1	; () banked
 22081  015206  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22082  015208  0E00               	movlw	0
 22083  01520A  0101               	movlb	1	; () banked
 22084  01520C  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22085  01520E  B0D8               	btfsc	status,0,c
 22086  015210  D013               	goto	l10610
 22087                           
 22088                           ; BSR set to: 1
 22089                           ;Device.c: 70: {
 22090                           ;Device.c: 71: if (volume >= 48)
 22091  015212  0E30               	movlw	48
 22092  015214  0101               	movlb	1	; () banked
 22093  015216  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22094  015218  0E00               	movlw	0
 22095  01521A  0101               	movlb	1	; () banked
 22096  01521C  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22097  01521E  A0D8               	btfss	status,0,c
 22098  015220  D0B2               	goto	l10660
 22099                           
 22100                           ; BSR set to: 1
 22101                           ;Device.c: 72: {
 22102                           ;Device.c: 73: k = 0.501187233627272;
 22103  015222  0E4E               	movlw	78
 22104  015224  0101               	movlb	1	; () banked
 22105  015226  6F50               	movwf	DbToCode@k& (0+255),b
 22106  015228  0E00               	movlw	0
 22107  01522A  0101               	movlb	1	; () banked
 22108  01522C  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22109  01522E  0E3F               	movlw	63
 22110  015230  0101               	movlb	1	; () banked
 22111  015232  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22112                           
 22113                           ; BSR set to: 1
 22114                           ;Device.c: 74: volume -= 48;
 22115  015234  0E30               	movlw	48
 22116  015236  D04B               	goto	L17
 22117  015238                     l10610:
 22118                           
 22119                           ; BSR set to: 1
 22120                           ;Device.c: 77: else
 22121                           ;Device.c: 78: {
 22122                           ;Device.c: 79: if (volume < 144)
 22123  015238  0E90               	movlw	144
 22124  01523A  0101               	movlb	1	; () banked
 22125  01523C  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22126  01523E  0E00               	movlw	0
 22127  015240  0101               	movlb	1	; () banked
 22128  015242  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22129  015244  B0D8               	btfsc	status,0,c
 22130  015246  D00B               	goto	l10616
 22131                           
 22132                           ; BSR set to: 1
 22133                           ;Device.c: 80: {
 22134                           ;Device.c: 81: k = 0.251188643150958;
 22135  015248  0E9C               	movlw	156
 22136  01524A  0101               	movlb	1	; () banked
 22137  01524C  6F50               	movwf	DbToCode@k& (0+255),b
 22138  01524E  0E80               	movlw	128
 22139  015250  0101               	movlb	1	; () banked
 22140  015252  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22141  015254  0E3E               	movlw	62
 22142  015256  0101               	movlb	1	; () banked
 22143  015258  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22144                           
 22145                           ; BSR set to: 1
 22146                           ;Device.c: 82: volume -= 96;
 22147  01525A  0E60               	movlw	96
 22148  01525C  D038               	goto	L17
 22149  01525E                     l10616:
 22150                           
 22151                           ; BSR set to: 1
 22152                           ;Device.c: 84: else
 22153                           ;Device.c: 85: {
 22154                           ;Device.c: 86: k = 0.125892541179417;
 22155  01525E  0EEA               	movlw	234
 22156  015260  0101               	movlb	1	; () banked
 22157  015262  6F50               	movwf	DbToCode@k& (0+255),b
 22158  015264  0E00               	movlw	0
 22159  015266  0101               	movlb	1	; () banked
 22160  015268  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22161  01526A  0E3E               	movlw	62
 22162  01526C  0101               	movlb	1	; () banked
 22163  01526E  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22164                           
 22165                           ; BSR set to: 1
 22166                           ;Device.c: 87: volume -= 144;
 22167  015270  0E90               	movlw	144
 22168  015272  D02D               	goto	L17
 22169  015274                     l10620:
 22170                           
 22171                           ; BSR set to: 1
 22172                           ;Device.c: 91: else
 22173                           ;Device.c: 92: {
 22174                           ;Device.c: 93: if (volume < 384)
 22175  015274  0E80               	movlw	128
 22176  015276  0101               	movlb	1	; () banked
 22177  015278  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22178  01527A  0E01               	movlw	1
 22179  01527C  0101               	movlb	1	; () banked
 22180  01527E  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22181  015280  B0D8               	btfsc	status,0,c
 22182  015282  D049               	goto	l10644
 22183                           
 22184                           ; BSR set to: 1
 22185                           ;Device.c: 94: {
 22186                           ;Device.c: 95: if (volume < 288)
 22187  015284  0E20               	movlw	32
 22188  015286  0101               	movlb	1	; () banked
 22189  015288  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22190  01528A  0E01               	movlw	1
 22191  01528C  0101               	movlb	1	; () banked
 22192  01528E  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22193  015290  B0D8               	btfsc	status,0,c
 22194  015292  D021               	goto	l10634
 22195                           
 22196                           ; BSR set to: 1
 22197                           ;Device.c: 96: {
 22198                           ;Device.c: 97: if (volume < 240)
 22199  015294  0EF0               	movlw	240
 22200  015296  0101               	movlb	1	; () banked
 22201  015298  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22202  01529A  0E00               	movlw	0
 22203  01529C  0101               	movlb	1	; () banked
 22204  01529E  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22205  0152A0  B0D8               	btfsc	status,0,c
 22206  0152A2  D00B               	goto	l10630
 22207                           
 22208                           ; BSR set to: 1
 22209                           ;Device.c: 98: {
 22210                           ;Device.c: 99: k = 0.0630957344480193;
 22211  0152A4  0E38               	movlw	56
 22212  0152A6  0101               	movlb	1	; () banked
 22213  0152A8  6F50               	movwf	DbToCode@k& (0+255),b
 22214  0152AA  0E81               	movlw	129
 22215  0152AC  0101               	movlb	1	; () banked
 22216  0152AE  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22217  0152B0  0E3D               	movlw	61
 22218  0152B2  0101               	movlb	1	; () banked
 22219  0152B4  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22220                           
 22221                           ; BSR set to: 1
 22222                           ;Device.c: 100: volume -= 192;
 22223  0152B6  0EC0               	movlw	192
 22224  0152B8  D00A               	goto	L17
 22225  0152BA                     l10630:
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;Device.c: 102: else
 22229                           ;Device.c: 103: {
 22230                           ;Device.c: 104: k = 0.0316227766016838;
 22231  0152BA  0E87               	movlw	135
 22232  0152BC  0101               	movlb	1	; () banked
 22233  0152BE  6F50               	movwf	DbToCode@k& (0+255),b
 22234  0152C0  0E01               	movlw	1
 22235  0152C2  0101               	movlb	1	; () banked
 22236  0152C4  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22237  0152C6  0E3D               	movlw	61
 22238  0152C8  0101               	movlb	1	; () banked
 22239  0152CA  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22240                           
 22241                           ; BSR set to: 1
 22242                           ;Device.c: 105: volume -= 240;
 22243  0152CC  0EF0               	movlw	240
 22244  0152CE                     L17:
 22245  0152CE  0101               	movlb	1	; () banked
 22246  0152D0  5F48               	subwf	DbToCode@volume& (0+255),f,b
 22247  0152D2  0E00               	movlw	0
 22248  0152D4  D056               	goto	L20
 22249  0152D6                     l10634:
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;Device.c: 108: else
 22253                           ;Device.c: 109: {
 22254                           ;Device.c: 110: if (volume < 336)
 22255  0152D6  0E50               	movlw	80
 22256  0152D8  0101               	movlb	1	; () banked
 22257  0152DA  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22258  0152DC  0E01               	movlw	1
 22259  0152DE  0101               	movlb	1	; () banked
 22260  0152E0  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22261  0152E2  B0D8               	btfsc	status,0,c
 22262  0152E4  D00C               	goto	l10640
 22263                           
 22264                           ; BSR set to: 1
 22265                           ;Device.c: 111: {
 22266                           ;Device.c: 112: k = 0.0158489319246111;
 22267  0152E6  0ED6               	movlw	214
 22268  0152E8  0101               	movlb	1	; () banked
 22269  0152EA  6F50               	movwf	DbToCode@k& (0+255),b
 22270  0152EC  0E81               	movlw	129
 22271  0152EE  0101               	movlb	1	; () banked
 22272  0152F0  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22273  0152F2  0E3C               	movlw	60
 22274  0152F4  0101               	movlb	1	; () banked
 22275  0152F6  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22276                           
 22277                           ; BSR set to: 1
 22278                           ;Device.c: 113: volume -= 288;
 22279  0152F8  0101               	movlb	1	; () banked
 22280  0152FA  0E20               	movlw	32
 22281  0152FC  D03F               	goto	L21
 22282  0152FE                     l10640:
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;Device.c: 115: else
 22286                           ;Device.c: 116: {
 22287                           ;Device.c: 117: k = 0.0079432823472428;
 22288  0152FE  0E25               	movlw	37
 22289  015300  0101               	movlb	1	; () banked
 22290  015302  6F50               	movwf	DbToCode@k& (0+255),b
 22291  015304  0E02               	movlw	2
 22292  015306  0101               	movlb	1	; () banked
 22293  015308  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22294  01530A  0E3C               	movlw	60
 22295  01530C  0101               	movlb	1	; () banked
 22296  01530E  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22297                           
 22298                           ; BSR set to: 1
 22299                           ;Device.c: 118: volume -= 336;
 22300  015310  0101               	movlb	1	; () banked
 22301  015312  0E50               	movlw	80
 22302  015314  D033               	goto	L21
 22303  015316                     l10644:
 22304                           
 22305                           ; BSR set to: 1
 22306                           ;Device.c: 122: else
 22307                           ;Device.c: 123: {
 22308                           ;Device.c: 124: if (volume < 480)
 22309  015316  0EE0               	movlw	224
 22310  015318  0101               	movlb	1	; () banked
 22311  01531A  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22312  01531C  0E01               	movlw	1
 22313  01531E  0101               	movlb	1	; () banked
 22314  015320  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22315  015322  B0D8               	btfsc	status,0,c
 22316  015324  D020               	goto	l10656
 22317                           
 22318                           ; BSR set to: 1
 22319                           ;Device.c: 125: {
 22320                           ;Device.c: 126: if (volume < 432)
 22321  015326  0EB0               	movlw	176
 22322  015328  0101               	movlb	1	; () banked
 22323  01532A  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22324  01532C  0E01               	movlw	1
 22325  01532E  0101               	movlb	1	; () banked
 22326  015330  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22327  015332  B0D8               	btfsc	status,0,c
 22328  015334  D00C               	goto	l10652
 22329                           
 22330                           ; BSR set to: 1
 22331                           ;Device.c: 127: {
 22332                           ;Device.c: 128: k = 0.00398107170553497;
 22333  015336  0E74               	movlw	116
 22334  015338  0101               	movlb	1	; () banked
 22335  01533A  6F50               	movwf	DbToCode@k& (0+255),b
 22336  01533C  0E82               	movlw	130
 22337  01533E  0101               	movlb	1	; () banked
 22338  015340  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22339  015342  0E3B               	movlw	59
 22340  015344  0101               	movlb	1	; () banked
 22341  015346  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22342                           
 22343                           ; BSR set to: 1
 22344                           ;Device.c: 129: volume -= 384;
 22345  015348  0101               	movlb	1	; () banked
 22346  01534A  0E80               	movlw	128
 22347  01534C  D017               	goto	L21
 22348  01534E                     l10652:
 22349                           
 22350                           ; BSR set to: 1
 22351                           ;Device.c: 131: else
 22352                           ;Device.c: 132: {
 22353                           ;Device.c: 133: k = 0.00199526231496888;
 22354  01534E  0EC3               	movlw	195
 22355  015350  0101               	movlb	1	; () banked
 22356  015352  6F50               	movwf	DbToCode@k& (0+255),b
 22357  015354  0E02               	movlw	2
 22358  015356  0101               	movlb	1	; () banked
 22359  015358  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22360  01535A  0E3B               	movlw	59
 22361  01535C  0101               	movlb	1	; () banked
 22362  01535E  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22363                           
 22364                           ; BSR set to: 1
 22365                           ;Device.c: 134: volume -= 432;
 22366  015360  0101               	movlb	1	; () banked
 22367  015362  0EB0               	movlw	176
 22368  015364  D00B               	goto	L21
 22369  015366                     l10656:
 22370                           
 22371                           ; BSR set to: 1
 22372                           ;Device.c: 137: else
 22373                           ;Device.c: 138: {
 22374                           ;Device.c: 139: k = 0.001;
 22375  015366  0E12               	movlw	18
 22376  015368  0101               	movlb	1	; () banked
 22377  01536A  6F50               	movwf	DbToCode@k& (0+255),b
 22378  01536C  0E83               	movlw	131
 22379  01536E  0101               	movlb	1	; () banked
 22380  015370  6F51               	movwf	(DbToCode@k+1)& (0+255),b
 22381  015372  0E3A               	movlw	58
 22382  015374  0101               	movlb	1	; () banked
 22383  015376  6F52               	movwf	(DbToCode@k+2)& (0+255),b
 22384                           
 22385                           ; BSR set to: 1
 22386                           ;Device.c: 140: volume -= 480;
 22387  015378  0101               	movlb	1	; () banked
 22388  01537A  0EE0               	movlw	224
 22389  01537C                     L21:
 22390  01537C  0101               	movlb	1	; () banked
 22391  01537E  5F48               	subwf	DbToCode@volume& (0+255),f,b
 22392  015380  0E01               	movlw	1
 22393  015382                     L20:
 22394  015382  0101               	movlb	1	; () banked
 22395  015384  5B49               	subwfb	(DbToCode@volume+1)& (0+255),f,b
 22396  015386                     l10660:
 22397                           
 22398                           ; BSR set to: 1
 22399                           ;Device.c: 141: }
 22400                           ;Device.c: 142: }
 22401                           ;Device.c: 143: }
 22402                           ;Device.c: 146: if (volume > 47) return 0;
 22403  015386  0E30               	movlw	48
 22404  015388  0101               	movlb	1	; () banked
 22405  01538A  5D48               	subwf	DbToCode@volume& (0+255),w,b
 22406  01538C  0E00               	movlw	0
 22407  01538E  0101               	movlb	1	; () banked
 22408  015390  5949               	subwfb	(DbToCode@volume+1)& (0+255),w,b
 22409  015392  A0D8               	btfss	status,0,c
 22410  015394  D007               	goto	l10666
 22411                           
 22412                           ; BSR set to: 1
 22413  015396  0E00               	movlw	0
 22414  015398  0101               	movlb	1	; () banked
 22415  01539A  6F49               	movwf	(?_DbToCode+1)& (0+255),b
 22416  01539C  0E00               	movlw	0
 22417  01539E  0101               	movlb	1	; () banked
 22418  0153A0  6F48               	movwf	?_DbToCode& (0+255),b
 22419  0153A2  0012               	return	
 22420  0153A4                     l10666:
 22421                           
 22422                           ; BSR set to: 1
 22423                           ;Device.c: 147: return (uint16_t)(LOGS[volume] * k + 0.5);
 22424  0153A4  0E00               	movlw	0
 22425  0153A6  0101               	movlb	1	; () banked
 22426  0153A8  6F30               	movwf	___ftadd@f2& (0+255),b
 22427  0153AA  0E00               	movlw	0
 22428  0153AC  0101               	movlb	1	; () banked
 22429  0153AE  6F31               	movwf	(___ftadd@f2+1)& (0+255),b
 22430  0153B0  0E3F               	movlw	63
 22431  0153B2  0101               	movlb	1	; () banked
 22432  0153B4  6F32               	movwf	(___ftadd@f2+2)& (0+255),b
 22433  0153B6  C150  F117         	movff	DbToCode@k,___ftmul@f2
 22434  0153BA  C151  F118         	movff	DbToCode@k+1,___ftmul@f2+1
 22435  0153BE  C152  F119         	movff	DbToCode@k+2,___ftmul@f2+2
 22436  0153C2  0101               	movlb	1	; () banked
 22437  0153C4  C148  F14A         	movff	DbToCode@volume,??_DbToCode
 22438  0153C8  0101               	movlb	1	; () banked
 22439  0153CA  C149  F14B         	movff	DbToCode@volume+1,??_DbToCode+1
 22440  0153CE  90D8               	bcf	status,0,c
 22441  0153D0  0101               	movlb	1	; () banked
 22442  0153D2  374A               	rlcf	??_DbToCode& (0+255),f,b
 22443  0153D4  374B               	rlcf	(??_DbToCode+1)& (0+255),f,b
 22444  0153D6  0E2B               	movlw	low _LOGS
 22445  0153D8  0101               	movlb	1	; () banked
 22446  0153DA  254A               	addwf	??_DbToCode& (0+255),w,b
 22447  0153DC  6EF6               	movwf	tblptrl,c
 22448  0153DE  0EFE               	movlw	high _LOGS
 22449  0153E0  214B               	addwfc	(??_DbToCode+1)& (0+255),w,b
 22450  0153E2  6EF7               	movwf	tblptrh,c
 22451  0153E4                     	if	1	;There are 3 active tblptr bytes
 22452  0153E4  6AF8               	clrf	tblptru,c
 22453  0153E6  0E00               	movlw	low (__mediumconst shr (0+16))
 22454  0153E8  22F8               	addwfc	tblptru,f,c
 22455  0153EA                     	endif
 22456  0153EA  0009               	tblrd		*+
 22457  0153EC  0101               	movlb	1	; () banked
 22458  0153EE  CFF5 F108          	movff	tablat,___lwtoft@c
 22459  0153F2  000A               	tblrd		*-
 22460  0153F4  0101               	movlb	1	; () banked
 22461  0153F6  CFF5 F109          	movff	tablat,___lwtoft@c+1
 22462  0153FA  EC14  F0DB         	call	___lwtoft	;wreg free
 22463  0153FE  C108  F114         	movff	?___lwtoft,___ftmul@f1
 22464  015402  C109  F115         	movff	?___lwtoft+1,___ftmul@f1+1
 22465  015406  C10A  F116         	movff	?___lwtoft+2,___ftmul@f1+2
 22466  01540A  ECA2  F0BB         	call	___ftmul	;wreg free
 22467  01540E  C114  F12D         	movff	?___ftmul,___ftadd@f1
 22468  015412  C115  F12E         	movff	?___ftmul+1,___ftadd@f1+1
 22469  015416  C116  F12F         	movff	?___ftmul+2,___ftadd@f1+2
 22470  01541A  EC75  F0A6         	call	___ftadd	;wreg free
 22471  01541E  C12D  F139         	movff	?___ftadd,___fttol@f1
 22472  015422  C12E  F13A         	movff	?___ftadd+1,___fttol@f1+1
 22473  015426  C12F  F13B         	movff	?___ftadd+2,___fttol@f1+2
 22474  01542A  ECE4  F0BA         	call	___fttol	;wreg free
 22475  01542E  C139  F14C         	movff	?___fttol,??_DbToCode+2
 22476  015432  C13A  F14D         	movff	?___fttol+1,??_DbToCode+3
 22477  015436  C13B  F14E         	movff	?___fttol+2,??_DbToCode+4
 22478  01543A  C13C  F14F         	movff	?___fttol+3,??_DbToCode+5
 22479  01543E  C14C  F148         	movff	??_DbToCode+2,?_DbToCode
 22480  015442  C14D  F149         	movff	??_DbToCode+3,?_DbToCode+1
 22481  015446  0012               	return	
 22482  015448                     __end_of_DbToCode:
 22483                           	opt stack 0
 22484                           tblptru	equ	0xFF8
 22485                           tblptrh	equ	0xFF7
 22486                           tblptrl	equ	0xFF6
 22487                           tablat	equ	0xFF5
 22488                           prodh	equ	0xFF4
 22489                           prodl	equ	0xFF3
 22490                           intcon	equ	0xFF2
 22491                           indf0	equ	0xFEF
 22492                           postinc0	equ	0xFEE
 22493                           fsr0h	equ	0xFEA
 22494                           fsr0l	equ	0xFE9
 22495                           wreg	equ	0xFE8
 22496                           indf1	equ	0xFE7
 22497                           postinc1	equ	0xFE6
 22498                           postdec1	equ	0xFE5
 22499                           fsr1h	equ	0xFE2
 22500                           fsr1l	equ	0xFE1
 22501                           indf2	equ	0xFDF
 22502                           postinc2	equ	0xFDE
 22503                           postdec2	equ	0xFDD
 22504                           fsr2h	equ	0xFDA
 22505                           fsr2l	equ	0xFD9
 22506                           status	equ	0xFD8
 22507                           
 22508 ;; *************** function ___lwtoft *****************
 22509 ;; Defined at:
 22510 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 22511 ;; Parameters:    Size  Location     Type
 22512 ;;  c               2    8[BANK1 ] unsigned int 
 22513 ;; Auto vars:     Size  Location     Type
 22514 ;;		None
 22515 ;; Return value:  Size  Location     Type
 22516 ;;                  3    8[BANK1 ] float 
 22517 ;; Registers used:
 22518 ;;		wreg, status,2, status,0, cstack
 22519 ;; Tracked objects:
 22520 ;;		On entry : 0/0
 22521 ;;		On exit  : 0/0
 22522 ;;		Unchanged: 0/0
 22523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22524 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22527 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22528 ;;Total ram usage:        3 bytes
 22529 ;; Hardware stack levels used:    1
 22530 ;; Hardware stack levels required when called:   11
 22531 ;; This function calls:
 22532 ;;		___ftpack
 22533 ;; This function is called by:
 22534 ;;		_DbToCode
 22535 ;; This function uses a non-reentrant model
 22536 ;;
 22537                           
 22538                           	psect	text38
 22539  01B628                     __ptext38:
 22540                           	opt stack 0
 22541  01B628                     ___lwtoft:
 22542                           	opt stack 14
 22543                           
 22544                           ;incstack = 0
 22545  01B628  0101               	movlb	1	; () banked
 22546  01B62A  C108  F100         	movff	___lwtoft@c,___ftpack@arg
 22547  01B62E  0101               	movlb	1	; () banked
 22548  01B630  C109  F101         	movff	___lwtoft@c+1,___ftpack@arg+1
 22549  01B634  0101               	movlb	1	; () banked
 22550  01B636  6B02               	clrf	(___ftpack@arg+2)& (0+255),b
 22551  01B638  0E8E               	movlw	142
 22552  01B63A  0101               	movlb	1	; () banked
 22553  01B63C  6F03               	movwf	___ftpack@exp& (0+255),b
 22554  01B63E  0E00               	movlw	0
 22555  01B640  0101               	movlb	1	; () banked
 22556  01B642  6F04               	movwf	___ftpack@sign& (0+255),b
 22557  01B644  EC61  F0C5         	call	___ftpack	;wreg free
 22558  01B648  C100  F108         	movff	?___ftpack,?___lwtoft
 22559  01B64C  C101  F109         	movff	?___ftpack+1,?___lwtoft+1
 22560  01B650  C102  F10A         	movff	?___ftpack+2,?___lwtoft+2
 22561  01B654  0012               	return	
 22562  01B656                     __end_of___lwtoft:
 22563                           	opt stack 0
 22564                           tblptru	equ	0xFF8
 22565                           tblptrh	equ	0xFF7
 22566                           tblptrl	equ	0xFF6
 22567                           tablat	equ	0xFF5
 22568                           prodh	equ	0xFF4
 22569                           prodl	equ	0xFF3
 22570                           intcon	equ	0xFF2
 22571                           indf0	equ	0xFEF
 22572                           postinc0	equ	0xFEE
 22573                           fsr0h	equ	0xFEA
 22574                           fsr0l	equ	0xFE9
 22575                           wreg	equ	0xFE8
 22576                           indf1	equ	0xFE7
 22577                           postinc1	equ	0xFE6
 22578                           postdec1	equ	0xFE5
 22579                           fsr1h	equ	0xFE2
 22580                           fsr1l	equ	0xFE1
 22581                           indf2	equ	0xFDF
 22582                           postinc2	equ	0xFDE
 22583                           postdec2	equ	0xFDD
 22584                           fsr2h	equ	0xFDA
 22585                           fsr2l	equ	0xFD9
 22586                           status	equ	0xFD8
 22587                           
 22588 ;; *************** function ___fttol *****************
 22589 ;; Defined at:
 22590 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 22591 ;; Parameters:    Size  Location     Type
 22592 ;;  f1              3   57[BANK1 ] float 
 22593 ;; Auto vars:     Size  Location     Type
 22594 ;;  lval            4   67[BANK1 ] unsigned long 
 22595 ;;  exp1            1   71[BANK1 ] unsigned char 
 22596 ;;  sign1           1   66[BANK1 ] unsigned char 
 22597 ;; Return value:  Size  Location     Type
 22598 ;;                  4   57[BANK1 ] long 
 22599 ;; Registers used:
 22600 ;;		wreg, status,2, status,0
 22601 ;; Tracked objects:
 22602 ;;		On entry : 0/0
 22603 ;;		On exit  : 0/0
 22604 ;;		Unchanged: 0/0
 22605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22606 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22607 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22608 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22609 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22610 ;;Total ram usage:       15 bytes
 22611 ;; Hardware stack levels used:    1
 22612 ;; Hardware stack levels required when called:   10
 22613 ;; This function calls:
 22614 ;;		Nothing
 22615 ;; This function is called by:
 22616 ;;		_DbToCode
 22617 ;;		_sprintf
 22618 ;; This function uses a non-reentrant model
 22619 ;;
 22620                           
 22621                           	psect	text39
 22622  0175C8                     __ptext39:
 22623                           	opt stack 0
 22624  0175C8                     ___fttol:
 22625                           	opt stack 17
 22626                           
 22627                           ;incstack = 0
 22628  0175C8  0101               	movlb	1	; () banked
 22629  0175CA  C13B  F13D         	movff	___fttol@f1+2,??___fttol
 22630  0175CE  0101               	movlb	1	; () banked
 22631  0175D0  6B3E               	clrf	(??___fttol+1)& (0+255),b
 22632  0175D2  6B3F               	clrf	(??___fttol+2)& (0+255),b
 22633  0175D4  0101               	movlb	1	; () banked
 22634  0175D6  353A               	rlcf	(___fttol@f1+1)& (0+255),w,b
 22635  0175D8  0101               	movlb	1	; () banked
 22636  0175DA  373D               	rlcf	??___fttol& (0+255),f,b
 22637  0175DC  E301               	bnc	u10641
 22638  0175DE  813E               	bsf	(??___fttol+1)& (0+255),0,b
 22639  0175E0                     u10641:
 22640  0175E0  0101               	movlb	1	; () banked
 22641  0175E2  513D               	movf	??___fttol& (0+255),w,b
 22642  0175E4  0101               	movlb	1	; () banked
 22643  0175E6  6F47               	movwf	___fttol@exp1& (0+255),b
 22644  0175E8  0101               	movlb	1	; () banked
 22645  0175EA  6747               	tstfsz	___fttol@exp1& (0+255),b
 22646  0175EC  D00D               	goto	l10260
 22647                           
 22648                           ; BSR set to: 1
 22649  0175EE  0E00               	movlw	0
 22650  0175F0  0101               	movlb	1	; () banked
 22651  0175F2  6F39               	movwf	?___fttol& (0+255),b
 22652  0175F4  0E00               	movlw	0
 22653  0175F6  0101               	movlb	1	; () banked
 22654  0175F8  6F3A               	movwf	(?___fttol+1)& (0+255),b
 22655  0175FA  0E00               	movlw	0
 22656  0175FC  0101               	movlb	1	; () banked
 22657  0175FE  6F3B               	movwf	(?___fttol+2)& (0+255),b
 22658  017600  0E00               	movlw	0
 22659  017602  0101               	movlb	1	; () banked
 22660  017604  6F3C               	movwf	(?___fttol+3)& (0+255),b
 22661  017606  0012               	return	
 22662  017608                     l10260:
 22663                           
 22664                           ; BSR set to: 1
 22665  017608  0E17               	movlw	23
 22666  01760A  0101               	movlb	1	; () banked
 22667  01760C  6F3D               	movwf	??___fttol& (0+255),b
 22668  01760E  0101               	movlb	1	; () banked
 22669  017610  C139  F13E         	movff	___fttol@f1,??___fttol+1
 22670  017614  0101               	movlb	1	; () banked
 22671  017616  C13A  F13F         	movff	___fttol@f1+1,??___fttol+2
 22672  01761A  0101               	movlb	1	; () banked
 22673  01761C  C13B  F140         	movff	___fttol@f1+2,??___fttol+3
 22674  017620  0101               	movlb	1	; () banked
 22675  017622  293D               	incf	??___fttol& (0+255),w,b
 22676  017624  0101               	movlb	1	; () banked
 22677  017626  6F41               	movwf	(??___fttol+4)& (0+255),b
 22678  017628  D005               	goto	u10660
 22679  01762A                     u10665:
 22680  01762A  0101               	movlb	1	; () banked
 22681  01762C  90D8               	bcf	status,0,c
 22682  01762E  3340               	rrcf	(??___fttol+3)& (0+255),f,b
 22683  017630  333F               	rrcf	(??___fttol+2)& (0+255),f,b
 22684  017632  333E               	rrcf	(??___fttol+1)& (0+255),f,b
 22685  017634                     u10660:
 22686  017634  0101               	movlb	1	; () banked
 22687  017636  2F41               	decfsz	(??___fttol+4)& (0+255),f,b
 22688  017638  D7F8               	goto	u10665
 22689  01763A  0101               	movlb	1	; () banked
 22690  01763C  513E               	movf	(??___fttol+1)& (0+255),w,b
 22691  01763E  0101               	movlb	1	; () banked
 22692  017640  6F42               	movwf	___fttol@sign1& (0+255),b
 22693                           
 22694                           ; BSR set to: 1
 22695  017642  0101               	movlb	1	; () banked
 22696  017644  8F3A               	bsf	(___fttol@f1+1)& (0+255),7,b
 22697                           
 22698                           ; BSR set to: 1
 22699  017646  0EFF               	movlw	255
 22700  017648  0101               	movlb	1	; () banked
 22701  01764A  1739               	andwf	___fttol@f1& (0+255),f,b
 22702  01764C  0EFF               	movlw	255
 22703  01764E  0101               	movlb	1	; () banked
 22704  017650  173A               	andwf	(___fttol@f1+1)& (0+255),f,b
 22705  017652  0E00               	movlw	0
 22706  017654  0101               	movlb	1	; () banked
 22707  017656  173B               	andwf	(___fttol@f1+2)& (0+255),f,b
 22708                           
 22709                           ; BSR set to: 1
 22710  017658  0101               	movlb	1	; () banked
 22711  01765A  5139               	movf	___fttol@f1& (0+255),w,b
 22712  01765C  0101               	movlb	1	; () banked
 22713  01765E  6F43               	movwf	___fttol@lval& (0+255),b
 22714  017660  0101               	movlb	1	; () banked
 22715  017662  513A               	movf	(___fttol@f1+1)& (0+255),w,b
 22716  017664  0101               	movlb	1	; () banked
 22717  017666  6F44               	movwf	(___fttol@lval+1)& (0+255),b
 22718  017668  0101               	movlb	1	; () banked
 22719  01766A  513B               	movf	(___fttol@f1+2)& (0+255),w,b
 22720  01766C  0101               	movlb	1	; () banked
 22721  01766E  6F45               	movwf	(___fttol@lval+2)& (0+255),b
 22722  017670  0101               	movlb	1	; () banked
 22723  017672  6B46               	clrf	(___fttol@lval+3)& (0+255),b
 22724                           
 22725                           ; BSR set to: 1
 22726  017674  0E8E               	movlw	142
 22727  017676  0101               	movlb	1	; () banked
 22728  017678  5F47               	subwf	___fttol@exp1& (0+255),f,b
 22729                           
 22730                           ; BSR set to: 1
 22731  01767A  0101               	movlb	1	; () banked
 22732  01767C  AF47               	btfss	___fttol@exp1& (0+255),7,b
 22733  01767E  D026               	goto	l10282
 22734                           
 22735                           ; BSR set to: 1
 22736  017680  0101               	movlb	1	; () banked
 22737  017682  5147               	movf	___fttol@exp1& (0+255),w,b
 22738  017684  0A80               	xorlw	128
 22739  017686  0101               	movlb	1	; () banked
 22740  017688  6F3D               	movwf	??___fttol& (0+255),b
 22741  01768A  0EF1               	movlw	241
 22742  01768C  0A80               	xorlw	128
 22743  01768E  0101               	movlb	1	; () banked
 22744  017690  5D3D               	subwf	??___fttol& (0+255),w,b
 22745  017692  B0D8               	btfsc	status,0,c
 22746  017694  D00D               	goto	l10278
 22747                           
 22748                           ; BSR set to: 1
 22749  017696  0E00               	movlw	0
 22750  017698  0101               	movlb	1	; () banked
 22751  01769A  6F39               	movwf	?___fttol& (0+255),b
 22752  01769C  0E00               	movlw	0
 22753  01769E  0101               	movlb	1	; () banked
 22754  0176A0  6F3A               	movwf	(?___fttol+1)& (0+255),b
 22755  0176A2  0E00               	movlw	0
 22756  0176A4  0101               	movlb	1	; () banked
 22757  0176A6  6F3B               	movwf	(?___fttol+2)& (0+255),b
 22758  0176A8  0E00               	movlw	0
 22759  0176AA  0101               	movlb	1	; () banked
 22760  0176AC  6F3C               	movwf	(?___fttol+3)& (0+255),b
 22761  0176AE  0012               	return	
 22762  0176B0                     l10278:
 22763                           
 22764                           ; BSR set to: 1
 22765  0176B0  0101               	movlb	1	; () banked
 22766  0176B2  90D8               	bcf	status,0,c
 22767  0176B4  0101               	movlb	1	; () banked
 22768  0176B6  3346               	rrcf	(___fttol@lval+3)& (0+255),f,b
 22769  0176B8  0101               	movlb	1	; () banked
 22770  0176BA  3345               	rrcf	(___fttol@lval+2)& (0+255),f,b
 22771  0176BC  0101               	movlb	1	; () banked
 22772  0176BE  3344               	rrcf	(___fttol@lval+1)& (0+255),f,b
 22773  0176C0  0101               	movlb	1	; () banked
 22774  0176C2  3343               	rrcf	___fttol@lval& (0+255),f,b
 22775                           
 22776                           ; BSR set to: 1
 22777  0176C4  0101               	movlb	1	; () banked
 22778  0176C6  3F47               	incfsz	___fttol@exp1& (0+255),f,b
 22779  0176C8  D7F3               	goto	l10278
 22780  0176CA  D020               	goto	l10292
 22781  0176CC                     l10282:
 22782                           
 22783                           ; BSR set to: 1
 22784  0176CC  0E17               	movlw	23
 22785  0176CE  0101               	movlb	1	; () banked
 22786  0176D0  6547               	cpfsgt	___fttol@exp1& (0+255),b
 22787  0176D2  D019               	goto	l10290
 22788                           
 22789                           ; BSR set to: 1
 22790  0176D4  0E00               	movlw	0
 22791  0176D6  0101               	movlb	1	; () banked
 22792  0176D8  6F39               	movwf	?___fttol& (0+255),b
 22793  0176DA  0E00               	movlw	0
 22794  0176DC  0101               	movlb	1	; () banked
 22795  0176DE  6F3A               	movwf	(?___fttol+1)& (0+255),b
 22796  0176E0  0E00               	movlw	0
 22797  0176E2  0101               	movlb	1	; () banked
 22798  0176E4  6F3B               	movwf	(?___fttol+2)& (0+255),b
 22799  0176E6  0E00               	movlw	0
 22800  0176E8  0101               	movlb	1	; () banked
 22801  0176EA  6F3C               	movwf	(?___fttol+3)& (0+255),b
 22802  0176EC  0012               	return	
 22803  0176EE                     l10288:
 22804                           
 22805                           ; BSR set to: 1
 22806  0176EE  0101               	movlb	1	; () banked
 22807  0176F0  90D8               	bcf	status,0,c
 22808  0176F2  0101               	movlb	1	; () banked
 22809  0176F4  3743               	rlcf	___fttol@lval& (0+255),f,b
 22810  0176F6  0101               	movlb	1	; () banked
 22811  0176F8  3744               	rlcf	(___fttol@lval+1)& (0+255),f,b
 22812  0176FA  0101               	movlb	1	; () banked
 22813  0176FC  3745               	rlcf	(___fttol@lval+2)& (0+255),f,b
 22814  0176FE  0101               	movlb	1	; () banked
 22815  017700  3746               	rlcf	(___fttol@lval+3)& (0+255),f,b
 22816  017702  0101               	movlb	1	; () banked
 22817  017704  0747               	decf	___fttol@exp1& (0+255),f,b
 22818  017706                     l10290:
 22819                           
 22820                           ; BSR set to: 1
 22821  017706  0101               	movlb	1	; () banked
 22822  017708  6747               	tstfsz	___fttol@exp1& (0+255),b
 22823  01770A  D7F1               	goto	l10288
 22824  01770C                     l10292:
 22825                           
 22826                           ; BSR set to: 1
 22827  01770C  0101               	movlb	1	; () banked
 22828  01770E  5142               	movf	___fttol@sign1& (0+255),w,b
 22829  017710  B4D8               	btfsc	status,2,c
 22830  017712  D00F               	goto	l10296
 22831                           
 22832                           ; BSR set to: 1
 22833  017714  0101               	movlb	1	; () banked
 22834  017716  1F46               	comf	(___fttol@lval+3)& (0+255),f,b
 22835  017718  0101               	movlb	1	; () banked
 22836  01771A  1F45               	comf	(___fttol@lval+2)& (0+255),f,b
 22837  01771C  0101               	movlb	1	; () banked
 22838  01771E  1F44               	comf	(___fttol@lval+1)& (0+255),f,b
 22839  017720  0101               	movlb	1	; () banked
 22840  017722  6D43               	negf	___fttol@lval& (0+255),b
 22841  017724  0E00               	movlw	0
 22842  017726  0101               	movlb	1	; () banked
 22843  017728  2344               	addwfc	(___fttol@lval+1)& (0+255),f,b
 22844  01772A  0101               	movlb	1	; () banked
 22845  01772C  2345               	addwfc	(___fttol@lval+2)& (0+255),f,b
 22846  01772E  0101               	movlb	1	; () banked
 22847  017730  2346               	addwfc	(___fttol@lval+3)& (0+255),f,b
 22848  017732                     l10296:
 22849                           
 22850                           ; BSR set to: 1
 22851  017732  C143  F139         	movff	___fttol@lval,?___fttol
 22852  017736  C144  F13A         	movff	___fttol@lval+1,?___fttol+1
 22853  01773A  C145  F13B         	movff	___fttol@lval+2,?___fttol+2
 22854  01773E  C146  F13C         	movff	___fttol@lval+3,?___fttol+3
 22855  017742  0012               	return	
 22856  017744                     __end_of___fttol:
 22857                           	opt stack 0
 22858                           tblptru	equ	0xFF8
 22859                           tblptrh	equ	0xFF7
 22860                           tblptrl	equ	0xFF6
 22861                           tablat	equ	0xFF5
 22862                           prodh	equ	0xFF4
 22863                           prodl	equ	0xFF3
 22864                           intcon	equ	0xFF2
 22865                           indf0	equ	0xFEF
 22866                           postinc0	equ	0xFEE
 22867                           fsr0h	equ	0xFEA
 22868                           fsr0l	equ	0xFE9
 22869                           wreg	equ	0xFE8
 22870                           indf1	equ	0xFE7
 22871                           postinc1	equ	0xFE6
 22872                           postdec1	equ	0xFE5
 22873                           fsr1h	equ	0xFE2
 22874                           fsr1l	equ	0xFE1
 22875                           indf2	equ	0xFDF
 22876                           postinc2	equ	0xFDE
 22877                           postdec2	equ	0xFDD
 22878                           fsr2h	equ	0xFDA
 22879                           fsr2l	equ	0xFD9
 22880                           status	equ	0xFD8
 22881                           
 22882 ;; *************** function ___ftmul *****************
 22883 ;; Defined at:
 22884 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 22885 ;; Parameters:    Size  Location     Type
 22886 ;;  f1              3   20[BANK1 ] float 
 22887 ;;  f2              3   23[BANK1 ] float 
 22888 ;; Auto vars:     Size  Location     Type
 22889 ;;  f3_as_produc    3   30[BANK1 ] unsigned um
 22890 ;;  sign            1   34[BANK1 ] unsigned char 
 22891 ;;  cntr            1   33[BANK1 ] unsigned char 
 22892 ;;  exp             1   29[BANK1 ] unsigned char 
 22893 ;; Return value:  Size  Location     Type
 22894 ;;                  3   20[BANK1 ] float 
 22895 ;; Registers used:
 22896 ;;		wreg, status,2, status,0, cstack
 22897 ;; Tracked objects:
 22898 ;;		On entry : 0/0
 22899 ;;		On exit  : 0/0
 22900 ;;		Unchanged: 0/0
 22901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 22902 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22903 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22904 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22905 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22906 ;;Total ram usage:       15 bytes
 22907 ;; Hardware stack levels used:    1
 22908 ;; Hardware stack levels required when called:   11
 22909 ;; This function calls:
 22910 ;;		___ftpack
 22911 ;; This function is called by:
 22912 ;;		_DbToCode
 22913 ;;		_fround
 22914 ;;		_scale
 22915 ;;		_sprintf
 22916 ;; This function uses a non-reentrant model
 22917 ;;
 22918                           
 22919                           	psect	text40
 22920  017744                     __ptext40:
 22921                           	opt stack 0
 22922  017744                     ___ftmul:
 22923                           	opt stack 15
 22924                           
 22925                           ; BSR set to: 1
 22926                           ;incstack = 0
 22927  017744  0101               	movlb	1	; () banked
 22928  017746  C116  F11A         	movff	___ftmul@f1+2,??___ftmul
 22929  01774A  0101               	movlb	1	; () banked
 22930  01774C  6B1B               	clrf	(??___ftmul+1)& (0+255),b
 22931  01774E  6B1C               	clrf	(??___ftmul+2)& (0+255),b
 22932  017750  0101               	movlb	1	; () banked
 22933  017752  3515               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 22934  017754  0101               	movlb	1	; () banked
 22935  017756  371A               	rlcf	??___ftmul& (0+255),f,b
 22936  017758  E301               	bnc	u10581
 22937  01775A  811B               	bsf	(??___ftmul+1)& (0+255),0,b
 22938  01775C                     u10581:
 22939  01775C  0101               	movlb	1	; () banked
 22940  01775E  511A               	movf	??___ftmul& (0+255),w,b
 22941  017760  0101               	movlb	1	; () banked
 22942  017762  6F1D               	movwf	___ftmul@exp& (0+255),b
 22943  017764  0101               	movlb	1	; () banked
 22944  017766  671D               	tstfsz	___ftmul@exp& (0+255),b
 22945  017768  D00A               	goto	l10212
 22946                           
 22947                           ; BSR set to: 1
 22948  01776A  0E00               	movlw	0
 22949  01776C  0101               	movlb	1	; () banked
 22950  01776E  6F14               	movwf	?___ftmul& (0+255),b
 22951  017770  0E00               	movlw	0
 22952  017772  0101               	movlb	1	; () banked
 22953  017774  6F15               	movwf	(?___ftmul+1)& (0+255),b
 22954  017776  0E00               	movlw	0
 22955  017778  0101               	movlb	1	; () banked
 22956  01777A  6F16               	movwf	(?___ftmul+2)& (0+255),b
 22957  01777C  0012               	return	
 22958  01777E                     l10212:
 22959                           
 22960                           ; BSR set to: 1
 22961  01777E  0101               	movlb	1	; () banked
 22962  017780  C119  F11A         	movff	___ftmul@f2+2,??___ftmul
 22963  017784  0101               	movlb	1	; () banked
 22964  017786  6B1B               	clrf	(??___ftmul+1)& (0+255),b
 22965  017788  6B1C               	clrf	(??___ftmul+2)& (0+255),b
 22966  01778A  0101               	movlb	1	; () banked
 22967  01778C  3518               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 22968  01778E  0101               	movlb	1	; () banked
 22969  017790  371A               	rlcf	??___ftmul& (0+255),f,b
 22970  017792  E301               	bnc	u10601
 22971  017794  811B               	bsf	(??___ftmul+1)& (0+255),0,b
 22972  017796                     u10601:
 22973  017796  0101               	movlb	1	; () banked
 22974  017798  511A               	movf	??___ftmul& (0+255),w,b
 22975  01779A  0101               	movlb	1	; () banked
 22976  01779C  6F22               	movwf	___ftmul@sign& (0+255),b
 22977  01779E  0101               	movlb	1	; () banked
 22978  0177A0  6722               	tstfsz	___ftmul@sign& (0+255),b
 22979  0177A2  D00A               	goto	l10218
 22980                           
 22981                           ; BSR set to: 1
 22982  0177A4  0E00               	movlw	0
 22983  0177A6  0101               	movlb	1	; () banked
 22984  0177A8  6F14               	movwf	?___ftmul& (0+255),b
 22985  0177AA  0E00               	movlw	0
 22986  0177AC  0101               	movlb	1	; () banked
 22987  0177AE  6F15               	movwf	(?___ftmul+1)& (0+255),b
 22988  0177B0  0E00               	movlw	0
 22989  0177B2  0101               	movlb	1	; () banked
 22990  0177B4  6F16               	movwf	(?___ftmul+2)& (0+255),b
 22991  0177B6  0012               	return	
 22992  0177B8                     l10218:
 22993                           
 22994                           ; BSR set to: 1
 22995  0177B8  0101               	movlb	1	; () banked
 22996  0177BA  5122               	movf	___ftmul@sign& (0+255),w,b
 22997  0177BC  0F7B               	addlw	123
 22998  0177BE  0101               	movlb	1	; () banked
 22999  0177C0  271D               	addwf	___ftmul@exp& (0+255),f,b
 23000                           
 23001                           ; BSR set to: 1
 23002  0177C2  C116  F122         	movff	___ftmul@f1+2,___ftmul@sign
 23003  0177C6  0101               	movlb	1	; () banked
 23004  0177C8  5119               	movf	(___ftmul@f2+2)& (0+255),w,b
 23005  0177CA  0101               	movlb	1	; () banked
 23006  0177CC  1B22               	xorwf	___ftmul@sign& (0+255),f,b
 23007  0177CE  0E80               	movlw	128
 23008  0177D0  0101               	movlb	1	; () banked
 23009  0177D2  1722               	andwf	___ftmul@sign& (0+255),f,b
 23010                           
 23011                           ; BSR set to: 1
 23012  0177D4  0101               	movlb	1	; () banked
 23013  0177D6  8F15               	bsf	(___ftmul@f1+1)& (0+255),7,b
 23014                           
 23015                           ; BSR set to: 1
 23016  0177D8  0101               	movlb	1	; () banked
 23017  0177DA  8F18               	bsf	(___ftmul@f2+1)& (0+255),7,b
 23018                           
 23019                           ; BSR set to: 1
 23020  0177DC  0EFF               	movlw	255
 23021  0177DE  0101               	movlb	1	; () banked
 23022  0177E0  1717               	andwf	___ftmul@f2& (0+255),f,b
 23023  0177E2  0EFF               	movlw	255
 23024  0177E4  0101               	movlb	1	; () banked
 23025  0177E6  1718               	andwf	(___ftmul@f2+1)& (0+255),f,b
 23026  0177E8  0E00               	movlw	0
 23027  0177EA  0101               	movlb	1	; () banked
 23028  0177EC  1719               	andwf	(___ftmul@f2+2)& (0+255),f,b
 23029                           
 23030                           ; BSR set to: 1
 23031  0177EE  0E00               	movlw	0
 23032  0177F0  0101               	movlb	1	; () banked
 23033  0177F2  6F1E               	movwf	___ftmul@f3_as_product& (0+255),b
 23034  0177F4  0E00               	movlw	0
 23035  0177F6  0101               	movlb	1	; () banked
 23036  0177F8  6F1F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 23037  0177FA  0E00               	movlw	0
 23038  0177FC  0101               	movlb	1	; () banked
 23039  0177FE  6F20               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 23040                           
 23041                           ; BSR set to: 1
 23042  017800  0E07               	movlw	7
 23043  017802  0101               	movlb	1	; () banked
 23044  017804  6F21               	movwf	___ftmul@cntr& (0+255),b
 23045  017806                     l10232:
 23046                           
 23047                           ; BSR set to: 1
 23048  017806  0101               	movlb	1	; () banked
 23049  017808  A114               	btfss	___ftmul@f1& (0+255),0,b
 23050  01780A  D00C               	goto	l10236
 23051                           
 23052                           ; BSR set to: 1
 23053  01780C  0101               	movlb	1	; () banked
 23054  01780E  5117               	movf	___ftmul@f2& (0+255),w,b
 23055  017810  0101               	movlb	1	; () banked
 23056  017812  271E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 23057  017814  0101               	movlb	1	; () banked
 23058  017816  5118               	movf	(___ftmul@f2+1)& (0+255),w,b
 23059  017818  0101               	movlb	1	; () banked
 23060  01781A  231F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 23061  01781C  0101               	movlb	1	; () banked
 23062  01781E  5119               	movf	(___ftmul@f2+2)& (0+255),w,b
 23063  017820  0101               	movlb	1	; () banked
 23064  017822  2320               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 23065  017824                     l10236:
 23066                           
 23067                           ; BSR set to: 1
 23068  017824  0101               	movlb	1	; () banked
 23069  017826  90D8               	bcf	status,0,c
 23070  017828  0101               	movlb	1	; () banked
 23071  01782A  3316               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 23072  01782C  0101               	movlb	1	; () banked
 23073  01782E  3315               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 23074  017830  0101               	movlb	1	; () banked
 23075  017832  3314               	rrcf	___ftmul@f1& (0+255),f,b
 23076  017834  0101               	movlb	1	; () banked
 23077  017836  90D8               	bcf	status,0,c
 23078  017838  0101               	movlb	1	; () banked
 23079  01783A  3717               	rlcf	___ftmul@f2& (0+255),f,b
 23080  01783C  0101               	movlb	1	; () banked
 23081  01783E  3718               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 23082  017840  0101               	movlb	1	; () banked
 23083  017842  3719               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 23084                           
 23085                           ; BSR set to: 1
 23086  017844  0101               	movlb	1	; () banked
 23087  017846  2F21               	decfsz	___ftmul@cntr& (0+255),f,b
 23088  017848  D7DE               	goto	l10232
 23089                           
 23090                           ; BSR set to: 1
 23091                           
 23092                           ; BSR set to: 1
 23093  01784A  0E09               	movlw	9
 23094  01784C  0101               	movlb	1	; () banked
 23095  01784E  6F21               	movwf	___ftmul@cntr& (0+255),b
 23096  017850                     l10242:
 23097                           
 23098                           ; BSR set to: 1
 23099  017850  0101               	movlb	1	; () banked
 23100  017852  A114               	btfss	___ftmul@f1& (0+255),0,b
 23101  017854  D00C               	goto	l10246
 23102                           
 23103                           ; BSR set to: 1
 23104  017856  0101               	movlb	1	; () banked
 23105  017858  5117               	movf	___ftmul@f2& (0+255),w,b
 23106  01785A  0101               	movlb	1	; () banked
 23107  01785C  271E               	addwf	___ftmul@f3_as_product& (0+255),f,b
 23108  01785E  0101               	movlb	1	; () banked
 23109  017860  5118               	movf	(___ftmul@f2+1)& (0+255),w,b
 23110  017862  0101               	movlb	1	; () banked
 23111  017864  231F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 23112  017866  0101               	movlb	1	; () banked
 23113  017868  5119               	movf	(___ftmul@f2+2)& (0+255),w,b
 23114  01786A  0101               	movlb	1	; () banked
 23115  01786C  2320               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 23116  01786E                     l10246:
 23117                           
 23118                           ; BSR set to: 1
 23119  01786E  0101               	movlb	1	; () banked
 23120  017870  90D8               	bcf	status,0,c
 23121  017872  0101               	movlb	1	; () banked
 23122  017874  3316               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 23123  017876  0101               	movlb	1	; () banked
 23124  017878  3315               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 23125  01787A  0101               	movlb	1	; () banked
 23126  01787C  3314               	rrcf	___ftmul@f1& (0+255),f,b
 23127  01787E  0101               	movlb	1	; () banked
 23128  017880  90D8               	bcf	status,0,c
 23129  017882  0101               	movlb	1	; () banked
 23130  017884  3320               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 23131  017886  0101               	movlb	1	; () banked
 23132  017888  331F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 23133  01788A  0101               	movlb	1	; () banked
 23134  01788C  331E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 23135                           
 23136                           ; BSR set to: 1
 23137  01788E  0101               	movlb	1	; () banked
 23138  017890  2F21               	decfsz	___ftmul@cntr& (0+255),f,b
 23139  017892  D7DE               	goto	l10242
 23140                           
 23141                           ; BSR set to: 1
 23142                           
 23143                           ; BSR set to: 1
 23144  017894  C11E  F100         	movff	___ftmul@f3_as_product,___ftpack@arg
 23145  017898  C11F  F101         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 23146  01789C  C120  F102         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 23147  0178A0  C11D  F103         	movff	___ftmul@exp,___ftpack@exp
 23148  0178A4  C122  F104         	movff	___ftmul@sign,___ftpack@sign
 23149  0178A8  EC61  F0C5         	call	___ftpack	;wreg free
 23150  0178AC  C100  F114         	movff	?___ftpack,?___ftmul
 23151  0178B0  C101  F115         	movff	?___ftpack+1,?___ftmul+1
 23152  0178B4  C102  F116         	movff	?___ftpack+2,?___ftmul+2
 23153  0178B8  0012               	return	
 23154  0178BA                     __end_of___ftmul:
 23155                           	opt stack 0
 23156                           tblptru	equ	0xFF8
 23157                           tblptrh	equ	0xFF7
 23158                           tblptrl	equ	0xFF6
 23159                           tablat	equ	0xFF5
 23160                           prodh	equ	0xFF4
 23161                           prodl	equ	0xFF3
 23162                           intcon	equ	0xFF2
 23163                           indf0	equ	0xFEF
 23164                           postinc0	equ	0xFEE
 23165                           fsr0h	equ	0xFEA
 23166                           fsr0l	equ	0xFE9
 23167                           wreg	equ	0xFE8
 23168                           indf1	equ	0xFE7
 23169                           postinc1	equ	0xFE6
 23170                           postdec1	equ	0xFE5
 23171                           fsr1h	equ	0xFE2
 23172                           fsr1l	equ	0xFE1
 23173                           indf2	equ	0xFDF
 23174                           postinc2	equ	0xFDE
 23175                           postdec2	equ	0xFDD
 23176                           fsr2h	equ	0xFDA
 23177                           fsr2l	equ	0xFD9
 23178                           status	equ	0xFD8
 23179                           
 23180 ;; *************** function ___ftadd *****************
 23181 ;; Defined at:
 23182 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
 23183 ;; Parameters:    Size  Location     Type
 23184 ;;  f1              3   45[BANK1 ] float 
 23185 ;;  f2              3   48[BANK1 ] float 
 23186 ;; Auto vars:     Size  Location     Type
 23187 ;;  exp1            1   56[BANK1 ] unsigned char 
 23188 ;;  exp2            1   55[BANK1 ] unsigned char 
 23189 ;;  sign            1   54[BANK1 ] unsigned char 
 23190 ;; Return value:  Size  Location     Type
 23191 ;;                  3   45[BANK1 ] float 
 23192 ;; Registers used:
 23193 ;;		wreg, status,2, status,0, cstack
 23194 ;; Tracked objects:
 23195 ;;		On entry : 0/0
 23196 ;;		On exit  : 0/0
 23197 ;;		Unchanged: 0/0
 23198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23199 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23200 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23201 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23202 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23203 ;;Total ram usage:       12 bytes
 23204 ;; Hardware stack levels used:    1
 23205 ;; Hardware stack levels required when called:   11
 23206 ;; This function calls:
 23207 ;;		___ftpack
 23208 ;; This function is called by:
 23209 ;;		_DbToCode
 23210 ;;		_sprintf
 23211 ;;		___ftsub
 23212 ;; This function uses a non-reentrant model
 23213 ;;
 23214                           
 23215                           	psect	text41
 23216  014CEA                     __ptext41:
 23217                           	opt stack 0
 23218  014CEA                     ___ftadd:
 23219                           	opt stack 15
 23220                           
 23221                           ;incstack = 0
 23222  014CEA  0101               	movlb	1	; () banked
 23223  014CEC  C12F  F133         	movff	___ftadd@f1+2,??___ftadd
 23224  014CF0  0101               	movlb	1	; () banked
 23225  014CF2  6B34               	clrf	(??___ftadd+1)& (0+255),b
 23226  014CF4  6B35               	clrf	(??___ftadd+2)& (0+255),b
 23227  014CF6  0101               	movlb	1	; () banked
 23228  014CF8  352E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 23229  014CFA  0101               	movlb	1	; () banked
 23230  014CFC  3733               	rlcf	??___ftadd& (0+255),f,b
 23231  014CFE  E301               	bnc	u10371
 23232  014D00  8134               	bsf	(??___ftadd+1)& (0+255),0,b
 23233  014D02                     u10371:
 23234  014D02  0101               	movlb	1	; () banked
 23235  014D04  5133               	movf	??___ftadd& (0+255),w,b
 23236  014D06  0101               	movlb	1	; () banked
 23237  014D08  6F38               	movwf	___ftadd@exp1& (0+255),b
 23238  014D0A  0101               	movlb	1	; () banked
 23239  014D0C  C132  F133         	movff	___ftadd@f2+2,??___ftadd
 23240  014D10  0101               	movlb	1	; () banked
 23241  014D12  6B34               	clrf	(??___ftadd+1)& (0+255),b
 23242  014D14  6B35               	clrf	(??___ftadd+2)& (0+255),b
 23243  014D16  0101               	movlb	1	; () banked
 23244  014D18  3531               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 23245  014D1A  0101               	movlb	1	; () banked
 23246  014D1C  3733               	rlcf	??___ftadd& (0+255),f,b
 23247  014D1E  E301               	bnc	u10381
 23248  014D20  8134               	bsf	(??___ftadd+1)& (0+255),0,b
 23249  014D22                     u10381:
 23250  014D22  0101               	movlb	1	; () banked
 23251  014D24  5133               	movf	??___ftadd& (0+255),w,b
 23252  014D26  0101               	movlb	1	; () banked
 23253  014D28  6F37               	movwf	___ftadd@exp2& (0+255),b
 23254                           
 23255                           ; BSR set to: 1
 23256  014D2A  0101               	movlb	1	; () banked
 23257  014D2C  5138               	movf	___ftadd@exp1& (0+255),w,b
 23258  014D2E  B4D8               	btfsc	status,2,c
 23259  014D30  D012               	goto	l2545
 23260                           
 23261                           ; BSR set to: 1
 23262  014D32  0101               	movlb	1	; () banked
 23263  014D34  5137               	movf	___ftadd@exp2& (0+255),w,b
 23264  014D36  0101               	movlb	1	; () banked
 23265  014D38  5D38               	subwf	___ftadd@exp1& (0+255),w,b
 23266  014D3A  B0D8               	btfsc	status,0,c
 23267  014D3C  D013               	goto	l10144
 23268                           
 23269                           ; BSR set to: 1
 23270  014D3E  0101               	movlb	1	; () banked
 23271  014D40  5138               	movf	___ftadd@exp1& (0+255),w,b
 23272  014D42  0800               	sublw	0
 23273  014D44  0101               	movlb	1	; () banked
 23274  014D46  2537               	addwf	___ftadd@exp2& (0+255),w,b
 23275  014D48  0101               	movlb	1	; () banked
 23276  014D4A  6F33               	movwf	??___ftadd& (0+255),b
 23277  014D4C  0E19               	movlw	25
 23278  014D4E  0101               	movlb	1	; () banked
 23279  014D50  5D33               	subwf	??___ftadd& (0+255),w,b
 23280  014D52  A0D8               	btfss	status,0,c
 23281  014D54  D007               	goto	l10144
 23282  014D56                     l2545:
 23283                           
 23284                           ; BSR set to: 1
 23285  014D56  C130  F12D         	movff	___ftadd@f2,?___ftadd
 23286  014D5A  C131  F12E         	movff	___ftadd@f2+1,?___ftadd+1
 23287  014D5E  C132  F12F         	movff	___ftadd@f2+2,?___ftadd+2
 23288  014D62  0012               	return	
 23289  014D64                     l10144:
 23290                           
 23291                           ; BSR set to: 1
 23292  014D64  0101               	movlb	1	; () banked
 23293  014D66  5137               	movf	___ftadd@exp2& (0+255),w,b
 23294  014D68  B4D8               	btfsc	status,2,c
 23295  014D6A  D012               	goto	l2549
 23296                           
 23297                           ; BSR set to: 1
 23298  014D6C  0101               	movlb	1	; () banked
 23299  014D6E  5138               	movf	___ftadd@exp1& (0+255),w,b
 23300  014D70  0101               	movlb	1	; () banked
 23301  014D72  5D37               	subwf	___ftadd@exp2& (0+255),w,b
 23302  014D74  B0D8               	btfsc	status,0,c
 23303  014D76  D013               	goto	l10150
 23304                           
 23305                           ; BSR set to: 1
 23306  014D78  0101               	movlb	1	; () banked
 23307  014D7A  5137               	movf	___ftadd@exp2& (0+255),w,b
 23308  014D7C  0800               	sublw	0
 23309  014D7E  0101               	movlb	1	; () banked
 23310  014D80  2538               	addwf	___ftadd@exp1& (0+255),w,b
 23311  014D82  0101               	movlb	1	; () banked
 23312  014D84  6F33               	movwf	??___ftadd& (0+255),b
 23313  014D86  0E19               	movlw	25
 23314  014D88  0101               	movlb	1	; () banked
 23315  014D8A  5D33               	subwf	??___ftadd& (0+255),w,b
 23316  014D8C  A0D8               	btfss	status,0,c
 23317  014D8E  D007               	goto	l10150
 23318  014D90                     l2549:
 23319                           
 23320                           ; BSR set to: 1
 23321  014D90  C12D  F12D         	movff	___ftadd@f1,?___ftadd
 23322  014D94  C12E  F12E         	movff	___ftadd@f1+1,?___ftadd+1
 23323  014D98  C12F  F12F         	movff	___ftadd@f1+2,?___ftadd+2
 23324  014D9C  0012               	return	
 23325  014D9E                     l10150:
 23326                           
 23327                           ; BSR set to: 1
 23328  014D9E  0E06               	movlw	6
 23329  014DA0  0101               	movlb	1	; () banked
 23330  014DA2  6F36               	movwf	___ftadd@sign& (0+255),b
 23331                           
 23332                           ; BSR set to: 1
 23333  014DA4  0101               	movlb	1	; () banked
 23334  014DA6  AF2F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 23335  014DA8  D002               	goto	l10156
 23336                           
 23337                           ; BSR set to: 1
 23338  014DAA  0101               	movlb	1	; () banked
 23339  014DAC  8F36               	bsf	___ftadd@sign& (0+255),7,b
 23340  014DAE                     l10156:
 23341                           
 23342                           ; BSR set to: 1
 23343  014DAE  0101               	movlb	1	; () banked
 23344  014DB0  AF32               	btfss	(___ftadd@f2+2)& (0+255),7,b
 23345  014DB2  D002               	goto	l2551
 23346                           
 23347                           ; BSR set to: 1
 23348  014DB4  0101               	movlb	1	; () banked
 23349  014DB6  8D36               	bsf	___ftadd@sign& (0+255),6,b
 23350  014DB8                     l2551:
 23351                           
 23352                           ; BSR set to: 1
 23353  014DB8  0101               	movlb	1	; () banked
 23354  014DBA  8F2E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 23355                           
 23356                           ; BSR set to: 1
 23357  014DBC  0EFF               	movlw	255
 23358  014DBE  0101               	movlb	1	; () banked
 23359  014DC0  172D               	andwf	___ftadd@f1& (0+255),f,b
 23360  014DC2  0EFF               	movlw	255
 23361  014DC4  0101               	movlb	1	; () banked
 23362  014DC6  172E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 23363  014DC8  0E00               	movlw	0
 23364  014DCA  0101               	movlb	1	; () banked
 23365  014DCC  172F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 23366  014DCE  0101               	movlb	1	; () banked
 23367  014DD0  8F31               	bsf	(___ftadd@f2+1)& (0+255),7,b
 23368                           
 23369                           ; BSR set to: 1
 23370  014DD2  0EFF               	movlw	255
 23371  014DD4  0101               	movlb	1	; () banked
 23372  014DD6  1730               	andwf	___ftadd@f2& (0+255),f,b
 23373  014DD8  0EFF               	movlw	255
 23374  014DDA  0101               	movlb	1	; () banked
 23375  014DDC  1731               	andwf	(___ftadd@f2+1)& (0+255),f,b
 23376  014DDE  0E00               	movlw	0
 23377  014DE0  0101               	movlb	1	; () banked
 23378  014DE2  1732               	andwf	(___ftadd@f2+2)& (0+255),f,b
 23379                           
 23380                           ; BSR set to: 1
 23381  014DE4  0101               	movlb	1	; () banked
 23382  014DE6  5137               	movf	___ftadd@exp2& (0+255),w,b
 23383  014DE8  0101               	movlb	1	; () banked
 23384  014DEA  5D38               	subwf	___ftadd@exp1& (0+255),w,b
 23385  014DEC  B0D8               	btfsc	status,0,c
 23386  014DEE  D02A               	goto	l10176
 23387  014DF0                     l10166:
 23388                           
 23389                           ; BSR set to: 1
 23390  014DF0  0101               	movlb	1	; () banked
 23391  014DF2  90D8               	bcf	status,0,c
 23392  014DF4  0101               	movlb	1	; () banked
 23393  014DF6  3730               	rlcf	___ftadd@f2& (0+255),f,b
 23394  014DF8  0101               	movlb	1	; () banked
 23395  014DFA  3731               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 23396  014DFC  0101               	movlb	1	; () banked
 23397  014DFE  3732               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 23398  014E00  0101               	movlb	1	; () banked
 23399  014E02  0737               	decf	___ftadd@exp2& (0+255),f,b
 23400                           
 23401                           ; BSR set to: 1
 23402  014E04  0101               	movlb	1	; () banked
 23403  014E06  5137               	movf	___ftadd@exp2& (0+255),w,b
 23404  014E08  0101               	movlb	1	; () banked
 23405  014E0A  1938               	xorwf	___ftadd@exp1& (0+255),w,b
 23406  014E0C  B4D8               	btfsc	status,2,c
 23407  014E0E  D014               	goto	l10174
 23408                           
 23409                           ; BSR set to: 1
 23410  014E10  0101               	movlb	1	; () banked
 23411  014E12  0736               	decf	___ftadd@sign& (0+255),f,b
 23412  014E14  C136  F133         	movff	___ftadd@sign,??___ftadd
 23413  014E18  0E07               	movlw	7
 23414  014E1A  0101               	movlb	1	; () banked
 23415  014E1C  1733               	andwf	??___ftadd& (0+255),f,b
 23416  014E1E  B4D8               	btfsc	status,2,c
 23417  014E20  D00B               	goto	l10174
 23418  014E22  D7E6               	goto	l10166
 23419  014E24                     l10172:
 23420                           
 23421                           ; BSR set to: 1
 23422  014E24  0101               	movlb	1	; () banked
 23423  014E26  90D8               	bcf	status,0,c
 23424  014E28  0101               	movlb	1	; () banked
 23425  014E2A  332F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 23426  014E2C  0101               	movlb	1	; () banked
 23427  014E2E  332E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 23428  014E30  0101               	movlb	1	; () banked
 23429  014E32  332D               	rrcf	___ftadd@f1& (0+255),f,b
 23430  014E34  0101               	movlb	1	; () banked
 23431  014E36  2B38               	incf	___ftadd@exp1& (0+255),f,b
 23432  014E38                     l10174:
 23433                           
 23434                           ; BSR set to: 1
 23435  014E38  0101               	movlb	1	; () banked
 23436  014E3A  5137               	movf	___ftadd@exp2& (0+255),w,b
 23437  014E3C  0101               	movlb	1	; () banked
 23438  014E3E  6338               	cpfseq	___ftadd@exp1& (0+255),b
 23439  014E40  D7F1               	goto	l10172
 23440  014E42  D02F               	goto	l2560
 23441  014E44                     l10176:
 23442                           
 23443                           ; BSR set to: 1
 23444  014E44  0101               	movlb	1	; () banked
 23445  014E46  5138               	movf	___ftadd@exp1& (0+255),w,b
 23446  014E48  0101               	movlb	1	; () banked
 23447  014E4A  5D37               	subwf	___ftadd@exp2& (0+255),w,b
 23448  014E4C  B0D8               	btfsc	status,0,c
 23449  014E4E  D029               	goto	l2560
 23450  014E50                     l10178:
 23451                           
 23452                           ; BSR set to: 1
 23453  014E50  0101               	movlb	1	; () banked
 23454  014E52  90D8               	bcf	status,0,c
 23455  014E54  0101               	movlb	1	; () banked
 23456  014E56  372D               	rlcf	___ftadd@f1& (0+255),f,b
 23457  014E58  0101               	movlb	1	; () banked
 23458  014E5A  372E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 23459  014E5C  0101               	movlb	1	; () banked
 23460  014E5E  372F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 23461  014E60  0101               	movlb	1	; () banked
 23462  014E62  0738               	decf	___ftadd@exp1& (0+255),f,b
 23463                           
 23464                           ; BSR set to: 1
 23465  014E64  0101               	movlb	1	; () banked
 23466  014E66  5137               	movf	___ftadd@exp2& (0+255),w,b
 23467  014E68  0101               	movlb	1	; () banked
 23468  014E6A  1938               	xorwf	___ftadd@exp1& (0+255),w,b
 23469  014E6C  B4D8               	btfsc	status,2,c
 23470  014E6E  D014               	goto	l10186
 23471                           
 23472                           ; BSR set to: 1
 23473  014E70  0101               	movlb	1	; () banked
 23474  014E72  0736               	decf	___ftadd@sign& (0+255),f,b
 23475  014E74  C136  F133         	movff	___ftadd@sign,??___ftadd
 23476  014E78  0E07               	movlw	7
 23477  014E7A  0101               	movlb	1	; () banked
 23478  014E7C  1733               	andwf	??___ftadd& (0+255),f,b
 23479  014E7E  B4D8               	btfsc	status,2,c
 23480  014E80  D00B               	goto	l10186
 23481  014E82  D7E6               	goto	l10178
 23482  014E84                     l10184:
 23483                           
 23484                           ; BSR set to: 1
 23485  014E84  0101               	movlb	1	; () banked
 23486  014E86  90D8               	bcf	status,0,c
 23487  014E88  0101               	movlb	1	; () banked
 23488  014E8A  3332               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 23489  014E8C  0101               	movlb	1	; () banked
 23490  014E8E  3331               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 23491  014E90  0101               	movlb	1	; () banked
 23492  014E92  3330               	rrcf	___ftadd@f2& (0+255),f,b
 23493  014E94  0101               	movlb	1	; () banked
 23494  014E96  2B37               	incf	___ftadd@exp2& (0+255),f,b
 23495  014E98                     l10186:
 23496                           
 23497                           ; BSR set to: 1
 23498  014E98  0101               	movlb	1	; () banked
 23499  014E9A  5137               	movf	___ftadd@exp2& (0+255),w,b
 23500  014E9C  0101               	movlb	1	; () banked
 23501  014E9E  6338               	cpfseq	___ftadd@exp1& (0+255),b
 23502  014EA0  D7F1               	goto	l10184
 23503  014EA2                     l2560:
 23504                           
 23505                           ; BSR set to: 1
 23506  014EA2  0101               	movlb	1	; () banked
 23507  014EA4  AF36               	btfss	___ftadd@sign& (0+255),7,b
 23508  014EA6  D012               	goto	l2569
 23509                           
 23510                           ; BSR set to: 1
 23511  014EA8  0EFF               	movlw	255
 23512  014EAA  0101               	movlb	1	; () banked
 23513  014EAC  1B2D               	xorwf	___ftadd@f1& (0+255),f,b
 23514  014EAE  0EFF               	movlw	255
 23515  014EB0  0101               	movlb	1	; () banked
 23516  014EB2  1B2E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 23517  014EB4  0EFF               	movlw	255
 23518  014EB6  0101               	movlb	1	; () banked
 23519  014EB8  1B2F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 23520  014EBA  0E01               	movlw	1
 23521  014EBC  0101               	movlb	1	; () banked
 23522  014EBE  272D               	addwf	___ftadd@f1& (0+255),f,b
 23523  014EC0  0E00               	movlw	0
 23524  014EC2  0101               	movlb	1	; () banked
 23525  014EC4  232E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 23526  014EC6  0E00               	movlw	0
 23527  014EC8  0101               	movlb	1	; () banked
 23528  014ECA  232F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 23529  014ECC                     l2569:
 23530                           
 23531                           ; BSR set to: 1
 23532  014ECC  0101               	movlb	1	; () banked
 23533  014ECE  AD36               	btfss	___ftadd@sign& (0+255),6,b
 23534  014ED0  D012               	goto	l10192
 23535                           
 23536                           ; BSR set to: 1
 23537  014ED2  0EFF               	movlw	255
 23538  014ED4  0101               	movlb	1	; () banked
 23539  014ED6  1B30               	xorwf	___ftadd@f2& (0+255),f,b
 23540  014ED8  0EFF               	movlw	255
 23541  014EDA  0101               	movlb	1	; () banked
 23542  014EDC  1B31               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 23543  014EDE  0EFF               	movlw	255
 23544  014EE0  0101               	movlb	1	; () banked
 23545  014EE2  1B32               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 23546  014EE4  0E01               	movlw	1
 23547  014EE6  0101               	movlb	1	; () banked
 23548  014EE8  2730               	addwf	___ftadd@f2& (0+255),f,b
 23549  014EEA  0E00               	movlw	0
 23550  014EEC  0101               	movlb	1	; () banked
 23551  014EEE  2331               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 23552  014EF0  0E00               	movlw	0
 23553  014EF2  0101               	movlb	1	; () banked
 23554  014EF4  2332               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 23555  014EF6                     l10192:
 23556                           
 23557                           ; BSR set to: 1
 23558  014EF6  0E00               	movlw	0
 23559  014EF8  0101               	movlb	1	; () banked
 23560  014EFA  6F36               	movwf	___ftadd@sign& (0+255),b
 23561                           
 23562                           ; BSR set to: 1
 23563  014EFC  0101               	movlb	1	; () banked
 23564  014EFE  512D               	movf	___ftadd@f1& (0+255),w,b
 23565  014F00  0101               	movlb	1	; () banked
 23566  014F02  2730               	addwf	___ftadd@f2& (0+255),f,b
 23567  014F04  0101               	movlb	1	; () banked
 23568  014F06  512E               	movf	(___ftadd@f1+1)& (0+255),w,b
 23569  014F08  0101               	movlb	1	; () banked
 23570  014F0A  2331               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 23571  014F0C  0101               	movlb	1	; () banked
 23572  014F0E  512F               	movf	(___ftadd@f1+2)& (0+255),w,b
 23573  014F10  0101               	movlb	1	; () banked
 23574  014F12  2332               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 23575                           
 23576                           ; BSR set to: 1
 23577  014F14  0101               	movlb	1	; () banked
 23578  014F16  AF32               	btfss	(___ftadd@f2+2)& (0+255),7,b
 23579  014F18  D015               	goto	l10202
 23580                           
 23581                           ; BSR set to: 1
 23582  014F1A  0EFF               	movlw	255
 23583  014F1C  0101               	movlb	1	; () banked
 23584  014F1E  1B30               	xorwf	___ftadd@f2& (0+255),f,b
 23585  014F20  0EFF               	movlw	255
 23586  014F22  0101               	movlb	1	; () banked
 23587  014F24  1B31               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 23588  014F26  0EFF               	movlw	255
 23589  014F28  0101               	movlb	1	; () banked
 23590  014F2A  1B32               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 23591  014F2C  0E01               	movlw	1
 23592  014F2E  0101               	movlb	1	; () banked
 23593  014F30  2730               	addwf	___ftadd@f2& (0+255),f,b
 23594  014F32  0E00               	movlw	0
 23595  014F34  0101               	movlb	1	; () banked
 23596  014F36  2331               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 23597  014F38  0E00               	movlw	0
 23598  014F3A  0101               	movlb	1	; () banked
 23599  014F3C  2332               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 23600                           
 23601                           ; BSR set to: 1
 23602  014F3E  0E01               	movlw	1
 23603  014F40  0101               	movlb	1	; () banked
 23604  014F42  6F36               	movwf	___ftadd@sign& (0+255),b
 23605  014F44                     l10202:
 23606                           
 23607                           ; BSR set to: 1
 23608  014F44  C130  F100         	movff	___ftadd@f2,___ftpack@arg
 23609  014F48  C131  F101         	movff	___ftadd@f2+1,___ftpack@arg+1
 23610  014F4C  C132  F102         	movff	___ftadd@f2+2,___ftpack@arg+2
 23611  014F50  C138  F103         	movff	___ftadd@exp1,___ftpack@exp
 23612  014F54  C136  F104         	movff	___ftadd@sign,___ftpack@sign
 23613  014F58  EC61  F0C5         	call	___ftpack	;wreg free
 23614  014F5C  C100  F12D         	movff	?___ftpack,?___ftadd
 23615  014F60  C101  F12E         	movff	?___ftpack+1,?___ftadd+1
 23616  014F64  C102  F12F         	movff	?___ftpack+2,?___ftadd+2
 23617  014F68  0012               	return	
 23618  014F6A                     __end_of___ftadd:
 23619                           	opt stack 0
 23620                           tblptru	equ	0xFF8
 23621                           tblptrh	equ	0xFF7
 23622                           tblptrl	equ	0xFF6
 23623                           tablat	equ	0xFF5
 23624                           prodh	equ	0xFF4
 23625                           prodl	equ	0xFF3
 23626                           intcon	equ	0xFF2
 23627                           indf0	equ	0xFEF
 23628                           postinc0	equ	0xFEE
 23629                           fsr0h	equ	0xFEA
 23630                           fsr0l	equ	0xFE9
 23631                           wreg	equ	0xFE8
 23632                           indf1	equ	0xFE7
 23633                           postinc1	equ	0xFE6
 23634                           postdec1	equ	0xFE5
 23635                           fsr1h	equ	0xFE2
 23636                           fsr1l	equ	0xFE1
 23637                           indf2	equ	0xFDF
 23638                           postinc2	equ	0xFDE
 23639                           postdec2	equ	0xFDD
 23640                           fsr2h	equ	0xFDA
 23641                           fsr2l	equ	0xFD9
 23642                           status	equ	0xFD8
 23643                           
 23644 ;; *************** function ___ftpack *****************
 23645 ;; Defined at:
 23646 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 23647 ;; Parameters:    Size  Location     Type
 23648 ;;  arg             3    0[BANK1 ] unsigned um
 23649 ;;  exp             1    3[BANK1 ] unsigned char 
 23650 ;;  sign            1    4[BANK1 ] unsigned char 
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;		None
 23653 ;; Return value:  Size  Location     Type
 23654 ;;                  3    0[BANK1 ] float 
 23655 ;; Registers used:
 23656 ;;		wreg, status,2, status,0
 23657 ;; Tracked objects:
 23658 ;;		On entry : 0/0
 23659 ;;		On exit  : 0/0
 23660 ;;		Unchanged: 0/0
 23661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23662 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23664 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23665 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23666 ;;Total ram usage:        8 bytes
 23667 ;; Hardware stack levels used:    1
 23668 ;; Hardware stack levels required when called:   10
 23669 ;; This function calls:
 23670 ;;		Nothing
 23671 ;; This function is called by:
 23672 ;;		___awtoft
 23673 ;;		___ftadd
 23674 ;;		___ftdiv
 23675 ;;		___ftmul
 23676 ;;		___lltoft
 23677 ;;		___lwtoft
 23678 ;; This function uses a non-reentrant model
 23679 ;;
 23680                           
 23681                           	psect	text42
 23682  018AC2                     __ptext42:
 23683                           	opt stack 0
 23684  018AC2                     ___ftpack:
 23685                           	opt stack 15
 23686                           
 23687                           ;incstack = 0
 23688  018AC2  0101               	movlb	1	; () banked
 23689  018AC4  5103               	movf	___ftpack@exp& (0+255),w,b
 23690  018AC6  B4D8               	btfsc	status,2,c
 23691  018AC8  D008               	goto	l9698
 23692                           
 23693                           ; BSR set to: 1
 23694  018ACA  0101               	movlb	1	; () banked
 23695  018ACC  5100               	movf	___ftpack@arg& (0+255),w,b
 23696  018ACE  0101               	movlb	1	; () banked
 23697  018AD0  1101               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 23698  018AD2  0101               	movlb	1	; () banked
 23699  018AD4  1102               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 23700  018AD6  A4D8               	btfss	status,2,c
 23701  018AD8  D014               	goto	l9704
 23702  018ADA                     l9698:
 23703                           
 23704                           ; BSR set to: 1
 23705  018ADA  0E00               	movlw	0
 23706  018ADC  0101               	movlb	1	; () banked
 23707  018ADE  6F00               	movwf	?___ftpack& (0+255),b
 23708  018AE0  0E00               	movlw	0
 23709  018AE2  0101               	movlb	1	; () banked
 23710  018AE4  6F01               	movwf	(?___ftpack+1)& (0+255),b
 23711  018AE6  0E00               	movlw	0
 23712  018AE8  0101               	movlb	1	; () banked
 23713  018AEA  6F02               	movwf	(?___ftpack+2)& (0+255),b
 23714  018AEC  0012               	return	
 23715  018AEE                     l9702:
 23716                           
 23717                           ; BSR set to: 1
 23718  018AEE  0101               	movlb	1	; () banked
 23719  018AF0  2B03               	incf	___ftpack@exp& (0+255),f,b
 23720  018AF2  0101               	movlb	1	; () banked
 23721  018AF4  90D8               	bcf	status,0,c
 23722  018AF6  0101               	movlb	1	; () banked
 23723  018AF8  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23724  018AFA  0101               	movlb	1	; () banked
 23725  018AFC  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23726  018AFE  0101               	movlb	1	; () banked
 23727  018B00  3300               	rrcf	___ftpack@arg& (0+255),f,b
 23728  018B02                     l9704:
 23729                           
 23730                           ; BSR set to: 1
 23731  018B02  0E00               	movlw	0
 23732  018B04  0101               	movlb	1	; () banked
 23733  018B06  1500               	andwf	___ftpack@arg& (0+255),w,b
 23734  018B08  0101               	movlb	1	; () banked
 23735  018B0A  6F05               	movwf	??___ftpack& (0+255),b
 23736  018B0C  0E00               	movlw	0
 23737  018B0E  0101               	movlb	1	; () banked
 23738  018B10  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23739  018B12  0101               	movlb	1	; () banked
 23740  018B14  6F06               	movwf	(??___ftpack+1)& (0+255),b
 23741  018B16  0EFE               	movlw	254
 23742  018B18  0101               	movlb	1	; () banked
 23743  018B1A  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23744  018B1C  0101               	movlb	1	; () banked
 23745  018B1E  6F07               	movwf	(??___ftpack+2)& (0+255),b
 23746  018B20  0101               	movlb	1	; () banked
 23747  018B22  5105               	movf	??___ftpack& (0+255),w,b
 23748  018B24  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 23749  018B26  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 23750  018B28  B4D8               	btfsc	status,2,c
 23751  018B2A  D014               	goto	l9710
 23752  018B2C  D7E0               	goto	l9702
 23753  018B2E                     l9706:
 23754                           
 23755                           ; BSR set to: 1
 23756  018B2E  0101               	movlb	1	; () banked
 23757  018B30  2B03               	incf	___ftpack@exp& (0+255),f,b
 23758                           
 23759                           ; BSR set to: 1
 23760  018B32  0E01               	movlw	1
 23761  018B34  0101               	movlb	1	; () banked
 23762  018B36  2700               	addwf	___ftpack@arg& (0+255),f,b
 23763  018B38  0E00               	movlw	0
 23764  018B3A  0101               	movlb	1	; () banked
 23765  018B3C  2301               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 23766  018B3E  0E00               	movlw	0
 23767  018B40  0101               	movlb	1	; () banked
 23768  018B42  2302               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 23769  018B44  0101               	movlb	1	; () banked
 23770  018B46  90D8               	bcf	status,0,c
 23771  018B48  0101               	movlb	1	; () banked
 23772  018B4A  3302               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 23773  018B4C  0101               	movlb	1	; () banked
 23774  018B4E  3301               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 23775  018B50  0101               	movlb	1	; () banked
 23776  018B52  3300               	rrcf	___ftpack@arg& (0+255),f,b
 23777  018B54                     l9710:
 23778                           
 23779                           ; BSR set to: 1
 23780  018B54  0E00               	movlw	0
 23781  018B56  0101               	movlb	1	; () banked
 23782  018B58  1500               	andwf	___ftpack@arg& (0+255),w,b
 23783  018B5A  0101               	movlb	1	; () banked
 23784  018B5C  6F05               	movwf	??___ftpack& (0+255),b
 23785  018B5E  0E00               	movlw	0
 23786  018B60  0101               	movlb	1	; () banked
 23787  018B62  1501               	andwf	(___ftpack@arg+1)& (0+255),w,b
 23788  018B64  0101               	movlb	1	; () banked
 23789  018B66  6F06               	movwf	(??___ftpack+1)& (0+255),b
 23790  018B68  0EFF               	movlw	255
 23791  018B6A  0101               	movlb	1	; () banked
 23792  018B6C  1502               	andwf	(___ftpack@arg+2)& (0+255),w,b
 23793  018B6E  0101               	movlb	1	; () banked
 23794  018B70  6F07               	movwf	(??___ftpack+2)& (0+255),b
 23795  018B72  0101               	movlb	1	; () banked
 23796  018B74  5105               	movf	??___ftpack& (0+255),w,b
 23797  018B76  1106               	iorwf	(??___ftpack+1)& (0+255),w,b
 23798  018B78  1107               	iorwf	(??___ftpack+2)& (0+255),w,b
 23799  018B7A  B4D8               	btfsc	status,2,c
 23800  018B7C  D00B               	goto	l9714
 23801  018B7E  D7D7               	goto	l9706
 23802  018B80                     l9712:
 23803                           
 23804                           ; BSR set to: 1
 23805  018B80  0101               	movlb	1	; () banked
 23806  018B82  0703               	decf	___ftpack@exp& (0+255),f,b
 23807  018B84  0101               	movlb	1	; () banked
 23808  018B86  90D8               	bcf	status,0,c
 23809  018B88  0101               	movlb	1	; () banked
 23810  018B8A  3700               	rlcf	___ftpack@arg& (0+255),f,b
 23811  018B8C  0101               	movlb	1	; () banked
 23812  018B8E  3701               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 23813  018B90  0101               	movlb	1	; () banked
 23814  018B92  3702               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 23815  018B94                     l9714:
 23816                           
 23817                           ; BSR set to: 1
 23818  018B94  0101               	movlb	1	; () banked
 23819  018B96  AF01               	btfss	(___ftpack@arg+1)& (0+255),7,b
 23820  018B98  D7F3               	goto	l9712
 23821                           
 23822                           ; BSR set to: 1
 23823  018B9A  0101               	movlb	1	; () banked
 23824  018B9C  B103               	btfsc	___ftpack@exp& (0+255),0,b
 23825  018B9E  D002               	goto	l9718
 23826                           
 23827                           ; BSR set to: 1
 23828  018BA0  0101               	movlb	1	; () banked
 23829  018BA2  9F01               	bcf	(___ftpack@arg+1)& (0+255),7,b
 23830  018BA4                     l9718:
 23831                           
 23832                           ; BSR set to: 1
 23833  018BA4  0101               	movlb	1	; () banked
 23834  018BA6  90D8               	bcf	status,0,c
 23835  018BA8  3303               	rrcf	___ftpack@exp& (0+255),f,b
 23836  018BAA  0101               	movlb	1	; () banked
 23837  018BAC  5103               	movf	___ftpack@exp& (0+255),w,b
 23838  018BAE  0101               	movlb	1	; () banked
 23839  018BB0  1302               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 23840                           
 23841                           ; BSR set to: 1
 23842  018BB2  0101               	movlb	1	; () banked
 23843  018BB4  5104               	movf	___ftpack@sign& (0+255),w,b
 23844  018BB6  B4D8               	btfsc	status,2,c
 23845  018BB8  D002               	goto	l9724
 23846                           
 23847                           ; BSR set to: 1
 23848  018BBA  0101               	movlb	1	; () banked
 23849  018BBC  8F02               	bsf	(___ftpack@arg+2)& (0+255),7,b
 23850  018BBE                     l9724:
 23851                           
 23852                           ; BSR set to: 1
 23853  018BBE  C100  F100         	movff	___ftpack@arg,?___ftpack
 23854  018BC2  C101  F101         	movff	___ftpack@arg+1,?___ftpack+1
 23855  018BC6  C102  F102         	movff	___ftpack@arg+2,?___ftpack+2
 23856  018BCA  0012               	return	
 23857  018BCC                     __end_of___ftpack:
 23858                           	opt stack 0
 23859                           tblptru	equ	0xFF8
 23860                           tblptrh	equ	0xFF7
 23861                           tblptrl	equ	0xFF6
 23862                           tablat	equ	0xFF5
 23863                           prodh	equ	0xFF4
 23864                           prodl	equ	0xFF3
 23865                           intcon	equ	0xFF2
 23866                           indf0	equ	0xFEF
 23867                           postinc0	equ	0xFEE
 23868                           fsr0h	equ	0xFEA
 23869                           fsr0l	equ	0xFE9
 23870                           wreg	equ	0xFE8
 23871                           indf1	equ	0xFE7
 23872                           postinc1	equ	0xFE6
 23873                           postdec1	equ	0xFE5
 23874                           fsr1h	equ	0xFE2
 23875                           fsr1l	equ	0xFE1
 23876                           indf2	equ	0xFDF
 23877                           postinc2	equ	0xFDE
 23878                           postdec2	equ	0xFDD
 23879                           fsr2h	equ	0xFDA
 23880                           fsr2l	equ	0xFD9
 23881                           status	equ	0xFD8
 23882                           
 23883 ;; *************** function _RefreshLine1 *****************
 23884 ;; Defined at:
 23885 ;;		line 7 in file "LCD.c"
 23886 ;; Parameters:    Size  Location     Type
 23887 ;;		None
 23888 ;; Auto vars:     Size  Location     Type
 23889 ;;		None
 23890 ;; Return value:  Size  Location     Type
 23891 ;;		None               void
 23892 ;; Registers used:
 23893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23894 ;; Tracked objects:
 23895 ;;		On entry : 0/0
 23896 ;;		On exit  : 0/0
 23897 ;;		Unchanged: 0/0
 23898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23903 ;;Total ram usage:        0 bytes
 23904 ;; Hardware stack levels used:    1
 23905 ;; Hardware stack levels required when called:   14
 23906 ;; This function calls:
 23907 ;;		_RefreshLine1Ex
 23908 ;; This function is called by:
 23909 ;;		_SaveToFlash
 23910 ;;		_UpdateMasterVolume
 23911 ;; This function uses a non-reentrant model
 23912 ;;
 23913                           
 23914                           	psect	text43
 23915  01B9C4                     __ptext43:
 23916                           	opt stack 0
 23917  01B9C4                     _RefreshLine1:
 23918                           	opt stack 14
 23919                           
 23920                           ;LCD.c: 9: RefreshLine1Ex(&dispbuf1);
 23921                           
 23922                           ; BSR set to: 1
 23923                           ;incstack = 0
 23924  01B9C4  0102               	movlb	2	; () banked
 23925  01B9C6  0E02               	movlw	high _dispbuf1
 23926  01B9C8  0101               	movlb	1	; () banked
 23927  01B9CA  6F04               	movwf	(RefreshLine1Ex@line+1)& (0+255),b
 23928  01B9CC  0102               	movlb	2	; () banked
 23929  01B9CE  0E8B               	movlw	low _dispbuf1
 23930  01B9D0  0101               	movlb	1	; () banked
 23931  01B9D2  6F03               	movwf	RefreshLine1Ex@line& (0+255),b
 23932  01B9D4  ECCB  F0DC         	call	_RefreshLine1Ex	;wreg free
 23933  01B9D8  0012               	return	
 23934  01B9DA                     __end_of_RefreshLine1:
 23935                           	opt stack 0
 23936                           tblptru	equ	0xFF8
 23937                           tblptrh	equ	0xFF7
 23938                           tblptrl	equ	0xFF6
 23939                           tablat	equ	0xFF5
 23940                           prodh	equ	0xFF4
 23941                           prodl	equ	0xFF3
 23942                           intcon	equ	0xFF2
 23943                           indf0	equ	0xFEF
 23944                           postinc0	equ	0xFEE
 23945                           fsr0h	equ	0xFEA
 23946                           fsr0l	equ	0xFE9
 23947                           wreg	equ	0xFE8
 23948                           indf1	equ	0xFE7
 23949                           postinc1	equ	0xFE6
 23950                           postdec1	equ	0xFE5
 23951                           fsr1h	equ	0xFE2
 23952                           fsr1l	equ	0xFE1
 23953                           indf2	equ	0xFDF
 23954                           postinc2	equ	0xFDE
 23955                           postdec2	equ	0xFDD
 23956                           fsr2h	equ	0xFDA
 23957                           fsr2l	equ	0xFD9
 23958                           status	equ	0xFD8
 23959                           
 23960 ;; *************** function _RefreshLine1Ex *****************
 23961 ;; Defined at:
 23962 ;;		line 18 in file "LCD.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  line            2    3[BANK1 ] PTR const unsigned char 
 23965 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
 23966 ;;		 -> STR_2(17), dispbuf1(17), 
 23967 ;; Auto vars:     Size  Location     Type
 23968 ;;		None
 23969 ;; Return value:  Size  Location     Type
 23970 ;;		None               void
 23971 ;; Registers used:
 23972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/0
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 23978 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23981 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23982 ;;Total ram usage:        2 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:   13
 23985 ;; This function calls:
 23986 ;;		_PutsSLCD
 23987 ;;		_SLCDSetDDRamAddr
 23988 ;; This function is called by:
 23989 ;;		_RefreshLine1
 23990 ;;		_SaveToFlash
 23991 ;; This function uses a non-reentrant model
 23992 ;;
 23993                           
 23994                           	psect	text44
 23995  01B996                     __ptext44:
 23996                           	opt stack 0
 23997  01B996                     _RefreshLine1Ex:
 23998                           	opt stack 14
 23999                           
 24000                           ;LCD.c: 20: SLCDSetDDRamAddr(0x00);
 24001                           
 24002                           ;incstack = 0
 24003  01B996  0E00               	movlw	0
 24004  01B998  ECB2  F0DC         	call	_SLCDSetDDRamAddr
 24005                           
 24006                           ;LCD.c: 21: PutsSLCD(line);
 24007  01B99C  0101               	movlb	1	; () banked
 24008  01B99E  C104  F102         	movff	RefreshLine1Ex@line+1,PutsSLCD@buffer+1
 24009  01B9A2  0101               	movlb	1	; () banked
 24010  01B9A4  C103  F101         	movff	RefreshLine1Ex@line,PutsSLCD@buffer
 24011  01B9A8  EC05  F0D6         	call	_PutsSLCD	;wreg free
 24012  01B9AC  0012               	return	
 24013  01B9AE                     __end_of_RefreshLine1Ex:
 24014                           	opt stack 0
 24015                           tblptru	equ	0xFF8
 24016                           tblptrh	equ	0xFF7
 24017                           tblptrl	equ	0xFF6
 24018                           tablat	equ	0xFF5
 24019                           prodh	equ	0xFF4
 24020                           prodl	equ	0xFF3
 24021                           intcon	equ	0xFF2
 24022                           indf0	equ	0xFEF
 24023                           postinc0	equ	0xFEE
 24024                           fsr0h	equ	0xFEA
 24025                           fsr0l	equ	0xFE9
 24026                           wreg	equ	0xFE8
 24027                           indf1	equ	0xFE7
 24028                           postinc1	equ	0xFE6
 24029                           postdec1	equ	0xFE5
 24030                           fsr1h	equ	0xFE2
 24031                           fsr1l	equ	0xFE1
 24032                           indf2	equ	0xFDF
 24033                           postinc2	equ	0xFDE
 24034                           postdec2	equ	0xFDD
 24035                           fsr2h	equ	0xFDA
 24036                           fsr2l	equ	0xFD9
 24037                           status	equ	0xFD8
 24038                           
 24039 ;; *************** function _PutsSLCD *****************
 24040 ;; Defined at:
 24041 ;;		line 16 in file "SLCD/putsslcd.c"
 24042 ;; Parameters:    Size  Location     Type
 24043 ;;  buffer          2    1[BANK1 ] PTR const unsigned char 
 24044 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 24045 ;;		 -> STR_9(17), STR_8(17), STR_6(17), STR_5(17), 
 24046 ;;		 -> STR_4(17), STR_3(17), STR_2(17), dispbuf2(17), 
 24047 ;;		 -> dispbuf1(17), 
 24048 ;; Auto vars:     Size  Location     Type
 24049 ;;		None
 24050 ;; Return value:  Size  Location     Type
 24051 ;;		None               void
 24052 ;; Registers used:
 24053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24054 ;; Tracked objects:
 24055 ;;		On entry : 0/0
 24056 ;;		On exit  : 0/0
 24057 ;;		Unchanged: 0/0
 24058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 24059 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24062 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24063 ;;Total ram usage:        2 bytes
 24064 ;; Hardware stack levels used:    1
 24065 ;; Hardware stack levels required when called:   12
 24066 ;; This function calls:
 24067 ;;		_BusySLCD
 24068 ;;		_WriteDataSLCD
 24069 ;; This function is called by:
 24070 ;;		_RefreshLine1Ex
 24071 ;;		_RefreshLine2Ex
 24072 ;; This function uses a non-reentrant model
 24073 ;;
 24074                           
 24075                           	psect	text45
 24076  01AC0A                     __ptext45:
 24077                           	opt stack 0
 24078  01AC0A                     _PutsSLCD:
 24079                           	opt stack 15
 24080                           
 24081                           ;putsslcd.c: 18: while(*buffer)
 24082                           
 24083                           ;incstack = 0
 24084  01AC0A  D01D               	goto	l10492
 24085  01AC0C                     l10486:
 24086  01AC0C  EC26  F0DC         	call	_BusySLCD	;wreg free
 24087  01AC10  0900               	iorlw	0
 24088  01AC12  A4D8               	btfss	status,2,c
 24089  01AC14  D7FB               	goto	l10486
 24090                           
 24091                           ;putsslcd.c: 21: WriteDataSLCD(*buffer);
 24092  01AC16  0101               	movlb	1	; () banked
 24093  01AC18  C101  FFF6         	movff	PutsSLCD@buffer,tblptrl
 24094  01AC1C  0101               	movlb	1	; () banked
 24095  01AC1E  C102  FFF7         	movff	PutsSLCD@buffer+1,tblptrh
 24096  01AC22  0E00               	movlw	low (__mediumconst shr (0+16))
 24097  01AC24  6EF8               	movwf	tblptru,c
 24098  01AC26  0E0F               	movlw	(high __ramtop+-1)
 24099  01AC28  64F7               	cpfsgt	tblptrh,c
 24100  01AC2A  D003               	bra	u11027
 24101  01AC2C  0008               	tblrd		*
 24102  01AC2E  50F5               	movf	tablat,w,c
 24103  01AC30  D005               	bra	u11020
 24104  01AC32                     u11027:
 24105  01AC32  CFF6 FFE9          	movff	tblptrl,fsr0l
 24106  01AC36  CFF7 FFEA          	movff	tblptrh,fsr0h
 24107  01AC3A  50EF               	movf	indf0,w,c
 24108  01AC3C                     u11020:
 24109  01AC3C  EC15  F0DC         	call	_WriteDataSLCD
 24110                           
 24111                           ;putsslcd.c: 22: buffer++;
 24112  01AC40  0101               	movlb	1	; () banked
 24113  01AC42  4B01               	infsnz	PutsSLCD@buffer& (0+255),f,b
 24114  01AC44  2B02               	incf	(PutsSLCD@buffer+1)& (0+255),f,b
 24115  01AC46                     l10492:
 24116  01AC46  0101               	movlb	1	; () banked
 24117  01AC48  C101  FFF6         	movff	PutsSLCD@buffer,tblptrl
 24118  01AC4C  0101               	movlb	1	; () banked
 24119  01AC4E  C102  FFF7         	movff	PutsSLCD@buffer+1,tblptrh
 24120  01AC52  0E00               	movlw	low (__mediumconst shr (0+16))
 24121  01AC54  6EF8               	movwf	tblptru,c
 24122  01AC56  0E0F               	movlw	(high __ramtop+-1)
 24123  01AC58  64F7               	cpfsgt	tblptrh,c
 24124  01AC5A  D003               	bra	u11037
 24125  01AC5C  0008               	tblrd		*
 24126  01AC5E  50F5               	movf	tablat,w,c
 24127  01AC60  D005               	bra	u11030
 24128  01AC62                     u11037:
 24129  01AC62  CFF6 FFE9          	movff	tblptrl,fsr0l
 24130  01AC66  CFF7 FFEA          	movff	tblptrh,fsr0h
 24131  01AC6A  50EF               	movf	indf0,w,c
 24132  01AC6C                     u11030:
 24133  01AC6C  0900               	iorlw	0
 24134  01AC6E  B4D8               	btfsc	status,2,c
 24135                           
 24136                           ;putsslcd.c: 23: }
 24137                           ;putsslcd.c: 24: return;
 24138  01AC70  0012               	return	
 24139  01AC72  D7CC               	goto	l10486
 24140  01AC74                     __end_of_PutsSLCD:
 24141                           	opt stack 0
 24142                           tblptru	equ	0xFF8
 24143                           tblptrh	equ	0xFF7
 24144                           tblptrl	equ	0xFF6
 24145                           tablat	equ	0xFF5
 24146                           prodh	equ	0xFF4
 24147                           prodl	equ	0xFF3
 24148                           intcon	equ	0xFF2
 24149                           indf0	equ	0xFEF
 24150                           postinc0	equ	0xFEE
 24151                           fsr0h	equ	0xFEA
 24152                           fsr0l	equ	0xFE9
 24153                           wreg	equ	0xFE8
 24154                           indf1	equ	0xFE7
 24155                           postinc1	equ	0xFE6
 24156                           postdec1	equ	0xFE5
 24157                           fsr1h	equ	0xFE2
 24158                           fsr1l	equ	0xFE1
 24159                           indf2	equ	0xFDF
 24160                           postinc2	equ	0xFDE
 24161                           postdec2	equ	0xFDD
 24162                           fsr2h	equ	0xFDA
 24163                           fsr2l	equ	0xFD9
 24164                           status	equ	0xFD8
 24165                           
 24166 ;; *************** function _WriteDataSLCD *****************
 24167 ;; Defined at:
 24168 ;;		line 16 in file "SLCD/writdata.c"
 24169 ;; Parameters:    Size  Location     Type
 24170 ;;  data            1    wreg     unsigned char 
 24171 ;; Auto vars:     Size  Location     Type
 24172 ;;  data            1    0[BANK1 ] unsigned char 
 24173 ;; Return value:  Size  Location     Type
 24174 ;;		None               void
 24175 ;; Registers used:
 24176 ;;		wreg, status,2, cstack
 24177 ;; Tracked objects:
 24178 ;;		On entry : 0/0
 24179 ;;		On exit  : 0/0
 24180 ;;		Unchanged: 0/0
 24181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 24182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24183 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24185 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24186 ;;Total ram usage:        1 bytes
 24187 ;; Hardware stack levels used:    1
 24188 ;; Hardware stack levels required when called:   11
 24189 ;; This function calls:
 24190 ;;		_DelayFor18TCY
 24191 ;; This function is called by:
 24192 ;;		_PutsSLCD
 24193 ;;		_PutrsSLCD
 24194 ;; This function uses a non-reentrant model
 24195 ;;
 24196                           
 24197                           	psect	text46
 24198  01B82A                     __ptext46:
 24199                           	opt stack 0
 24200  01B82A                     _WriteDataSLCD:
 24201                           	opt stack 15
 24202                           
 24203                           ;incstack = 0
 24204                           ;WriteDataSLCD@data stored from wreg
 24205  01B82A  0101               	movlb	1	; () banked
 24206  01B82C  6F00               	movwf	WriteDataSLCD@data& (0+255),b
 24207                           
 24208                           ; BSR set to: 1
 24209                           ;writdata.c: 19: TRISC = 0;
 24210  01B82E  0E00               	movlw	0
 24211  01B830  6E94               	movwf	3988,c	;volatile
 24212                           
 24213                           ; BSR set to: 1
 24214                           ;writdata.c: 20: LATC = data;
 24215  01B832  C100  FF8B         	movff	WriteDataSLCD@data,3979	;volatile
 24216                           
 24217                           ; BSR set to: 1
 24218                           ;writdata.c: 22: LATAbits.LATA3 = 1;
 24219  01B836  8689               	bsf	3977,3,c	;volatile
 24220                           
 24221                           ; BSR set to: 1
 24222                           ;writdata.c: 23: LATAbits.LATA4 = 0;
 24223  01B838  9889               	bcf	3977,4,c	;volatile
 24224                           
 24225                           ; BSR set to: 1
 24226                           ;writdata.c: 24: DelayFor18TCY();
 24227  01B83A  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 24228                           
 24229                           ;writdata.c: 25: LATAbits.LATA5 = 1;
 24230  01B83E  8A89               	bsf	3977,5,c	;volatile
 24231                           
 24232                           ;writdata.c: 26: DelayFor18TCY();
 24233  01B840  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 24234                           
 24235                           ;writdata.c: 27: LATAbits.LATA5 = 0;
 24236  01B844  9A89               	bcf	3977,5,c	;volatile
 24237                           
 24238                           ;writdata.c: 28: LATAbits.LATA3 = 0;
 24239  01B846  9689               	bcf	3977,3,c	;volatile
 24240                           
 24241                           ;writdata.c: 29: TRISC = 0xff;
 24242  01B848  6894               	setf	3988,c	;volatile
 24243  01B84A  0012               	return	
 24244  01B84C                     __end_of_WriteDataSLCD:
 24245                           	opt stack 0
 24246                           tblptru	equ	0xFF8
 24247                           tblptrh	equ	0xFF7
 24248                           tblptrl	equ	0xFF6
 24249                           tablat	equ	0xFF5
 24250                           prodh	equ	0xFF4
 24251                           prodl	equ	0xFF3
 24252                           intcon	equ	0xFF2
 24253                           indf0	equ	0xFEF
 24254                           postinc0	equ	0xFEE
 24255                           fsr0h	equ	0xFEA
 24256                           fsr0l	equ	0xFE9
 24257                           wreg	equ	0xFE8
 24258                           indf1	equ	0xFE7
 24259                           postinc1	equ	0xFE6
 24260                           postdec1	equ	0xFE5
 24261                           fsr1h	equ	0xFE2
 24262                           fsr1l	equ	0xFE1
 24263                           indf2	equ	0xFDF
 24264                           postinc2	equ	0xFDE
 24265                           postdec2	equ	0xFDD
 24266                           fsr2h	equ	0xFDA
 24267                           fsr2l	equ	0xFD9
 24268                           status	equ	0xFD8
 24269                           
 24270 ;; *************** function _StackTask *****************
 24271 ;; Defined at:
 24272 ;;		line 203 in file "../tcpip/stack_task.c"
 24273 ;; Parameters:    Size  Location     Type
 24274 ;;		None
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;  tempLocalIP     4  173[BANK1 ] struct .
 24277 ;;  dataCount       2  171[BANK1 ] unsigned int 
 24278 ;;  cFrameType      1  178[BANK1 ] unsigned char 
 24279 ;;  cIPFrameType    1  177[BANK1 ] unsigned char 
 24280 ;; Return value:  Size  Location     Type
 24281 ;;		None               void
 24282 ;; Registers used:
 24283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24284 ;; Tracked objects:
 24285 ;;		On entry : 0/0
 24286 ;;		On exit  : 0/0
 24287 ;;		Unchanged: 0/0
 24288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 24289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24290 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24292 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24293 ;;Total ram usage:        8 bytes
 24294 ;; Hardware stack levels used:    1
 24295 ;; Hardware stack levels required when called:   17
 24296 ;; This function calls:
 24297 ;;		_ARPProcess
 24298 ;;		_IPGetHeader
 24299 ;;		_MACGetHeader
 24300 ;;		_TCPProcess
 24301 ;;		_TCPTick
 24302 ;; This function is called by:
 24303 ;;		_main
 24304 ;; This function uses a non-reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text47
 24308  019B16                     __ptext47:
 24309                           	opt stack 0
 24310  019B16                     _StackTask:
 24311                           	opt stack 13
 24312                           
 24313                           ;stack_task.c: 205: uint16_t dataCount;
 24314                           ;stack_task.c: 206: TCPIP_UINT32_VAL tempLocalIP;
 24315                           ;stack_task.c: 207: uint8_t cFrameType;
 24316                           ;stack_task.c: 208: uint8_t cIPFrameType;
 24317                           ;stack_task.c: 295: TCPTick();
 24318                           
 24319                           ;incstack = 0
 24320  019B16  EC19  F08C         	call	_TCPTick	;wreg free
 24321  019B1A                     l14902:
 24322                           
 24323                           ;stack_task.c: 304: {
 24324                           ;stack_task.c: 319: if(!MACGetHeader(&remoteNode.MACAddr, &cFrameType))
 24325  019B1A  0102               	movlb	2	; () banked
 24326  019B1C  0E02               	movlw	high (_remoteNode+4)
 24327  019B1E  0101               	movlb	1	; () banked
 24328  019B20  6F1F               	movwf	(MACGetHeader@remote+1)& (0+255),b
 24329  019B22  0102               	movlb	2	; () banked
 24330  019B24  0ECD               	movlw	low (_remoteNode+4)
 24331  019B26  0101               	movlb	1	; () banked
 24332  019B28  6F1E               	movwf	MACGetHeader@remote& (0+255),b
 24333  019B2A  0101               	movlb	1	; () banked
 24334  019B2C  0E01               	movlw	high StackTask@cFrameType
 24335  019B2E  0101               	movlb	1	; () banked
 24336  019B30  6F21               	movwf	(MACGetHeader@type+1)& (0+255),b
 24337  019B32  0101               	movlb	1	; () banked
 24338  019B34  0EB2               	movlw	low StackTask@cFrameType
 24339  019B36  0101               	movlb	1	; () banked
 24340  019B38  6F20               	movwf	MACGetHeader@type& (0+255),b
 24341  019B3A  ECCC  F0C3         	call	_MACGetHeader	;wreg free
 24342  019B3E  0900               	iorlw	0
 24343  019B40  B4D8               	btfsc	status,2,c
 24344  019B42  0012               	return	
 24345  019B44  D044               	goto	l14918
 24346  019B46                     l14906:
 24347                           
 24348                           ;stack_task.c: 336: ARPProcess();
 24349  019B46  ECBC  F0BF         	call	_ARPProcess	;wreg free
 24350                           
 24351                           ;stack_task.c: 337: break;
 24352  019B4A  D7E7               	goto	l14902
 24353  019B4C                     l14908:
 24354                           
 24355                           ;stack_task.c: 340: if(!IPGetHeader(&tempLocalIP, &remoteNode, &cIPFrameType, &dataCount
      +                          ))
 24356  019B4C  0101               	movlb	1	; () banked
 24357  019B4E  0E01               	movlw	high StackTask@tempLocalIP
 24358  019B50  0101               	movlb	1	; () banked
 24359  019B52  6F33               	movwf	(IPGetHeader@localIP+1)& (0+255),b
 24360  019B54  0101               	movlb	1	; () banked
 24361  019B56  0EAD               	movlw	low StackTask@tempLocalIP
 24362  019B58  0101               	movlb	1	; () banked
 24363  019B5A  6F32               	movwf	IPGetHeader@localIP& (0+255),b
 24364  019B5C  0102               	movlb	2	; () banked
 24365  019B5E  0E02               	movlw	high _remoteNode
 24366  019B60  0101               	movlb	1	; () banked
 24367  019B62  6F35               	movwf	(IPGetHeader@remote+1)& (0+255),b
 24368  019B64  0102               	movlb	2	; () banked
 24369  019B66  0EC9               	movlw	low _remoteNode
 24370  019B68  0101               	movlb	1	; () banked
 24371  019B6A  6F34               	movwf	IPGetHeader@remote& (0+255),b
 24372  019B6C  0101               	movlb	1	; () banked
 24373  019B6E  0E01               	movlw	high StackTask@cIPFrameType
 24374  019B70  0101               	movlb	1	; () banked
 24375  019B72  6F37               	movwf	(IPGetHeader@protocol+1)& (0+255),b
 24376  019B74  0101               	movlb	1	; () banked
 24377  019B76  0EB1               	movlw	low StackTask@cIPFrameType
 24378  019B78  0101               	movlb	1	; () banked
 24379  019B7A  6F36               	movwf	IPGetHeader@protocol& (0+255),b
 24380  019B7C  0101               	movlb	1	; () banked
 24381  019B7E  0E01               	movlw	high StackTask@dataCount
 24382  019B80  0101               	movlb	1	; () banked
 24383  019B82  6F39               	movwf	(IPGetHeader@len+1)& (0+255),b
 24384  019B84  0101               	movlb	1	; () banked
 24385  019B86  0EAB               	movlw	low StackTask@dataCount
 24386  019B88  0101               	movlb	1	; () banked
 24387  019B8A  6F38               	movwf	IPGetHeader@len& (0+255),b
 24388  019B8C  EC5D  F0BC         	call	_IPGetHeader	;wreg free
 24389  019B90  0900               	iorlw	0
 24390  019B92  B4D8               	btfsc	status,2,c
 24391  019B94  D7C2               	goto	l14902
 24392                           
 24393                           ;stack_task.c: 378: if(cIPFrameType == (6u))
 24394                           
 24395                           ;stack_task.c: 341: break;
 24396  019B96  0101               	movlb	1	; () banked
 24397  019B98  51B1               	movf	StackTask@cIPFrameType& (0+255),w,b
 24398  019B9A  0A06               	xorlw	6
 24399  019B9C  A4D8               	btfss	status,2,c
 24400  019B9E  D7BD               	goto	l14902
 24401                           
 24402                           ; BSR set to: 1
 24403                           ;stack_task.c: 379: {
 24404                           ;stack_task.c: 380: TCPProcess(&remoteNode, &tempLocalIP, dataCount);
 24405  019BA0  0102               	movlb	2	; () banked
 24406  019BA2  0E02               	movlw	high _remoteNode
 24407  019BA4  0101               	movlb	1	; () banked
 24408  019BA6  6F7F               	movwf	(TCPProcess@remote+1)& (0+255),b
 24409  019BA8  0102               	movlb	2	; () banked
 24410  019BAA  0EC9               	movlw	low _remoteNode
 24411  019BAC  0101               	movlb	1	; () banked
 24412  019BAE  6F7E               	movwf	TCPProcess@remote& (0+255),b
 24413  019BB0  0101               	movlb	1	; () banked
 24414  019BB2  0E01               	movlw	high StackTask@tempLocalIP
 24415  019BB4  0101               	movlb	1	; () banked
 24416  019BB6  6F81               	movwf	(TCPProcess@localIP+1)& (0+255),b
 24417  019BB8  0101               	movlb	1	; () banked
 24418  019BBA  0EAD               	movlw	low StackTask@tempLocalIP
 24419  019BBC  0101               	movlb	1	; () banked
 24420  019BBE  6F80               	movwf	TCPProcess@localIP& (0+255),b
 24421  019BC0  C1AB  F182         	movff	StackTask@dataCount,TCPProcess@len
 24422  019BC4  C1AC  F183         	movff	StackTask@dataCount+1,TCPProcess@len+1
 24423  019BC8  EC37  F0B5         	call	_TCPProcess	;wreg free
 24424                           
 24425                           ;stack_task.c: 381: break;
 24426  019BCC  D7A6               	goto	l14902
 24427  019BCE                     l14918:
 24428  019BCE  0101               	movlb	1	; () banked
 24429  019BD0  51B2               	movf	StackTask@cFrameType& (0+255),w,b
 24430                           
 24431                           ; Switch size 1, requested type "space"
 24432                           ; Number of cases is 2, Range of values is 0 to 6
 24433                           ; switch strategies available:
 24434                           ; Name         Instructions Cycles
 24435                           ; simple_byte            7     4 (average)
 24436                           ;	Chosen strategy is simple_byte
 24437  019BD2  0A00               	xorlw	0	; case 0
 24438  019BD4  B4D8               	btfsc	status,2,c
 24439  019BD6  D7BA               	goto	l14908
 24440  019BD8  0A06               	xorlw	6	; case 6
 24441  019BDA  B4D8               	btfsc	status,2,c
 24442  019BDC  D7B4               	goto	l14906
 24443  019BDE  D79D               	goto	l14902
 24444  019BE0                     __end_of_StackTask:
 24445                           	opt stack 0
 24446                           tblptru	equ	0xFF8
 24447                           tblptrh	equ	0xFF7
 24448                           tblptrl	equ	0xFF6
 24449                           tablat	equ	0xFF5
 24450                           prodh	equ	0xFF4
 24451                           prodl	equ	0xFF3
 24452                           intcon	equ	0xFF2
 24453                           indf0	equ	0xFEF
 24454                           postinc0	equ	0xFEE
 24455                           fsr0h	equ	0xFEA
 24456                           fsr0l	equ	0xFE9
 24457                           wreg	equ	0xFE8
 24458                           indf1	equ	0xFE7
 24459                           postinc1	equ	0xFE6
 24460                           postdec1	equ	0xFE5
 24461                           fsr1h	equ	0xFE2
 24462                           fsr1l	equ	0xFE1
 24463                           indf2	equ	0xFDF
 24464                           postinc2	equ	0xFDE
 24465                           postdec2	equ	0xFDD
 24466                           fsr2h	equ	0xFDA
 24467                           fsr2l	equ	0xFD9
 24468                           status	equ	0xFD8
 24469                           
 24470 ;; *************** function _TCPTick *****************
 24471 ;; Defined at:
 24472 ;;		line 2323 in file "../tcpip/tcp.c"
 24473 ;; Parameters:    Size  Location     Type
 24474 ;;		None
 24475 ;; Auto vars:     Size  Location     Type
 24476 ;;  w               2  103[BANK1 ] unsigned int 
 24477 ;;  vFlags          1  102[BANK1 ] unsigned char 
 24478 ;;  hTCP            1  101[BANK1 ] unsigned char 
 24479 ;;  bRetransmit     1  100[BANK1 ] unsigned char 
 24480 ;;  bCloseSocket    1   99[BANK1 ] unsigned char 
 24481 ;; Return value:  Size  Location     Type
 24482 ;;		None               void
 24483 ;; Registers used:
 24484 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24485 ;; Tracked objects:
 24486 ;;		On entry : 0/0
 24487 ;;		On exit  : 0/0
 24488 ;;		Unchanged: 0/0
 24489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 24490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24491 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24492 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24493 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24494 ;;Total ram usage:       18 bytes
 24495 ;; Hardware stack levels used:    1
 24496 ;; Hardware stack levels required when called:   16
 24497 ;; This function calls:
 24498 ;;		_ARPIsResolved
 24499 ;;		_ARPResolve
 24500 ;;		_CloseSocket
 24501 ;;		_MACIsTxReady
 24502 ;;		_SendTCP
 24503 ;;		_SyncTCB
 24504 ;;		_SyncTCBStub
 24505 ;;		_TCPDisconnect
 24506 ;;		_TCPRAMCopy
 24507 ;;		_TickGet
 24508 ;;		_TickGetDiv256
 24509 ;;		___wmul
 24510 ;;		_memcpy
 24511 ;; This function is called by:
 24512 ;;		_StackTask
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516                           	psect	text48
 24517  011832                     __ptext48:
 24518                           	opt stack 0
 24519  011832                     _TCPTick:
 24520                           	opt stack 13
 24521                           
 24522                           ;tcp.c: 2325: TCP_SOCKET hTCP;
 24523                           ;tcp.c: 2326: bool bRetransmit;
 24524                           ;tcp.c: 2327: bool bCloseSocket;
 24525                           ;tcp.c: 2328: uint8_t vFlags;
 24526                           ;tcp.c: 2329: uint16_t w;
 24527                           ;tcp.c: 2332: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitial
      +                          izer[0])); hTCP++)
 24528                           
 24529                           ;incstack = 0
 24530  011832  0E00               	movlw	0
 24531  011834  0101               	movlb	1	; () banked
 24532  011836  6F65               	movwf	TCPTick@hTCP& (0+255),b
 24533  011838  0101               	movlb	1	; () banked
 24534  01183A  5165               	movf	TCPTick@hTCP& (0+255),w,b
 24535  01183C  A4D8               	btfss	status,2,c
 24536  01183E  EF9D  F090         	goto	l14340
 24537                           
 24538                           ; BSR set to: 1
 24539                           ;tcp.c: 2333: {
 24540                           ;tcp.c: 2334: SyncTCBStub(hTCP);
 24541                           
 24542                           ; BSR set to: 1
 24543                           
 24544                           ; BSR set to: 1
 24545  011842  0101               	movlb	1	; () banked
 24546  011844  5165               	movf	TCPTick@hTCP& (0+255),w,b
 24547  011846  EC30  F0D0         	call	_SyncTCBStub
 24548                           
 24549                           ;tcp.c: 2353: vFlags = 0x00;
 24550  01184A  0E00               	movlw	0
 24551  01184C  0101               	movlb	1	; () banked
 24552  01184E  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24553                           
 24554                           ; BSR set to: 1
 24555                           ;tcp.c: 2354: bRetransmit = 0;
 24556  011850  0E00               	movlw	0
 24557  011852  0101               	movlb	1	; () banked
 24558  011854  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 24559                           
 24560                           ; BSR set to: 1
 24561                           ;tcp.c: 2355: bCloseSocket = 0;
 24562  011856  0E00               	movlw	0
 24563  011858  0101               	movlb	1	; () banked
 24564  01185A  6F63               	movwf	TCPTick@bCloseSocket& (0+255),b
 24565                           
 24566                           ; BSR set to: 1
 24567                           ;tcp.c: 2358: if(MyTCBStub.Flags.bTXASAP || MyTCBStub.Flags.bTXASAPWithoutTimerReset)
 24568  01185C  0101               	movlb	1	; () banked
 24569  01185E  B3F8               	btfsc	(_MyTCBStub+24)& (0+255),1,b
 24570  011860  D003               	goto	l14158
 24571                           
 24572                           ; BSR set to: 1
 24573  011862  0101               	movlb	1	; () banked
 24574  011864  A5F8               	btfss	(_MyTCBStub+24)& (0+255),2,b
 24575  011866  D00E               	goto	l14164
 24576  011868                     l14158:
 24577                           
 24578                           ; BSR set to: 1
 24579                           ;tcp.c: 2359: {
 24580                           ;tcp.c: 2360: if(MACIsTxReady())
 24581  011868  ECBE  F0D7         	call	_MACIsTxReady	;wreg free
 24582  01186C  0900               	iorlw	0
 24583  01186E  B4D8               	btfsc	status,2,c
 24584  011870  D009               	goto	l14164
 24585                           
 24586                           ;tcp.c: 2361: {
 24587                           ;tcp.c: 2362: vFlags = (0x10);
 24588  011872  0E10               	movlw	16
 24589  011874  0101               	movlb	1	; () banked
 24590  011876  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24591                           
 24592                           ; BSR set to: 1
 24593                           ;tcp.c: 2363: bRetransmit = MyTCBStub.Flags.bTXASAPWithoutTimerReset;
 24594  011878  0E00               	movlw	0
 24595  01187A  0101               	movlb	1	; () banked
 24596  01187C  B5F8               	btfsc	(_MyTCBStub+24)& (0+255),2,b
 24597  01187E  0E01               	movlw	1
 24598  011880  0101               	movlb	1	; () banked
 24599  011882  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 24600  011884                     l14164:
 24601                           
 24602                           ;tcp.c: 2364: }
 24603                           ;tcp.c: 2365: }
 24604                           ;tcp.c: 2368: if(MyTCBStub.Flags.bTimer2Enabled)
 24605  011884  0101               	movlb	1	; () banked
 24606  011886  ABF7               	btfss	(_MyTCBStub+23)& (0+255),5,b
 24607  011888  D025               	goto	l14170
 24608                           
 24609                           ; BSR set to: 1
 24610                           ;tcp.c: 2369: {
 24611                           ;tcp.c: 2371: if((int16_t)(MyTCBStub.eventTime2 - (uint16_t)TickGetDiv256()) <= (int16_t
      +                          )0)
 24612  01188A  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 24613  01188E  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 24614  011892  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 24615  011896  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 24616  01189A  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 24617  01189E  0101               	movlb	1	; () banked
 24618  0118A0  1F57               	comf	??_TCPTick& (0+255),f,b
 24619  0118A2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24620  0118A4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24621  0118A6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24622  0118A8  0101               	movlb	1	; () banked
 24623  0118AA  51F2               	movf	(_MyTCBStub+18)& (0+255),w,b
 24624  0118AC  0101               	movlb	1	; () banked
 24625  0118AE  2757               	addwf	??_TCPTick& (0+255),f,b
 24626  0118B0  0101               	movlb	1	; () banked
 24627  0118B2  51F3               	movf	(_MyTCBStub+19)& (0+255),w,b
 24628  0118B4  0101               	movlb	1	; () banked
 24629  0118B6  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24630  0118B8  0101               	movlb	1	; () banked
 24631  0118BA  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 24632  0118BC  0A80               	xorlw	128
 24633  0118BE  6EF3               	movwf	prodl,c
 24634  0118C0  0E80               	movlw	128
 24635  0118C2  5CF3               	subwf	prodl,w,c
 24636  0118C4  0E01               	movlw	1
 24637  0118C6  B4D8               	btfsc	status,2,c
 24638  0118C8  5D57               	subwf	??_TCPTick& (0+255),w,b
 24639  0118CA  B0D8               	btfsc	status,0,c
 24640  0118CC  D003               	goto	l14170
 24641                           
 24642                           ; BSR set to: 1
 24643                           ;tcp.c: 2372: vFlags = (0x10);
 24644  0118CE  0E10               	movlw	16
 24645  0118D0  0101               	movlb	1	; () banked
 24646  0118D2  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24647  0118D4                     l14170:
 24648                           
 24649                           ; BSR set to: 1
 24650                           ;tcp.c: 2373: }
 24651                           ;tcp.c: 2376: if(MyTCBStub.Flags.bDelayedACKTimerEnabled)
 24652  0118D4  0101               	movlb	1	; () banked
 24653  0118D6  ADF7               	btfss	(_MyTCBStub+23)& (0+255),6,b
 24654  0118D8  D025               	goto	l14176
 24655                           
 24656                           ; BSR set to: 1
 24657                           ;tcp.c: 2377: {
 24658                           ;tcp.c: 2379: if((int16_t)(MyTCBStub.OverlappedTimers.delayedACKTime - (uint16_t)TickGet
      +                          Div256()) <= (int16_t)0)
 24659  0118DA  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 24660  0118DE  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 24661  0118E2  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 24662  0118E6  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 24663  0118EA  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 24664  0118EE  0101               	movlb	1	; () banked
 24665  0118F0  1F57               	comf	??_TCPTick& (0+255),f,b
 24666  0118F2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24667  0118F4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24668  0118F6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24669  0118F8  0101               	movlb	1	; () banked
 24670  0118FA  51F4               	movf	(_MyTCBStub+20)& (0+255),w,b
 24671  0118FC  0101               	movlb	1	; () banked
 24672  0118FE  2757               	addwf	??_TCPTick& (0+255),f,b
 24673  011900  0101               	movlb	1	; () banked
 24674  011902  51F5               	movf	(_MyTCBStub+21)& (0+255),w,b
 24675  011904  0101               	movlb	1	; () banked
 24676  011906  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24677  011908  0101               	movlb	1	; () banked
 24678  01190A  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 24679  01190C  0A80               	xorlw	128
 24680  01190E  6EF3               	movwf	prodl,c
 24681  011910  0E80               	movlw	128
 24682  011912  5CF3               	subwf	prodl,w,c
 24683  011914  0E01               	movlw	1
 24684  011916  B4D8               	btfsc	status,2,c
 24685  011918  5D57               	subwf	??_TCPTick& (0+255),w,b
 24686  01191A  B0D8               	btfsc	status,0,c
 24687  01191C  D003               	goto	l14176
 24688                           
 24689                           ; BSR set to: 1
 24690                           ;tcp.c: 2380: vFlags = (0x10);
 24691  01191E  0E10               	movlw	16
 24692  011920  0101               	movlb	1	; () banked
 24693  011922  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24694  011924                     l14176:
 24695                           
 24696                           ; BSR set to: 1
 24697                           ;tcp.c: 2381: }
 24698                           ;tcp.c: 2384: if(MyTCBStub.smState == TCP_CLOSE_WAIT)
 24699  011924  0101               	movlb	1	; () banked
 24700  011926  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 24701  011928  0A0B               	xorlw	11
 24702  01192A  A4D8               	btfss	status,2,c
 24703  01192C  D028               	goto	l14182
 24704                           
 24705                           ; BSR set to: 1
 24706                           ;tcp.c: 2385: {
 24707                           ;tcp.c: 2388: if((int16_t)(MyTCBStub.OverlappedTimers.closeWaitTime - (uint16_t)TickGetD
      +                          iv256()) <= (int16_t)0)
 24708  01192E  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 24709  011932  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 24710  011936  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 24711  01193A  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 24712  01193E  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 24713  011942  0101               	movlb	1	; () banked
 24714  011944  1F57               	comf	??_TCPTick& (0+255),f,b
 24715  011946  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 24716  011948  4B57               	infsnz	??_TCPTick& (0+255),f,b
 24717  01194A  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 24718  01194C  0101               	movlb	1	; () banked
 24719  01194E  51F4               	movf	(_MyTCBStub+20)& (0+255),w,b
 24720  011950  0101               	movlb	1	; () banked
 24721  011952  2757               	addwf	??_TCPTick& (0+255),f,b
 24722  011954  0101               	movlb	1	; () banked
 24723  011956  51F5               	movf	(_MyTCBStub+21)& (0+255),w,b
 24724  011958  0101               	movlb	1	; () banked
 24725  01195A  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24726  01195C  0101               	movlb	1	; () banked
 24727  01195E  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 24728  011960  0A80               	xorlw	128
 24729  011962  6EF3               	movwf	prodl,c
 24730  011964  0E80               	movlw	128
 24731  011966  5CF3               	subwf	prodl,w,c
 24732  011968  0E01               	movlw	1
 24733  01196A  B4D8               	btfsc	status,2,c
 24734  01196C  5D57               	subwf	??_TCPTick& (0+255),w,b
 24735  01196E  B0D8               	btfsc	status,0,c
 24736  011970  D006               	goto	l14182
 24737                           
 24738                           ; BSR set to: 1
 24739                           ;tcp.c: 2389: {
 24740                           ;tcp.c: 2390: vFlags = (0x01) | (0x10);
 24741  011972  0E11               	movlw	17
 24742  011974  0101               	movlb	1	; () banked
 24743  011976  6F66               	movwf	TCPTick@vFlags& (0+255),b
 24744                           
 24745                           ;tcp.c: 2391: MyTCBStub.smState = TCP_LAST_ACK;
 24746  011978  0E0C               	movlw	12
 24747  01197A  0101               	movlb	1	; () banked
 24748  01197C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 24749  01197E                     l14182:
 24750                           
 24751                           ; BSR set to: 1
 24752                           ;tcp.c: 2392: }
 24753                           ;tcp.c: 2393: }
 24754                           ;tcp.c: 2397: if(MyTCBStub.smState == TCP_LISTEN)
 24755  01197E  0101               	movlb	1	; () banked
 24756  011980  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 24757  011982  0A04               	xorlw	4
 24758  011984  A4D8               	btfss	status,2,c
 24759  011986  D179               	goto	l14216
 24760                           
 24761                           ; BSR set to: 1
 24762                           ;tcp.c: 2398: {
 24763                           ;tcp.c: 2399: for(w = 0; w < (3u); w++)
 24764  011988  0E00               	movlw	0
 24765  01198A  0101               	movlb	1	; () banked
 24766  01198C  6F68               	movwf	(TCPTick@w+1)& (0+255),b
 24767  01198E  0E00               	movlw	0
 24768  011990  0101               	movlb	1	; () banked
 24769  011992  6F67               	movwf	TCPTick@w& (0+255),b
 24770  011994                     
 24771                           ; BSR set to: 1
 24772  011994  0E03               	movlw	3
 24773  011996  0101               	movlb	1	; () banked
 24774  011998  5D67               	subwf	TCPTick@w& (0+255),w,b
 24775  01199A  0E00               	movlw	0
 24776  01199C  0101               	movlb	1	; () banked
 24777  01199E  5968               	subwfb	(TCPTick@w+1)& (0+255),w,b
 24778  0119A0  B0D8               	btfsc	status,0,c
 24779  0119A2  D16B               	goto	l14216
 24780                           
 24781                           ; BSR set to: 1
 24782                           ;tcp.c: 2400: {
 24783                           ;tcp.c: 2402: if(SYNQueue[w].wDestPort == 0u)
 24784                           
 24785                           ; BSR set to: 1
 24786                           
 24787                           ; BSR set to: 1
 24788  0119A4  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24789  0119A8  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24790  0119AC  0E00               	movlw	0
 24791  0119AE  0101               	movlb	1	; () banked
 24792  0119B0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24793  0119B2  0E14               	movlw	20
 24794  0119B4  0101               	movlb	1	; () banked
 24795  0119B6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24796  0119B8  EC15  F0DA         	call	___wmul	;wreg free
 24797  0119BC  0E10               	movlw	16
 24798  0119BE  0101               	movlb	1	; () banked
 24799  0119C0  270E               	addwf	?___wmul& (0+255),f,b
 24800  0119C2  0E00               	movlw	0
 24801  0119C4  0101               	movlb	1	; () banked
 24802  0119C6  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24803  0119C8  0102               	movlb	2	; () banked
 24804  0119CA  0E00               	movlw	low _SYNQueue
 24805  0119CC  0101               	movlb	1	; () banked
 24806  0119CE  250E               	addwf	?___wmul& (0+255),w,b
 24807  0119D0  6ED9               	movwf	fsr2l,c
 24808  0119D2  0102               	movlb	2	; () banked
 24809  0119D4  0E02               	movlw	high _SYNQueue
 24810  0119D6  0101               	movlb	1	; () banked
 24811  0119D8  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24812  0119DA  6EDA               	movwf	fsr2h,c
 24813  0119DC  50DE               	movf	postinc2,w,c
 24814  0119DE  10DD               	iorwf	postdec2,w,c
 24815  0119E0  B4D8               	btfsc	status,2,c
 24816  0119E2  D14B               	goto	l14216
 24817                           
 24818                           ; BSR set to: 1
 24819                           ;tcp.c: 2409: if(SYNQueue[w].wDestPort == MyTCBStub.remoteHash.Val)
 24820                           
 24821                           ; BSR set to: 1
 24822                           
 24823                           ; BSR set to: 1
 24824                           ;tcp.c: 2403: break;
 24825  0119E4  0101               	movlb	1	; () banked
 24826  0119E6  EE21  F0F9         	lfsr	2,_MyTCBStub+25
 24827  0119EA  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24828  0119EE  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24829  0119F2  0E00               	movlw	0
 24830  0119F4  0101               	movlb	1	; () banked
 24831  0119F6  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24832  0119F8  0E14               	movlw	20
 24833  0119FA  0101               	movlb	1	; () banked
 24834  0119FC  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24835  0119FE  EC15  F0DA         	call	___wmul	;wreg free
 24836  011A02  0E10               	movlw	16
 24837  011A04  0101               	movlb	1	; () banked
 24838  011A06  270E               	addwf	?___wmul& (0+255),f,b
 24839  011A08  0E00               	movlw	0
 24840  011A0A  0101               	movlb	1	; () banked
 24841  011A0C  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24842  011A0E  0102               	movlb	2	; () banked
 24843  011A10  0E00               	movlw	low _SYNQueue
 24844  011A12  0101               	movlb	1	; () banked
 24845  011A14  250E               	addwf	?___wmul& (0+255),w,b
 24846  011A16  6EE1               	movwf	fsr1l,c
 24847  011A18  0102               	movlb	2	; () banked
 24848  011A1A  0E02               	movlw	high _SYNQueue
 24849  011A1C  0101               	movlb	1	; () banked
 24850  011A1E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24851  011A20  6EE2               	movwf	fsr1h,c
 24852  011A22  52E6               	movf	postinc1,f,c
 24853  011A24  52DE               	movf	postinc2,f,c
 24854  011A26  50DD               	movf	postdec2,w,c
 24855  011A28  18E5               	xorwf	postdec1,w,c
 24856  011A2A  CFDF FFE8          	movff	indf2,wreg
 24857  011A2E  B4D8               	btfsc	status,2,c
 24858  011A30  18E7               	xorwf	indf1,w,c
 24859  011A32  A4D8               	btfss	status,2,c
 24860  011A34  D11E               	goto	l14212
 24861                           
 24862                           ; BSR set to: 1
 24863                           ;tcp.c: 2411: {
 24864                           ;tcp.c: 2413: SyncTCB();
 24865  011A36  EC10  F0CB         	call	_SyncTCB	;wreg free
 24866                           
 24867                           ;tcp.c: 2422: memcpy((void*)&MyTCB.remote.niRemoteMACIP, (void*)&SYNQueue[w].niSourceAdd
      +                          ress, sizeof(NODE_INFO));
 24868  011A3A  0101               	movlb	1	; () banked
 24869  011A3C  0E01               	movlw	high (_MyTCB+22)
 24870  011A3E  0101               	movlb	1	; () banked
 24871  011A40  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 24872  011A42  0101               	movlb	1	; () banked
 24873  011A44  0ECF               	movlw	low (_MyTCB+22)
 24874  011A46  0101               	movlb	1	; () banked
 24875  011A48  6F14               	movwf	memcpy@d1& (0+255),b
 24876  011A4A  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24877  011A4E  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24878  011A52  0E00               	movlw	0
 24879  011A54  0101               	movlb	1	; () banked
 24880  011A56  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24881  011A58  0E14               	movlw	20
 24882  011A5A  0101               	movlb	1	; () banked
 24883  011A5C  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24884  011A5E  EC15  F0DA         	call	___wmul	;wreg free
 24885  011A62  0E00               	movlw	low _SYNQueue
 24886  011A64  0101               	movlb	1	; () banked
 24887  011A66  6F57               	movwf	??_TCPTick& (0+255),b
 24888  011A68  0E02               	movlw	high _SYNQueue
 24889  011A6A  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 24890  011A6C  0101               	movlb	1	; () banked
 24891  011A6E  510E               	movf	?___wmul& (0+255),w,b
 24892  011A70  0101               	movlb	1	; () banked
 24893  011A72  2757               	addwf	??_TCPTick& (0+255),f,b
 24894  011A74  0101               	movlb	1	; () banked
 24895  011A76  510F               	movf	(?___wmul+1)& (0+255),w,b
 24896  011A78  0101               	movlb	1	; () banked
 24897  011A7A  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 24898  011A7C  C157  F116         	movff	??_TCPTick,memcpy@s1
 24899  011A80  C158  F117         	movff	??_TCPTick+1,memcpy@s1+1
 24900  011A84  0E00               	movlw	0
 24901  011A86  0101               	movlb	1	; () banked
 24902  011A88  6F19               	movwf	(memcpy@n+1)& (0+255),b
 24903  011A8A  0E0A               	movlw	10
 24904  011A8C  0101               	movlb	1	; () banked
 24905  011A8E  6F18               	movwf	memcpy@n& (0+255),b
 24906  011A90  ECCF  F0D5         	call	_memcpy	;wreg free
 24907                           
 24908                           ;tcp.c: 2423: MyTCB.remotePort.Val = SYNQueue[w].wSourcePort;
 24909  011A94  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24910  011A98  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24911  011A9C  0E00               	movlw	0
 24912  011A9E  0101               	movlb	1	; () banked
 24913  011AA0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24914  011AA2  0E14               	movlw	20
 24915  011AA4  0101               	movlb	1	; () banked
 24916  011AA6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24917  011AA8  EC15  F0DA         	call	___wmul	;wreg free
 24918  011AAC  0E0A               	movlw	10
 24919  011AAE  0101               	movlb	1	; () banked
 24920  011AB0  270E               	addwf	?___wmul& (0+255),f,b
 24921  011AB2  0E00               	movlw	0
 24922  011AB4  0101               	movlb	1	; () banked
 24923  011AB6  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24924  011AB8  0102               	movlb	2	; () banked
 24925  011ABA  0E00               	movlw	low _SYNQueue
 24926  011ABC  0101               	movlb	1	; () banked
 24927  011ABE  250E               	addwf	?___wmul& (0+255),w,b
 24928  011AC0  6ED9               	movwf	fsr2l,c
 24929  011AC2  0102               	movlb	2	; () banked
 24930  011AC4  0E02               	movlw	high _SYNQueue
 24931  011AC6  0101               	movlb	1	; () banked
 24932  011AC8  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24933  011ACA  6EDA               	movwf	fsr2h,c
 24934  011ACC  0101               	movlb	1	; () banked
 24935  011ACE  CFDE F1C7          	movff	postinc2,_MyTCB+14
 24936  011AD2  0101               	movlb	1	; () banked
 24937  011AD4  CFDD F1C8          	movff	postdec2,_MyTCB+15
 24938                           
 24939                           ; BSR set to: 1
 24940                           ;tcp.c: 2424: MyTCB.RemoteSEQ = SYNQueue[w].dwSourceSEQ + 1;
 24941  011AD8  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 24942  011ADC  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 24943  011AE0  0E00               	movlw	0
 24944  011AE2  0101               	movlb	1	; () banked
 24945  011AE4  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 24946  011AE6  0E14               	movlw	20
 24947  011AE8  0101               	movlb	1	; () banked
 24948  011AEA  6F10               	movwf	___wmul@multiplicand& (0+255),b
 24949  011AEC  EC15  F0DA         	call	___wmul	;wreg free
 24950  011AF0  0E0C               	movlw	12
 24951  011AF2  0101               	movlb	1	; () banked
 24952  011AF4  270E               	addwf	?___wmul& (0+255),f,b
 24953  011AF6  0E00               	movlw	0
 24954  011AF8  0101               	movlb	1	; () banked
 24955  011AFA  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 24956  011AFC  0102               	movlb	2	; () banked
 24957  011AFE  0E00               	movlw	low _SYNQueue
 24958  011B00  0101               	movlb	1	; () banked
 24959  011B02  250E               	addwf	?___wmul& (0+255),w,b
 24960  011B04  6ED9               	movwf	fsr2l,c
 24961  011B06  0102               	movlb	2	; () banked
 24962  011B08  0E02               	movlw	high _SYNQueue
 24963  011B0A  0101               	movlb	1	; () banked
 24964  011B0C  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 24965  011B0E  6EDA               	movwf	fsr2h,c
 24966  011B10  CFDE F157          	movff	postinc2,??_TCPTick
 24967  011B14  CFDE F158          	movff	postinc2,??_TCPTick+1
 24968  011B18  CFDE F159          	movff	postinc2,??_TCPTick+2
 24969  011B1C  CFDE F15A          	movff	postinc2,??_TCPTick+3
 24970  011B20  0E01               	movlw	1
 24971  011B22  0101               	movlb	1	; () banked
 24972  011B24  2557               	addwf	??_TCPTick& (0+255),w,b
 24973  011B26  0101               	movlb	1	; () banked
 24974  011B28  6FC1               	movwf	(_MyTCB+8)& (0+255),b
 24975  011B2A  0E00               	movlw	0
 24976  011B2C  0101               	movlb	1	; () banked
 24977  011B2E  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 24978  011B30  0101               	movlb	1	; () banked
 24979  011B32  6FC2               	movwf	(_MyTCB+9)& (0+255),b
 24980  011B34  0E00               	movlw	0
 24981  011B36  0101               	movlb	1	; () banked
 24982  011B38  2159               	addwfc	(??_TCPTick+2)& (0+255),w,b
 24983  011B3A  0101               	movlb	1	; () banked
 24984  011B3C  6FC3               	movwf	(_MyTCB+10)& (0+255),b
 24985  011B3E  0E00               	movlw	0
 24986  011B40  0101               	movlb	1	; () banked
 24987  011B42  215A               	addwfc	(??_TCPTick+3)& (0+255),w,b
 24988  011B44  0101               	movlb	1	; () banked
 24989  011B46  6FC4               	movwf	(_MyTCB+11)& (0+255),b
 24990                           
 24991                           ; BSR set to: 1
 24992                           ;tcp.c: 2425: MyTCBStub.remoteHash.Val = (MyTCB.remote.niRemoteMACIP.IPAddr.w[1] + MyTCB
      +                          .remote.niRemoteMACIP.IPAddr.w[0] + MyTCB.remotePort.Val) ^ MyTCB.localPort.Val;
 24993  011B48  0101               	movlb	1	; () banked
 24994  011B4A  EE21  F0C7         	lfsr	2,_MyTCB+14
 24995  011B4E  CFDE F157          	movff	postinc2,??_TCPTick
 24996  011B52  CFDD F158          	movff	postdec2,??_TCPTick+1
 24997  011B56  0101               	movlb	1	; () banked
 24998  011B58  51D1               	movf	(_MyTCB+24)& (0+255),w,b
 24999  011B5A  0101               	movlb	1	; () banked
 25000  011B5C  2757               	addwf	??_TCPTick& (0+255),f,b
 25001  011B5E  0101               	movlb	1	; () banked
 25002  011B60  51D2               	movf	(_MyTCB+25)& (0+255),w,b
 25003  011B62  0101               	movlb	1	; () banked
 25004  011B64  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25005  011B66  0101               	movlb	1	; () banked
 25006  011B68  51CF               	movf	(_MyTCB+22)& (0+255),w,b
 25007  011B6A  0101               	movlb	1	; () banked
 25008  011B6C  2757               	addwf	??_TCPTick& (0+255),f,b
 25009  011B6E  0101               	movlb	1	; () banked
 25010  011B70  51D0               	movf	(_MyTCB+23)& (0+255),w,b
 25011  011B72  0101               	movlb	1	; () banked
 25012  011B74  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25013  011B76  0101               	movlb	1	; () banked
 25014  011B78  51C9               	movf	(_MyTCB+16)& (0+255),w,b
 25015  011B7A  0101               	movlb	1	; () banked
 25016  011B7C  1957               	xorwf	??_TCPTick& (0+255),w,b
 25017  011B7E  0101               	movlb	1	; () banked
 25018  011B80  6FF9               	movwf	(_MyTCBStub+25)& (0+255),b
 25019  011B82  0101               	movlb	1	; () banked
 25020  011B84  51CA               	movf	(_MyTCB+17)& (0+255),w,b
 25021  011B86  0101               	movlb	1	; () banked
 25022  011B88  1958               	xorwf	(??_TCPTick+1)& (0+255),w,b
 25023  011B8A  0101               	movlb	1	; () banked
 25024  011B8C  6FFA               	movwf	(_MyTCBStub+26)& (0+255),b
 25025                           
 25026                           ; BSR set to: 1
 25027                           ;tcp.c: 2426: vFlags = (0x02) | (0x10);
 25028  011B8E  0E12               	movlw	18
 25029  011B90  0101               	movlb	1	; () banked
 25030  011B92  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25031                           
 25032                           ; BSR set to: 1
 25033                           ;tcp.c: 2427: MyTCBStub.smState = TCP_SYN_RECEIVED;
 25034  011B94  0E06               	movlw	6
 25035  011B96  0101               	movlb	1	; () banked
 25036  011B98  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25037                           
 25038                           ; BSR set to: 1
 25039                           ;tcp.c: 2430: TCPRAMCopy((unsigned short)&SYNQueue[w], 1u, (unsigned short)&SYNQueue[w+1
      +                          ], 1u, ((3u)-1u-w)*sizeof(TCP_SYN_QUEUE));
 25040  011B9A  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 25041  011B9E  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 25042  011BA2  0E00               	movlw	0
 25043  011BA4  0101               	movlb	1	; () banked
 25044  011BA6  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25045  011BA8  0E14               	movlw	20
 25046  011BAA  0101               	movlb	1	; () banked
 25047  011BAC  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25048  011BAE  EC15  F0DA         	call	___wmul	;wreg free
 25049  011BB2  0102               	movlb	2	; () banked
 25050  011BB4  0E00               	movlw	low _SYNQueue
 25051  011BB6  0101               	movlb	1	; () banked
 25052  011BB8  250E               	addwf	?___wmul& (0+255),w,b
 25053  011BBA  0101               	movlb	1	; () banked
 25054  011BBC  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 25055  011BBE  0102               	movlb	2	; () banked
 25056  011BC0  0E02               	movlw	high _SYNQueue
 25057  011BC2  0101               	movlb	1	; () banked
 25058  011BC4  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 25059  011BC6  0101               	movlb	1	; () banked
 25060  011BC8  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 25061  011BCA  0E01               	movlw	1
 25062  011BCC  0101               	movlb	1	; () banked
 25063  011BCE  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 25064  011BD0  0E01               	movlw	1
 25065  011BD2  0101               	movlb	1	; () banked
 25066  011BD4  2567               	addwf	TCPTick@w& (0+255),w,b
 25067  011BD6  0101               	movlb	1	; () banked
 25068  011BD8  6F0E               	movwf	___wmul@multiplier& (0+255),b
 25069  011BDA  0E00               	movlw	0
 25070  011BDC  0101               	movlb	1	; () banked
 25071  011BDE  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 25072  011BE0  0101               	movlb	1	; () banked
 25073  011BE2  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 25074  011BE4  0E00               	movlw	0
 25075  011BE6  0101               	movlb	1	; () banked
 25076  011BE8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25077  011BEA  0E14               	movlw	20
 25078  011BEC  0101               	movlb	1	; () banked
 25079  011BEE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25080  011BF0  EC15  F0DA         	call	___wmul	;wreg free
 25081  011BF4  0102               	movlb	2	; () banked
 25082  011BF6  0E00               	movlw	low _SYNQueue
 25083  011BF8  0101               	movlb	1	; () banked
 25084  011BFA  250E               	addwf	?___wmul& (0+255),w,b
 25085  011BFC  0101               	movlb	1	; () banked
 25086  011BFE  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 25087  011C00  0102               	movlb	2	; () banked
 25088  011C02  0E02               	movlw	high _SYNQueue
 25089  011C04  0101               	movlb	1	; () banked
 25090  011C06  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 25091  011C08  0101               	movlb	1	; () banked
 25092  011C0A  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 25093  011C0C  0E01               	movlw	1
 25094  011C0E  0101               	movlb	1	; () banked
 25095  011C10  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 25096  011C12  0E01               	movlw	1
 25097  011C14  0101               	movlb	1	; () banked
 25098  011C16  2567               	addwf	TCPTick@w& (0+255),w,b
 25099  011C18  0101               	movlb	1	; () banked
 25100  011C1A  6F57               	movwf	??_TCPTick& (0+255),b
 25101  011C1C  0E00               	movlw	0
 25102  011C1E  0101               	movlb	1	; () banked
 25103  011C20  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 25104  011C22  0101               	movlb	1	; () banked
 25105  011C24  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 25106  011C26  0101               	movlb	1	; () banked
 25107  011C28  1F57               	comf	??_TCPTick& (0+255),f,b
 25108  011C2A  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25109  011C2C  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25110  011C2E  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25111  011C30  0E03               	movlw	3
 25112  011C32  0101               	movlb	1	; () banked
 25113  011C34  2557               	addwf	??_TCPTick& (0+255),w,b
 25114  011C36  0101               	movlb	1	; () banked
 25115  011C38  6F0E               	movwf	___wmul@multiplier& (0+255),b
 25116  011C3A  0E00               	movlw	0
 25117  011C3C  0101               	movlb	1	; () banked
 25118  011C3E  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 25119  011C40  0101               	movlb	1	; () banked
 25120  011C42  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 25121  011C44  0E00               	movlw	0
 25122  011C46  0101               	movlb	1	; () banked
 25123  011C48  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25124  011C4A  0E14               	movlw	20
 25125  011C4C  0101               	movlb	1	; () banked
 25126  011C4E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25127  011C50  EC15  F0DA         	call	___wmul	;wreg free
 25128  011C54  0101               	movlb	1	; () banked
 25129  011C56  C10E  F124         	movff	?___wmul,TCPRAMCopy@wLength
 25130  011C5A  0101               	movlb	1	; () banked
 25131  011C5C  C10F  F125         	movff	?___wmul+1,TCPRAMCopy@wLength+1
 25132  011C60  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 25133                           
 25134                           ;tcp.c: 2431: SYNQueue[(3u)-1].wDestPort = 0u;
 25135  011C64  0E00               	movlw	0
 25136  011C66  0102               	movlb	2	; () banked
 25137  011C68  6F39               	movwf	(_SYNQueue+57)& (0+255),b
 25138  011C6A  0E00               	movlw	0
 25139  011C6C  0102               	movlb	2	; () banked
 25140  011C6E  6F38               	movwf	(_SYNQueue+56)& (0+255),b
 25141                           
 25142                           ;tcp.c: 2433: break;
 25143  011C70  D004               	goto	l14216
 25144  011C72                     l14212:
 25145  011C72  0101               	movlb	1	; () banked
 25146  011C74  4B67               	infsnz	TCPTick@w& (0+255),f,b
 25147  011C76  2B68               	incf	(TCPTick@w+1)& (0+255),f,b
 25148  011C78  D68D               	goto	L23
 25149  011C7A                     l14216:
 25150                           
 25151                           ;tcp.c: 2434: }
 25152                           ;tcp.c: 2435: }
 25153                           ;tcp.c: 2436: }
 25154                           ;tcp.c: 2439: if(vFlags)
 25155  011C7A  0101               	movlb	1	; () banked
 25156  011C7C  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25157  011C7E  B4D8               	btfsc	status,2,c
 25158  011C80  D00D               	goto	l14220
 25159                           
 25160                           ; BSR set to: 1
 25161                           ;tcp.c: 2440: SendTCP(vFlags, bRetransmit ? 0 : 0x01);
 25162  011C82  0101               	movlb	1	; () banked
 25163  011C84  5164               	movf	TCPTick@bRetransmit& (0+255),w,b
 25164  011C86  A4D8               	btfss	status,2,c
 25165  011C88  D002               	goto	u16240
 25166  011C8A  0E01               	movlw	1
 25167  011C8C  D001               	goto	u16246
 25168  011C8E                     u16240:
 25169  011C8E  0E00               	movlw	0
 25170  011C90                     u16246:
 25171  011C90  0101               	movlb	1	; () banked
 25172  011C92  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25173  011C94  0101               	movlb	1	; () banked
 25174  011C96  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25175  011C98  ECC1  F096         	call	_SendTCP
 25176  011C9C                     l14220:
 25177                           
 25178                           ;tcp.c: 2444: if(!MyTCBStub.Flags.bTimerEnabled)
 25179  011C9C  0101               	movlb	1	; () banked
 25180  011C9E  B9F7               	btfsc	(_MyTCBStub+23)& (0+255),4,b
 25181  011CA0  D08E               	goto	l14246
 25182                           
 25183                           ; BSR set to: 1
 25184                           ;tcp.c: 2445: {
 25185                           ;tcp.c: 2448: if(MyTCBStub.smState == TCP_ESTABLISHED)
 25186  011CA2  0101               	movlb	1	; () banked
 25187  011CA4  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 25188  011CA6  0A07               	xorlw	7
 25189  011CA8  A4D8               	btfss	status,2,c
 25190  011CAA  D243               	goto	l14336
 25191                           
 25192                           ; BSR set to: 1
 25193                           ;tcp.c: 2449: {
 25194                           ;tcp.c: 2451: if((int32_t)(TickGet() - MyTCBStub.eventTime) < (int32_t)0)
 25195  011CAC  0101               	movlb	1	; () banked
 25196  011CAE  C1EE  F157         	movff	_MyTCBStub+14,??_TCPTick
 25197  011CB2  0101               	movlb	1	; () banked
 25198  011CB4  C1EF  F158         	movff	_MyTCBStub+15,??_TCPTick+1
 25199  011CB8  0101               	movlb	1	; () banked
 25200  011CBA  C1F0  F159         	movff	_MyTCBStub+16,??_TCPTick+2
 25201  011CBE  0101               	movlb	1	; () banked
 25202  011CC0  C1F1  F15A         	movff	_MyTCBStub+17,??_TCPTick+3
 25203  011CC4  0101               	movlb	1	; () banked
 25204  011CC6  1F57               	comf	??_TCPTick& (0+255),f,b
 25205  011CC8  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25206  011CCA  1F59               	comf	(??_TCPTick+2)& (0+255),f,b
 25207  011CCC  1F5A               	comf	(??_TCPTick+3)& (0+255),f,b
 25208  011CCE  2B57               	incf	??_TCPTick& (0+255),f,b
 25209  011CD0  0E00               	movlw	0
 25210  011CD2  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25211  011CD4  2359               	addwfc	(??_TCPTick+2)& (0+255),f,b
 25212  011CD6  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 25213  011CD8  EC94  F0DB         	call	_TickGet	;wreg free
 25214  011CDC  C100  F15B         	movff	?_TickGet,??_TCPTick+4
 25215  011CE0  C101  F15C         	movff	?_TickGet+1,??_TCPTick+5
 25216  011CE4  C102  F15D         	movff	?_TickGet+2,??_TCPTick+6
 25217  011CE8  C103  F15E         	movff	?_TickGet+3,??_TCPTick+7
 25218  011CEC  0101               	movlb	1	; () banked
 25219  011CEE  5157               	movf	??_TCPTick& (0+255),w,b
 25220  011CF0  0101               	movlb	1	; () banked
 25221  011CF2  255B               	addwf	(??_TCPTick+4)& (0+255),w,b
 25222  011CF4  0101               	movlb	1	; () banked
 25223  011CF6  6F5F               	movwf	(??_TCPTick+8)& (0+255),b
 25224  011CF8  0101               	movlb	1	; () banked
 25225  011CFA  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25226  011CFC  0101               	movlb	1	; () banked
 25227  011CFE  215C               	addwfc	(??_TCPTick+5)& (0+255),w,b
 25228  011D00  0101               	movlb	1	; () banked
 25229  011D02  6F60               	movwf	(??_TCPTick+9)& (0+255),b
 25230  011D04  0101               	movlb	1	; () banked
 25231  011D06  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25232  011D08  0101               	movlb	1	; () banked
 25233  011D0A  215D               	addwfc	(??_TCPTick+6)& (0+255),w,b
 25234  011D0C  0101               	movlb	1	; () banked
 25235  011D0E  6F61               	movwf	(??_TCPTick+10)& (0+255),b
 25236  011D10  0101               	movlb	1	; () banked
 25237  011D12  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25238  011D14  0101               	movlb	1	; () banked
 25239  011D16  215E               	addwfc	(??_TCPTick+7)& (0+255),w,b
 25240  011D18  0101               	movlb	1	; () banked
 25241  011D1A  6F62               	movwf	(??_TCPTick+11)& (0+255),b
 25242  011D1C  0101               	movlb	1	; () banked
 25243  011D1E  5162               	movf	(??_TCPTick+11)& (0+255),w,b
 25244  011D20  0A80               	xorlw	128
 25245  011D22  0F80               	addlw	128
 25246  011D24  E108               	bnz	u16275
 25247  011D26  0E00               	movlw	0
 25248  011D28  5D61               	subwf	(??_TCPTick+10)& (0+255),w,b
 25249  011D2A  E105               	bnz	u16275
 25250  011D2C  0E00               	movlw	0
 25251  011D2E  5D60               	subwf	(??_TCPTick+9)& (0+255),w,b
 25252  011D30  E102               	bnz	u16275
 25253  011D32  0E00               	movlw	0
 25254  011D34  5D5F               	subwf	(??_TCPTick+8)& (0+255),w,b
 25255  011D36                     u16275:
 25256  011D36  A0D8               	btfss	status,0,c
 25257  011D38  D1FC               	goto	l14336
 25258                           
 25259                           ; BSR set to: 1
 25260                           ;tcp.c: 2458: if(MyTCBStub.Flags.vUnackedKeepalives == (6u))
 25261                           
 25262                           ; BSR set to: 1
 25263                           
 25264                           ; BSR set to: 1
 25265                           ;tcp.c: 2452: continue;
 25266  011D3A  0101               	movlb	1	; () banked
 25267  011D3C  51F7               	movf	(_MyTCBStub+23)& (0+255),w,b
 25268  011D3E  0B07               	andlw	7
 25269  011D40  0A06               	xorlw	6
 25270  011D42  A4D8               	btfss	status,2,c
 25271  011D44  D015               	goto	l14240
 25272                           
 25273                           ; BSR set to: 1
 25274                           ;tcp.c: 2459: {
 25275                           ;tcp.c: 2460: vFlags = MyTCBStub.Flags.bServer;
 25276  011D46  0E00               	movlw	0
 25277  011D48  0101               	movlb	1	; () banked
 25278  011D4A  B7F7               	btfsc	(_MyTCBStub+23)& (0+255),3,b
 25279  011D4C  0E01               	movlw	1
 25280  011D4E  0101               	movlb	1	; () banked
 25281  011D50  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25282                           
 25283                           ; BSR set to: 1
 25284                           ;tcp.c: 2465: TCPDisconnect(hTCP);
 25285  011D52  0101               	movlb	1	; () banked
 25286  011D54  5165               	movf	TCPTick@hTCP& (0+255),w,b
 25287  011D56  EC68  F0C6         	call	_TCPDisconnect
 25288                           
 25289                           ;tcp.c: 2466: TCPDisconnect(hTCP);
 25290  011D5A  0101               	movlb	1	; () banked
 25291  011D5C  5165               	movf	TCPTick@hTCP& (0+255),w,b
 25292  011D5E  EC68  F0C6         	call	_TCPDisconnect
 25293                           
 25294                           ;tcp.c: 2471: if(!vFlags)
 25295  011D62  0101               	movlb	1	; () banked
 25296  011D64  6766               	tstfsz	TCPTick@vFlags& (0+255),b
 25297  011D66  D1E5               	goto	l14336
 25298                           
 25299                           ; BSR set to: 1
 25300                           ;tcp.c: 2472: MyTCBStub.smState = TCP_CLOSED_BUT_RESERVED;
 25301  011D68  0E0E               	movlw	14
 25302  011D6A  0101               	movlb	1	; () banked
 25303  011D6C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25304  011D6E  D1E1               	goto	l14336
 25305  011D70                     l14240:
 25306                           
 25307                           ; BSR set to: 1
 25308                           ;tcp.c: 2475: }
 25309                           ;tcp.c: 2478: SyncTCB();
 25310  011D70  EC10  F0CB         	call	_SyncTCB	;wreg free
 25311                           
 25312                           ;tcp.c: 2479: SendTCP((0x10), 0x02);
 25313  011D74  0E02               	movlw	2
 25314  011D76  0101               	movlb	1	; () banked
 25315  011D78  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25316  011D7A  0E10               	movlw	16
 25317  011D7C  ECC1  F096         	call	_SendTCP
 25318                           
 25319                           ;tcp.c: 2480: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 25320  011D80  EC94  F0DB         	call	_TickGet	;wreg free
 25321  011D84  C100  F157         	movff	?_TickGet,??_TCPTick
 25322  011D88  C101  F158         	movff	?_TickGet+1,??_TCPTick+1
 25323  011D8C  C102  F159         	movff	?_TickGet+2,??_TCPTick+2
 25324  011D90  C103  F15A         	movff	?_TickGet+3,??_TCPTick+3
 25325  011D94  0EE6               	movlw	230
 25326  011D96  0101               	movlb	1	; () banked
 25327  011D98  2557               	addwf	??_TCPTick& (0+255),w,b
 25328  011D9A  0101               	movlb	1	; () banked
 25329  011D9C  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 25330  011D9E  0EF5               	movlw	245
 25331  011DA0  0101               	movlb	1	; () banked
 25332  011DA2  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 25333  011DA4  0101               	movlb	1	; () banked
 25334  011DA6  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 25335  011DA8  0E05               	movlw	5
 25336  011DAA  0101               	movlb	1	; () banked
 25337  011DAC  2159               	addwfc	(??_TCPTick+2)& (0+255),w,b
 25338  011DAE  0101               	movlb	1	; () banked
 25339  011DB0  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 25340  011DB2  0E00               	movlw	0
 25341  011DB4  0101               	movlb	1	; () banked
 25342  011DB6  215A               	addwfc	(??_TCPTick+3)& (0+255),w,b
 25343  011DB8  0101               	movlb	1	; () banked
 25344  011DBA  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 25345  011DBC  D1BA               	goto	l14336
 25346  011DBE                     l14246:
 25347                           
 25348                           ; BSR set to: 1
 25349                           ;tcp.c: 2484: }
 25350                           ;tcp.c: 2487: if((int32_t)(TickGet() - MyTCBStub.eventTime) < (int32_t)0)
 25351  011DBE  0101               	movlb	1	; () banked
 25352  011DC0  C1EE  F157         	movff	_MyTCBStub+14,??_TCPTick
 25353  011DC4  0101               	movlb	1	; () banked
 25354  011DC6  C1EF  F158         	movff	_MyTCBStub+15,??_TCPTick+1
 25355  011DCA  0101               	movlb	1	; () banked
 25356  011DCC  C1F0  F159         	movff	_MyTCBStub+16,??_TCPTick+2
 25357  011DD0  0101               	movlb	1	; () banked
 25358  011DD2  C1F1  F15A         	movff	_MyTCBStub+17,??_TCPTick+3
 25359  011DD6  0101               	movlb	1	; () banked
 25360  011DD8  1F57               	comf	??_TCPTick& (0+255),f,b
 25361  011DDA  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25362  011DDC  1F59               	comf	(??_TCPTick+2)& (0+255),f,b
 25363  011DDE  1F5A               	comf	(??_TCPTick+3)& (0+255),f,b
 25364  011DE0  2B57               	incf	??_TCPTick& (0+255),f,b
 25365  011DE2  0E00               	movlw	0
 25366  011DE4  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25367  011DE6  2359               	addwfc	(??_TCPTick+2)& (0+255),f,b
 25368  011DE8  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 25369  011DEA  EC94  F0DB         	call	_TickGet	;wreg free
 25370  011DEE  C100  F15B         	movff	?_TickGet,??_TCPTick+4
 25371  011DF2  C101  F15C         	movff	?_TickGet+1,??_TCPTick+5
 25372  011DF6  C102  F15D         	movff	?_TickGet+2,??_TCPTick+6
 25373  011DFA  C103  F15E         	movff	?_TickGet+3,??_TCPTick+7
 25374  011DFE  0101               	movlb	1	; () banked
 25375  011E00  5157               	movf	??_TCPTick& (0+255),w,b
 25376  011E02  0101               	movlb	1	; () banked
 25377  011E04  255B               	addwf	(??_TCPTick+4)& (0+255),w,b
 25378  011E06  0101               	movlb	1	; () banked
 25379  011E08  6F5F               	movwf	(??_TCPTick+8)& (0+255),b
 25380  011E0A  0101               	movlb	1	; () banked
 25381  011E0C  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25382  011E0E  0101               	movlb	1	; () banked
 25383  011E10  215C               	addwfc	(??_TCPTick+5)& (0+255),w,b
 25384  011E12  0101               	movlb	1	; () banked
 25385  011E14  6F60               	movwf	(??_TCPTick+9)& (0+255),b
 25386  011E16  0101               	movlb	1	; () banked
 25387  011E18  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25388  011E1A  0101               	movlb	1	; () banked
 25389  011E1C  215D               	addwfc	(??_TCPTick+6)& (0+255),w,b
 25390  011E1E  0101               	movlb	1	; () banked
 25391  011E20  6F61               	movwf	(??_TCPTick+10)& (0+255),b
 25392  011E22  0101               	movlb	1	; () banked
 25393  011E24  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25394  011E26  0101               	movlb	1	; () banked
 25395  011E28  215E               	addwfc	(??_TCPTick+7)& (0+255),w,b
 25396  011E2A  0101               	movlb	1	; () banked
 25397  011E2C  6F62               	movwf	(??_TCPTick+11)& (0+255),b
 25398  011E2E  0101               	movlb	1	; () banked
 25399  011E30  5162               	movf	(??_TCPTick+11)& (0+255),w,b
 25400  011E32  0A80               	xorlw	128
 25401  011E34  0F80               	addlw	128
 25402  011E36  E108               	bnz	u16305
 25403  011E38  0E00               	movlw	0
 25404  011E3A  5D61               	subwf	(??_TCPTick+10)& (0+255),w,b
 25405  011E3C  E105               	bnz	u16305
 25406  011E3E  0E00               	movlw	0
 25407  011E40  5D60               	subwf	(??_TCPTick+9)& (0+255),w,b
 25408  011E42  E102               	bnz	u16305
 25409  011E44  0E00               	movlw	0
 25410  011E46  5D5F               	subwf	(??_TCPTick+8)& (0+255),w,b
 25411  011E48                     u16305:
 25412  011E48  A0D8               	btfss	status,0,c
 25413  011E4A  D173               	goto	l14336
 25414                           
 25415                           ; BSR set to: 1
 25416                           ;tcp.c: 2491: SyncTCB();
 25417                           
 25418                           ; BSR set to: 1
 25419                           
 25420                           ; BSR set to: 1
 25421                           ;tcp.c: 2488: continue;
 25422  011E4C  EC10  F0CB         	call	_SyncTCB	;wreg free
 25423                           
 25424                           ;tcp.c: 2495: switch(MyTCBStub.smState)
 25425  011E50  D0C3               	goto	l14312
 25426  011E52                     l14252:
 25427                           
 25428                           ;tcp.c: 2543: MyTCBStub.eventTime2 = (uint16_t)TickGetDiv256();
 25429  011E52  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 25430  011E56  C100  F157         	movff	?_TickGetDiv256,??_TCPTick
 25431  011E5A  C101  F158         	movff	?_TickGetDiv256+1,??_TCPTick+1
 25432  011E5E  C102  F159         	movff	?_TickGetDiv256+2,??_TCPTick+2
 25433  011E62  C103  F15A         	movff	?_TickGetDiv256+3,??_TCPTick+3
 25434  011E66  C157  F1F2         	movff	??_TCPTick,_MyTCBStub+18
 25435  011E6A  C158  F1F3         	movff	??_TCPTick+1,_MyTCBStub+19
 25436                           
 25437                           ;tcp.c: 2544: ARPResolve(&MyTCB.remote.niRemoteMACIP.IPAddr);
 25438  011E6E  0101               	movlb	1	; () banked
 25439  011E70  0E01               	movlw	high (_MyTCB+22)
 25440  011E72  0101               	movlb	1	; () banked
 25441  011E74  6F21               	movwf	(ARPResolve@IPAddr+1)& (0+255),b
 25442  011E76  0101               	movlb	1	; () banked
 25443  011E78  0ECF               	movlw	low (_MyTCB+22)
 25444  011E7A  0101               	movlb	1	; () banked
 25445  011E7C  6F20               	movwf	ARPResolve@IPAddr& (0+255),b
 25446  011E7E  ECE9  F0C6         	call	_ARPResolve	;wreg free
 25447                           
 25448                           ;tcp.c: 2545: MyTCBStub.smState = TCP_GATEWAY_GET_ARP;
 25449  011E82  0E03               	movlw	3
 25450  011E84  D057               	goto	L25
 25451  011E86                     l14258:
 25452                           
 25453                           ; BSR set to: 1
 25454                           ;tcp.c: 2550: if(!ARPIsResolved(&MyTCB.remote.niRemoteMACIP.IPAddr, &MyTCB.remote.niRemo
      +                          teMACIP.MACAddr))
 25455  011E86  0101               	movlb	1	; () banked
 25456  011E88  0E01               	movlw	high (_MyTCB+22)
 25457  011E8A  0101               	movlb	1	; () banked
 25458  011E8C  6F01               	movwf	(ARPIsResolved@IPAddr+1)& (0+255),b
 25459  011E8E  0101               	movlb	1	; () banked
 25460  011E90  0ECF               	movlw	low (_MyTCB+22)
 25461  011E92  0101               	movlb	1	; () banked
 25462  011E94  6F00               	movwf	ARPIsResolved@IPAddr& (0+255),b
 25463  011E96  0101               	movlb	1	; () banked
 25464  011E98  0E01               	movlw	high (_MyTCB+26)
 25465  011E9A  0101               	movlb	1	; () banked
 25466  011E9C  6F03               	movwf	(ARPIsResolved@MACAddr+1)& (0+255),b
 25467  011E9E  0101               	movlb	1	; () banked
 25468  011EA0  0ED3               	movlw	low (_MyTCB+26)
 25469  011EA2  0101               	movlb	1	; () banked
 25470  011EA4  6F02               	movwf	ARPIsResolved@MACAddr& (0+255),b
 25471  011EA6  EC42  F0C3         	call	_ARPIsResolved	;wreg free
 25472  011EAA  0900               	iorlw	0
 25473  011EAC  A4D8               	btfss	status,2,c
 25474  011EAE  D03B               	goto	l14268
 25475                           
 25476                           ;tcp.c: 2551: {
 25477                           ;tcp.c: 2556: if((uint16_t)TickGetDiv256() - MyTCBStub.eventTime2 > (uint16_t)MyTCB.retr
      +                          yInterval)
 25478  011EB0  0101               	movlb	1	; () banked
 25479  011EB2  EE21  F0F2         	lfsr	2,_MyTCBStub+18
 25480  011EB6  CFDE F157          	movff	postinc2,??_TCPTick
 25481  011EBA  CFDD F158          	movff	postdec2,??_TCPTick+1
 25482  011EBE  0101               	movlb	1	; () banked
 25483  011EC0  1F57               	comf	??_TCPTick& (0+255),f,b
 25484  011EC2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25485  011EC4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25486  011EC6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25487  011EC8  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 25488  011ECC  C100  F159         	movff	?_TickGetDiv256,??_TCPTick+2
 25489  011ED0  C101  F15A         	movff	?_TickGetDiv256+1,??_TCPTick+3
 25490  011ED4  C102  F15B         	movff	?_TickGetDiv256+2,??_TCPTick+4
 25491  011ED8  C103  F15C         	movff	?_TickGetDiv256+3,??_TCPTick+5
 25492  011EDC  0101               	movlb	1	; () banked
 25493  011EDE  5157               	movf	??_TCPTick& (0+255),w,b
 25494  011EE0  0101               	movlb	1	; () banked
 25495  011EE2  2759               	addwf	(??_TCPTick+2)& (0+255),f,b
 25496  011EE4  0101               	movlb	1	; () banked
 25497  011EE6  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25498  011EE8  0101               	movlb	1	; () banked
 25499  011EEA  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 25500  011EEC  0101               	movlb	1	; () banked
 25501  011EEE  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25502  011EF0  0101               	movlb	1	; () banked
 25503  011EF2  5DB9               	subwf	_MyTCB& (0+255),w,b
 25504  011EF4  0101               	movlb	1	; () banked
 25505  011EF6  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25506  011EF8  0101               	movlb	1	; () banked
 25507  011EFA  59BA               	subwfb	(_MyTCB+1)& (0+255),w,b
 25508  011EFC  B0D8               	btfsc	status,0,c
 25509  011EFE  D08C               	goto	l14314
 25510                           
 25511                           ; BSR set to: 1
 25512                           ;tcp.c: 2557: {
 25513                           ;tcp.c: 2559: if(MyTCB.retryCount < 6u)
 25514  011F00  0E06               	movlw	6
 25515  011F02  0101               	movlb	1	; () banked
 25516  011F04  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25517  011F06  B0D8               	btfsc	status,0,c
 25518  011F08  D00C               	goto	l14266
 25519                           
 25520                           ; BSR set to: 1
 25521                           ;tcp.c: 2560: {
 25522                           ;tcp.c: 2561: MyTCB.retryCount++;
 25523  011F0A  0101               	movlb	1	; () banked
 25524  011F0C  2BDE               	incf	(_MyTCB+37)& (0+255),f,b
 25525                           
 25526                           ;tcp.c: 2562: MyTCB.retryInterval <<= 1;
 25527  011F0E  0101               	movlb	1	; () banked
 25528  011F10  90D8               	bcf	status,0,c
 25529  011F12  0101               	movlb	1	; () banked
 25530  011F14  37B9               	rlcf	_MyTCB& (0+255),f,b
 25531  011F16  0101               	movlb	1	; () banked
 25532  011F18  37BA               	rlcf	(_MyTCB+1)& (0+255),f,b
 25533  011F1A  0101               	movlb	1	; () banked
 25534  011F1C  37BB               	rlcf	(_MyTCB+2)& (0+255),f,b
 25535  011F1E  0101               	movlb	1	; () banked
 25536  011F20  37BC               	rlcf	(_MyTCB+3)& (0+255),f,b
 25537  011F22                     l14266:
 25538                           
 25539                           ; BSR set to: 1
 25540                           ;tcp.c: 2563: }
 25541                           ;tcp.c: 2566: MyTCBStub.smState = TCP_GATEWAY_SEND_ARP;
 25542  011F22  0E02               	movlw	2
 25543  011F24  D007               	goto	L25
 25544  011F26                     l14268:
 25545                           
 25546                           ;tcp.c: 2569: }
 25547                           ;tcp.c: 2574: vFlags = (0x02);
 25548  011F26  0E02               	movlw	2
 25549  011F28  0101               	movlb	1	; () banked
 25550  011F2A  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25551                           
 25552                           ;tcp.c: 2575: bRetransmit = 0;
 25553  011F2C  0E00               	movlw	0
 25554  011F2E  0101               	movlb	1	; () banked
 25555  011F30  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 25556                           
 25557                           ;tcp.c: 2576: MyTCBStub.smState = TCP_SYN_SENT;
 25558  011F32  0E05               	movlw	5
 25559  011F34                     L25:
 25560  011F34  0101               	movlb	1	; () banked
 25561  011F36  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25562                           
 25563                           ;tcp.c: 2577: break;
 25564  011F38  D06F               	goto	l14314
 25565  011F3A                     l14270:
 25566                           
 25567                           ; BSR set to: 1
 25568                           ;tcp.c: 2584: vFlags = (0x02);
 25569  011F3A  0E02               	movlw	2
 25570  011F3C  0101               	movlb	1	; () banked
 25571  011F3E  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25572                           
 25573                           ;tcp.c: 2585: bRetransmit = 1;
 25574  011F40  0E01               	movlw	1
 25575  011F42  0101               	movlb	1	; () banked
 25576  011F44  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;tcp.c: 2588: if(MyTCB.retryCount >= ((5u) - 1))
 25580  011F46  0101               	movlb	1	; () banked
 25581  011F48  EE21  F0DE         	lfsr	2,_MyTCB+37
 25582  011F4C  0E03               	movlw	3
 25583  011F4E  64DF               	cpfsgt	indf2,c
 25584  011F50  D063               	goto	l14314
 25585                           
 25586                           ; BSR set to: 1
 25587                           ;tcp.c: 2589: {
 25588                           ;tcp.c: 2590: MyTCB.retryCount = (5u) - 1;
 25589  011F52  0E04               	movlw	4
 25590  011F54  0101               	movlb	1	; () banked
 25591  011F56  6FDE               	movwf	(_MyTCB+37)& (0+255),b
 25592                           
 25593                           ;tcp.c: 2591: MyTCB.retryInterval = ((uint32_t)(((((40000000ul)/4)+128ull)/256ull))*1)<<
      +                          ((5u)-1);
 25594  011F58  0E70               	movlw	112
 25595  011F5A  0101               	movlb	1	; () banked
 25596  011F5C  6FB9               	movwf	_MyTCB& (0+255),b
 25597  011F5E  0E89               	movlw	137
 25598  011F60  0101               	movlb	1	; () banked
 25599  011F62  6FBA               	movwf	(_MyTCB+1)& (0+255),b
 25600  011F64  0E09               	movlw	9
 25601  011F66  0101               	movlb	1	; () banked
 25602  011F68  6FBB               	movwf	(_MyTCB+2)& (0+255),b
 25603  011F6A  0E00               	movlw	0
 25604  011F6C  0101               	movlb	1	; () banked
 25605  011F6E  6FBC               	movwf	(_MyTCB+3)& (0+255),b
 25606  011F70  D053               	goto	l14314
 25607  011F72                     l14276:
 25608                           
 25609                           ; BSR set to: 1
 25610                           ;tcp.c: 2599: if(MyTCB.retryCount < (2u))
 25611  011F72  0E02               	movlw	2
 25612  011F74  0101               	movlb	1	; () banked
 25613  011F76  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25614  011F78  B0D8               	btfsc	status,0,c
 25615  011F7A  D002               	goto	l1163
 25616                           
 25617                           ; BSR set to: 1
 25618                           ;tcp.c: 2600: {
 25619                           ;tcp.c: 2601: vFlags = (0x02) | (0x10);
 25620  011F7C  0E12               	movlw	18
 25621  011F7E  D01F               	goto	L30
 25622  011F80                     l1163:
 25623                           
 25624                           ; BSR set to: 1
 25625                           ;tcp.c: 2604: else
 25626                           ;tcp.c: 2605: {
 25627                           ;tcp.c: 2606: if(MyTCBStub.Flags.bServer)
 25628  011F80  0101               	movlb	1	; () banked
 25629  011F82  B7F7               	btfsc	(_MyTCBStub+23)& (0+255),3,b
 25630  011F84  D022               	goto	l14308
 25631                           
 25632                           ; BSR set to: 1
 25633                           ;tcp.c: 2611: else
 25634                           ;tcp.c: 2612: {
 25635                           ;tcp.c: 2613: vFlags = (0x02);
 25636                           
 25637                           ; BSR set to: 1
 25638                           
 25639                           ;tcp.c: 2610: }
 25640                           
 25641                           ;tcp.c: 2609: bCloseSocket = 1;
 25642                           
 25643                           ; BSR set to: 1
 25644                           ;tcp.c: 2607: {
 25645                           ;tcp.c: 2608: vFlags = (0x04) | (0x10);
 25646  011F86  0E02               	movlw	2
 25647  011F88  D00B               	goto	L27
 25648  011F8A                     l14284:
 25649                           
 25650                           ; BSR set to: 1
 25651                           ;tcp.c: 2619: case TCP_CLOSE_WAIT:
 25652                           ;tcp.c: 2621: if(MyTCB.retryCount < (5u))
 25653  011F8A  0E05               	movlw	5
 25654  011F8C  0101               	movlb	1	; () banked
 25655  011F8E  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25656  011F90  B0D8               	btfsc	status,0,c
 25657  011F92  D002               	goto	l14288
 25658  011F94                     
 25659                           ; BSR set to: 1
 25660                           ;tcp.c: 2622: {
 25661                           ;tcp.c: 2623: vFlags = (0x10);
 25662  011F94  0E10               	movlw	16
 25663  011F96  D013               	goto	L30
 25664  011F98                     l14288:
 25665                           
 25666                           ; BSR set to: 1
 25667                           ;tcp.c: 2626: else
 25668                           ;tcp.c: 2627: {
 25669                           ;tcp.c: 2631: MyTCBStub.smState = TCP_FIN_WAIT_1;
 25670  011F98  0E08               	movlw	8
 25671  011F9A  0101               	movlb	1	; () banked
 25672  011F9C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 25673                           
 25674                           ;tcp.c: 2632: vFlags = (0x01) | (0x10);
 25675  011F9E  0E11               	movlw	17
 25676  011FA0                     L27:
 25677  011FA0  0101               	movlb	1	; () banked
 25678  011FA2  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25679  011FA4  D039               	goto	l14314
 25680  011FA6                     l14298:
 25681                           
 25682                           ; BSR set to: 1
 25683                           ;tcp.c: 2660: if(MyTCB.retryCount < (5u))
 25684  011FA6  0E05               	movlw	5
 25685  011FA8  0101               	movlb	1	; () banked
 25686  011FAA  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25687  011FAC  B0D8               	btfsc	status,0,c
 25688  011FAE  D00D               	goto	l14308
 25689  011FB0  D7F1               	goto	L33
 25690  011FB2                     l14304:
 25691                           
 25692                           ; BSR set to: 1
 25693                           ;tcp.c: 2685: if(MyTCB.retryCount < (5u))
 25694  011FB2  0E05               	movlw	5
 25695  011FB4  0101               	movlb	1	; () banked
 25696  011FB6  5DDE               	subwf	(_MyTCB+37)& (0+255),w,b
 25697  011FB8  B0D8               	btfsc	status,0,c
 25698  011FBA  D007               	goto	l14308
 25699                           
 25700                           ; BSR set to: 1
 25701                           ;tcp.c: 2686: {
 25702                           ;tcp.c: 2687: vFlags = (0x01) | (0x10);
 25703  011FBC  0E11               	movlw	17
 25704  011FBE                     L30:
 25705  011FBE  0101               	movlb	1	; () banked
 25706  011FC0  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25707                           
 25708                           ;tcp.c: 2688: bRetransmit = 1;
 25709  011FC2  0E01               	movlw	1
 25710  011FC4  0101               	movlb	1	; () banked
 25711  011FC6  6F64               	movwf	TCPTick@bRetransmit& (0+255),b
 25712                           
 25713                           ;tcp.c: 2689: }
 25714  011FC8  D027               	goto	l14314
 25715  011FCA                     l14308:
 25716                           
 25717                           ; BSR set to: 1
 25718                           ;tcp.c: 2690: else
 25719                           ;tcp.c: 2691: {
 25720                           ;tcp.c: 2692: vFlags = (0x04) | (0x10);
 25721  011FCA  0E14               	movlw	20
 25722  011FCC  0101               	movlb	1	; () banked
 25723  011FCE  6F66               	movwf	TCPTick@vFlags& (0+255),b
 25724                           
 25725                           ;tcp.c: 2693: bCloseSocket = 1;
 25726  011FD0  0E01               	movlw	1
 25727  011FD2  0101               	movlb	1	; () banked
 25728  011FD4  6F63               	movwf	TCPTick@bCloseSocket& (0+255),b
 25729  011FD6  D020               	goto	l14314
 25730  011FD8                     l14312:
 25731  011FD8  0101               	movlb	1	; () banked
 25732  011FDA  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 25733                           
 25734                           ; Switch size 1, requested type "space"
 25735                           ; Number of cases is 10, Range of values is 2 to 12
 25736                           ; switch strategies available:
 25737                           ; Name         Instructions Cycles
 25738                           ; simple_byte           31    16 (average)
 25739                           ;	Chosen strategy is simple_byte
 25740  011FDC  0A02               	xorlw	2	; case 2
 25741  011FDE  B4D8               	btfsc	status,2,c
 25742  011FE0  D738               	goto	l14252
 25743  011FE2  0A01               	xorlw	1	; case 3
 25744  011FE4  B4D8               	btfsc	status,2,c
 25745  011FE6  D74F               	goto	l14258
 25746  011FE8  0A06               	xorlw	6	; case 5
 25747  011FEA  B4D8               	btfsc	status,2,c
 25748  011FEC  D7A6               	goto	l14270
 25749  011FEE  0A03               	xorlw	3	; case 6
 25750  011FF0  B4D8               	btfsc	status,2,c
 25751  011FF2  D7BF               	goto	l14276
 25752  011FF4  0A01               	xorlw	1	; case 7
 25753  011FF6  B4D8               	btfsc	status,2,c
 25754  011FF8  D7C8               	goto	l14284
 25755  011FFA  0A0F               	xorlw	15	; case 8
 25756  011FFC  B4D8               	btfsc	status,2,c
 25757  011FFE  D7D9               	goto	l14304
 25758  012000  0A01               	xorlw	1	; case 9
 25759  012002  B4D8               	btfsc	status,2,c
 25760  012004  D7E2               	goto	l14308
 25761  012006  0A03               	xorlw	3	; case 10
 25762  012008  B4D8               	btfsc	status,2,c
 25763  01200A  D7CD               	goto	l14298
 25764  01200C  0A01               	xorlw	1	; case 11
 25765  01200E  B4D8               	btfsc	status,2,c
 25766  012010  D7BC               	goto	l14284
 25767  012012  0A07               	xorlw	7	; case 12
 25768  012014  B4D8               	btfsc	status,2,c
 25769  012016  D7CD               	goto	l14304
 25770  012018                     l14314:
 25771                           
 25772                           ; BSR set to: 1
 25773                           ;tcp.c: 2701: if(vFlags)
 25774  012018  0101               	movlb	1	; () banked
 25775  01201A  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25776  01201C  B4D8               	btfsc	status,2,c
 25777  01201E  D084               	goto	l14332
 25778                           
 25779                           ; BSR set to: 1
 25780                           ;tcp.c: 2702: {
 25781                           ;tcp.c: 2704: if(bRetransmit)
 25782  012020  0101               	movlb	1	; () banked
 25783  012022  5164               	movf	TCPTick@bRetransmit& (0+255),w,b
 25784  012024  B4D8               	btfsc	status,2,c
 25785  012026  D079               	goto	l14330
 25786                           
 25787                           ; BSR set to: 1
 25788                           ;tcp.c: 2705: {
 25789                           ;tcp.c: 2707: MyTCB.retryCount++;
 25790  012028  0101               	movlb	1	; () banked
 25791  01202A  2BDE               	incf	(_MyTCB+37)& (0+255),f,b
 25792                           
 25793                           ;tcp.c: 2708: MyTCB.retryInterval <<= 1;
 25794  01202C  0101               	movlb	1	; () banked
 25795  01202E  90D8               	bcf	status,0,c
 25796  012030  0101               	movlb	1	; () banked
 25797  012032  37B9               	rlcf	_MyTCB& (0+255),f,b
 25798  012034  0101               	movlb	1	; () banked
 25799  012036  37BA               	rlcf	(_MyTCB+1)& (0+255),f,b
 25800  012038  0101               	movlb	1	; () banked
 25801  01203A  37BB               	rlcf	(_MyTCB+2)& (0+255),f,b
 25802  01203C  0101               	movlb	1	; () banked
 25803  01203E  37BC               	rlcf	(_MyTCB+3)& (0+255),f,b
 25804                           
 25805                           ; BSR set to: 1
 25806                           ;tcp.c: 2711: w = MyTCB.txUnackedTail - MyTCBStub.txTail;
 25807  012040  0101               	movlb	1	; () banked
 25808  012042  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 25809  012046  CFDE F157          	movff	postinc2,??_TCPTick
 25810  01204A  CFDD F158          	movff	postdec2,??_TCPTick+1
 25811  01204E  0101               	movlb	1	; () banked
 25812  012050  1F57               	comf	??_TCPTick& (0+255),f,b
 25813  012052  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25814  012054  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25815  012056  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25816  012058  0101               	movlb	1	; () banked
 25817  01205A  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 25818  01205C  0101               	movlb	1	; () banked
 25819  01205E  2557               	addwf	??_TCPTick& (0+255),w,b
 25820  012060  0101               	movlb	1	; () banked
 25821  012062  6F67               	movwf	TCPTick@w& (0+255),b
 25822  012064  0101               	movlb	1	; () banked
 25823  012066  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 25824  012068  0101               	movlb	1	; () banked
 25825  01206A  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 25826  01206C  0101               	movlb	1	; () banked
 25827  01206E  6F68               	movwf	(TCPTick@w+1)& (0+255),b
 25828                           
 25829                           ; BSR set to: 1
 25830                           ;tcp.c: 2712: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 25831  012070  0101               	movlb	1	; () banked
 25832  012072  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 25833  012074  0101               	movlb	1	; () banked
 25834  012076  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 25835  012078  0101               	movlb	1	; () banked
 25836  01207A  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 25837  01207C  0101               	movlb	1	; () banked
 25838  01207E  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 25839  012080  B0D8               	btfsc	status,0,c
 25840  012082  D01B               	goto	l1184
 25841                           
 25842                           ; BSR set to: 1
 25843                           ;tcp.c: 2713: w += MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 25844  012084  0101               	movlb	1	; () banked
 25845  012086  C1E0  F157         	movff	_MyTCBStub,??_TCPTick
 25846  01208A  0101               	movlb	1	; () banked
 25847  01208C  C1E1  F158         	movff	_MyTCBStub+1,??_TCPTick+1
 25848  012090  0101               	movlb	1	; () banked
 25849  012092  1F57               	comf	??_TCPTick& (0+255),f,b
 25850  012094  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 25851  012096  4B57               	infsnz	??_TCPTick& (0+255),f,b
 25852  012098  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 25853  01209A  0101               	movlb	1	; () banked
 25854  01209C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 25855  01209E  0101               	movlb	1	; () banked
 25856  0120A0  2757               	addwf	??_TCPTick& (0+255),f,b
 25857  0120A2  0101               	movlb	1	; () banked
 25858  0120A4  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 25859  0120A6  0101               	movlb	1	; () banked
 25860  0120A8  2358               	addwfc	(??_TCPTick+1)& (0+255),f,b
 25861  0120AA  0101               	movlb	1	; () banked
 25862  0120AC  5157               	movf	??_TCPTick& (0+255),w,b
 25863  0120AE  0101               	movlb	1	; () banked
 25864  0120B0  2767               	addwf	TCPTick@w& (0+255),f,b
 25865  0120B2  0101               	movlb	1	; () banked
 25866  0120B4  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25867  0120B6  0101               	movlb	1	; () banked
 25868  0120B8  2368               	addwfc	(TCPTick@w+1)& (0+255),f,b
 25869  0120BA                     l1184:
 25870                           
 25871                           ; BSR set to: 1
 25872                           ;tcp.c: 2718: MyTCB.MySEQ -= w;
 25873  0120BA  0101               	movlb	1	; () banked
 25874  0120BC  5167               	movf	TCPTick@w& (0+255),w,b
 25875  0120BE  0101               	movlb	1	; () banked
 25876  0120C0  6F57               	movwf	??_TCPTick& (0+255),b
 25877  0120C2  0101               	movlb	1	; () banked
 25878  0120C4  5168               	movf	(TCPTick@w+1)& (0+255),w,b
 25879  0120C6  0101               	movlb	1	; () banked
 25880  0120C8  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 25881  0120CA  0101               	movlb	1	; () banked
 25882  0120CC  6B59               	clrf	(??_TCPTick+2)& (0+255),b
 25883  0120CE  0101               	movlb	1	; () banked
 25884  0120D0  6B5A               	clrf	(??_TCPTick+3)& (0+255),b
 25885  0120D2  0101               	movlb	1	; () banked
 25886  0120D4  5157               	movf	??_TCPTick& (0+255),w,b
 25887  0120D6  0101               	movlb	1	; () banked
 25888  0120D8  5FBD               	subwf	(_MyTCB+4)& (0+255),f,b
 25889  0120DA  0101               	movlb	1	; () banked
 25890  0120DC  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 25891  0120DE  0101               	movlb	1	; () banked
 25892  0120E0  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 25893  0120E2  0101               	movlb	1	; () banked
 25894  0120E4  5159               	movf	(??_TCPTick+2)& (0+255),w,b
 25895  0120E6  0101               	movlb	1	; () banked
 25896  0120E8  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 25897  0120EA  0101               	movlb	1	; () banked
 25898  0120EC  515A               	movf	(??_TCPTick+3)& (0+255),w,b
 25899  0120EE  0101               	movlb	1	; () banked
 25900  0120F0  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 25901                           
 25902                           ;tcp.c: 2719: MyTCB.remoteWindow += w;
 25903  0120F2  0101               	movlb	1	; () banked
 25904  0120F4  5167               	movf	TCPTick@w& (0+255),w,b
 25905  0120F6  0101               	movlb	1	; () banked
 25906  0120F8  27CB               	addwf	(_MyTCB+18)& (0+255),f,b
 25907  0120FA  0101               	movlb	1	; () banked
 25908  0120FC  5168               	movf	(TCPTick@w+1)& (0+255),w,b
 25909  0120FE  0101               	movlb	1	; () banked
 25910  012100  23CC               	addwfc	(_MyTCB+19)& (0+255),f,b
 25911                           
 25912                           ; BSR set to: 1
 25913                           ;tcp.c: 2720: MyTCB.txUnackedTail = MyTCBStub.txTail;
 25914  012102  C1E8  F1C5         	movff	_MyTCBStub+8,_MyTCB+12
 25915  012106  C1E9  F1C6         	movff	_MyTCBStub+9,_MyTCB+13
 25916                           
 25917                           ; BSR set to: 1
 25918                           ;tcp.c: 2721: SendTCP(vFlags, 0);
 25919  01210A  0E00               	movlw	0
 25920  01210C  0101               	movlb	1	; () banked
 25921  01210E  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25922  012110  0101               	movlb	1	; () banked
 25923  012112  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25924  012114  ECC1  F096         	call	_SendTCP
 25925                           
 25926                           ;tcp.c: 2722: }
 25927  012118  D007               	goto	l14332
 25928  01211A                     l14330:
 25929                           
 25930                           ;tcp.c: 2723: else
 25931                           ;tcp.c: 2724: SendTCP(vFlags, 0x01);
 25932  01211A  0E01               	movlw	1
 25933  01211C  0101               	movlb	1	; () banked
 25934  01211E  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 25935  012120  0101               	movlb	1	; () banked
 25936  012122  5166               	movf	TCPTick@vFlags& (0+255),w,b
 25937  012124  ECC1  F096         	call	_SendTCP
 25938  012128                     l14332:
 25939                           
 25940                           ;tcp.c: 2726: }
 25941                           ;tcp.c: 2728: if(bCloseSocket)
 25942  012128  0101               	movlb	1	; () banked
 25943  01212A  5163               	movf	TCPTick@bCloseSocket& (0+255),w,b
 25944  01212C  A4D8               	btfss	status,2,c
 25945                           
 25946                           ; BSR set to: 1
 25947                           ;tcp.c: 2729: CloseSocket();
 25948  01212E  ECF0  F0CD         	call	_CloseSocket	;wreg free
 25949  012132                     l14336:
 25950  012132  0101               	movlb	1	; () banked
 25951  012134  2B65               	incf	TCPTick@hTCP& (0+255),f,b
 25952  012136  EF1C  F08C         	goto	L31
 25953  01213A                     l14340:
 25954                           
 25955                           ; BSR set to: 1
 25956                           ;tcp.c: 2730: }
 25957                           ;tcp.c: 2735: for(w = 0; w < (3u); w++)
 25958  01213A  0E00               	movlw	0
 25959  01213C  0101               	movlb	1	; () banked
 25960  01213E  6F68               	movwf	(TCPTick@w+1)& (0+255),b
 25961  012140  0E00               	movlw	0
 25962  012142  0101               	movlb	1	; () banked
 25963  012144  6F67               	movwf	TCPTick@w& (0+255),b
 25964  012146                     
 25965                           ; BSR set to: 1
 25966  012146  0E03               	movlw	3
 25967  012148  0101               	movlb	1	; () banked
 25968  01214A  5D67               	subwf	TCPTick@w& (0+255),w,b
 25969  01214C  0E00               	movlw	0
 25970  01214E  0101               	movlb	1	; () banked
 25971  012150  5968               	subwfb	(TCPTick@w+1)& (0+255),w,b
 25972  012152  B0D8               	btfsc	status,0,c
 25973  012154  0012               	return	
 25974                           
 25975                           ; BSR set to: 1
 25976                           ;tcp.c: 2736: {
 25977                           ;tcp.c: 2738: if(SYNQueue[w].wDestPort == 0u)
 25978                           
 25979                           ; BSR set to: 1
 25980                           
 25981                           ; BSR set to: 1
 25982  012156  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 25983  01215A  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 25984  01215E  0E00               	movlw	0
 25985  012160  0101               	movlb	1	; () banked
 25986  012162  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 25987  012164  0E14               	movlw	20
 25988  012166  0101               	movlb	1	; () banked
 25989  012168  6F10               	movwf	___wmul@multiplicand& (0+255),b
 25990  01216A  EC15  F0DA         	call	___wmul	;wreg free
 25991  01216E  0E10               	movlw	16
 25992  012170  0101               	movlb	1	; () banked
 25993  012172  270E               	addwf	?___wmul& (0+255),f,b
 25994  012174  0E00               	movlw	0
 25995  012176  0101               	movlb	1	; () banked
 25996  012178  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 25997  01217A  0102               	movlb	2	; () banked
 25998  01217C  0E00               	movlw	low _SYNQueue
 25999  01217E  0101               	movlb	1	; () banked
 26000  012180  250E               	addwf	?___wmul& (0+255),w,b
 26001  012182  6ED9               	movwf	fsr2l,c
 26002  012184  0102               	movlb	2	; () banked
 26003  012186  0E02               	movlw	high _SYNQueue
 26004  012188  0101               	movlb	1	; () banked
 26005  01218A  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 26006  01218C  6EDA               	movwf	fsr2h,c
 26007  01218E  50DE               	movf	postinc2,w,c
 26008  012190  10DD               	iorwf	postdec2,w,c
 26009  012192  B4D8               	btfsc	status,2,c
 26010  012194  0012               	return	
 26011                           
 26012                           ; BSR set to: 1
 26013                           ;tcp.c: 2742: if((uint16_t)TickGetDiv256() - SYNQueue[w].wTimestamp > (uint16_t)(((uint3
      +                          2_t)(((((40000000ul)/4)+128ull)/256ull))*3)/256ull))
 26014                           
 26015                           ; BSR set to: 1
 26016                           
 26017                           ; BSR set to: 1
 26018                           ;tcp.c: 2739: break;
 26019  012196  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 26020  01219A  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 26021  01219E  0E00               	movlw	0
 26022  0121A0  0101               	movlb	1	; () banked
 26023  0121A2  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26024  0121A4  0E14               	movlw	20
 26025  0121A6  0101               	movlb	1	; () banked
 26026  0121A8  6F10               	movwf	___wmul@multiplicand& (0+255),b
 26027  0121AA  EC15  F0DA         	call	___wmul	;wreg free
 26028  0121AE  0E12               	movlw	18
 26029  0121B0  0101               	movlb	1	; () banked
 26030  0121B2  270E               	addwf	?___wmul& (0+255),f,b
 26031  0121B4  0E00               	movlw	0
 26032  0121B6  0101               	movlb	1	; () banked
 26033  0121B8  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 26034  0121BA  0102               	movlb	2	; () banked
 26035  0121BC  0E00               	movlw	low _SYNQueue
 26036  0121BE  0101               	movlb	1	; () banked
 26037  0121C0  250E               	addwf	?___wmul& (0+255),w,b
 26038  0121C2  6ED9               	movwf	fsr2l,c
 26039  0121C4  0102               	movlb	2	; () banked
 26040  0121C6  0E02               	movlw	high _SYNQueue
 26041  0121C8  0101               	movlb	1	; () banked
 26042  0121CA  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 26043  0121CC  6EDA               	movwf	fsr2h,c
 26044  0121CE  CFDE F157          	movff	postinc2,??_TCPTick
 26045  0121D2  CFDD F158          	movff	postdec2,??_TCPTick+1
 26046  0121D6  0101               	movlb	1	; () banked
 26047  0121D8  1F57               	comf	??_TCPTick& (0+255),f,b
 26048  0121DA  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 26049  0121DC  4B57               	infsnz	??_TCPTick& (0+255),f,b
 26050  0121DE  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 26051  0121E0  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 26052  0121E4  C100  F159         	movff	?_TickGetDiv256,??_TCPTick+2
 26053  0121E8  C101  F15A         	movff	?_TickGetDiv256+1,??_TCPTick+3
 26054  0121EC  C102  F15B         	movff	?_TickGetDiv256+2,??_TCPTick+4
 26055  0121F0  C103  F15C         	movff	?_TickGetDiv256+3,??_TCPTick+5
 26056  0121F4  0101               	movlb	1	; () banked
 26057  0121F6  5157               	movf	??_TCPTick& (0+255),w,b
 26058  0121F8  0101               	movlb	1	; () banked
 26059  0121FA  2759               	addwf	(??_TCPTick+2)& (0+255),f,b
 26060  0121FC  0101               	movlb	1	; () banked
 26061  0121FE  5158               	movf	(??_TCPTick+1)& (0+255),w,b
 26062  012200  0101               	movlb	1	; () banked
 26063  012202  235A               	addwfc	(??_TCPTick+3)& (0+255),f,b
 26064  012204  0ECA               	movlw	202
 26065  012206  0101               	movlb	1	; () banked
 26066  012208  5D59               	subwf	(??_TCPTick+2)& (0+255),w,b
 26067  01220A  0E01               	movlw	1
 26068  01220C  595A               	subwfb	(??_TCPTick+3)& (0+255),w,b
 26069  01220E  A0D8               	btfss	status,0,c
 26070  012210  D06F               	goto	l14358
 26071                           
 26072                           ; BSR set to: 1
 26073                           ;tcp.c: 2743: {
 26074                           ;tcp.c: 2745: TCPRAMCopy((unsigned short)&SYNQueue[w], 1u, (unsigned short)&SYNQueue[w+1
      +                          ], 1u, ((3u)-1u-w)*sizeof(TCP_SYN_QUEUE));
 26075  012212  C167  F10E         	movff	TCPTick@w,___wmul@multiplier
 26076  012216  C168  F10F         	movff	TCPTick@w+1,___wmul@multiplier+1
 26077  01221A  0E00               	movlw	0
 26078  01221C  0101               	movlb	1	; () banked
 26079  01221E  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26080  012220  0E14               	movlw	20
 26081  012222  0101               	movlb	1	; () banked
 26082  012224  6F10               	movwf	___wmul@multiplicand& (0+255),b
 26083  012226  EC15  F0DA         	call	___wmul	;wreg free
 26084  01222A  0102               	movlb	2	; () banked
 26085  01222C  0E00               	movlw	low _SYNQueue
 26086  01222E  0101               	movlb	1	; () banked
 26087  012230  250E               	addwf	?___wmul& (0+255),w,b
 26088  012232  0101               	movlb	1	; () banked
 26089  012234  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 26090  012236  0102               	movlb	2	; () banked
 26091  012238  0E02               	movlw	high _SYNQueue
 26092  01223A  0101               	movlb	1	; () banked
 26093  01223C  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 26094  01223E  0101               	movlb	1	; () banked
 26095  012240  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 26096  012242  0E01               	movlw	1
 26097  012244  0101               	movlb	1	; () banked
 26098  012246  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 26099  012248  0E01               	movlw	1
 26100  01224A  0101               	movlb	1	; () banked
 26101  01224C  2567               	addwf	TCPTick@w& (0+255),w,b
 26102  01224E  0101               	movlb	1	; () banked
 26103  012250  6F0E               	movwf	___wmul@multiplier& (0+255),b
 26104  012252  0E00               	movlw	0
 26105  012254  0101               	movlb	1	; () banked
 26106  012256  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 26107  012258  0101               	movlb	1	; () banked
 26108  01225A  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 26109  01225C  0E00               	movlw	0
 26110  01225E  0101               	movlb	1	; () banked
 26111  012260  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26112  012262  0E14               	movlw	20
 26113  012264  0101               	movlb	1	; () banked
 26114  012266  6F10               	movwf	___wmul@multiplicand& (0+255),b
 26115  012268  EC15  F0DA         	call	___wmul	;wreg free
 26116  01226C  0102               	movlb	2	; () banked
 26117  01226E  0E00               	movlw	low _SYNQueue
 26118  012270  0101               	movlb	1	; () banked
 26119  012272  250E               	addwf	?___wmul& (0+255),w,b
 26120  012274  0101               	movlb	1	; () banked
 26121  012276  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 26122  012278  0102               	movlb	2	; () banked
 26123  01227A  0E02               	movlw	high _SYNQueue
 26124  01227C  0101               	movlb	1	; () banked
 26125  01227E  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 26126  012280  0101               	movlb	1	; () banked
 26127  012282  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 26128  012284  0E01               	movlw	1
 26129  012286  0101               	movlb	1	; () banked
 26130  012288  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 26131  01228A  0E01               	movlw	1
 26132  01228C  0101               	movlb	1	; () banked
 26133  01228E  2567               	addwf	TCPTick@w& (0+255),w,b
 26134  012290  0101               	movlb	1	; () banked
 26135  012292  6F57               	movwf	??_TCPTick& (0+255),b
 26136  012294  0E00               	movlw	0
 26137  012296  0101               	movlb	1	; () banked
 26138  012298  2168               	addwfc	(TCPTick@w+1)& (0+255),w,b
 26139  01229A  0101               	movlb	1	; () banked
 26140  01229C  6F58               	movwf	(??_TCPTick+1)& (0+255),b
 26141  01229E  0101               	movlb	1	; () banked
 26142  0122A0  1F57               	comf	??_TCPTick& (0+255),f,b
 26143  0122A2  1F58               	comf	(??_TCPTick+1)& (0+255),f,b
 26144  0122A4  4B57               	infsnz	??_TCPTick& (0+255),f,b
 26145  0122A6  2B58               	incf	(??_TCPTick+1)& (0+255),f,b
 26146  0122A8  0E03               	movlw	3
 26147  0122AA  0101               	movlb	1	; () banked
 26148  0122AC  2557               	addwf	??_TCPTick& (0+255),w,b
 26149  0122AE  0101               	movlb	1	; () banked
 26150  0122B0  6F0E               	movwf	___wmul@multiplier& (0+255),b
 26151  0122B2  0E00               	movlw	0
 26152  0122B4  0101               	movlb	1	; () banked
 26153  0122B6  2158               	addwfc	(??_TCPTick+1)& (0+255),w,b
 26154  0122B8  0101               	movlb	1	; () banked
 26155  0122BA  6F0F               	movwf	(___wmul@multiplier+1)& (0+255),b
 26156  0122BC  0E00               	movlw	0
 26157  0122BE  0101               	movlb	1	; () banked
 26158  0122C0  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 26159  0122C2  0E14               	movlw	20
 26160  0122C4  0101               	movlb	1	; () banked
 26161  0122C6  6F10               	movwf	___wmul@multiplicand& (0+255),b
 26162  0122C8  EC15  F0DA         	call	___wmul	;wreg free
 26163  0122CC  0101               	movlb	1	; () banked
 26164  0122CE  C10E  F124         	movff	?___wmul,TCPRAMCopy@wLength
 26165  0122D2  0101               	movlb	1	; () banked
 26166  0122D4  C10F  F125         	movff	?___wmul+1,TCPRAMCopy@wLength+1
 26167  0122D8  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 26168                           
 26169                           ;tcp.c: 2746: SYNQueue[(3u)-1].wDestPort = 0u;
 26170  0122DC  0E00               	movlw	0
 26171  0122DE  0102               	movlb	2	; () banked
 26172  0122E0  6F39               	movwf	(_SYNQueue+57)& (0+255),b
 26173  0122E2  0E00               	movlw	0
 26174  0122E4  0102               	movlb	2	; () banked
 26175  0122E6  6F38               	movwf	(_SYNQueue+56)& (0+255),b
 26176                           
 26177                           ; BSR set to: 2
 26178                           ;tcp.c: 2750: w--;
 26179  0122E8  0101               	movlb	1	; () banked
 26180  0122EA  0767               	decf	TCPTick@w& (0+255),f,b
 26181  0122EC  A0D8               	btfss	status,0,c
 26182  0122EE  0768               	decf	(TCPTick@w+1)& (0+255),f,b
 26183  0122F0                     l14358:
 26184                           
 26185                           ; BSR set to: 1
 26186  0122F0  0101               	movlb	1	; () banked
 26187  0122F2  4B67               	infsnz	TCPTick@w& (0+255),f,b
 26188  0122F4  2B68               	incf	(TCPTick@w+1)& (0+255),f,b
 26189  0122F6  D727               	goto	L32
 26190  0122F8                     __end_of_TCPTick:
 26191                           	opt stack 0
 26192                           tblptru	equ	0xFF8
 26193                           tblptrh	equ	0xFF7
 26194                           tblptrl	equ	0xFF6
 26195                           tablat	equ	0xFF5
 26196                           prodh	equ	0xFF4
 26197                           prodl	equ	0xFF3
 26198                           intcon	equ	0xFF2
 26199                           indf0	equ	0xFEF
 26200                           postinc0	equ	0xFEE
 26201                           fsr0h	equ	0xFEA
 26202                           fsr0l	equ	0xFE9
 26203                           wreg	equ	0xFE8
 26204                           indf1	equ	0xFE7
 26205                           postinc1	equ	0xFE6
 26206                           postdec1	equ	0xFE5
 26207                           fsr1h	equ	0xFE2
 26208                           fsr1l	equ	0xFE1
 26209                           indf2	equ	0xFDF
 26210                           postinc2	equ	0xFDE
 26211                           postdec2	equ	0xFDD
 26212                           fsr2h	equ	0xFDA
 26213                           fsr2l	equ	0xFD9
 26214                           status	equ	0xFD8
 26215                           
 26216 ;; *************** function _TCPDisconnect *****************
 26217 ;; Defined at:
 26218 ;;		line 788 in file "../tcpip/tcp.c"
 26219 ;; Parameters:    Size  Location     Type
 26220 ;;  hTCP            1    wreg     unsigned char 
 26221 ;; Auto vars:     Size  Location     Type
 26222 ;;  hTCP            1   86[BANK1 ] unsigned char 
 26223 ;; Return value:  Size  Location     Type
 26224 ;;		None               void
 26225 ;; Registers used:
 26226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26227 ;; Tracked objects:
 26228 ;;		On entry : 0/0
 26229 ;;		On exit  : 0/0
 26230 ;;		Unchanged: 0/0
 26231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26233 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26235 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26236 ;;Total ram usage:        1 bytes
 26237 ;; Hardware stack levels used:    1
 26238 ;; Hardware stack levels required when called:   15
 26239 ;; This function calls:
 26240 ;;		_CloseSocket
 26241 ;;		_SendTCP
 26242 ;;		_SyncTCBStub
 26243 ;; This function is called by:
 26244 ;;		_TCPClose
 26245 ;;		_TCPTick
 26246 ;; This function uses a non-reentrant model
 26247 ;;
 26248                           
 26249                           	psect	text49
 26250  018CD0                     __ptext49:
 26251                           	opt stack 0
 26252  018CD0                     _TCPDisconnect:
 26253                           	opt stack 13
 26254                           
 26255                           ; BSR set to: 1
 26256                           ;incstack = 0
 26257                           ;TCPDisconnect@hTCP stored from wreg
 26258  018CD0  0101               	movlb	1	; () banked
 26259  018CD2  6F56               	movwf	TCPDisconnect@hTCP& (0+255),b
 26260                           
 26261                           ; BSR set to: 1
 26262                           ;tcp.c: 790: if(hTCP >= (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0])))
 26263  018CD4  0101               	movlb	1	; () banked
 26264  018CD6  5156               	movf	TCPDisconnect@hTCP& (0+255),w,b
 26265  018CD8  A4D8               	btfss	status,2,c
 26266  018CDA  0012               	return	
 26267                           
 26268                           ; BSR set to: 1
 26269                           ;tcp.c: 793: }
 26270                           ;tcp.c: 795: SyncTCBStub(hTCP);
 26271                           
 26272                           ; BSR set to: 1
 26273                           
 26274                           ; BSR set to: 1
 26275                           ;tcp.c: 791: {
 26276                           ;tcp.c: 792: return;
 26277  018CDC  0101               	movlb	1	; () banked
 26278  018CDE  5156               	movf	TCPDisconnect@hTCP& (0+255),w,b
 26279  018CE0  EC30  F0D0         	call	_SyncTCBStub
 26280                           
 26281                           ;tcp.c: 804: MyTCBStub.rxTail = MyTCBStub.rxHead;
 26282  018CE4  C1EA  F1EC         	movff	_MyTCBStub+10,_MyTCBStub+12
 26283  018CE8  C1EB  F1ED         	movff	_MyTCBStub+11,_MyTCBStub+13
 26284                           
 26285                           ;tcp.c: 806: switch(MyTCBStub.smState)
 26286  018CEC  D04E               	goto	l13072
 26287  018CEE                     l13042:
 26288                           
 26289                           ;tcp.c: 816: case TCP_GATEWAY_SEND_ARP:
 26290                           ;tcp.c: 817: case TCP_GATEWAY_GET_ARP:
 26291                           ;tcp.c: 818: case TCP_SYN_SENT:
 26292                           ;tcp.c: 819: CloseSocket();
 26293  018CEE  ECF0  F0CD         	call	_CloseSocket	;wreg free
 26294                           
 26295                           ;tcp.c: 820: break;
 26296  018CF2  0012               	return	
 26297  018CF4                     l13044:
 26298                           
 26299                           ;tcp.c: 840: {
 26300                           ;tcp.c: 841: SendTCP((0x01) | (0x10), 0x01);
 26301  018CF4  0E01               	movlw	1
 26302  018CF6  0101               	movlb	1	; () banked
 26303  018CF8  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 26304  018CFA  0E11               	movlw	17
 26305  018CFC  ECC1  F096         	call	_SendTCP
 26306                           
 26307                           ;tcp.c: 842: if(MyTCB.remoteWindow == 0u)
 26308  018D00  0101               	movlb	1	; () banked
 26309  018D02  51CC               	movf	(_MyTCB+19)& (0+255),w,b
 26310  018D04  11CB               	iorwf	(_MyTCB+18)& (0+255),w,b
 26311  018D06  B4D8               	btfsc	status,2,c
 26312  018D08  D010               	goto	l13052
 26313                           
 26314                           ; BSR set to: 1
 26315                           ;tcp.c: 844: } while(MyTCBStub.txHead != MyTCB.txUnackedTail);
 26316                           
 26317                           ; BSR set to: 1
 26318                           
 26319                           ; BSR set to: 1
 26320                           ;tcp.c: 843: break;
 26321  018D0A  0101               	movlb	1	; () banked
 26322  018D0C  EE21  F0C5         	lfsr	2,_MyTCB+12
 26323  018D10  0101               	movlb	1	; () banked
 26324  018D12  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 26325  018D16  52E6               	movf	postinc1,f,c
 26326  018D18  52DE               	movf	postinc2,f,c
 26327  018D1A  50DD               	movf	postdec2,w,c
 26328  018D1C  18E5               	xorwf	postdec1,w,c
 26329  018D1E  CFDF FFE8          	movff	indf2,wreg
 26330  018D22  B4D8               	btfsc	status,2,c
 26331  018D24  18E7               	xorwf	indf1,w,c
 26332  018D26  A4D8               	btfss	status,2,c
 26333  018D28  D7E5               	goto	l13044
 26334  018D2A                     l13052:
 26335                           
 26336                           ; BSR set to: 1
 26337                           ;tcp.c: 846: MyTCBStub.smState = TCP_FIN_WAIT_1;
 26338  018D2A  0E08               	movlw	8
 26339  018D2C  0101               	movlb	1	; () banked
 26340  018D2E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 26341                           
 26342                           ;tcp.c: 847: break;
 26343  018D30  0012               	return	
 26344  018D32                     l13054:
 26345                           
 26346                           ; BSR set to: 1
 26347                           ;tcp.c: 856: {
 26348                           ;tcp.c: 857: SendTCP((0x01) | (0x10), 0x01);
 26349  018D32  0E01               	movlw	1
 26350  018D34  0101               	movlb	1	; () banked
 26351  018D36  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 26352  018D38  0E11               	movlw	17
 26353  018D3A  ECC1  F096         	call	_SendTCP
 26354                           
 26355                           ;tcp.c: 858: if(MyTCB.remoteWindow == 0u)
 26356  018D3E  0101               	movlb	1	; () banked
 26357  018D40  51CC               	movf	(_MyTCB+19)& (0+255),w,b
 26358  018D42  11CB               	iorwf	(_MyTCB+18)& (0+255),w,b
 26359  018D44  B4D8               	btfsc	status,2,c
 26360  018D46  D010               	goto	l13062
 26361                           
 26362                           ; BSR set to: 1
 26363                           ;tcp.c: 860: } while(MyTCBStub.txHead != MyTCB.txUnackedTail);
 26364                           
 26365                           ; BSR set to: 1
 26366                           
 26367                           ; BSR set to: 1
 26368                           ;tcp.c: 859: break;
 26369  018D48  0101               	movlb	1	; () banked
 26370  018D4A  EE21  F0C5         	lfsr	2,_MyTCB+12
 26371  018D4E  0101               	movlb	1	; () banked
 26372  018D50  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 26373  018D54  52E6               	movf	postinc1,f,c
 26374  018D56  52DE               	movf	postinc2,f,c
 26375  018D58  50DD               	movf	postdec2,w,c
 26376  018D5A  18E5               	xorwf	postdec1,w,c
 26377  018D5C  CFDF FFE8          	movff	indf2,wreg
 26378  018D60  B4D8               	btfsc	status,2,c
 26379  018D62  18E7               	xorwf	indf1,w,c
 26380  018D64  A4D8               	btfss	status,2,c
 26381  018D66  D7E5               	goto	l13054
 26382  018D68                     l13062:
 26383                           
 26384                           ; BSR set to: 1
 26385                           ;tcp.c: 862: MyTCBStub.smState = TCP_LAST_ACK;
 26386  018D68  0E0C               	movlw	12
 26387  018D6A  0101               	movlb	1	; () banked
 26388  018D6C  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 26389                           
 26390                           ;tcp.c: 863: break;
 26391  018D6E  0012               	return	
 26392  018D70                     l13064:
 26393                           
 26394                           ; BSR set to: 1
 26395                           ;tcp.c: 873: MyTCBStub.smState = TCP_CLOSED;
 26396  018D70  0E0D               	movlw	13
 26397  018D72  0101               	movlb	1	; () banked
 26398  018D74  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 26399                           
 26400                           ;tcp.c: 874: break;
 26401  018D76  0012               	return	
 26402  018D78                     l13066:
 26403                           
 26404                           ; BSR set to: 1
 26405                           ;tcp.c: 889: SendTCP((0x04) | (0x10), 0);
 26406  018D78  0E00               	movlw	0
 26407  018D7A  0101               	movlb	1	; () banked
 26408  018D7C  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 26409  018D7E  0E14               	movlw	20
 26410  018D80  ECC1  F096         	call	_SendTCP
 26411                           
 26412                           ;tcp.c: 890: CloseSocket();
 26413  018D84  ECF0  F0CD         	call	_CloseSocket	;wreg free
 26414                           
 26415                           ;tcp.c: 891: break;
 26416  018D88  0012               	return	
 26417  018D8A                     l13072:
 26418  018D8A  0101               	movlb	1	; () banked
 26419  018D8C  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 26420                           
 26421                           ; Switch size 1, requested type "space"
 26422                           ; Number of cases is 11, Range of values is 0 to 14
 26423                           ; switch strategies available:
 26424                           ; Name         Instructions Cycles
 26425                           ; simple_byte           34    18 (average)
 26426                           ;	Chosen strategy is simple_byte
 26427  018D8E  0A00               	xorlw	0	; case 0
 26428  018D90  B4D8               	btfsc	status,2,c
 26429  018D92  D7AD               	goto	l13042
 26430  018D94  0A02               	xorlw	2	; case 2
 26431  018D96  B4D8               	btfsc	status,2,c
 26432  018D98  D7AA               	goto	l13042
 26433  018D9A  0A01               	xorlw	1	; case 3
 26434  018D9C  B4D8               	btfsc	status,2,c
 26435  018D9E  D7A7               	goto	l13042
 26436  018DA0  0A06               	xorlw	6	; case 5
 26437  018DA2  B4D8               	btfsc	status,2,c
 26438  018DA4  D7A4               	goto	l13042
 26439  018DA6  0A03               	xorlw	3	; case 6
 26440  018DA8  B4D8               	btfsc	status,2,c
 26441  018DAA  D7A4               	goto	l13044
 26442  018DAC  0A01               	xorlw	1	; case 7
 26443  018DAE  B4D8               	btfsc	status,2,c
 26444  018DB0  D7A1               	goto	l13044
 26445  018DB2  0A0F               	xorlw	15	; case 8
 26446  018DB4  B4D8               	btfsc	status,2,c
 26447  018DB6  D7E0               	goto	l13066
 26448  018DB8  0A01               	xorlw	1	; case 9
 26449  018DBA  B4D8               	btfsc	status,2,c
 26450  018DBC  D7DD               	goto	l13066
 26451  018DBE  0A02               	xorlw	2	; case 11
 26452  018DC0  B4D8               	btfsc	status,2,c
 26453  018DC2  D7B7               	goto	l13054
 26454  018DC4  0A07               	xorlw	7	; case 12
 26455  018DC6  B4D8               	btfsc	status,2,c
 26456  018DC8  D7D7               	goto	l13066
 26457  018DCA  0A02               	xorlw	2	; case 14
 26458  018DCC  B4D8               	btfsc	status,2,c
 26459  018DCE  D7D0               	goto	l13064
 26460  018DD0  D7D3               	goto	l13066
 26461  018DD2                     __end_of_TCPDisconnect:
 26462                           	opt stack 0
 26463                           tblptru	equ	0xFF8
 26464                           tblptrh	equ	0xFF7
 26465                           tblptrl	equ	0xFF6
 26466                           tablat	equ	0xFF5
 26467                           prodh	equ	0xFF4
 26468                           prodl	equ	0xFF3
 26469                           intcon	equ	0xFF2
 26470                           indf0	equ	0xFEF
 26471                           postinc0	equ	0xFEE
 26472                           fsr0h	equ	0xFEA
 26473                           fsr0l	equ	0xFE9
 26474                           wreg	equ	0xFE8
 26475                           indf1	equ	0xFE7
 26476                           postinc1	equ	0xFE6
 26477                           postdec1	equ	0xFE5
 26478                           fsr1h	equ	0xFE2
 26479                           fsr1l	equ	0xFE1
 26480                           indf2	equ	0xFDF
 26481                           postinc2	equ	0xFDE
 26482                           postdec2	equ	0xFDD
 26483                           fsr2h	equ	0xFDA
 26484                           fsr2l	equ	0xFD9
 26485                           status	equ	0xFD8
 26486                           
 26487 ;; *************** function _ARPResolve *****************
 26488 ;; Defined at:
 26489 ;;		line 569 in file "../tcpip/arp.c"
 26490 ;; Parameters:    Size  Location     Type
 26491 ;;  IPAddr          2   32[BANK1 ] PTR struct .
 26492 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 26493 ;; Auto vars:     Size  Location     Type
 26494 ;;  packet         28   50[BANK1 ] struct .
 26495 ;; Return value:  Size  Location     Type
 26496 ;;		None               void
 26497 ;; Registers used:
 26498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26499 ;; Tracked objects:
 26500 ;;		On entry : 0/0
 26501 ;;		On exit  : 0/0
 26502 ;;		Unchanged: 0/0
 26503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26504 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26505 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26506 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26507 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26508 ;;Total ram usage:       46 bytes
 26509 ;; Hardware stack levels used:    1
 26510 ;; Hardware stack levels required when called:   15
 26511 ;; This function calls:
 26512 ;;		_ARPPut
 26513 ;; This function is called by:
 26514 ;;		_TCPTick
 26515 ;; This function uses a non-reentrant model
 26516 ;;
 26517                           
 26518                           	psect	text50
 26519  018DD2                     __ptext50:
 26520                           	opt stack 0
 26521  018DD2                     _ARPResolve:
 26522                           	opt stack 13
 26523                           
 26524                           ;arp.c: 571: ARP_PACKET packet;
 26525                           ;arp.c: 595: packet.Operation = 0x0001u;
 26526                           
 26527                           ;incstack = 0
 26528  018DD2  0E00               	movlw	0
 26529  018DD4  0101               	movlb	1	; () banked
 26530  018DD6  6F39               	movwf	(ARPResolve@packet+7)& (0+255),b
 26531  018DD8  0E01               	movlw	1
 26532  018DDA  0101               	movlb	1	; () banked
 26533  018DDC  6F38               	movwf	(ARPResolve@packet+6)& (0+255),b
 26534                           
 26535                           ; BSR set to: 1
 26536                           ;arp.c: 596: packet.TargetMACAddr.v[0] = 0xff;
 26537  018DDE  0101               	movlb	1	; () banked
 26538  018DE0  6944               	setf	(ARPResolve@packet+18)& (0+255),b
 26539                           
 26540                           ; BSR set to: 1
 26541                           ;arp.c: 597: packet.TargetMACAddr.v[1] = 0xff;
 26542  018DE2  0101               	movlb	1	; () banked
 26543  018DE4  6945               	setf	(ARPResolve@packet+19)& (0+255),b
 26544                           
 26545                           ; BSR set to: 1
 26546                           ;arp.c: 598: packet.TargetMACAddr.v[2] = 0xff;
 26547  018DE6  0101               	movlb	1	; () banked
 26548  018DE8  6946               	setf	(ARPResolve@packet+20)& (0+255),b
 26549                           
 26550                           ; BSR set to: 1
 26551                           ;arp.c: 599: packet.TargetMACAddr.v[3] = 0xff;
 26552  018DEA  0101               	movlb	1	; () banked
 26553  018DEC  6947               	setf	(ARPResolve@packet+21)& (0+255),b
 26554                           
 26555                           ; BSR set to: 1
 26556                           ;arp.c: 600: packet.TargetMACAddr.v[4] = 0xff;
 26557  018DEE  0101               	movlb	1	; () banked
 26558  018DF0  6948               	setf	(ARPResolve@packet+22)& (0+255),b
 26559                           
 26560                           ; BSR set to: 1
 26561                           ;arp.c: 601: packet.TargetMACAddr.v[5] = 0xff;
 26562  018DF2  0101               	movlb	1	; () banked
 26563  018DF4  6949               	setf	(ARPResolve@packet+23)& (0+255),b
 26564                           
 26565                           ; BSR set to: 1
 26566                           ;arp.c: 606: packet.TargetIPAddr = ((AppConfig.MyIPAddr.Val ^ IPAddr->Val) & AppConfig.M
      +                          yMask.Val) ? AppConfig.MyGateway : *IPAddr;
 26567  018DF6  C120  FFD9         	movff	ARPResolve@IPAddr,fsr2l
 26568  018DFA  C121  FFDA         	movff	ARPResolve@IPAddr+1,fsr2h
 26569  018DFE  CFDE F122          	movff	postinc2,??_ARPResolve
 26570  018E02  CFDE F123          	movff	postinc2,??_ARPResolve+1
 26571  018E06  CFDE F124          	movff	postinc2,??_ARPResolve+2
 26572  018E0A  CFDE F125          	movff	postinc2,??_ARPResolve+3
 26573  018E0E  0102               	movlb	2	; () banked
 26574  018E10  513C               	movf	_AppConfig& (0+255),w,b
 26575  018E12  0101               	movlb	1	; () banked
 26576  018E14  1922               	xorwf	??_ARPResolve& (0+255),w,b
 26577  018E16  0101               	movlb	1	; () banked
 26578  018E18  6F26               	movwf	(??_ARPResolve+4)& (0+255),b
 26579  018E1A  0102               	movlb	2	; () banked
 26580  018E1C  513D               	movf	(_AppConfig+1)& (0+255),w,b
 26581  018E1E  0101               	movlb	1	; () banked
 26582  018E20  1923               	xorwf	(??_ARPResolve+1)& (0+255),w,b
 26583  018E22  0101               	movlb	1	; () banked
 26584  018E24  6F27               	movwf	(??_ARPResolve+5)& (0+255),b
 26585  018E26  0102               	movlb	2	; () banked
 26586  018E28  513E               	movf	(_AppConfig+2)& (0+255),w,b
 26587  018E2A  0101               	movlb	1	; () banked
 26588  018E2C  1924               	xorwf	(??_ARPResolve+2)& (0+255),w,b
 26589  018E2E  0101               	movlb	1	; () banked
 26590  018E30  6F28               	movwf	(??_ARPResolve+6)& (0+255),b
 26591  018E32  0102               	movlb	2	; () banked
 26592  018E34  513F               	movf	(_AppConfig+3)& (0+255),w,b
 26593  018E36  0101               	movlb	1	; () banked
 26594  018E38  1925               	xorwf	(??_ARPResolve+3)& (0+255),w,b
 26595  018E3A  0101               	movlb	1	; () banked
 26596  018E3C  6F29               	movwf	(??_ARPResolve+7)& (0+255),b
 26597  018E3E  0102               	movlb	2	; () banked
 26598  018E40  5140               	movf	(_AppConfig+4)& (0+255),w,b
 26599  018E42  0101               	movlb	1	; () banked
 26600  018E44  1526               	andwf	(??_ARPResolve+4)& (0+255),w,b
 26601  018E46  0101               	movlb	1	; () banked
 26602  018E48  6F2A               	movwf	(??_ARPResolve+8)& (0+255),b
 26603  018E4A  0102               	movlb	2	; () banked
 26604  018E4C  5141               	movf	(_AppConfig+5)& (0+255),w,b
 26605  018E4E  0101               	movlb	1	; () banked
 26606  018E50  1527               	andwf	(??_ARPResolve+5)& (0+255),w,b
 26607  018E52  0101               	movlb	1	; () banked
 26608  018E54  6F2B               	movwf	(??_ARPResolve+9)& (0+255),b
 26609  018E56  0102               	movlb	2	; () banked
 26610  018E58  5142               	movf	(_AppConfig+6)& (0+255),w,b
 26611  018E5A  0101               	movlb	1	; () banked
 26612  018E5C  1528               	andwf	(??_ARPResolve+6)& (0+255),w,b
 26613  018E5E  0101               	movlb	1	; () banked
 26614  018E60  6F2C               	movwf	(??_ARPResolve+10)& (0+255),b
 26615  018E62  0102               	movlb	2	; () banked
 26616  018E64  5143               	movf	(_AppConfig+7)& (0+255),w,b
 26617  018E66  0101               	movlb	1	; () banked
 26618  018E68  1529               	andwf	(??_ARPResolve+7)& (0+255),w,b
 26619  018E6A  0101               	movlb	1	; () banked
 26620  018E6C  6F2D               	movwf	(??_ARPResolve+11)& (0+255),b
 26621  018E6E  0101               	movlb	1	; () banked
 26622  018E70  512D               	movf	(??_ARPResolve+11)& (0+255),w,b
 26623  018E72  112A               	iorwf	(??_ARPResolve+8)& (0+255),w,b
 26624  018E74  112B               	iorwf	(??_ARPResolve+9)& (0+255),w,b
 26625  018E76  112C               	iorwf	(??_ARPResolve+10)& (0+255),w,b
 26626  018E78  A4D8               	btfss	status,2,c
 26627  018E7A  D011               	goto	l477
 26628                           
 26629                           ; BSR set to: 1
 26630  018E7C  C120  FFD9         	movff	ARPResolve@IPAddr,fsr2l
 26631  018E80  C121  FFDA         	movff	ARPResolve@IPAddr+1,fsr2h
 26632  018E84  0101               	movlb	1	; () banked
 26633  018E86  CFDE F12E          	movff	postinc2,_ARPResolve$3399
 26634  018E8A  0101               	movlb	1	; () banked
 26635  018E8C  CFDE F12F          	movff	postinc2,_ARPResolve$3399+1
 26636  018E90  0101               	movlb	1	; () banked
 26637  018E92  CFDE F130          	movff	postinc2,_ARPResolve$3399+2
 26638  018E96  0101               	movlb	1	; () banked
 26639  018E98  CFDE F131          	movff	postinc2,_ARPResolve$3399+3
 26640  018E9C  D008               	goto	l479
 26641  018E9E                     l477:
 26642                           
 26643                           ; BSR set to: 1
 26644  018E9E  C244  F12E         	movff	_AppConfig+8,_ARPResolve$3399
 26645  018EA2  C245  F12F         	movff	_AppConfig+9,_ARPResolve$3399+1
 26646  018EA6  C246  F130         	movff	_AppConfig+10,_ARPResolve$3399+2
 26647  018EAA  C247  F131         	movff	_AppConfig+11,_ARPResolve$3399+3
 26648  018EAE                     l479:
 26649                           
 26650                           ; BSR set to: 1
 26651  018EAE  C12E  F14A         	movff	_ARPResolve$3399,ARPResolve@packet+24
 26652  018EB2  C12F  F14B         	movff	_ARPResolve$3399+1,ARPResolve@packet+25
 26653  018EB6  C130  F14C         	movff	_ARPResolve$3399+2,ARPResolve@packet+26
 26654  018EBA  C131  F14D         	movff	_ARPResolve$3399+3,ARPResolve@packet+27
 26655                           
 26656                           ; BSR set to: 1
 26657                           ;arp.c: 611: ARPPut(&packet);
 26658  018EBE  0101               	movlb	1	; () banked
 26659  018EC0  0E01               	movlw	high ARPResolve@packet
 26660  018EC2  0101               	movlb	1	; () banked
 26661  018EC4  6F1F               	movwf	(ARPPut@packet+1)& (0+255),b
 26662  018EC6  0101               	movlb	1	; () banked
 26663  018EC8  0E32               	movlw	low ARPResolve@packet
 26664  018ECA  0101               	movlb	1	; () banked
 26665  018ECC  6F1E               	movwf	ARPPut@packet& (0+255),b
 26666  018ECE  ECF8  F0C0         	call	_ARPPut	;wreg free
 26667  018ED2  0012               	return	
 26668  018ED4                     __end_of_ARPResolve:
 26669                           	opt stack 0
 26670                           tblptru	equ	0xFF8
 26671                           tblptrh	equ	0xFF7
 26672                           tblptrl	equ	0xFF6
 26673                           tablat	equ	0xFF5
 26674                           prodh	equ	0xFF4
 26675                           prodl	equ	0xFF3
 26676                           intcon	equ	0xFF2
 26677                           indf0	equ	0xFEF
 26678                           postinc0	equ	0xFEE
 26679                           fsr0h	equ	0xFEA
 26680                           fsr0l	equ	0xFE9
 26681                           wreg	equ	0xFE8
 26682                           indf1	equ	0xFE7
 26683                           postinc1	equ	0xFE6
 26684                           postdec1	equ	0xFE5
 26685                           fsr1h	equ	0xFE2
 26686                           fsr1l	equ	0xFE1
 26687                           indf2	equ	0xFDF
 26688                           postinc2	equ	0xFDE
 26689                           postdec2	equ	0xFDD
 26690                           fsr2h	equ	0xFDA
 26691                           fsr2l	equ	0xFD9
 26692                           status	equ	0xFD8
 26693                           
 26694 ;; *************** function _ARPIsResolved *****************
 26695 ;; Defined at:
 26696 ;;		line 654 in file "../tcpip/arp.c"
 26697 ;; Parameters:    Size  Location     Type
 26698 ;;  IPAddr          2    0[BANK1 ] PTR struct .
 26699 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 26700 ;;  MACAddr         2    2[BANK1 ] PTR struct .
 26701 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 26702 ;; Auto vars:     Size  Location     Type
 26703 ;;		None
 26704 ;; Return value:  Size  Location     Type
 26705 ;;                  1    wreg      unsigned char 
 26706 ;; Registers used:
 26707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26708 ;; Tracked objects:
 26709 ;;		On entry : 0/0
 26710 ;;		On exit  : 0/0
 26711 ;;		Unchanged: 0/0
 26712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26713 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26715 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26716 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26717 ;;Total ram usage:       16 bytes
 26718 ;; Hardware stack levels used:    1
 26719 ;; Hardware stack levels required when called:   10
 26720 ;; This function calls:
 26721 ;;		Nothing
 26722 ;; This function is called by:
 26723 ;;		_TCPTick
 26724 ;; This function uses a non-reentrant model
 26725 ;;
 26726                           
 26727                           	psect	text51
 26728  018684                     __ptext51:
 26729                           	opt stack 0
 26730  018684                     _ARPIsResolved:
 26731                           	opt stack 18
 26732                           
 26733                           ;arp.c: 656: if((Cache.IPAddr.Val == IPAddr->Val) ||
 26734                           ;arp.c: 657: ((Cache.IPAddr.Val == AppConfig.MyGateway.Val) && ((AppConfig.MyIPAddr.Val 
      +                          ^ IPAddr->Val) & AppConfig.MyMask.Val)))
 26735                           
 26736                           ;incstack = 0
 26737  018684  C100  FFD9         	movff	ARPIsResolved@IPAddr,fsr2l
 26738  018688  C101  FFDA         	movff	ARPIsResolved@IPAddr+1,fsr2h
 26739  01868C  CFDE F104          	movff	postinc2,??_ARPIsResolved
 26740  018690  CFDE F105          	movff	postinc2,??_ARPIsResolved+1
 26741  018694  CFDE F106          	movff	postinc2,??_ARPIsResolved+2
 26742  018698  CFDE F107          	movff	postinc2,??_ARPIsResolved+3
 26743  01869C  0100               	movlb	0	; () banked
 26744  01869E  51C0               	movf	(_Cache+3)& (0+255),w,b
 26745  0186A0  0101               	movlb	1	; () banked
 26746  0186A2  1907               	xorwf	(??_ARPIsResolved+3)& (0+255),w,b
 26747  0186A4  E10E               	bnz	u14185
 26748  0186A6  0100               	movlb	0	; () banked
 26749  0186A8  51BF               	movf	(_Cache+2)& (0+255),w,b
 26750  0186AA  0101               	movlb	1	; () banked
 26751  0186AC  1906               	xorwf	(??_ARPIsResolved+2)& (0+255),w,b
 26752  0186AE  E109               	bnz	u14185
 26753  0186B0  0100               	movlb	0	; () banked
 26754  0186B2  51BE               	movf	(_Cache+1)& (0+255),w,b
 26755  0186B4  0101               	movlb	1	; () banked
 26756  0186B6  1905               	xorwf	(??_ARPIsResolved+1)& (0+255),w,b
 26757  0186B8  E104               	bnz	u14185
 26758  0186BA  0100               	movlb	0	; () banked
 26759  0186BC  51BD               	movf	_Cache& (0+255),w,b
 26760  0186BE  0101               	movlb	1	; () banked
 26761  0186C0  1904               	xorwf	??_ARPIsResolved& (0+255),w,b
 26762  0186C2                     u14185:
 26763  0186C2  B4D8               	btfsc	status,2,c
 26764  0186C4  D058               	goto	l12958
 26765                           
 26766                           ; BSR set to: 1
 26767  0186C6  0100               	movlb	0	; () banked
 26768  0186C8  51C0               	movf	(_Cache+3)& (0+255),w,b
 26769  0186CA  0102               	movlb	2	; () banked
 26770  0186CC  1947               	xorwf	(_AppConfig+11)& (0+255),w,b
 26771  0186CE  E10E               	bnz	u14195
 26772  0186D0  0100               	movlb	0	; () banked
 26773  0186D2  51BF               	movf	(_Cache+2)& (0+255),w,b
 26774  0186D4  0102               	movlb	2	; () banked
 26775  0186D6  1946               	xorwf	(_AppConfig+10)& (0+255),w,b
 26776  0186D8  E109               	bnz	u14195
 26777  0186DA  0100               	movlb	0	; () banked
 26778  0186DC  51BE               	movf	(_Cache+1)& (0+255),w,b
 26779  0186DE  0102               	movlb	2	; () banked
 26780  0186E0  1945               	xorwf	(_AppConfig+9)& (0+255),w,b
 26781  0186E2  E104               	bnz	u14195
 26782  0186E4  0100               	movlb	0	; () banked
 26783  0186E6  51BD               	movf	_Cache& (0+255),w,b
 26784  0186E8  0102               	movlb	2	; () banked
 26785  0186EA  1944               	xorwf	(_AppConfig+8)& (0+255),w,b
 26786  0186EC                     u14195:
 26787  0186EC  A4D8               	btfss	status,2,c
 26788  0186EE  D052               	goto	l12964
 26789                           
 26790                           ; BSR set to: 2
 26791  0186F0  C100  FFD9         	movff	ARPIsResolved@IPAddr,fsr2l
 26792  0186F4  C101  FFDA         	movff	ARPIsResolved@IPAddr+1,fsr2h
 26793  0186F8  CFDE F104          	movff	postinc2,??_ARPIsResolved
 26794  0186FC  CFDE F105          	movff	postinc2,??_ARPIsResolved+1
 26795  018700  CFDE F106          	movff	postinc2,??_ARPIsResolved+2
 26796  018704  CFDE F107          	movff	postinc2,??_ARPIsResolved+3
 26797  018708  0102               	movlb	2	; () banked
 26798  01870A  513C               	movf	_AppConfig& (0+255),w,b
 26799  01870C  0101               	movlb	1	; () banked
 26800  01870E  1904               	xorwf	??_ARPIsResolved& (0+255),w,b
 26801  018710  0101               	movlb	1	; () banked
 26802  018712  6F08               	movwf	(??_ARPIsResolved+4)& (0+255),b
 26803  018714  0102               	movlb	2	; () banked
 26804  018716  513D               	movf	(_AppConfig+1)& (0+255),w,b
 26805  018718  0101               	movlb	1	; () banked
 26806  01871A  1905               	xorwf	(??_ARPIsResolved+1)& (0+255),w,b
 26807  01871C  0101               	movlb	1	; () banked
 26808  01871E  6F09               	movwf	(??_ARPIsResolved+5)& (0+255),b
 26809  018720  0102               	movlb	2	; () banked
 26810  018722  513E               	movf	(_AppConfig+2)& (0+255),w,b
 26811  018724  0101               	movlb	1	; () banked
 26812  018726  1906               	xorwf	(??_ARPIsResolved+2)& (0+255),w,b
 26813  018728  0101               	movlb	1	; () banked
 26814  01872A  6F0A               	movwf	(??_ARPIsResolved+6)& (0+255),b
 26815  01872C  0102               	movlb	2	; () banked
 26816  01872E  513F               	movf	(_AppConfig+3)& (0+255),w,b
 26817  018730  0101               	movlb	1	; () banked
 26818  018732  1907               	xorwf	(??_ARPIsResolved+3)& (0+255),w,b
 26819  018734  0101               	movlb	1	; () banked
 26820  018736  6F0B               	movwf	(??_ARPIsResolved+7)& (0+255),b
 26821  018738  0102               	movlb	2	; () banked
 26822  01873A  5140               	movf	(_AppConfig+4)& (0+255),w,b
 26823  01873C  0101               	movlb	1	; () banked
 26824  01873E  1508               	andwf	(??_ARPIsResolved+4)& (0+255),w,b
 26825  018740  0101               	movlb	1	; () banked
 26826  018742  6F0C               	movwf	(??_ARPIsResolved+8)& (0+255),b
 26827  018744  0102               	movlb	2	; () banked
 26828  018746  5141               	movf	(_AppConfig+5)& (0+255),w,b
 26829  018748  0101               	movlb	1	; () banked
 26830  01874A  1509               	andwf	(??_ARPIsResolved+5)& (0+255),w,b
 26831  01874C  0101               	movlb	1	; () banked
 26832  01874E  6F0D               	movwf	(??_ARPIsResolved+9)& (0+255),b
 26833  018750  0102               	movlb	2	; () banked
 26834  018752  5142               	movf	(_AppConfig+6)& (0+255),w,b
 26835  018754  0101               	movlb	1	; () banked
 26836  018756  150A               	andwf	(??_ARPIsResolved+6)& (0+255),w,b
 26837  018758  0101               	movlb	1	; () banked
 26838  01875A  6F0E               	movwf	(??_ARPIsResolved+10)& (0+255),b
 26839  01875C  0102               	movlb	2	; () banked
 26840  01875E  5143               	movf	(_AppConfig+7)& (0+255),w,b
 26841  018760  0101               	movlb	1	; () banked
 26842  018762  150B               	andwf	(??_ARPIsResolved+7)& (0+255),w,b
 26843  018764  0101               	movlb	1	; () banked
 26844  018766  6F0F               	movwf	(??_ARPIsResolved+11)& (0+255),b
 26845  018768  0101               	movlb	1	; () banked
 26846  01876A  510F               	movf	(??_ARPIsResolved+11)& (0+255),w,b
 26847  01876C  110C               	iorwf	(??_ARPIsResolved+8)& (0+255),w,b
 26848  01876E  110D               	iorwf	(??_ARPIsResolved+9)& (0+255),w,b
 26849  018770  110E               	iorwf	(??_ARPIsResolved+10)& (0+255),w,b
 26850  018772  B4D8               	btfsc	status,2,c
 26851  018774  D00F               	goto	l12964
 26852  018776                     l12958:
 26853                           
 26854                           ; BSR set to: 1
 26855                           ;arp.c: 658: {
 26856                           ;arp.c: 659: *MACAddr = Cache.MACAddr;
 26857  018776  EE20  F0C1         	lfsr	2,_Cache+4
 26858  01877A  0101               	movlb	1	; () banked
 26859  01877C  C102  FFE1         	movff	ARPIsResolved@MACAddr,fsr1l
 26860  018780  0101               	movlb	1	; () banked
 26861  018782  C103  FFE2         	movff	ARPIsResolved@MACAddr+1,fsr1h
 26862  018786  0E06               	movlw	6
 26863  018788                     u14211:
 26864  018788  CFDE FFE6          	movff	postinc2,postinc1
 26865  01878C  2EE8               	decfsz	wreg,f,c
 26866  01878E  D7FC               	goto	u14211
 26867                           
 26868                           ; BSR set to: 1
 26869                           ;arp.c: 661: return 1;
 26870  018790  0E01               	movlw	1
 26871  018792  0012               	return	
 26872  018794                     l12964:
 26873                           
 26874                           ;arp.c: 662: }
 26875                           ;arp.c: 666: return 0;
 26876  018794  0E00               	movlw	0
 26877  018796  0012               	return	
 26878  018798                     __end_of_ARPIsResolved:
 26879                           	opt stack 0
 26880                           tblptru	equ	0xFF8
 26881                           tblptrh	equ	0xFF7
 26882                           tblptrl	equ	0xFF6
 26883                           tablat	equ	0xFF5
 26884                           prodh	equ	0xFF4
 26885                           prodl	equ	0xFF3
 26886                           intcon	equ	0xFF2
 26887                           indf0	equ	0xFEF
 26888                           postinc0	equ	0xFEE
 26889                           fsr0h	equ	0xFEA
 26890                           fsr0l	equ	0xFE9
 26891                           wreg	equ	0xFE8
 26892                           indf1	equ	0xFE7
 26893                           postinc1	equ	0xFE6
 26894                           postdec1	equ	0xFE5
 26895                           fsr1h	equ	0xFE2
 26896                           fsr1l	equ	0xFE1
 26897                           indf2	equ	0xFDF
 26898                           postinc2	equ	0xFDE
 26899                           postdec2	equ	0xFDD
 26900                           fsr2h	equ	0xFDA
 26901                           fsr2l	equ	0xFD9
 26902                           status	equ	0xFD8
 26903                           
 26904 ;; *************** function _TCPProcess *****************
 26905 ;; Defined at:
 26906 ;;		line 2781 in file "../tcpip/tcp.c"
 26907 ;; Parameters:    Size  Location     Type
 26908 ;;  remote          2  126[BANK1 ] PTR struct .
 26909 ;;		 -> remoteNode(10), 
 26910 ;;  localIP         2  128[BANK1 ] PTR struct .
 26911 ;;		 -> StackTask@tempLocalIP(4), 
 26912 ;;  len             2  130[BANK1 ] unsigned int 
 26913 ;; Auto vars:     Size  Location     Type
 26914 ;;  TCPHeader      20  151[BANK1 ] struct .
 26915 ;;  pseudoHeader   12  139[BANK1 ] struct _PSEUDO_HEADER
 26916 ;;  checksum2       2  136[BANK1 ] struct .
 26917 ;;  checksum1       2  134[BANK1 ] struct .
 26918 ;;  optionsSize     1  138[BANK1 ] unsigned char 
 26919 ;; Return value:  Size  Location     Type
 26920 ;;                  1    wreg      unsigned char 
 26921 ;; Registers used:
 26922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26923 ;; Tracked objects:
 26924 ;;		On entry : 0/0
 26925 ;;		On exit  : 0/0
 26926 ;;		Unchanged: 0/0
 26927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 26928 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26929 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26930 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26931 ;;      Totals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26932 ;;Total ram usage:       45 bytes
 26933 ;; Hardware stack levels used:    1
 26934 ;; Hardware stack levels required when called:   16
 26935 ;; This function calls:
 26936 ;;		_CalcIPBufferChecksum
 26937 ;;		_CalcIPChecksum
 26938 ;;		_FindMatchingSocket
 26939 ;;		_HandleTCPSeg
 26940 ;;		_IPSetRxBuffer
 26941 ;;		_MACDiscardRx
 26942 ;;		_MACGetArray
 26943 ;;		_SwapTCPHeader
 26944 ;;		_swaps
 26945 ;; This function is called by:
 26946 ;;		_StackTask
 26947 ;; This function uses a non-reentrant model
 26948 ;;
 26949                           
 26950                           	psect	text52
 26951  016A6E                     __ptext52:
 26952                           	opt stack 0
 26953  016A6E                     _TCPProcess:
 26954                           	opt stack 13
 26955                           
 26956                           ;tcp.c: 2783: TCP_HEADER TCPHeader;
 26957                           ;tcp.c: 2784: PSEUDO_HEADER pseudoHeader;
 26958                           ;tcp.c: 2785: TCPIP_UINT16_VAL checksum1;
 26959                           ;tcp.c: 2786: TCPIP_UINT16_VAL checksum2;
 26960                           ;tcp.c: 2787: uint8_t optionsSize;
 26961                           ;tcp.c: 2790: pseudoHeader.SourceAddress = remote->IPAddr;
 26962                           
 26963                           ;incstack = 0
 26964  016A6E  C17E  FFD9         	movff	TCPProcess@remote,fsr2l
 26965  016A72  C17F  FFDA         	movff	TCPProcess@remote+1,fsr2h
 26966  016A76  0101               	movlb	1	; () banked
 26967  016A78  CFDE F18B          	movff	postinc2,TCPProcess@pseudoHeader
 26968  016A7C  0101               	movlb	1	; () banked
 26969  016A7E  CFDE F18C          	movff	postinc2,TCPProcess@pseudoHeader+1
 26970  016A82  0101               	movlb	1	; () banked
 26971  016A84  CFDE F18D          	movff	postinc2,TCPProcess@pseudoHeader+2
 26972  016A88  0101               	movlb	1	; () banked
 26973  016A8A  CFDE F18E          	movff	postinc2,TCPProcess@pseudoHeader+3
 26974                           
 26975                           ;tcp.c: 2791: pseudoHeader.DestAddress = *localIP;
 26976  016A8E  C180  FFD9         	movff	TCPProcess@localIP,fsr2l
 26977  016A92  C181  FFDA         	movff	TCPProcess@localIP+1,fsr2h
 26978  016A96  0101               	movlb	1	; () banked
 26979  016A98  CFDE F18F          	movff	postinc2,TCPProcess@pseudoHeader+4
 26980  016A9C  0101               	movlb	1	; () banked
 26981  016A9E  CFDE F190          	movff	postinc2,TCPProcess@pseudoHeader+5
 26982  016AA2  0101               	movlb	1	; () banked
 26983  016AA4  CFDE F191          	movff	postinc2,TCPProcess@pseudoHeader+6
 26984  016AA8  0101               	movlb	1	; () banked
 26985  016AAA  CFDE F192          	movff	postinc2,TCPProcess@pseudoHeader+7
 26986                           
 26987                           ; BSR set to: 1
 26988                           ;tcp.c: 2792: pseudoHeader.Zero = 0x0;
 26989  016AAE  0E00               	movlw	0
 26990  016AB0  0101               	movlb	1	; () banked
 26991  016AB2  6F93               	movwf	(TCPProcess@pseudoHeader+8)& (0+255),b
 26992                           
 26993                           ; BSR set to: 1
 26994                           ;tcp.c: 2793: pseudoHeader.Protocol = (6u);
 26995  016AB4  0E06               	movlw	6
 26996  016AB6  0101               	movlb	1	; () banked
 26997  016AB8  6F94               	movwf	(TCPProcess@pseudoHeader+9)& (0+255),b
 26998                           
 26999                           ; BSR set to: 1
 27000                           ;tcp.c: 2794: pseudoHeader.Length = len;
 27001  016ABA  C182  F195         	movff	TCPProcess@len,TCPProcess@pseudoHeader+10
 27002  016ABE  C183  F196         	movff	TCPProcess@len+1,TCPProcess@pseudoHeader+11
 27003                           
 27004                           ; BSR set to: 1
 27005                           ;tcp.c: 2796: (pseudoHeader.Length = swaps(pseudoHeader.Length));
 27006  016AC2  C195  F100         	movff	TCPProcess@pseudoHeader+10,swaps@v
 27007  016AC6  C196  F101         	movff	TCPProcess@pseudoHeader+11,swaps@v+1
 27008  016ACA  EC79  F0DC         	call	_swaps	;wreg free
 27009  016ACE  0101               	movlb	1	; () banked
 27010  016AD0  C100  F195         	movff	?_swaps,TCPProcess@pseudoHeader+10
 27011  016AD4  0101               	movlb	1	; () banked
 27012  016AD6  C101  F196         	movff	?_swaps+1,TCPProcess@pseudoHeader+11
 27013                           
 27014                           ; BSR set to: 1
 27015                           ;tcp.c: 2798: checksum1.Val = ~CalcIPChecksum((uint8_t*)&pseudoHeader,
 27016                           ;tcp.c: 2799: sizeof(pseudoHeader));
 27017  016ADA  0101               	movlb	1	; () banked
 27018  016ADC  0E01               	movlw	high TCPProcess@pseudoHeader
 27019  016ADE  0101               	movlb	1	; () banked
 27020  016AE0  6F01               	movwf	(CalcIPChecksum@buffer+1)& (0+255),b
 27021  016AE2  0101               	movlb	1	; () banked
 27022  016AE4  0E8B               	movlw	low TCPProcess@pseudoHeader
 27023  016AE6  0101               	movlb	1	; () banked
 27024  016AE8  6F00               	movwf	CalcIPChecksum@buffer& (0+255),b
 27025  016AEA  0E00               	movlw	0
 27026  016AEC  0101               	movlb	1	; () banked
 27027  016AEE  6F03               	movwf	(CalcIPChecksum@count+1)& (0+255),b
 27028  016AF0  0E0C               	movlw	12
 27029  016AF2  0101               	movlb	1	; () banked
 27030  016AF4  6F02               	movwf	CalcIPChecksum@count& (0+255),b
 27031  016AF6  EC6A  F0C7         	call	_CalcIPChecksum	;wreg free
 27032  016AFA  0101               	movlb	1	; () banked
 27033  016AFC  1D00               	comf	?_CalcIPChecksum& (0+255),w,b
 27034  016AFE  0101               	movlb	1	; () banked
 27035  016B00  6F86               	movwf	TCPProcess@checksum1& (0+255),b
 27036  016B02  0101               	movlb	1	; () banked
 27037  016B04  1D01               	comf	(?_CalcIPChecksum+1)& (0+255),w,b
 27038  016B06  0101               	movlb	1	; () banked
 27039  016B08  6F87               	movwf	(TCPProcess@checksum1+1)& (0+255),b
 27040                           
 27041                           ; BSR set to: 1
 27042                           ;tcp.c: 2803: checksum2.Val = CalcIPBufferChecksum(len);
 27043  016B0A  C182  F106         	movff	TCPProcess@len,CalcIPBufferChecksum@len
 27044  016B0E  C183  F107         	movff	TCPProcess@len+1,CalcIPBufferChecksum@len+1
 27045  016B12  EC74  F0BE         	call	_CalcIPBufferChecksum	;wreg free
 27046  016B16  0101               	movlb	1	; () banked
 27047  016B18  C106  F188         	movff	?_CalcIPBufferChecksum,TCPProcess@checksum2
 27048  016B1C  0101               	movlb	1	; () banked
 27049  016B1E  C107  F189         	movff	?_CalcIPBufferChecksum+1,TCPProcess@checksum2+1
 27050                           
 27051                           ; BSR set to: 1
 27052                           ;tcp.c: 2806: if(checksum1.Val != checksum2.Val)
 27053  016B22  0101               	movlb	1	; () banked
 27054  016B24  5189               	movf	(TCPProcess@checksum2+1)& (0+255),w,b
 27055  016B26  0101               	movlb	1	; () banked
 27056  016B28  1987               	xorwf	(TCPProcess@checksum1+1)& (0+255),w,b
 27057  016B2A  E104               	bnz	u16505
 27058  016B2C  0101               	movlb	1	; () banked
 27059  016B2E  5188               	movf	TCPProcess@checksum2& (0+255),w,b
 27060  016B30  0101               	movlb	1	; () banked
 27061  016B32  1986               	xorwf	TCPProcess@checksum1& (0+255),w,b
 27062  016B34                     u16505:
 27063  016B34  B4D8               	btfsc	status,2,c
 27064  016B36  D003               	goto	l14382
 27065                           
 27066                           ; BSR set to: 1
 27067                           ;tcp.c: 2807: {
 27068                           ;tcp.c: 2808: MACDiscardRx();
 27069  016B38  EC8E  F0D8         	call	_MACDiscardRx	;wreg free
 27070  016B3C  0012               	return	
 27071  016B3E                     l14382:
 27072                           
 27073                           ;tcp.c: 2810: }
 27074                           ;tcp.c: 2822: IPSetRxBuffer(0);
 27075  016B3E  0E00               	movlw	0
 27076  016B40  0101               	movlb	1	; () banked
 27077  016B42  6F07               	movwf	(IPSetRxBuffer@Offset+1)& (0+255),b
 27078  016B44  0E00               	movlw	0
 27079  016B46  0101               	movlb	1	; () banked
 27080  016B48  6F06               	movwf	IPSetRxBuffer@Offset& (0+255),b
 27081  016B4A  EC88  F0DC         	call	_IPSetRxBuffer	;wreg free
 27082                           
 27083                           ;tcp.c: 2823: MACGetArray((uint8_t*)&TCPHeader, sizeof(TCPHeader));
 27084  016B4E  0101               	movlb	1	; () banked
 27085  016B50  0E01               	movlw	high TCPProcess@TCPHeader
 27086  016B52  0101               	movlb	1	; () banked
 27087  016B54  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 27088  016B56  0101               	movlb	1	; () banked
 27089  016B58  0E97               	movlw	low TCPProcess@TCPHeader
 27090  016B5A  0101               	movlb	1	; () banked
 27091  016B5C  6F00               	movwf	MACGetArray@val& (0+255),b
 27092  016B5E  0E00               	movlw	0
 27093  016B60  0101               	movlb	1	; () banked
 27094  016B62  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 27095  016B64  0E14               	movlw	20
 27096  016B66  0101               	movlb	1	; () banked
 27097  016B68  6F02               	movwf	MACGetArray@len& (0+255),b
 27098  016B6A  EC35  F0D7         	call	_MACGetArray	;wreg free
 27099                           
 27100                           ;tcp.c: 2824: SwapTCPHeader(&TCPHeader);
 27101  016B6E  0101               	movlb	1	; () banked
 27102  016B70  0E01               	movlw	high TCPProcess@TCPHeader
 27103  016B72  0101               	movlb	1	; () banked
 27104  016B74  6F06               	movwf	(SwapTCPHeader@header+1)& (0+255),b
 27105  016B76  0101               	movlb	1	; () banked
 27106  016B78  0E97               	movlw	low TCPProcess@TCPHeader
 27107  016B7A  0101               	movlb	1	; () banked
 27108  016B7C  6F05               	movwf	SwapTCPHeader@header& (0+255),b
 27109  016B7E  EC85  F0B0         	call	_SwapTCPHeader	;wreg free
 27110                           
 27111                           ;tcp.c: 2828: optionsSize = (uint8_t)((TCPHeader.DataOffset.Val << 2)-
 27112                           ;tcp.c: 2829: sizeof(TCPHeader));
 27113  016B82  0101               	movlb	1	; () banked
 27114  016B84  39A3               	swapf	(TCPProcess@TCPHeader+12)& (0+255),w,b
 27115  016B86  0B0F               	andlw	15
 27116  016B88  0101               	movlb	1	; () banked
 27117  016B8A  6F84               	movwf	??_TCPProcess& (0+255),b
 27118  016B8C  0101               	movlb	1	; () banked
 27119  016B8E  90D8               	bcf	status,0,c
 27120  016B90  3784               	rlcf	??_TCPProcess& (0+255),f,b
 27121  016B92  0101               	movlb	1	; () banked
 27122  016B94  90D8               	bcf	status,0,c
 27123  016B96  3584               	rlcf	??_TCPProcess& (0+255),w,b
 27124  016B98  0FEC               	addlw	236
 27125  016B9A  0101               	movlb	1	; () banked
 27126  016B9C  6F8A               	movwf	TCPProcess@optionsSize& (0+255),b
 27127                           
 27128                           ; BSR set to: 1
 27129                           ;tcp.c: 2830: len = len - optionsSize - sizeof(TCPHeader);
 27130  016B9E  0101               	movlb	1	; () banked
 27131  016BA0  518A               	movf	TCPProcess@optionsSize& (0+255),w,b
 27132  016BA2  0101               	movlb	1	; () banked
 27133  016BA4  6F84               	movwf	??_TCPProcess& (0+255),b
 27134  016BA6  6B85               	clrf	(??_TCPProcess+1)& (0+255),b
 27135  016BA8  0E14               	movlw	20
 27136  016BAA  0101               	movlb	1	; () banked
 27137  016BAC  2784               	addwf	??_TCPProcess& (0+255),f,b
 27138  016BAE  0E00               	movlw	0
 27139  016BB0  2385               	addwfc	(??_TCPProcess+1)& (0+255),f,b
 27140  016BB2  0101               	movlb	1	; () banked
 27141  016BB4  1F84               	comf	??_TCPProcess& (0+255),f,b
 27142  016BB6  1F85               	comf	(??_TCPProcess+1)& (0+255),f,b
 27143  016BB8  4B84               	infsnz	??_TCPProcess& (0+255),f,b
 27144  016BBA  2B85               	incf	(??_TCPProcess+1)& (0+255),f,b
 27145  016BBC  0101               	movlb	1	; () banked
 27146  016BBE  5182               	movf	TCPProcess@len& (0+255),w,b
 27147  016BC0  0101               	movlb	1	; () banked
 27148  016BC2  2584               	addwf	??_TCPProcess& (0+255),w,b
 27149  016BC4  0101               	movlb	1	; () banked
 27150  016BC6  6F82               	movwf	TCPProcess@len& (0+255),b
 27151  016BC8  0101               	movlb	1	; () banked
 27152  016BCA  5183               	movf	(TCPProcess@len+1)& (0+255),w,b
 27153  016BCC  0101               	movlb	1	; () banked
 27154  016BCE  2185               	addwfc	(??_TCPProcess+1)& (0+255),w,b
 27155  016BD0  0101               	movlb	1	; () banked
 27156  016BD2  6F83               	movwf	(TCPProcess@len+1)& (0+255),b
 27157                           
 27158                           ; BSR set to: 1
 27159                           ;tcp.c: 2833: if(FindMatchingSocket(&TCPHeader, remote))
 27160  016BD4  0101               	movlb	1	; () banked
 27161  016BD6  0E01               	movlw	high TCPProcess@TCPHeader
 27162  016BD8  0101               	movlb	1	; () banked
 27163  016BDA  6F29               	movwf	(FindMatchingSocket@h+1)& (0+255),b
 27164  016BDC  0101               	movlb	1	; () banked
 27165  016BDE  0E97               	movlw	low TCPProcess@TCPHeader
 27166  016BE0  0101               	movlb	1	; () banked
 27167  016BE2  6F28               	movwf	FindMatchingSocket@h& (0+255),b
 27168  016BE4  0101               	movlb	1	; () banked
 27169  016BE6  C17F  F12B         	movff	TCPProcess@remote+1,FindMatchingSocket@remote+1
 27170  016BEA  0101               	movlb	1	; () banked
 27171  016BEC  C17E  F12A         	movff	TCPProcess@remote,FindMatchingSocket@remote
 27172  016BF0  ECFF  F09A         	call	_FindMatchingSocket	;wreg free
 27173  016BF4  0900               	iorlw	0
 27174  016BF6  B4D8               	btfsc	status,2,c
 27175  016BF8  D00E               	goto	l14396
 27176                           
 27177                           ;tcp.c: 2834: {
 27178                           ;tcp.c: 2843: HandleTCPSeg(&TCPHeader, len);
 27179  016BFA  0101               	movlb	1	; () banked
 27180  016BFC  0E01               	movlw	high TCPProcess@TCPHeader
 27181  016BFE  0101               	movlb	1	; () banked
 27182  016C00  6F57               	movwf	(HandleTCPSeg@h+1)& (0+255),b
 27183  016C02  0101               	movlb	1	; () banked
 27184  016C04  0E97               	movlw	low TCPProcess@TCPHeader
 27185  016C06  0101               	movlb	1	; () banked
 27186  016C08  6F56               	movwf	HandleTCPSeg@h& (0+255),b
 27187  016C0A  C182  F158         	movff	TCPProcess@len,HandleTCPSeg@len
 27188  016C0E  C183  F159         	movff	TCPProcess@len+1,HandleTCPSeg@len+1
 27189  016C12  EC00  F080         	call	_HandleTCPSeg	;wreg free
 27190  016C16                     l14396:
 27191                           
 27192                           ;tcp.c: 2856: }
 27193                           ;tcp.c: 2869: MACDiscardRx();
 27194  016C16  EC8E  F0D8         	call	_MACDiscardRx	;wreg free
 27195  016C1A  0012               	return	
 27196  016C1C                     __end_of_TCPProcess:
 27197                           	opt stack 0
 27198                           tblptru	equ	0xFF8
 27199                           tblptrh	equ	0xFF7
 27200                           tblptrl	equ	0xFF6
 27201                           tablat	equ	0xFF5
 27202                           prodh	equ	0xFF4
 27203                           prodl	equ	0xFF3
 27204                           intcon	equ	0xFF2
 27205                           indf0	equ	0xFEF
 27206                           postinc0	equ	0xFEE
 27207                           fsr0h	equ	0xFEA
 27208                           fsr0l	equ	0xFE9
 27209                           wreg	equ	0xFE8
 27210                           indf1	equ	0xFE7
 27211                           postinc1	equ	0xFE6
 27212                           postdec1	equ	0xFE5
 27213                           fsr1h	equ	0xFE2
 27214                           fsr1l	equ	0xFE1
 27215                           indf2	equ	0xFDF
 27216                           postinc2	equ	0xFDE
 27217                           postdec2	equ	0xFDD
 27218                           fsr2h	equ	0xFDA
 27219                           fsr2l	equ	0xFD9
 27220                           status	equ	0xFD8
 27221                           
 27222 ;; *************** function _HandleTCPSeg *****************
 27223 ;; Defined at:
 27224 ;;		line 3570 in file "../tcpip/tcp.c"
 27225 ;; Parameters:    Size  Location     Type
 27226 ;;  h               2   86[BANK1 ] PTR struct .
 27227 ;;		 -> TCPProcess@TCPHeader(20), 
 27228 ;;  len             2   88[BANK1 ] unsigned int 
 27229 ;; Auto vars:     Size  Location     Type
 27230 ;;  localAckNumb    4  117[BANK1 ] unsigned long 
 27231 ;;  lMissingByte    4  111[BANK1 ] long 
 27232 ;;  dwTemp          4  107[BANK1 ] unsigned long 
 27233 ;;  localSeqNumb    4  101[BANK1 ] unsigned long 
 27234 ;;  wMissingByte    2  124[BANK1 ] unsigned int 
 27235 ;;  wTemp           2  122[BANK1 ] unsigned short 
 27236 ;;  wFreeSpace      2  115[BANK1 ] unsigned int 
 27237 ;;  wSegmentLeng    2  105[BANK1 ] unsigned int 
 27238 ;;  wNewWindow      2   98[BANK1 ] unsigned int 
 27239 ;;  localHeaderF    1  121[BANK1 ] unsigned char 
 27240 ;;  bSegmentAcce    1  100[BANK1 ] unsigned char 
 27241 ;; Return value:  Size  Location     Type
 27242 ;;		None               void
 27243 ;; Registers used:
 27244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27245 ;; Tracked objects:
 27246 ;;		On entry : 0/0
 27247 ;;		On exit  : 0/0
 27248 ;;		Unchanged: 0/0
 27249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 27250 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27251 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27252 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27253 ;;      Totals:         0       0      40       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27254 ;;Total ram usage:       40 bytes
 27255 ;; Hardware stack levels used:    1
 27256 ;; Hardware stack levels required when called:   15
 27257 ;; This function calls:
 27258 ;;		_CloseSocket
 27259 ;;		_GetMaxSegSizeOption
 27260 ;;		_IPSetRxBuffer
 27261 ;;		_SendTCP
 27262 ;;		_SyncTCB
 27263 ;;		_TCPRAMCopy
 27264 ;;		_TickGet
 27265 ;;		_TickGetDiv256
 27266 ;; This function is called by:
 27267 ;;		_TCPProcess
 27268 ;; This function uses a non-reentrant model
 27269 ;;
 27270                           
 27271                           	psect	text53
 27272  010000                     __ptext53:
 27273                           	opt stack 0
 27274  010000                     _HandleTCPSeg:
 27275                           	opt stack 13
 27276                           
 27277                           ;tcp.c: 3572: uint32_t dwTemp;
 27278                           ;tcp.c: 3573: unsigned short wTemp;
 27279                           ;tcp.c: 3574: int32_t lMissingBytes;
 27280                           ;tcp.c: 3575: uint16_t wMissingBytes;
 27281                           ;tcp.c: 3576: uint16_t wFreeSpace;
 27282                           ;tcp.c: 3577: uint8_t localHeaderFlags;
 27283                           ;tcp.c: 3578: uint32_t localAckNumber;
 27284                           ;tcp.c: 3579: uint32_t localSeqNumber;
 27285                           ;tcp.c: 3580: uint16_t wSegmentLength;
 27286                           ;tcp.c: 3581: bool bSegmentAcceptable;
 27287                           ;tcp.c: 3582: uint16_t wNewWindow;
 27288                           ;tcp.c: 3588: localHeaderFlags = h->Flags.byte;
 27289                           
 27290                           ;incstack = 0
 27291  010000  0101               	movlb	1	; () banked
 27292  010002  EE20 F00D          	lfsr	2,13
 27293  010006  0101               	movlb	1	; () banked
 27294  010008  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27295  01000A  26D9               	addwf	fsr2l,f,c
 27296  01000C  0101               	movlb	1	; () banked
 27297  01000E  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27298  010010  22DA               	addwfc	fsr2h,f,c
 27299  010012  50DF               	movf	indf2,w,c
 27300  010014  0101               	movlb	1	; () banked
 27301  010016  6F79               	movwf	HandleTCPSeg@localHeaderFlags& (0+255),b
 27302                           
 27303                           ;tcp.c: 3589: localAckNumber = h->AckNumber;
 27304  010018  0101               	movlb	1	; () banked
 27305  01001A  EE20 F008          	lfsr	2,8
 27306  01001E  0101               	movlb	1	; () banked
 27307  010020  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27308  010022  26D9               	addwf	fsr2l,f,c
 27309  010024  0101               	movlb	1	; () banked
 27310  010026  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27311  010028  22DA               	addwfc	fsr2h,f,c
 27312  01002A  0101               	movlb	1	; () banked
 27313  01002C  CFDE F175          	movff	postinc2,HandleTCPSeg@localAckNumber
 27314  010030  0101               	movlb	1	; () banked
 27315  010032  CFDE F176          	movff	postinc2,HandleTCPSeg@localAckNumber+1
 27316  010036  0101               	movlb	1	; () banked
 27317  010038  CFDE F177          	movff	postinc2,HandleTCPSeg@localAckNumber+2
 27318  01003C  0101               	movlb	1	; () banked
 27319  01003E  CFDE F178          	movff	postinc2,HandleTCPSeg@localAckNumber+3
 27320                           
 27321                           ;tcp.c: 3590: localSeqNumber = h->SeqNumber;
 27322  010042  0101               	movlb	1	; () banked
 27323  010044  EE20 F004          	lfsr	2,4
 27324  010048  0101               	movlb	1	; () banked
 27325  01004A  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27326  01004C  26D9               	addwf	fsr2l,f,c
 27327  01004E  0101               	movlb	1	; () banked
 27328  010050  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27329  010052  22DA               	addwfc	fsr2h,f,c
 27330  010054  0101               	movlb	1	; () banked
 27331  010056  CFDE F165          	movff	postinc2,HandleTCPSeg@localSeqNumber
 27332  01005A  0101               	movlb	1	; () banked
 27333  01005C  CFDE F166          	movff	postinc2,HandleTCPSeg@localSeqNumber+1
 27334  010060  0101               	movlb	1	; () banked
 27335  010062  CFDE F167          	movff	postinc2,HandleTCPSeg@localSeqNumber+2
 27336  010066  0101               	movlb	1	; () banked
 27337  010068  CFDE F168          	movff	postinc2,HandleTCPSeg@localSeqNumber+3
 27338                           
 27339                           ; BSR set to: 1
 27340                           ;tcp.c: 3594: MyTCBStub.Flags.vUnackedKeepalives = 0;
 27341  01006C  0101               	movlb	1	; () banked
 27342  01006E  91F7               	bcf	(_MyTCBStub+23)& (0+255),0,b
 27343  010070  0101               	movlb	1	; () banked
 27344  010072  93F7               	bcf	(_MyTCBStub+23)& (0+255),1,b
 27345  010074  0101               	movlb	1	; () banked
 27346  010076  95F7               	bcf	(_MyTCBStub+23)& (0+255),2,b
 27347                           
 27348                           ; BSR set to: 1
 27349                           ;tcp.c: 3595: if(!MyTCBStub.Flags.bTimerEnabled)
 27350  010078  0101               	movlb	1	; () banked
 27351  01007A  B9F7               	btfsc	(_MyTCBStub+23)& (0+255),4,b
 27352  01007C  D104               	goto	l13356
 27353                           
 27354                           ; BSR set to: 1
 27355                           ;tcp.c: 3596: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 27356  01007E  EC94  F0DB         	call	_TickGet	;wreg free
 27357  010082  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 27358  010086  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 27359  01008A  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 27360  01008E  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 27361  010092  0EE6               	movlw	230
 27362  010094  0101               	movlb	1	; () banked
 27363  010096  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27364  010098  0101               	movlb	1	; () banked
 27365  01009A  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 27366  01009C  0EF5               	movlw	245
 27367  01009E  0101               	movlb	1	; () banked
 27368  0100A0  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27369  0100A2  0101               	movlb	1	; () banked
 27370  0100A4  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 27371  0100A6  0E05               	movlw	5
 27372  0100A8  0101               	movlb	1	; () banked
 27373  0100AA  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 27374  0100AC  0101               	movlb	1	; () banked
 27375  0100AE  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 27376  0100B0  0E00               	movlw	0
 27377  0100B2  0101               	movlb	1	; () banked
 27378  0100B4  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 27379  0100B6  0101               	movlb	1	; () banked
 27380  0100B8  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 27381  0100BA  D0E5               	goto	l13356
 27382  0100BC                     l1304:
 27383                           
 27384                           ; BSR set to: 1
 27385                           ;tcp.c: 3607: if(localHeaderFlags & (0x04))
 27386  0100BC  0101               	movlb	1	; () banked
 27387  0100BE  A579               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),2,b
 27388  0100C0  D003               	goto	l1305
 27389                           
 27390                           ; BSR set to: 1
 27391                           ;tcp.c: 3608: {
 27392                           ;tcp.c: 3609: CloseSocket();
 27393  0100C2  ECF0  F0CD         	call	_CloseSocket	;wreg free
 27394  0100C6  0012               	return	
 27395  0100C8                     l1305:
 27396                           
 27397                           ; BSR set to: 1
 27398                           ;tcp.c: 3611: }
 27399                           ;tcp.c: 3614: if(localHeaderFlags & (0x10))
 27400  0100C8  0101               	movlb	1	; () banked
 27401  0100CA  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 27402  0100CC  D011               	goto	l1307
 27403                           
 27404                           ; BSR set to: 1
 27405                           ;tcp.c: 3615: {
 27406                           ;tcp.c: 3617: MyTCB.MySEQ = localAckNumber;
 27407  0100CE  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 27408  0100D2  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 27409  0100D6  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 27410  0100DA  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 27411                           
 27412                           ; BSR set to: 1
 27413                           ;tcp.c: 3618: SendTCP((0x04), 0);
 27414  0100DE  0E00               	movlw	0
 27415  0100E0  0101               	movlb	1	; () banked
 27416  0100E2  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27417  0100E4  0E04               	movlw	4
 27418  0100E6  ECC1  F096         	call	_SendTCP
 27419                           
 27420                           ;tcp.c: 3619: CloseSocket();
 27421  0100EA  ECF0  F0CD         	call	_CloseSocket	;wreg free
 27422  0100EE  0012               	return	
 27423  0100F0                     l1307:
 27424                           
 27425                           ; BSR set to: 1
 27426                           ;tcp.c: 3621: }
 27427                           ;tcp.c: 3624: if(localHeaderFlags & (0x02))
 27428  0100F0  0101               	movlb	1	; () banked
 27429  0100F2  A379               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),1,b
 27430  0100F4  D026               	goto	l13316
 27431                           
 27432                           ; BSR set to: 1
 27433                           ;tcp.c: 3625: {
 27434                           ;tcp.c: 3627: MyTCB.RemoteSEQ = localSeqNumber + 1;
 27435  0100F6  0E01               	movlw	1
 27436  0100F8  0101               	movlb	1	; () banked
 27437  0100FA  2565               	addwf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 27438  0100FC  0101               	movlb	1	; () banked
 27439  0100FE  6FC1               	movwf	(_MyTCB+8)& (0+255),b
 27440  010100  0E00               	movlw	0
 27441  010102  0101               	movlb	1	; () banked
 27442  010104  2166               	addwfc	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 27443  010106  0101               	movlb	1	; () banked
 27444  010108  6FC2               	movwf	(_MyTCB+9)& (0+255),b
 27445  01010A  0E00               	movlw	0
 27446  01010C  0101               	movlb	1	; () banked
 27447  01010E  2167               	addwfc	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 27448  010110  0101               	movlb	1	; () banked
 27449  010112  6FC3               	movwf	(_MyTCB+10)& (0+255),b
 27450  010114  0E00               	movlw	0
 27451  010116  0101               	movlb	1	; () banked
 27452  010118  2168               	addwfc	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 27453  01011A  0101               	movlb	1	; () banked
 27454  01011C  6FC4               	movwf	(_MyTCB+11)& (0+255),b
 27455                           
 27456                           ; BSR set to: 1
 27457                           ;tcp.c: 3630: MyTCB.wRemoteMSS = GetMaxSegSizeOption();
 27458  01011E  EC19  F0BF         	call	_GetMaxSegSizeOption	;wreg free
 27459  010122  0101               	movlb	1	; () banked
 27460  010124  C108  F1DC         	movff	?_GetMaxSegSizeOption,_MyTCB+35
 27461  010128  0101               	movlb	1	; () banked
 27462  01012A  C109  F1DD         	movff	?_GetMaxSegSizeOption+1,_MyTCB+36
 27463                           
 27464                           ; BSR set to: 1
 27465                           ;tcp.c: 3636: SendTCP((0x02) | (0x10), 0x01);
 27466  01012E  0E01               	movlw	1
 27467  010130  0101               	movlb	1	; () banked
 27468  010132  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27469  010134  0E12               	movlw	18
 27470  010136  ECC1  F096         	call	_SendTCP
 27471                           
 27472                           ;tcp.c: 3637: MyTCBStub.smState = TCP_SYN_RECEIVED;
 27473  01013A  0E06               	movlw	6
 27474  01013C  0101               	movlb	1	; () banked
 27475  01013E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 27476                           
 27477                           ;tcp.c: 3638: }
 27478  010140  0012               	return	
 27479  010142                     l13316:
 27480                           
 27481                           ; BSR set to: 1
 27482                           ;tcp.c: 3639: else
 27483                           ;tcp.c: 3640: {
 27484                           ;tcp.c: 3641: CloseSocket();
 27485  010142  ECF0  F0CD         	call	_CloseSocket	;wreg free
 27486  010146  0012               	return	
 27487  010148                     l1310:
 27488                           
 27489                           ; BSR set to: 1
 27490                           ;tcp.c: 3654: if(localHeaderFlags & (0x04))
 27491  010148  0101               	movlb	1	; () banked
 27492  01014A  B579               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),2,b
 27493  01014C  0012               	return	
 27494                           
 27495                           ; BSR set to: 1
 27496                           ;tcp.c: 3658: if(localHeaderFlags & (0x10))
 27497                           
 27498                           ; BSR set to: 1
 27499                           ;tcp.c: 3655: return;
 27500  01014E  0101               	movlb	1	; () banked
 27501  010150  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 27502  010152  D034               	goto	l1312
 27503                           
 27504                           ; BSR set to: 1
 27505                           ;tcp.c: 3659: {
 27506                           ;tcp.c: 3660: if(localAckNumber != MyTCB.MySEQ)
 27507  010154  0101               	movlb	1	; () banked
 27508  010156  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 27509  010158  0101               	movlb	1	; () banked
 27510  01015A  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 27511  01015C  E10E               	bnz	u14725
 27512  01015E  0101               	movlb	1	; () banked
 27513  010160  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 27514  010162  0101               	movlb	1	; () banked
 27515  010164  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 27516  010166  E109               	bnz	u14725
 27517  010168  0101               	movlb	1	; () banked
 27518  01016A  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 27519  01016C  0101               	movlb	1	; () banked
 27520  01016E  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 27521  010170  E104               	bnz	u14725
 27522  010172  0101               	movlb	1	; () banked
 27523  010174  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 27524  010176  0101               	movlb	1	; () banked
 27525  010178  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 27526  01017A                     u14725:
 27527  01017A  B4D8               	btfsc	status,2,c
 27528  01017C  D01F               	goto	l1312
 27529                           
 27530                           ; BSR set to: 1
 27531                           ;tcp.c: 3661: {
 27532                           ;tcp.c: 3664: localSeqNumber = MyTCB.MySEQ;
 27533  01017E  C1BD  F165         	movff	_MyTCB+4,HandleTCPSeg@localSeqNumber
 27534  010182  C1BE  F166         	movff	_MyTCB+5,HandleTCPSeg@localSeqNumber+1
 27535  010186  C1BF  F167         	movff	_MyTCB+6,HandleTCPSeg@localSeqNumber+2
 27536  01018A  C1C0  F168         	movff	_MyTCB+7,HandleTCPSeg@localSeqNumber+3
 27537                           
 27538                           ;tcp.c: 3665: MyTCB.MySEQ = localAckNumber;
 27539  01018E  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 27540  010192  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 27541  010196  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 27542  01019A  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 27543                           
 27544                           ; BSR set to: 1
 27545                           ;tcp.c: 3666: SendTCP((0x04), 0x01);
 27546  01019E  0E01               	movlw	1
 27547  0101A0  0101               	movlb	1	; () banked
 27548  0101A2  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27549  0101A4  0E04               	movlw	4
 27550  0101A6  ECC1  F096         	call	_SendTCP
 27551                           
 27552                           ;tcp.c: 3667: MyTCB.MySEQ = localSeqNumber;
 27553  0101AA  C165  F1BD         	movff	HandleTCPSeg@localSeqNumber,_MyTCB+4
 27554  0101AE  C166  F1BE         	movff	HandleTCPSeg@localSeqNumber+1,_MyTCB+5
 27555  0101B2  C167  F1BF         	movff	HandleTCPSeg@localSeqNumber+2,_MyTCB+6
 27556  0101B6  C168  F1C0         	movff	HandleTCPSeg@localSeqNumber+3,_MyTCB+7
 27557  0101BA  0012               	return	
 27558  0101BC                     l1312:
 27559                           
 27560                           ;tcp.c: 3669: }
 27561                           ;tcp.c: 3670: }
 27562                           ;tcp.c: 3676: if(localHeaderFlags & (0x02))
 27563  0101BC  0101               	movlb	1	; () banked
 27564  0101BE  A379               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),1,b
 27565  0101C0  0012               	return	
 27566                           
 27567                           ; BSR set to: 1
 27568                           ;tcp.c: 3677: {
 27569                           ;tcp.c: 3679: MyTCB.RemoteSEQ = localSeqNumber + 1;
 27570  0101C2  0E01               	movlw	1
 27571  0101C4  0101               	movlb	1	; () banked
 27572  0101C6  2565               	addwf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 27573  0101C8  0101               	movlb	1	; () banked
 27574  0101CA  6FC1               	movwf	(_MyTCB+8)& (0+255),b
 27575  0101CC  0E00               	movlw	0
 27576  0101CE  0101               	movlb	1	; () banked
 27577  0101D0  2166               	addwfc	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 27578  0101D2  0101               	movlb	1	; () banked
 27579  0101D4  6FC2               	movwf	(_MyTCB+9)& (0+255),b
 27580  0101D6  0E00               	movlw	0
 27581  0101D8  0101               	movlb	1	; () banked
 27582  0101DA  2167               	addwfc	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 27583  0101DC  0101               	movlb	1	; () banked
 27584  0101DE  6FC3               	movwf	(_MyTCB+10)& (0+255),b
 27585  0101E0  0E00               	movlw	0
 27586  0101E2  0101               	movlb	1	; () banked
 27587  0101E4  2168               	addwfc	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 27588  0101E6  0101               	movlb	1	; () banked
 27589  0101E8  6FC4               	movwf	(_MyTCB+11)& (0+255),b
 27590                           
 27591                           ; BSR set to: 1
 27592                           ;tcp.c: 3680: MyTCB.remoteWindow = h->Window;
 27593  0101EA  0101               	movlb	1	; () banked
 27594  0101EC  EE20 F00E          	lfsr	2,14
 27595  0101F0  0101               	movlb	1	; () banked
 27596  0101F2  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 27597  0101F4  26D9               	addwf	fsr2l,f,c
 27598  0101F6  0101               	movlb	1	; () banked
 27599  0101F8  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 27600  0101FA  22DA               	addwfc	fsr2h,f,c
 27601  0101FC  0101               	movlb	1	; () banked
 27602  0101FE  CFDE F1CB          	movff	postinc2,_MyTCB+18
 27603  010202  0101               	movlb	1	; () banked
 27604  010204  CFDD F1CC          	movff	postdec2,_MyTCB+19
 27605                           
 27606                           ; BSR set to: 1
 27607                           ;tcp.c: 3683: MyTCB.wRemoteMSS = GetMaxSegSizeOption();
 27608  010208  EC19  F0BF         	call	_GetMaxSegSizeOption	;wreg free
 27609  01020C  0101               	movlb	1	; () banked
 27610  01020E  C108  F1DC         	movff	?_GetMaxSegSizeOption,_MyTCB+35
 27611  010212  0101               	movlb	1	; () banked
 27612  010214  C109  F1DD         	movff	?_GetMaxSegSizeOption+1,_MyTCB+36
 27613                           
 27614                           ; BSR set to: 1
 27615                           ;tcp.c: 3685: if(localHeaderFlags & (0x10))
 27616  010218  0101               	movlb	1	; () banked
 27617  01021A  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 27618  01021C  D02A               	goto	l13348
 27619                           
 27620                           ; BSR set to: 1
 27621                           ;tcp.c: 3686: {
 27622                           ;tcp.c: 3687: SendTCP((0x10), 0x01);
 27623  01021E  0E01               	movlw	1
 27624  010220  0101               	movlb	1	; () banked
 27625  010222  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27626  010224  0E10               	movlw	16
 27627  010226  ECC1  F096         	call	_SendTCP
 27628                           
 27629                           ;tcp.c: 3688: MyTCBStub.smState = TCP_ESTABLISHED;
 27630  01022A  0E07               	movlw	7
 27631  01022C  0101               	movlb	1	; () banked
 27632  01022E  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 27633                           
 27634                           ; BSR set to: 1
 27635                           ;tcp.c: 3691: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 27636  010230  EC94  F0DB         	call	_TickGet	;wreg free
 27637  010234  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 27638  010238  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 27639  01023C  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 27640  010240  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 27641  010244  0EE6               	movlw	230
 27642  010246  0101               	movlb	1	; () banked
 27643  010248  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27644  01024A  0101               	movlb	1	; () banked
 27645  01024C  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 27646  01024E  0EF5               	movlw	245
 27647  010250  0101               	movlb	1	; () banked
 27648  010252  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27649  010254  0101               	movlb	1	; () banked
 27650  010256  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 27651  010258  0E05               	movlw	5
 27652  01025A  0101               	movlb	1	; () banked
 27653  01025C  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 27654  01025E  0101               	movlb	1	; () banked
 27655  010260  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 27656  010262  0E00               	movlw	0
 27657  010264  0101               	movlb	1	; () banked
 27658  010266  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 27659  010268  0101               	movlb	1	; () banked
 27660  01026A  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 27661                           
 27662                           ; BSR set to: 1
 27663                           ;tcp.c: 3693: MyTCBStub.Flags.bTimerEnabled = 0;
 27664  01026C  0101               	movlb	1	; () banked
 27665  01026E  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 27666                           
 27667                           ;tcp.c: 3694: }
 27668  010270  0012               	return	
 27669  010272                     l13348:
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;tcp.c: 3695: else
 27673                           ;tcp.c: 3696: {
 27674                           ;tcp.c: 3697: SendTCP((0x02) | (0x10), 0x01);
 27675  010272  0E01               	movlw	1
 27676  010274  0101               	movlb	1	; () banked
 27677  010276  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 27678  010278  0E12               	movlw	18
 27679  01027A  ECC1  F096         	call	_SendTCP
 27680                           
 27681                           ;tcp.c: 3698: MyTCBStub.smState = TCP_SYN_RECEIVED;
 27682  01027E  0E06               	movlw	6
 27683  010280  0101               	movlb	1	; () banked
 27684  010282  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 27685  010284  0012               	return	
 27686  010286                     l13356:
 27687                           
 27688                           ; BSR set to: 1
 27689  010286  0101               	movlb	1	; () banked
 27690  010288  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 27691                           
 27692                           ; Switch size 1, requested type "space"
 27693                           ; Number of cases is 2, Range of values is 4 to 5
 27694                           ; switch strategies available:
 27695                           ; Name         Instructions Cycles
 27696                           ; simple_byte            7     4 (average)
 27697                           ;	Chosen strategy is simple_byte
 27698  01028A  0A04               	xorlw	4	; case 4
 27699  01028C  B4D8               	btfsc	status,2,c
 27700  01028E  D716               	goto	l1304
 27701  010290  0A01               	xorlw	1	; case 5
 27702  010292  B4D8               	btfsc	status,2,c
 27703  010294  D759               	goto	l1310
 27704                           
 27705                           ; BSR set to: 1
 27706                           ;tcp.c: 3712: wSegmentLength = len;
 27707  010296  C158  F169         	movff	HandleTCPSeg@len,HandleTCPSeg@wSegmentLength
 27708  01029A  C159  F16A         	movff	HandleTCPSeg@len+1,HandleTCPSeg@wSegmentLength+1
 27709                           
 27710                           ;tcp.c: 3713: if(localHeaderFlags & (0x01))
 27711  01029E  0101               	movlb	1	; () banked
 27712  0102A0  A179               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),0,b
 27713  0102A2  D003               	goto	l13360
 27714                           
 27715                           ; BSR set to: 1
 27716                           ;tcp.c: 3714: wSegmentLength++;
 27717  0102A4  0101               	movlb	1	; () banked
 27718  0102A6  4B69               	infsnz	HandleTCPSeg@wSegmentLength& (0+255),f,b
 27719  0102A8  2B6A               	incf	(HandleTCPSeg@wSegmentLength+1)& (0+255),f,b
 27720  0102AA                     l13360:
 27721                           
 27722                           ; BSR set to: 1
 27723                           ;tcp.c: 3715: if(localHeaderFlags & (0x02))
 27724  0102AA  0101               	movlb	1	; () banked
 27725  0102AC  A379               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),1,b
 27726  0102AE  D003               	goto	l13364
 27727                           
 27728                           ; BSR set to: 1
 27729                           ;tcp.c: 3716: wSegmentLength++;
 27730  0102B0  0101               	movlb	1	; () banked
 27731  0102B2  4B69               	infsnz	HandleTCPSeg@wSegmentLength& (0+255),f,b
 27732  0102B4  2B6A               	incf	(HandleTCPSeg@wSegmentLength+1)& (0+255),f,b
 27733  0102B6                     l13364:
 27734                           
 27735                           ; BSR set to: 1
 27736                           ;tcp.c: 3719: if(MyTCBStub.rxHead >= MyTCBStub.rxTail)
 27737  0102B6  0101               	movlb	1	; () banked
 27738  0102B8  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 27739  0102BC  0101               	movlb	1	; () banked
 27740  0102BE  EE11  F0EA         	lfsr	1,_MyTCBStub+10
 27741  0102C2  52E6               	movf	postinc1,f,c
 27742  0102C4  52DE               	movf	postinc2,f,c
 27743  0102C6  50DD               	movf	postdec2,w,c
 27744  0102C8  5CE5               	subwf	postdec1,w,c
 27745  0102CA  E102               	bnz	u14775
 27746  0102CC  50DF               	movf	indf2,w,c
 27747  0102CE  5CE7               	subwf	indf1,w,c
 27748  0102D0                     u14775:
 27749  0102D0  A0D8               	btfss	status,0,c
 27750  0102D2  D02A               	goto	l13368
 27751                           
 27752                           ; BSR set to: 1
 27753                           ;tcp.c: 3720: wFreeSpace = (MyTCBStub.bufferEnd - MyTCBStub.bufferRxStart) - (MyTCBStub.
      +                          rxHead - MyTCBStub.rxTail);
 27754  0102D4  0101               	movlb	1	; () banked
 27755  0102D6  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 27756  0102DA  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 27757  0102DE  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 27758  0102E2  0101               	movlb	1	; () banked
 27759  0102E4  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27760  0102E6  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27761  0102E8  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27762  0102EA  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27763  0102EC  0101               	movlb	1	; () banked
 27764  0102EE  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 27765  0102F0  0101               	movlb	1	; () banked
 27766  0102F2  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27767  0102F4  0101               	movlb	1	; () banked
 27768  0102F6  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 27769  0102F8  0101               	movlb	1	; () banked
 27770  0102FA  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27771  0102FC  0101               	movlb	1	; () banked
 27772  0102FE  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 27773  010300  0101               	movlb	1	; () banked
 27774  010302  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27775  010304  0101               	movlb	1	; () banked
 27776  010306  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 27777  010308  0101               	movlb	1	; () banked
 27778  01030A  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27779  01030C  0101               	movlb	1	; () banked
 27780  01030E  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27781  010310  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27782  010312  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27783  010314  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27784  010316  0101               	movlb	1	; () banked
 27785  010318  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 27786  01031A  0101               	movlb	1	; () banked
 27787  01031C  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27788  01031E  0101               	movlb	1	; () banked
 27789  010320  6F73               	movwf	HandleTCPSeg@wFreeSpace& (0+255),b
 27790  010322  0101               	movlb	1	; () banked
 27791  010324  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 27792  010326  D01A               	goto	L34
 27793  010328                     l13368:
 27794                           
 27795                           ; BSR set to: 1
 27796                           ;tcp.c: 3721: else
 27797                           ;tcp.c: 3722: wFreeSpace = MyTCBStub.rxTail - MyTCBStub.rxHead - 1;
 27798  010328  0101               	movlb	1	; () banked
 27799  01032A  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 27800  01032E  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 27801  010332  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 27802  010336  0101               	movlb	1	; () banked
 27803  010338  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27804  01033A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27805  01033C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27806  01033E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27807  010340  0101               	movlb	1	; () banked
 27808  010342  51EC               	movf	(_MyTCBStub+12)& (0+255),w,b
 27809  010344  0101               	movlb	1	; () banked
 27810  010346  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 27811  010348  0101               	movlb	1	; () banked
 27812  01034A  51ED               	movf	(_MyTCBStub+13)& (0+255),w,b
 27813  01034C  0101               	movlb	1	; () banked
 27814  01034E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27815  010350  0EFF               	movlw	255
 27816  010352  0101               	movlb	1	; () banked
 27817  010354  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27818  010356  0101               	movlb	1	; () banked
 27819  010358  6F73               	movwf	HandleTCPSeg@wFreeSpace& (0+255),b
 27820  01035A  0EFF               	movlw	255
 27821  01035C                     L34:
 27822  01035C  0101               	movlb	1	; () banked
 27823  01035E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27824  010360  0101               	movlb	1	; () banked
 27825  010362  6F74               	movwf	(HandleTCPSeg@wFreeSpace+1)& (0+255),b
 27826                           
 27827                           ; BSR set to: 1
 27828                           ;tcp.c: 3725: lMissingBytes = localSeqNumber - MyTCB.RemoteSEQ;
 27829                           
 27830                           ; BSR set to: 1
 27831  010364  0101               	movlb	1	; () banked
 27832  010366  C1C1  F15A         	movff	_MyTCB+8,??_HandleTCPSeg
 27833  01036A  0101               	movlb	1	; () banked
 27834  01036C  C1C2  F15B         	movff	_MyTCB+9,??_HandleTCPSeg+1
 27835  010370  0101               	movlb	1	; () banked
 27836  010372  C1C3  F15C         	movff	_MyTCB+10,??_HandleTCPSeg+2
 27837  010376  0101               	movlb	1	; () banked
 27838  010378  C1C4  F15D         	movff	_MyTCB+11,??_HandleTCPSeg+3
 27839  01037C  0101               	movlb	1	; () banked
 27840  01037E  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27841  010380  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27842  010382  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 27843  010384  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 27844  010386  2B5A               	incf	??_HandleTCPSeg& (0+255),f,b
 27845  010388  0E00               	movlw	0
 27846  01038A  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 27847  01038C  235C               	addwfc	(??_HandleTCPSeg+2)& (0+255),f,b
 27848  01038E  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 27849  010390  0101               	movlb	1	; () banked
 27850  010392  5165               	movf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 27851  010394  0101               	movlb	1	; () banked
 27852  010396  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27853  010398  0101               	movlb	1	; () banked
 27854  01039A  6F6F               	movwf	HandleTCPSeg@lMissingBytes& (0+255),b
 27855  01039C  0101               	movlb	1	; () banked
 27856  01039E  5166               	movf	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 27857  0103A0  0101               	movlb	1	; () banked
 27858  0103A2  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 27859  0103A4  0101               	movlb	1	; () banked
 27860  0103A6  6F70               	movwf	(HandleTCPSeg@lMissingBytes+1)& (0+255),b
 27861  0103A8  0101               	movlb	1	; () banked
 27862  0103AA  5167               	movf	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 27863  0103AC  0101               	movlb	1	; () banked
 27864  0103AE  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 27865  0103B0  0101               	movlb	1	; () banked
 27866  0103B2  6F71               	movwf	(HandleTCPSeg@lMissingBytes+2)& (0+255),b
 27867  0103B4  0101               	movlb	1	; () banked
 27868  0103B6  5168               	movf	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 27869  0103B8  0101               	movlb	1	; () banked
 27870  0103BA  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 27871  0103BC  0101               	movlb	1	; () banked
 27872  0103BE  6F72               	movwf	(HandleTCPSeg@lMissingBytes+3)& (0+255),b
 27873                           
 27874                           ; BSR set to: 1
 27875                           ;tcp.c: 3726: wMissingBytes = (uint16_t)lMissingBytes;
 27876  0103C0  C16F  F17C         	movff	HandleTCPSeg@lMissingBytes,HandleTCPSeg@wMissingBytes
 27877  0103C4  C170  F17D         	movff	HandleTCPSeg@lMissingBytes+1,HandleTCPSeg@wMissingBytes+1
 27878                           
 27879                           ; BSR set to: 1
 27880                           ;tcp.c: 3729: bSegmentAcceptable = 0;
 27881  0103C8  0E00               	movlw	0
 27882  0103CA  0101               	movlb	1	; () banked
 27883  0103CC  6F64               	movwf	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 27884                           
 27885                           ; BSR set to: 1
 27886                           ;tcp.c: 3730: if(wSegmentLength)
 27887  0103CE  0101               	movlb	1	; () banked
 27888  0103D0  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 27889  0103D2  1169               	iorwf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 27890  0103D4  B4D8               	btfsc	status,2,c
 27891  0103D6  D0C2               	goto	l13398
 27892                           
 27893                           ; BSR set to: 1
 27894                           ;tcp.c: 3731: {
 27895                           ;tcp.c: 3733: if(wFreeSpace)
 27896  0103D8  0101               	movlb	1	; () banked
 27897  0103DA  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27898  0103DC  1173               	iorwf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27899  0103DE  B4D8               	btfsc	status,2,c
 27900  0103E0  D0E8               	goto	l13406
 27901                           
 27902                           ; BSR set to: 1
 27903                           ;tcp.c: 3734: {
 27904                           ;tcp.c: 3736: if((lMissingBytes >= (int32_t)0) && (wFreeSpace > (uint32_t)lMissingBytes)
      +                          )
 27905  0103E2  0101               	movlb	1	; () banked
 27906  0103E4  BF72               	btfsc	(HandleTCPSeg@lMissingBytes+3)& (0+255),7,b
 27907  0103E6  D01E               	goto	l13386
 27908                           
 27909                           ; BSR set to: 1
 27910  0103E8  0101               	movlb	1	; () banked
 27911  0103EA  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27912  0103EC  0101               	movlb	1	; () banked
 27913  0103EE  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 27914  0103F0  0101               	movlb	1	; () banked
 27915  0103F2  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 27916  0103F4  0101               	movlb	1	; () banked
 27917  0103F6  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 27918  0103F8  0101               	movlb	1	; () banked
 27919  0103FA  6B5C               	clrf	(??_HandleTCPSeg+2)& (0+255),b
 27920  0103FC  0101               	movlb	1	; () banked
 27921  0103FE  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 27922  010400  0101               	movlb	1	; () banked
 27923  010402  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 27924  010404  0101               	movlb	1	; () banked
 27925  010406  5D6F               	subwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27926  010408  0101               	movlb	1	; () banked
 27927  01040A  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 27928  01040C  0101               	movlb	1	; () banked
 27929  01040E  5970               	subwfb	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27930  010410  0101               	movlb	1	; () banked
 27931  010412  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 27932  010414  0101               	movlb	1	; () banked
 27933  010416  5971               	subwfb	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27934  010418  0101               	movlb	1	; () banked
 27935  01041A  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 27936  01041C  0101               	movlb	1	; () banked
 27937  01041E  5972               	subwfb	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27938  010420  A0D8               	btfss	status,0,c
 27939  010422  D05D               	goto	u14830
 27940  010424                     l13386:
 27941                           
 27942                           ; BSR set to: 1
 27943                           ;tcp.c: 3738: else
 27944                           ;tcp.c: 3739: {
 27945                           ;tcp.c: 3741: if((lMissingBytes + (int32_t)wSegmentLength > (int32_t)0) && (lMissingByte
      +                          s <= (int32_t)(int16_t)(wFreeSpace - wSegmentLength)))
 27946  010424  0101               	movlb	1	; () banked
 27947  010426  5169               	movf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 27948  010428  0101               	movlb	1	; () banked
 27949  01042A  256F               	addwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 27950  01042C  0101               	movlb	1	; () banked
 27951  01042E  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 27952  010430  0101               	movlb	1	; () banked
 27953  010432  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 27954  010434  0101               	movlb	1	; () banked
 27955  010436  2170               	addwfc	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 27956  010438  0101               	movlb	1	; () banked
 27957  01043A  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 27958  01043C  0E00               	movlw	0
 27959  01043E  0101               	movlb	1	; () banked
 27960  010440  2171               	addwfc	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 27961  010442  0101               	movlb	1	; () banked
 27962  010444  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 27963  010446  0E00               	movlw	0
 27964  010448  0101               	movlb	1	; () banked
 27965  01044A  2172               	addwfc	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 27966  01044C  0101               	movlb	1	; () banked
 27967  01044E  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 27968  010450  0101               	movlb	1	; () banked
 27969  010452  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 27970  010454  0A80               	xorlw	128
 27971  010456  0F80               	addlw	128
 27972  010458  E108               	bnz	u14825
 27973  01045A  0E00               	movlw	0
 27974  01045C  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 27975  01045E  E105               	bnz	u14825
 27976  010460  0E00               	movlw	0
 27977  010462  5D5B               	subwf	(??_HandleTCPSeg+1)& (0+255),w,b
 27978  010464  E102               	bnz	u14825
 27979  010466  0E01               	movlw	1
 27980  010468  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 27981  01046A                     u14825:
 27982  01046A  A0D8               	btfss	status,0,c
 27983  01046C  D03B               	goto	l13392
 27984                           
 27985                           ; BSR set to: 1
 27986  01046E  0101               	movlb	1	; () banked
 27987  010470  C169  F15A         	movff	HandleTCPSeg@wSegmentLength,??_HandleTCPSeg
 27988  010474  0101               	movlb	1	; () banked
 27989  010476  C16A  F15B         	movff	HandleTCPSeg@wSegmentLength+1,??_HandleTCPSeg+1
 27990  01047A  0101               	movlb	1	; () banked
 27991  01047C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 27992  01047E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 27993  010480  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 27994  010482  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 27995  010484  0101               	movlb	1	; () banked
 27996  010486  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 27997  010488  0101               	movlb	1	; () banked
 27998  01048A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 27999  01048C  0101               	movlb	1	; () banked
 28000  01048E  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28001  010490  0101               	movlb	1	; () banked
 28002  010492  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 28003  010494  0101               	movlb	1	; () banked
 28004  010496  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28005  010498  0101               	movlb	1	; () banked
 28006  01049A  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28007  01049C  0101               	movlb	1	; () banked
 28008  01049E  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28009  0104A0  0101               	movlb	1	; () banked
 28010  0104A2  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 28011  0104A4  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 28012  0104A6  0101               	movlb	1	; () banked
 28013  0104A8  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28014  0104AA  0101               	movlb	1	; () banked
 28015  0104AC  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 28016  0104AE  0101               	movlb	1	; () banked
 28017  0104B0  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 28018  0104B2  0A80               	xorlw	128
 28019  0104B4  0101               	movlb	1	; () banked
 28020  0104B6  6F60               	movwf	(??_HandleTCPSeg+6)& (0+255),b
 28021  0104B8  0101               	movlb	1	; () banked
 28022  0104BA  516F               	movf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 28023  0104BC  0101               	movlb	1	; () banked
 28024  0104BE  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 28025  0104C0  0101               	movlb	1	; () banked
 28026  0104C2  5170               	movf	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 28027  0104C4  0101               	movlb	1	; () banked
 28028  0104C6  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 28029  0104C8  0101               	movlb	1	; () banked
 28030  0104CA  5171               	movf	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 28031  0104CC  0101               	movlb	1	; () banked
 28032  0104CE  595E               	subwfb	(??_HandleTCPSeg+4)& (0+255),w,b
 28033  0104D0  0101               	movlb	1	; () banked
 28034  0104D2  5172               	movf	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 28035  0104D4  0A80               	xorlw	128
 28036  0104D6  0101               	movlb	1	; () banked
 28037  0104D8  5960               	subwfb	(??_HandleTCPSeg+6)& (0+255),w,b
 28038  0104DA  A0D8               	btfss	status,0,c
 28039  0104DC  D003               	goto	l13392
 28040  0104DE                     u14830:
 28041                           
 28042                           ; BSR set to: 1
 28043                           ;tcp.c: 3742: bSegmentAcceptable = 1;
 28044  0104DE  0E01               	movlw	1
 28045  0104E0  0101               	movlb	1	; () banked
 28046  0104E2  6F64               	movwf	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 28047  0104E4                     l13392:
 28048                           
 28049                           ; BSR set to: 1
 28050                           ;tcp.c: 3743: }
 28051                           ;tcp.c: 3745: if((lMissingBytes < (int32_t)wFreeSpace) && ((int16_t)wMissingBytes + (int
      +                          16_t)wSegmentLength > (int16_t)0))
 28052  0104E4  0101               	movlb	1	; () banked
 28053  0104E6  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 28054  0104E8  0101               	movlb	1	; () banked
 28055  0104EA  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 28056  0104EC  0101               	movlb	1	; () banked
 28057  0104EE  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 28058  0104F0  0101               	movlb	1	; () banked
 28059  0104F2  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 28060  0104F4  0101               	movlb	1	; () banked
 28061  0104F6  6B5C               	clrf	(??_HandleTCPSeg+2)& (0+255),b
 28062  0104F8  0101               	movlb	1	; () banked
 28063  0104FA  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 28064  0104FC  0101               	movlb	1	; () banked
 28065  0104FE  5172               	movf	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 28066  010500  0A80               	xorlw	128
 28067  010502  0101               	movlb	1	; () banked
 28068  010504  6F5E               	movwf	(??_HandleTCPSeg+4)& (0+255),b
 28069  010506  0101               	movlb	1	; () banked
 28070  010508  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28071  01050A  0101               	movlb	1	; () banked
 28072  01050C  5D6F               	subwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 28073  01050E  0101               	movlb	1	; () banked
 28074  010510  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28075  010512  0101               	movlb	1	; () banked
 28076  010514  5970               	subwfb	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 28077  010516  0101               	movlb	1	; () banked
 28078  010518  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 28079  01051A  0101               	movlb	1	; () banked
 28080  01051C  5971               	subwfb	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 28081  01051E  0101               	movlb	1	; () banked
 28082  010520  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 28083  010522  0A80               	xorlw	128
 28084  010524  0101               	movlb	1	; () banked
 28085  010526  595E               	subwfb	(??_HandleTCPSeg+4)& (0+255),w,b
 28086  010528  B0D8               	btfsc	status,0,c
 28087  01052A  D043               	goto	l13406
 28088                           
 28089                           ; BSR set to: 1
 28090  01052C  0101               	movlb	1	; () banked
 28091  01052E  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 28092  010532  0101               	movlb	1	; () banked
 28093  010534  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 28094  010538  0101               	movlb	1	; () banked
 28095  01053A  5169               	movf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 28096  01053C  0101               	movlb	1	; () banked
 28097  01053E  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28098  010540  0101               	movlb	1	; () banked
 28099  010542  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 28100  010544  0101               	movlb	1	; () banked
 28101  010546  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28102  010548  0101               	movlb	1	; () banked
 28103  01054A  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28104  01054C  0A80               	xorlw	128
 28105  01054E  0F80               	addlw	-128
 28106  010550  0E01               	movlw	1
 28107  010552  B4D8               	btfsc	status,2,c
 28108  010554  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 28109  010556  A0D8               	btfss	status,0,c
 28110  010558  D02C               	goto	l13406
 28111  01055A  D028               	goto	u14880
 28112  01055C                     l13398:
 28113                           
 28114                           ; BSR set to: 1
 28115                           ;tcp.c: 3750: else
 28116                           ;tcp.c: 3751: {
 28117                           ;tcp.c: 3754: if(lMissingBytes == 0)
 28118  01055C  0101               	movlb	1	; () banked
 28119  01055E  5172               	movf	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 28120  010560  116F               	iorwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 28121  010562  1170               	iorwf	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 28122  010564  1171               	iorwf	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 28123  010566  B4D8               	btfsc	status,2,c
 28124  010568  D021               	goto	u14880
 28125                           
 28126                           ; BSR set to: 1
 28127                           ;tcp.c: 3758: else
 28128                           ;tcp.c: 3759: {
 28129                           ;tcp.c: 3761: if((lMissingBytes >= (int32_t)0) && (wFreeSpace > (uint32_t)lMissingBytes)
      +                          )
 28130                           
 28131                           ;tcp.c: 3757: }
 28132                           
 28133                           ; BSR set to: 1
 28134                           ;tcp.c: 3755: {
 28135                           ;tcp.c: 3756: bSegmentAcceptable = 1;
 28136  01056A  0101               	movlb	1	; () banked
 28137  01056C  BF72               	btfsc	(HandleTCPSeg@lMissingBytes+3)& (0+255),7,b
 28138  01056E  D021               	goto	l13406
 28139                           
 28140                           ; BSR set to: 1
 28141  010570  0101               	movlb	1	; () banked
 28142  010572  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 28143  010574  0101               	movlb	1	; () banked
 28144  010576  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 28145  010578  0101               	movlb	1	; () banked
 28146  01057A  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 28147  01057C  0101               	movlb	1	; () banked
 28148  01057E  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 28149  010580  0101               	movlb	1	; () banked
 28150  010582  6B5C               	clrf	(??_HandleTCPSeg+2)& (0+255),b
 28151  010584  0101               	movlb	1	; () banked
 28152  010586  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 28153  010588  0101               	movlb	1	; () banked
 28154  01058A  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28155  01058C  0101               	movlb	1	; () banked
 28156  01058E  5D6F               	subwf	HandleTCPSeg@lMissingBytes& (0+255),w,b
 28157  010590  0101               	movlb	1	; () banked
 28158  010592  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28159  010594  0101               	movlb	1	; () banked
 28160  010596  5970               	subwfb	(HandleTCPSeg@lMissingBytes+1)& (0+255),w,b
 28161  010598  0101               	movlb	1	; () banked
 28162  01059A  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 28163  01059C  0101               	movlb	1	; () banked
 28164  01059E  5971               	subwfb	(HandleTCPSeg@lMissingBytes+2)& (0+255),w,b
 28165  0105A0  0101               	movlb	1	; () banked
 28166  0105A2  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 28167  0105A4  0101               	movlb	1	; () banked
 28168  0105A6  5972               	subwfb	(HandleTCPSeg@lMissingBytes+3)& (0+255),w,b
 28169  0105A8  B0D8               	btfsc	status,0,c
 28170  0105AA  D003               	goto	l13406
 28171  0105AC                     u14880:
 28172                           
 28173                           ; BSR set to: 1
 28174                           ;tcp.c: 3762: bSegmentAcceptable = 1;
 28175  0105AC  0E01               	movlw	1
 28176  0105AE  0101               	movlb	1	; () banked
 28177  0105B0  6F64               	movwf	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 28178  0105B2                     l13406:
 28179                           
 28180                           ; BSR set to: 1
 28181                           ;tcp.c: 3763: }
 28182                           ;tcp.c: 3764: }
 28183                           ;tcp.c: 3766: if(!bSegmentAcceptable)
 28184  0105B2  0101               	movlb	1	; () banked
 28185  0105B4  6764               	tstfsz	HandleTCPSeg@bSegmentAcceptable& (0+255),b
 28186  0105B6  D00A               	goto	l13414
 28187                           
 28188                           ; BSR set to: 1
 28189                           ;tcp.c: 3767: {
 28190                           ;tcp.c: 3769: if(!(localHeaderFlags & (0x04)))
 28191  0105B8  0101               	movlb	1	; () banked
 28192  0105BA  B579               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),2,b
 28193  0105BC  0012               	return	
 28194                           
 28195                           ; BSR set to: 1
 28196                           ;tcp.c: 3770: SendTCP((0x10), 0x01);
 28197  0105BE  0E01               	movlw	1
 28198  0105C0  0101               	movlb	1	; () banked
 28199  0105C2  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 28200  0105C4  0E10               	movlw	16
 28201  0105C6  ECC1  F096         	call	_SendTCP
 28202  0105CA  0012               	return	
 28203  0105CC                     l13414:
 28204                           
 28205                           ;tcp.c: 3772: }
 28206                           ;tcp.c: 3783: if(localHeaderFlags & ((0x04) | (0x02)))
 28207  0105CC  C179  F15A         	movff	HandleTCPSeg@localHeaderFlags,??_HandleTCPSeg
 28208  0105D0  0E06               	movlw	6
 28209  0105D2  0101               	movlb	1	; () banked
 28210  0105D4  175A               	andwf	??_HandleTCPSeg& (0+255),f,b
 28211  0105D6  B4D8               	btfsc	status,2,c
 28212  0105D8  D003               	goto	l1335
 28213                           
 28214                           ; BSR set to: 1
 28215                           ;tcp.c: 3784: {
 28216                           ;tcp.c: 3785: CloseSocket();
 28217  0105DA  ECF0  F0CD         	call	_CloseSocket	;wreg free
 28218  0105DE  0012               	return	
 28219  0105E0                     l1335:
 28220                           
 28221                           ; BSR set to: 1
 28222                           ;tcp.c: 3787: }
 28223                           ;tcp.c: 3797: if(!(localHeaderFlags & (0x10)))
 28224  0105E0  0101               	movlb	1	; () banked
 28225  0105E2  A979               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),4,b
 28226  0105E4  0012               	return	
 28227  0105E6  EF4F  F087         	goto	l13566
 28228  0105EA                     l13422:
 28229                           
 28230                           ; BSR set to: 1
 28231                           ;tcp.c: 3803: if(localAckNumber != MyTCB.MySEQ)
 28232  0105EA  0101               	movlb	1	; () banked
 28233  0105EC  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28234  0105EE  0101               	movlb	1	; () banked
 28235  0105F0  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 28236  0105F2  E10E               	bnz	u14935
 28237  0105F4  0101               	movlb	1	; () banked
 28238  0105F6  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 28239  0105F8  0101               	movlb	1	; () banked
 28240  0105FA  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 28241  0105FC  E109               	bnz	u14935
 28242  0105FE  0101               	movlb	1	; () banked
 28243  010600  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 28244  010602  0101               	movlb	1	; () banked
 28245  010604  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 28246  010606  E104               	bnz	u14935
 28247  010608  0101               	movlb	1	; () banked
 28248  01060A  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 28249  01060C  0101               	movlb	1	; () banked
 28250  01060E  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 28251  010610                     u14935:
 28252  010610  B4D8               	btfsc	status,2,c
 28253  010612  D01F               	goto	l13432
 28254                           
 28255                           ; BSR set to: 1
 28256                           ;tcp.c: 3804: {
 28257                           ;tcp.c: 3807: localSeqNumber = MyTCB.MySEQ;
 28258  010614  C1BD  F165         	movff	_MyTCB+4,HandleTCPSeg@localSeqNumber
 28259  010618  C1BE  F166         	movff	_MyTCB+5,HandleTCPSeg@localSeqNumber+1
 28260  01061C  C1BF  F167         	movff	_MyTCB+6,HandleTCPSeg@localSeqNumber+2
 28261  010620  C1C0  F168         	movff	_MyTCB+7,HandleTCPSeg@localSeqNumber+3
 28262                           
 28263                           ;tcp.c: 3808: MyTCB.MySEQ = localAckNumber;
 28264  010624  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 28265  010628  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 28266  01062C  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 28267  010630  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 28268                           
 28269                           ; BSR set to: 1
 28270                           ;tcp.c: 3809: SendTCP((0x04), 0x01);
 28271  010634  0E01               	movlw	1
 28272  010636  0101               	movlb	1	; () banked
 28273  010638  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 28274  01063A  0E04               	movlw	4
 28275  01063C  ECC1  F096         	call	_SendTCP
 28276                           
 28277                           ;tcp.c: 3810: MyTCB.MySEQ = localSeqNumber;
 28278  010640  C165  F1BD         	movff	HandleTCPSeg@localSeqNumber,_MyTCB+4
 28279  010644  C166  F1BE         	movff	HandleTCPSeg@localSeqNumber+1,_MyTCB+5
 28280  010648  C167  F1BF         	movff	HandleTCPSeg@localSeqNumber+2,_MyTCB+6
 28281  01064C  C168  F1C0         	movff	HandleTCPSeg@localSeqNumber+3,_MyTCB+7
 28282  010650  0012               	return	
 28283  010652                     l13432:
 28284                           
 28285                           ;tcp.c: 3812: }
 28286                           ;tcp.c: 3813: MyTCBStub.smState = TCP_ESTABLISHED;
 28287  010652  0E07               	movlw	7
 28288  010654  0101               	movlb	1	; () banked
 28289  010656  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 28290  010658                     l13434:
 28291                           
 28292                           ; BSR set to: 1
 28293                           ;tcp.c: 3817: case TCP_FIN_WAIT_1:
 28294                           ;tcp.c: 3818: case TCP_FIN_WAIT_2:
 28295                           ;tcp.c: 3819: case TCP_CLOSE_WAIT:
 28296                           ;tcp.c: 3820: case TCP_CLOSING:
 28297                           ;tcp.c: 3822: wTemp = MyTCBStub.txHead - MyTCB.txUnackedTail;
 28298  010658  0101               	movlb	1	; () banked
 28299  01065A  EE21  F0C5         	lfsr	2,_MyTCB+12
 28300  01065E  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28301  010662  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28302  010666  0101               	movlb	1	; () banked
 28303  010668  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28304  01066A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28305  01066C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28306  01066E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28307  010670  0101               	movlb	1	; () banked
 28308  010672  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 28309  010674  0101               	movlb	1	; () banked
 28310  010676  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28311  010678  0101               	movlb	1	; () banked
 28312  01067A  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 28313  01067C  0101               	movlb	1	; () banked
 28314  01067E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 28315  010680  0101               	movlb	1	; () banked
 28316  010682  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28317  010684  0101               	movlb	1	; () banked
 28318  010686  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 28319                           
 28320                           ; BSR set to: 1
 28321                           ;tcp.c: 3823: if((int16_t)wTemp < (int16_t)0)
 28322  010688  0101               	movlb	1	; () banked
 28323  01068A  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28324  01068C  0A80               	xorlw	128
 28325  01068E  6EF3               	movwf	prodl,c
 28326  010690  0E80               	movlw	128
 28327  010692  5CF3               	subwf	prodl,w,c
 28328  010694  0E00               	movlw	0
 28329  010696  B4D8               	btfsc	status,2,c
 28330  010698  5D7A               	subwf	HandleTCPSeg@wTemp& (0+255),w,b
 28331  01069A  B0D8               	btfsc	status,0,c
 28332  01069C  D01B               	goto	l1345
 28333                           
 28334                           ; BSR set to: 1
 28335                           ;tcp.c: 3824: wTemp += MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28336  01069E  0101               	movlb	1	; () banked
 28337  0106A0  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28338  0106A4  0101               	movlb	1	; () banked
 28339  0106A6  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28340  0106AA  0101               	movlb	1	; () banked
 28341  0106AC  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28342  0106AE  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28343  0106B0  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28344  0106B2  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28345  0106B4  0101               	movlb	1	; () banked
 28346  0106B6  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28347  0106B8  0101               	movlb	1	; () banked
 28348  0106BA  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28349  0106BC  0101               	movlb	1	; () banked
 28350  0106BE  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28351  0106C0  0101               	movlb	1	; () banked
 28352  0106C2  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28353  0106C4  0101               	movlb	1	; () banked
 28354  0106C6  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28355  0106C8  0101               	movlb	1	; () banked
 28356  0106CA  277A               	addwf	HandleTCPSeg@wTemp& (0+255),f,b
 28357  0106CC  0101               	movlb	1	; () banked
 28358  0106CE  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28359  0106D0  0101               	movlb	1	; () banked
 28360  0106D2  237B               	addwfc	(HandleTCPSeg@wTemp+1)& (0+255),f,b
 28361  0106D4                     l1345:
 28362                           
 28363                           ; BSR set to: 1
 28364                           ;tcp.c: 3825: dwTemp = MyTCB.MySEQ + (uint32_t)wTemp;
 28365  0106D4  0101               	movlb	1	; () banked
 28366  0106D6  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 28367  0106D8  0101               	movlb	1	; () banked
 28368  0106DA  25BD               	addwf	(_MyTCB+4)& (0+255),w,b
 28369  0106DC  0101               	movlb	1	; () banked
 28370  0106DE  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28371  0106E0  0101               	movlb	1	; () banked
 28372  0106E2  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28373  0106E4  0101               	movlb	1	; () banked
 28374  0106E6  21BE               	addwfc	(_MyTCB+5)& (0+255),w,b
 28375  0106E8  0101               	movlb	1	; () banked
 28376  0106EA  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28377  0106EC  0E00               	movlw	0
 28378  0106EE  0101               	movlb	1	; () banked
 28379  0106F0  21BF               	addwfc	(_MyTCB+6)& (0+255),w,b
 28380  0106F2  0101               	movlb	1	; () banked
 28381  0106F4  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28382  0106F6  0E00               	movlw	0
 28383  0106F8  0101               	movlb	1	; () banked
 28384  0106FA  21C0               	addwfc	(_MyTCB+7)& (0+255),w,b
 28385  0106FC  0101               	movlb	1	; () banked
 28386  0106FE  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28387                           
 28388                           ;tcp.c: 3828: dwTemp = (int32_t)localAckNumber - (int32_t)dwTemp;
 28389  010700  0101               	movlb	1	; () banked
 28390  010702  C16B  F15A         	movff	HandleTCPSeg@dwTemp,??_HandleTCPSeg
 28391  010706  0101               	movlb	1	; () banked
 28392  010708  C16C  F15B         	movff	HandleTCPSeg@dwTemp+1,??_HandleTCPSeg+1
 28393  01070C  0101               	movlb	1	; () banked
 28394  01070E  C16D  F15C         	movff	HandleTCPSeg@dwTemp+2,??_HandleTCPSeg+2
 28395  010712  0101               	movlb	1	; () banked
 28396  010714  C16E  F15D         	movff	HandleTCPSeg@dwTemp+3,??_HandleTCPSeg+3
 28397  010718  0101               	movlb	1	; () banked
 28398  01071A  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28399  01071C  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28400  01071E  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 28401  010720  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 28402  010722  2B5A               	incf	??_HandleTCPSeg& (0+255),f,b
 28403  010724  0E00               	movlw	0
 28404  010726  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28405  010728  235C               	addwfc	(??_HandleTCPSeg+2)& (0+255),f,b
 28406  01072A  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 28407  01072C  0101               	movlb	1	; () banked
 28408  01072E  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 28409  010730  0101               	movlb	1	; () banked
 28410  010732  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28411  010734  0101               	movlb	1	; () banked
 28412  010736  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28413  010738  0101               	movlb	1	; () banked
 28414  01073A  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 28415  01073C  0101               	movlb	1	; () banked
 28416  01073E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28417  010740  0101               	movlb	1	; () banked
 28418  010742  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28419  010744  0101               	movlb	1	; () banked
 28420  010746  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 28421  010748  0101               	movlb	1	; () banked
 28422  01074A  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 28423  01074C  0101               	movlb	1	; () banked
 28424  01074E  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28425  010750  0101               	movlb	1	; () banked
 28426  010752  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28427  010754  0101               	movlb	1	; () banked
 28428  010756  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28429  010758  0101               	movlb	1	; () banked
 28430  01075A  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28431                           
 28432                           ;tcp.c: 3829: if((int32_t)dwTemp > 0)
 28433  01075C  0101               	movlb	1	; () banked
 28434  01075E  516E               	movf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28435  010760  0A80               	xorlw	128
 28436  010762  0F80               	addlw	128
 28437  010764  E10B               	bnz	u14955
 28438  010766  0E00               	movlw	0
 28439  010768  0101               	movlb	1	; () banked
 28440  01076A  5D6D               	subwf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28441  01076C  E107               	bnz	u14955
 28442  01076E  0E00               	movlw	0
 28443  010770  0101               	movlb	1	; () banked
 28444  010772  5D6C               	subwf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28445  010774  E103               	bnz	u14955
 28446  010776  0E01               	movlw	1
 28447  010778  0101               	movlb	1	; () banked
 28448  01077A  5D6B               	subwf	HandleTCPSeg@dwTemp& (0+255),w,b
 28449  01077C                     u14955:
 28450  01077C  A0D8               	btfss	status,0,c
 28451  01077E  D01A               	goto	l13452
 28452                           
 28453                           ; BSR set to: 1
 28454                           ;tcp.c: 3830: {
 28455                           ;tcp.c: 3831: if(!MyTCB.flags.bFINSent || dwTemp != 1)
 28456  010780  0101               	movlb	1	; () banked
 28457  010782  A1DB               	btfss	(_MyTCB+34)& (0+255),0,b
 28458  010784  D007               	goto	l13444
 28459                           
 28460                           ; BSR set to: 1
 28461  010786  0101               	movlb	1	; () banked
 28462  010788  056B               	decf	HandleTCPSeg@dwTemp& (0+255),w,b
 28463  01078A  116C               	iorwf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28464  01078C  116D               	iorwf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28465  01078E  116E               	iorwf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28466  010790  B4D8               	btfsc	status,2,c
 28467  010792  D007               	goto	l13450
 28468  010794                     l13444:
 28469                           
 28470                           ; BSR set to: 1
 28471                           ;tcp.c: 3832: {
 28472                           ;tcp.c: 3833: SendTCP((0x10), 0);
 28473  010794  0E00               	movlw	0
 28474  010796  0101               	movlb	1	; () banked
 28475  010798  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 28476  01079A  0E10               	movlw	16
 28477  01079C  ECC1  F096         	call	_SendTCP
 28478  0107A0  0012               	return	
 28479  0107A2                     l13450:
 28480                           
 28481                           ;tcp.c: 3836: else
 28482                           ;tcp.c: 3837: {
 28483                           ;tcp.c: 3838: localAckNumber--;
 28484  0107A2  0101               	movlb	1	; () banked
 28485  0107A4  0775               	decf	HandleTCPSeg@localAckNumber& (0+255),f,b
 28486  0107A6  0E00               	movlw	0
 28487  0107A8  0101               	movlb	1	; () banked
 28488  0107AA  5B76               	subwfb	(HandleTCPSeg@localAckNumber+1)& (0+255),f,b
 28489  0107AC  0101               	movlb	1	; () banked
 28490  0107AE  5B77               	subwfb	(HandleTCPSeg@localAckNumber+2)& (0+255),f,b
 28491  0107B0  0101               	movlb	1	; () banked
 28492  0107B2  5B78               	subwfb	(HandleTCPSeg@localAckNumber+3)& (0+255),f,b
 28493  0107B4                     l13452:
 28494                           
 28495                           ;tcp.c: 3839: }
 28496                           ;tcp.c: 3840: }
 28497                           ;tcp.c: 3844: dwTemp = MyTCB.MySEQ - (int32_t)(int16_t)(MyTCB.txUnackedTail - MyTCBStub.
      +                          txTail);
 28498  0107B4  0101               	movlb	1	; () banked
 28499  0107B6  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 28500  0107BA  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28501  0107BE  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28502  0107C2  0101               	movlb	1	; () banked
 28503  0107C4  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28504  0107C6  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28505  0107C8  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28506  0107CA  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28507  0107CC  0101               	movlb	1	; () banked
 28508  0107CE  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 28509  0107D0  0101               	movlb	1	; () banked
 28510  0107D2  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28511  0107D4  0101               	movlb	1	; () banked
 28512  0107D6  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28513  0107D8  0101               	movlb	1	; () banked
 28514  0107DA  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 28515  0107DC  0101               	movlb	1	; () banked
 28516  0107DE  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28517  0107E0  0101               	movlb	1	; () banked
 28518  0107E2  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28519  0107E4  0101               	movlb	1	; () banked
 28520  0107E6  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28521  0107E8  0101               	movlb	1	; () banked
 28522  0107EA  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 28523  0107EC  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 28524  0107EE  0101               	movlb	1	; () banked
 28525  0107F0  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28526  0107F2  0101               	movlb	1	; () banked
 28527  0107F4  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 28528  0107F6  0101               	movlb	1	; () banked
 28529  0107F8  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 28530  0107FA  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 28531  0107FC  1F5E               	comf	(??_HandleTCPSeg+4)& (0+255),f,b
 28532  0107FE  1F5F               	comf	(??_HandleTCPSeg+5)& (0+255),f,b
 28533  010800  2B5C               	incf	(??_HandleTCPSeg+2)& (0+255),f,b
 28534  010802  0E00               	movlw	0
 28535  010804  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 28536  010806  235E               	addwfc	(??_HandleTCPSeg+4)& (0+255),f,b
 28537  010808  235F               	addwfc	(??_HandleTCPSeg+5)& (0+255),f,b
 28538  01080A  0101               	movlb	1	; () banked
 28539  01080C  51BD               	movf	(_MyTCB+4)& (0+255),w,b
 28540  01080E  0101               	movlb	1	; () banked
 28541  010810  255C               	addwf	(??_HandleTCPSeg+2)& (0+255),w,b
 28542  010812  0101               	movlb	1	; () banked
 28543  010814  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28544  010816  0101               	movlb	1	; () banked
 28545  010818  51BE               	movf	(_MyTCB+5)& (0+255),w,b
 28546  01081A  0101               	movlb	1	; () banked
 28547  01081C  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28548  01081E  0101               	movlb	1	; () banked
 28549  010820  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28550  010822  0101               	movlb	1	; () banked
 28551  010824  51BF               	movf	(_MyTCB+6)& (0+255),w,b
 28552  010826  0101               	movlb	1	; () banked
 28553  010828  215E               	addwfc	(??_HandleTCPSeg+4)& (0+255),w,b
 28554  01082A  0101               	movlb	1	; () banked
 28555  01082C  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28556  01082E  0101               	movlb	1	; () banked
 28557  010830  51C0               	movf	(_MyTCB+7)& (0+255),w,b
 28558  010832  0101               	movlb	1	; () banked
 28559  010834  215F               	addwfc	(??_HandleTCPSeg+5)& (0+255),w,b
 28560  010836  0101               	movlb	1	; () banked
 28561  010838  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28562                           
 28563                           ; BSR set to: 1
 28564                           ;tcp.c: 3845: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 28565  01083A  0101               	movlb	1	; () banked
 28566  01083C  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28567  01083E  0101               	movlb	1	; () banked
 28568  010840  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28569  010842  0101               	movlb	1	; () banked
 28570  010844  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28571  010846  0101               	movlb	1	; () banked
 28572  010848  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28573  01084A  B0D8               	btfsc	status,0,c
 28574  01084C  D02B               	goto	l1351
 28575                           
 28576                           ; BSR set to: 1
 28577                           ;tcp.c: 3846: dwTemp -= MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28578  01084E  0101               	movlb	1	; () banked
 28579  010850  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28580  010854  0101               	movlb	1	; () banked
 28581  010856  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28582  01085A  0101               	movlb	1	; () banked
 28583  01085C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28584  01085E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28585  010860  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28586  010862  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28587  010864  0101               	movlb	1	; () banked
 28588  010866  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28589  010868  0101               	movlb	1	; () banked
 28590  01086A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28591  01086C  0101               	movlb	1	; () banked
 28592  01086E  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28593  010870  0101               	movlb	1	; () banked
 28594  010872  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28595  010874  0101               	movlb	1	; () banked
 28596  010876  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28597  010878  0101               	movlb	1	; () banked
 28598  01087A  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28599  01087C  0101               	movlb	1	; () banked
 28600  01087E  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28601  010880  0101               	movlb	1	; () banked
 28602  010882  6B5F               	clrf	(??_HandleTCPSeg+5)& (0+255),b
 28603  010884  0101               	movlb	1	; () banked
 28604  010886  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 28605  010888  0101               	movlb	1	; () banked
 28606  01088A  5F6B               	subwf	HandleTCPSeg@dwTemp& (0+255),f,b
 28607  01088C  0101               	movlb	1	; () banked
 28608  01088E  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 28609  010890  0101               	movlb	1	; () banked
 28610  010892  5B6C               	subwfb	(HandleTCPSeg@dwTemp+1)& (0+255),f,b
 28611  010894  0101               	movlb	1	; () banked
 28612  010896  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 28613  010898  0101               	movlb	1	; () banked
 28614  01089A  5B6D               	subwfb	(HandleTCPSeg@dwTemp+2)& (0+255),f,b
 28615  01089C  0101               	movlb	1	; () banked
 28616  01089E  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 28617  0108A0  0101               	movlb	1	; () banked
 28618  0108A2  5B6E               	subwfb	(HandleTCPSeg@dwTemp+3)& (0+255),f,b
 28619  0108A4                     l1351:
 28620                           
 28621                           ; BSR set to: 1
 28622                           ;tcp.c: 3849: dwTemp = localAckNumber - dwTemp;
 28623  0108A4  0101               	movlb	1	; () banked
 28624  0108A6  C16B  F15A         	movff	HandleTCPSeg@dwTemp,??_HandleTCPSeg
 28625  0108AA  0101               	movlb	1	; () banked
 28626  0108AC  C16C  F15B         	movff	HandleTCPSeg@dwTemp+1,??_HandleTCPSeg+1
 28627  0108B0  0101               	movlb	1	; () banked
 28628  0108B2  C16D  F15C         	movff	HandleTCPSeg@dwTemp+2,??_HandleTCPSeg+2
 28629  0108B6  0101               	movlb	1	; () banked
 28630  0108B8  C16E  F15D         	movff	HandleTCPSeg@dwTemp+3,??_HandleTCPSeg+3
 28631  0108BC  0101               	movlb	1	; () banked
 28632  0108BE  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28633  0108C0  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28634  0108C2  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 28635  0108C4  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 28636  0108C6  2B5A               	incf	??_HandleTCPSeg& (0+255),f,b
 28637  0108C8  0E00               	movlw	0
 28638  0108CA  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28639  0108CC  235C               	addwfc	(??_HandleTCPSeg+2)& (0+255),f,b
 28640  0108CE  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 28641  0108D0  0101               	movlb	1	; () banked
 28642  0108D2  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 28643  0108D4  0101               	movlb	1	; () banked
 28644  0108D6  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28645  0108D8  0101               	movlb	1	; () banked
 28646  0108DA  6F6B               	movwf	HandleTCPSeg@dwTemp& (0+255),b
 28647  0108DC  0101               	movlb	1	; () banked
 28648  0108DE  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 28649  0108E0  0101               	movlb	1	; () banked
 28650  0108E2  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28651  0108E4  0101               	movlb	1	; () banked
 28652  0108E6  6F6C               	movwf	(HandleTCPSeg@dwTemp+1)& (0+255),b
 28653  0108E8  0101               	movlb	1	; () banked
 28654  0108EA  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 28655  0108EC  0101               	movlb	1	; () banked
 28656  0108EE  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 28657  0108F0  0101               	movlb	1	; () banked
 28658  0108F2  6F6D               	movwf	(HandleTCPSeg@dwTemp+2)& (0+255),b
 28659  0108F4  0101               	movlb	1	; () banked
 28660  0108F6  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 28661  0108F8  0101               	movlb	1	; () banked
 28662  0108FA  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 28663  0108FC  0101               	movlb	1	; () banked
 28664  0108FE  6F6E               	movwf	(HandleTCPSeg@dwTemp+3)& (0+255),b
 28665                           
 28666                           ;tcp.c: 3850: if(((int32_t)(dwTemp) > (int32_t)0) && (dwTemp <= MyTCBStub.bufferRxStart 
      +                          - MyTCBStub.bufferTxStart))
 28667  010900  0101               	movlb	1	; () banked
 28668  010902  516E               	movf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28669  010904  0A80               	xorlw	128
 28670  010906  0F80               	addlw	128
 28671  010908  E10B               	bnz	u14995
 28672  01090A  0E00               	movlw	0
 28673  01090C  0101               	movlb	1	; () banked
 28674  01090E  5D6D               	subwf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28675  010910  E107               	bnz	u14995
 28676  010912  0E00               	movlw	0
 28677  010914  0101               	movlb	1	; () banked
 28678  010916  5D6C               	subwf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28679  010918  E103               	bnz	u14995
 28680  01091A  0E01               	movlw	1
 28681  01091C  0101               	movlb	1	; () banked
 28682  01091E  5D6B               	subwf	HandleTCPSeg@dwTemp& (0+255),w,b
 28683  010920                     u14995:
 28684  010920  A0D8               	btfss	status,0,c
 28685  010922  D0FE               	goto	l13484
 28686                           
 28687                           ; BSR set to: 1
 28688  010924  0101               	movlb	1	; () banked
 28689  010926  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28690  01092A  0101               	movlb	1	; () banked
 28691  01092C  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28692  010930  0101               	movlb	1	; () banked
 28693  010932  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28694  010934  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28695  010936  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28696  010938  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28697  01093A  0101               	movlb	1	; () banked
 28698  01093C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28699  01093E  0101               	movlb	1	; () banked
 28700  010940  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28701  010942  0101               	movlb	1	; () banked
 28702  010944  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 28703  010946  0101               	movlb	1	; () banked
 28704  010948  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28705  01094A  0101               	movlb	1	; () banked
 28706  01094C  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28707  01094E  0101               	movlb	1	; () banked
 28708  010950  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 28709  010952  0101               	movlb	1	; () banked
 28710  010954  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 28711  010956  0101               	movlb	1	; () banked
 28712  010958  6B5F               	clrf	(??_HandleTCPSeg+5)& (0+255),b
 28713  01095A  0101               	movlb	1	; () banked
 28714  01095C  516B               	movf	HandleTCPSeg@dwTemp& (0+255),w,b
 28715  01095E  0101               	movlb	1	; () banked
 28716  010960  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 28717  010962  0101               	movlb	1	; () banked
 28718  010964  516C               	movf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28719  010966  0101               	movlb	1	; () banked
 28720  010968  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 28721  01096A  0101               	movlb	1	; () banked
 28722  01096C  516D               	movf	(HandleTCPSeg@dwTemp+2)& (0+255),w,b
 28723  01096E  0101               	movlb	1	; () banked
 28724  010970  595E               	subwfb	(??_HandleTCPSeg+4)& (0+255),w,b
 28725  010972  0101               	movlb	1	; () banked
 28726  010974  516E               	movf	(HandleTCPSeg@dwTemp+3)& (0+255),w,b
 28727  010976  0101               	movlb	1	; () banked
 28728  010978  595F               	subwfb	(??_HandleTCPSeg+5)& (0+255),w,b
 28729  01097A  A0D8               	btfss	status,0,c
 28730  01097C  D0D1               	goto	l13484
 28731                           
 28732                           ; BSR set to: 1
 28733                           ;tcp.c: 3851: {
 28734                           ;tcp.c: 3852: MyTCB.flags.bRXNoneACKed1 = 0;
 28735  01097E  0101               	movlb	1	; () banked
 28736  010980  97DB               	bcf	(_MyTCB+34)& (0+255),3,b
 28737                           
 28738                           ;tcp.c: 3853: MyTCB.flags.bRXNoneACKed2 = 0;
 28739  010982  0101               	movlb	1	; () banked
 28740  010984  99DB               	bcf	(_MyTCB+34)& (0+255),4,b
 28741                           
 28742                           ;tcp.c: 3854: MyTCBStub.Flags.bHalfFullFlush = 0;
 28743  010986  0101               	movlb	1	; () banked
 28744  010988  91F8               	bcf	(_MyTCBStub+24)& (0+255),0,b
 28745                           
 28746                           ;tcp.c: 3857: wTemp = MyTCBStub.txTail;
 28747  01098A  C1E8  F17A         	movff	_MyTCBStub+8,HandleTCPSeg@wTemp
 28748  01098E  C1E9  F17B         	movff	_MyTCBStub+9,HandleTCPSeg@wTemp+1
 28749                           
 28750                           ; BSR set to: 1
 28751                           ;tcp.c: 3858: MyTCBStub.txTail += dwTemp;
 28752  010992  0101               	movlb	1	; () banked
 28753  010994  516B               	movf	HandleTCPSeg@dwTemp& (0+255),w,b
 28754  010996  0101               	movlb	1	; () banked
 28755  010998  27E8               	addwf	(_MyTCBStub+8)& (0+255),f,b
 28756  01099A  0101               	movlb	1	; () banked
 28757  01099C  516C               	movf	(HandleTCPSeg@dwTemp+1)& (0+255),w,b
 28758  01099E  0101               	movlb	1	; () banked
 28759  0109A0  23E9               	addwfc	(_MyTCBStub+9)& (0+255),f,b
 28760                           
 28761                           ;tcp.c: 3859: if(MyTCB.txUnackedTail >= wTemp)
 28762  0109A2  0101               	movlb	1	; () banked
 28763  0109A4  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 28764  0109A6  0101               	movlb	1	; () banked
 28765  0109A8  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28766  0109AA  0101               	movlb	1	; () banked
 28767  0109AC  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28768  0109AE  0101               	movlb	1	; () banked
 28769  0109B0  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28770  0109B2  A0D8               	btfss	status,0,c
 28771  0109B4  D012               	goto	l13470
 28772                           
 28773                           ; BSR set to: 1
 28774                           ;tcp.c: 3860: {
 28775                           ;tcp.c: 3861: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 28776  0109B6  0101               	movlb	1	; () banked
 28777  0109B8  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28778  0109BA  0101               	movlb	1	; () banked
 28779  0109BC  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 28780  0109BE  0101               	movlb	1	; () banked
 28781  0109C0  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28782  0109C2  0101               	movlb	1	; () banked
 28783  0109C4  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 28784  0109C6  B0D8               	btfsc	status,0,c
 28785  0109C8  D056               	goto	l13476
 28786                           
 28787                           ; BSR set to: 1
 28788                           ;tcp.c: 3862: {
 28789                           ;tcp.c: 3863: MyTCB.MySEQ += MyTCBStub.txTail - MyTCB.txUnackedTail;
 28790  0109CA  0101               	movlb	1	; () banked
 28791  0109CC  EE21  F0C5         	lfsr	2,_MyTCB+12
 28792  0109D0  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 28793  0109D4  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 28794  0109D8  D02F               	goto	L35
 28795  0109DA                     l13470:
 28796                           
 28797                           ; BSR set to: 1
 28798                           ;tcp.c: 3867: else
 28799                           ;tcp.c: 3868: {
 28800                           ;tcp.c: 3869: wTemp = MyTCB.txUnackedTail + (MyTCBStub.bufferRxStart - MyTCBStub.bufferT
      +                          xStart);
 28801  0109DA  0101               	movlb	1	; () banked
 28802  0109DC  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28803  0109E0  0101               	movlb	1	; () banked
 28804  0109E2  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28805  0109E6  0101               	movlb	1	; () banked
 28806  0109E8  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28807  0109EA  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28808  0109EC  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28809  0109EE  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28810  0109F0  0101               	movlb	1	; () banked
 28811  0109F2  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28812  0109F4  0101               	movlb	1	; () banked
 28813  0109F6  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28814  0109F8  0101               	movlb	1	; () banked
 28815  0109FA  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28816  0109FC  0101               	movlb	1	; () banked
 28817  0109FE  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28818  010A00  0101               	movlb	1	; () banked
 28819  010A02  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 28820  010A04  0101               	movlb	1	; () banked
 28821  010A06  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 28822  010A08  0101               	movlb	1	; () banked
 28823  010A0A  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 28824  010A0C  0101               	movlb	1	; () banked
 28825  010A0E  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 28826  010A10  0101               	movlb	1	; () banked
 28827  010A12  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 28828  010A14  0101               	movlb	1	; () banked
 28829  010A16  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 28830                           
 28831                           ;tcp.c: 3870: if(wTemp < MyTCBStub.txTail)
 28832  010A18  0101               	movlb	1	; () banked
 28833  010A1A  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28834  010A1C  0101               	movlb	1	; () banked
 28835  010A1E  5D7A               	subwf	HandleTCPSeg@wTemp& (0+255),w,b
 28836  010A20  0101               	movlb	1	; () banked
 28837  010A22  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28838  010A24  0101               	movlb	1	; () banked
 28839  010A26  597B               	subwfb	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 28840  010A28  B0D8               	btfsc	status,0,c
 28841  010A2A  D025               	goto	l13476
 28842                           
 28843                           ; BSR set to: 1
 28844                           ;tcp.c: 3871: {
 28845                           ;tcp.c: 3872: MyTCB.MySEQ += MyTCBStub.txTail - wTemp;
 28846  010A2C  0101               	movlb	1	; () banked
 28847  010A2E  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 28848  010A32  0101               	movlb	1	; () banked
 28849  010A34  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 28850  010A38                     L35:
 28851  010A38  0101               	movlb	1	; () banked
 28852  010A3A  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28853  010A3C  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28854  010A3E  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28855  010A40  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28856  010A42  0101               	movlb	1	; () banked
 28857  010A44  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 28858  010A46  0101               	movlb	1	; () banked
 28859  010A48  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28860  010A4A  0101               	movlb	1	; () banked
 28861  010A4C  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 28862  010A4E  0101               	movlb	1	; () banked
 28863  010A50  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28864  010A52  0101               	movlb	1	; () banked
 28865  010A54  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28866  010A56  0101               	movlb	1	; () banked
 28867  010A58  27BD               	addwf	(_MyTCB+4)& (0+255),f,b
 28868  010A5A  0101               	movlb	1	; () banked
 28869  010A5C  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28870  010A5E  0101               	movlb	1	; () banked
 28871  010A60  23BE               	addwfc	(_MyTCB+5)& (0+255),f,b
 28872  010A62  0E00               	movlw	0
 28873  010A64  0101               	movlb	1	; () banked
 28874  010A66  23BF               	addwfc	(_MyTCB+6)& (0+255),f,b
 28875  010A68  0E00               	movlw	0
 28876  010A6A  0101               	movlb	1	; () banked
 28877  010A6C  23C0               	addwfc	(_MyTCB+7)& (0+255),f,b
 28878                           
 28879                           ; BSR set to: 1
 28880                           ;tcp.c: 3873: MyTCB.txUnackedTail = MyTCBStub.txTail;
 28881  010A6E  C1E8  F1C5         	movff	_MyTCBStub+8,_MyTCB+12
 28882  010A72  C1E9  F1C6         	movff	_MyTCBStub+9,_MyTCB+13
 28883  010A76                     l13476:
 28884                           
 28885                           ; BSR set to: 1
 28886                           ;tcp.c: 3874: }
 28887                           ;tcp.c: 3875: }
 28888                           ;tcp.c: 3876: if(MyTCBStub.txTail >= MyTCBStub.bufferRxStart)
 28889  010A76  0101               	movlb	1	; () banked
 28890  010A78  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 28891  010A7C  0101               	movlb	1	; () banked
 28892  010A7E  EE11  F0E8         	lfsr	1,_MyTCBStub+8
 28893  010A82  52E6               	movf	postinc1,f,c
 28894  010A84  52DE               	movf	postinc2,f,c
 28895  010A86  50DD               	movf	postdec2,w,c
 28896  010A88  5CE5               	subwf	postdec1,w,c
 28897  010A8A  E102               	bnz	u15045
 28898  010A8C  50DF               	movf	indf2,w,c
 28899  010A8E  5CE7               	subwf	indf1,w,c
 28900  010A90                     u15045:
 28901  010A90  A0D8               	btfss	status,0,c
 28902  010A92  D01B               	goto	l13480
 28903                           
 28904                           ; BSR set to: 1
 28905                           ;tcp.c: 3877: MyTCBStub.txTail -= MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28906  010A94  0101               	movlb	1	; () banked
 28907  010A96  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28908  010A9A  0101               	movlb	1	; () banked
 28909  010A9C  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28910  010AA0  0101               	movlb	1	; () banked
 28911  010AA2  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28912  010AA4  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28913  010AA6  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28914  010AA8  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28915  010AAA  0101               	movlb	1	; () banked
 28916  010AAC  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28917  010AAE  0101               	movlb	1	; () banked
 28918  010AB0  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28919  010AB2  0101               	movlb	1	; () banked
 28920  010AB4  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28921  010AB6  0101               	movlb	1	; () banked
 28922  010AB8  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28923  010ABA  0101               	movlb	1	; () banked
 28924  010ABC  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28925  010ABE  0101               	movlb	1	; () banked
 28926  010AC0  5FE8               	subwf	(_MyTCBStub+8)& (0+255),f,b
 28927  010AC2  0101               	movlb	1	; () banked
 28928  010AC4  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28929  010AC6  0101               	movlb	1	; () banked
 28930  010AC8  5BE9               	subwfb	(_MyTCBStub+9)& (0+255),f,b
 28931  010ACA                     l13480:
 28932                           
 28933                           ; BSR set to: 1
 28934                           ;tcp.c: 3878: if(MyTCB.txUnackedTail >= MyTCBStub.bufferRxStart)
 28935  010ACA  0101               	movlb	1	; () banked
 28936  010ACC  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 28937  010AD0  0101               	movlb	1	; () banked
 28938  010AD2  EE11  F0C5         	lfsr	1,_MyTCB+12
 28939  010AD6  52E6               	movf	postinc1,f,c
 28940  010AD8  52DE               	movf	postinc2,f,c
 28941  010ADA  50DD               	movf	postdec2,w,c
 28942  010ADC  5CE5               	subwf	postdec1,w,c
 28943  010ADE  E102               	bnz	u15055
 28944  010AE0  50DF               	movf	indf2,w,c
 28945  010AE2  5CE7               	subwf	indf1,w,c
 28946  010AE4                     u15055:
 28947  010AE4  A0D8               	btfss	status,0,c
 28948  010AE6  D0A7               	goto	l13504
 28949                           
 28950                           ; BSR set to: 1
 28951                           ;tcp.c: 3879: MyTCB.txUnackedTail -= MyTCBStub.bufferRxStart - MyTCBStub.bufferTxStart;
 28952  010AE8  0101               	movlb	1	; () banked
 28953  010AEA  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 28954  010AEE  0101               	movlb	1	; () banked
 28955  010AF0  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 28956  010AF4  0101               	movlb	1	; () banked
 28957  010AF6  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 28958  010AF8  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 28959  010AFA  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 28960  010AFC  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 28961  010AFE  0101               	movlb	1	; () banked
 28962  010B00  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 28963  010B02  0101               	movlb	1	; () banked
 28964  010B04  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 28965  010B06  0101               	movlb	1	; () banked
 28966  010B08  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 28967  010B0A  0101               	movlb	1	; () banked
 28968  010B0C  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 28969  010B0E  0101               	movlb	1	; () banked
 28970  010B10  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 28971  010B12  0101               	movlb	1	; () banked
 28972  010B14  5FC5               	subwf	(_MyTCB+12)& (0+255),f,b
 28973  010B16  0101               	movlb	1	; () banked
 28974  010B18  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 28975  010B1A  0101               	movlb	1	; () banked
 28976  010B1C  5BC6               	subwfb	(_MyTCB+13)& (0+255),f,b
 28977  010B1E  D08B               	goto	l13504
 28978  010B20                     l13484:
 28979                           
 28980                           ; BSR set to: 1
 28981                           ;tcp.c: 3881: else
 28982                           ;tcp.c: 3882: {
 28983                           ;tcp.c: 3884: if(MyTCBStub.txTail != MyTCB.txUnackedTail)
 28984  010B20  0101               	movlb	1	; () banked
 28985  010B22  EE21  F0C5         	lfsr	2,_MyTCB+12
 28986  010B26  0101               	movlb	1	; () banked
 28987  010B28  EE11  F0E8         	lfsr	1,_MyTCBStub+8
 28988  010B2C  52E6               	movf	postinc1,f,c
 28989  010B2E  52DE               	movf	postinc2,f,c
 28990  010B30  50DD               	movf	postdec2,w,c
 28991  010B32  18E5               	xorwf	postdec1,w,c
 28992  010B34  CFDF FFE8          	movff	indf2,wreg
 28993  010B38  B4D8               	btfsc	status,2,c
 28994  010B3A  18E7               	xorwf	indf1,w,c
 28995  010B3C  B4D8               	btfsc	status,2,c
 28996  010B3E  D07B               	goto	l13504
 28997                           
 28998                           ; BSR set to: 1
 28999                           ;tcp.c: 3885: {
 29000                           ;tcp.c: 3886: if(MyTCB.flags.bRXNoneACKed1)
 29001  010B40  0101               	movlb	1	; () banked
 29002  010B42  A7DB               	btfss	(_MyTCB+34)& (0+255),3,b
 29003  010B44  D076               	goto	l13502
 29004                           
 29005                           ; BSR set to: 1
 29006                           ;tcp.c: 3887: {
 29007                           ;tcp.c: 3888: if(MyTCB.flags.bRXNoneACKed2)
 29008  010B46  0101               	movlb	1	; () banked
 29009  010B48  A9DB               	btfss	(_MyTCB+34)& (0+255),4,b
 29010  010B4A  D071               	goto	l13500
 29011                           
 29012                           ; BSR set to: 1
 29013                           ;tcp.c: 3889: {
 29014                           ;tcp.c: 3892: MyTCB.MySEQ -= (int32_t)(int16_t)(MyTCB.txUnackedTail - MyTCBStub.txTail);
 29015  010B4C  0101               	movlb	1	; () banked
 29016  010B4E  EE21  F0E8         	lfsr	2,_MyTCBStub+8
 29017  010B52  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29018  010B56  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29019  010B5A  0101               	movlb	1	; () banked
 29020  010B5C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29021  010B5E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29022  010B60  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29023  010B62  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29024  010B64  0101               	movlb	1	; () banked
 29025  010B66  51C5               	movf	(_MyTCB+12)& (0+255),w,b
 29026  010B68  0101               	movlb	1	; () banked
 29027  010B6A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29028  010B6C  0101               	movlb	1	; () banked
 29029  010B6E  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 29030  010B70  0101               	movlb	1	; () banked
 29031  010B72  51C6               	movf	(_MyTCB+13)& (0+255),w,b
 29032  010B74  0101               	movlb	1	; () banked
 29033  010B76  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29034  010B78  0101               	movlb	1	; () banked
 29035  010B7A  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 29036  010B7C  0101               	movlb	1	; () banked
 29037  010B7E  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 29038  010B80  0101               	movlb	1	; () banked
 29039  010B82  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 29040  010B84  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 29041  010B86  0101               	movlb	1	; () banked
 29042  010B88  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 29043  010B8A  0101               	movlb	1	; () banked
 29044  010B8C  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 29045  010B8E  0101               	movlb	1	; () banked
 29046  010B90  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 29047  010B92  0101               	movlb	1	; () banked
 29048  010B94  5FBD               	subwf	(_MyTCB+4)& (0+255),f,b
 29049  010B96  0101               	movlb	1	; () banked
 29050  010B98  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 29051  010B9A  0101               	movlb	1	; () banked
 29052  010B9C  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 29053  010B9E  0101               	movlb	1	; () banked
 29054  010BA0  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 29055  010BA2  0101               	movlb	1	; () banked
 29056  010BA4  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 29057  010BA6  0101               	movlb	1	; () banked
 29058  010BA8  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 29059  010BAA  0101               	movlb	1	; () banked
 29060  010BAC  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 29061                           
 29062                           ; BSR set to: 1
 29063                           ;tcp.c: 3893: if(MyTCB.txUnackedTail < MyTCBStub.txTail)
 29064  010BAE  0101               	movlb	1	; () banked
 29065  010BB0  51E8               	movf	(_MyTCBStub+8)& (0+255),w,b
 29066  010BB2  0101               	movlb	1	; () banked
 29067  010BB4  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 29068  010BB6  0101               	movlb	1	; () banked
 29069  010BB8  51E9               	movf	(_MyTCBStub+9)& (0+255),w,b
 29070  010BBA  0101               	movlb	1	; () banked
 29071  010BBC  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 29072  010BBE  B0D8               	btfsc	status,0,c
 29073  010BC0  D030               	goto	l13496
 29074                           
 29075                           ; BSR set to: 1
 29076                           ;tcp.c: 3894: MyTCB.MySEQ -= (int32_t)(int16_t)(MyTCBStub.bufferRxStart - MyTCBStub.buff
      +                          erTxStart);
 29077  010BC2  0101               	movlb	1	; () banked
 29078  010BC4  C1E0  F15A         	movff	_MyTCBStub,??_HandleTCPSeg
 29079  010BC8  0101               	movlb	1	; () banked
 29080  010BCA  C1E1  F15B         	movff	_MyTCBStub+1,??_HandleTCPSeg+1
 29081  010BCE  0101               	movlb	1	; () banked
 29082  010BD0  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29083  010BD2  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29084  010BD4  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29085  010BD6  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29086  010BD8  0101               	movlb	1	; () banked
 29087  010BDA  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 29088  010BDC  0101               	movlb	1	; () banked
 29089  010BDE  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29090  010BE0  0101               	movlb	1	; () banked
 29091  010BE2  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 29092  010BE4  0101               	movlb	1	; () banked
 29093  010BE6  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 29094  010BE8  0101               	movlb	1	; () banked
 29095  010BEA  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29096  010BEC  0101               	movlb	1	; () banked
 29097  010BEE  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 29098  010BF0  0101               	movlb	1	; () banked
 29099  010BF2  6B5E               	clrf	(??_HandleTCPSeg+4)& (0+255),b
 29100  010BF4  0101               	movlb	1	; () banked
 29101  010BF6  BF5D               	btfsc	(??_HandleTCPSeg+3)& (0+255),7,b
 29102  010BF8  075E               	decf	(??_HandleTCPSeg+4)& (0+255),f,b
 29103  010BFA  0101               	movlb	1	; () banked
 29104  010BFC  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 29105  010BFE  0101               	movlb	1	; () banked
 29106  010C00  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 29107  010C02  0101               	movlb	1	; () banked
 29108  010C04  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 29109  010C06  0101               	movlb	1	; () banked
 29110  010C08  5FBD               	subwf	(_MyTCB+4)& (0+255),f,b
 29111  010C0A  0101               	movlb	1	; () banked
 29112  010C0C  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 29113  010C0E  0101               	movlb	1	; () banked
 29114  010C10  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 29115  010C12  0101               	movlb	1	; () banked
 29116  010C14  515E               	movf	(??_HandleTCPSeg+4)& (0+255),w,b
 29117  010C16  0101               	movlb	1	; () banked
 29118  010C18  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 29119  010C1A  0101               	movlb	1	; () banked
 29120  010C1C  515F               	movf	(??_HandleTCPSeg+5)& (0+255),w,b
 29121  010C1E  0101               	movlb	1	; () banked
 29122  010C20  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 29123  010C22                     l13496:
 29124                           
 29125                           ; BSR set to: 1
 29126                           ;tcp.c: 3895: MyTCB.txUnackedTail = MyTCBStub.txTail;
 29127  010C22  C1E8  F1C5         	movff	_MyTCBStub+8,_MyTCB+12
 29128  010C26  C1E9  F1C6         	movff	_MyTCBStub+9,_MyTCB+13
 29129                           
 29130                           ; BSR set to: 1
 29131                           ;tcp.c: 3896: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 29132  010C2A  0101               	movlb	1	; () banked
 29133  010C2C  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 29134  010C2E                     l13500:
 29135                           
 29136                           ; BSR set to: 1
 29137                           ;tcp.c: 3897: }
 29138                           ;tcp.c: 3898: MyTCB.flags.bRXNoneACKed2 = 1;
 29139  010C2E  0101               	movlb	1	; () banked
 29140  010C30  89DB               	bsf	(_MyTCB+34)& (0+255),4,b
 29141  010C32                     l13502:
 29142                           
 29143                           ; BSR set to: 1
 29144                           ;tcp.c: 3899: }
 29145                           ;tcp.c: 3900: MyTCB.flags.bRXNoneACKed1 = 1;
 29146  010C32  0101               	movlb	1	; () banked
 29147  010C34  87DB               	bsf	(_MyTCB+34)& (0+255),3,b
 29148  010C36                     l13504:
 29149                           
 29150                           ; BSR set to: 1
 29151                           ;tcp.c: 3901: }
 29152                           ;tcp.c: 3902: }
 29153                           ;tcp.c: 3905: if(MyTCBStub.txTail == MyTCBStub.txHead)
 29154  010C36  0101               	movlb	1	; () banked
 29155  010C38  EE21  F0E6         	lfsr	2,_MyTCBStub+6
 29156  010C3C  0101               	movlb	1	; () banked
 29157  010C3E  EE11  F0E8         	lfsr	1,_MyTCBStub+8
 29158  010C42  52E6               	movf	postinc1,f,c
 29159  010C44  52DE               	movf	postinc2,f,c
 29160  010C46  50DD               	movf	postdec2,w,c
 29161  010C48  18E5               	xorwf	postdec1,w,c
 29162  010C4A  CFDF FFE8          	movff	indf2,wreg
 29163  010C4E  B4D8               	btfsc	status,2,c
 29164  010C50  18E7               	xorwf	indf1,w,c
 29165  010C52  A4D8               	btfss	status,2,c
 29166  010C54  D040               	goto	l13518
 29167                           
 29168                           ; BSR set to: 1
 29169                           ;tcp.c: 3906: {
 29170                           ;tcp.c: 3908: if(MyTCBStub.Flags.bTXFIN == 0u)
 29171  010C56  0101               	movlb	1	; () banked
 29172  010C58  B7F8               	btfsc	(_MyTCBStub+24)& (0+255),3,b
 29173  010C5A  D021               	goto	l13512
 29174                           
 29175                           ; BSR set to: 1
 29176                           ;tcp.c: 3909: {
 29177                           ;tcp.c: 3912: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*10);
 29178  010C5C  EC94  F0DB         	call	_TickGet	;wreg free
 29179  010C60  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 29180  010C64  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 29181  010C68  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 29182  010C6C  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 29183  010C70  0EE6               	movlw	230
 29184  010C72  0101               	movlb	1	; () banked
 29185  010C74  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29186  010C76  0101               	movlb	1	; () banked
 29187  010C78  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 29188  010C7A  0EF5               	movlw	245
 29189  010C7C  0101               	movlb	1	; () banked
 29190  010C7E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29191  010C80  0101               	movlb	1	; () banked
 29192  010C82  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 29193  010C84  0E05               	movlw	5
 29194  010C86  0101               	movlb	1	; () banked
 29195  010C88  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 29196  010C8A  0101               	movlb	1	; () banked
 29197  010C8C  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 29198  010C8E  0E00               	movlw	0
 29199  010C90  0101               	movlb	1	; () banked
 29200  010C92  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29201  010C94  0101               	movlb	1	; () banked
 29202  010C96  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 29203                           
 29204                           ; BSR set to: 1
 29205                           ;tcp.c: 3914: MyTCBStub.Flags.bTimerEnabled = 0;
 29206  010C98  0101               	movlb	1	; () banked
 29207  010C9A  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 29208                           
 29209                           ;tcp.c: 3915: }
 29210  010C9C  D01C               	goto	l13518
 29211  010C9E                     l13512:
 29212                           
 29213                           ; BSR set to: 1
 29214                           ;tcp.c: 3916: else
 29215                           ;tcp.c: 3917: {
 29216                           ;tcp.c: 3919: if((MyTCB.MySEQ == localAckNumber) && MyTCB.flags.bFINSent)
 29217  010C9E  0101               	movlb	1	; () banked
 29218  010CA0  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29219  010CA2  0101               	movlb	1	; () banked
 29220  010CA4  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 29221  010CA6  E10E               	bnz	u15125
 29222  010CA8  0101               	movlb	1	; () banked
 29223  010CAA  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29224  010CAC  0101               	movlb	1	; () banked
 29225  010CAE  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 29226  010CB0  E109               	bnz	u15125
 29227  010CB2  0101               	movlb	1	; () banked
 29228  010CB4  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29229  010CB6  0101               	movlb	1	; () banked
 29230  010CB8  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 29231  010CBA  E104               	bnz	u15125
 29232  010CBC  0101               	movlb	1	; () banked
 29233  010CBE  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29234  010CC0  0101               	movlb	1	; () banked
 29235  010CC2  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 29236  010CC4                     u15125:
 29237  010CC4  A4D8               	btfss	status,2,c
 29238  010CC6  D007               	goto	l13518
 29239                           
 29240                           ; BSR set to: 1
 29241  010CC8  0101               	movlb	1	; () banked
 29242  010CCA  A1DB               	btfss	(_MyTCB+34)& (0+255),0,b
 29243  010CCC  D004               	goto	l13518
 29244                           
 29245                           ; BSR set to: 1
 29246                           ;tcp.c: 3920: {
 29247                           ;tcp.c: 3921: MyTCBStub.Flags.bTimerEnabled = 0;
 29248  010CCE  0101               	movlb	1	; () banked
 29249  010CD0  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 29250                           
 29251                           ;tcp.c: 3922: MyTCBStub.Flags.bTXFIN = 0;
 29252  010CD2  0101               	movlb	1	; () banked
 29253  010CD4  97F8               	bcf	(_MyTCBStub+24)& (0+255),3,b
 29254  010CD6                     l13518:
 29255                           
 29256                           ; BSR set to: 1
 29257                           ;tcp.c: 3923: }
 29258                           ;tcp.c: 3924: }
 29259                           ;tcp.c: 3925: }
 29260                           ;tcp.c: 3930: wNewWindow = h->Window - ((uint16_t)(MyTCB.MySEQ - localAckNumber));
 29261  010CD6  0101               	movlb	1	; () banked
 29262  010CD8  EE20 F00E          	lfsr	2,14
 29263  010CDC  0101               	movlb	1	; () banked
 29264  010CDE  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 29265  010CE0  26D9               	addwf	fsr2l,f,c
 29266  010CE2  0101               	movlb	1	; () banked
 29267  010CE4  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 29268  010CE6  22DA               	addwfc	fsr2h,f,c
 29269  010CE8  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29270  010CEC  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29271  010CF0  0101               	movlb	1	; () banked
 29272  010CF2  C175  F15C         	movff	HandleTCPSeg@localAckNumber,??_HandleTCPSeg+2
 29273  010CF6  0101               	movlb	1	; () banked
 29274  010CF8  C176  F15D         	movff	HandleTCPSeg@localAckNumber+1,??_HandleTCPSeg+3
 29275  010CFC  0101               	movlb	1	; () banked
 29276  010CFE  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 29277  010D00  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 29278  010D02  4B5C               	infsnz	(??_HandleTCPSeg+2)& (0+255),f,b
 29279  010D04  2B5D               	incf	(??_HandleTCPSeg+3)& (0+255),f,b
 29280  010D06  0101               	movlb	1	; () banked
 29281  010D08  51BD               	movf	(_MyTCB+4)& (0+255),w,b
 29282  010D0A  0101               	movlb	1	; () banked
 29283  010D0C  275C               	addwf	(??_HandleTCPSeg+2)& (0+255),f,b
 29284  010D0E  0101               	movlb	1	; () banked
 29285  010D10  51BE               	movf	(_MyTCB+5)& (0+255),w,b
 29286  010D12  0101               	movlb	1	; () banked
 29287  010D14  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 29288  010D16  0101               	movlb	1	; () banked
 29289  010D18  1F5C               	comf	(??_HandleTCPSeg+2)& (0+255),f,b
 29290  010D1A  1F5D               	comf	(??_HandleTCPSeg+3)& (0+255),f,b
 29291  010D1C  4B5C               	infsnz	(??_HandleTCPSeg+2)& (0+255),f,b
 29292  010D1E  2B5D               	incf	(??_HandleTCPSeg+3)& (0+255),f,b
 29293  010D20  0101               	movlb	1	; () banked
 29294  010D22  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29295  010D24  0101               	movlb	1	; () banked
 29296  010D26  255C               	addwf	(??_HandleTCPSeg+2)& (0+255),w,b
 29297  010D28  0101               	movlb	1	; () banked
 29298  010D2A  6F62               	movwf	HandleTCPSeg@wNewWindow& (0+255),b
 29299  010D2C  0101               	movlb	1	; () banked
 29300  010D2E  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29301  010D30  0101               	movlb	1	; () banked
 29302  010D32  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29303  010D34  0101               	movlb	1	; () banked
 29304  010D36  6F63               	movwf	(HandleTCPSeg@wNewWindow+1)& (0+255),b
 29305                           
 29306                           ; BSR set to: 1
 29307                           ;tcp.c: 3935: if((MyTCB.remoteWindow == 0u) && wNewWindow)
 29308  010D38  0101               	movlb	1	; () banked
 29309  010D3A  51CC               	movf	(_MyTCB+19)& (0+255),w,b
 29310  010D3C  11CB               	iorwf	(_MyTCB+18)& (0+255),w,b
 29311  010D3E  A4D8               	btfss	status,2,c
 29312  010D40  D007               	goto	l1368
 29313                           
 29314                           ; BSR set to: 1
 29315  010D42  0101               	movlb	1	; () banked
 29316  010D44  5163               	movf	(HandleTCPSeg@wNewWindow+1)& (0+255),w,b
 29317  010D46  1162               	iorwf	HandleTCPSeg@wNewWindow& (0+255),w,b
 29318  010D48  B4D8               	btfsc	status,2,c
 29319  010D4A  D002               	goto	l1368
 29320                           
 29321                           ; BSR set to: 1
 29322                           ;tcp.c: 3936: MyTCBStub.Flags.bTXASAP = 1;
 29323  010D4C  0101               	movlb	1	; () banked
 29324  010D4E  83F8               	bsf	(_MyTCBStub+24)& (0+255),1,b
 29325  010D50                     l1368:
 29326                           
 29327                           ; BSR set to: 1
 29328                           ;tcp.c: 3937: MyTCB.remoteWindow = wNewWindow;
 29329  010D50  C162  F1CB         	movff	HandleTCPSeg@wNewWindow,_MyTCB+18
 29330  010D54  C163  F1CC         	movff	HandleTCPSeg@wNewWindow+1,_MyTCB+19
 29331                           
 29332                           ; BSR set to: 1
 29333                           ;tcp.c: 3940: if(MyTCBStub.smState == TCP_FIN_WAIT_1)
 29334  010D58  0101               	movlb	1	; () banked
 29335  010D5A  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29336  010D5C  0A08               	xorlw	8
 29337  010D5E  A4D8               	btfss	status,2,c
 29338  010D60  D03C               	goto	l13538
 29339                           
 29340                           ; BSR set to: 1
 29341                           ;tcp.c: 3941: {
 29342                           ;tcp.c: 3943: if((MyTCB.MySEQ == localAckNumber) && MyTCB.flags.bFINSent)
 29343  010D62  0101               	movlb	1	; () banked
 29344  010D64  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29345  010D66  0101               	movlb	1	; () banked
 29346  010D68  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 29347  010D6A  E10E               	bnz	u15175
 29348  010D6C  0101               	movlb	1	; () banked
 29349  010D6E  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29350  010D70  0101               	movlb	1	; () banked
 29351  010D72  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 29352  010D74  E109               	bnz	u15175
 29353  010D76  0101               	movlb	1	; () banked
 29354  010D78  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29355  010D7A  0101               	movlb	1	; () banked
 29356  010D7C  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 29357  010D7E  E104               	bnz	u15175
 29358  010D80  0101               	movlb	1	; () banked
 29359  010D82  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29360  010D84  0101               	movlb	1	; () banked
 29361  010D86  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 29362  010D88                     u15175:
 29363  010D88  A4D8               	btfss	status,2,c
 29364  010D8A  D0A6               	goto	l1377
 29365                           
 29366                           ; BSR set to: 1
 29367  010D8C  0101               	movlb	1	; () banked
 29368  010D8E  A1DB               	btfss	(_MyTCB+34)& (0+255),0,b
 29369  010D90  D0A3               	goto	l1377
 29370                           
 29371                           ; BSR set to: 1
 29372                           ;tcp.c: 3944: {
 29373                           ;tcp.c: 3947: MyTCBStub.eventTime = TickGet() + ((uint32_t)(((((40000000ul)/4)+128ull)/2
      +                          56ull))*5);
 29374  010D92  EC94  F0DB         	call	_TickGet	;wreg free
 29375  010D96  C100  F15A         	movff	?_TickGet,??_HandleTCPSeg
 29376  010D9A  C101  F15B         	movff	?_TickGet+1,??_HandleTCPSeg+1
 29377  010D9E  C102  F15C         	movff	?_TickGet+2,??_HandleTCPSeg+2
 29378  010DA2  C103  F15D         	movff	?_TickGet+3,??_HandleTCPSeg+3
 29379  010DA6  0EF3               	movlw	243
 29380  010DA8  0101               	movlb	1	; () banked
 29381  010DAA  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29382  010DAC  0101               	movlb	1	; () banked
 29383  010DAE  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 29384  010DB0  0EFA               	movlw	250
 29385  010DB2  0101               	movlb	1	; () banked
 29386  010DB4  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29387  010DB6  0101               	movlb	1	; () banked
 29388  010DB8  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 29389  010DBA  0E02               	movlw	2
 29390  010DBC  0101               	movlb	1	; () banked
 29391  010DBE  215C               	addwfc	(??_HandleTCPSeg+2)& (0+255),w,b
 29392  010DC0  0101               	movlb	1	; () banked
 29393  010DC2  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 29394  010DC4  0E00               	movlw	0
 29395  010DC6  0101               	movlb	1	; () banked
 29396  010DC8  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29397  010DCA  0101               	movlb	1	; () banked
 29398  010DCC  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 29399                           
 29400                           ; BSR set to: 1
 29401                           ;tcp.c: 3948: MyTCBStub.Flags.bTimerEnabled = 1;
 29402  010DCE  0101               	movlb	1	; () banked
 29403  010DD0  89F7               	bsf	(_MyTCBStub+23)& (0+255),4,b
 29404                           
 29405                           ; BSR set to: 1
 29406                           ;tcp.c: 3949: MyTCBStub.smState = TCP_FIN_WAIT_2;
 29407  010DD2  0E09               	movlw	9
 29408  010DD4  0101               	movlb	1	; () banked
 29409  010DD6  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 29410  010DD8  D07F               	goto	l1377
 29411  010DDA                     l13538:
 29412                           
 29413                           ; BSR set to: 1
 29414                           ;tcp.c: 3952: else if(MyTCBStub.smState == TCP_FIN_WAIT_2)
 29415  010DDA  0101               	movlb	1	; () banked
 29416  010DDC  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29417  010DDE  0A09               	xorlw	9
 29418  010DE0  A4D8               	btfss	status,2,c
 29419  010DE2  D014               	goto	l13550
 29420                           
 29421                           ; BSR set to: 1
 29422                           ;tcp.c: 3953: {
 29423                           ;tcp.c: 3962: if(!(localHeaderFlags & (0x01)))
 29424  010DE4  0101               	movlb	1	; () banked
 29425  010DE6  B179               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),0,b
 29426  010DE8  D077               	goto	l1377
 29427                           
 29428                           ; BSR set to: 1
 29429                           ;tcp.c: 3963: {
 29430                           ;tcp.c: 3964: MyTCB.MySEQ = localAckNumber;
 29431  010DEA  C175  F1BD         	movff	HandleTCPSeg@localAckNumber,_MyTCB+4
 29432  010DEE  C176  F1BE         	movff	HandleTCPSeg@localAckNumber+1,_MyTCB+5
 29433  010DF2  C177  F1BF         	movff	HandleTCPSeg@localAckNumber+2,_MyTCB+6
 29434  010DF6  C178  F1C0         	movff	HandleTCPSeg@localAckNumber+3,_MyTCB+7
 29435                           
 29436                           ; BSR set to: 1
 29437                           ;tcp.c: 3965: SendTCP((0x04) | (0x10), 0);
 29438  010DFA  0E00               	movlw	0
 29439  010DFC  0101               	movlb	1	; () banked
 29440  010DFE  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 29441  010E00  0E14               	movlw	20
 29442  010E02  ECC1  F096         	call	_SendTCP
 29443                           
 29444                           ;tcp.c: 3966: CloseSocket();
 29445  010E06  ECF0  F0CD         	call	_CloseSocket	;wreg free
 29446  010E0A  0012               	return	
 29447  010E0C                     l13550:
 29448                           
 29449                           ;tcp.c: 3970: else if(MyTCBStub.smState == TCP_CLOSING)
 29450  010E0C  0101               	movlb	1	; () banked
 29451  010E0E  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29452  010E10  0A0A               	xorlw	10
 29453  010E12  A4D8               	btfss	status,2,c
 29454  010E14  D061               	goto	l1377
 29455                           
 29456                           ; BSR set to: 1
 29457                           ;tcp.c: 3971: {
 29458                           ;tcp.c: 3973: if(MyTCB.MySEQ == localAckNumber)
 29459  010E16  0101               	movlb	1	; () banked
 29460  010E18  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29461  010E1A  0101               	movlb	1	; () banked
 29462  010E1C  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 29463  010E1E  E10E               	bnz	u15225
 29464  010E20  0101               	movlb	1	; () banked
 29465  010E22  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29466  010E24  0101               	movlb	1	; () banked
 29467  010E26  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 29468  010E28  E109               	bnz	u15225
 29469  010E2A  0101               	movlb	1	; () banked
 29470  010E2C  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29471  010E2E  0101               	movlb	1	; () banked
 29472  010E30  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 29473  010E32  E104               	bnz	u15225
 29474  010E34  0101               	movlb	1	; () banked
 29475  010E36  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29476  010E38  0101               	movlb	1	; () banked
 29477  010E3A  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 29478  010E3C                     u15225:
 29479  010E3C  A4D8               	btfss	status,2,c
 29480  010E3E  0012               	return	
 29481                           
 29482                           ; BSR set to: 1
 29483                           ;tcp.c: 3974: {
 29484                           ;tcp.c: 3984: CloseSocket();
 29485  010E40  ECF0  F0CD         	call	_CloseSocket	;wreg free
 29486  010E44  0012               	return	
 29487  010E46                     l13558:
 29488                           
 29489                           ;tcp.c: 3994: if(MyTCB.MySEQ + 1 == localAckNumber)
 29490  010E46  0E01               	movlw	1
 29491  010E48  0101               	movlb	1	; () banked
 29492  010E4A  25BD               	addwf	(_MyTCB+4)& (0+255),w,b
 29493  010E4C  0101               	movlb	1	; () banked
 29494  010E4E  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 29495  010E50  0E00               	movlw	0
 29496  010E52  0101               	movlb	1	; () banked
 29497  010E54  21BE               	addwfc	(_MyTCB+5)& (0+255),w,b
 29498  010E56  0101               	movlb	1	; () banked
 29499  010E58  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 29500  010E5A  0E00               	movlw	0
 29501  010E5C  0101               	movlb	1	; () banked
 29502  010E5E  21BF               	addwfc	(_MyTCB+6)& (0+255),w,b
 29503  010E60  0101               	movlb	1	; () banked
 29504  010E62  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 29505  010E64  0E00               	movlw	0
 29506  010E66  0101               	movlb	1	; () banked
 29507  010E68  21C0               	addwfc	(_MyTCB+7)& (0+255),w,b
 29508  010E6A  0101               	movlb	1	; () banked
 29509  010E6C  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 29510  010E6E  0101               	movlb	1	; () banked
 29511  010E70  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 29512  010E72  0101               	movlb	1	; () banked
 29513  010E74  195D               	xorwf	(??_HandleTCPSeg+3)& (0+255),w,b
 29514  010E76  E10E               	bnz	u15235
 29515  010E78  0101               	movlb	1	; () banked
 29516  010E7A  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 29517  010E7C  0101               	movlb	1	; () banked
 29518  010E7E  195C               	xorwf	(??_HandleTCPSeg+2)& (0+255),w,b
 29519  010E80  E109               	bnz	u15235
 29520  010E82  0101               	movlb	1	; () banked
 29521  010E84  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 29522  010E86  0101               	movlb	1	; () banked
 29523  010E88  195B               	xorwf	(??_HandleTCPSeg+1)& (0+255),w,b
 29524  010E8A  E104               	bnz	u15235
 29525  010E8C  0101               	movlb	1	; () banked
 29526  010E8E  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 29527  010E90  0101               	movlb	1	; () banked
 29528  010E92  195A               	xorwf	??_HandleTCPSeg& (0+255),w,b
 29529  010E94                     u15235:
 29530  010E94  A4D8               	btfss	status,2,c
 29531  010E96  0012               	return	
 29532                           
 29533                           ; BSR set to: 1
 29534                           ;tcp.c: 3995: CloseSocket();
 29535  010E98  ECF0  F0CD         	call	_CloseSocket	;wreg free
 29536  010E9C  0012               	return	
 29537  010E9E                     l13566:
 29538  010E9E  0101               	movlb	1	; () banked
 29539  010EA0  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29540                           
 29541                           ; Switch size 1, requested type "space"
 29542                           ; Number of cases is 7, Range of values is 6 to 12
 29543                           ; switch strategies available:
 29544                           ; Name         Instructions Cycles
 29545                           ; simple_byte           22    12 (average)
 29546                           ;	Chosen strategy is simple_byte
 29547  010EA2  0A06               	xorlw	6	; case 6
 29548  010EA4  B4D8               	btfsc	status,2,c
 29549  010EA6  EFF5  F082         	goto	l13422
 29550  010EAA  0A01               	xorlw	1	; case 7
 29551  010EAC  B4D8               	btfsc	status,2,c
 29552  010EAE  EF2C  F083         	goto	l13434
 29553  010EB2  0A0F               	xorlw	15	; case 8
 29554  010EB4  B4D8               	btfsc	status,2,c
 29555  010EB6  EF2C  F083         	goto	l13434
 29556  010EBA  0A01               	xorlw	1	; case 9
 29557  010EBC  B4D8               	btfsc	status,2,c
 29558  010EBE  EF2C  F083         	goto	l13434
 29559  010EC2  0A03               	xorlw	3	; case 10
 29560  010EC4  B4D8               	btfsc	status,2,c
 29561  010EC6  EF2C  F083         	goto	l13434
 29562  010ECA  0A01               	xorlw	1	; case 11
 29563  010ECC  B4D8               	btfsc	status,2,c
 29564  010ECE  EF2C  F083         	goto	l13434
 29565  010ED2  0A07               	xorlw	7	; case 12
 29566  010ED4  B4D8               	btfsc	status,2,c
 29567  010ED6  D7B7               	goto	l13558
 29568  010ED8                     l1377:
 29569                           
 29570                           ;tcp.c: 4012: if(localHeaderFlags & (0x20))
 29571  010ED8  0101               	movlb	1	; () banked
 29572  010EDA  BB79               	btfsc	HandleTCPSeg@localHeaderFlags& (0+255),5,b
 29573  010EDC  0012               	return	
 29574                           
 29575                           ; BSR set to: 1
 29576                           ;tcp.c: 4019: if(MyTCBStub.smState == TCP_CLOSE_WAIT)
 29577                           
 29578                           ; BSR set to: 1
 29579                           
 29580                           ; BSR set to: 1
 29581                           ;tcp.c: 4013: return;
 29582  010EDE  0101               	movlb	1	; () banked
 29583  010EE0  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29584  010EE2  0A0B               	xorlw	11
 29585  010EE4  B4D8               	btfsc	status,2,c
 29586  010EE6  0012               	return	
 29587                           
 29588                           ; BSR set to: 1
 29589                           ;tcp.c: 4021: if(MyTCBStub.smState == TCP_CLOSING)
 29590                           
 29591                           ; BSR set to: 1
 29592                           
 29593                           ; BSR set to: 1
 29594                           ;tcp.c: 4020: return;
 29595  010EE8  0101               	movlb	1	; () banked
 29596  010EEA  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29597  010EEC  0A0A               	xorlw	10
 29598  010EEE  B4D8               	btfsc	status,2,c
 29599  010EF0  0012               	return	
 29600                           
 29601                           ; BSR set to: 1
 29602                           ;tcp.c: 4023: if(MyTCBStub.smState == TCP_LAST_ACK)
 29603                           
 29604                           ; BSR set to: 1
 29605                           
 29606                           ; BSR set to: 1
 29607                           ;tcp.c: 4022: return;
 29608  010EF2  0101               	movlb	1	; () banked
 29609  010EF4  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 29610  010EF6  0A0C               	xorlw	12
 29611  010EF8  B4D8               	btfsc	status,2,c
 29612  010EFA  0012               	return	
 29613                           
 29614                           ; BSR set to: 1
 29615                           ;tcp.c: 4029: if(len)
 29616                           
 29617                           ; BSR set to: 1
 29618                           
 29619                           ; BSR set to: 1
 29620                           ;tcp.c: 4024: return;
 29621  010EFC  0101               	movlb	1	; () banked
 29622  010EFE  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29623  010F00  1158               	iorwf	HandleTCPSeg@len& (0+255),w,b
 29624  010F02  B4D8               	btfsc	status,2,c
 29625  010F04  D3B2               	goto	l13670
 29626                           
 29627                           ; BSR set to: 1
 29628                           ;tcp.c: 4030: {
 29629                           ;tcp.c: 4032: if((int16_t)wMissingBytes <= 0)
 29630  010F06  0101               	movlb	1	; () banked
 29631  010F08  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29632  010F0A  0A80               	xorlw	128
 29633  010F0C  6EF3               	movwf	prodl,c
 29634  010F0E  0E80               	movlw	128
 29635  010F10  5CF3               	subwf	prodl,w,c
 29636  010F12  0E01               	movlw	1
 29637  010F14  B4D8               	btfsc	status,2,c
 29638  010F16  5D7C               	subwf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29639  010F18  B0D8               	btfsc	status,0,c
 29640  010F1A  D178               	goto	l13630
 29641                           
 29642                           ; BSR set to: 1
 29643                           ;tcp.c: 4033: {
 29644                           ;tcp.c: 4035: IPSetRxBuffer((h->DataOffset.Val << 2) - wMissingBytes);
 29645  010F1C  0101               	movlb	1	; () banked
 29646  010F1E  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 29647  010F22  0101               	movlb	1	; () banked
 29648  010F24  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 29649  010F28  0101               	movlb	1	; () banked
 29650  010F2A  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29651  010F2C  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29652  010F2E  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29653  010F30  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29654  010F32  0101               	movlb	1	; () banked
 29655  010F34  EE20 F00C          	lfsr	2,12
 29656  010F38  0101               	movlb	1	; () banked
 29657  010F3A  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 29658  010F3C  26D9               	addwf	fsr2l,f,c
 29659  010F3E  0101               	movlb	1	; () banked
 29660  010F40  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 29661  010F42  22DA               	addwfc	fsr2h,f,c
 29662  010F44  0101               	movlb	1	; () banked
 29663  010F46  38DF               	swapf	223,w,c
 29664  010F48  0B0F               	andlw	15
 29665  010F4A  0101               	movlb	1	; () banked
 29666  010F4C  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 29667  010F4E  6B5D               	clrf	(??_HandleTCPSeg+3)& (0+255),b
 29668  010F50  0101               	movlb	1	; () banked
 29669  010F52  90D8               	bcf	status,0,c
 29670  010F54  375C               	rlcf	(??_HandleTCPSeg+2)& (0+255),f,b
 29671  010F56  375D               	rlcf	(??_HandleTCPSeg+3)& (0+255),f,b
 29672  010F58  0101               	movlb	1	; () banked
 29673  010F5A  90D8               	bcf	status,0,c
 29674  010F5C  375C               	rlcf	(??_HandleTCPSeg+2)& (0+255),f,b
 29675  010F5E  375D               	rlcf	(??_HandleTCPSeg+3)& (0+255),f,b
 29676  010F60  0101               	movlb	1	; () banked
 29677  010F62  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29678  010F64  0101               	movlb	1	; () banked
 29679  010F66  255C               	addwf	(??_HandleTCPSeg+2)& (0+255),w,b
 29680  010F68  0101               	movlb	1	; () banked
 29681  010F6A  6F06               	movwf	IPSetRxBuffer@Offset& (0+255),b
 29682  010F6C  0101               	movlb	1	; () banked
 29683  010F6E  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29684  010F70  0101               	movlb	1	; () banked
 29685  010F72  215D               	addwfc	(??_HandleTCPSeg+3)& (0+255),w,b
 29686  010F74  0101               	movlb	1	; () banked
 29687  010F76  6F07               	movwf	(IPSetRxBuffer@Offset+1)& (0+255),b
 29688  010F78  EC88  F0DC         	call	_IPSetRxBuffer	;wreg free
 29689                           
 29690                           ;tcp.c: 4036: len += wMissingBytes;
 29691  010F7C  0101               	movlb	1	; () banked
 29692  010F7E  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 29693  010F80  0101               	movlb	1	; () banked
 29694  010F82  2758               	addwf	HandleTCPSeg@len& (0+255),f,b
 29695  010F84  0101               	movlb	1	; () banked
 29696  010F86  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 29697  010F88  0101               	movlb	1	; () banked
 29698  010F8A  2359               	addwfc	(HandleTCPSeg@len+1)& (0+255),f,b
 29699                           
 29700                           ; BSR set to: 1
 29701                           ;tcp.c: 4040: if(len > wFreeSpace)
 29702  010F8C  0101               	movlb	1	; () banked
 29703  010F8E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29704  010F90  0101               	movlb	1	; () banked
 29705  010F92  5D73               	subwf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 29706  010F94  0101               	movlb	1	; () banked
 29707  010F96  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29708  010F98  0101               	movlb	1	; () banked
 29709  010F9A  5974               	subwfb	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 29710  010F9C  B0D8               	btfsc	status,0,c
 29711  010F9E  D004               	goto	l13594
 29712                           
 29713                           ; BSR set to: 1
 29714                           ;tcp.c: 4041: len = wFreeSpace;
 29715  010FA0  C173  F158         	movff	HandleTCPSeg@wFreeSpace,HandleTCPSeg@len
 29716  010FA4  C174  F159         	movff	HandleTCPSeg@wFreeSpace+1,HandleTCPSeg@len+1
 29717  010FA8                     l13594:
 29718                           
 29719                           ; BSR set to: 1
 29720                           ;tcp.c: 4043: MyTCB.RemoteSEQ += (uint32_t)len;
 29721  010FA8  0101               	movlb	1	; () banked
 29722  010FAA  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29723  010FAC  0101               	movlb	1	; () banked
 29724  010FAE  27C1               	addwf	(_MyTCB+8)& (0+255),f,b
 29725  010FB0  0101               	movlb	1	; () banked
 29726  010FB2  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29727  010FB4  0101               	movlb	1	; () banked
 29728  010FB6  23C2               	addwfc	(_MyTCB+9)& (0+255),f,b
 29729  010FB8  0E00               	movlw	0
 29730  010FBA  0101               	movlb	1	; () banked
 29731  010FBC  23C3               	addwfc	(_MyTCB+10)& (0+255),f,b
 29732  010FBE  0E00               	movlw	0
 29733  010FC0  0101               	movlb	1	; () banked
 29734  010FC2  23C4               	addwfc	(_MyTCB+11)& (0+255),f,b
 29735                           
 29736                           ; BSR set to: 1
 29737                           ;tcp.c: 4047: if(MyTCBStub.rxHead + len > MyTCBStub.bufferEnd)
 29738  010FC4  0101               	movlb	1	; () banked
 29739  010FC6  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 29740  010FCA  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29741  010FCE  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29742  010FD2  0101               	movlb	1	; () banked
 29743  010FD4  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29744  010FD6  0101               	movlb	1	; () banked
 29745  010FD8  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29746  010FDA  0101               	movlb	1	; () banked
 29747  010FDC  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29748  010FDE  0101               	movlb	1	; () banked
 29749  010FE0  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29750  010FE2  0101               	movlb	1	; () banked
 29751  010FE4  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 29752  010FE6  0101               	movlb	1	; () banked
 29753  010FE8  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 29754  010FEA  0101               	movlb	1	; () banked
 29755  010FEC  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 29756  010FEE  0101               	movlb	1	; () banked
 29757  010FF0  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 29758  010FF2  B0D8               	btfsc	status,0,c
 29759  010FF4  D079               	goto	l13606
 29760                           
 29761                           ; BSR set to: 1
 29762                           ;tcp.c: 4048: {
 29763                           ;tcp.c: 4049: wTemp = MyTCBStub.bufferEnd - MyTCBStub.rxHead + 1;
 29764  010FF6  0101               	movlb	1	; () banked
 29765  010FF8  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 29766  010FFC  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 29767  011000  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 29768  011004  0101               	movlb	1	; () banked
 29769  011006  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29770  011008  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29771  01100A  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29772  01100C  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29773  01100E  0101               	movlb	1	; () banked
 29774  011010  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 29775  011012  0101               	movlb	1	; () banked
 29776  011014  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29777  011016  0101               	movlb	1	; () banked
 29778  011018  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 29779  01101A  0101               	movlb	1	; () banked
 29780  01101C  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29781  01101E  0E01               	movlw	1
 29782  011020  0101               	movlb	1	; () banked
 29783  011022  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29784  011024  0101               	movlb	1	; () banked
 29785  011026  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 29786  011028  0E00               	movlw	0
 29787  01102A  0101               	movlb	1	; () banked
 29788  01102C  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29789  01102E  0101               	movlb	1	; () banked
 29790  011030  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 29791                           
 29792                           ; BSR set to: 1
 29793                           ;tcp.c: 4050: TCPRAMCopy(MyTCBStub.rxHead, MyTCBStub.vMemoryMedium, (unsigned short)-1, 
      +                          0u, wTemp);
 29794  011032  C1EA  F11E         	movff	_MyTCBStub+10,TCPRAMCopy@ptrDest
 29795  011036  C1EB  F11F         	movff	_MyTCBStub+11,TCPRAMCopy@ptrDest+1
 29796  01103A  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 29797  01103E  0EFF               	movlw	255
 29798  011040  0101               	movlb	1	; () banked
 29799  011042  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 29800  011044  0101               	movlb	1	; () banked
 29801  011046  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 29802  011048  0E00               	movlw	0
 29803  01104A  0101               	movlb	1	; () banked
 29804  01104C  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 29805  01104E  C17A  F124         	movff	HandleTCPSeg@wTemp,TCPRAMCopy@wLength
 29806  011052  C17B  F125         	movff	HandleTCPSeg@wTemp+1,TCPRAMCopy@wLength+1
 29807  011056  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 29808                           
 29809                           ;tcp.c: 4051: TCPRAMCopy(MyTCBStub.bufferRxStart, MyTCBStub.vMemoryMedium, (unsigned sho
      +                          rt)-1, 0u, len - wTemp);
 29810  01105A  C1E2  F11E         	movff	_MyTCBStub+2,TCPRAMCopy@ptrDest
 29811  01105E  C1E3  F11F         	movff	_MyTCBStub+3,TCPRAMCopy@ptrDest+1
 29812  011062  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 29813  011066  0EFF               	movlw	255
 29814  011068  0101               	movlb	1	; () banked
 29815  01106A  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 29816  01106C  0101               	movlb	1	; () banked
 29817  01106E  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 29818  011070  0E00               	movlw	0
 29819  011072  0101               	movlb	1	; () banked
 29820  011074  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 29821  011076  0101               	movlb	1	; () banked
 29822  011078  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 29823  01107C  0101               	movlb	1	; () banked
 29824  01107E  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 29825  011082  0101               	movlb	1	; () banked
 29826  011084  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29827  011086  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29828  011088  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29829  01108A  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29830  01108C  0101               	movlb	1	; () banked
 29831  01108E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29832  011090  0101               	movlb	1	; () banked
 29833  011092  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29834  011094  0101               	movlb	1	; () banked
 29835  011096  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 29836  011098  0101               	movlb	1	; () banked
 29837  01109A  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29838  01109C  0101               	movlb	1	; () banked
 29839  01109E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29840  0110A0  0101               	movlb	1	; () banked
 29841  0110A2  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 29842  0110A4  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 29843                           
 29844                           ;tcp.c: 4052: MyTCBStub.rxHead = MyTCBStub.bufferRxStart + (len - wTemp);
 29845  0110A8  0101               	movlb	1	; () banked
 29846  0110AA  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 29847  0110AE  0101               	movlb	1	; () banked
 29848  0110B0  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 29849  0110B4  0101               	movlb	1	; () banked
 29850  0110B6  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 29851  0110B8  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 29852  0110BA  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 29853  0110BC  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 29854  0110BE  0101               	movlb	1	; () banked
 29855  0110C0  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 29856  0110C2  0101               	movlb	1	; () banked
 29857  0110C4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 29858  0110C6  0101               	movlb	1	; () banked
 29859  0110C8  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 29860  0110CA  0101               	movlb	1	; () banked
 29861  0110CC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 29862  0110CE  0101               	movlb	1	; () banked
 29863  0110D0  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29864  0110D2  0101               	movlb	1	; () banked
 29865  0110D4  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 29866  0110D6  0101               	movlb	1	; () banked
 29867  0110D8  6FEA               	movwf	(_MyTCBStub+10)& (0+255),b
 29868  0110DA  0101               	movlb	1	; () banked
 29869  0110DC  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29870  0110DE  0101               	movlb	1	; () banked
 29871  0110E0  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 29872  0110E2  0101               	movlb	1	; () banked
 29873  0110E4  6FEB               	movwf	(_MyTCBStub+11)& (0+255),b
 29874                           
 29875                           ;tcp.c: 4053: }
 29876  0110E6  D01C               	goto	l13610
 29877  0110E8                     l13606:
 29878                           
 29879                           ; BSR set to: 1
 29880                           ;tcp.c: 4054: else
 29881                           ;tcp.c: 4055: {
 29882                           ;tcp.c: 4056: TCPRAMCopy(MyTCBStub.rxHead, MyTCBStub.vMemoryMedium, (unsigned short)-1, 
      +                          0u, len);
 29883  0110E8  C1EA  F11E         	movff	_MyTCBStub+10,TCPRAMCopy@ptrDest
 29884  0110EC  C1EB  F11F         	movff	_MyTCBStub+11,TCPRAMCopy@ptrDest+1
 29885  0110F0  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 29886  0110F4  0EFF               	movlw	255
 29887  0110F6  0101               	movlb	1	; () banked
 29888  0110F8  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 29889  0110FA  0101               	movlb	1	; () banked
 29890  0110FC  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 29891  0110FE  0E00               	movlw	0
 29892  011100  0101               	movlb	1	; () banked
 29893  011102  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 29894  011104  C158  F124         	movff	HandleTCPSeg@len,TCPRAMCopy@wLength
 29895  011108  C159  F125         	movff	HandleTCPSeg@len+1,TCPRAMCopy@wLength+1
 29896  01110C  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 29897                           
 29898                           ;tcp.c: 4057: MyTCBStub.rxHead += len;
 29899  011110  0101               	movlb	1	; () banked
 29900  011112  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29901  011114  0101               	movlb	1	; () banked
 29902  011116  27EA               	addwf	(_MyTCBStub+10)& (0+255),f,b
 29903  011118  0101               	movlb	1	; () banked
 29904  01111A  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29905  01111C  0101               	movlb	1	; () banked
 29906  01111E  23EB               	addwfc	(_MyTCBStub+11)& (0+255),f,b
 29907  011120                     l13610:
 29908                           
 29909                           ; BSR set to: 1
 29910                           ;tcp.c: 4058: }
 29911                           ;tcp.c: 4061: if(MyTCB.sHoleSize != -1)
 29912  011120  0101               	movlb	1	; () banked
 29913  011122  29D9               	incf	(_MyTCB+32)& (0+255),w,b
 29914  011124  B4D8               	btfsc	status,2,c
 29915  011126  29DA               	incf	(_MyTCB+33)& (0+255),w,b
 29916  011128  B4D8               	btfsc	status,2,c
 29917  01112A  D29F               	goto	l13670
 29918                           
 29919                           ; BSR set to: 1
 29920                           ;tcp.c: 4062: {
 29921                           ;tcp.c: 4063: MyTCB.sHoleSize -= len;
 29922  01112C  0101               	movlb	1	; () banked
 29923  01112E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 29924  011130  0101               	movlb	1	; () banked
 29925  011132  5FD9               	subwf	(_MyTCB+32)& (0+255),f,b
 29926  011134  0101               	movlb	1	; () banked
 29927  011136  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 29928  011138  0101               	movlb	1	; () banked
 29929  01113A  5BDA               	subwfb	(_MyTCB+33)& (0+255),f,b
 29930                           
 29931                           ;tcp.c: 4064: wTemp = MyTCB.wFutureDataSize + MyTCB.sHoleSize;
 29932  01113C  0101               	movlb	1	; () banked
 29933  01113E  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 29934  011140  0101               	movlb	1	; () banked
 29935  011142  25CD               	addwf	(_MyTCB+20)& (0+255),w,b
 29936  011144  0101               	movlb	1	; () banked
 29937  011146  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 29938  011148  0101               	movlb	1	; () banked
 29939  01114A  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 29940  01114C  0101               	movlb	1	; () banked
 29941  01114E  21CE               	addwfc	(_MyTCB+21)& (0+255),w,b
 29942  011150  0101               	movlb	1	; () banked
 29943  011152  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 29944                           
 29945                           ; BSR set to: 1
 29946                           ;tcp.c: 4067: if((int16_t)wTemp < (int16_t)0)
 29947  011154  0101               	movlb	1	; () banked
 29948  011156  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 29949  011158  0A80               	xorlw	128
 29950  01115A  6EF3               	movwf	prodl,c
 29951  01115C  0E80               	movlw	128
 29952  01115E  5CF3               	subwf	prodl,w,c
 29953  011160  0E00               	movlw	0
 29954  011162  B4D8               	btfsc	status,2,c
 29955  011164  5D7A               	subwf	HandleTCPSeg@wTemp& (0+255),w,b
 29956  011166  A0D8               	btfss	status,0,c
 29957  011168  D04C               	goto	l13628
 29958                           
 29959                           ; BSR set to: 1
 29960                           ;tcp.c: 4071: else if(MyTCB.sHoleSize <= 0)
 29961                           
 29962                           ; BSR set to: 1
 29963                           
 29964                           ;tcp.c: 4070: }
 29965                           
 29966                           ; BSR set to: 1
 29967                           ;tcp.c: 4068: {
 29968                           ;tcp.c: 4069: MyTCB.sHoleSize = -1;
 29969  01116A  0101               	movlb	1	; () banked
 29970  01116C  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 29971  01116E  0A80               	xorlw	128
 29972  011170  6EF3               	movwf	prodl,c
 29973  011172  0E80               	movlw	128
 29974  011174  5CF3               	subwf	prodl,w,c
 29975  011176  0E01               	movlw	1
 29976  011178  B4D8               	btfsc	status,2,c
 29977  01117A  5DD9               	subwf	(_MyTCB+32)& (0+255),w,b
 29978  01117C  B0D8               	btfsc	status,0,c
 29979  01117E  D275               	goto	l13670
 29980                           
 29981                           ; BSR set to: 1
 29982                           ;tcp.c: 4072: {
 29983                           ;tcp.c: 4073: MyTCB.RemoteSEQ += wTemp;
 29984  011180  0101               	movlb	1	; () banked
 29985  011182  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 29986  011184  0101               	movlb	1	; () banked
 29987  011186  27C1               	addwf	(_MyTCB+8)& (0+255),f,b
 29988  011188  0101               	movlb	1	; () banked
 29989  01118A  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 29990  01118C  0101               	movlb	1	; () banked
 29991  01118E  23C2               	addwfc	(_MyTCB+9)& (0+255),f,b
 29992  011190  0E00               	movlw	0
 29993  011192  0101               	movlb	1	; () banked
 29994  011194  23C3               	addwfc	(_MyTCB+10)& (0+255),f,b
 29995  011196  0E00               	movlw	0
 29996  011198  0101               	movlb	1	; () banked
 29997  01119A  23C4               	addwfc	(_MyTCB+11)& (0+255),f,b
 29998                           
 29999                           ; BSR set to: 1
 30000                           ;tcp.c: 4074: MyTCBStub.rxHead += wTemp;
 30001  01119C  0101               	movlb	1	; () banked
 30002  01119E  517A               	movf	HandleTCPSeg@wTemp& (0+255),w,b
 30003  0111A0  0101               	movlb	1	; () banked
 30004  0111A2  27EA               	addwf	(_MyTCBStub+10)& (0+255),f,b
 30005  0111A4  0101               	movlb	1	; () banked
 30006  0111A6  517B               	movf	(HandleTCPSeg@wTemp+1)& (0+255),w,b
 30007  0111A8  0101               	movlb	1	; () banked
 30008  0111AA  23EB               	addwfc	(_MyTCBStub+11)& (0+255),f,b
 30009                           
 30010                           ; BSR set to: 1
 30011                           ;tcp.c: 4075: if(MyTCBStub.rxHead > MyTCBStub.bufferEnd)
 30012  0111AC  0101               	movlb	1	; () banked
 30013  0111AE  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 30014  0111B0  0101               	movlb	1	; () banked
 30015  0111B2  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 30016  0111B4  0101               	movlb	1	; () banked
 30017  0111B6  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 30018  0111B8  0101               	movlb	1	; () banked
 30019  0111BA  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 30020  0111BC  B0D8               	btfsc	status,0,c
 30021  0111BE  D021               	goto	l13628
 30022                           
 30023                           ; BSR set to: 1
 30024                           ;tcp.c: 4076: MyTCBStub.rxHead -= MyTCBStub.bufferEnd - MyTCBStub.bufferRxStart + 1;
 30025  0111C0  0101               	movlb	1	; () banked
 30026  0111C2  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 30027  0111C6  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30028  0111CA  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30029  0111CE  0101               	movlb	1	; () banked
 30030  0111D0  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30031  0111D2  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30032  0111D4  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30033  0111D6  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30034  0111D8  0101               	movlb	1	; () banked
 30035  0111DA  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 30036  0111DC  0101               	movlb	1	; () banked
 30037  0111DE  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30038  0111E0  0101               	movlb	1	; () banked
 30039  0111E2  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 30040  0111E4  0101               	movlb	1	; () banked
 30041  0111E6  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30042  0111E8  0E01               	movlw	1
 30043  0111EA  0101               	movlb	1	; () banked
 30044  0111EC  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30045  0111EE  0E00               	movlw	0
 30046  0111F0  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30047  0111F2  0101               	movlb	1	; () banked
 30048  0111F4  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30049  0111F6  0101               	movlb	1	; () banked
 30050  0111F8  5FEA               	subwf	(_MyTCBStub+10)& (0+255),f,b
 30051  0111FA  0101               	movlb	1	; () banked
 30052  0111FC  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30053  0111FE  0101               	movlb	1	; () banked
 30054  011200  5BEB               	subwfb	(_MyTCBStub+11)& (0+255),f,b
 30055  011202                     l13628:
 30056                           
 30057                           ; BSR set to: 1
 30058                           ;tcp.c: 4077: MyTCB.sHoleSize = -1;
 30059  011202  0101               	movlb	1	; () banked
 30060  011204  69D9               	setf	(_MyTCB+32)& (0+255),b
 30061  011206  0101               	movlb	1	; () banked
 30062  011208  69DA               	setf	(_MyTCB+33)& (0+255),b
 30063  01120A  D22F               	goto	l13670
 30064  01120C                     l13630:
 30065                           
 30066                           ; BSR set to: 1
 30067                           ;tcp.c: 4081: else if((int16_t)wMissingBytes > 0)
 30068  01120C  0101               	movlb	1	; () banked
 30069  01120E  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30070  011210  0A80               	xorlw	128
 30071  011212  0F80               	addlw	-128
 30072  011214  0E01               	movlw	1
 30073  011216  B4D8               	btfsc	status,2,c
 30074  011218  5D7C               	subwf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30075  01121A  A0D8               	btfss	status,0,c
 30076  01121C  D226               	goto	l13670
 30077                           
 30078                           ; BSR set to: 1
 30079                           ;tcp.c: 4082: {
 30080                           ;tcp.c: 4084: if(len + wMissingBytes > wFreeSpace)
 30081  01121E  0101               	movlb	1	; () banked
 30082  011220  C158  F15A         	movff	HandleTCPSeg@len,??_HandleTCPSeg
 30083  011224  0101               	movlb	1	; () banked
 30084  011226  C159  F15B         	movff	HandleTCPSeg@len+1,??_HandleTCPSeg+1
 30085  01122A  0101               	movlb	1	; () banked
 30086  01122C  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30087  01122E  0101               	movlb	1	; () banked
 30088  011230  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30089  011232  0101               	movlb	1	; () banked
 30090  011234  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30091  011236  0101               	movlb	1	; () banked
 30092  011238  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30093  01123A  0101               	movlb	1	; () banked
 30094  01123C  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30095  01123E  0101               	movlb	1	; () banked
 30096  011240  5D73               	subwf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 30097  011242  0101               	movlb	1	; () banked
 30098  011244  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30099  011246  0101               	movlb	1	; () banked
 30100  011248  5974               	subwfb	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 30101  01124A  B0D8               	btfsc	status,0,c
 30102  01124C  D017               	goto	l13636
 30103                           
 30104                           ; BSR set to: 1
 30105                           ;tcp.c: 4085: len = wFreeSpace - wMissingBytes;
 30106  01124E  0101               	movlb	1	; () banked
 30107  011250  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30108  011254  0101               	movlb	1	; () banked
 30109  011256  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30110  01125A  0101               	movlb	1	; () banked
 30111  01125C  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30112  01125E  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30113  011260  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30114  011262  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30115  011264  0101               	movlb	1	; () banked
 30116  011266  5173               	movf	HandleTCPSeg@wFreeSpace& (0+255),w,b
 30117  011268  0101               	movlb	1	; () banked
 30118  01126A  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30119  01126C  0101               	movlb	1	; () banked
 30120  01126E  6F58               	movwf	HandleTCPSeg@len& (0+255),b
 30121  011270  0101               	movlb	1	; () banked
 30122  011272  5174               	movf	(HandleTCPSeg@wFreeSpace+1)& (0+255),w,b
 30123  011274  0101               	movlb	1	; () banked
 30124  011276  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30125  011278  0101               	movlb	1	; () banked
 30126  01127A  6F59               	movwf	(HandleTCPSeg@len+1)& (0+255),b
 30127  01127C                     l13636:
 30128                           
 30129                           ; BSR set to: 1
 30130                           ;tcp.c: 4088: IPSetRxBuffer(h->DataOffset.Val << 2);
 30131  01127C  0101               	movlb	1	; () banked
 30132  01127E  EE20 F00C          	lfsr	2,12
 30133  011282  0101               	movlb	1	; () banked
 30134  011284  5156               	movf	HandleTCPSeg@h& (0+255),w,b
 30135  011286  26D9               	addwf	fsr2l,f,c
 30136  011288  0101               	movlb	1	; () banked
 30137  01128A  5157               	movf	(HandleTCPSeg@h+1)& (0+255),w,b
 30138  01128C  22DA               	addwfc	fsr2h,f,c
 30139  01128E  0101               	movlb	1	; () banked
 30140  011290  38DF               	swapf	223,w,c
 30141  011292  0B0F               	andlw	15
 30142  011294  0101               	movlb	1	; () banked
 30143  011296  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 30144  011298  6B5B               	clrf	(??_HandleTCPSeg+1)& (0+255),b
 30145  01129A  0101               	movlb	1	; () banked
 30146  01129C  90D8               	bcf	status,0,c
 30147  01129E  375A               	rlcf	??_HandleTCPSeg& (0+255),f,b
 30148  0112A0  375B               	rlcf	(??_HandleTCPSeg+1)& (0+255),f,b
 30149  0112A2  0101               	movlb	1	; () banked
 30150  0112A4  90D8               	bcf	status,0,c
 30151  0112A6  375A               	rlcf	??_HandleTCPSeg& (0+255),f,b
 30152  0112A8  375B               	rlcf	(??_HandleTCPSeg+1)& (0+255),f,b
 30153  0112AA  C15A  F106         	movff	??_HandleTCPSeg,IPSetRxBuffer@Offset
 30154  0112AE  C15B  F107         	movff	??_HandleTCPSeg+1,IPSetRxBuffer@Offset+1
 30155  0112B2  EC88  F0DC         	call	_IPSetRxBuffer	;wreg free
 30156                           
 30157                           ;tcp.c: 4091: if(MyTCBStub.rxHead + wMissingBytes + len > MyTCBStub.bufferEnd)
 30158  0112B6  0101               	movlb	1	; () banked
 30159  0112B8  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 30160  0112BC  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30161  0112C0  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30162  0112C4  0101               	movlb	1	; () banked
 30163  0112C6  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30164  0112C8  0101               	movlb	1	; () banked
 30165  0112CA  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30166  0112CC  0101               	movlb	1	; () banked
 30167  0112CE  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30168  0112D0  0101               	movlb	1	; () banked
 30169  0112D2  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30170  0112D4  0101               	movlb	1	; () banked
 30171  0112D6  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30172  0112D8  0101               	movlb	1	; () banked
 30173  0112DA  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30174  0112DC  0101               	movlb	1	; () banked
 30175  0112DE  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30176  0112E0  0101               	movlb	1	; () banked
 30177  0112E2  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30178  0112E4  0101               	movlb	1	; () banked
 30179  0112E6  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30180  0112E8  0101               	movlb	1	; () banked
 30181  0112EA  5DE4               	subwf	(_MyTCBStub+4)& (0+255),w,b
 30182  0112EC  0101               	movlb	1	; () banked
 30183  0112EE  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30184  0112F0  0101               	movlb	1	; () banked
 30185  0112F2  59E5               	subwfb	(_MyTCBStub+5)& (0+255),w,b
 30186  0112F4  B0D8               	btfsc	status,0,c
 30187  0112F6  D0B0               	goto	l13648
 30188                           
 30189                           ; BSR set to: 1
 30190                           ;tcp.c: 4092: {
 30191                           ;tcp.c: 4094: wTemp = MyTCBStub.bufferEnd - MyTCBStub.rxHead + 1 - wMissingBytes;
 30192  0112F8  0101               	movlb	1	; () banked
 30193  0112FA  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 30194  0112FE  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30195  011302  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30196  011306  0101               	movlb	1	; () banked
 30197  011308  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30198  01130A  0101               	movlb	1	; () banked
 30199  01130C  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30200  01130E  0101               	movlb	1	; () banked
 30201  011310  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30202  011312  0101               	movlb	1	; () banked
 30203  011314  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30204  011316  0101               	movlb	1	; () banked
 30205  011318  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30206  01131A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30207  01131C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30208  01131E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30209  011320  0101               	movlb	1	; () banked
 30210  011322  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 30211  011324  0101               	movlb	1	; () banked
 30212  011326  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30213  011328  0101               	movlb	1	; () banked
 30214  01132A  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 30215  01132C  0101               	movlb	1	; () banked
 30216  01132E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30217  011330  0E01               	movlw	1
 30218  011332  0101               	movlb	1	; () banked
 30219  011334  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30220  011336  0101               	movlb	1	; () banked
 30221  011338  6F7A               	movwf	HandleTCPSeg@wTemp& (0+255),b
 30222  01133A  0E00               	movlw	0
 30223  01133C  0101               	movlb	1	; () banked
 30224  01133E  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30225  011340  0101               	movlb	1	; () banked
 30226  011342  6F7B               	movwf	(HandleTCPSeg@wTemp+1)& (0+255),b
 30227                           
 30228                           ; BSR set to: 1
 30229                           ;tcp.c: 4095: if((int16_t)wTemp >= 0)
 30230  011344  0101               	movlb	1	; () banked
 30231  011346  BF7B               	btfsc	(HandleTCPSeg@wTemp+1)& (0+255),7,b
 30232  011348  D044               	goto	l13646
 30233                           
 30234                           ; BSR set to: 1
 30235                           ;tcp.c: 4096: {
 30236                           ;tcp.c: 4097: TCPRAMCopy(MyTCBStub.rxHead + wMissingBytes, MyTCBStub.vMemoryMedium, (uns
      +                          igned short)-1, 0u, wTemp);
 30237  01134A  0101               	movlb	1	; () banked
 30238  01134C  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30239  01134E  0101               	movlb	1	; () banked
 30240  011350  25EA               	addwf	(_MyTCBStub+10)& (0+255),w,b
 30241  011352  0101               	movlb	1	; () banked
 30242  011354  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 30243  011356  0101               	movlb	1	; () banked
 30244  011358  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30245  01135A  0101               	movlb	1	; () banked
 30246  01135C  21EB               	addwfc	(_MyTCBStub+11)& (0+255),w,b
 30247  01135E  0101               	movlb	1	; () banked
 30248  011360  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 30249  011362  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30250  011366  0EFF               	movlw	255
 30251  011368  0101               	movlb	1	; () banked
 30252  01136A  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30253  01136C  0101               	movlb	1	; () banked
 30254  01136E  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30255  011370  0E00               	movlw	0
 30256  011372  0101               	movlb	1	; () banked
 30257  011374  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30258  011376  C17A  F124         	movff	HandleTCPSeg@wTemp,TCPRAMCopy@wLength
 30259  01137A  C17B  F125         	movff	HandleTCPSeg@wTemp+1,TCPRAMCopy@wLength+1
 30260  01137E  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 30261                           
 30262                           ;tcp.c: 4098: TCPRAMCopy(MyTCBStub.bufferRxStart, MyTCBStub.vMemoryMedium, (unsigned sho
      +                          rt)-1, 0u, len - wTemp);
 30263  011382  C1E2  F11E         	movff	_MyTCBStub+2,TCPRAMCopy@ptrDest
 30264  011386  C1E3  F11F         	movff	_MyTCBStub+3,TCPRAMCopy@ptrDest+1
 30265  01138A  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30266  01138E  0EFF               	movlw	255
 30267  011390  0101               	movlb	1	; () banked
 30268  011392  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30269  011394  0101               	movlb	1	; () banked
 30270  011396  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30271  011398  0E00               	movlw	0
 30272  01139A  0101               	movlb	1	; () banked
 30273  01139C  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30274  01139E  0101               	movlb	1	; () banked
 30275  0113A0  C17A  F15A         	movff	HandleTCPSeg@wTemp,??_HandleTCPSeg
 30276  0113A4  0101               	movlb	1	; () banked
 30277  0113A6  C17B  F15B         	movff	HandleTCPSeg@wTemp+1,??_HandleTCPSeg+1
 30278  0113AA  0101               	movlb	1	; () banked
 30279  0113AC  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30280  0113AE  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30281  0113B0  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30282  0113B2  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30283  0113B4  0101               	movlb	1	; () banked
 30284  0113B6  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30285  0113B8  0101               	movlb	1	; () banked
 30286  0113BA  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30287  0113BC  0101               	movlb	1	; () banked
 30288  0113BE  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 30289  0113C0  0101               	movlb	1	; () banked
 30290  0113C2  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30291  0113C4  0101               	movlb	1	; () banked
 30292  0113C6  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30293  0113C8  0101               	movlb	1	; () banked
 30294  0113CA  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 30295  0113CC  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 30296                           
 30297                           ;tcp.c: 4099: }
 30298  0113D0  D05F               	goto	l13650
 30299  0113D2                     l13646:
 30300                           
 30301                           ;tcp.c: 4100: else
 30302                           ;tcp.c: 4101: {
 30303                           ;tcp.c: 4102: TCPRAMCopy(MyTCBStub.rxHead + wMissingBytes - (MyTCBStub.bufferEnd - MyTCB
      +                          Stub.bufferRxStart + 1), MyTCBStub.vMemoryMedium, (unsigned short)-1, 0u, len);
 30304  0113D2  0101               	movlb	1	; () banked
 30305  0113D4  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 30306  0113D8  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30307  0113DC  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30308  0113E0  0101               	movlb	1	; () banked
 30309  0113E2  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30310  0113E4  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30311  0113E6  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30312  0113E8  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30313  0113EA  0101               	movlb	1	; () banked
 30314  0113EC  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 30315  0113EE  0101               	movlb	1	; () banked
 30316  0113F0  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30317  0113F2  0101               	movlb	1	; () banked
 30318  0113F4  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 30319  0113F6  0101               	movlb	1	; () banked
 30320  0113F8  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30321  0113FA  0E01               	movlw	1
 30322  0113FC  0101               	movlb	1	; () banked
 30323  0113FE  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30324  011400  0E00               	movlw	0
 30325  011402  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30326  011404  0101               	movlb	1	; () banked
 30327  011406  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30328  011408  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30329  01140A  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30330  01140C  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30331  01140E  0101               	movlb	1	; () banked
 30332  011410  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 30333  011412  0101               	movlb	1	; () banked
 30334  011414  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30335  011416  0101               	movlb	1	; () banked
 30336  011418  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 30337  01141A  0101               	movlb	1	; () banked
 30338  01141C  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30339  01141E  0101               	movlb	1	; () banked
 30340  011420  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30341  011422  0101               	movlb	1	; () banked
 30342  011424  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30343  011426  0101               	movlb	1	; () banked
 30344  011428  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 30345  01142A  0101               	movlb	1	; () banked
 30346  01142C  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30347  01142E  0101               	movlb	1	; () banked
 30348  011430  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30349  011432  0101               	movlb	1	; () banked
 30350  011434  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 30351  011436  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30352  01143A  0EFF               	movlw	255
 30353  01143C  0101               	movlb	1	; () banked
 30354  01143E  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30355  011440  0101               	movlb	1	; () banked
 30356  011442  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30357  011444  0E00               	movlw	0
 30358  011446  0101               	movlb	1	; () banked
 30359  011448  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30360  01144A  C158  F124         	movff	HandleTCPSeg@len,TCPRAMCopy@wLength
 30361  01144E  C159  F125         	movff	HandleTCPSeg@len+1,TCPRAMCopy@wLength+1
 30362  011452  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 30363  011456  D01C               	goto	l13650
 30364  011458                     l13648:
 30365                           
 30366                           ;tcp.c: 4105: else
 30367                           ;tcp.c: 4106: {
 30368                           ;tcp.c: 4107: TCPRAMCopy(MyTCBStub.rxHead + wMissingBytes, MyTCBStub.vMemoryMedium, (uns
      +                          igned short)-1, 0u, len);
 30369  011458  0101               	movlb	1	; () banked
 30370  01145A  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30371  01145C  0101               	movlb	1	; () banked
 30372  01145E  25EA               	addwf	(_MyTCBStub+10)& (0+255),w,b
 30373  011460  0101               	movlb	1	; () banked
 30374  011462  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 30375  011464  0101               	movlb	1	; () banked
 30376  011466  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30377  011468  0101               	movlb	1	; () banked
 30378  01146A  21EB               	addwfc	(_MyTCBStub+11)& (0+255),w,b
 30379  01146C  0101               	movlb	1	; () banked
 30380  01146E  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 30381  011470  C1FB  F120         	movff	_MyTCBStub+27,TCPRAMCopy@vDestType
 30382  011474  0EFF               	movlw	255
 30383  011476  0101               	movlb	1	; () banked
 30384  011478  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 30385  01147A  0101               	movlb	1	; () banked
 30386  01147C  6921               	setf	TCPRAMCopy@ptrSource& (0+255),b
 30387  01147E  0E00               	movlw	0
 30388  011480  0101               	movlb	1	; () banked
 30389  011482  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 30390  011484  C158  F124         	movff	HandleTCPSeg@len,TCPRAMCopy@wLength
 30391  011488  C159  F125         	movff	HandleTCPSeg@len+1,TCPRAMCopy@wLength+1
 30392  01148C  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 30393  011490                     l13650:
 30394                           
 30395                           ;tcp.c: 4108: }
 30396                           ;tcp.c: 4111: if(MyTCB.sHoleSize == -1)
 30397  011490  0101               	movlb	1	; () banked
 30398  011492  29D9               	incf	(_MyTCB+32)& (0+255),w,b
 30399  011494  B4D8               	btfsc	status,2,c
 30400  011496  29DA               	incf	(_MyTCB+33)& (0+255),w,b
 30401  011498  A4D8               	btfss	status,2,c
 30402  01149A  D009               	goto	l13654
 30403                           
 30404                           ; BSR set to: 1
 30405                           ;tcp.c: 4112: {
 30406                           ;tcp.c: 4113: MyTCB.sHoleSize = wMissingBytes;
 30407  01149C  C17C  F1D9         	movff	HandleTCPSeg@wMissingBytes,_MyTCB+32
 30408  0114A0  C17D  F1DA         	movff	HandleTCPSeg@wMissingBytes+1,_MyTCB+33
 30409                           
 30410                           ;tcp.c: 4114: MyTCB.wFutureDataSize = len;
 30411  0114A4  C158  F1CD         	movff	HandleTCPSeg@len,_MyTCB+20
 30412  0114A8  C159  F1CE         	movff	HandleTCPSeg@len+1,_MyTCB+21
 30413                           
 30414                           ;tcp.c: 4115: }
 30415  0114AC  D0DE               	goto	l13670
 30416  0114AE                     l13654:
 30417                           
 30418                           ; BSR set to: 1
 30419                           ;tcp.c: 4116: else
 30420                           ;tcp.c: 4117: {
 30421                           ;tcp.c: 4120: if(wMissingBytes < (uint16_t)MyTCB.sHoleSize)
 30422  0114AE  0101               	movlb	1	; () banked
 30423  0114B0  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 30424  0114B2  0101               	movlb	1	; () banked
 30425  0114B4  5D7C               	subwf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30426  0114B6  0101               	movlb	1	; () banked
 30427  0114B8  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 30428  0114BA  0101               	movlb	1	; () banked
 30429  0114BC  597D               	subwfb	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30430  0114BE  B0D8               	btfsc	status,0,c
 30431  0114C0  D068               	goto	l13664
 30432                           
 30433                           ; BSR set to: 1
 30434                           ;tcp.c: 4121: {
 30435                           ;tcp.c: 4122: if((wMissingBytes + len > (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDataSiz
      +                          e) || (wMissingBytes + len < (uint16_t)MyTCB.sHoleSize))
 30436  0114C2  0101               	movlb	1	; () banked
 30437  0114C4  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30438  0114C8  0101               	movlb	1	; () banked
 30439  0114CA  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30440  0114CE  0101               	movlb	1	; () banked
 30441  0114D0  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30442  0114D2  0101               	movlb	1	; () banked
 30443  0114D4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30444  0114D6  0101               	movlb	1	; () banked
 30445  0114D8  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30446  0114DA  0101               	movlb	1	; () banked
 30447  0114DC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30448  0114DE  0101               	movlb	1	; () banked
 30449  0114E0  EE21  F0D9         	lfsr	2,_MyTCB+32
 30450  0114E4  CFDE F15C          	movff	postinc2,??_HandleTCPSeg+2
 30451  0114E8  CFDD F15D          	movff	postdec2,??_HandleTCPSeg+3
 30452  0114EC  0101               	movlb	1	; () banked
 30453  0114EE  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30454  0114F0  0101               	movlb	1	; () banked
 30455  0114F2  275C               	addwf	(??_HandleTCPSeg+2)& (0+255),f,b
 30456  0114F4  0101               	movlb	1	; () banked
 30457  0114F6  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30458  0114F8  0101               	movlb	1	; () banked
 30459  0114FA  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 30460  0114FC  0101               	movlb	1	; () banked
 30461  0114FE  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30462  011500  0101               	movlb	1	; () banked
 30463  011502  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 30464  011504  0101               	movlb	1	; () banked
 30465  011506  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30466  011508  0101               	movlb	1	; () banked
 30467  01150A  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 30468  01150C  A0D8               	btfss	status,0,c
 30469  01150E  D018               	goto	l1407
 30470                           
 30471                           ; BSR set to: 1
 30472  011510  0101               	movlb	1	; () banked
 30473  011512  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30474  011516  0101               	movlb	1	; () banked
 30475  011518  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30476  01151C  0101               	movlb	1	; () banked
 30477  01151E  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30478  011520  0101               	movlb	1	; () banked
 30479  011522  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30480  011524  0101               	movlb	1	; () banked
 30481  011526  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30482  011528  0101               	movlb	1	; () banked
 30483  01152A  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30484  01152C  0101               	movlb	1	; () banked
 30485  01152E  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 30486  011530  0101               	movlb	1	; () banked
 30487  011532  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 30488  011534  0101               	movlb	1	; () banked
 30489  011536  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 30490  011538  0101               	movlb	1	; () banked
 30491  01153A  595B               	subwfb	(??_HandleTCPSeg+1)& (0+255),w,b
 30492  01153C  B0D8               	btfsc	status,0,c
 30493  01153E  D005               	goto	l13660
 30494  011540                     l1407:
 30495                           
 30496                           ; BSR set to: 1
 30497                           ;tcp.c: 4123: MyTCB.wFutureDataSize = len;
 30498  011540  C158  F1CD         	movff	HandleTCPSeg@len,_MyTCB+20
 30499  011544  C159  F1CE         	movff	HandleTCPSeg@len+1,_MyTCB+21
 30500  011548  D01F               	goto	l13662
 30501  01154A                     l13660:
 30502                           
 30503                           ; BSR set to: 1
 30504                           ;tcp.c: 4124: else
 30505                           ;tcp.c: 4125: MyTCB.wFutureDataSize = (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDataSize 
      +                          - wMissingBytes;
 30506  01154A  0101               	movlb	1	; () banked
 30507  01154C  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30508  011550  0101               	movlb	1	; () banked
 30509  011552  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30510  011556  0101               	movlb	1	; () banked
 30511  011558  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30512  01155A  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30513  01155C  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30514  01155E  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30515  011560  0101               	movlb	1	; () banked
 30516  011562  51D9               	movf	(_MyTCB+32)& (0+255),w,b
 30517  011564  0101               	movlb	1	; () banked
 30518  011566  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30519  011568  0101               	movlb	1	; () banked
 30520  01156A  51DA               	movf	(_MyTCB+33)& (0+255),w,b
 30521  01156C  0101               	movlb	1	; () banked
 30522  01156E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30523  011570  0101               	movlb	1	; () banked
 30524  011572  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30525  011574  0101               	movlb	1	; () banked
 30526  011576  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30527  011578  0101               	movlb	1	; () banked
 30528  01157A  6FCD               	movwf	(_MyTCB+20)& (0+255),b
 30529  01157C  0101               	movlb	1	; () banked
 30530  01157E  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30531  011580  0101               	movlb	1	; () banked
 30532  011582  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30533  011584  0101               	movlb	1	; () banked
 30534  011586  6FCE               	movwf	(_MyTCB+21)& (0+255),b
 30535  011588                     l13662:
 30536                           
 30537                           ; BSR set to: 1
 30538                           ;tcp.c: 4126: MyTCB.sHoleSize = wMissingBytes;
 30539  011588  C17C  F1D9         	movff	HandleTCPSeg@wMissingBytes,_MyTCB+32
 30540  01158C  C17D  F1DA         	movff	HandleTCPSeg@wMissingBytes+1,_MyTCB+33
 30541                           
 30542                           ;tcp.c: 4127: }
 30543  011590  D06C               	goto	l13670
 30544  011592                     l13664:
 30545                           
 30546                           ; BSR set to: 1
 30547                           ;tcp.c: 4128: else if(wMissingBytes + len > (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDat
      +                          aSize)
 30548  011592  0101               	movlb	1	; () banked
 30549  011594  C17C  F15A         	movff	HandleTCPSeg@wMissingBytes,??_HandleTCPSeg
 30550  011598  0101               	movlb	1	; () banked
 30551  01159A  C17D  F15B         	movff	HandleTCPSeg@wMissingBytes+1,??_HandleTCPSeg+1
 30552  01159E  0101               	movlb	1	; () banked
 30553  0115A0  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30554  0115A2  0101               	movlb	1	; () banked
 30555  0115A4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30556  0115A6  0101               	movlb	1	; () banked
 30557  0115A8  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30558  0115AA  0101               	movlb	1	; () banked
 30559  0115AC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30560  0115AE  0101               	movlb	1	; () banked
 30561  0115B0  EE21  F0D9         	lfsr	2,_MyTCB+32
 30562  0115B4  CFDE F15C          	movff	postinc2,??_HandleTCPSeg+2
 30563  0115B8  CFDD F15D          	movff	postdec2,??_HandleTCPSeg+3
 30564  0115BC  0101               	movlb	1	; () banked
 30565  0115BE  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30566  0115C0  0101               	movlb	1	; () banked
 30567  0115C2  275C               	addwf	(??_HandleTCPSeg+2)& (0+255),f,b
 30568  0115C4  0101               	movlb	1	; () banked
 30569  0115C6  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30570  0115C8  0101               	movlb	1	; () banked
 30571  0115CA  235D               	addwfc	(??_HandleTCPSeg+3)& (0+255),f,b
 30572  0115CC  0101               	movlb	1	; () banked
 30573  0115CE  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30574  0115D0  0101               	movlb	1	; () banked
 30575  0115D2  5D5C               	subwf	(??_HandleTCPSeg+2)& (0+255),w,b
 30576  0115D4  0101               	movlb	1	; () banked
 30577  0115D6  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30578  0115D8  0101               	movlb	1	; () banked
 30579  0115DA  595D               	subwfb	(??_HandleTCPSeg+3)& (0+255),w,b
 30580  0115DC  B0D8               	btfsc	status,0,c
 30581  0115DE  D045               	goto	l13670
 30582                           
 30583                           ; BSR set to: 1
 30584                           ;tcp.c: 4129: {
 30585                           ;tcp.c: 4132: if(wMissingBytes <= (uint16_t)MyTCB.sHoleSize + MyTCB.wFutureDataSize)
 30586  0115E0  0101               	movlb	1	; () banked
 30587  0115E2  EE21  F0D9         	lfsr	2,_MyTCB+32
 30588  0115E6  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30589  0115EA  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30590  0115EE  0101               	movlb	1	; () banked
 30591  0115F0  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30592  0115F2  0101               	movlb	1	; () banked
 30593  0115F4  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30594  0115F6  0101               	movlb	1	; () banked
 30595  0115F8  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30596  0115FA  0101               	movlb	1	; () banked
 30597  0115FC  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30598  0115FE  0101               	movlb	1	; () banked
 30599  011600  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30600  011602  0101               	movlb	1	; () banked
 30601  011604  5D5A               	subwf	??_HandleTCPSeg& (0+255),w,b
 30602  011606  0101               	movlb	1	; () banked
 30603  011608  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30604  01160A  0101               	movlb	1	; () banked
 30605  01160C  595B               	subwfb	(??_HandleTCPSeg+1)& (0+255),w,b
 30606  01160E  A0D8               	btfss	status,0,c
 30607  011610  D02C               	goto	l13670
 30608                           
 30609                           ; BSR set to: 1
 30610                           ;tcp.c: 4133: MyTCB.wFutureDataSize += wMissingBytes + len - (uint16_t)MyTCB.sHoleSize -
      +                           MyTCB.wFutureDataSize;
 30611  011612  0101               	movlb	1	; () banked
 30612  011614  EE21  F0D9         	lfsr	2,_MyTCB+32
 30613  011618  CFDE F15A          	movff	postinc2,??_HandleTCPSeg
 30614  01161C  CFDD F15B          	movff	postdec2,??_HandleTCPSeg+1
 30615  011620  0101               	movlb	1	; () banked
 30616  011622  51CD               	movf	(_MyTCB+20)& (0+255),w,b
 30617  011624  0101               	movlb	1	; () banked
 30618  011626  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30619  011628  0101               	movlb	1	; () banked
 30620  01162A  51CE               	movf	(_MyTCB+21)& (0+255),w,b
 30621  01162C  0101               	movlb	1	; () banked
 30622  01162E  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30623  011630  0101               	movlb	1	; () banked
 30624  011632  1F5A               	comf	??_HandleTCPSeg& (0+255),f,b
 30625  011634  1F5B               	comf	(??_HandleTCPSeg+1)& (0+255),f,b
 30626  011636  4B5A               	infsnz	??_HandleTCPSeg& (0+255),f,b
 30627  011638  2B5B               	incf	(??_HandleTCPSeg+1)& (0+255),f,b
 30628  01163A  0101               	movlb	1	; () banked
 30629  01163C  517C               	movf	HandleTCPSeg@wMissingBytes& (0+255),w,b
 30630  01163E  0101               	movlb	1	; () banked
 30631  011640  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30632  011642  0101               	movlb	1	; () banked
 30633  011644  517D               	movf	(HandleTCPSeg@wMissingBytes+1)& (0+255),w,b
 30634  011646  0101               	movlb	1	; () banked
 30635  011648  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30636  01164A  0101               	movlb	1	; () banked
 30637  01164C  5158               	movf	HandleTCPSeg@len& (0+255),w,b
 30638  01164E  0101               	movlb	1	; () banked
 30639  011650  275A               	addwf	??_HandleTCPSeg& (0+255),f,b
 30640  011652  0101               	movlb	1	; () banked
 30641  011654  5159               	movf	(HandleTCPSeg@len+1)& (0+255),w,b
 30642  011656  0101               	movlb	1	; () banked
 30643  011658  235B               	addwfc	(??_HandleTCPSeg+1)& (0+255),f,b
 30644  01165A  0101               	movlb	1	; () banked
 30645  01165C  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30646  01165E  0101               	movlb	1	; () banked
 30647  011660  27CD               	addwf	(_MyTCB+20)& (0+255),f,b
 30648  011662  0101               	movlb	1	; () banked
 30649  011664  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30650  011666  0101               	movlb	1	; () banked
 30651  011668  23CE               	addwfc	(_MyTCB+21)& (0+255),f,b
 30652  01166A                     l13670:
 30653                           
 30654                           ; BSR set to: 1
 30655                           ;tcp.c: 4134: }
 30656                           ;tcp.c: 4136: }
 30657                           ;tcp.c: 4137: }
 30658                           ;tcp.c: 4138: }
 30659                           ;tcp.c: 4145: if(wSegmentLength)
 30660  01166A  0101               	movlb	1	; () banked
 30661  01166C  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 30662  01166E  1169               	iorwf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 30663  011670  B4D8               	btfsc	status,2,c
 30664  011672  D030               	goto	l13684
 30665                           
 30666                           ; BSR set to: 1
 30667                           ;tcp.c: 4146: {
 30668                           ;tcp.c: 4157: if(MyTCBStub.smState != TCP_ESTABLISHED)
 30669  011674  0101               	movlb	1	; () banked
 30670  011676  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 30671  011678  0A07               	xorlw	7
 30672  01167A  B4D8               	btfsc	status,2,c
 30673  01167C  D004               	goto	l1413
 30674                           
 30675                           ; BSR set to: 1
 30676                           ;tcp.c: 4158: MyTCBStub.rxTail = MyTCBStub.rxHead;
 30677  01167E  C1EA  F1EC         	movff	_MyTCBStub+10,_MyTCBStub+12
 30678  011682  C1EB  F1ED         	movff	_MyTCBStub+11,_MyTCBStub+13
 30679  011686                     l1413:
 30680                           
 30681                           ; BSR set to: 1
 30682                           ;tcp.c: 4160: if(MyTCBStub.Flags.bOneSegmentReceived)
 30683  011686  0101               	movlb	1	; () banked
 30684  011688  AFF7               	btfss	(_MyTCBStub+23)& (0+255),7,b
 30685  01168A  D009               	goto	l1414
 30686                           
 30687                           ; BSR set to: 1
 30688                           ;tcp.c: 4161: {
 30689                           ;tcp.c: 4162: SendTCP((0x10), 0x01);
 30690  01168C  0E01               	movlw	1
 30691  01168E  0101               	movlb	1	; () banked
 30692  011690  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30693  011692  0E10               	movlw	16
 30694  011694  ECC1  F096         	call	_SendTCP
 30695                           
 30696                           ;tcp.c: 4163: SyncTCB();
 30697  011698  EC10  F0CB         	call	_SyncTCB	;wreg free
 30698                           
 30699                           ;tcp.c: 4165: }
 30700  01169C  D01B               	goto	l13684
 30701  01169E                     l1414:
 30702                           
 30703                           ; BSR set to: 1
 30704                           ;tcp.c: 4166: else
 30705                           ;tcp.c: 4167: {
 30706                           ;tcp.c: 4168: MyTCBStub.Flags.bOneSegmentReceived = 1;
 30707  01169E  0101               	movlb	1	; () banked
 30708  0116A0  8FF7               	bsf	(_MyTCBStub+23)& (0+255),7,b
 30709                           
 30710                           ;tcp.c: 4173: if(!MyTCBStub.Flags.bDelayedACKTimerEnabled)
 30711  0116A2  0101               	movlb	1	; () banked
 30712  0116A4  BDF7               	btfsc	(_MyTCBStub+23)& (0+255),6,b
 30713  0116A6  D016               	goto	l13684
 30714                           
 30715                           ; BSR set to: 1
 30716                           ;tcp.c: 4174: {
 30717                           ;tcp.c: 4175: MyTCBStub.Flags.bDelayedACKTimerEnabled = 1;
 30718  0116A8  0101               	movlb	1	; () banked
 30719  0116AA  8DF7               	bsf	(_MyTCBStub+23)& (0+255),6,b
 30720                           
 30721                           ; BSR set to: 1
 30722                           ;tcp.c: 4176: MyTCBStub.OverlappedTimers.delayedACKTime = (uint16_t)TickGetDiv256() + (u
      +                          int16_t)((((uint32_t)(((((40000000ul)/4)+128ull)/256ull))/10))>>8);
 30723  0116AC  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 30724  0116B0  C100  F15A         	movff	?_TickGetDiv256,??_HandleTCPSeg
 30725  0116B4  C101  F15B         	movff	?_TickGetDiv256+1,??_HandleTCPSeg+1
 30726  0116B8  C102  F15C         	movff	?_TickGetDiv256+2,??_HandleTCPSeg+2
 30727  0116BC  C103  F15D         	movff	?_TickGetDiv256+3,??_HandleTCPSeg+3
 30728  0116C0  0E0F               	movlw	15
 30729  0116C2  0101               	movlb	1	; () banked
 30730  0116C4  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30731  0116C6  0101               	movlb	1	; () banked
 30732  0116C8  6FF4               	movwf	(_MyTCBStub+20)& (0+255),b
 30733  0116CA  0E00               	movlw	0
 30734  0116CC  0101               	movlb	1	; () banked
 30735  0116CE  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30736  0116D0  0101               	movlb	1	; () banked
 30737  0116D2  6FF5               	movwf	(_MyTCBStub+21)& (0+255),b
 30738  0116D4                     l13684:
 30739                           
 30740                           ;tcp.c: 4177: }
 30741                           ;tcp.c: 4178: }
 30742                           ;tcp.c: 4179: }
 30743                           ;tcp.c: 4184: if(localHeaderFlags & (0x01))
 30744  0116D4  0101               	movlb	1	; () banked
 30745  0116D6  A179               	btfss	HandleTCPSeg@localHeaderFlags& (0+255),0,b
 30746  0116D8  0012               	return	
 30747                           
 30748                           ; BSR set to: 1
 30749                           ;tcp.c: 4185: {
 30750                           ;tcp.c: 4189: if(MyTCB.RemoteSEQ + 1 == localSeqNumber + (uint32_t)wSegmentLength)
 30751  0116DA  0101               	movlb	1	; () banked
 30752  0116DC  5169               	movf	HandleTCPSeg@wSegmentLength& (0+255),w,b
 30753  0116DE  0101               	movlb	1	; () banked
 30754  0116E0  2565               	addwf	HandleTCPSeg@localSeqNumber& (0+255),w,b
 30755  0116E2  0101               	movlb	1	; () banked
 30756  0116E4  6F5A               	movwf	??_HandleTCPSeg& (0+255),b
 30757  0116E6  0101               	movlb	1	; () banked
 30758  0116E8  516A               	movf	(HandleTCPSeg@wSegmentLength+1)& (0+255),w,b
 30759  0116EA  0101               	movlb	1	; () banked
 30760  0116EC  2166               	addwfc	(HandleTCPSeg@localSeqNumber+1)& (0+255),w,b
 30761  0116EE  0101               	movlb	1	; () banked
 30762  0116F0  6F5B               	movwf	(??_HandleTCPSeg+1)& (0+255),b
 30763  0116F2  0E00               	movlw	0
 30764  0116F4  0101               	movlb	1	; () banked
 30765  0116F6  2167               	addwfc	(HandleTCPSeg@localSeqNumber+2)& (0+255),w,b
 30766  0116F8  0101               	movlb	1	; () banked
 30767  0116FA  6F5C               	movwf	(??_HandleTCPSeg+2)& (0+255),b
 30768  0116FC  0E00               	movlw	0
 30769  0116FE  0101               	movlb	1	; () banked
 30770  011700  2168               	addwfc	(HandleTCPSeg@localSeqNumber+3)& (0+255),w,b
 30771  011702  0101               	movlb	1	; () banked
 30772  011704  6F5D               	movwf	(??_HandleTCPSeg+3)& (0+255),b
 30773  011706  0E01               	movlw	1
 30774  011708  0101               	movlb	1	; () banked
 30775  01170A  25C1               	addwf	(_MyTCB+8)& (0+255),w,b
 30776  01170C  0101               	movlb	1	; () banked
 30777  01170E  6F5E               	movwf	(??_HandleTCPSeg+4)& (0+255),b
 30778  011710  0E00               	movlw	0
 30779  011712  0101               	movlb	1	; () banked
 30780  011714  21C2               	addwfc	(_MyTCB+9)& (0+255),w,b
 30781  011716  0101               	movlb	1	; () banked
 30782  011718  6F5F               	movwf	(??_HandleTCPSeg+5)& (0+255),b
 30783  01171A  0E00               	movlw	0
 30784  01171C  0101               	movlb	1	; () banked
 30785  01171E  21C3               	addwfc	(_MyTCB+10)& (0+255),w,b
 30786  011720  0101               	movlb	1	; () banked
 30787  011722  6F60               	movwf	(??_HandleTCPSeg+6)& (0+255),b
 30788  011724  0E00               	movlw	0
 30789  011726  0101               	movlb	1	; () banked
 30790  011728  21C4               	addwfc	(_MyTCB+11)& (0+255),w,b
 30791  01172A  0101               	movlb	1	; () banked
 30792  01172C  6F61               	movwf	(??_HandleTCPSeg+7)& (0+255),b
 30793  01172E  0101               	movlb	1	; () banked
 30794  011730  515D               	movf	(??_HandleTCPSeg+3)& (0+255),w,b
 30795  011732  0101               	movlb	1	; () banked
 30796  011734  1961               	xorwf	(??_HandleTCPSeg+7)& (0+255),w,b
 30797  011736  E10E               	bnz	u15515
 30798  011738  0101               	movlb	1	; () banked
 30799  01173A  515C               	movf	(??_HandleTCPSeg+2)& (0+255),w,b
 30800  01173C  0101               	movlb	1	; () banked
 30801  01173E  1960               	xorwf	(??_HandleTCPSeg+6)& (0+255),w,b
 30802  011740  E109               	bnz	u15515
 30803  011742  0101               	movlb	1	; () banked
 30804  011744  515B               	movf	(??_HandleTCPSeg+1)& (0+255),w,b
 30805  011746  0101               	movlb	1	; () banked
 30806  011748  195F               	xorwf	(??_HandleTCPSeg+5)& (0+255),w,b
 30807  01174A  E104               	bnz	u15515
 30808  01174C  0101               	movlb	1	; () banked
 30809  01174E  515A               	movf	??_HandleTCPSeg& (0+255),w,b
 30810  011750  0101               	movlb	1	; () banked
 30811  011752  195E               	xorwf	(??_HandleTCPSeg+4)& (0+255),w,b
 30812  011754                     u15515:
 30813  011754  A4D8               	btfss	status,2,c
 30814  011756  0012               	return	
 30815                           
 30816                           ; BSR set to: 1
 30817                           ;tcp.c: 4190: {
 30818                           ;tcp.c: 4192: MyTCB.RemoteSEQ++;
 30819  011758  0E01               	movlw	1
 30820  01175A  0101               	movlb	1	; () banked
 30821  01175C  27C1               	addwf	(_MyTCB+8)& (0+255),f,b
 30822  01175E  0E00               	movlw	0
 30823  011760  0101               	movlb	1	; () banked
 30824  011762  23C2               	addwfc	(_MyTCB+9)& (0+255),f,b
 30825  011764  0101               	movlb	1	; () banked
 30826  011766  23C3               	addwfc	(_MyTCB+10)& (0+255),f,b
 30827  011768  0101               	movlb	1	; () banked
 30828  01176A  23C4               	addwfc	(_MyTCB+11)& (0+255),f,b
 30829                           
 30830                           ;tcp.c: 4194: switch(MyTCBStub.smState)
 30831  01176C  D04D               	goto	l13720
 30832  01176E                     l13690:
 30833                           
 30834                           ; BSR set to: 1
 30835                           ;tcp.c: 4202: MyTCBStub.smState = TCP_LAST_ACK;
 30836  01176E  0E0C               	movlw	12
 30837  011770  0101               	movlb	1	; () banked
 30838  011772  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 30839                           
 30840                           ; BSR set to: 1
 30841                           ;tcp.c: 4203: SendTCP((0x01) | (0x10), 0x01);
 30842  011774  0E01               	movlw	1
 30843  011776  0101               	movlb	1	; () banked
 30844  011778  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30845  01177A  0E11               	movlw	17
 30846  01177C  ECC1  F096         	call	_SendTCP
 30847  011780  0012               	return	
 30848  011782                     l13696:
 30849                           
 30850                           ;tcp.c: 4208: MyTCBStub.smState = TCP_CLOSE_WAIT;
 30851  011782  0E0B               	movlw	11
 30852  011784  0101               	movlb	1	; () banked
 30853  011786  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 30854                           
 30855                           ; BSR set to: 1
 30856                           ;tcp.c: 4215: MyTCBStub.OverlappedTimers.closeWaitTime = (uint16_t)TickGetDiv256() + (ui
      +                          nt16_t)((((uint32_t)(((((40000000ul)/4)+128ull)/256ull))/5))>>8);
 30857  011788  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 30858  01178C  C100  F15A         	movff	?_TickGetDiv256,??_HandleTCPSeg
 30859  011790  C101  F15B         	movff	?_TickGetDiv256+1,??_HandleTCPSeg+1
 30860  011794  C102  F15C         	movff	?_TickGetDiv256+2,??_HandleTCPSeg+2
 30861  011798  C103  F15D         	movff	?_TickGetDiv256+3,??_HandleTCPSeg+3
 30862  01179C  0E1E               	movlw	30
 30863  01179E  0101               	movlb	1	; () banked
 30864  0117A0  255A               	addwf	??_HandleTCPSeg& (0+255),w,b
 30865  0117A2  0101               	movlb	1	; () banked
 30866  0117A4  6FF4               	movwf	(_MyTCBStub+20)& (0+255),b
 30867  0117A6  0E00               	movlw	0
 30868  0117A8  0101               	movlb	1	; () banked
 30869  0117AA  215B               	addwfc	(??_HandleTCPSeg+1)& (0+255),w,b
 30870  0117AC  0101               	movlb	1	; () banked
 30871  0117AE  6FF5               	movwf	(_MyTCBStub+21)& (0+255),b
 30872                           
 30873                           ;tcp.c: 4216: break;
 30874  0117B0  D039               	goto	l13722
 30875  0117B2                     l13700:
 30876                           
 30877                           ; BSR set to: 1
 30878                           ;tcp.c: 4219: if(MyTCB.MySEQ == localAckNumber)
 30879  0117B2  0101               	movlb	1	; () banked
 30880  0117B4  5178               	movf	(HandleTCPSeg@localAckNumber+3)& (0+255),w,b
 30881  0117B6  0101               	movlb	1	; () banked
 30882  0117B8  19C0               	xorwf	(_MyTCB+7)& (0+255),w,b
 30883  0117BA  E10E               	bnz	u15525
 30884  0117BC  0101               	movlb	1	; () banked
 30885  0117BE  5177               	movf	(HandleTCPSeg@localAckNumber+2)& (0+255),w,b
 30886  0117C0  0101               	movlb	1	; () banked
 30887  0117C2  19BF               	xorwf	(_MyTCB+6)& (0+255),w,b
 30888  0117C4  E109               	bnz	u15525
 30889  0117C6  0101               	movlb	1	; () banked
 30890  0117C8  5176               	movf	(HandleTCPSeg@localAckNumber+1)& (0+255),w,b
 30891  0117CA  0101               	movlb	1	; () banked
 30892  0117CC  19BE               	xorwf	(_MyTCB+5)& (0+255),w,b
 30893  0117CE  E104               	bnz	u15525
 30894  0117D0  0101               	movlb	1	; () banked
 30895  0117D2  5175               	movf	HandleTCPSeg@localAckNumber& (0+255),w,b
 30896  0117D4  0101               	movlb	1	; () banked
 30897  0117D6  19BD               	xorwf	(_MyTCB+4)& (0+255),w,b
 30898  0117D8                     u15525:
 30899  0117D8  A4D8               	btfss	status,2,c
 30900  0117DA  D009               	goto	l13710
 30901                           
 30902                           ; BSR set to: 1
 30903                           ;tcp.c: 4220: {
 30904                           ;tcp.c: 4230: SendTCP((0x10), 0);
 30905  0117DC  0E00               	movlw	0
 30906  0117DE  0101               	movlb	1	; () banked
 30907  0117E0  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30908  0117E2  0E10               	movlw	16
 30909  0117E4  ECC1  F096         	call	_SendTCP
 30910                           
 30911                           ;tcp.c: 4231: CloseSocket();
 30912  0117E8  ECF0  F0CD         	call	_CloseSocket	;wreg free
 30913  0117EC  0012               	return	
 30914  0117EE                     l13710:
 30915                           
 30916                           ;tcp.c: 4234: else
 30917                           ;tcp.c: 4235: {
 30918                           ;tcp.c: 4236: MyTCBStub.smState = TCP_CLOSING;
 30919  0117EE  0E0A               	movlw	10
 30920  0117F0  0101               	movlb	1	; () banked
 30921  0117F2  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 30922  0117F4  D017               	goto	l13722
 30923  0117F6                     l13712:
 30924                           
 30925                           ; BSR set to: 1
 30926                           ;tcp.c: 4250: SendTCP((0x10), 0);
 30927  0117F6  0E00               	movlw	0
 30928  0117F8  0101               	movlb	1	; () banked
 30929  0117FA  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30930  0117FC  0E10               	movlw	16
 30931  0117FE  ECC1  F096         	call	_SendTCP
 30932                           
 30933                           ;tcp.c: 4251: CloseSocket();
 30934  011802  ECF0  F0CD         	call	_CloseSocket	;wreg free
 30935  011806  0012               	return	
 30936  011808                     l13720:
 30937  011808  0101               	movlb	1	; () banked
 30938  01180A  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 30939                           
 30940                           ; Switch size 1, requested type "space"
 30941                           ; Number of cases is 4, Range of values is 6 to 9
 30942                           ; switch strategies available:
 30943                           ; Name         Instructions Cycles
 30944                           ; simple_byte           13     7 (average)
 30945                           ;	Chosen strategy is simple_byte
 30946  01180C  0A06               	xorlw	6	; case 6
 30947  01180E  B4D8               	btfsc	status,2,c
 30948  011810  D7AE               	goto	l13690
 30949  011812  0A01               	xorlw	1	; case 7
 30950  011814  B4D8               	btfsc	status,2,c
 30951  011816  D7B5               	goto	l13696
 30952  011818  0A0F               	xorlw	15	; case 8
 30953  01181A  B4D8               	btfsc	status,2,c
 30954  01181C  D7CA               	goto	l13700
 30955  01181E  0A01               	xorlw	1	; case 9
 30956  011820  B4D8               	btfsc	status,2,c
 30957  011822  D7E9               	goto	l13712
 30958  011824                     l13722:
 30959                           
 30960                           ;tcp.c: 4259: SendTCP((0x10), 0x01);
 30961  011824  0E01               	movlw	1
 30962  011826  0101               	movlb	1	; () banked
 30963  011828  6F28               	movwf	SendTCP@vSendFlags& (0+255),b
 30964  01182A  0E10               	movlw	16
 30965  01182C  ECC1  F096         	call	_SendTCP
 30966  011830  0012               	return	
 30967  011832                     __end_of_HandleTCPSeg:
 30968                           	opt stack 0
 30969                           tblptru	equ	0xFF8
 30970                           tblptrh	equ	0xFF7
 30971                           tblptrl	equ	0xFF6
 30972                           tablat	equ	0xFF5
 30973                           prodh	equ	0xFF4
 30974                           prodl	equ	0xFF3
 30975                           intcon	equ	0xFF2
 30976                           indf0	equ	0xFEF
 30977                           postinc0	equ	0xFEE
 30978                           fsr0h	equ	0xFEA
 30979                           fsr0l	equ	0xFE9
 30980                           wreg	equ	0xFE8
 30981                           indf1	equ	0xFE7
 30982                           postinc1	equ	0xFE6
 30983                           postdec1	equ	0xFE5
 30984                           fsr1h	equ	0xFE2
 30985                           fsr1l	equ	0xFE1
 30986                           indf2	equ	0xFDF
 30987                           postinc2	equ	0xFDE
 30988                           postdec2	equ	0xFDD
 30989                           fsr2h	equ	0xFDA
 30990                           fsr2l	equ	0xFD9
 30991                           status	equ	0xFD8
 30992                           
 30993 ;; *************** function _SendTCP *****************
 30994 ;; Defined at:
 30995 ;;		line 2898 in file "../tcpip/tcp.c"
 30996 ;; Parameters:    Size  Location     Type
 30997 ;;  vTCPFlags       1    wreg     unsigned char 
 30998 ;;  vSendFlags      1   40[BANK1 ] unsigned char 
 30999 ;; Auto vars:     Size  Location     Type
 31000 ;;  vTCPFlags       1   51[BANK1 ] unsigned char 
 31001 ;;  header         20   66[BANK1 ] struct .
 31002 ;;  pseudoHeader   12   54[BANK1 ] struct _PSEUDO_HEADER
 31003 ;;  options         4   45[BANK1 ] struct .
 31004 ;;  len             2   52[BANK1 ] unsigned int 
 31005 ;;  wVal            2   49[BANK1 ] struct .
 31006 ;; Return value:  Size  Location     Type
 31007 ;;		None               void
 31008 ;; Registers used:
 31009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31010 ;; Tracked objects:
 31011 ;;		On entry : 0/0
 31012 ;;		On exit  : 0/0
 31013 ;;		Unchanged: 0/0
 31014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 31015 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31016 ;;      Locals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31017 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31018 ;;      Totals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31019 ;;Total ram usage:       46 bytes
 31020 ;; Hardware stack levels used:    1
 31021 ;; Hardware stack levels required when called:   14
 31022 ;; This function calls:
 31023 ;;		_CalcIPBufferChecksum
 31024 ;;		_CalcIPChecksum
 31025 ;;		_IPPutHeader
 31026 ;;		_MACFlush
 31027 ;;		_MACGetFreeRxSize
 31028 ;;		_MACIsTxReady
 31029 ;;		_MACPutArray
 31030 ;;		_MACSetReadPtr
 31031 ;;		_MACSetWritePtr
 31032 ;;		_SwapTCPHeader
 31033 ;;		_SyncTCB
 31034 ;;		_TCPRAMCopy
 31035 ;;		_TickGet
 31036 ;;		_swaps
 31037 ;; This function is called by:
 31038 ;;		_TCPOpen
 31039 ;;		_TCPDisconnect
 31040 ;;		_TCPFlush
 31041 ;;		_TCPTick
 31042 ;;		_HandleTCPSeg
 31043 ;;		_TCPDiscard
 31044 ;;		_TCPAdjustFIFOSize
 31045 ;; This function uses a non-reentrant model
 31046 ;;
 31047                           
 31048                           	psect	text54
 31049  012D82                     __ptext54:
 31050                           	opt stack 0
 31051  012D82                     _SendTCP:
 31052                           	opt stack 13
 31053                           
 31054                           ;incstack = 0
 31055                           ;SendTCP@vTCPFlags stored from wreg
 31056  012D82  0101               	movlb	1	; () banked
 31057  012D84  6F33               	movwf	SendTCP@vTCPFlags& (0+255),b
 31058                           
 31059                           ; BSR set to: 1
 31060                           ;tcp.c: 2900: TCPIP_UINT16_VAL wVal;
 31061                           ;tcp.c: 2901: TCP_HEADER header;
 31062                           ;tcp.c: 2902: TCP_OPTIONS options;
 31063                           ;tcp.c: 2903: PSEUDO_HEADER pseudoHeader;
 31064                           ;tcp.c: 2904: uint16_t len;
 31065                           ;tcp.c: 2906: SyncTCB();
 31066  012D86  EC10  F0CB         	call	_SyncTCB	;wreg free
 31067                           
 31068                           ;tcp.c: 2909: if(vTCPFlags & (0x01))
 31069  012D8A  0101               	movlb	1	; () banked
 31070  012D8C  A133               	btfss	SendTCP@vTCPFlags& (0+255),0,b
 31071  012D8E  D004               	goto	l12086
 31072                           
 31073                           ; BSR set to: 1
 31074                           ;tcp.c: 2910: {
 31075                           ;tcp.c: 2911: MyTCBStub.Flags.bTXFIN = 1;
 31076  012D90  0101               	movlb	1	; () banked
 31077  012D92  87F8               	bsf	(_MyTCBStub+24)& (0+255),3,b
 31078                           
 31079                           ; BSR set to: 1
 31080                           ;tcp.c: 2912: vTCPFlags &= ~(0x01);
 31081  012D94  0101               	movlb	1	; () banked
 31082  012D96  9133               	bcf	SendTCP@vTCPFlags& (0+255),0,b
 31083  012D98                     l12086:
 31084                           
 31085                           ; BSR set to: 1
 31086                           ;tcp.c: 2913: }
 31087                           ;tcp.c: 2917: MyTCBStub.Flags.bTimer2Enabled = 0;
 31088  012D98  0101               	movlb	1	; () banked
 31089  012D9A  9BF7               	bcf	(_MyTCBStub+23)& (0+255),5,b
 31090                           
 31091                           ; BSR set to: 1
 31092                           ;tcp.c: 2918: MyTCBStub.Flags.bDelayedACKTimerEnabled = 0;
 31093  012D9C  0101               	movlb	1	; () banked
 31094  012D9E  9DF7               	bcf	(_MyTCBStub+23)& (0+255),6,b
 31095                           
 31096                           ; BSR set to: 1
 31097                           ;tcp.c: 2919: MyTCBStub.Flags.bOneSegmentReceived = 0;
 31098  012DA0  0101               	movlb	1	; () banked
 31099  012DA2  9FF7               	bcf	(_MyTCBStub+23)& (0+255),7,b
 31100                           
 31101                           ; BSR set to: 1
 31102                           ;tcp.c: 2920: MyTCBStub.Flags.bTXASAP = 0;
 31103  012DA4  0101               	movlb	1	; () banked
 31104  012DA6  93F8               	bcf	(_MyTCBStub+24)& (0+255),1,b
 31105                           
 31106                           ; BSR set to: 1
 31107                           ;tcp.c: 2921: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 0;
 31108  012DA8  0101               	movlb	1	; () banked
 31109  012DAA  95F8               	bcf	(_MyTCBStub+24)& (0+255),2,b
 31110                           
 31111                           ; BSR set to: 1
 31112                           ;tcp.c: 2922: MyTCBStub.Flags.bHalfFullFlush = 0;
 31113  012DAC  0101               	movlb	1	; () banked
 31114  012DAE  91F8               	bcf	(_MyTCBStub+24)& (0+255),0,b
 31115  012DB0                     l12098:
 31116  012DB0  ECBE  F0D7         	call	_MACIsTxReady	;wreg free
 31117  012DB4  0900               	iorlw	0
 31118  012DB6  B4D8               	btfsc	status,2,c
 31119  012DB8  D7FB               	goto	l12098
 31120                           
 31121                           ;tcp.c: 2928: if(vTCPFlags & ((0x02) | (0x04)))
 31122  012DBA  C133  F129         	movff	SendTCP@vTCPFlags,??_SendTCP
 31123  012DBE  0E06               	movlw	6
 31124  012DC0  0101               	movlb	1	; () banked
 31125  012DC2  1729               	andwf	??_SendTCP& (0+255),f,b
 31126  012DC4  B4D8               	btfsc	status,2,c
 31127  012DC6  D007               	goto	l12104
 31128                           
 31129                           ; BSR set to: 1
 31130                           ;tcp.c: 2929: {
 31131                           ;tcp.c: 2931: len = 0;
 31132  012DC8  0E00               	movlw	0
 31133  012DCA  0101               	movlb	1	; () banked
 31134  012DCC  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31135  012DCE  0E00               	movlw	0
 31136  012DD0  0101               	movlb	1	; () banked
 31137  012DD2  6F34               	movwf	SendTCP@len& (0+255),b
 31138                           
 31139                           ;tcp.c: 2932: }
 31140  012DD4  D18C               	goto	l12162
 31141  012DD6                     l12104:
 31142                           
 31143                           ; BSR set to: 1
 31144                           ;tcp.c: 2933: else
 31145                           ;tcp.c: 2934: {
 31146                           ;tcp.c: 2936: if(MyTCBStub.txHead == MyTCB.txUnackedTail)
 31147  012DD6  0101               	movlb	1	; () banked
 31148  012DD8  EE21  F0C5         	lfsr	2,_MyTCB+12
 31149  012DDC  0101               	movlb	1	; () banked
 31150  012DDE  EE11  F0E6         	lfsr	1,_MyTCBStub+6
 31151  012DE2  52E6               	movf	postinc1,f,c
 31152  012DE4  52DE               	movf	postinc2,f,c
 31153  012DE6  50DD               	movf	postdec2,w,c
 31154  012DE8  18E5               	xorwf	postdec1,w,c
 31155  012DEA  CFDF FFE8          	movff	indf2,wreg
 31156  012DEE  B4D8               	btfsc	status,2,c
 31157  012DF0  18E7               	xorwf	indf1,w,c
 31158  012DF2  A4D8               	btfss	status,2,c
 31159  012DF4  D007               	goto	l12108
 31160                           
 31161                           ; BSR set to: 1
 31162                           ;tcp.c: 2937: {
 31163                           ;tcp.c: 2939: len = 0;
 31164  012DF6  0E00               	movlw	0
 31165  012DF8  0101               	movlb	1	; () banked
 31166  012DFA  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31167  012DFC  0E00               	movlw	0
 31168  012DFE  0101               	movlb	1	; () banked
 31169  012E00  6F34               	movwf	SendTCP@len& (0+255),b
 31170                           
 31171                           ;tcp.c: 2940: }
 31172  012E02  D152               	goto	l12154
 31173  012E04                     l12108:
 31174                           
 31175                           ; BSR set to: 1
 31176                           ;tcp.c: 2941: else if(MyTCBStub.txHead > MyTCB.txUnackedTail)
 31177  012E04  0101               	movlb	1	; () banked
 31178  012E06  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 31179  012E08  0101               	movlb	1	; () banked
 31180  012E0A  5DC5               	subwf	(_MyTCB+12)& (0+255),w,b
 31181  012E0C  0101               	movlb	1	; () banked
 31182  012E0E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 31183  012E10  0101               	movlb	1	; () banked
 31184  012E12  59C6               	subwfb	(_MyTCB+13)& (0+255),w,b
 31185  012E14  B0D8               	btfsc	status,0,c
 31186  012E16  D054               	goto	l12124
 31187                           
 31188                           ; BSR set to: 1
 31189                           ;tcp.c: 2942: {
 31190                           ;tcp.c: 2943: len = MyTCBStub.txHead - MyTCB.txUnackedTail;
 31191  012E18  0101               	movlb	1	; () banked
 31192  012E1A  EE21  F0C5         	lfsr	2,_MyTCB+12
 31193  012E1E  CFDE F129          	movff	postinc2,??_SendTCP
 31194  012E22  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31195  012E26  0101               	movlb	1	; () banked
 31196  012E28  1F29               	comf	??_SendTCP& (0+255),f,b
 31197  012E2A  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31198  012E2C  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31199  012E2E  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31200  012E30  0101               	movlb	1	; () banked
 31201  012E32  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 31202  012E34  0101               	movlb	1	; () banked
 31203  012E36  2529               	addwf	??_SendTCP& (0+255),w,b
 31204  012E38  0101               	movlb	1	; () banked
 31205  012E3A  6F34               	movwf	SendTCP@len& (0+255),b
 31206  012E3C  0101               	movlb	1	; () banked
 31207  012E3E  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 31208  012E40  0101               	movlb	1	; () banked
 31209  012E42  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31210  012E44  0101               	movlb	1	; () banked
 31211  012E46  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31212                           
 31213                           ; BSR set to: 1
 31214                           ;tcp.c: 2945: if(len > MyTCB.remoteWindow)
 31215  012E48  0101               	movlb	1	; () banked
 31216  012E4A  5134               	movf	SendTCP@len& (0+255),w,b
 31217  012E4C  0101               	movlb	1	; () banked
 31218  012E4E  5DCB               	subwf	(_MyTCB+18)& (0+255),w,b
 31219  012E50  0101               	movlb	1	; () banked
 31220  012E52  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31221  012E54  0101               	movlb	1	; () banked
 31222  012E56  59CC               	subwfb	(_MyTCB+19)& (0+255),w,b
 31223  012E58  B0D8               	btfsc	status,0,c
 31224  012E5A  D004               	goto	l12116
 31225                           
 31226                           ; BSR set to: 1
 31227                           ;tcp.c: 2946: len = MyTCB.remoteWindow;
 31228  012E5C  C1CB  F134         	movff	_MyTCB+18,SendTCP@len
 31229  012E60  C1CC  F135         	movff	_MyTCB+19,SendTCP@len+1
 31230  012E64                     l12116:
 31231                           
 31232                           ; BSR set to: 1
 31233                           ;tcp.c: 2948: if(len > MyTCB.wRemoteMSS)
 31234  012E64  0101               	movlb	1	; () banked
 31235  012E66  5134               	movf	SendTCP@len& (0+255),w,b
 31236  012E68  0101               	movlb	1	; () banked
 31237  012E6A  5DDC               	subwf	(_MyTCB+35)& (0+255),w,b
 31238  012E6C  0101               	movlb	1	; () banked
 31239  012E6E  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31240  012E70  0101               	movlb	1	; () banked
 31241  012E72  59DD               	subwfb	(_MyTCB+36)& (0+255),w,b
 31242  012E74  B0D8               	btfsc	status,0,c
 31243  012E76  D006               	goto	l12120
 31244                           
 31245                           ; BSR set to: 1
 31246                           ;tcp.c: 2949: {
 31247                           ;tcp.c: 2950: len = MyTCB.wRemoteMSS;
 31248  012E78  C1DC  F134         	movff	_MyTCB+35,SendTCP@len
 31249  012E7C  C1DD  F135         	movff	_MyTCB+36,SendTCP@len+1
 31250                           
 31251                           ;tcp.c: 2951: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 31252  012E80  0101               	movlb	1	; () banked
 31253  012E82  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 31254  012E84                     l12120:
 31255                           
 31256                           ; BSR set to: 1
 31257                           ;tcp.c: 2952: }
 31258                           ;tcp.c: 2955: TCPRAMCopy((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1ul)+
      +                          sizeof(ETHER_HEADER)+sizeof(IP_HEADER)+sizeof(TCP_HEADER), 0u, MyTCB.txUnackedTail, MyTC
      +                          BStub.vMemoryMedium, len);
 31259  012E84  0E12               	movlw	18
 31260  012E86  0101               	movlb	1	; () banked
 31261  012E88  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 31262  012E8A  0EDD               	movlw	221
 31263  012E8C  0101               	movlb	1	; () banked
 31264  012E8E  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 31265  012E90  0E00               	movlw	0
 31266  012E92  0101               	movlb	1	; () banked
 31267  012E94  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 31268  012E96  C1C5  F121         	movff	_MyTCB+12,TCPRAMCopy@ptrSource
 31269  012E9A  C1C6  F122         	movff	_MyTCB+13,TCPRAMCopy@ptrSource+1
 31270  012E9E  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 31271  012EA2  C134  F124         	movff	SendTCP@len,TCPRAMCopy@wLength
 31272  012EA6  C135  F125         	movff	SendTCP@len+1,TCPRAMCopy@wLength+1
 31273  012EAA  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 31274                           
 31275                           ;tcp.c: 2956: MyTCB.txUnackedTail += len;
 31276  012EAE  0101               	movlb	1	; () banked
 31277  012EB0  5134               	movf	SendTCP@len& (0+255),w,b
 31278  012EB2  0101               	movlb	1	; () banked
 31279  012EB4  27C5               	addwf	(_MyTCB+12)& (0+255),f,b
 31280  012EB6  0101               	movlb	1	; () banked
 31281  012EB8  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31282  012EBA  0101               	movlb	1	; () banked
 31283  012EBC  23C6               	addwfc	(_MyTCB+13)& (0+255),f,b
 31284                           
 31285                           ;tcp.c: 2957: }
 31286  012EBE  D0F4               	goto	l12154
 31287  012EC0                     l12124:
 31288                           
 31289                           ; BSR set to: 1
 31290                           ;tcp.c: 2958: else
 31291                           ;tcp.c: 2959: {
 31292                           ;tcp.c: 2960: pseudoHeader.Length = MyTCBStub.bufferRxStart - MyTCB.txUnackedTail;
 31293  012EC0  0101               	movlb	1	; () banked
 31294  012EC2  EE21  F0C5         	lfsr	2,_MyTCB+12
 31295  012EC6  CFDE F129          	movff	postinc2,??_SendTCP
 31296  012ECA  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31297  012ECE  0101               	movlb	1	; () banked
 31298  012ED0  1F29               	comf	??_SendTCP& (0+255),f,b
 31299  012ED2  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31300  012ED4  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31301  012ED6  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31302  012ED8  0101               	movlb	1	; () banked
 31303  012EDA  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31304  012EDC  0101               	movlb	1	; () banked
 31305  012EDE  2529               	addwf	??_SendTCP& (0+255),w,b
 31306  012EE0  0101               	movlb	1	; () banked
 31307  012EE2  6F40               	movwf	(SendTCP@pseudoHeader+10)& (0+255),b
 31308  012EE4  0101               	movlb	1	; () banked
 31309  012EE6  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31310  012EE8  0101               	movlb	1	; () banked
 31311  012EEA  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31312  012EEC  0101               	movlb	1	; () banked
 31313  012EEE  6F41               	movwf	(SendTCP@pseudoHeader+11)& (0+255),b
 31314                           
 31315                           ; BSR set to: 1
 31316                           ;tcp.c: 2961: len = pseudoHeader.Length + MyTCBStub.txHead - MyTCBStub.bufferTxStart;
 31317  012EF0  0101               	movlb	1	; () banked
 31318  012EF2  C1E0  F129         	movff	_MyTCBStub,??_SendTCP
 31319  012EF6  0101               	movlb	1	; () banked
 31320  012EF8  C1E1  F12A         	movff	_MyTCBStub+1,??_SendTCP+1
 31321  012EFC  0101               	movlb	1	; () banked
 31322  012EFE  1F29               	comf	??_SendTCP& (0+255),f,b
 31323  012F00  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31324  012F02  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31325  012F04  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31326  012F06  0101               	movlb	1	; () banked
 31327  012F08  5140               	movf	(SendTCP@pseudoHeader+10)& (0+255),w,b
 31328  012F0A  0101               	movlb	1	; () banked
 31329  012F0C  2729               	addwf	??_SendTCP& (0+255),f,b
 31330  012F0E  0101               	movlb	1	; () banked
 31331  012F10  5141               	movf	(SendTCP@pseudoHeader+11)& (0+255),w,b
 31332  012F12  0101               	movlb	1	; () banked
 31333  012F14  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31334  012F16  0101               	movlb	1	; () banked
 31335  012F18  51E6               	movf	(_MyTCBStub+6)& (0+255),w,b
 31336  012F1A  0101               	movlb	1	; () banked
 31337  012F1C  2529               	addwf	??_SendTCP& (0+255),w,b
 31338  012F1E  0101               	movlb	1	; () banked
 31339  012F20  6F34               	movwf	SendTCP@len& (0+255),b
 31340  012F22  0101               	movlb	1	; () banked
 31341  012F24  51E7               	movf	(_MyTCBStub+7)& (0+255),w,b
 31342  012F26  0101               	movlb	1	; () banked
 31343  012F28  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31344  012F2A  0101               	movlb	1	; () banked
 31345  012F2C  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31346                           
 31347                           ; BSR set to: 1
 31348                           ;tcp.c: 2963: if(len > MyTCB.remoteWindow)
 31349  012F2E  0101               	movlb	1	; () banked
 31350  012F30  5134               	movf	SendTCP@len& (0+255),w,b
 31351  012F32  0101               	movlb	1	; () banked
 31352  012F34  5DCB               	subwf	(_MyTCB+18)& (0+255),w,b
 31353  012F36  0101               	movlb	1	; () banked
 31354  012F38  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31355  012F3A  0101               	movlb	1	; () banked
 31356  012F3C  59CC               	subwfb	(_MyTCB+19)& (0+255),w,b
 31357  012F3E  B0D8               	btfsc	status,0,c
 31358  012F40  D004               	goto	l12132
 31359                           
 31360                           ; BSR set to: 1
 31361                           ;tcp.c: 2964: len = MyTCB.remoteWindow;
 31362  012F42  C1CB  F134         	movff	_MyTCB+18,SendTCP@len
 31363  012F46  C1CC  F135         	movff	_MyTCB+19,SendTCP@len+1
 31364  012F4A                     l12132:
 31365                           
 31366                           ; BSR set to: 1
 31367                           ;tcp.c: 2966: if(len > MyTCB.wRemoteMSS)
 31368  012F4A  0101               	movlb	1	; () banked
 31369  012F4C  5134               	movf	SendTCP@len& (0+255),w,b
 31370  012F4E  0101               	movlb	1	; () banked
 31371  012F50  5DDC               	subwf	(_MyTCB+35)& (0+255),w,b
 31372  012F52  0101               	movlb	1	; () banked
 31373  012F54  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31374  012F56  0101               	movlb	1	; () banked
 31375  012F58  59DD               	subwfb	(_MyTCB+36)& (0+255),w,b
 31376  012F5A  B0D8               	btfsc	status,0,c
 31377  012F5C  D006               	goto	l12136
 31378                           
 31379                           ; BSR set to: 1
 31380                           ;tcp.c: 2967: {
 31381                           ;tcp.c: 2968: len = MyTCB.wRemoteMSS;
 31382  012F5E  C1DC  F134         	movff	_MyTCB+35,SendTCP@len
 31383  012F62  C1DD  F135         	movff	_MyTCB+36,SendTCP@len+1
 31384                           
 31385                           ;tcp.c: 2969: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 1;
 31386  012F66  0101               	movlb	1	; () banked
 31387  012F68  85F8               	bsf	(_MyTCBStub+24)& (0+255),2,b
 31388  012F6A                     l12136:
 31389                           
 31390                           ; BSR set to: 1
 31391                           ;tcp.c: 2970: }
 31392                           ;tcp.c: 2972: if(pseudoHeader.Length > len)
 31393  012F6A  0101               	movlb	1	; () banked
 31394  012F6C  5140               	movf	(SendTCP@pseudoHeader+10)& (0+255),w,b
 31395  012F6E  0101               	movlb	1	; () banked
 31396  012F70  5D34               	subwf	SendTCP@len& (0+255),w,b
 31397  012F72  0101               	movlb	1	; () banked
 31398  012F74  5141               	movf	(SendTCP@pseudoHeader+11)& (0+255),w,b
 31399  012F76  0101               	movlb	1	; () banked
 31400  012F78  5935               	subwfb	(SendTCP@len+1)& (0+255),w,b
 31401  012F7A  B0D8               	btfsc	status,0,c
 31402  012F7C  D004               	goto	l12140
 31403                           
 31404                           ; BSR set to: 1
 31405                           ;tcp.c: 2973: pseudoHeader.Length = len;
 31406  012F7E  C134  F140         	movff	SendTCP@len,SendTCP@pseudoHeader+10
 31407  012F82  C135  F141         	movff	SendTCP@len+1,SendTCP@pseudoHeader+11
 31408  012F86                     l12140:
 31409                           
 31410                           ; BSR set to: 1
 31411                           ;tcp.c: 2976: TCPRAMCopy((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1ul)+
      +                          sizeof(ETHER_HEADER)+sizeof(IP_HEADER)+sizeof(TCP_HEADER), 0u, MyTCB.txUnackedTail, MyTC
      +                          BStub.vMemoryMedium, pseudoHeader.Length);
 31412  012F86  0E12               	movlw	18
 31413  012F88  0101               	movlb	1	; () banked
 31414  012F8A  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 31415  012F8C  0EDD               	movlw	221
 31416  012F8E  0101               	movlb	1	; () banked
 31417  012F90  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 31418  012F92  0E00               	movlw	0
 31419  012F94  0101               	movlb	1	; () banked
 31420  012F96  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 31421  012F98  C1C5  F121         	movff	_MyTCB+12,TCPRAMCopy@ptrSource
 31422  012F9C  C1C6  F122         	movff	_MyTCB+13,TCPRAMCopy@ptrSource+1
 31423  012FA0  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 31424  012FA4  C140  F124         	movff	SendTCP@pseudoHeader+10,TCPRAMCopy@wLength
 31425  012FA8  C141  F125         	movff	SendTCP@pseudoHeader+11,TCPRAMCopy@wLength+1
 31426  012FAC  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 31427                           
 31428                           ;tcp.c: 2977: pseudoHeader.Length = len - pseudoHeader.Length;
 31429  012FB0  0101               	movlb	1	; () banked
 31430  012FB2  EE21  F040         	lfsr	2,SendTCP@pseudoHeader+10
 31431  012FB6  CFDE F129          	movff	postinc2,??_SendTCP
 31432  012FBA  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31433  012FBE  0101               	movlb	1	; () banked
 31434  012FC0  1F29               	comf	??_SendTCP& (0+255),f,b
 31435  012FC2  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31436  012FC4  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31437  012FC6  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31438  012FC8  0101               	movlb	1	; () banked
 31439  012FCA  5134               	movf	SendTCP@len& (0+255),w,b
 31440  012FCC  0101               	movlb	1	; () banked
 31441  012FCE  2529               	addwf	??_SendTCP& (0+255),w,b
 31442  012FD0  0101               	movlb	1	; () banked
 31443  012FD2  6F40               	movwf	(SendTCP@pseudoHeader+10)& (0+255),b
 31444  012FD4  0101               	movlb	1	; () banked
 31445  012FD6  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31446  012FD8  0101               	movlb	1	; () banked
 31447  012FDA  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31448  012FDC  0101               	movlb	1	; () banked
 31449  012FDE  6F41               	movwf	(SendTCP@pseudoHeader+11)& (0+255),b
 31450                           
 31451                           ; BSR set to: 1
 31452                           ;tcp.c: 2980: if(pseudoHeader.Length)
 31453  012FE0  0101               	movlb	1	; () banked
 31454  012FE2  5141               	movf	(SendTCP@pseudoHeader+11)& (0+255),w,b
 31455  012FE4  1140               	iorwf	(SendTCP@pseudoHeader+10)& (0+255),w,b
 31456  012FE6  B4D8               	btfsc	status,2,c
 31457  012FE8  D02D               	goto	l12148
 31458                           
 31459                           ; BSR set to: 1
 31460                           ;tcp.c: 2981: {
 31461                           ;tcp.c: 2982: TCPRAMCopy((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1ul)+
      +                          sizeof(ETHER_HEADER)+sizeof(IP_HEADER)+sizeof(TCP_HEADER)+(MyTCBStub.bufferRxStart-MyTCB
      +                          .txUnackedTail), 0u, MyTCBStub.bufferTxStart, MyTCBStub.vMemoryMedium, pseudoHeader.Leng
 31462  012FEA  0101               	movlb	1	; () banked
 31463  012FEC  EE21  F0C5         	lfsr	2,_MyTCB+12
 31464  012FF0  CFDE F129          	movff	postinc2,??_SendTCP
 31465  012FF4  CFDD F12A          	movff	postdec2,??_SendTCP+1
 31466  012FF8  0101               	movlb	1	; () banked
 31467  012FFA  1F29               	comf	??_SendTCP& (0+255),f,b
 31468  012FFC  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31469  012FFE  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31470  013000  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31471  013002  0101               	movlb	1	; () banked
 31472  013004  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31473  013006  0101               	movlb	1	; () banked
 31474  013008  2729               	addwf	??_SendTCP& (0+255),f,b
 31475  01300A  0101               	movlb	1	; () banked
 31476  01300C  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31477  01300E  0101               	movlb	1	; () banked
 31478  013010  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31479  013012  0EDD               	movlw	221
 31480  013014  0101               	movlb	1	; () banked
 31481  013016  2529               	addwf	??_SendTCP& (0+255),w,b
 31482  013018  0101               	movlb	1	; () banked
 31483  01301A  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 31484  01301C  0E12               	movlw	18
 31485  01301E  0101               	movlb	1	; () banked
 31486  013020  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31487  013022  0101               	movlb	1	; () banked
 31488  013024  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 31489  013026  0E00               	movlw	0
 31490  013028  0101               	movlb	1	; () banked
 31491  01302A  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 31492  01302C  C1E0  F121         	movff	_MyTCBStub,TCPRAMCopy@ptrSource
 31493  013030  C1E1  F122         	movff	_MyTCBStub+1,TCPRAMCopy@ptrSource+1
 31494  013034  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 31495  013038  C140  F124         	movff	SendTCP@pseudoHeader+10,TCPRAMCopy@wLength
 31496  01303C  C141  F125         	movff	SendTCP@pseudoHeader+11,TCPRAMCopy@wLength+1
 31497  013040  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 31498  013044                     l12148:
 31499                           
 31500                           ;tcp.c: 2983: }
 31501                           ;tcp.c: 2985: MyTCB.txUnackedTail += len;
 31502  013044  0101               	movlb	1	; () banked
 31503  013046  5134               	movf	SendTCP@len& (0+255),w,b
 31504  013048  0101               	movlb	1	; () banked
 31505  01304A  27C5               	addwf	(_MyTCB+12)& (0+255),f,b
 31506  01304C  0101               	movlb	1	; () banked
 31507  01304E  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31508  013050  0101               	movlb	1	; () banked
 31509  013052  23C6               	addwfc	(_MyTCB+13)& (0+255),f,b
 31510                           
 31511                           ; BSR set to: 1
 31512                           ;tcp.c: 2986: if(MyTCB.txUnackedTail >= MyTCBStub.bufferRxStart)
 31513  013054  0101               	movlb	1	; () banked
 31514  013056  EE21  F0E2         	lfsr	2,_MyTCBStub+2
 31515  01305A  0101               	movlb	1	; () banked
 31516  01305C  EE11  F0C5         	lfsr	1,_MyTCB+12
 31517  013060  52E6               	movf	postinc1,f,c
 31518  013062  52DE               	movf	postinc2,f,c
 31519  013064  50DD               	movf	postdec2,w,c
 31520  013066  5CE5               	subwf	postdec1,w,c
 31521  013068  E102               	bnz	u13265
 31522  01306A  50DF               	movf	indf2,w,c
 31523  01306C  5CE7               	subwf	indf1,w,c
 31524  01306E                     u13265:
 31525  01306E  A0D8               	btfss	status,0,c
 31526  013070  D01B               	goto	l12154
 31527                           
 31528                           ; BSR set to: 1
 31529                           ;tcp.c: 2987: MyTCB.txUnackedTail -= MyTCBStub.bufferRxStart-MyTCBStub.bufferTxStart;
 31530  013072  0101               	movlb	1	; () banked
 31531  013074  C1E0  F129         	movff	_MyTCBStub,??_SendTCP
 31532  013078  0101               	movlb	1	; () banked
 31533  01307A  C1E1  F12A         	movff	_MyTCBStub+1,??_SendTCP+1
 31534  01307E  0101               	movlb	1	; () banked
 31535  013080  1F29               	comf	??_SendTCP& (0+255),f,b
 31536  013082  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 31537  013084  4B29               	infsnz	??_SendTCP& (0+255),f,b
 31538  013086  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 31539  013088  0101               	movlb	1	; () banked
 31540  01308A  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 31541  01308C  0101               	movlb	1	; () banked
 31542  01308E  2729               	addwf	??_SendTCP& (0+255),f,b
 31543  013090  0101               	movlb	1	; () banked
 31544  013092  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 31545  013094  0101               	movlb	1	; () banked
 31546  013096  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 31547  013098  0101               	movlb	1	; () banked
 31548  01309A  5129               	movf	??_SendTCP& (0+255),w,b
 31549  01309C  0101               	movlb	1	; () banked
 31550  01309E  5FC5               	subwf	(_MyTCB+12)& (0+255),f,b
 31551  0130A0  0101               	movlb	1	; () banked
 31552  0130A2  512A               	movf	(??_SendTCP+1)& (0+255),w,b
 31553  0130A4  0101               	movlb	1	; () banked
 31554  0130A6  5BC6               	subwfb	(_MyTCB+13)& (0+255),f,b
 31555  0130A8                     l12154:
 31556                           
 31557                           ; BSR set to: 1
 31558                           ;tcp.c: 2988: }
 31559                           ;tcp.c: 2991: if(MyTCBStub.Flags.bTXFIN)
 31560  0130A8  0101               	movlb	1	; () banked
 31561  0130AA  A7F8               	btfss	(_MyTCBStub+24)& (0+255),3,b
 31562  0130AC  D020               	goto	l12162
 31563                           
 31564                           ; BSR set to: 1
 31565                           ;tcp.c: 2992: {
 31566                           ;tcp.c: 2993: if((len != MyTCB.remoteWindow) && (len != MyTCB.wRemoteMSS))
 31567  0130AE  0101               	movlb	1	; () banked
 31568  0130B0  EE21  F0CB         	lfsr	2,_MyTCB+18
 31569  0130B4  0101               	movlb	1	; () banked
 31570  0130B6  52DE               	movf	postinc2,f,c
 31571  0130B8  0101               	movlb	1	; () banked
 31572  0130BA  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31573  0130BC  18DD               	xorwf	postdec2,w,c
 31574  0130BE  0101               	movlb	1	; () banked
 31575  0130C0  C134  FFE8         	movff	SendTCP@len,wreg
 31576  0130C4  B4D8               	btfsc	status,2,c
 31577  0130C6  18DF               	xorwf	indf2,w,c
 31578  0130C8  B4D8               	btfsc	status,2,c
 31579  0130CA  D011               	goto	l12162
 31580                           
 31581                           ; BSR set to: 1
 31582  0130CC  0101               	movlb	1	; () banked
 31583  0130CE  EE21  F0DC         	lfsr	2,_MyTCB+35
 31584  0130D2  0101               	movlb	1	; () banked
 31585  0130D4  52DE               	movf	postinc2,f,c
 31586  0130D6  0101               	movlb	1	; () banked
 31587  0130D8  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31588  0130DA  18DD               	xorwf	postdec2,w,c
 31589  0130DC  0101               	movlb	1	; () banked
 31590  0130DE  C134  FFE8         	movff	SendTCP@len,wreg
 31591  0130E2  B4D8               	btfsc	status,2,c
 31592  0130E4  18DF               	xorwf	indf2,w,c
 31593  0130E6  B4D8               	btfsc	status,2,c
 31594  0130E8  D002               	goto	l12162
 31595                           
 31596                           ; BSR set to: 1
 31597                           ;tcp.c: 2994: vTCPFlags |= (0x01);
 31598  0130EA  0101               	movlb	1	; () banked
 31599  0130EC  8133               	bsf	SendTCP@vTCPFlags& (0+255),0,b
 31600  0130EE                     l12162:
 31601                           
 31602                           ; BSR set to: 1
 31603                           ;tcp.c: 2995: }
 31604                           ;tcp.c: 2996: }
 31605                           ;tcp.c: 3001: if(len || (vTCPFlags & ((0x02) | (0x01))))
 31606  0130EE  0101               	movlb	1	; () banked
 31607  0130F0  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31608  0130F2  1134               	iorwf	SendTCP@len& (0+255),w,b
 31609  0130F4  A4D8               	btfss	status,2,c
 31610  0130F6  D007               	goto	l12166
 31611                           
 31612                           ; BSR set to: 1
 31613  0130F8  C133  F129         	movff	SendTCP@vTCPFlags,??_SendTCP
 31614  0130FC  0E03               	movlw	3
 31615  0130FE  0101               	movlb	1	; () banked
 31616  013100  1729               	andwf	??_SendTCP& (0+255),f,b
 31617  013102  B4D8               	btfsc	status,2,c
 31618  013104  D046               	goto	l1218
 31619  013106                     l12166:
 31620                           
 31621                           ; BSR set to: 1
 31622                           ;tcp.c: 3002: {
 31623                           ;tcp.c: 3005: MyTCB.remoteWindow -= len;
 31624  013106  0101               	movlb	1	; () banked
 31625  013108  5134               	movf	SendTCP@len& (0+255),w,b
 31626  01310A  0101               	movlb	1	; () banked
 31627  01310C  5FCB               	subwf	(_MyTCB+18)& (0+255),f,b
 31628  01310E  0101               	movlb	1	; () banked
 31629  013110  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31630  013112  0101               	movlb	1	; () banked
 31631  013114  5BCC               	subwfb	(_MyTCB+19)& (0+255),f,b
 31632                           
 31633                           ;tcp.c: 3009: if(len)
 31634  013116  0101               	movlb	1	; () banked
 31635  013118  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31636  01311A  1134               	iorwf	SendTCP@len& (0+255),w,b
 31637  01311C  B4D8               	btfsc	status,2,c
 31638  01311E  D002               	goto	l12170
 31639                           
 31640                           ; BSR set to: 1
 31641                           ;tcp.c: 3010: vTCPFlags |= (0x08);
 31642  013120  0101               	movlb	1	; () banked
 31643  013122  8733               	bsf	SendTCP@vTCPFlags& (0+255),3,b
 31644  013124                     l12170:
 31645                           
 31646                           ; BSR set to: 1
 31647                           ;tcp.c: 3012: if(vSendFlags & 0x01)
 31648  013124  0101               	movlb	1	; () banked
 31649  013126  A128               	btfss	SendTCP@vSendFlags& (0+255),0,b
 31650  013128  D00F               	goto	l12174
 31651                           
 31652                           ; BSR set to: 1
 31653                           ;tcp.c: 3013: {
 31654                           ;tcp.c: 3014: MyTCB.retryCount = 0;
 31655  01312A  0E00               	movlw	0
 31656  01312C  0101               	movlb	1	; () banked
 31657  01312E  6FDE               	movwf	(_MyTCB+37)& (0+255),b
 31658                           
 31659                           ;tcp.c: 3015: MyTCB.retryInterval = ((uint32_t)(((((40000000ul)/4)+128ull)/256ull))*1);
 31660  013130  0E97               	movlw	151
 31661  013132  0101               	movlb	1	; () banked
 31662  013134  6FB9               	movwf	_MyTCB& (0+255),b
 31663  013136  0E98               	movlw	152
 31664  013138  0101               	movlb	1	; () banked
 31665  01313A  6FBA               	movwf	(_MyTCB+1)& (0+255),b
 31666  01313C  0E00               	movlw	0
 31667  01313E  0101               	movlb	1	; () banked
 31668  013140  6FBB               	movwf	(_MyTCB+2)& (0+255),b
 31669  013142  0E00               	movlw	0
 31670  013144  0101               	movlb	1	; () banked
 31671  013146  6FBC               	movwf	(_MyTCB+3)& (0+255),b
 31672  013148                     l12174:
 31673                           
 31674                           ; BSR set to: 1
 31675                           ;tcp.c: 3016: }
 31676                           ;tcp.c: 3018: MyTCBStub.eventTime = TickGet() + MyTCB.retryInterval;
 31677  013148  EC94  F0DB         	call	_TickGet	;wreg free
 31678  01314C  C100  F129         	movff	?_TickGet,??_SendTCP
 31679  013150  C101  F12A         	movff	?_TickGet+1,??_SendTCP+1
 31680  013154  C102  F12B         	movff	?_TickGet+2,??_SendTCP+2
 31681  013158  C103  F12C         	movff	?_TickGet+3,??_SendTCP+3
 31682  01315C  0101               	movlb	1	; () banked
 31683  01315E  51B9               	movf	_MyTCB& (0+255),w,b
 31684  013160  0101               	movlb	1	; () banked
 31685  013162  2529               	addwf	??_SendTCP& (0+255),w,b
 31686  013164  0101               	movlb	1	; () banked
 31687  013166  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 31688  013168  0101               	movlb	1	; () banked
 31689  01316A  51BA               	movf	(_MyTCB+1)& (0+255),w,b
 31690  01316C  0101               	movlb	1	; () banked
 31691  01316E  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31692  013170  0101               	movlb	1	; () banked
 31693  013172  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 31694  013174  0101               	movlb	1	; () banked
 31695  013176  51BB               	movf	(_MyTCB+2)& (0+255),w,b
 31696  013178  0101               	movlb	1	; () banked
 31697  01317A  212B               	addwfc	(??_SendTCP+2)& (0+255),w,b
 31698  01317C  0101               	movlb	1	; () banked
 31699  01317E  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 31700  013180  0101               	movlb	1	; () banked
 31701  013182  51BC               	movf	(_MyTCB+3)& (0+255),w,b
 31702  013184  0101               	movlb	1	; () banked
 31703  013186  212C               	addwfc	(??_SendTCP+3)& (0+255),w,b
 31704  013188  0101               	movlb	1	; () banked
 31705  01318A  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 31706                           
 31707                           ; BSR set to: 1
 31708                           ;tcp.c: 3019: MyTCBStub.Flags.bTimerEnabled = 1;
 31709  01318C  0101               	movlb	1	; () banked
 31710  01318E  89F7               	bsf	(_MyTCBStub+23)& (0+255),4,b
 31711                           
 31712                           ;tcp.c: 3020: }
 31713  013190  D060               	goto	l12190
 31714  013192                     l1218:
 31715                           
 31716                           ; BSR set to: 1
 31717                           ;tcp.c: 3021: else if(vSendFlags & 0x02)
 31718  013192  0101               	movlb	1	; () banked
 31719  013194  A328               	btfss	SendTCP@vSendFlags& (0+255),1,b
 31720  013196  D025               	goto	l1224
 31721                           
 31722                           ; BSR set to: 1
 31723                           ;tcp.c: 3022: {
 31724                           ;tcp.c: 3024: MyTCBStub.Flags.vUnackedKeepalives++;
 31725  013198  0E01               	movlw	1
 31726  01319A  0101               	movlb	1	; () banked
 31727  01319C  6F29               	movwf	??_SendTCP& (0+255),b
 31728  01319E  0101               	movlb	1	; () banked
 31729  0131A0  51F7               	movf	(_MyTCBStub+23)& (0+255),w,b
 31730  0131A2  0B07               	andlw	7
 31731  0131A4  0101               	movlb	1	; () banked
 31732  0131A6  6F2A               	movwf	(??_SendTCP+1)& (0+255),b
 31733  0131A8  0101               	movlb	1	; () banked
 31734  0131AA  5129               	movf	??_SendTCP& (0+255),w,b
 31735  0131AC  0101               	movlb	1	; () banked
 31736  0131AE  272A               	addwf	(??_SendTCP+1)& (0+255),f,b
 31737  0131B0  0101               	movlb	1	; () banked
 31738  0131B2  51F7               	movf	(_MyTCBStub+23)& (0+255),w,b
 31739  0131B4  0101               	movlb	1	; () banked
 31740  0131B6  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 31741  0131B8  0BF8               	andlw	-8
 31742  0131BA  0101               	movlb	1	; () banked
 31743  0131BC  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 31744  0131BE  0101               	movlb	1	; () banked
 31745  0131C0  6FF7               	movwf	(_MyTCBStub+23)& (0+255),b
 31746                           
 31747                           ;tcp.c: 3027: MyTCB.MySEQ -= 1;
 31748  0131C2  0101               	movlb	1	; () banked
 31749  0131C4  07BD               	decf	(_MyTCB+4)& (0+255),f,b
 31750  0131C6  0E00               	movlw	0
 31751  0131C8  0101               	movlb	1	; () banked
 31752  0131CA  5BBE               	subwfb	(_MyTCB+5)& (0+255),f,b
 31753  0131CC  0101               	movlb	1	; () banked
 31754  0131CE  5BBF               	subwfb	(_MyTCB+6)& (0+255),f,b
 31755  0131D0  0101               	movlb	1	; () banked
 31756  0131D2  5BC0               	subwfb	(_MyTCB+7)& (0+255),f,b
 31757                           
 31758                           ; BSR set to: 1
 31759                           ;tcp.c: 3028: len = 1;
 31760  0131D4  0E00               	movlw	0
 31761  0131D6  0101               	movlb	1	; () banked
 31762  0131D8  6F35               	movwf	(SendTCP@len+1)& (0+255),b
 31763  0131DA  0E01               	movlw	1
 31764  0131DC  0101               	movlb	1	; () banked
 31765  0131DE  6F34               	movwf	SendTCP@len& (0+255),b
 31766                           
 31767                           ;tcp.c: 3029: }
 31768  0131E0  D038               	goto	l12190
 31769  0131E2                     l1224:
 31770                           
 31771                           ; BSR set to: 1
 31772                           ;tcp.c: 3030: else if(MyTCBStub.Flags.bTimerEnabled)
 31773  0131E2  0101               	movlb	1	; () banked
 31774  0131E4  A9F7               	btfss	(_MyTCBStub+23)& (0+255),4,b
 31775  0131E6  D035               	goto	l12190
 31776                           
 31777                           ; BSR set to: 1
 31778                           ;tcp.c: 3031: {
 31779                           ;tcp.c: 3036: if(!(vSendFlags & 0x01))
 31780  0131E8  0101               	movlb	1	; () banked
 31781  0131EA  B128               	btfsc	SendTCP@vSendFlags& (0+255),0,b
 31782  0131EC  D010               	goto	l12188
 31783                           
 31784                           ; BSR set to: 1
 31785                           ;tcp.c: 3037: {
 31786                           ;tcp.c: 3040: if(MyTCB.retryCount)
 31787  0131EE  0101               	movlb	1	; () banked
 31788  0131F0  51DE               	movf	(_MyTCB+37)& (0+255),w,b
 31789  0131F2  B4D8               	btfsc	status,2,c
 31790  0131F4  D00C               	goto	l12188
 31791                           
 31792                           ; BSR set to: 1
 31793                           ;tcp.c: 3041: {
 31794                           ;tcp.c: 3042: MyTCB.retryCount--;
 31795  0131F6  0101               	movlb	1	; () banked
 31796  0131F8  07DE               	decf	(_MyTCB+37)& (0+255),f,b
 31797                           
 31798                           ;tcp.c: 3043: MyTCB.retryInterval >>= 1;
 31799  0131FA  0101               	movlb	1	; () banked
 31800  0131FC  90D8               	bcf	status,0,c
 31801  0131FE  0101               	movlb	1	; () banked
 31802  013200  33BC               	rrcf	(_MyTCB+3)& (0+255),f,b
 31803  013202  0101               	movlb	1	; () banked
 31804  013204  33BB               	rrcf	(_MyTCB+2)& (0+255),f,b
 31805  013206  0101               	movlb	1	; () banked
 31806  013208  33BA               	rrcf	(_MyTCB+1)& (0+255),f,b
 31807  01320A  0101               	movlb	1	; () banked
 31808  01320C  33B9               	rrcf	_MyTCB& (0+255),f,b
 31809  01320E                     l12188:
 31810                           
 31811                           ; BSR set to: 1
 31812                           ;tcp.c: 3044: }
 31813                           ;tcp.c: 3045: }
 31814                           ;tcp.c: 3047: MyTCBStub.eventTime = TickGet() + MyTCB.retryInterval;
 31815  01320E  EC94  F0DB         	call	_TickGet	;wreg free
 31816  013212  C100  F129         	movff	?_TickGet,??_SendTCP
 31817  013216  C101  F12A         	movff	?_TickGet+1,??_SendTCP+1
 31818  01321A  C102  F12B         	movff	?_TickGet+2,??_SendTCP+2
 31819  01321E  C103  F12C         	movff	?_TickGet+3,??_SendTCP+3
 31820  013222  0101               	movlb	1	; () banked
 31821  013224  51B9               	movf	_MyTCB& (0+255),w,b
 31822  013226  0101               	movlb	1	; () banked
 31823  013228  2529               	addwf	??_SendTCP& (0+255),w,b
 31824  01322A  0101               	movlb	1	; () banked
 31825  01322C  6FEE               	movwf	(_MyTCBStub+14)& (0+255),b
 31826  01322E  0101               	movlb	1	; () banked
 31827  013230  51BA               	movf	(_MyTCB+1)& (0+255),w,b
 31828  013232  0101               	movlb	1	; () banked
 31829  013234  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 31830  013236  0101               	movlb	1	; () banked
 31831  013238  6FEF               	movwf	(_MyTCBStub+15)& (0+255),b
 31832  01323A  0101               	movlb	1	; () banked
 31833  01323C  51BB               	movf	(_MyTCB+2)& (0+255),w,b
 31834  01323E  0101               	movlb	1	; () banked
 31835  013240  212B               	addwfc	(??_SendTCP+2)& (0+255),w,b
 31836  013242  0101               	movlb	1	; () banked
 31837  013244  6FF0               	movwf	(_MyTCBStub+16)& (0+255),b
 31838  013246  0101               	movlb	1	; () banked
 31839  013248  51BC               	movf	(_MyTCB+3)& (0+255),w,b
 31840  01324A  0101               	movlb	1	; () banked
 31841  01324C  212C               	addwfc	(??_SendTCP+3)& (0+255),w,b
 31842  01324E  0101               	movlb	1	; () banked
 31843  013250  6FF1               	movwf	(_MyTCBStub+17)& (0+255),b
 31844  013252                     l12190:
 31845                           
 31846                           ; BSR set to: 1
 31847                           ;tcp.c: 3048: }
 31848                           ;tcp.c: 3051: header.SourcePort = MyTCB.localPort.Val;
 31849  013252  C1C9  F142         	movff	_MyTCB+16,SendTCP@header
 31850  013256  C1CA  F143         	movff	_MyTCB+17,SendTCP@header+1
 31851                           
 31852                           ; BSR set to: 1
 31853                           ;tcp.c: 3052: header.DestPort = MyTCB.remotePort.Val;
 31854  01325A  C1C7  F144         	movff	_MyTCB+14,SendTCP@header+2
 31855  01325E  C1C8  F145         	movff	_MyTCB+15,SendTCP@header+3
 31856                           
 31857                           ; BSR set to: 1
 31858                           ;tcp.c: 3053: header.SeqNumber = MyTCB.MySEQ;
 31859  013262  C1BD  F146         	movff	_MyTCB+4,SendTCP@header+4
 31860  013266  C1BE  F147         	movff	_MyTCB+5,SendTCP@header+5
 31861  01326A  C1BF  F148         	movff	_MyTCB+6,SendTCP@header+6
 31862  01326E  C1C0  F149         	movff	_MyTCB+7,SendTCP@header+7
 31863                           
 31864                           ; BSR set to: 1
 31865                           ;tcp.c: 3054: header.AckNumber = MyTCB.RemoteSEQ;
 31866  013272  C1C1  F14A         	movff	_MyTCB+8,SendTCP@header+8
 31867  013276  C1C2  F14B         	movff	_MyTCB+9,SendTCP@header+9
 31868  01327A  C1C3  F14C         	movff	_MyTCB+10,SendTCP@header+10
 31869  01327E  C1C4  F14D         	movff	_MyTCB+11,SendTCP@header+11
 31870                           
 31871                           ; BSR set to: 1
 31872                           ;tcp.c: 3055: header.Flags.bits.Reserved2 = 0;
 31873  013282  0E3F               	movlw	-193
 31874  013284  0101               	movlb	1	; () banked
 31875  013286  174F               	andwf	(SendTCP@header+13)& (0+255),f,b
 31876                           
 31877                           ; BSR set to: 1
 31878                           ;tcp.c: 3056: header.DataOffset.Reserved3 = 0;
 31879  013288  0101               	movlb	1	; () banked
 31880  01328A  914E               	bcf	(SendTCP@header+12)& (0+255),0,b
 31881  01328C  0101               	movlb	1	; () banked
 31882  01328E  934E               	bcf	(SendTCP@header+12)& (0+255),1,b
 31883  013290  0101               	movlb	1	; () banked
 31884  013292  954E               	bcf	(SendTCP@header+12)& (0+255),2,b
 31885  013294  0101               	movlb	1	; () banked
 31886  013296  974E               	bcf	(SendTCP@header+12)& (0+255),3,b
 31887                           
 31888                           ; BSR set to: 1
 31889                           ;tcp.c: 3057: header.Flags.byte = vTCPFlags;
 31890  013298  C133  F14F         	movff	SendTCP@vTCPFlags,SendTCP@header+13
 31891                           
 31892                           ; BSR set to: 1
 31893                           ;tcp.c: 3058: header.UrgentPointer = 0;
 31894  01329C  0E00               	movlw	0
 31895  01329E  0101               	movlb	1	; () banked
 31896  0132A0  6F55               	movwf	(SendTCP@header+19)& (0+255),b
 31897  0132A2  0E00               	movlw	0
 31898  0132A4  0101               	movlb	1	; () banked
 31899  0132A6  6F54               	movwf	(SendTCP@header+18)& (0+255),b
 31900                           
 31901                           ; BSR set to: 1
 31902                           ;tcp.c: 3062: MyTCB.MySEQ += (uint32_t)len;
 31903  0132A8  0101               	movlb	1	; () banked
 31904  0132AA  5134               	movf	SendTCP@len& (0+255),w,b
 31905  0132AC  0101               	movlb	1	; () banked
 31906  0132AE  27BD               	addwf	(_MyTCB+4)& (0+255),f,b
 31907  0132B0  0101               	movlb	1	; () banked
 31908  0132B2  5135               	movf	(SendTCP@len+1)& (0+255),w,b
 31909  0132B4  0101               	movlb	1	; () banked
 31910  0132B6  23BE               	addwfc	(_MyTCB+5)& (0+255),f,b
 31911  0132B8  0E00               	movlw	0
 31912  0132BA  0101               	movlb	1	; () banked
 31913  0132BC  23BF               	addwfc	(_MyTCB+6)& (0+255),f,b
 31914  0132BE  0E00               	movlw	0
 31915  0132C0  0101               	movlb	1	; () banked
 31916  0132C2  23C0               	addwfc	(_MyTCB+7)& (0+255),f,b
 31917                           
 31918                           ; BSR set to: 1
 31919                           ;tcp.c: 3063: if(vTCPFlags & (0x02))
 31920  0132C4  0101               	movlb	1	; () banked
 31921  0132C6  A333               	btfss	SendTCP@vTCPFlags& (0+255),1,b
 31922  0132C8  D028               	goto	l12222
 31923                           
 31924                           ; BSR set to: 1
 31925                           ;tcp.c: 3064: {
 31926                           ;tcp.c: 3068: if(!(vTCPFlags & (0x10)))
 31927  0132CA  0101               	movlb	1	; () banked
 31928  0132CC  B933               	btfsc	SendTCP@vTCPFlags& (0+255),4,b
 31929  0132CE  D00C               	goto	l12214
 31930                           
 31931                           ; BSR set to: 1
 31932                           ;tcp.c: 3069: header.AckNumber = 0x00000000;
 31933  0132D0  0E00               	movlw	0
 31934  0132D2  0101               	movlb	1	; () banked
 31935  0132D4  6F4A               	movwf	(SendTCP@header+8)& (0+255),b
 31936  0132D6  0E00               	movlw	0
 31937  0132D8  0101               	movlb	1	; () banked
 31938  0132DA  6F4B               	movwf	(SendTCP@header+9)& (0+255),b
 31939  0132DC  0E00               	movlw	0
 31940  0132DE  0101               	movlb	1	; () banked
 31941  0132E0  6F4C               	movwf	(SendTCP@header+10)& (0+255),b
 31942  0132E2  0E00               	movlw	0
 31943  0132E4  0101               	movlb	1	; () banked
 31944  0132E6  6F4D               	movwf	(SendTCP@header+11)& (0+255),b
 31945  0132E8                     l12214:
 31946                           
 31947                           ; BSR set to: 1
 31948                           ;tcp.c: 3071: if(MyTCB.flags.bSYNSent)
 31949  0132E8  0101               	movlb	1	; () banked
 31950  0132EA  A3DB               	btfss	(_MyTCB+34)& (0+255),1,b
 31951  0132EC  D00A               	goto	l12218
 31952                           
 31953                           ; BSR set to: 1
 31954                           ;tcp.c: 3072: header.SeqNumber--;
 31955  0132EE  0101               	movlb	1	; () banked
 31956  0132F0  0746               	decf	(SendTCP@header+4)& (0+255),f,b
 31957  0132F2  0E00               	movlw	0
 31958  0132F4  0101               	movlb	1	; () banked
 31959  0132F6  5B47               	subwfb	(SendTCP@header+5)& (0+255),f,b
 31960  0132F8  0101               	movlb	1	; () banked
 31961  0132FA  5B48               	subwfb	(SendTCP@header+6)& (0+255),f,b
 31962  0132FC  0101               	movlb	1	; () banked
 31963  0132FE  5B49               	subwfb	(SendTCP@header+7)& (0+255),f,b
 31964  013300  D00C               	goto	l12222
 31965  013302                     l12218:
 31966                           
 31967                           ; BSR set to: 1
 31968                           ;tcp.c: 3073: else
 31969                           ;tcp.c: 3074: {
 31970                           ;tcp.c: 3075: MyTCB.MySEQ++;
 31971  013302  0E01               	movlw	1
 31972  013304  0101               	movlb	1	; () banked
 31973  013306  27BD               	addwf	(_MyTCB+4)& (0+255),f,b
 31974  013308  0E00               	movlw	0
 31975  01330A  0101               	movlb	1	; () banked
 31976  01330C  23BE               	addwfc	(_MyTCB+5)& (0+255),f,b
 31977  01330E  0101               	movlb	1	; () banked
 31978  013310  23BF               	addwfc	(_MyTCB+6)& (0+255),f,b
 31979  013312  0101               	movlb	1	; () banked
 31980  013314  23C0               	addwfc	(_MyTCB+7)& (0+255),f,b
 31981                           
 31982                           ; BSR set to: 1
 31983                           ;tcp.c: 3076: MyTCB.flags.bSYNSent = 1;
 31984  013316  0101               	movlb	1	; () banked
 31985  013318  83DB               	bsf	(_MyTCB+34)& (0+255),1,b
 31986  01331A                     l12222:
 31987                           
 31988                           ; BSR set to: 1
 31989                           ;tcp.c: 3077: }
 31990                           ;tcp.c: 3078: }
 31991                           ;tcp.c: 3079: if(vTCPFlags & (0x01))
 31992  01331A  0101               	movlb	1	; () banked
 31993  01331C  A133               	btfss	SendTCP@vTCPFlags& (0+255),0,b
 31994  01331E  D002               	goto	l12226
 31995                           
 31996                           ; BSR set to: 1
 31997                           ;tcp.c: 3080: {
 31998                           ;tcp.c: 3081: MyTCB.flags.bFINSent = 1;
 31999  013320  0101               	movlb	1	; () banked
 32000  013322  81DB               	bsf	(_MyTCB+34)& (0+255),0,b
 32001  013324                     l12226:
 32002                           
 32003                           ; BSR set to: 1
 32004                           ;tcp.c: 3082: }
 32005                           ;tcp.c: 3085: if(MyTCBStub.rxHead >= MyTCBStub.rxTail)
 32006  013324  0101               	movlb	1	; () banked
 32007  013326  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 32008  01332A  0101               	movlb	1	; () banked
 32009  01332C  EE11  F0EA         	lfsr	1,_MyTCBStub+10
 32010  013330  52E6               	movf	postinc1,f,c
 32011  013332  52DE               	movf	postinc2,f,c
 32012  013334  50DD               	movf	postdec2,w,c
 32013  013336  5CE5               	subwf	postdec1,w,c
 32014  013338  E102               	bnz	u13425
 32015  01333A  50DF               	movf	indf2,w,c
 32016  01333C  5CE7               	subwf	indf1,w,c
 32017  01333E                     u13425:
 32018  01333E  A0D8               	btfss	status,0,c
 32019  013340  D02A               	goto	l12230
 32020                           
 32021                           ; BSR set to: 1
 32022                           ;tcp.c: 3086: header.Window = (MyTCBStub.bufferEnd - MyTCBStub.bufferRxStart) - (MyTCBSt
      +                          ub.rxHead - MyTCBStub.rxTail);
 32023  013342  0101               	movlb	1	; () banked
 32024  013344  EE21  F0EC         	lfsr	2,_MyTCBStub+12
 32025  013348  CFDE F129          	movff	postinc2,??_SendTCP
 32026  01334C  CFDD F12A          	movff	postdec2,??_SendTCP+1
 32027  013350  0101               	movlb	1	; () banked
 32028  013352  1F29               	comf	??_SendTCP& (0+255),f,b
 32029  013354  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 32030  013356  4B29               	infsnz	??_SendTCP& (0+255),f,b
 32031  013358  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 32032  01335A  0101               	movlb	1	; () banked
 32033  01335C  51EA               	movf	(_MyTCBStub+10)& (0+255),w,b
 32034  01335E  0101               	movlb	1	; () banked
 32035  013360  2729               	addwf	??_SendTCP& (0+255),f,b
 32036  013362  0101               	movlb	1	; () banked
 32037  013364  51EB               	movf	(_MyTCBStub+11)& (0+255),w,b
 32038  013366  0101               	movlb	1	; () banked
 32039  013368  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 32040  01336A  0101               	movlb	1	; () banked
 32041  01336C  51E2               	movf	(_MyTCBStub+2)& (0+255),w,b
 32042  01336E  0101               	movlb	1	; () banked
 32043  013370  2729               	addwf	??_SendTCP& (0+255),f,b
 32044  013372  0101               	movlb	1	; () banked
 32045  013374  51E3               	movf	(_MyTCBStub+3)& (0+255),w,b
 32046  013376  0101               	movlb	1	; () banked
 32047  013378  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 32048  01337A  0101               	movlb	1	; () banked
 32049  01337C  1F29               	comf	??_SendTCP& (0+255),f,b
 32050  01337E  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 32051  013380  4B29               	infsnz	??_SendTCP& (0+255),f,b
 32052  013382  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 32053  013384  0101               	movlb	1	; () banked
 32054  013386  51E4               	movf	(_MyTCBStub+4)& (0+255),w,b
 32055  013388  0101               	movlb	1	; () banked
 32056  01338A  2529               	addwf	??_SendTCP& (0+255),w,b
 32057  01338C  0101               	movlb	1	; () banked
 32058  01338E  6F50               	movwf	(SendTCP@header+14)& (0+255),b
 32059  013390  0101               	movlb	1	; () banked
 32060  013392  51E5               	movf	(_MyTCBStub+5)& (0+255),w,b
 32061  013394  D01A               	goto	L36
 32062  013396                     l12230:
 32063                           
 32064                           ; BSR set to: 1
 32065                           ;tcp.c: 3087: else
 32066                           ;tcp.c: 3088: header.Window = MyTCBStub.rxTail - MyTCBStub.rxHead - 1;
 32067  013396  0101               	movlb	1	; () banked
 32068  013398  EE21  F0EA         	lfsr	2,_MyTCBStub+10
 32069  01339C  CFDE F129          	movff	postinc2,??_SendTCP
 32070  0133A0  CFDD F12A          	movff	postdec2,??_SendTCP+1
 32071  0133A4  0101               	movlb	1	; () banked
 32072  0133A6  1F29               	comf	??_SendTCP& (0+255),f,b
 32073  0133A8  1F2A               	comf	(??_SendTCP+1)& (0+255),f,b
 32074  0133AA  4B29               	infsnz	??_SendTCP& (0+255),f,b
 32075  0133AC  2B2A               	incf	(??_SendTCP+1)& (0+255),f,b
 32076  0133AE  0101               	movlb	1	; () banked
 32077  0133B0  51EC               	movf	(_MyTCBStub+12)& (0+255),w,b
 32078  0133B2  0101               	movlb	1	; () banked
 32079  0133B4  2729               	addwf	??_SendTCP& (0+255),f,b
 32080  0133B6  0101               	movlb	1	; () banked
 32081  0133B8  51ED               	movf	(_MyTCBStub+13)& (0+255),w,b
 32082  0133BA  0101               	movlb	1	; () banked
 32083  0133BC  232A               	addwfc	(??_SendTCP+1)& (0+255),f,b
 32084  0133BE  0EFF               	movlw	255
 32085  0133C0  0101               	movlb	1	; () banked
 32086  0133C2  2529               	addwf	??_SendTCP& (0+255),w,b
 32087  0133C4  0101               	movlb	1	; () banked
 32088  0133C6  6F50               	movwf	(SendTCP@header+14)& (0+255),b
 32089  0133C8  0EFF               	movlw	255
 32090  0133CA                     L36:
 32091  0133CA  0101               	movlb	1	; () banked
 32092  0133CC  212A               	addwfc	(??_SendTCP+1)& (0+255),w,b
 32093  0133CE  0101               	movlb	1	; () banked
 32094  0133D0  6F51               	movwf	(SendTCP@header+15)& (0+255),b
 32095                           
 32096                           ; BSR set to: 1
 32097                           ;tcp.c: 3091: wVal.Val = MACGetFreeRxSize();
 32098                           
 32099                           ; BSR set to: 1
 32100  0133D2  ECA4  F0CA         	call	_MACGetFreeRxSize	;wreg free
 32101  0133D6  0101               	movlb	1	; () banked
 32102  0133D8  C100  F131         	movff	?_MACGetFreeRxSize,SendTCP@wVal
 32103  0133DC  0101               	movlb	1	; () banked
 32104  0133DE  C101  F132         	movff	?_MACGetFreeRxSize+1,SendTCP@wVal+1
 32105                           
 32106                           ; BSR set to: 1
 32107                           ;tcp.c: 3092: if(wVal.Val < 64)
 32108  0133E2  0E40               	movlw	64
 32109  0133E4  0101               	movlb	1	; () banked
 32110  0133E6  5D31               	subwf	SendTCP@wVal& (0+255),w,b
 32111  0133E8  0E00               	movlw	0
 32112  0133EA  0101               	movlb	1	; () banked
 32113  0133EC  5932               	subwfb	(SendTCP@wVal+1)& (0+255),w,b
 32114  0133EE  B0D8               	btfsc	status,0,c
 32115  0133F0  D007               	goto	l12238
 32116                           
 32117                           ; BSR set to: 1
 32118                           ;tcp.c: 3093: {
 32119                           ;tcp.c: 3094: wVal.Val = 0;
 32120  0133F2  0E00               	movlw	0
 32121  0133F4  0101               	movlb	1	; () banked
 32122  0133F6  6F32               	movwf	(SendTCP@wVal+1)& (0+255),b
 32123  0133F8  0E00               	movlw	0
 32124  0133FA  0101               	movlb	1	; () banked
 32125  0133FC  6F31               	movwf	SendTCP@wVal& (0+255),b
 32126                           
 32127                           ;tcp.c: 3095: }
 32128  0133FE  D006               	goto	l1237
 32129  013400                     l12238:
 32130                           
 32131                           ; BSR set to: 1
 32132                           ;tcp.c: 3096: else
 32133                           ;tcp.c: 3097: {
 32134                           ;tcp.c: 3098: wVal.Val -= 64;
 32135  013400  0E40               	movlw	64
 32136  013402  0101               	movlb	1	; () banked
 32137  013404  5F31               	subwf	SendTCP@wVal& (0+255),f,b
 32138  013406  0E00               	movlw	0
 32139  013408  0101               	movlb	1	; () banked
 32140  01340A  5B32               	subwfb	(SendTCP@wVal+1)& (0+255),f,b
 32141  01340C                     l1237:
 32142                           
 32143                           ; BSR set to: 1
 32144                           ;tcp.c: 3099: }
 32145                           ;tcp.c: 3101: if(header.Window > wVal.Val)
 32146  01340C  0101               	movlb	1	; () banked
 32147  01340E  5150               	movf	(SendTCP@header+14)& (0+255),w,b
 32148  013410  0101               	movlb	1	; () banked
 32149  013412  5D31               	subwf	SendTCP@wVal& (0+255),w,b
 32150  013414  0101               	movlb	1	; () banked
 32151  013416  5151               	movf	(SendTCP@header+15)& (0+255),w,b
 32152  013418  0101               	movlb	1	; () banked
 32153  01341A  5932               	subwfb	(SendTCP@wVal+1)& (0+255),w,b
 32154  01341C  B0D8               	btfsc	status,0,c
 32155  01341E  D004               	goto	l12242
 32156                           
 32157                           ; BSR set to: 1
 32158                           ;tcp.c: 3102: header.Window = wVal.Val;
 32159  013420  C131  F150         	movff	SendTCP@wVal,SendTCP@header+14
 32160  013424  C132  F151         	movff	SendTCP@wVal+1,SendTCP@header+15
 32161  013428                     l12242:
 32162                           
 32163                           ; BSR set to: 1
 32164                           ;tcp.c: 3104: SwapTCPHeader(&header);
 32165  013428  0101               	movlb	1	; () banked
 32166  01342A  0E01               	movlw	high SendTCP@header
 32167  01342C  0101               	movlb	1	; () banked
 32168  01342E  6F06               	movwf	(SwapTCPHeader@header+1)& (0+255),b
 32169  013430  0101               	movlb	1	; () banked
 32170  013432  0E42               	movlw	low SendTCP@header
 32171  013434  0101               	movlb	1	; () banked
 32172  013436  6F05               	movwf	SwapTCPHeader@header& (0+255),b
 32173  013438  EC85  F0B0         	call	_SwapTCPHeader	;wreg free
 32174                           
 32175                           ;tcp.c: 3107: len += sizeof(header);
 32176  01343C  0E14               	movlw	20
 32177  01343E  0101               	movlb	1	; () banked
 32178  013440  2734               	addwf	SendTCP@len& (0+255),f,b
 32179  013442  0E00               	movlw	0
 32180  013444  0101               	movlb	1	; () banked
 32181  013446  2335               	addwfc	(SendTCP@len+1)& (0+255),f,b
 32182                           
 32183                           ; BSR set to: 1
 32184                           ;tcp.c: 3108: header.DataOffset.Val = sizeof(header) >> 2;
 32185  013448  0101               	movlb	1	; () banked
 32186  01344A  514E               	movf	(SendTCP@header+12)& (0+255),w,b
 32187  01344C  0B0F               	andlw	-241
 32188  01344E  0950               	iorlw	80
 32189  013450  0101               	movlb	1	; () banked
 32190  013452  6F4E               	movwf	(SendTCP@header+12)& (0+255),b
 32191                           
 32192                           ; BSR set to: 1
 32193                           ;tcp.c: 3111: if(vTCPFlags & (0x02))
 32194  013454  0101               	movlb	1	; () banked
 32195  013456  A333               	btfss	SendTCP@vTCPFlags& (0+255),1,b
 32196  013458  D029               	goto	l12260
 32197                           
 32198                           ; BSR set to: 1
 32199                           ;tcp.c: 3112: {
 32200                           ;tcp.c: 3113: len += sizeof(options);
 32201  01345A  0E04               	movlw	4
 32202  01345C  0101               	movlb	1	; () banked
 32203  01345E  2734               	addwf	SendTCP@len& (0+255),f,b
 32204  013460  0E00               	movlw	0
 32205  013462  0101               	movlb	1	; () banked
 32206  013464  2335               	addwfc	(SendTCP@len+1)& (0+255),f,b
 32207                           
 32208                           ; BSR set to: 1
 32209                           ;tcp.c: 3114: options.Kind = (0x02u);
 32210  013466  0E02               	movlw	2
 32211  013468  0101               	movlb	1	; () banked
 32212  01346A  6F2D               	movwf	SendTCP@options& (0+255),b
 32213                           
 32214                           ; BSR set to: 1
 32215                           ;tcp.c: 3115: options.Length = 0x04;
 32216  01346C  0E04               	movlw	4
 32217  01346E  0101               	movlb	1	; () banked
 32218  013470  6F2E               	movwf	(SendTCP@options+1)& (0+255),b
 32219                           
 32220                           ; BSR set to: 1
 32221                           ;tcp.c: 3118: options.MaxSegSize.Val = ((((536u))&0x00FF)<<8) | ((((536u))&0xFF00)>>8);
 32222  013472  0E18               	movlw	24
 32223  013474  0101               	movlb	1	; () banked
 32224  013476  6F30               	movwf	(SendTCP@options+3)& (0+255),b
 32225  013478  0E02               	movlw	2
 32226  01347A  0101               	movlb	1	; () banked
 32227  01347C  6F2F               	movwf	(SendTCP@options+2)& (0+255),b
 32228                           
 32229                           ; BSR set to: 1
 32230                           ;tcp.c: 3120: header.DataOffset.Val += sizeof(options) >> 2;
 32231  01347E  0E01               	movlw	1
 32232  013480  0101               	movlb	1	; () banked
 32233  013482  6F29               	movwf	??_SendTCP& (0+255),b
 32234  013484  0101               	movlb	1	; () banked
 32235  013486  394E               	swapf	(SendTCP@header+12)& (0+255),w,b
 32236  013488  0B0F               	andlw	15
 32237  01348A  0101               	movlb	1	; () banked
 32238  01348C  6F2A               	movwf	(??_SendTCP+1)& (0+255),b
 32239  01348E  0101               	movlb	1	; () banked
 32240  013490  5129               	movf	??_SendTCP& (0+255),w,b
 32241  013492  0101               	movlb	1	; () banked
 32242  013494  272A               	addwf	(??_SendTCP+1)& (0+255),f,b
 32243  013496  0101               	movlb	1	; () banked
 32244  013498  3B2A               	swapf	(??_SendTCP+1)& (0+255),f,b
 32245  01349A  0101               	movlb	1	; () banked
 32246  01349C  514E               	movf	(SendTCP@header+12)& (0+255),w,b
 32247  01349E  0101               	movlb	1	; () banked
 32248  0134A0  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 32249  0134A2  0B0F               	andlw	-241
 32250  0134A4  0101               	movlb	1	; () banked
 32251  0134A6  192A               	xorwf	(??_SendTCP+1)& (0+255),w,b
 32252  0134A8  0101               	movlb	1	; () banked
 32253  0134AA  6F4E               	movwf	(SendTCP@header+12)& (0+255),b
 32254  0134AC                     l12260:
 32255                           
 32256                           ; BSR set to: 1
 32257                           ;tcp.c: 3121: }
 32258                           ;tcp.c: 3124: pseudoHeader.SourceAddress = AppConfig.MyIPAddr;
 32259  0134AC  C23C  F136         	movff	_AppConfig,SendTCP@pseudoHeader
 32260  0134B0  C23D  F137         	movff	_AppConfig+1,SendTCP@pseudoHeader+1
 32261  0134B4  C23E  F138         	movff	_AppConfig+2,SendTCP@pseudoHeader+2
 32262  0134B8  C23F  F139         	movff	_AppConfig+3,SendTCP@pseudoHeader+3
 32263                           
 32264                           ; BSR set to: 1
 32265                           ;tcp.c: 3125: pseudoHeader.DestAddress = MyTCB.remote.niRemoteMACIP.IPAddr;
 32266  0134BC  C1CF  F13A         	movff	_MyTCB+22,SendTCP@pseudoHeader+4
 32267  0134C0  C1D0  F13B         	movff	_MyTCB+23,SendTCP@pseudoHeader+5
 32268  0134C4  C1D1  F13C         	movff	_MyTCB+24,SendTCP@pseudoHeader+6
 32269  0134C8  C1D2  F13D         	movff	_MyTCB+25,SendTCP@pseudoHeader+7
 32270                           
 32271                           ;tcp.c: 3126: pseudoHeader.Zero = 0x0;
 32272  0134CC  0E00               	movlw	0
 32273  0134CE  0101               	movlb	1	; () banked
 32274  0134D0  6F3E               	movwf	(SendTCP@pseudoHeader+8)& (0+255),b
 32275                           
 32276                           ;tcp.c: 3127: pseudoHeader.Protocol = (6u);
 32277  0134D2  0E06               	movlw	6
 32278  0134D4  0101               	movlb	1	; () banked
 32279  0134D6  6F3F               	movwf	(SendTCP@pseudoHeader+9)& (0+255),b
 32280                           
 32281                           ; BSR set to: 1
 32282                           ;tcp.c: 3128: pseudoHeader.Length = len;
 32283  0134D8  C134  F140         	movff	SendTCP@len,SendTCP@pseudoHeader+10
 32284  0134DC  C135  F141         	movff	SendTCP@len+1,SendTCP@pseudoHeader+11
 32285                           
 32286                           ; BSR set to: 1
 32287                           ;tcp.c: 3129: (pseudoHeader.Length = swaps(pseudoHeader.Length));
 32288  0134E0  C140  F100         	movff	SendTCP@pseudoHeader+10,swaps@v
 32289  0134E4  C141  F101         	movff	SendTCP@pseudoHeader+11,swaps@v+1
 32290  0134E8  EC79  F0DC         	call	_swaps	;wreg free
 32291  0134EC  0101               	movlb	1	; () banked
 32292  0134EE  C100  F140         	movff	?_swaps,SendTCP@pseudoHeader+10
 32293  0134F2  0101               	movlb	1	; () banked
 32294  0134F4  C101  F141         	movff	?_swaps+1,SendTCP@pseudoHeader+11
 32295                           
 32296                           ; BSR set to: 1
 32297                           ;tcp.c: 3130: header.Checksum = ~CalcIPChecksum((uint8_t*)&pseudoHeader, sizeof(pseudoHe
      +                          ader));
 32298  0134F8  0101               	movlb	1	; () banked
 32299  0134FA  0E01               	movlw	high SendTCP@pseudoHeader
 32300  0134FC  0101               	movlb	1	; () banked
 32301  0134FE  6F01               	movwf	(CalcIPChecksum@buffer+1)& (0+255),b
 32302  013500  0101               	movlb	1	; () banked
 32303  013502  0E36               	movlw	low SendTCP@pseudoHeader
 32304  013504  0101               	movlb	1	; () banked
 32305  013506  6F00               	movwf	CalcIPChecksum@buffer& (0+255),b
 32306  013508  0E00               	movlw	0
 32307  01350A  0101               	movlb	1	; () banked
 32308  01350C  6F03               	movwf	(CalcIPChecksum@count+1)& (0+255),b
 32309  01350E  0E0C               	movlw	12
 32310  013510  0101               	movlb	1	; () banked
 32311  013512  6F02               	movwf	CalcIPChecksum@count& (0+255),b
 32312  013514  EC6A  F0C7         	call	_CalcIPChecksum	;wreg free
 32313  013518  0101               	movlb	1	; () banked
 32314  01351A  1D00               	comf	?_CalcIPChecksum& (0+255),w,b
 32315  01351C  0101               	movlb	1	; () banked
 32316  01351E  6F52               	movwf	(SendTCP@header+16)& (0+255),b
 32317  013520  0101               	movlb	1	; () banked
 32318  013522  1D01               	comf	(?_CalcIPChecksum+1)& (0+255),w,b
 32319  013524  0101               	movlb	1	; () banked
 32320  013526  6F53               	movwf	(SendTCP@header+17)& (0+255),b
 32321                           
 32322                           ; BSR set to: 1
 32323                           ;tcp.c: 3133: MACSetWritePtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1
      +                          ul) + sizeof(ETHER_HEADER));
 32324  013528  0E12               	movlw	18
 32325  01352A  0101               	movlb	1	; () banked
 32326  01352C  6F01               	movwf	(MACSetWritePtr@address+1)& (0+255),b
 32327  01352E  0EB5               	movlw	181
 32328  013530  0101               	movlb	1	; () banked
 32329  013532  6F00               	movwf	MACSetWritePtr@address& (0+255),b
 32330  013534  EC40  F0DD         	call	_MACSetWritePtr	;wreg free
 32331                           
 32332                           ;tcp.c: 3134: IPPutHeader(&MyTCB.remote.niRemoteMACIP, (6u), len);
 32333  013538  0101               	movlb	1	; () banked
 32334  01353A  0E01               	movlw	high (_MyTCB+22)
 32335  01353C  0101               	movlb	1	; () banked
 32336  01353E  6F0F               	movwf	(IPPutHeader@remote+1)& (0+255),b
 32337  013540  0101               	movlb	1	; () banked
 32338  013542  0ECF               	movlw	low (_MyTCB+22)
 32339  013544  0101               	movlb	1	; () banked
 32340  013546  6F0E               	movwf	IPPutHeader@remote& (0+255),b
 32341  013548  0E06               	movlw	6
 32342  01354A  0101               	movlb	1	; () banked
 32343  01354C  6F10               	movwf	IPPutHeader@protocol& (0+255),b
 32344  01354E  C134  F111         	movff	SendTCP@len,IPPutHeader@len
 32345  013552  C135  F112         	movff	SendTCP@len+1,IPPutHeader@len+1
 32346  013556  ECB5  F0C2         	call	_IPPutHeader	;wreg free
 32347                           
 32348                           ;tcp.c: 3135: MACPutArray((uint8_t*)&header, sizeof(header));
 32349  01355A  0101               	movlb	1	; () banked
 32350  01355C  0E01               	movlw	high SendTCP@header
 32351  01355E  0101               	movlb	1	; () banked
 32352  013560  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 32353  013562  0101               	movlb	1	; () banked
 32354  013564  0E42               	movlw	low SendTCP@header
 32355  013566  0101               	movlb	1	; () banked
 32356  013568  6F00               	movwf	MACPutArray@val& (0+255),b
 32357  01356A  0E00               	movlw	0
 32358  01356C  0101               	movlb	1	; () banked
 32359  01356E  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 32360  013570  0E14               	movlw	20
 32361  013572  0101               	movlb	1	; () banked
 32362  013574  6F02               	movwf	MACPutArray@len& (0+255),b
 32363  013576  ECE4  F0FF         	call	_MACPutArray	;wreg free
 32364                           
 32365                           ;tcp.c: 3136: if(vTCPFlags & (0x02))
 32366  01357A  0101               	movlb	1	; () banked
 32367  01357C  A333               	btfss	SendTCP@vTCPFlags& (0+255),1,b
 32368  01357E  D010               	goto	l12276
 32369                           
 32370                           ; BSR set to: 1
 32371                           ;tcp.c: 3137: MACPutArray((uint8_t*)&options, sizeof(options));
 32372  013580  0101               	movlb	1	; () banked
 32373  013582  0E01               	movlw	high SendTCP@options
 32374  013584  0101               	movlb	1	; () banked
 32375  013586  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 32376  013588  0101               	movlb	1	; () banked
 32377  01358A  0E2D               	movlw	low SendTCP@options
 32378  01358C  0101               	movlb	1	; () banked
 32379  01358E  6F00               	movwf	MACPutArray@val& (0+255),b
 32380  013590  0E00               	movlw	0
 32381  013592  0101               	movlb	1	; () banked
 32382  013594  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 32383  013596  0E04               	movlw	4
 32384  013598  0101               	movlb	1	; () banked
 32385  01359A  6F02               	movwf	MACPutArray@len& (0+255),b
 32386  01359C  ECE4  F0FF         	call	_MACPutArray	;wreg free
 32387  0135A0                     l12276:
 32388                           
 32389                           ;tcp.c: 3140: MACSetReadPtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1u
      +                          l) + sizeof(ETHER_HEADER) + sizeof(IP_HEADER));
 32390  0135A0  0E12               	movlw	18
 32391  0135A2  0101               	movlb	1	; () banked
 32392  0135A4  6F01               	movwf	(MACSetReadPtr@address+1)& (0+255),b
 32393  0135A6  0EC9               	movlw	201
 32394  0135A8  0101               	movlb	1	; () banked
 32395  0135AA  6F00               	movwf	MACSetReadPtr@address& (0+255),b
 32396  0135AC  EC49  F0DD         	call	_MACSetReadPtr	;wreg free
 32397                           
 32398                           ;tcp.c: 3141: wVal.Val = CalcIPBufferChecksum(len);
 32399  0135B0  C134  F106         	movff	SendTCP@len,CalcIPBufferChecksum@len
 32400  0135B4  C135  F107         	movff	SendTCP@len+1,CalcIPBufferChecksum@len+1
 32401  0135B8  EC74  F0BE         	call	_CalcIPBufferChecksum	;wreg free
 32402  0135BC  0101               	movlb	1	; () banked
 32403  0135BE  C106  F131         	movff	?_CalcIPBufferChecksum,SendTCP@wVal
 32404  0135C2  0101               	movlb	1	; () banked
 32405  0135C4  C107  F132         	movff	?_CalcIPBufferChecksum+1,SendTCP@wVal+1
 32406                           
 32407                           ;tcp.c: 3149: MACSetWritePtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1
      +                          ul) + sizeof(ETHER_HEADER) + sizeof(IP_HEADER) + 16);
 32408  0135C8  0E12               	movlw	18
 32409  0135CA  0101               	movlb	1	; () banked
 32410  0135CC  6F01               	movwf	(MACSetWritePtr@address+1)& (0+255),b
 32411  0135CE  0ED9               	movlw	217
 32412  0135D0  0101               	movlb	1	; () banked
 32413  0135D2  6F00               	movwf	MACSetWritePtr@address& (0+255),b
 32414  0135D4  EC40  F0DD         	call	_MACSetWritePtr	;wreg free
 32415                           
 32416                           ;tcp.c: 3150: MACPutArray((uint8_t*)&wVal, sizeof(uint16_t));
 32417  0135D8  0101               	movlb	1	; () banked
 32418  0135DA  0E01               	movlw	high SendTCP@wVal
 32419  0135DC  0101               	movlb	1	; () banked
 32420  0135DE  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 32421  0135E0  0101               	movlb	1	; () banked
 32422  0135E2  0E31               	movlw	low SendTCP@wVal
 32423  0135E4  0101               	movlb	1	; () banked
 32424  0135E6  6F00               	movwf	MACPutArray@val& (0+255),b
 32425  0135E8  0E00               	movlw	0
 32426  0135EA  0101               	movlb	1	; () banked
 32427  0135EC  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 32428  0135EE  0E02               	movlw	2
 32429  0135F0  0101               	movlb	1	; () banked
 32430  0135F2  6F02               	movwf	MACPutArray@len& (0+255),b
 32431  0135F4  ECE4  F0FF         	call	_MACPutArray	;wreg free
 32432                           
 32433                           ;tcp.c: 3153: MACFlush();
 32434  0135F8  ECDD  F0D9         	call	_MACFlush	;wreg free
 32435  0135FC  0012               	return	
 32436  0135FE                     __end_of_SendTCP:
 32437                           	opt stack 0
 32438                           tblptru	equ	0xFF8
 32439                           tblptrh	equ	0xFF7
 32440                           tblptrl	equ	0xFF6
 32441                           tablat	equ	0xFF5
 32442                           prodh	equ	0xFF4
 32443                           prodl	equ	0xFF3
 32444                           intcon	equ	0xFF2
 32445                           indf0	equ	0xFEF
 32446                           postinc0	equ	0xFEE
 32447                           fsr0h	equ	0xFEA
 32448                           fsr0l	equ	0xFE9
 32449                           wreg	equ	0xFE8
 32450                           indf1	equ	0xFE7
 32451                           postinc1	equ	0xFE6
 32452                           postdec1	equ	0xFE5
 32453                           fsr1h	equ	0xFE2
 32454                           fsr1l	equ	0xFE1
 32455                           indf2	equ	0xFDF
 32456                           postinc2	equ	0xFDE
 32457                           postdec2	equ	0xFDD
 32458                           fsr2h	equ	0xFDA
 32459                           fsr2l	equ	0xFD9
 32460                           status	equ	0xFD8
 32461                           
 32462 ;; *************** function _SwapTCPHeader *****************
 32463 ;; Defined at:
 32464 ;;		line 3361 in file "../tcpip/tcp.c"
 32465 ;; Parameters:    Size  Location     Type
 32466 ;;  header          2    5[BANK1 ] PTR struct .
 32467 ;;		 -> SendTCP@header(20), TCPProcess@TCPHeader(20), 
 32468 ;; Auto vars:     Size  Location     Type
 32469 ;;		None
 32470 ;; Return value:  Size  Location     Type
 32471 ;;		None               void
 32472 ;; Registers used:
 32473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32474 ;; Tracked objects:
 32475 ;;		On entry : 0/0
 32476 ;;		On exit  : 0/0
 32477 ;;		Unchanged: 0/0
 32478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32479 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32481 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32482 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32483 ;;Total ram usage:        6 bytes
 32484 ;; Hardware stack levels used:    1
 32485 ;; Hardware stack levels required when called:   11
 32486 ;; This function calls:
 32487 ;;		_swapl
 32488 ;;		_swaps
 32489 ;; This function is called by:
 32490 ;;		_TCPProcess
 32491 ;;		_SendTCP
 32492 ;; This function uses a non-reentrant model
 32493 ;;
 32494                           
 32495                           	psect	text55
 32496  01610A                     __ptext55:
 32497                           	opt stack 0
 32498  01610A                     _SwapTCPHeader:
 32499                           	opt stack 15
 32500                           
 32501                           ;tcp.c: 3363: header->SourcePort = swaps(header->SourcePort);
 32502                           
 32503                           ;incstack = 0
 32504  01610A  C105  FFD9         	movff	SwapTCPHeader@header,fsr2l
 32505  01610E  C106  FFDA         	movff	SwapTCPHeader@header+1,fsr2h
 32506  016112  0101               	movlb	1	; () banked
 32507  016114  CFDE F100          	movff	postinc2,swaps@v
 32508  016118  0101               	movlb	1	; () banked
 32509  01611A  CFDD F101          	movff	postdec2,swaps@v+1
 32510  01611E  EC79  F0DC         	call	_swaps	;wreg free
 32511  016122  C105  FFD9         	movff	SwapTCPHeader@header,fsr2l
 32512  016126  C106  FFDA         	movff	SwapTCPHeader@header+1,fsr2h
 32513  01612A  0101               	movlb	1	; () banked
 32514  01612C  C100  FFDE         	movff	?_swaps,postinc2
 32515  016130  0101               	movlb	1	; () banked
 32516  016132  C101  FFDD         	movff	?_swaps+1,postdec2
 32517                           
 32518                           ; BSR set to: 1
 32519                           ;tcp.c: 3364: header->DestPort = swaps(header->DestPort);
 32520  016136  0101               	movlb	1	; () banked
 32521  016138  EE20 F002          	lfsr	2,2
 32522  01613C  0101               	movlb	1	; () banked
 32523  01613E  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32524  016140  26D9               	addwf	fsr2l,f,c
 32525  016142  0101               	movlb	1	; () banked
 32526  016144  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32527  016146  22DA               	addwfc	fsr2h,f,c
 32528  016148  0101               	movlb	1	; () banked
 32529  01614A  CFDE F100          	movff	postinc2,swaps@v
 32530  01614E  0101               	movlb	1	; () banked
 32531  016150  CFDD F101          	movff	postdec2,swaps@v+1
 32532  016154  EC79  F0DC         	call	_swaps	;wreg free
 32533  016158  0101               	movlb	1	; () banked
 32534  01615A  EE20 F002          	lfsr	2,2
 32535  01615E  0101               	movlb	1	; () banked
 32536  016160  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32537  016162  26D9               	addwf	fsr2l,f,c
 32538  016164  0101               	movlb	1	; () banked
 32539  016166  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32540  016168  22DA               	addwfc	fsr2h,f,c
 32541  01616A  0101               	movlb	1	; () banked
 32542  01616C  C100  FFDE         	movff	?_swaps,postinc2
 32543  016170  0101               	movlb	1	; () banked
 32544  016172  C101  FFDD         	movff	?_swaps+1,postdec2
 32545                           
 32546                           ; BSR set to: 1
 32547                           ;tcp.c: 3365: header->SeqNumber = swapl(header->SeqNumber);
 32548  016176  0101               	movlb	1	; () banked
 32549  016178  EE20 F004          	lfsr	2,4
 32550  01617C  0101               	movlb	1	; () banked
 32551  01617E  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32552  016180  26D9               	addwf	fsr2l,f,c
 32553  016182  0101               	movlb	1	; () banked
 32554  016184  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32555  016186  22DA               	addwfc	fsr2h,f,c
 32556  016188  0101               	movlb	1	; () banked
 32557  01618A  CFDE F100          	movff	postinc2,swapl@v
 32558  01618E  0101               	movlb	1	; () banked
 32559  016190  CFDE F101          	movff	postinc2,swapl@v+1
 32560  016194  0101               	movlb	1	; () banked
 32561  016196  CFDE F102          	movff	postinc2,swapl@v+2
 32562  01619A  0101               	movlb	1	; () banked
 32563  01619C  CFDE F103          	movff	postinc2,swapl@v+3
 32564  0161A0  EC3F  F0D9         	call	_swapl	;wreg free
 32565  0161A4  C100  F107         	movff	?_swapl,??_SwapTCPHeader
 32566  0161A8  C101  F108         	movff	?_swapl+1,??_SwapTCPHeader+1
 32567  0161AC  C102  F109         	movff	?_swapl+2,??_SwapTCPHeader+2
 32568  0161B0  C103  F10A         	movff	?_swapl+3,??_SwapTCPHeader+3
 32569  0161B4  0101               	movlb	1	; () banked
 32570  0161B6  EE20 F004          	lfsr	2,4
 32571  0161BA  0101               	movlb	1	; () banked
 32572  0161BC  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32573  0161BE  26D9               	addwf	fsr2l,f,c
 32574  0161C0  0101               	movlb	1	; () banked
 32575  0161C2  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32576  0161C4  22DA               	addwfc	fsr2h,f,c
 32577  0161C6  C107  FFDE         	movff	??_SwapTCPHeader,postinc2
 32578  0161CA  C108  FFDE         	movff	??_SwapTCPHeader+1,postinc2
 32579  0161CE  C109  FFDE         	movff	??_SwapTCPHeader+2,postinc2
 32580  0161D2  C10A  FFDD         	movff	??_SwapTCPHeader+3,postdec2
 32581  0161D6  06D9               	decf	fsr2l,f,c
 32582  0161D8  06D9               	decf	fsr2l,f,c
 32583                           
 32584                           ; BSR set to: 1
 32585                           ;tcp.c: 3366: header->AckNumber = swapl(header->AckNumber);
 32586  0161DA  0101               	movlb	1	; () banked
 32587  0161DC  EE20 F008          	lfsr	2,8
 32588  0161E0  0101               	movlb	1	; () banked
 32589  0161E2  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32590  0161E4  26D9               	addwf	fsr2l,f,c
 32591  0161E6  0101               	movlb	1	; () banked
 32592  0161E8  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32593  0161EA  22DA               	addwfc	fsr2h,f,c
 32594  0161EC  0101               	movlb	1	; () banked
 32595  0161EE  CFDE F100          	movff	postinc2,swapl@v
 32596  0161F2  0101               	movlb	1	; () banked
 32597  0161F4  CFDE F101          	movff	postinc2,swapl@v+1
 32598  0161F8  0101               	movlb	1	; () banked
 32599  0161FA  CFDE F102          	movff	postinc2,swapl@v+2
 32600  0161FE  0101               	movlb	1	; () banked
 32601  016200  CFDE F103          	movff	postinc2,swapl@v+3
 32602  016204  EC3F  F0D9         	call	_swapl	;wreg free
 32603  016208  C100  F107         	movff	?_swapl,??_SwapTCPHeader
 32604  01620C  C101  F108         	movff	?_swapl+1,??_SwapTCPHeader+1
 32605  016210  C102  F109         	movff	?_swapl+2,??_SwapTCPHeader+2
 32606  016214  C103  F10A         	movff	?_swapl+3,??_SwapTCPHeader+3
 32607  016218  0101               	movlb	1	; () banked
 32608  01621A  EE20 F008          	lfsr	2,8
 32609  01621E  0101               	movlb	1	; () banked
 32610  016220  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32611  016222  26D9               	addwf	fsr2l,f,c
 32612  016224  0101               	movlb	1	; () banked
 32613  016226  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32614  016228  22DA               	addwfc	fsr2h,f,c
 32615  01622A  C107  FFDE         	movff	??_SwapTCPHeader,postinc2
 32616  01622E  C108  FFDE         	movff	??_SwapTCPHeader+1,postinc2
 32617  016232  C109  FFDE         	movff	??_SwapTCPHeader+2,postinc2
 32618  016236  C10A  FFDD         	movff	??_SwapTCPHeader+3,postdec2
 32619  01623A  06D9               	decf	fsr2l,f,c
 32620  01623C  06D9               	decf	fsr2l,f,c
 32621                           
 32622                           ; BSR set to: 1
 32623                           ;tcp.c: 3367: header->Window = swaps(header->Window);
 32624  01623E  0101               	movlb	1	; () banked
 32625  016240  EE20 F00E          	lfsr	2,14
 32626  016244  0101               	movlb	1	; () banked
 32627  016246  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32628  016248  26D9               	addwf	fsr2l,f,c
 32629  01624A  0101               	movlb	1	; () banked
 32630  01624C  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32631  01624E  22DA               	addwfc	fsr2h,f,c
 32632  016250  0101               	movlb	1	; () banked
 32633  016252  CFDE F100          	movff	postinc2,swaps@v
 32634  016256  0101               	movlb	1	; () banked
 32635  016258  CFDD F101          	movff	postdec2,swaps@v+1
 32636  01625C  EC79  F0DC         	call	_swaps	;wreg free
 32637  016260  0101               	movlb	1	; () banked
 32638  016262  EE20 F00E          	lfsr	2,14
 32639  016266  0101               	movlb	1	; () banked
 32640  016268  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32641  01626A  26D9               	addwf	fsr2l,f,c
 32642  01626C  0101               	movlb	1	; () banked
 32643  01626E  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32644  016270  22DA               	addwfc	fsr2h,f,c
 32645  016272  0101               	movlb	1	; () banked
 32646  016274  C100  FFDE         	movff	?_swaps,postinc2
 32647  016278  0101               	movlb	1	; () banked
 32648  01627A  C101  FFDD         	movff	?_swaps+1,postdec2
 32649                           
 32650                           ; BSR set to: 1
 32651                           ;tcp.c: 3368: header->Checksum = swaps(header->Checksum);
 32652  01627E  0101               	movlb	1	; () banked
 32653  016280  EE20 F010          	lfsr	2,16
 32654  016284  0101               	movlb	1	; () banked
 32655  016286  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32656  016288  26D9               	addwf	fsr2l,f,c
 32657  01628A  0101               	movlb	1	; () banked
 32658  01628C  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32659  01628E  22DA               	addwfc	fsr2h,f,c
 32660  016290  0101               	movlb	1	; () banked
 32661  016292  CFDE F100          	movff	postinc2,swaps@v
 32662  016296  0101               	movlb	1	; () banked
 32663  016298  CFDD F101          	movff	postdec2,swaps@v+1
 32664  01629C  EC79  F0DC         	call	_swaps	;wreg free
 32665  0162A0  0101               	movlb	1	; () banked
 32666  0162A2  EE20 F010          	lfsr	2,16
 32667  0162A6  0101               	movlb	1	; () banked
 32668  0162A8  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32669  0162AA  26D9               	addwf	fsr2l,f,c
 32670  0162AC  0101               	movlb	1	; () banked
 32671  0162AE  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32672  0162B0  22DA               	addwfc	fsr2h,f,c
 32673  0162B2  0101               	movlb	1	; () banked
 32674  0162B4  C100  FFDE         	movff	?_swaps,postinc2
 32675  0162B8  0101               	movlb	1	; () banked
 32676  0162BA  C101  FFDD         	movff	?_swaps+1,postdec2
 32677                           
 32678                           ; BSR set to: 1
 32679                           ;tcp.c: 3369: header->UrgentPointer = swaps(header->UrgentPointer);
 32680  0162BE  0101               	movlb	1	; () banked
 32681  0162C0  EE20 F012          	lfsr	2,18
 32682  0162C4  0101               	movlb	1	; () banked
 32683  0162C6  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32684  0162C8  26D9               	addwf	fsr2l,f,c
 32685  0162CA  0101               	movlb	1	; () banked
 32686  0162CC  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32687  0162CE  22DA               	addwfc	fsr2h,f,c
 32688  0162D0  0101               	movlb	1	; () banked
 32689  0162D2  CFDE F100          	movff	postinc2,swaps@v
 32690  0162D6  0101               	movlb	1	; () banked
 32691  0162D8  CFDD F101          	movff	postdec2,swaps@v+1
 32692  0162DC  EC79  F0DC         	call	_swaps	;wreg free
 32693  0162E0  0101               	movlb	1	; () banked
 32694  0162E2  EE20 F012          	lfsr	2,18
 32695  0162E6  0101               	movlb	1	; () banked
 32696  0162E8  5105               	movf	SwapTCPHeader@header& (0+255),w,b
 32697  0162EA  26D9               	addwf	fsr2l,f,c
 32698  0162EC  0101               	movlb	1	; () banked
 32699  0162EE  5106               	movf	(SwapTCPHeader@header+1)& (0+255),w,b
 32700  0162F0  22DA               	addwfc	fsr2h,f,c
 32701  0162F2  0101               	movlb	1	; () banked
 32702  0162F4  C100  FFDE         	movff	?_swaps,postinc2
 32703  0162F8  0101               	movlb	1	; () banked
 32704  0162FA  C101  FFDD         	movff	?_swaps+1,postdec2
 32705                           
 32706                           ; BSR set to: 1
 32707  0162FE  0012               	return	
 32708  016300                     __end_of_SwapTCPHeader:
 32709                           	opt stack 0
 32710                           tblptru	equ	0xFF8
 32711                           tblptrh	equ	0xFF7
 32712                           tblptrl	equ	0xFF6
 32713                           tablat	equ	0xFF5
 32714                           prodh	equ	0xFF4
 32715                           prodl	equ	0xFF3
 32716                           intcon	equ	0xFF2
 32717                           indf0	equ	0xFEF
 32718                           postinc0	equ	0xFEE
 32719                           fsr0h	equ	0xFEA
 32720                           fsr0l	equ	0xFE9
 32721                           wreg	equ	0xFE8
 32722                           indf1	equ	0xFE7
 32723                           postinc1	equ	0xFE6
 32724                           postdec1	equ	0xFE5
 32725                           fsr1h	equ	0xFE2
 32726                           fsr1l	equ	0xFE1
 32727                           indf2	equ	0xFDF
 32728                           postinc2	equ	0xFDE
 32729                           postdec2	equ	0xFDD
 32730                           fsr2h	equ	0xFDA
 32731                           fsr2l	equ	0xFD9
 32732                           status	equ	0xFD8
 32733                           
 32734 ;; *************** function _swapl *****************
 32735 ;; Defined at:
 32736 ;;		line 1103 in file "../tcpip/helpers.c"
 32737 ;; Parameters:    Size  Location     Type
 32738 ;;  v               4    0[BANK1 ] unsigned long 
 32739 ;; Auto vars:     Size  Location     Type
 32740 ;;		None
 32741 ;; Return value:  Size  Location     Type
 32742 ;;                  4    0[BANK1 ] unsigned long 
 32743 ;; Registers used:
 32744 ;;		wreg, status,2, status,0
 32745 ;; Tracked objects:
 32746 ;;		On entry : 0/0
 32747 ;;		On exit  : 0/0
 32748 ;;		Unchanged: 0/0
 32749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32750 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32753 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32754 ;;Total ram usage:        4 bytes
 32755 ;; Hardware stack levels used:    1
 32756 ;; Hardware stack levels required when called:   10
 32757 ;; This function calls:
 32758 ;;		Nothing
 32759 ;; This function is called by:
 32760 ;;		_SwapTCPHeader
 32761 ;; This function uses a non-reentrant model
 32762 ;;
 32763                           
 32764                           	psect	text56
 32765  01B27E                     __ptext56:
 32766                           	opt stack 0
 32767  01B27E                     _swapl:
 32768                           	opt stack 15
 32769                           
 32770                           ;helpers.c: 1107: ((TCPIP_UINT32_VAL*)&v)->v[0] ^= ((TCPIP_UINT32_VAL*)&v)->v[3];
 32771                           
 32772                           ; BSR set to: 1
 32773                           ;incstack = 0
 32774  01B27E  0101               	movlb	1	; () banked
 32775  01B280  5103               	movf	(swapl@v+3)& (0+255),w,b
 32776  01B282  0101               	movlb	1	; () banked
 32777  01B284  1B00               	xorwf	swapl@v& (0+255),f,b
 32778                           
 32779                           ;helpers.c: 1108: ((TCPIP_UINT32_VAL*)&v)->v[3] ^= ((TCPIP_UINT32_VAL*)&v)->v[0];
 32780  01B286  0101               	movlb	1	; () banked
 32781  01B288  5100               	movf	swapl@v& (0+255),w,b
 32782  01B28A  0101               	movlb	1	; () banked
 32783  01B28C  1B03               	xorwf	(swapl@v+3)& (0+255),f,b
 32784                           
 32785                           ;helpers.c: 1109: ((TCPIP_UINT32_VAL*)&v)->v[0] ^= ((TCPIP_UINT32_VAL*)&v)->v[3];
 32786  01B28E  0101               	movlb	1	; () banked
 32787  01B290  5103               	movf	(swapl@v+3)& (0+255),w,b
 32788  01B292  0101               	movlb	1	; () banked
 32789  01B294  1B00               	xorwf	swapl@v& (0+255),f,b
 32790                           
 32791                           ;helpers.c: 1112: ((TCPIP_UINT32_VAL*)&v)->v[1] ^= ((TCPIP_UINT32_VAL*)&v)->v[2];
 32792  01B296  0101               	movlb	1	; () banked
 32793  01B298  5102               	movf	(swapl@v+2)& (0+255),w,b
 32794  01B29A  0101               	movlb	1	; () banked
 32795  01B29C  1B01               	xorwf	(swapl@v+1)& (0+255),f,b
 32796                           
 32797                           ;helpers.c: 1113: ((TCPIP_UINT32_VAL*)&v)->v[2] ^= ((TCPIP_UINT32_VAL*)&v)->v[1];
 32798  01B29E  0101               	movlb	1	; () banked
 32799  01B2A0  5101               	movf	(swapl@v+1)& (0+255),w,b
 32800  01B2A2  0101               	movlb	1	; () banked
 32801  01B2A4  1B02               	xorwf	(swapl@v+2)& (0+255),f,b
 32802                           
 32803                           ;helpers.c: 1114: ((TCPIP_UINT32_VAL*)&v)->v[1] ^= ((TCPIP_UINT32_VAL*)&v)->v[2];
 32804  01B2A6  0101               	movlb	1	; () banked
 32805  01B2A8  5102               	movf	(swapl@v+2)& (0+255),w,b
 32806  01B2AA  0101               	movlb	1	; () banked
 32807  01B2AC  1B01               	xorwf	(swapl@v+1)& (0+255),f,b
 32808                           
 32809                           ; BSR set to: 1
 32810                           ;helpers.c: 1116: return v;
 32811  01B2AE  C100  F100         	movff	swapl@v,?_swapl
 32812  01B2B2  C101  F101         	movff	swapl@v+1,?_swapl+1
 32813  01B2B6  C102  F102         	movff	swapl@v+2,?_swapl+2
 32814  01B2BA  C103  F103         	movff	swapl@v+3,?_swapl+3
 32815  01B2BE  0012               	return	
 32816  01B2C0                     __end_of_swapl:
 32817                           	opt stack 0
 32818                           tblptru	equ	0xFF8
 32819                           tblptrh	equ	0xFF7
 32820                           tblptrl	equ	0xFF6
 32821                           tablat	equ	0xFF5
 32822                           prodh	equ	0xFF4
 32823                           prodl	equ	0xFF3
 32824                           intcon	equ	0xFF2
 32825                           indf0	equ	0xFEF
 32826                           postinc0	equ	0xFEE
 32827                           fsr0h	equ	0xFEA
 32828                           fsr0l	equ	0xFE9
 32829                           wreg	equ	0xFE8
 32830                           indf1	equ	0xFE7
 32831                           postinc1	equ	0xFE6
 32832                           postdec1	equ	0xFE5
 32833                           fsr1h	equ	0xFE2
 32834                           fsr1l	equ	0xFE1
 32835                           indf2	equ	0xFDF
 32836                           postinc2	equ	0xFDE
 32837                           postdec2	equ	0xFDD
 32838                           fsr2h	equ	0xFDA
 32839                           fsr2l	equ	0xFD9
 32840                           status	equ	0xFD8
 32841                           
 32842 ;; *************** function _MACGetFreeRxSize *****************
 32843 ;; Defined at:
 32844 ;;		line 371 in file "../tcpip/ETH97J60.c"
 32845 ;; Parameters:    Size  Location     Type
 32846 ;;		None
 32847 ;; Auto vars:     Size  Location     Type
 32848 ;;  ReadPT          2    6[BANK1 ] struct .
 32849 ;;  WritePT         2    4[BANK1 ] struct .
 32850 ;; Return value:  Size  Location     Type
 32851 ;;                  2    0[BANK1 ] unsigned int 
 32852 ;; Registers used:
 32853 ;;		wreg, status,2, status,0
 32854 ;; Tracked objects:
 32855 ;;		On entry : 0/0
 32856 ;;		On exit  : 0/0
 32857 ;;		Unchanged: 0/0
 32858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 32859 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32860 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32861 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32862 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32863 ;;Total ram usage:        8 bytes
 32864 ;; Hardware stack levels used:    1
 32865 ;; Hardware stack levels required when called:   10
 32866 ;; This function calls:
 32867 ;;		Nothing
 32868 ;; This function is called by:
 32869 ;;		_SendTCP
 32870 ;; This function uses a non-reentrant model
 32871 ;;
 32872                           
 32873                           	psect	text57
 32874  019548                     __ptext57:
 32875                           	opt stack 0
 32876  019548                     _MACGetFreeRxSize:
 32877                           	opt stack 16
 32878  019548                     l276:
 32879                           
 32880                           ;ETH97J60.c: 381: ReadPT.v[0] = EPKTCNT;
 32881  019548  CED9 F106          	movff	3801,MACGetFreeRxSize@ReadPT	;volatile
 32882                           
 32883                           ;ETH97J60.c: 383: WritePT.Val = ERXWRPT;
 32884  01954C  CEEE F104          	movff	3822,MACGetFreeRxSize@WritePT	;volatile
 32885  019550  CEEF F105          	movff	3823,MACGetFreeRxSize@WritePT+1	;volatile
 32886                           
 32887                           ;ETH97J60.c: 384: } while(EPKTCNT != ReadPT.v[0]);
 32888  019554  010E               	movlb	14	; () banked
 32889  019556  51D9               	movf	217,w,b	;volatile
 32890  019558  0101               	movlb	1	; () banked
 32891  01955A  6306               	cpfseq	MACGetFreeRxSize@ReadPT& (0+255),b
 32892  01955C  D7F5               	goto	l276
 32893                           
 32894                           ; BSR set to: 1
 32895                           ;ETH97J60.c: 387: ReadPT.Val = ERXRDPT;
 32896  01955E  CEEC F106          	movff	3820,MACGetFreeRxSize@ReadPT	;volatile
 32897  019562  CEED F107          	movff	3821,MACGetFreeRxSize@ReadPT+1	;volatile
 32898                           
 32899                           ; BSR set to: 1
 32900                           ;ETH97J60.c: 392: if(WritePT.Val > ReadPT.Val)
 32901  019566  0101               	movlb	1	; () banked
 32902  019568  5104               	movf	MACGetFreeRxSize@WritePT& (0+255),w,b
 32903  01956A  0101               	movlb	1	; () banked
 32904  01956C  5D06               	subwf	MACGetFreeRxSize@ReadPT& (0+255),w,b
 32905  01956E  0101               	movlb	1	; () banked
 32906  019570  5105               	movf	(MACGetFreeRxSize@WritePT+1)& (0+255),w,b
 32907  019572  0101               	movlb	1	; () banked
 32908  019574  5907               	subwfb	(MACGetFreeRxSize@ReadPT+1)& (0+255),w,b
 32909  019576  B0D8               	btfsc	status,0,c
 32910  019578  D023               	goto	l11098
 32911                           
 32912                           ; BSR set to: 1
 32913                           ;ETH97J60.c: 393: {
 32914                           ;ETH97J60.c: 394: return (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) 
      +                          | 0x0001ul) - (0ul)) - (WritePT.Val - ReadPT.Val);
 32915  01957A  0101               	movlb	1	; () banked
 32916  01957C  C106  F102         	movff	MACGetFreeRxSize@ReadPT,??_MACGetFreeRxSize
 32917  019580  0101               	movlb	1	; () banked
 32918  019582  C107  F103         	movff	MACGetFreeRxSize@ReadPT+1,??_MACGetFreeRxSize+1
 32919  019586  0101               	movlb	1	; () banked
 32920  019588  1F02               	comf	??_MACGetFreeRxSize& (0+255),f,b
 32921  01958A  1F03               	comf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32922  01958C  4B02               	infsnz	??_MACGetFreeRxSize& (0+255),f,b
 32923  01958E  2B03               	incf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32924  019590  0101               	movlb	1	; () banked
 32925  019592  5104               	movf	MACGetFreeRxSize@WritePT& (0+255),w,b
 32926  019594  0101               	movlb	1	; () banked
 32927  019596  2702               	addwf	??_MACGetFreeRxSize& (0+255),f,b
 32928  019598  0101               	movlb	1	; () banked
 32929  01959A  5105               	movf	(MACGetFreeRxSize@WritePT+1)& (0+255),w,b
 32930  01959C  0101               	movlb	1	; () banked
 32931  01959E  2303               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32932  0195A0  0101               	movlb	1	; () banked
 32933  0195A2  1F02               	comf	??_MACGetFreeRxSize& (0+255),f,b
 32934  0195A4  1F03               	comf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32935  0195A6  4B02               	infsnz	??_MACGetFreeRxSize& (0+255),f,b
 32936  0195A8  2B03               	incf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32937  0195AA  0EA5               	movlw	165
 32938  0195AC  0101               	movlb	1	; () banked
 32939  0195AE  2502               	addwf	??_MACGetFreeRxSize& (0+255),w,b
 32940  0195B0  0101               	movlb	1	; () banked
 32941  0195B2  6F00               	movwf	?_MACGetFreeRxSize& (0+255),b
 32942  0195B4  0E12               	movlw	18
 32943  0195B6  0101               	movlb	1	; () banked
 32944  0195B8  2103               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),w,b
 32945  0195BA  0101               	movlb	1	; () banked
 32946  0195BC  6F01               	movwf	(?_MACGetFreeRxSize+1)& (0+255),b
 32947  0195BE  0012               	return	
 32948  0195C0                     l11098:
 32949                           
 32950                           ; BSR set to: 1
 32951                           ;ETH97J60.c: 396: else if(WritePT.Val == ReadPT.Val)
 32952  0195C0  0101               	movlb	1	; () banked
 32953  0195C2  5107               	movf	(MACGetFreeRxSize@ReadPT+1)& (0+255),w,b
 32954  0195C4  0101               	movlb	1	; () banked
 32955  0195C6  1905               	xorwf	(MACGetFreeRxSize@WritePT+1)& (0+255),w,b
 32956  0195C8  E104               	bnz	u11915
 32957  0195CA  0101               	movlb	1	; () banked
 32958  0195CC  5106               	movf	MACGetFreeRxSize@ReadPT& (0+255),w,b
 32959  0195CE  0101               	movlb	1	; () banked
 32960  0195D0  1904               	xorwf	MACGetFreeRxSize@WritePT& (0+255),w,b
 32961  0195D2                     u11915:
 32962  0195D2  A4D8               	btfss	status,2,c
 32963  0195D4  D007               	goto	l11106
 32964                           
 32965                           ; BSR set to: 1
 32966                           ;ETH97J60.c: 397: {
 32967                           ;ETH97J60.c: 398: return (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) 
      +                          | 0x0001ul)-(0ul)+1ul) - 1;
 32968  0195D6  0E12               	movlw	18
 32969  0195D8  0101               	movlb	1	; () banked
 32970  0195DA  6F01               	movwf	(?_MACGetFreeRxSize+1)& (0+255),b
 32971  0195DC  0EA5               	movlw	165
 32972  0195DE  0101               	movlb	1	; () banked
 32973  0195E0  6F00               	movwf	?_MACGetFreeRxSize& (0+255),b
 32974  0195E2  0012               	return	
 32975  0195E4                     l11106:
 32976                           
 32977                           ; BSR set to: 1
 32978                           ;ETH97J60.c: 400: else
 32979                           ;ETH97J60.c: 401: {
 32980                           ;ETH97J60.c: 402: return ReadPT.Val - WritePT.Val - 1;
 32981  0195E4  0101               	movlb	1	; () banked
 32982  0195E6  C104  F102         	movff	MACGetFreeRxSize@WritePT,??_MACGetFreeRxSize
 32983  0195EA  0101               	movlb	1	; () banked
 32984  0195EC  C105  F103         	movff	MACGetFreeRxSize@WritePT+1,??_MACGetFreeRxSize+1
 32985  0195F0  0101               	movlb	1	; () banked
 32986  0195F2  1F02               	comf	??_MACGetFreeRxSize& (0+255),f,b
 32987  0195F4  1F03               	comf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32988  0195F6  4B02               	infsnz	??_MACGetFreeRxSize& (0+255),f,b
 32989  0195F8  2B03               	incf	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32990  0195FA  0101               	movlb	1	; () banked
 32991  0195FC  5106               	movf	MACGetFreeRxSize@ReadPT& (0+255),w,b
 32992  0195FE  0101               	movlb	1	; () banked
 32993  019600  2702               	addwf	??_MACGetFreeRxSize& (0+255),f,b
 32994  019602  0101               	movlb	1	; () banked
 32995  019604  5107               	movf	(MACGetFreeRxSize@ReadPT+1)& (0+255),w,b
 32996  019606  0101               	movlb	1	; () banked
 32997  019608  2303               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),f,b
 32998  01960A  0EFF               	movlw	255
 32999  01960C  0101               	movlb	1	; () banked
 33000  01960E  2502               	addwf	??_MACGetFreeRxSize& (0+255),w,b
 33001  019610  0101               	movlb	1	; () banked
 33002  019612  6F00               	movwf	?_MACGetFreeRxSize& (0+255),b
 33003  019614  0EFF               	movlw	255
 33004  019616  0101               	movlb	1	; () banked
 33005  019618  2103               	addwfc	(??_MACGetFreeRxSize+1)& (0+255),w,b
 33006  01961A  0101               	movlb	1	; () banked
 33007  01961C  6F01               	movwf	(?_MACGetFreeRxSize+1)& (0+255),b
 33008  01961E  0012               	return	
 33009  019620                     __end_of_MACGetFreeRxSize:
 33010                           	opt stack 0
 33011                           tblptru	equ	0xFF8
 33012                           tblptrh	equ	0xFF7
 33013                           tblptrl	equ	0xFF6
 33014                           tablat	equ	0xFF5
 33015                           prodh	equ	0xFF4
 33016                           prodl	equ	0xFF3
 33017                           intcon	equ	0xFF2
 33018                           indf0	equ	0xFEF
 33019                           postinc0	equ	0xFEE
 33020                           fsr0h	equ	0xFEA
 33021                           fsr0l	equ	0xFE9
 33022                           wreg	equ	0xFE8
 33023                           indf1	equ	0xFE7
 33024                           postinc1	equ	0xFE6
 33025                           postdec1	equ	0xFE5
 33026                           fsr1h	equ	0xFE2
 33027                           fsr1l	equ	0xFE1
 33028                           indf2	equ	0xFDF
 33029                           postinc2	equ	0xFDE
 33030                           postdec2	equ	0xFDD
 33031                           fsr2h	equ	0xFDA
 33032                           fsr2l	equ	0xFD9
 33033                           status	equ	0xFD8
 33034                           
 33035 ;; *************** function _IPPutHeader *****************
 33036 ;; Defined at:
 33037 ;;		line 234 in file "../tcpip/ip.c"
 33038 ;; Parameters:    Size  Location     Type
 33039 ;;  remote          2   14[BANK1 ] PTR struct .
 33040 ;;		 -> MyTCB.remote(10), MyTCB(39), 
 33041 ;;  protocol        1   16[BANK1 ] unsigned char 
 33042 ;;  len             2   17[BANK1 ] unsigned int 
 33043 ;; Auto vars:     Size  Location     Type
 33044 ;;  header         20   19[BANK1 ] struct _IP_HEADER
 33045 ;; Return value:  Size  Location     Type
 33046 ;;                  2   14[BANK1 ] unsigned int 
 33047 ;; Registers used:
 33048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33049 ;; Tracked objects:
 33050 ;;		On entry : 0/0
 33051 ;;		On exit  : 0/0
 33052 ;;		Unchanged: 0/0
 33053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33054 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33055 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33057 ;;      Totals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33058 ;;Total ram usage:       25 bytes
 33059 ;; Hardware stack levels used:    1
 33060 ;; Hardware stack levels required when called:   12
 33061 ;; This function calls:
 33062 ;;		_CalcIPChecksum
 33063 ;;		_MACPutArray
 33064 ;;		_MACPutHeader
 33065 ;;		_SwapIPHeader
 33066 ;; This function is called by:
 33067 ;;		_SendTCP
 33068 ;; This function uses a non-reentrant model
 33069 ;;
 33070                           
 33071                           	psect	text58
 33072  01856A                     __ptext58:
 33073                           	opt stack 0
 33074  01856A                     _IPPutHeader:
 33075                           	opt stack 14
 33076                           
 33077                           ;ip.c: 238: IP_HEADER header;
 33078                           ;ip.c: 240: IPHeaderLen = sizeof(IP_HEADER);
 33079                           
 33080                           ; BSR set to: 1
 33081                           ;incstack = 0
 33082  01856A  0E14               	movlw	20
 33083  01856C  0101               	movlb	1	; () banked
 33084  01856E  6FB5               	movwf	_IPHeaderLen& (0+255),b
 33085                           
 33086                           ;ip.c: 242: header.VersionIHL = (0x40u) | (0x05);
 33087  018570  0E45               	movlw	69
 33088  018572  0101               	movlb	1	; () banked
 33089  018574  6F13               	movwf	IPPutHeader@header& (0+255),b
 33090                           
 33091                           ;ip.c: 243: header.TypeOfService = ((0x00) | (0x00));
 33092  018576  0E00               	movlw	0
 33093  018578  0101               	movlb	1	; () banked
 33094  01857A  6F14               	movwf	(IPPutHeader@header+1)& (0+255),b
 33095                           
 33096                           ; BSR set to: 1
 33097                           ;ip.c: 244: header.TotalLength = sizeof(header) + len;
 33098  01857C  0E14               	movlw	20
 33099  01857E  0101               	movlb	1	; () banked
 33100  018580  2511               	addwf	IPPutHeader@len& (0+255),w,b
 33101  018582  0101               	movlb	1	; () banked
 33102  018584  6F15               	movwf	(IPPutHeader@header+2)& (0+255),b
 33103  018586  0E00               	movlw	0
 33104  018588  0101               	movlb	1	; () banked
 33105  01858A  2112               	addwfc	(IPPutHeader@len+1)& (0+255),w,b
 33106  01858C  0101               	movlb	1	; () banked
 33107  01858E  6F16               	movwf	(IPPutHeader@header+3)& (0+255),b
 33108                           
 33109                           ; BSR set to: 1
 33110                           ;ip.c: 245: header.Identification = ++_Identifier;
 33111  018590  0100               	movlb	0	; () banked
 33112  018592  4BE7               	infsnz	__Identifier& (0+255),f,b
 33113  018594  2BE8               	incf	(__Identifier+1)& (0+255),f,b
 33114  018596  C0E7  F117         	movff	__Identifier,IPPutHeader@header+4
 33115  01859A  C0E8  F118         	movff	__Identifier+1,IPPutHeader@header+5
 33116                           
 33117                           ; BSR set to: 0
 33118                           ;ip.c: 246: header.FragmentInfo = 0;
 33119  01859E  0E00               	movlw	0
 33120  0185A0  0101               	movlb	1	; () banked
 33121  0185A2  6F1A               	movwf	(IPPutHeader@header+7)& (0+255),b
 33122  0185A4  0E00               	movlw	0
 33123  0185A6  0101               	movlb	1	; () banked
 33124  0185A8  6F19               	movwf	(IPPutHeader@header+6)& (0+255),b
 33125                           
 33126                           ; BSR set to: 1
 33127                           ;ip.c: 247: header.TimeToLive = (100);
 33128  0185AA  0E64               	movlw	100
 33129  0185AC  0101               	movlb	1	; () banked
 33130  0185AE  6F1B               	movwf	(IPPutHeader@header+8)& (0+255),b
 33131                           
 33132                           ; BSR set to: 1
 33133                           ;ip.c: 248: header.Protocol = protocol;
 33134  0185B0  C110  F11C         	movff	IPPutHeader@protocol,IPPutHeader@header+9
 33135                           
 33136                           ; BSR set to: 1
 33137                           ;ip.c: 249: header.HeaderChecksum = 0;
 33138  0185B4  0E00               	movlw	0
 33139  0185B6  0101               	movlb	1	; () banked
 33140  0185B8  6F1E               	movwf	(IPPutHeader@header+11)& (0+255),b
 33141  0185BA  0E00               	movlw	0
 33142  0185BC  0101               	movlb	1	; () banked
 33143  0185BE  6F1D               	movwf	(IPPutHeader@header+10)& (0+255),b
 33144                           
 33145                           ; BSR set to: 1
 33146                           ;ip.c: 250: header.SourceAddress = AppConfig.MyIPAddr;
 33147  0185C0  C23C  F11F         	movff	_AppConfig,IPPutHeader@header+12
 33148  0185C4  C23D  F120         	movff	_AppConfig+1,IPPutHeader@header+13
 33149  0185C8  C23E  F121         	movff	_AppConfig+2,IPPutHeader@header+14
 33150  0185CC  C23F  F122         	movff	_AppConfig+3,IPPutHeader@header+15
 33151                           
 33152                           ; BSR set to: 1
 33153                           ;ip.c: 252: header.DestAddress.Val = remote->IPAddr.Val;
 33154  0185D0  C10E  FFD9         	movff	IPPutHeader@remote,fsr2l
 33155  0185D4  C10F  FFDA         	movff	IPPutHeader@remote+1,fsr2h
 33156  0185D8  0101               	movlb	1	; () banked
 33157  0185DA  CFDE F123          	movff	postinc2,IPPutHeader@header+16
 33158  0185DE  0101               	movlb	1	; () banked
 33159  0185E0  CFDE F124          	movff	postinc2,IPPutHeader@header+17
 33160  0185E4  0101               	movlb	1	; () banked
 33161  0185E6  CFDE F125          	movff	postinc2,IPPutHeader@header+18
 33162  0185EA  0101               	movlb	1	; () banked
 33163  0185EC  CFDE F126          	movff	postinc2,IPPutHeader@header+19
 33164                           
 33165                           ; BSR set to: 1
 33166                           ;ip.c: 254: SwapIPHeader(&header);
 33167  0185F0  0101               	movlb	1	; () banked
 33168  0185F2  0E01               	movlw	high IPPutHeader@header
 33169  0185F4  0101               	movlb	1	; () banked
 33170  0185F6  6F06               	movwf	(SwapIPHeader@h+1)& (0+255),b
 33171  0185F8  0101               	movlb	1	; () banked
 33172  0185FA  0E13               	movlw	low IPPutHeader@header
 33173  0185FC  0101               	movlb	1	; () banked
 33174  0185FE  6F05               	movwf	SwapIPHeader@h& (0+255),b
 33175  018600  EC1B  F0CF         	call	_SwapIPHeader	;wreg free
 33176                           
 33177                           ;ip.c: 256: header.HeaderChecksum = CalcIPChecksum((uint8_t*)&header, sizeof(header));
 33178  018604  0101               	movlb	1	; () banked
 33179  018606  0E01               	movlw	high IPPutHeader@header
 33180  018608  0101               	movlb	1	; () banked
 33181  01860A  6F01               	movwf	(CalcIPChecksum@buffer+1)& (0+255),b
 33182  01860C  0101               	movlb	1	; () banked
 33183  01860E  0E13               	movlw	low IPPutHeader@header
 33184  018610  0101               	movlb	1	; () banked
 33185  018612  6F00               	movwf	CalcIPChecksum@buffer& (0+255),b
 33186  018614  0E00               	movlw	0
 33187  018616  0101               	movlb	1	; () banked
 33188  018618  6F03               	movwf	(CalcIPChecksum@count+1)& (0+255),b
 33189  01861A  0E14               	movlw	20
 33190  01861C  0101               	movlb	1	; () banked
 33191  01861E  6F02               	movwf	CalcIPChecksum@count& (0+255),b
 33192  018620  EC6A  F0C7         	call	_CalcIPChecksum	;wreg free
 33193  018624  0101               	movlb	1	; () banked
 33194  018626  C100  F11D         	movff	?_CalcIPChecksum,IPPutHeader@header+10
 33195  01862A  0101               	movlb	1	; () banked
 33196  01862C  C101  F11E         	movff	?_CalcIPChecksum+1,IPPutHeader@header+11
 33197                           
 33198                           ; BSR set to: 1
 33199                           ;ip.c: 258: MACPutHeader(&remote->MACAddr, (0x00u), (sizeof(header)+len));
 33200  018630  0E04               	movlw	4
 33201  018632  0101               	movlb	1	; () banked
 33202  018634  250E               	addwf	IPPutHeader@remote& (0+255),w,b
 33203  018636  0101               	movlb	1	; () banked
 33204  018638  6F04               	movwf	MACPutHeader@remote& (0+255),b
 33205  01863A  0E00               	movlw	0
 33206  01863C  0101               	movlb	1	; () banked
 33207  01863E  210F               	addwfc	(IPPutHeader@remote+1)& (0+255),w,b
 33208  018640  0101               	movlb	1	; () banked
 33209  018642  6F05               	movwf	(MACPutHeader@remote+1)& (0+255),b
 33210  018644  0E00               	movlw	0
 33211  018646  0101               	movlb	1	; () banked
 33212  018648  6F06               	movwf	MACPutHeader@type& (0+255),b
 33213  01864A  0E14               	movlw	20
 33214  01864C  0101               	movlb	1	; () banked
 33215  01864E  2511               	addwf	IPPutHeader@len& (0+255),w,b
 33216  018650  0101               	movlb	1	; () banked
 33217  018652  6F07               	movwf	MACPutHeader@dataLen& (0+255),b
 33218  018654  0E00               	movlw	0
 33219  018656  0101               	movlb	1	; () banked
 33220  018658  2112               	addwfc	(IPPutHeader@len+1)& (0+255),w,b
 33221  01865A  0101               	movlb	1	; () banked
 33222  01865C  6F08               	movwf	(MACPutHeader@dataLen+1)& (0+255),b
 33223  01865E  EC91  F0D3         	call	_MACPutHeader	;wreg free
 33224                           
 33225                           ;ip.c: 259: MACPutArray((uint8_t*)&header, sizeof(header));
 33226  018662  0101               	movlb	1	; () banked
 33227  018664  0E01               	movlw	high IPPutHeader@header
 33228  018666  0101               	movlb	1	; () banked
 33229  018668  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 33230  01866A  0101               	movlb	1	; () banked
 33231  01866C  0E13               	movlw	low IPPutHeader@header
 33232  01866E  0101               	movlb	1	; () banked
 33233  018670  6F00               	movwf	MACPutArray@val& (0+255),b
 33234  018672  0E00               	movlw	0
 33235  018674  0101               	movlb	1	; () banked
 33236  018676  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 33237  018678  0E14               	movlw	20
 33238  01867A  0101               	movlb	1	; () banked
 33239  01867C  6F02               	movwf	MACPutArray@len& (0+255),b
 33240  01867E  ECE4  F0FF         	call	_MACPutArray	;wreg free
 33241  018682  0012               	return	
 33242  018684                     __end_of_IPPutHeader:
 33243                           	opt stack 0
 33244                           tblptru	equ	0xFF8
 33245                           tblptrh	equ	0xFF7
 33246                           tblptrl	equ	0xFF6
 33247                           tablat	equ	0xFF5
 33248                           prodh	equ	0xFF4
 33249                           prodl	equ	0xFF3
 33250                           intcon	equ	0xFF2
 33251                           indf0	equ	0xFEF
 33252                           postinc0	equ	0xFEE
 33253                           fsr0h	equ	0xFEA
 33254                           fsr0l	equ	0xFE9
 33255                           wreg	equ	0xFE8
 33256                           indf1	equ	0xFE7
 33257                           postinc1	equ	0xFE6
 33258                           postdec1	equ	0xFE5
 33259                           fsr1h	equ	0xFE2
 33260                           fsr1l	equ	0xFE1
 33261                           indf2	equ	0xFDF
 33262                           postinc2	equ	0xFDE
 33263                           postdec2	equ	0xFDD
 33264                           fsr2h	equ	0xFDA
 33265                           fsr2l	equ	0xFD9
 33266                           status	equ	0xFD8
 33267                           
 33268 ;; *************** function _CalcIPChecksum *****************
 33269 ;; Defined at:
 33270 ;;		line 1146 in file "../tcpip/helpers.c"
 33271 ;; Parameters:    Size  Location     Type
 33272 ;;  buffer          2    0[BANK1 ] PTR unsigned char 
 33273 ;;		 -> SendTCP@pseudoHeader(12), TCPProcess@pseudoHeader(12), IPPutHeader@header(20), 
 33274 ;;  count           2    2[BANK1 ] unsigned int 
 33275 ;; Auto vars:     Size  Location     Type
 33276 ;;  sum             4   10[BANK1 ] struct .
 33277 ;;  val             2    8[BANK1 ] PTR unsigned int 
 33278 ;;		 -> SendTCP@pseudoHeader(12), TCPProcess@pseudoHeader(12), IPPutHeader@header(20), 
 33279 ;;  i               2    6[BANK1 ] unsigned int 
 33280 ;; Return value:  Size  Location     Type
 33281 ;;                  2    0[BANK1 ] unsigned int 
 33282 ;; Registers used:
 33283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33284 ;; Tracked objects:
 33285 ;;		On entry : 0/0
 33286 ;;		On exit  : 0/0
 33287 ;;		Unchanged: 0/0
 33288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33289 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33290 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33291 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33292 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33293 ;;Total ram usage:       14 bytes
 33294 ;; Hardware stack levels used:    1
 33295 ;; Hardware stack levels required when called:   10
 33296 ;; This function calls:
 33297 ;;		Nothing
 33298 ;; This function is called by:
 33299 ;;		_IPPutHeader
 33300 ;;		_TCPProcess
 33301 ;;		_SendTCP
 33302 ;; This function uses a non-reentrant model
 33303 ;;
 33304                           
 33305                           	psect	text59
 33306  018ED4                     __ptext59:
 33307                           	opt stack 0
 33308  018ED4                     _CalcIPChecksum:
 33309                           	opt stack 15
 33310                           
 33311                           ;helpers.c: 1148: uint16_t i;
 33312                           ;helpers.c: 1149: uint16_t *val;
 33313                           ;helpers.c: 1150: union
 33314                           ;helpers.c: 1151: {
 33315                           ;helpers.c: 1152: uint16_t w[2];
 33316                           ;helpers.c: 1153: uint32_t dw;
 33317                           ;helpers.c: 1154: } sum;
 33318                           ;helpers.c: 1156: i = count >> 1;
 33319                           
 33320                           ;incstack = 0
 33321  018ED4  90D8               	bcf	status,0,c
 33322  018ED6  0101               	movlb	1	; () banked
 33323  018ED8  3103               	rrcf	(CalcIPChecksum@count+1)& (0+255),w,b
 33324  018EDA  0101               	movlb	1	; () banked
 33325  018EDC  6F07               	movwf	(CalcIPChecksum@i+1)& (0+255),b
 33326  018EDE  0101               	movlb	1	; () banked
 33327  018EE0  3102               	rrcf	CalcIPChecksum@count& (0+255),w,b
 33328  018EE2  0101               	movlb	1	; () banked
 33329  018EE4  6F06               	movwf	CalcIPChecksum@i& (0+255),b
 33330                           
 33331                           ;helpers.c: 1157: val = (uint16_t*)buffer;
 33332  018EE6  0101               	movlb	1	; () banked
 33333  018EE8  C101  F109         	movff	CalcIPChecksum@buffer+1,CalcIPChecksum@val+1
 33334  018EEC  0101               	movlb	1	; () banked
 33335  018EEE  C100  F108         	movff	CalcIPChecksum@buffer,CalcIPChecksum@val
 33336                           
 33337                           ; BSR set to: 1
 33338                           ;helpers.c: 1160: sum.dw = 0x00000000ul;
 33339  018EF2  0E00               	movlw	0
 33340  018EF4  0101               	movlb	1	; () banked
 33341  018EF6  6F0A               	movwf	CalcIPChecksum@sum& (0+255),b
 33342  018EF8  0E00               	movlw	0
 33343  018EFA  0101               	movlb	1	; () banked
 33344  018EFC  6F0B               	movwf	(CalcIPChecksum@sum+1)& (0+255),b
 33345  018EFE  0E00               	movlw	0
 33346  018F00  0101               	movlb	1	; () banked
 33347  018F02  6F0C               	movwf	(CalcIPChecksum@sum+2)& (0+255),b
 33348  018F04  0E00               	movlw	0
 33349  018F06  0101               	movlb	1	; () banked
 33350  018F08  6F0D               	movwf	(CalcIPChecksum@sum+3)& (0+255),b
 33351                           
 33352                           ;helpers.c: 1161: while(i--)
 33353  018F0A  D01C               	goto	l10554
 33354  018F0C                     l10550:
 33355                           
 33356                           ; BSR set to: 1
 33357                           ;helpers.c: 1162: sum.dw += (uint32_t)*val++;
 33358  018F0C  C108  FFD9         	movff	CalcIPChecksum@val,fsr2l
 33359  018F10  C109  FFDA         	movff	CalcIPChecksum@val+1,fsr2h
 33360  018F14  CFDE F104          	movff	postinc2,??_CalcIPChecksum
 33361  018F18  CFDD F105          	movff	postdec2,??_CalcIPChecksum+1
 33362  018F1C  0101               	movlb	1	; () banked
 33363  018F1E  5104               	movf	??_CalcIPChecksum& (0+255),w,b
 33364  018F20  0101               	movlb	1	; () banked
 33365  018F22  270A               	addwf	CalcIPChecksum@sum& (0+255),f,b
 33366  018F24  0101               	movlb	1	; () banked
 33367  018F26  5105               	movf	(??_CalcIPChecksum+1)& (0+255),w,b
 33368  018F28  0101               	movlb	1	; () banked
 33369  018F2A  230B               	addwfc	(CalcIPChecksum@sum+1)& (0+255),f,b
 33370  018F2C  0E00               	movlw	0
 33371  018F2E  0101               	movlb	1	; () banked
 33372  018F30  230C               	addwfc	(CalcIPChecksum@sum+2)& (0+255),f,b
 33373  018F32  0E00               	movlw	0
 33374  018F34  0101               	movlb	1	; () banked
 33375  018F36  230D               	addwfc	(CalcIPChecksum@sum+3)& (0+255),f,b
 33376                           
 33377                           ; BSR set to: 1
 33378  018F38  0E02               	movlw	2
 33379  018F3A  0101               	movlb	1	; () banked
 33380  018F3C  2708               	addwf	CalcIPChecksum@val& (0+255),f,b
 33381  018F3E  0E00               	movlw	0
 33382  018F40  0101               	movlb	1	; () banked
 33383  018F42  2309               	addwfc	(CalcIPChecksum@val+1)& (0+255),f,b
 33384  018F44                     l10554:
 33385                           
 33386                           ; BSR set to: 1
 33387  018F44  0101               	movlb	1	; () banked
 33388  018F46  0706               	decf	CalcIPChecksum@i& (0+255),f,b
 33389  018F48  A0D8               	btfss	status,0,c
 33390  018F4A  0707               	decf	(CalcIPChecksum@i+1)& (0+255),f,b
 33391  018F4C  0101               	movlb	1	; () banked
 33392  018F4E  2906               	incf	CalcIPChecksum@i& (0+255),w,b
 33393  018F50  B4D8               	btfsc	status,2,c
 33394  018F52  2907               	incf	(CalcIPChecksum@i+1)& (0+255),w,b
 33395  018F54  A4D8               	btfss	status,2,c
 33396  018F56  D7DA               	goto	l10550
 33397                           
 33398                           ; BSR set to: 1
 33399                           ;helpers.c: 1165: if(count & 0x1)
 33400  018F58  0101               	movlb	1	; () banked
 33401  018F5A  A102               	btfss	CalcIPChecksum@count& (0+255),0,b
 33402  018F5C  D012               	goto	l10558
 33403                           
 33404                           ; BSR set to: 1
 33405                           ;helpers.c: 1166: sum.dw += (uint32_t)*(uint8_t*)val;
 33406  018F5E  C108  FFD9         	movff	CalcIPChecksum@val,fsr2l
 33407  018F62  C109  FFDA         	movff	CalcIPChecksum@val+1,fsr2h
 33408  018F66  50DF               	movf	indf2,w,c
 33409  018F68  0101               	movlb	1	; () banked
 33410  018F6A  6F04               	movwf	??_CalcIPChecksum& (0+255),b
 33411  018F6C  0101               	movlb	1	; () banked
 33412  018F6E  5104               	movf	??_CalcIPChecksum& (0+255),w,b
 33413  018F70  0101               	movlb	1	; () banked
 33414  018F72  270A               	addwf	CalcIPChecksum@sum& (0+255),f,b
 33415  018F74  0E00               	movlw	0
 33416  018F76  0101               	movlb	1	; () banked
 33417  018F78  230B               	addwfc	(CalcIPChecksum@sum+1)& (0+255),f,b
 33418  018F7A  0101               	movlb	1	; () banked
 33419  018F7C  230C               	addwfc	(CalcIPChecksum@sum+2)& (0+255),f,b
 33420  018F7E  0101               	movlb	1	; () banked
 33421  018F80  230D               	addwfc	(CalcIPChecksum@sum+3)& (0+255),f,b
 33422  018F82                     l10558:
 33423                           
 33424                           ; BSR set to: 1
 33425                           ;helpers.c: 1169: sum.dw = (uint32_t)sum.w[0] + (uint32_t)sum.w[1];
 33426  018F82  0101               	movlb	1	; () banked
 33427  018F84  510A               	movf	CalcIPChecksum@sum& (0+255),w,b
 33428  018F86  0101               	movlb	1	; () banked
 33429  018F88  250C               	addwf	(CalcIPChecksum@sum+2)& (0+255),w,b
 33430  018F8A  0101               	movlb	1	; () banked
 33431  018F8C  6F0A               	movwf	CalcIPChecksum@sum& (0+255),b
 33432  018F8E  0101               	movlb	1	; () banked
 33433  018F90  510B               	movf	(CalcIPChecksum@sum+1)& (0+255),w,b
 33434  018F92  0101               	movlb	1	; () banked
 33435  018F94  210D               	addwfc	(CalcIPChecksum@sum+3)& (0+255),w,b
 33436  018F96  0101               	movlb	1	; () banked
 33437  018F98  6F0B               	movwf	(CalcIPChecksum@sum+1)& (0+255),b
 33438  018F9A  0101               	movlb	1	; () banked
 33439  018F9C  6B0C               	clrf	(CalcIPChecksum@sum+2)& (0+255),b
 33440  018F9E  B0D8               	btfsc	status,0,c
 33441  018FA0  2B0C               	incf	(CalcIPChecksum@sum+2)& (0+255),f,b
 33442  018FA2  0101               	movlb	1	; () banked
 33443  018FA4  6B0D               	clrf	(CalcIPChecksum@sum+3)& (0+255),b
 33444                           
 33445                           ; BSR set to: 1
 33446                           ;helpers.c: 1173: sum.w[0] += sum.w[1];
 33447  018FA6  0101               	movlb	1	; () banked
 33448  018FA8  EE21  F00C         	lfsr	2,CalcIPChecksum@sum+2
 33449  018FAC  50DE               	movf	postinc2,w,c
 33450  018FAE  0101               	movlb	1	; () banked
 33451  018FB0  270A               	addwf	CalcIPChecksum@sum& (0+255),f,b
 33452  018FB2  50DD               	movf	postdec2,w,c
 33453  018FB4  0101               	movlb	1	; () banked
 33454  018FB6  230B               	addwfc	(CalcIPChecksum@sum+1)& (0+255),f,b
 33455                           
 33456                           ;helpers.c: 1176: return ~sum.w[0];
 33457  018FB8  0101               	movlb	1	; () banked
 33458  018FBA  1D0A               	comf	CalcIPChecksum@sum& (0+255),w,b
 33459  018FBC  0101               	movlb	1	; () banked
 33460  018FBE  6F00               	movwf	?_CalcIPChecksum& (0+255),b
 33461  018FC0  0101               	movlb	1	; () banked
 33462  018FC2  1D0B               	comf	(CalcIPChecksum@sum+1)& (0+255),w,b
 33463  018FC4  0101               	movlb	1	; () banked
 33464  018FC6  6F01               	movwf	(?_CalcIPChecksum+1)& (0+255),b
 33465  018FC8  0012               	return	
 33466  018FCA                     __end_of_CalcIPChecksum:
 33467                           	opt stack 0
 33468                           tblptru	equ	0xFF8
 33469                           tblptrh	equ	0xFF7
 33470                           tblptrl	equ	0xFF6
 33471                           tablat	equ	0xFF5
 33472                           prodh	equ	0xFF4
 33473                           prodl	equ	0xFF3
 33474                           intcon	equ	0xFF2
 33475                           indf0	equ	0xFEF
 33476                           postinc0	equ	0xFEE
 33477                           fsr0h	equ	0xFEA
 33478                           fsr0l	equ	0xFE9
 33479                           wreg	equ	0xFE8
 33480                           indf1	equ	0xFE7
 33481                           postinc1	equ	0xFE6
 33482                           postdec1	equ	0xFE5
 33483                           fsr1h	equ	0xFE2
 33484                           fsr1l	equ	0xFE1
 33485                           indf2	equ	0xFDF
 33486                           postinc2	equ	0xFDE
 33487                           postdec2	equ	0xFDD
 33488                           fsr2h	equ	0xFDA
 33489                           fsr2l	equ	0xFD9
 33490                           status	equ	0xFD8
 33491                           
 33492 ;; *************** function _GetMaxSegSizeOption *****************
 33493 ;; Defined at:
 33494 ;;		line 3477 in file "../tcpip/tcp.c"
 33495 ;; Parameters:    Size  Location     Type
 33496 ;;		None
 33497 ;; Auto vars:     Size  Location     Type
 33498 ;;  wMSS            2   10[BANK1 ] unsigned int 
 33499 ;;  vOption         1   13[BANK1 ] unsigned char 
 33500 ;;  vOptionsByte    1   12[BANK1 ] unsigned char 
 33501 ;; Return value:  Size  Location     Type
 33502 ;;                  2    8[BANK1 ] unsigned int 
 33503 ;; Registers used:
 33504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33505 ;; Tracked objects:
 33506 ;;		On entry : 0/0
 33507 ;;		On exit  : 0/0
 33508 ;;		Unchanged: 0/0
 33509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33510 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33511 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33513 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33514 ;;Total ram usage:        6 bytes
 33515 ;; Hardware stack levels used:    1
 33516 ;; Hardware stack levels required when called:   12
 33517 ;; This function calls:
 33518 ;;		_IPSetRxBuffer
 33519 ;;		_MACGet
 33520 ;;		_MACGetArray
 33521 ;; This function is called by:
 33522 ;;		_HandleTCPSeg
 33523 ;; This function uses a non-reentrant model
 33524 ;;
 33525                           
 33526                           	psect	text60
 33527  017E32                     __ptext60:
 33528                           	opt stack 0
 33529  017E32                     _GetMaxSegSizeOption:
 33530                           	opt stack 15
 33531                           
 33532                           ;tcp.c: 3479: uint8_t vOptionsBytes;
 33533                           ;tcp.c: 3480: uint8_t vOption;
 33534                           ;tcp.c: 3481: uint16_t wMSS;
 33535                           ;tcp.c: 3484: IPSetRxBuffer(2+2+4+4);
 33536                           
 33537                           ; BSR set to: 1
 33538                           ;incstack = 0
 33539  017E32  0E00               	movlw	0
 33540  017E34  0101               	movlb	1	; () banked
 33541  017E36  6F07               	movwf	(IPSetRxBuffer@Offset+1)& (0+255),b
 33542  017E38  0E0C               	movlw	12
 33543  017E3A  0101               	movlb	1	; () banked
 33544  017E3C  6F06               	movwf	IPSetRxBuffer@Offset& (0+255),b
 33545  017E3E  EC88  F0DC         	call	_IPSetRxBuffer	;wreg free
 33546                           
 33547                           ;tcp.c: 3485: vOptionsBytes = MACGet();
 33548  017E42  EC76  F0DD         	call	_MACGet	;wreg free
 33549  017E46  0101               	movlb	1	; () banked
 33550  017E48  6F0C               	movwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),b
 33551                           
 33552                           ; BSR set to: 1
 33553                           ;tcp.c: 3486: vOptionsBytes = ((vOptionsBytes&0xF0)>>2) - sizeof(TCP_HEADER);
 33554  017E4A  0101               	movlb	1	; () banked
 33555  017E4C  410C               	rrncf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33556  017E4E  42E8               	rrncf	wreg,f,c
 33557  017E50  0B3F               	andlw	63
 33558  017E52  0B3C               	andlw	60
 33559  017E54  0FEC               	addlw	236
 33560  017E56  0101               	movlb	1	; () banked
 33561  017E58  6F0C               	movwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),b
 33562                           
 33563                           ; BSR set to: 1
 33564                           ;tcp.c: 3490: if(vOptionsBytes == 0u)
 33565  017E5A  0101               	movlb	1	; () banked
 33566  017E5C  670C               	tstfsz	GetMaxSegSizeOption@vOptionsBytes& (0+255),b
 33567  017E5E  D007               	goto	l12310
 33568                           
 33569                           ; BSR set to: 1
 33570                           ;tcp.c: 3491: return 536;
 33571  017E60  0E02               	movlw	2
 33572  017E62  0101               	movlb	1	; () banked
 33573  017E64  6F09               	movwf	(?_GetMaxSegSizeOption+1)& (0+255),b
 33574  017E66  0E18               	movlw	24
 33575  017E68  0101               	movlb	1	; () banked
 33576  017E6A  6F08               	movwf	?_GetMaxSegSizeOption& (0+255),b
 33577  017E6C  0012               	return	
 33578  017E6E                     l12310:
 33579                           
 33580                           ; BSR set to: 1
 33581                           ;tcp.c: 3494: MACGetArray((0), 7);
 33582  017E6E  0E00               	movlw	0
 33583  017E70  0101               	movlb	1	; () banked
 33584  017E72  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 33585  017E74  0E00               	movlw	0
 33586  017E76  0101               	movlb	1	; () banked
 33587  017E78  6F00               	movwf	MACGetArray@val& (0+255),b
 33588  017E7A  0E00               	movlw	0
 33589  017E7C  0101               	movlb	1	; () banked
 33590  017E7E  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 33591  017E80  0E07               	movlw	7
 33592  017E82  0101               	movlb	1	; () banked
 33593  017E84  6F02               	movwf	MACGetArray@len& (0+255),b
 33594  017E86  EC35  F0D7         	call	_MACGetArray	;wreg free
 33595                           
 33596                           ;tcp.c: 3497: while(vOptionsBytes--)
 33597  017E8A  D069               	goto	l12362
 33598  017E8C                     l12312:
 33599                           
 33600                           ;tcp.c: 3498: {
 33601                           ;tcp.c: 3499: vOption = MACGet();
 33602  017E8C  EC76  F0DD         	call	_MACGet	;wreg free
 33603  017E90  0101               	movlb	1	; () banked
 33604  017E92  6F0D               	movwf	GetMaxSegSizeOption@vOption& (0+255),b
 33605                           
 33606                           ; BSR set to: 1
 33607                           ;tcp.c: 3501: if(vOption == 0u)
 33608  017E94  0101               	movlb	1	; () banked
 33609  017E96  670D               	tstfsz	GetMaxSegSizeOption@vOption& (0+255),b
 33610  017E98  D001               	goto	l12318
 33611  017E9A  D067               	goto	l12364
 33612  017E9C                     l12318:
 33613                           
 33614                           ; BSR set to: 1
 33615                           ;tcp.c: 3504: if(vOption == 1u)
 33616  017E9C  0101               	movlb	1	; () banked
 33617  017E9E  050D               	decf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33618  017EA0  B4D8               	btfsc	status,2,c
 33619  017EA2  D05D               	goto	l12362
 33620                           
 33621                           ; BSR set to: 1
 33622                           ;tcp.c: 3507: if(vOption == 2u)
 33623                           
 33624                           ; BSR set to: 1
 33625                           
 33626                           ; BSR set to: 1
 33627                           ;tcp.c: 3505: continue;
 33628  017EA4  0101               	movlb	1	; () banked
 33629  017EA6  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33630  017EA8  0A02               	xorlw	2
 33631  017EAA  A4D8               	btfss	status,2,c
 33632  017EAC  D038               	goto	l12348
 33633                           
 33634                           ; BSR set to: 1
 33635                           ;tcp.c: 3508: {
 33636                           ;tcp.c: 3509: if(vOptionsBytes < 3u)
 33637  017EAE  0E03               	movlw	3
 33638  017EB0  0101               	movlb	1	; () banked
 33639  017EB2  5D0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33640  017EB4  A0D8               	btfss	status,0,c
 33641  017EB6  D059               	goto	l12364
 33642                           
 33643                           ; BSR set to: 1
 33644                           ;tcp.c: 3512: wMSS = 0;
 33645                           
 33646                           ; BSR set to: 1
 33647                           
 33648                           ; BSR set to: 1
 33649                           ;tcp.c: 3510: break;
 33650  017EB8  0E00               	movlw	0
 33651  017EBA  0101               	movlb	1	; () banked
 33652  017EBC  6F0B               	movwf	(GetMaxSegSizeOption@wMSS+1)& (0+255),b
 33653  017EBE  0E00               	movlw	0
 33654  017EC0  0101               	movlb	1	; () banked
 33655  017EC2  6F0A               	movwf	GetMaxSegSizeOption@wMSS& (0+255),b
 33656                           
 33657                           ; BSR set to: 1
 33658                           ;tcp.c: 3515: vOption = MACGet();
 33659  017EC4  EC76  F0DD         	call	_MACGet	;wreg free
 33660  017EC8  0101               	movlb	1	; () banked
 33661  017ECA  6F0D               	movwf	GetMaxSegSizeOption@vOption& (0+255),b
 33662                           
 33663                           ; BSR set to: 1
 33664                           ;tcp.c: 3516: if(vOption == 4u)
 33665  017ECC  0101               	movlb	1	; () banked
 33666  017ECE  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33667  017ED0  0A04               	xorlw	4
 33668  017ED2  A4D8               	btfss	status,2,c
 33669  017ED4  D008               	goto	l12336
 33670                           
 33671                           ; BSR set to: 1
 33672                           ;tcp.c: 3517: {
 33673                           ;tcp.c: 3518: ((uint8_t*)&wMSS)[1] = MACGet();
 33674  017ED6  EC76  F0DD         	call	_MACGet	;wreg free
 33675  017EDA  0101               	movlb	1	; () banked
 33676  017EDC  6F0B               	movwf	(GetMaxSegSizeOption@wMSS+1)& (0+255),b
 33677                           
 33678                           ;tcp.c: 3519: ((uint8_t*)&wMSS)[0] = MACGet();
 33679  017EDE  EC76  F0DD         	call	_MACGet	;wreg free
 33680  017EE2  0101               	movlb	1	; () banked
 33681  017EE4  6F0A               	movwf	GetMaxSegSizeOption@wMSS& (0+255),b
 33682  017EE6                     l12336:
 33683                           
 33684                           ; BSR set to: 1
 33685                           ;tcp.c: 3520: }
 33686                           ;tcp.c: 3522: if(wMSS < 536u)
 33687  017EE6  0E18               	movlw	24
 33688  017EE8  0101               	movlb	1	; () banked
 33689  017EEA  5D0A               	subwf	GetMaxSegSizeOption@wMSS& (0+255),w,b
 33690  017EEC  0E02               	movlw	2
 33691  017EEE  0101               	movlb	1	; () banked
 33692  017EF0  590B               	subwfb	(GetMaxSegSizeOption@wMSS+1)& (0+255),w,b
 33693  017EF2  A0D8               	btfss	status,0,c
 33694  017EF4  D03A               	goto	l12364
 33695                           
 33696                           ; BSR set to: 1
 33697                           ;tcp.c: 3524: if(wMSS > (1460u))
 33698                           
 33699                           ; BSR set to: 1
 33700                           
 33701                           ; BSR set to: 1
 33702                           ;tcp.c: 3523: break;
 33703  017EF6  0EB5               	movlw	181
 33704  017EF8  0101               	movlb	1	; () banked
 33705  017EFA  5D0A               	subwf	GetMaxSegSizeOption@wMSS& (0+255),w,b
 33706  017EFC  0E05               	movlw	5
 33707  017EFE  0101               	movlb	1	; () banked
 33708  017F00  590B               	subwfb	(GetMaxSegSizeOption@wMSS+1)& (0+255),w,b
 33709  017F02  A0D8               	btfss	status,0,c
 33710  017F04  D007               	goto	l1295
 33711                           
 33712                           ; BSR set to: 1
 33713                           ;tcp.c: 3525: return (1460u);
 33714  017F06  0E05               	movlw	5
 33715  017F08  0101               	movlb	1	; () banked
 33716  017F0A  6F09               	movwf	(?_GetMaxSegSizeOption+1)& (0+255),b
 33717  017F0C  0EB4               	movlw	180
 33718  017F0E  0101               	movlb	1	; () banked
 33719  017F10  6F08               	movwf	?_GetMaxSegSizeOption& (0+255),b
 33720  017F12  0012               	return	
 33721  017F14                     l1295:
 33722                           
 33723                           ; BSR set to: 1
 33724                           ;tcp.c: 3526: else
 33725                           ;tcp.c: 3527: return wMSS;
 33726  017F14  C10A  F108         	movff	GetMaxSegSizeOption@wMSS,?_GetMaxSegSizeOption
 33727  017F18  C10B  F109         	movff	GetMaxSegSizeOption@wMSS+1,?_GetMaxSegSizeOption+1
 33728  017F1C  0012               	return	
 33729  017F1E                     l12348:
 33730                           
 33731                           ; BSR set to: 1
 33732                           ;tcp.c: 3529: else
 33733                           ;tcp.c: 3530: {
 33734                           ;tcp.c: 3531: if(vOptionsBytes < 2u)
 33735  017F1E  0E02               	movlw	2
 33736  017F20  0101               	movlb	1	; () banked
 33737  017F22  5D0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33738  017F24  A0D8               	btfss	status,0,c
 33739  017F26  D021               	goto	l12364
 33740                           
 33741                           ; BSR set to: 1
 33742                           ;tcp.c: 3533: vOption = MACGet();
 33743                           
 33744                           ; BSR set to: 1
 33745                           
 33746                           ; BSR set to: 1
 33747                           ;tcp.c: 3532: break;
 33748  017F28  EC76  F0DD         	call	_MACGet	;wreg free
 33749  017F2C  0101               	movlb	1	; () banked
 33750  017F2E  6F0D               	movwf	GetMaxSegSizeOption@vOption& (0+255),b
 33751                           
 33752                           ; BSR set to: 1
 33753                           ;tcp.c: 3534: if(vOptionsBytes < vOption)
 33754  017F30  0101               	movlb	1	; () banked
 33755  017F32  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33756  017F34  0101               	movlb	1	; () banked
 33757  017F36  5D0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33758  017F38  A0D8               	btfss	status,0,c
 33759  017F3A  D017               	goto	l12364
 33760                           
 33761                           ; BSR set to: 1
 33762                           ;tcp.c: 3536: MACGetArray((0), vOption);
 33763                           
 33764                           ; BSR set to: 1
 33765                           
 33766                           ; BSR set to: 1
 33767                           ;tcp.c: 3535: break;
 33768  017F3C  0E00               	movlw	0
 33769  017F3E  0101               	movlb	1	; () banked
 33770  017F40  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 33771  017F42  0E00               	movlw	0
 33772  017F44  0101               	movlb	1	; () banked
 33773  017F46  6F00               	movwf	MACGetArray@val& (0+255),b
 33774  017F48  0101               	movlb	1	; () banked
 33775  017F4A  C10D  F102         	movff	GetMaxSegSizeOption@vOption,MACGetArray@len
 33776  017F4E  0101               	movlb	1	; () banked
 33777  017F50  6B03               	clrf	(MACGetArray@len+1)& (0+255),b
 33778  017F52  EC35  F0D7         	call	_MACGetArray	;wreg free
 33779                           
 33780                           ;tcp.c: 3537: vOptionsBytes -= vOption;
 33781  017F56  0101               	movlb	1	; () banked
 33782  017F58  510D               	movf	GetMaxSegSizeOption@vOption& (0+255),w,b
 33783  017F5A  0101               	movlb	1	; () banked
 33784  017F5C  5F0C               	subwf	GetMaxSegSizeOption@vOptionsBytes& (0+255),f,b
 33785  017F5E                     l12362:
 33786  017F5E  0101               	movlb	1	; () banked
 33787  017F60  070C               	decf	GetMaxSegSizeOption@vOptionsBytes& (0+255),f,b
 33788  017F62  0101               	movlb	1	; () banked
 33789  017F64  290C               	incf	GetMaxSegSizeOption@vOptionsBytes& (0+255),w,b
 33790  017F66  A4D8               	btfss	status,2,c
 33791  017F68  D791               	goto	l12312
 33792  017F6A                     l12364:
 33793                           
 33794                           ; BSR set to: 1
 33795                           ;tcp.c: 3538: }
 33796                           ;tcp.c: 3540: }
 33797                           ;tcp.c: 3543: return 536;
 33798  017F6A  0E02               	movlw	2
 33799  017F6C  0101               	movlb	1	; () banked
 33800  017F6E  6F09               	movwf	(?_GetMaxSegSizeOption+1)& (0+255),b
 33801  017F70  0E18               	movlw	24
 33802  017F72  0101               	movlb	1	; () banked
 33803  017F74  6F08               	movwf	?_GetMaxSegSizeOption& (0+255),b
 33804  017F76  0012               	return	
 33805  017F78                     __end_of_GetMaxSegSizeOption:
 33806                           	opt stack 0
 33807                           tblptru	equ	0xFF8
 33808                           tblptrh	equ	0xFF7
 33809                           tblptrl	equ	0xFF6
 33810                           tablat	equ	0xFF5
 33811                           prodh	equ	0xFF4
 33812                           prodl	equ	0xFF3
 33813                           intcon	equ	0xFF2
 33814                           indf0	equ	0xFEF
 33815                           postinc0	equ	0xFEE
 33816                           fsr0h	equ	0xFEA
 33817                           fsr0l	equ	0xFE9
 33818                           wreg	equ	0xFE8
 33819                           indf1	equ	0xFE7
 33820                           postinc1	equ	0xFE6
 33821                           postdec1	equ	0xFE5
 33822                           fsr1h	equ	0xFE2
 33823                           fsr1l	equ	0xFE1
 33824                           indf2	equ	0xFDF
 33825                           postinc2	equ	0xFDE
 33826                           postdec2	equ	0xFDD
 33827                           fsr2h	equ	0xFDA
 33828                           fsr2l	equ	0xFD9
 33829                           status	equ	0xFD8
 33830                           
 33831 ;; *************** function _IPSetRxBuffer *****************
 33832 ;; Defined at:
 33833 ;;		line 281 in file "../tcpip/ip.c"
 33834 ;; Parameters:    Size  Location     Type
 33835 ;;  Offset          2    6[BANK1 ] unsigned int 
 33836 ;; Auto vars:     Size  Location     Type
 33837 ;;		None
 33838 ;; Return value:  Size  Location     Type
 33839 ;;		None               void
 33840 ;; Registers used:
 33841 ;;		wreg, status,2, status,0, cstack
 33842 ;; Tracked objects:
 33843 ;;		On entry : 0/0
 33844 ;;		On exit  : 0/0
 33845 ;;		Unchanged: 0/0
 33846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33847 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33850 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33851 ;;Total ram usage:        2 bytes
 33852 ;; Hardware stack levels used:    1
 33853 ;; Hardware stack levels required when called:   11
 33854 ;; This function calls:
 33855 ;;		_MACSetReadPtrInRx
 33856 ;; This function is called by:
 33857 ;;		_TCPProcess
 33858 ;;		_GetMaxSegSizeOption
 33859 ;;		_HandleTCPSeg
 33860 ;; This function uses a non-reentrant model
 33861 ;;
 33862                           
 33863                           	psect	text61
 33864  01B910                     __ptext61:
 33865                           	opt stack 0
 33866  01B910                     _IPSetRxBuffer:
 33867                           	opt stack 17
 33868                           
 33869                           ;ip.c: 283: MACSetReadPtrInRx(Offset+IPHeaderLen);
 33870                           
 33871                           ; BSR set to: 1
 33872                           ;incstack = 0
 33873  01B910  0101               	movlb	1	; () banked
 33874  01B912  51B5               	movf	_IPHeaderLen& (0+255),w,b
 33875  01B914  0101               	movlb	1	; () banked
 33876  01B916  2506               	addwf	IPSetRxBuffer@Offset& (0+255),w,b
 33877  01B918  0101               	movlb	1	; () banked
 33878  01B91A  6F00               	movwf	MACSetReadPtrInRx@offset& (0+255),b
 33879  01B91C  0E00               	movlw	0
 33880  01B91E  0101               	movlb	1	; () banked
 33881  01B920  2107               	addwfc	(IPSetRxBuffer@Offset+1)& (0+255),w,b
 33882  01B922  0101               	movlb	1	; () banked
 33883  01B924  6F01               	movwf	(MACSetReadPtrInRx@offset+1)& (0+255),b
 33884  01B926  EC18  F0D8         	call	_MACSetReadPtrInRx	;wreg free
 33885  01B92A  0012               	return	
 33886  01B92C                     __end_of_IPSetRxBuffer:
 33887                           	opt stack 0
 33888                           tblptru	equ	0xFF8
 33889                           tblptrh	equ	0xFF7
 33890                           tblptrl	equ	0xFF6
 33891                           tablat	equ	0xFF5
 33892                           prodh	equ	0xFF4
 33893                           prodl	equ	0xFF3
 33894                           intcon	equ	0xFF2
 33895                           indf0	equ	0xFEF
 33896                           postinc0	equ	0xFEE
 33897                           fsr0h	equ	0xFEA
 33898                           fsr0l	equ	0xFE9
 33899                           wreg	equ	0xFE8
 33900                           indf1	equ	0xFE7
 33901                           postinc1	equ	0xFE6
 33902                           postdec1	equ	0xFE5
 33903                           fsr1h	equ	0xFE2
 33904                           fsr1l	equ	0xFE1
 33905                           indf2	equ	0xFDF
 33906                           postinc2	equ	0xFDE
 33907                           postdec2	equ	0xFDD
 33908                           fsr2h	equ	0xFDA
 33909                           fsr2l	equ	0xFD9
 33910                           status	equ	0xFD8
 33911                           
 33912 ;; *************** function _FindMatchingSocket *****************
 33913 ;; Defined at:
 33914 ;;		line 3180 in file "../tcpip/tcp.c"
 33915 ;; Parameters:    Size  Location     Type
 33916 ;;  h               2   40[BANK1 ] PTR struct .
 33917 ;;		 -> TCPProcess@TCPHeader(20), 
 33918 ;;  remote          2   42[BANK1 ] PTR struct .
 33919 ;;		 -> remoteNode(10), 
 33920 ;; Auto vars:     Size  Location     Type
 33921 ;;  wQueueInsert    2   56[BANK1 ] unsigned int 
 33922 ;;  hash            2   52[BANK1 ] unsigned int 
 33923 ;;  hTCP            1   55[BANK1 ] unsigned char 
 33924 ;;  partialMatch    1   54[BANK1 ] unsigned char 
 33925 ;; Return value:  Size  Location     Type
 33926 ;;                  1    wreg      unsigned char 
 33927 ;; Registers used:
 33928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33929 ;; Tracked objects:
 33930 ;;		On entry : 0/0
 33931 ;;		On exit  : 0/0
 33932 ;;		Unchanged: 0/0
 33933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 33934 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33935 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33936 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33937 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33938 ;;Total ram usage:       18 bytes
 33939 ;; Hardware stack levels used:    1
 33940 ;; Hardware stack levels required when called:   14
 33941 ;; This function calls:
 33942 ;;		_SyncTCB
 33943 ;;		_SyncTCBStub
 33944 ;;		_TickGetDiv256
 33945 ;;		___wmul
 33946 ;;		_memcpy
 33947 ;; This function is called by:
 33948 ;;		_TCPProcess
 33949 ;; This function uses a non-reentrant model
 33950 ;;
 33951                           
 33952                           	psect	text62
 33953  0135FE                     __ptext62:
 33954                           	opt stack 0
 33955  0135FE                     _FindMatchingSocket:
 33956                           	opt stack 14
 33957                           
 33958                           ;tcp.c: 3182: TCP_SOCKET hTCP;
 33959                           ;tcp.c: 3183: TCP_SOCKET partialMatch;
 33960                           ;tcp.c: 3184: uint16_t hash;
 33961                           ;tcp.c: 3187: if(h->DestPort == 0u)
 33962                           
 33963                           ;incstack = 0
 33964  0135FE  0101               	movlb	1	; () banked
 33965  013600  EE20 F002          	lfsr	2,2
 33966  013604  0101               	movlb	1	; () banked
 33967  013606  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 33968  013608  26D9               	addwf	fsr2l,f,c
 33969  01360A  0101               	movlb	1	; () banked
 33970  01360C  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 33971  01360E  22DA               	addwfc	fsr2h,f,c
 33972  013610  50DE               	movf	postinc2,w,c
 33973  013612  10DD               	iorwf	postdec2,w,c
 33974  013614  A4D8               	btfss	status,2,c
 33975  013616  D002               	goto	l13140
 33976                           
 33977                           ; BSR set to: 1
 33978                           ;tcp.c: 3188: return 0;
 33979  013618  0E00               	movlw	0
 33980  01361A  0012               	return	
 33981  01361C                     l13140:
 33982                           
 33983                           ; BSR set to: 1
 33984                           ;tcp.c: 3190: partialMatch = (0xFE);
 33985  01361C  0EFE               	movlw	254
 33986  01361E  0101               	movlb	1	; () banked
 33987  013620  6F36               	movwf	FindMatchingSocket@partialMatch& (0+255),b
 33988                           
 33989                           ; BSR set to: 1
 33990                           ;tcp.c: 3191: hash = (remote->IPAddr.w[1]+remote->IPAddr.w[0] + h->SourcePort) ^ h->Dest
      +                          Port;
 33991  013622  0101               	movlb	1	; () banked
 33992  013624  EE20 F002          	lfsr	2,2
 33993  013628  0101               	movlb	1	; () banked
 33994  01362A  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 33995  01362C  26D9               	addwf	fsr2l,f,c
 33996  01362E  0101               	movlb	1	; () banked
 33997  013630  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 33998  013632  22DA               	addwfc	fsr2h,f,c
 33999  013634  CFDE F12C          	movff	postinc2,??_FindMatchingSocket
 34000  013638  CFDD F12D          	movff	postdec2,??_FindMatchingSocket+1
 34001  01363C  C12A  FFD9         	movff	FindMatchingSocket@remote,fsr2l
 34002  013640  C12B  FFDA         	movff	FindMatchingSocket@remote+1,fsr2h
 34003  013644  CFDE F12E          	movff	postinc2,??_FindMatchingSocket+2
 34004  013648  CFDD F12F          	movff	postdec2,??_FindMatchingSocket+3
 34005  01364C  0101               	movlb	1	; () banked
 34006  01364E  EE20 F002          	lfsr	2,2
 34007  013652  0101               	movlb	1	; () banked
 34008  013654  512A               	movf	FindMatchingSocket@remote& (0+255),w,b
 34009  013656  26D9               	addwf	fsr2l,f,c
 34010  013658  0101               	movlb	1	; () banked
 34011  01365A  512B               	movf	(FindMatchingSocket@remote+1)& (0+255),w,b
 34012  01365C  22DA               	addwfc	fsr2h,f,c
 34013  01365E  CFDE F130          	movff	postinc2,??_FindMatchingSocket+4
 34014  013662  CFDD F131          	movff	postdec2,??_FindMatchingSocket+5
 34015  013666  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34016  01366A  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34017  01366E  CFDE F132          	movff	postinc2,??_FindMatchingSocket+6
 34018  013672  CFDD F133          	movff	postdec2,??_FindMatchingSocket+7
 34019  013676  0101               	movlb	1	; () banked
 34020  013678  5130               	movf	(??_FindMatchingSocket+4)& (0+255),w,b
 34021  01367A  0101               	movlb	1	; () banked
 34022  01367C  2732               	addwf	(??_FindMatchingSocket+6)& (0+255),f,b
 34023  01367E  0101               	movlb	1	; () banked
 34024  013680  5131               	movf	(??_FindMatchingSocket+5)& (0+255),w,b
 34025  013682  0101               	movlb	1	; () banked
 34026  013684  2333               	addwfc	(??_FindMatchingSocket+7)& (0+255),f,b
 34027  013686  0101               	movlb	1	; () banked
 34028  013688  512E               	movf	(??_FindMatchingSocket+2)& (0+255),w,b
 34029  01368A  0101               	movlb	1	; () banked
 34030  01368C  2732               	addwf	(??_FindMatchingSocket+6)& (0+255),f,b
 34031  01368E  0101               	movlb	1	; () banked
 34032  013690  512F               	movf	(??_FindMatchingSocket+3)& (0+255),w,b
 34033  013692  0101               	movlb	1	; () banked
 34034  013694  2333               	addwfc	(??_FindMatchingSocket+7)& (0+255),f,b
 34035  013696  0101               	movlb	1	; () banked
 34036  013698  512C               	movf	??_FindMatchingSocket& (0+255),w,b
 34037  01369A  0101               	movlb	1	; () banked
 34038  01369C  1932               	xorwf	(??_FindMatchingSocket+6)& (0+255),w,b
 34039  01369E  0101               	movlb	1	; () banked
 34040  0136A0  6F34               	movwf	FindMatchingSocket@hash& (0+255),b
 34041  0136A2  0101               	movlb	1	; () banked
 34042  0136A4  512D               	movf	(??_FindMatchingSocket+1)& (0+255),w,b
 34043  0136A6  0101               	movlb	1	; () banked
 34044  0136A8  1933               	xorwf	(??_FindMatchingSocket+7)& (0+255),w,b
 34045  0136AA  0101               	movlb	1	; () banked
 34046  0136AC  6F35               	movwf	(FindMatchingSocket@hash+1)& (0+255),b
 34047                           
 34048                           ; BSR set to: 1
 34049                           ;tcp.c: 3195: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitial
      +                          izer[0])); hTCP++ )
 34050  0136AE  0E00               	movlw	0
 34051  0136B0  0101               	movlb	1	; () banked
 34052  0136B2  6F37               	movwf	FindMatchingSocket@hTCP& (0+255),b
 34053  0136B4                     
 34054                           ; BSR set to: 1
 34055  0136B4  0101               	movlb	1	; () banked
 34056  0136B6  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 34057  0136B8  A4D8               	btfss	status,2,c
 34058  0136BA  D085               	goto	l13186
 34059                           
 34060                           ; BSR set to: 1
 34061                           ;tcp.c: 3196: {
 34062                           ;tcp.c: 3197: SyncTCBStub(hTCP);
 34063                           
 34064                           ; BSR set to: 1
 34065                           
 34066                           ; BSR set to: 1
 34067  0136BC  0101               	movlb	1	; () banked
 34068  0136BE  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 34069  0136C0  EC30  F0D0         	call	_SyncTCBStub
 34070                           
 34071                           ;tcp.c: 3199: if(MyTCBStub.smState == TCP_CLOSED)
 34072  0136C4  0101               	movlb	1	; () banked
 34073  0136C6  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 34074  0136C8  0A0D               	xorlw	13
 34075  0136CA  B4D8               	btfsc	status,2,c
 34076  0136CC  D079               	goto	l13182
 34077                           
 34078                           ; BSR set to: 1
 34079                           ;tcp.c: 3203: else if(MyTCBStub.smState == TCP_LISTEN)
 34080                           
 34081                           ; BSR set to: 1
 34082                           
 34083                           ; BSR set to: 1
 34084                           ;tcp.c: 3202: }
 34085                           
 34086                           ; BSR set to: 1
 34087                           ;tcp.c: 3200: {
 34088                           ;tcp.c: 3201: continue;
 34089  0136CE  0101               	movlb	1	; () banked
 34090  0136D0  51F6               	movf	(_MyTCBStub+22)& (0+255),w,b
 34091  0136D2  0A04               	xorlw	4
 34092  0136D4  A4D8               	btfss	status,2,c
 34093  0136D6  D019               	goto	l13166
 34094                           
 34095                           ; BSR set to: 1
 34096                           ;tcp.c: 3204: {
 34097                           ;tcp.c: 3205: if(MyTCBStub.remoteHash.Val == h->DestPort)
 34098  0136D8  0101               	movlb	1	; () banked
 34099  0136DA  EE20 F002          	lfsr	2,2
 34100  0136DE  0101               	movlb	1	; () banked
 34101  0136E0  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34102  0136E2  26D9               	addwf	fsr2l,f,c
 34103  0136E4  0101               	movlb	1	; () banked
 34104  0136E6  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34105  0136E8  22DA               	addwfc	fsr2h,f,c
 34106  0136EA  0101               	movlb	1	; () banked
 34107  0136EC  EE11  F0F9         	lfsr	1,_MyTCBStub+25
 34108  0136F0  52E6               	movf	postinc1,f,c
 34109  0136F2  52DE               	movf	postinc2,f,c
 34110  0136F4  50DD               	movf	postdec2,w,c
 34111  0136F6  18E5               	xorwf	postdec1,w,c
 34112  0136F8  CFDF FFE8          	movff	indf2,wreg
 34113  0136FC  B4D8               	btfsc	status,2,c
 34114  0136FE  18E7               	xorwf	indf1,w,c
 34115  013700  A4D8               	btfss	status,2,c
 34116  013702  D05E               	goto	l13182
 34117                           
 34118                           ; BSR set to: 1
 34119                           ;tcp.c: 3206: partialMatch = hTCP;
 34120  013704  C137  F136         	movff	FindMatchingSocket@hTCP,FindMatchingSocket@partialMatch
 34121  013708  D05B               	goto	l13182
 34122  01370A                     l13166:
 34123                           
 34124                           ; BSR set to: 1
 34125                           ;tcp.c: 3217: else if(MyTCBStub.remoteHash.Val != hash)
 34126  01370A  0101               	movlb	1	; () banked
 34127  01370C  EE21  F0F9         	lfsr	2,_MyTCBStub+25
 34128  013710  0101               	movlb	1	; () banked
 34129  013712  52DE               	movf	postinc2,f,c
 34130  013714  0101               	movlb	1	; () banked
 34131  013716  5135               	movf	(FindMatchingSocket@hash+1)& (0+255),w,b
 34132  013718  18DD               	xorwf	postdec2,w,c
 34133  01371A  0101               	movlb	1	; () banked
 34134  01371C  C134  FFE8         	movff	FindMatchingSocket@hash,wreg
 34135  013720  B4D8               	btfsc	status,2,c
 34136  013722  18DF               	xorwf	indf2,w,c
 34137  013724  A4D8               	btfss	status,2,c
 34138  013726  D04C               	goto	l13182
 34139                           
 34140                           ; BSR set to: 1
 34141                           ;tcp.c: 3220: }
 34142                           ;tcp.c: 3222: SyncTCB();
 34143                           
 34144                           ; BSR set to: 1
 34145                           
 34146                           ; BSR set to: 1
 34147                           
 34148                           ; BSR set to: 1
 34149                           
 34150                           ; BSR set to: 1
 34151                           ;tcp.c: 3218: {
 34152                           ;tcp.c: 3219: continue;
 34153  013728  EC10  F0CB         	call	_SyncTCB	;wreg free
 34154                           
 34155                           ;tcp.c: 3223: if( h->DestPort == MyTCB.localPort.Val &&
 34156                           ;tcp.c: 3224: h->SourcePort == MyTCB.remotePort.Val &&
 34157                           ;tcp.c: 3225: remote->IPAddr.Val == MyTCB.remote.niRemoteMACIP.IPAddr.Val)
 34158  01372C  0101               	movlb	1	; () banked
 34159  01372E  EE21  F0C9         	lfsr	2,_MyTCB+16
 34160  013732  0101               	movlb	1	; () banked
 34161  013734  EE10 F002          	lfsr	1,2
 34162  013738  0101               	movlb	1	; () banked
 34163  01373A  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34164  01373C  26E1               	addwf	fsr1l,f,c
 34165  01373E  0101               	movlb	1	; () banked
 34166  013740  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34167  013742  22E2               	addwfc	fsr1h,f,c
 34168  013744  52E6               	movf	postinc1,f,c
 34169  013746  52DE               	movf	postinc2,f,c
 34170  013748  50DD               	movf	postdec2,w,c
 34171  01374A  18E5               	xorwf	postdec1,w,c
 34172  01374C  CFDF FFE8          	movff	indf2,wreg
 34173  013750  B4D8               	btfsc	status,2,c
 34174  013752  18E7               	xorwf	indf1,w,c
 34175  013754  A4D8               	btfss	status,2,c
 34176  013756  D034               	goto	l13182
 34177                           
 34178                           ; BSR set to: 1
 34179  013758  0101               	movlb	1	; () banked
 34180  01375A  EE21  F0C7         	lfsr	2,_MyTCB+14
 34181  01375E  C128  FFE1         	movff	FindMatchingSocket@h,fsr1l
 34182  013762  C129  FFE2         	movff	FindMatchingSocket@h+1,fsr1h
 34183  013766  52E6               	movf	postinc1,f,c
 34184  013768  52DE               	movf	postinc2,f,c
 34185  01376A  50DD               	movf	postdec2,w,c
 34186  01376C  18E5               	xorwf	postdec1,w,c
 34187  01376E  CFDF FFE8          	movff	indf2,wreg
 34188  013772  B4D8               	btfsc	status,2,c
 34189  013774  18E7               	xorwf	indf1,w,c
 34190  013776  A4D8               	btfss	status,2,c
 34191  013778  D023               	goto	l13182
 34192                           
 34193                           ; BSR set to: 1
 34194  01377A  C12A  FFD9         	movff	FindMatchingSocket@remote,fsr2l
 34195  01377E  C12B  FFDA         	movff	FindMatchingSocket@remote+1,fsr2h
 34196  013782  CFDE F12C          	movff	postinc2,??_FindMatchingSocket
 34197  013786  CFDE F12D          	movff	postinc2,??_FindMatchingSocket+1
 34198  01378A  CFDE F12E          	movff	postinc2,??_FindMatchingSocket+2
 34199  01378E  CFDE F12F          	movff	postinc2,??_FindMatchingSocket+3
 34200  013792  0101               	movlb	1	; () banked
 34201  013794  51D2               	movf	(_MyTCB+25)& (0+255),w,b
 34202  013796  0101               	movlb	1	; () banked
 34203  013798  192F               	xorwf	(??_FindMatchingSocket+3)& (0+255),w,b
 34204  01379A  E10E               	bnz	u14505
 34205  01379C  0101               	movlb	1	; () banked
 34206  01379E  51D1               	movf	(_MyTCB+24)& (0+255),w,b
 34207  0137A0  0101               	movlb	1	; () banked
 34208  0137A2  192E               	xorwf	(??_FindMatchingSocket+2)& (0+255),w,b
 34209  0137A4  E109               	bnz	u14505
 34210  0137A6  0101               	movlb	1	; () banked
 34211  0137A8  51D0               	movf	(_MyTCB+23)& (0+255),w,b
 34212  0137AA  0101               	movlb	1	; () banked
 34213  0137AC  192D               	xorwf	(??_FindMatchingSocket+1)& (0+255),w,b
 34214  0137AE  E104               	bnz	u14505
 34215  0137B0  0101               	movlb	1	; () banked
 34216  0137B2  51CF               	movf	(_MyTCB+22)& (0+255),w,b
 34217  0137B4  0101               	movlb	1	; () banked
 34218  0137B6  192C               	xorwf	??_FindMatchingSocket& (0+255),w,b
 34219  0137B8                     u14505:
 34220  0137B8  A4D8               	btfss	status,2,c
 34221  0137BA  D002               	goto	l13182
 34222                           
 34223                           ; BSR set to: 1
 34224                           ;tcp.c: 3226: {
 34225                           ;tcp.c: 3227: return 1;
 34226  0137BC  0E01               	movlw	1
 34227  0137BE  0012               	return	
 34228  0137C0                     l13182:
 34229                           
 34230                           ; BSR set to: 1
 34231  0137C0  0101               	movlb	1	; () banked
 34232  0137C2  2B37               	incf	FindMatchingSocket@hTCP& (0+255),f,b
 34233  0137C4  D777               	goto	L37
 34234  0137C6                     l13186:
 34235                           
 34236                           ; BSR set to: 1
 34237                           ;tcp.c: 3228: }
 34238                           ;tcp.c: 3229: }
 34239                           ;tcp.c: 3236: if(partialMatch != (0xFE))
 34240  0137C6  0101               	movlb	1	; () banked
 34241  0137C8  5136               	movf	FindMatchingSocket@partialMatch& (0+255),w,b
 34242  0137CA  0AFE               	xorlw	254
 34243  0137CC  B4D8               	btfsc	status,2,c
 34244  0137CE  D044               	goto	l13206
 34245                           
 34246                           ; BSR set to: 1
 34247                           ;tcp.c: 3237: {
 34248                           ;tcp.c: 3238: SyncTCBStub(partialMatch);
 34249  0137D0  0101               	movlb	1	; () banked
 34250  0137D2  5136               	movf	FindMatchingSocket@partialMatch& (0+255),w,b
 34251  0137D4  EC30  F0D0         	call	_SyncTCBStub
 34252                           
 34253                           ;tcp.c: 3239: SyncTCB();
 34254  0137D8  EC10  F0CB         	call	_SyncTCB	;wreg free
 34255                           
 34256                           ;tcp.c: 3255: if(partialMatch != (0xFE))
 34257  0137DC  0101               	movlb	1	; () banked
 34258  0137DE  5136               	movf	FindMatchingSocket@partialMatch& (0+255),w,b
 34259  0137E0  0AFE               	xorlw	254
 34260  0137E2  B4D8               	btfsc	status,2,c
 34261  0137E4  D039               	goto	l13206
 34262                           
 34263                           ; BSR set to: 1
 34264                           ;tcp.c: 3256: {
 34265                           ;tcp.c: 3257: MyTCBStub.remoteHash.Val = hash;
 34266  0137E6  C134  F1F9         	movff	FindMatchingSocket@hash,_MyTCBStub+25
 34267  0137EA  C135  F1FA         	movff	FindMatchingSocket@hash+1,_MyTCBStub+26
 34268                           
 34269                           ; BSR set to: 1
 34270                           ;tcp.c: 3259: memcpy((void*)&MyTCB.remote, (void*)remote, sizeof(NODE_INFO));
 34271  0137EE  0101               	movlb	1	; () banked
 34272  0137F0  0E01               	movlw	high (_MyTCB+22)
 34273  0137F2  0101               	movlb	1	; () banked
 34274  0137F4  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 34275  0137F6  0101               	movlb	1	; () banked
 34276  0137F8  0ECF               	movlw	low (_MyTCB+22)
 34277  0137FA  0101               	movlb	1	; () banked
 34278  0137FC  6F14               	movwf	memcpy@d1& (0+255),b
 34279  0137FE  0101               	movlb	1	; () banked
 34280  013800  C12B  F117         	movff	FindMatchingSocket@remote+1,memcpy@s1+1
 34281  013804  0101               	movlb	1	; () banked
 34282  013806  C12A  F116         	movff	FindMatchingSocket@remote,memcpy@s1
 34283  01380A  0E00               	movlw	0
 34284  01380C  0101               	movlb	1	; () banked
 34285  01380E  6F19               	movwf	(memcpy@n+1)& (0+255),b
 34286  013810  0E0A               	movlw	10
 34287  013812  0101               	movlb	1	; () banked
 34288  013814  6F18               	movwf	memcpy@n& (0+255),b
 34289  013816  ECCF  F0D5         	call	_memcpy	;wreg free
 34290                           
 34291                           ;tcp.c: 3260: MyTCB.remotePort.Val = h->SourcePort;
 34292  01381A  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34293  01381E  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34294  013822  0101               	movlb	1	; () banked
 34295  013824  CFDE F1C7          	movff	postinc2,_MyTCB+14
 34296  013828  0101               	movlb	1	; () banked
 34297  01382A  CFDD F1C8          	movff	postdec2,_MyTCB+15
 34298                           
 34299                           ; BSR set to: 1
 34300                           ;tcp.c: 3261: MyTCB.localPort.Val = h->DestPort;
 34301  01382E  0101               	movlb	1	; () banked
 34302  013830  EE20 F002          	lfsr	2,2
 34303  013834  0101               	movlb	1	; () banked
 34304  013836  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34305  013838  26D9               	addwf	fsr2l,f,c
 34306  01383A  0101               	movlb	1	; () banked
 34307  01383C  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34308  01383E  22DA               	addwfc	fsr2h,f,c
 34309  013840  0101               	movlb	1	; () banked
 34310  013842  CFDE F1C9          	movff	postinc2,_MyTCB+16
 34311  013846  0101               	movlb	1	; () banked
 34312  013848  CFDD F1CA          	movff	postdec2,_MyTCB+17
 34313                           
 34314                           ; BSR set to: 1
 34315                           ;tcp.c: 3262: MyTCB.txUnackedTail = MyTCBStub.bufferTxStart;
 34316  01384C  C1E0  F1C5         	movff	_MyTCBStub,_MyTCB+12
 34317  013850  C1E1  F1C6         	movff	_MyTCBStub+1,_MyTCB+13
 34318                           
 34319                           ; BSR set to: 1
 34320                           ;tcp.c: 3265: return 1;
 34321  013854  0E01               	movlw	1
 34322  013856  0012               	return	
 34323  013858                     l13206:
 34324                           
 34325                           ; BSR set to: 1
 34326                           ;tcp.c: 3266: }
 34327                           ;tcp.c: 3267: }
 34328                           ;tcp.c: 3274: {
 34329                           ;tcp.c: 3275: uint16_t wQueueInsertPos;
 34330                           ;tcp.c: 3278: if(!h->Flags.bits.flagSYN)
 34331  013858  0101               	movlb	1	; () banked
 34332  01385A  EE20 F00D          	lfsr	2,13
 34333  01385E  0101               	movlb	1	; () banked
 34334  013860  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34335  013862  26D9               	addwf	fsr2l,f,c
 34336  013864  0101               	movlb	1	; () banked
 34337  013866  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34338  013868  22DA               	addwfc	fsr2h,f,c
 34339  01386A  B2DF               	btfsc	indf2,1,c
 34340  01386C  D002               	goto	l13212
 34341                           
 34342                           ; BSR set to: 1
 34343                           ;tcp.c: 3279: return 0;
 34344  01386E  0E00               	movlw	0
 34345  013870  0012               	return	
 34346  013872                     l13212:
 34347                           
 34348                           ; BSR set to: 1
 34349                           ;tcp.c: 3282: if(SYNQueue[(3u)-1].wDestPort)
 34350  013872  0102               	movlb	2	; () banked
 34351  013874  5139               	movf	(_SYNQueue+57)& (0+255),w,b
 34352  013876  1138               	iorwf	(_SYNQueue+56)& (0+255),w,b
 34353  013878  B4D8               	btfsc	status,2,c
 34354  01387A  D002               	goto	l13218
 34355                           
 34356                           ; BSR set to: 2
 34357                           ;tcp.c: 3283: return 0;
 34358  01387C  0E00               	movlw	0
 34359  01387E  0012               	return	
 34360  013880                     l13218:
 34361                           
 34362                           ; BSR set to: 2
 34363                           ;tcp.c: 3288: for(wQueueInsertPos = 0; wQueueInsertPos < (3u); wQueueInsertPos++)
 34364  013880  0E00               	movlw	0
 34365  013882  0101               	movlb	1	; () banked
 34366  013884  6F39               	movwf	(FindMatchingSocket@wQueueInsertPos+1)& (0+255),b
 34367  013886  0E00               	movlw	0
 34368  013888  0101               	movlb	1	; () banked
 34369  01388A  6F38               	movwf	FindMatchingSocket@wQueueInsertPos& (0+255),b
 34370  01388C                     
 34371                           ; BSR set to: 1
 34372  01388C  0E03               	movlw	3
 34373  01388E  0101               	movlb	1	; () banked
 34374  013890  5D38               	subwf	FindMatchingSocket@wQueueInsertPos& (0+255),w,b
 34375  013892  0E00               	movlw	0
 34376  013894  0101               	movlb	1	; () banked
 34377  013896  5939               	subwfb	(FindMatchingSocket@wQueueInsertPos+1)& (0+255),w,b
 34378  013898  B0D8               	btfsc	status,0,c
 34379  01389A  D0E8               	goto	l13250
 34380                           
 34381                           ; BSR set to: 1
 34382                           ;tcp.c: 3289: {
 34383                           ;tcp.c: 3291: if(SYNQueue[wQueueInsertPos].wDestPort == 0u)
 34384                           
 34385                           ; BSR set to: 1
 34386                           
 34387                           ; BSR set to: 1
 34388  01389C  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34389  0138A0  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34390  0138A4  0E00               	movlw	0
 34391  0138A6  0101               	movlb	1	; () banked
 34392  0138A8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34393  0138AA  0E14               	movlw	20
 34394  0138AC  0101               	movlb	1	; () banked
 34395  0138AE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34396  0138B0  EC15  F0DA         	call	___wmul	;wreg free
 34397  0138B4  0E10               	movlw	16
 34398  0138B6  0101               	movlb	1	; () banked
 34399  0138B8  270E               	addwf	?___wmul& (0+255),f,b
 34400  0138BA  0E00               	movlw	0
 34401  0138BC  0101               	movlb	1	; () banked
 34402  0138BE  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34403  0138C0  0102               	movlb	2	; () banked
 34404  0138C2  0E00               	movlw	low _SYNQueue
 34405  0138C4  0101               	movlb	1	; () banked
 34406  0138C6  250E               	addwf	?___wmul& (0+255),w,b
 34407  0138C8  6ED9               	movwf	fsr2l,c
 34408  0138CA  0102               	movlb	2	; () banked
 34409  0138CC  0E02               	movlw	high _SYNQueue
 34410  0138CE  0101               	movlb	1	; () banked
 34411  0138D0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34412  0138D2  6EDA               	movwf	fsr2h,c
 34413  0138D4  50DE               	movf	postinc2,w,c
 34414  0138D6  10DD               	iorwf	postdec2,w,c
 34415  0138D8  B4D8               	btfsc	status,2,c
 34416  0138DA  D0C8               	goto	l13250
 34417                           
 34418                           ; BSR set to: 1
 34419                           ;tcp.c: 3295: if(SYNQueue[wQueueInsertPos].wDestPort != h->DestPort)
 34420                           
 34421                           ; BSR set to: 1
 34422                           
 34423                           ; BSR set to: 1
 34424                           ;tcp.c: 3292: break;
 34425  0138DC  0101               	movlb	1	; () banked
 34426  0138DE  EE20 F002          	lfsr	2,2
 34427  0138E2  0101               	movlb	1	; () banked
 34428  0138E4  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34429  0138E6  26D9               	addwf	fsr2l,f,c
 34430  0138E8  0101               	movlb	1	; () banked
 34431  0138EA  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34432  0138EC  22DA               	addwfc	fsr2h,f,c
 34433  0138EE  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34434  0138F2  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34435  0138F6  0E00               	movlw	0
 34436  0138F8  0101               	movlb	1	; () banked
 34437  0138FA  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34438  0138FC  0E14               	movlw	20
 34439  0138FE  0101               	movlb	1	; () banked
 34440  013900  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34441  013902  EC15  F0DA         	call	___wmul	;wreg free
 34442  013906  0E10               	movlw	16
 34443  013908  0101               	movlb	1	; () banked
 34444  01390A  270E               	addwf	?___wmul& (0+255),f,b
 34445  01390C  0E00               	movlw	0
 34446  01390E  0101               	movlb	1	; () banked
 34447  013910  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34448  013912  0102               	movlb	2	; () banked
 34449  013914  0E00               	movlw	low _SYNQueue
 34450  013916  0101               	movlb	1	; () banked
 34451  013918  250E               	addwf	?___wmul& (0+255),w,b
 34452  01391A  6EE1               	movwf	fsr1l,c
 34453  01391C  0102               	movlb	2	; () banked
 34454  01391E  0E02               	movlw	high _SYNQueue
 34455  013920  0101               	movlb	1	; () banked
 34456  013922  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34457  013924  6EE2               	movwf	fsr1h,c
 34458  013926  52E6               	movf	postinc1,f,c
 34459  013928  52DE               	movf	postinc2,f,c
 34460  01392A  50DD               	movf	postdec2,w,c
 34461  01392C  18E5               	xorwf	postdec1,w,c
 34462  01392E  CFDF FFE8          	movff	indf2,wreg
 34463  013932  B4D8               	btfsc	status,2,c
 34464  013934  18E7               	xorwf	indf1,w,c
 34465  013936  A4D8               	btfss	status,2,c
 34466  013938  D095               	goto	l13246
 34467                           
 34468                           ; BSR set to: 1
 34469                           ;tcp.c: 3297: if(SYNQueue[wQueueInsertPos].wSourcePort != h->SourcePort)
 34470                           
 34471                           ; BSR set to: 1
 34472                           
 34473                           ; BSR set to: 1
 34474                           ;tcp.c: 3296: continue;
 34475  01393A  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34476  01393E  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34477  013942  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34478  013946  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34479  01394A  0E00               	movlw	0
 34480  01394C  0101               	movlb	1	; () banked
 34481  01394E  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34482  013950  0E14               	movlw	20
 34483  013952  0101               	movlb	1	; () banked
 34484  013954  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34485  013956  EC15  F0DA         	call	___wmul	;wreg free
 34486  01395A  0E0A               	movlw	10
 34487  01395C  0101               	movlb	1	; () banked
 34488  01395E  270E               	addwf	?___wmul& (0+255),f,b
 34489  013960  0E00               	movlw	0
 34490  013962  0101               	movlb	1	; () banked
 34491  013964  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34492  013966  0102               	movlb	2	; () banked
 34493  013968  0E00               	movlw	low _SYNQueue
 34494  01396A  0101               	movlb	1	; () banked
 34495  01396C  250E               	addwf	?___wmul& (0+255),w,b
 34496  01396E  6EE1               	movwf	fsr1l,c
 34497  013970  0102               	movlb	2	; () banked
 34498  013972  0E02               	movlw	high _SYNQueue
 34499  013974  0101               	movlb	1	; () banked
 34500  013976  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34501  013978  6EE2               	movwf	fsr1h,c
 34502  01397A  52E6               	movf	postinc1,f,c
 34503  01397C  52DE               	movf	postinc2,f,c
 34504  01397E  50DD               	movf	postdec2,w,c
 34505  013980  18E5               	xorwf	postdec1,w,c
 34506  013982  CFDF FFE8          	movff	indf2,wreg
 34507  013986  B4D8               	btfsc	status,2,c
 34508  013988  18E7               	xorwf	indf1,w,c
 34509  01398A  A4D8               	btfss	status,2,c
 34510  01398C  D06B               	goto	l13246
 34511                           
 34512                           ; BSR set to: 1
 34513                           ;tcp.c: 3299: if(SYNQueue[wQueueInsertPos].niSourceAddress.IPAddr.Val != remote->IPAddr.
      +                          Val)
 34514                           
 34515                           ; BSR set to: 1
 34516                           
 34517                           ; BSR set to: 1
 34518                           ;tcp.c: 3298: continue;
 34519  01398E  C12A  FFD9         	movff	FindMatchingSocket@remote,fsr2l
 34520  013992  C12B  FFDA         	movff	FindMatchingSocket@remote+1,fsr2h
 34521  013996  CFDE F12C          	movff	postinc2,??_FindMatchingSocket
 34522  01399A  CFDE F12D          	movff	postinc2,??_FindMatchingSocket+1
 34523  01399E  CFDE F12E          	movff	postinc2,??_FindMatchingSocket+2
 34524  0139A2  CFDE F12F          	movff	postinc2,??_FindMatchingSocket+3
 34525  0139A6  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34526  0139AA  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34527  0139AE  0E00               	movlw	0
 34528  0139B0  0101               	movlb	1	; () banked
 34529  0139B2  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34530  0139B4  0E14               	movlw	20
 34531  0139B6  0101               	movlb	1	; () banked
 34532  0139B8  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34533  0139BA  EC15  F0DA         	call	___wmul	;wreg free
 34534  0139BE  0102               	movlb	2	; () banked
 34535  0139C0  0E00               	movlw	low _SYNQueue
 34536  0139C2  0101               	movlb	1	; () banked
 34537  0139C4  250E               	addwf	?___wmul& (0+255),w,b
 34538  0139C6  6ED9               	movwf	fsr2l,c
 34539  0139C8  0102               	movlb	2	; () banked
 34540  0139CA  0E02               	movlw	high _SYNQueue
 34541  0139CC  0101               	movlb	1	; () banked
 34542  0139CE  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34543  0139D0  6EDA               	movwf	fsr2h,c
 34544  0139D2  CFDE F130          	movff	postinc2,??_FindMatchingSocket+4
 34545  0139D6  CFDE F131          	movff	postinc2,??_FindMatchingSocket+5
 34546  0139DA  CFDE F132          	movff	postinc2,??_FindMatchingSocket+6
 34547  0139DE  CFDE F133          	movff	postinc2,??_FindMatchingSocket+7
 34548  0139E2  0101               	movlb	1	; () banked
 34549  0139E4  512F               	movf	(??_FindMatchingSocket+3)& (0+255),w,b
 34550  0139E6  0101               	movlb	1	; () banked
 34551  0139E8  1933               	xorwf	(??_FindMatchingSocket+7)& (0+255),w,b
 34552  0139EA  E10E               	bnz	u14605
 34553  0139EC  0101               	movlb	1	; () banked
 34554  0139EE  512E               	movf	(??_FindMatchingSocket+2)& (0+255),w,b
 34555  0139F0  0101               	movlb	1	; () banked
 34556  0139F2  1932               	xorwf	(??_FindMatchingSocket+6)& (0+255),w,b
 34557  0139F4  E109               	bnz	u14605
 34558  0139F6  0101               	movlb	1	; () banked
 34559  0139F8  512D               	movf	(??_FindMatchingSocket+1)& (0+255),w,b
 34560  0139FA  0101               	movlb	1	; () banked
 34561  0139FC  1931               	xorwf	(??_FindMatchingSocket+5)& (0+255),w,b
 34562  0139FE  E104               	bnz	u14605
 34563  013A00  0101               	movlb	1	; () banked
 34564  013A02  512C               	movf	??_FindMatchingSocket& (0+255),w,b
 34565  013A04  0101               	movlb	1	; () banked
 34566  013A06  1930               	xorwf	(??_FindMatchingSocket+4)& (0+255),w,b
 34567  013A08                     u14605:
 34568  013A08  A4D8               	btfss	status,2,c
 34569  013A0A  D02C               	goto	l13246
 34570                           
 34571                           ; BSR set to: 1
 34572                           ;tcp.c: 3303: SYNQueue[wQueueInsertPos].wTimestamp = TickGetDiv256();
 34573                           
 34574                           ; BSR set to: 1
 34575                           
 34576                           ; BSR set to: 1
 34577                           ;tcp.c: 3300: continue;
 34578  013A0C  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 34579  013A10  C100  F12C         	movff	?_TickGetDiv256,??_FindMatchingSocket
 34580  013A14  C101  F12D         	movff	?_TickGetDiv256+1,??_FindMatchingSocket+1
 34581  013A18  C102  F12E         	movff	?_TickGetDiv256+2,??_FindMatchingSocket+2
 34582  013A1C  C103  F12F         	movff	?_TickGetDiv256+3,??_FindMatchingSocket+3
 34583  013A20  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34584  013A24  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34585  013A28  0E00               	movlw	0
 34586  013A2A  0101               	movlb	1	; () banked
 34587  013A2C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34588  013A2E  0E14               	movlw	20
 34589  013A30  0101               	movlb	1	; () banked
 34590  013A32  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34591  013A34  EC15  F0DA         	call	___wmul	;wreg free
 34592  013A38  0E12               	movlw	18
 34593  013A3A  0101               	movlb	1	; () banked
 34594  013A3C  270E               	addwf	?___wmul& (0+255),f,b
 34595  013A3E  0E00               	movlw	0
 34596  013A40  0101               	movlb	1	; () banked
 34597  013A42  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34598  013A44  0102               	movlb	2	; () banked
 34599  013A46  0E00               	movlw	low _SYNQueue
 34600  013A48  0101               	movlb	1	; () banked
 34601  013A4A  250E               	addwf	?___wmul& (0+255),w,b
 34602  013A4C  6ED9               	movwf	fsr2l,c
 34603  013A4E  0102               	movlb	2	; () banked
 34604  013A50  0E02               	movlw	high _SYNQueue
 34605  013A52  0101               	movlb	1	; () banked
 34606  013A54  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34607  013A56  6EDA               	movwf	fsr2h,c
 34608  013A58  C12C  FFDE         	movff	??_FindMatchingSocket,postinc2
 34609  013A5C  C12D  FFDD         	movff	??_FindMatchingSocket+1,postdec2
 34610                           
 34611                           ; BSR set to: 1
 34612                           ;tcp.c: 3304: return 0;
 34613  013A60  0E00               	movlw	0
 34614  013A62  0012               	return	
 34615  013A64                     l13246:
 34616                           
 34617                           ; BSR set to: 1
 34618  013A64  0101               	movlb	1	; () banked
 34619  013A66  4B38               	infsnz	FindMatchingSocket@wQueueInsertPos& (0+255),f,b
 34620  013A68  2B39               	incf	(FindMatchingSocket@wQueueInsertPos+1)& (0+255),f,b
 34621  013A6A  D710               	goto	L38
 34622  013A6C                     l13250:
 34623                           
 34624                           ; BSR set to: 1
 34625                           ;tcp.c: 3305: }
 34626                           ;tcp.c: 3310: for(hTCP = 0; hTCP < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitial
      +                          izer[0])); hTCP++)
 34627  013A6C  0E00               	movlw	0
 34628  013A6E  0101               	movlb	1	; () banked
 34629  013A70  6F37               	movwf	FindMatchingSocket@hTCP& (0+255),b
 34630  013A72  0101               	movlb	1	; () banked
 34631  013A74  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 34632  013A76  A4D8               	btfss	status,2,c
 34633  013A78  D0F0               	goto	l13284
 34634                           
 34635                           ; BSR set to: 1
 34636                           ;tcp.c: 3311: {
 34637                           ;tcp.c: 3312: SyncTCBStub(hTCP);
 34638                           
 34639                           ; BSR set to: 1
 34640                           
 34641                           ; BSR set to: 1
 34642  013A7A  0101               	movlb	1	; () banked
 34643  013A7C  5137               	movf	FindMatchingSocket@hTCP& (0+255),w,b
 34644  013A7E  EC30  F0D0         	call	_SyncTCBStub
 34645                           
 34646                           ;tcp.c: 3313: if(!MyTCBStub.Flags.bServer)
 34647  013A82  0101               	movlb	1	; () banked
 34648  013A84  A7F7               	btfss	(_MyTCBStub+23)& (0+255),3,b
 34649  013A86  D0E6               	goto	l13280
 34650                           
 34651                           ; BSR set to: 1
 34652                           ;tcp.c: 3316: SyncTCB();
 34653                           
 34654                           ; BSR set to: 1
 34655                           
 34656                           ; BSR set to: 1
 34657                           ;tcp.c: 3314: continue;
 34658  013A88  EC10  F0CB         	call	_SyncTCB	;wreg free
 34659                           
 34660                           ;tcp.c: 3320: if(MyTCB.localPort.Val != h->DestPort)
 34661  013A8C  0101               	movlb	1	; () banked
 34662  013A8E  EE20 F002          	lfsr	2,2
 34663  013A92  0101               	movlb	1	; () banked
 34664  013A94  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34665  013A96  26D9               	addwf	fsr2l,f,c
 34666  013A98  0101               	movlb	1	; () banked
 34667  013A9A  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34668  013A9C  22DA               	addwfc	fsr2h,f,c
 34669  013A9E  0101               	movlb	1	; () banked
 34670  013AA0  EE11  F0C9         	lfsr	1,_MyTCB+16
 34671  013AA4  52E6               	movf	postinc1,f,c
 34672  013AA6  52DE               	movf	postinc2,f,c
 34673  013AA8  50DD               	movf	postdec2,w,c
 34674  013AAA  18E5               	xorwf	postdec1,w,c
 34675  013AAC  CFDF FFE8          	movff	indf2,wreg
 34676  013AB0  B4D8               	btfsc	status,2,c
 34677  013AB2  18E7               	xorwf	indf1,w,c
 34678  013AB4  A4D8               	btfss	status,2,c
 34679  013AB6  D0CE               	goto	l13280
 34680                           
 34681                           ; BSR set to: 1
 34682                           ;tcp.c: 3325: memcpy((void*)&SYNQueue[wQueueInsertPos].niSourceAddress, (void*)remote, s
      +                          izeof(NODE_INFO));
 34683                           
 34684                           ; BSR set to: 1
 34685                           
 34686                           ; BSR set to: 1
 34687                           ;tcp.c: 3322: continue;
 34688  013AB8  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34689  013ABC  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34690  013AC0  0E00               	movlw	0
 34691  013AC2  0101               	movlb	1	; () banked
 34692  013AC4  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34693  013AC6  0E14               	movlw	20
 34694  013AC8  0101               	movlb	1	; () banked
 34695  013ACA  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34696  013ACC  EC15  F0DA         	call	___wmul	;wreg free
 34697  013AD0  0102               	movlb	2	; () banked
 34698  013AD2  0E00               	movlw	low _SYNQueue
 34699  013AD4  0101               	movlb	1	; () banked
 34700  013AD6  250E               	addwf	?___wmul& (0+255),w,b
 34701  013AD8  0101               	movlb	1	; () banked
 34702  013ADA  6F14               	movwf	memcpy@d1& (0+255),b
 34703  013ADC  0102               	movlb	2	; () banked
 34704  013ADE  0E02               	movlw	high _SYNQueue
 34705  013AE0  0101               	movlb	1	; () banked
 34706  013AE2  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34707  013AE4  0101               	movlb	1	; () banked
 34708  013AE6  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 34709  013AE8  0101               	movlb	1	; () banked
 34710  013AEA  C12B  F117         	movff	FindMatchingSocket@remote+1,memcpy@s1+1
 34711  013AEE  0101               	movlb	1	; () banked
 34712  013AF0  C12A  F116         	movff	FindMatchingSocket@remote,memcpy@s1
 34713  013AF4  0E00               	movlw	0
 34714  013AF6  0101               	movlb	1	; () banked
 34715  013AF8  6F19               	movwf	(memcpy@n+1)& (0+255),b
 34716  013AFA  0E0A               	movlw	10
 34717  013AFC  0101               	movlb	1	; () banked
 34718  013AFE  6F18               	movwf	memcpy@n& (0+255),b
 34719  013B00  ECCF  F0D5         	call	_memcpy	;wreg free
 34720                           
 34721                           ;tcp.c: 3326: SYNQueue[wQueueInsertPos].wSourcePort = h->SourcePort;
 34722  013B04  C128  FFD9         	movff	FindMatchingSocket@h,fsr2l
 34723  013B08  C129  FFDA         	movff	FindMatchingSocket@h+1,fsr2h
 34724  013B0C  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34725  013B10  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34726  013B14  0E00               	movlw	0
 34727  013B16  0101               	movlb	1	; () banked
 34728  013B18  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34729  013B1A  0E14               	movlw	20
 34730  013B1C  0101               	movlb	1	; () banked
 34731  013B1E  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34732  013B20  EC15  F0DA         	call	___wmul	;wreg free
 34733  013B24  0E0A               	movlw	10
 34734  013B26  0101               	movlb	1	; () banked
 34735  013B28  270E               	addwf	?___wmul& (0+255),f,b
 34736  013B2A  0E00               	movlw	0
 34737  013B2C  0101               	movlb	1	; () banked
 34738  013B2E  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34739  013B30  0102               	movlb	2	; () banked
 34740  013B32  0E00               	movlw	low _SYNQueue
 34741  013B34  0101               	movlb	1	; () banked
 34742  013B36  250E               	addwf	?___wmul& (0+255),w,b
 34743  013B38  6EE1               	movwf	fsr1l,c
 34744  013B3A  0102               	movlb	2	; () banked
 34745  013B3C  0E02               	movlw	high _SYNQueue
 34746  013B3E  0101               	movlb	1	; () banked
 34747  013B40  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34748  013B42  6EE2               	movwf	fsr1h,c
 34749  013B44  CFDE FFE6          	movff	postinc2,postinc1
 34750  013B48  CFDD FFE5          	movff	postdec2,postdec1
 34751                           
 34752                           ; BSR set to: 1
 34753                           ;tcp.c: 3327: SYNQueue[wQueueInsertPos].dwSourceSEQ = h->SeqNumber;
 34754  013B4C  0101               	movlb	1	; () banked
 34755  013B4E  EE20 F004          	lfsr	2,4
 34756  013B52  0101               	movlb	1	; () banked
 34757  013B54  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34758  013B56  26D9               	addwf	fsr2l,f,c
 34759  013B58  0101               	movlb	1	; () banked
 34760  013B5A  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34761  013B5C  22DA               	addwfc	fsr2h,f,c
 34762  013B5E  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34763  013B62  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34764  013B66  0E00               	movlw	0
 34765  013B68  0101               	movlb	1	; () banked
 34766  013B6A  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34767  013B6C  0E14               	movlw	20
 34768  013B6E  0101               	movlb	1	; () banked
 34769  013B70  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34770  013B72  EC15  F0DA         	call	___wmul	;wreg free
 34771  013B76  0E0C               	movlw	12
 34772  013B78  0101               	movlb	1	; () banked
 34773  013B7A  270E               	addwf	?___wmul& (0+255),f,b
 34774  013B7C  0E00               	movlw	0
 34775  013B7E  0101               	movlb	1	; () banked
 34776  013B80  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34777  013B82  0102               	movlb	2	; () banked
 34778  013B84  0E00               	movlw	low _SYNQueue
 34779  013B86  0101               	movlb	1	; () banked
 34780  013B88  250E               	addwf	?___wmul& (0+255),w,b
 34781  013B8A  6EE1               	movwf	fsr1l,c
 34782  013B8C  0102               	movlb	2	; () banked
 34783  013B8E  0E02               	movlw	high _SYNQueue
 34784  013B90  0101               	movlb	1	; () banked
 34785  013B92  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34786  013B94  6EE2               	movwf	fsr1h,c
 34787  013B96  CFDE FFE6          	movff	postinc2,postinc1
 34788  013B9A  CFDE FFE6          	movff	postinc2,postinc1
 34789  013B9E  CFDE FFE6          	movff	postinc2,postinc1
 34790  013BA2  CFDD FFE5          	movff	postdec2,postdec1
 34791  013BA6  52E5               	movf	postdec1,f,c
 34792  013BA8  52E5               	movf	postdec1,f,c
 34793                           
 34794                           ; BSR set to: 1
 34795                           ;tcp.c: 3328: SYNQueue[wQueueInsertPos].wDestPort = h->DestPort;
 34796  013BAA  0101               	movlb	1	; () banked
 34797  013BAC  EE20 F002          	lfsr	2,2
 34798  013BB0  0101               	movlb	1	; () banked
 34799  013BB2  5128               	movf	FindMatchingSocket@h& (0+255),w,b
 34800  013BB4  26D9               	addwf	fsr2l,f,c
 34801  013BB6  0101               	movlb	1	; () banked
 34802  013BB8  5129               	movf	(FindMatchingSocket@h+1)& (0+255),w,b
 34803  013BBA  22DA               	addwfc	fsr2h,f,c
 34804  013BBC  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34805  013BC0  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34806  013BC4  0E00               	movlw	0
 34807  013BC6  0101               	movlb	1	; () banked
 34808  013BC8  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34809  013BCA  0E14               	movlw	20
 34810  013BCC  0101               	movlb	1	; () banked
 34811  013BCE  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34812  013BD0  EC15  F0DA         	call	___wmul	;wreg free
 34813  013BD4  0E10               	movlw	16
 34814  013BD6  0101               	movlb	1	; () banked
 34815  013BD8  270E               	addwf	?___wmul& (0+255),f,b
 34816  013BDA  0E00               	movlw	0
 34817  013BDC  0101               	movlb	1	; () banked
 34818  013BDE  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34819  013BE0  0102               	movlb	2	; () banked
 34820  013BE2  0E00               	movlw	low _SYNQueue
 34821  013BE4  0101               	movlb	1	; () banked
 34822  013BE6  250E               	addwf	?___wmul& (0+255),w,b
 34823  013BE8  6EE1               	movwf	fsr1l,c
 34824  013BEA  0102               	movlb	2	; () banked
 34825  013BEC  0E02               	movlw	high _SYNQueue
 34826  013BEE  0101               	movlb	1	; () banked
 34827  013BF0  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34828  013BF2  6EE2               	movwf	fsr1h,c
 34829  013BF4  CFDE FFE6          	movff	postinc2,postinc1
 34830  013BF8  CFDD FFE5          	movff	postdec2,postdec1
 34831                           
 34832                           ; BSR set to: 1
 34833                           ;tcp.c: 3329: SYNQueue[wQueueInsertPos].wTimestamp = TickGetDiv256();
 34834  013BFC  EC81  F0DB         	call	_TickGetDiv256	;wreg free
 34835  013C00  C100  F12C         	movff	?_TickGetDiv256,??_FindMatchingSocket
 34836  013C04  C101  F12D         	movff	?_TickGetDiv256+1,??_FindMatchingSocket+1
 34837  013C08  C102  F12E         	movff	?_TickGetDiv256+2,??_FindMatchingSocket+2
 34838  013C0C  C103  F12F         	movff	?_TickGetDiv256+3,??_FindMatchingSocket+3
 34839  013C10  C138  F10E         	movff	FindMatchingSocket@wQueueInsertPos,___wmul@multiplier
 34840  013C14  C139  F10F         	movff	FindMatchingSocket@wQueueInsertPos+1,___wmul@multiplier+1
 34841  013C18  0E00               	movlw	0
 34842  013C1A  0101               	movlb	1	; () banked
 34843  013C1C  6F11               	movwf	(___wmul@multiplicand+1)& (0+255),b
 34844  013C1E  0E14               	movlw	20
 34845  013C20  0101               	movlb	1	; () banked
 34846  013C22  6F10               	movwf	___wmul@multiplicand& (0+255),b
 34847  013C24  EC15  F0DA         	call	___wmul	;wreg free
 34848  013C28  0E12               	movlw	18
 34849  013C2A  0101               	movlb	1	; () banked
 34850  013C2C  270E               	addwf	?___wmul& (0+255),f,b
 34851  013C2E  0E00               	movlw	0
 34852  013C30  0101               	movlb	1	; () banked
 34853  013C32  230F               	addwfc	(?___wmul+1)& (0+255),f,b
 34854  013C34  0102               	movlb	2	; () banked
 34855  013C36  0E00               	movlw	low _SYNQueue
 34856  013C38  0101               	movlb	1	; () banked
 34857  013C3A  250E               	addwf	?___wmul& (0+255),w,b
 34858  013C3C  6ED9               	movwf	fsr2l,c
 34859  013C3E  0102               	movlb	2	; () banked
 34860  013C40  0E02               	movlw	high _SYNQueue
 34861  013C42  0101               	movlb	1	; () banked
 34862  013C44  210F               	addwfc	(?___wmul+1)& (0+255),w,b
 34863  013C46  6EDA               	movwf	fsr2h,c
 34864  013C48  C12C  FFDE         	movff	??_FindMatchingSocket,postinc2
 34865  013C4C  C12D  FFDD         	movff	??_FindMatchingSocket+1,postdec2
 34866                           
 34867                           ; BSR set to: 1
 34868                           ;tcp.c: 3331: return 0;
 34869  013C50  0E00               	movlw	0
 34870  013C52  0012               	return	
 34871  013C54                     l13280:
 34872                           
 34873                           ; BSR set to: 1
 34874  013C54  0101               	movlb	1	; () banked
 34875  013C56  2B37               	incf	FindMatchingSocket@hTCP& (0+255),f,b
 34876  013C58  D70C               	goto	L39
 34877  013C5A                     l13284:
 34878                           
 34879                           ; BSR set to: 1
 34880                           ;tcp.c: 3332: }
 34881                           ;tcp.c: 3333: }
 34882                           ;tcp.c: 3336: return 0;
 34883  013C5A  0E00               	movlw	0
 34884  013C5C  0012               	return	
 34885  013C5E                     __end_of_FindMatchingSocket:
 34886                           	opt stack 0
 34887                           tblptru	equ	0xFF8
 34888                           tblptrh	equ	0xFF7
 34889                           tblptrl	equ	0xFF6
 34890                           tablat	equ	0xFF5
 34891                           prodh	equ	0xFF4
 34892                           prodl	equ	0xFF3
 34893                           intcon	equ	0xFF2
 34894                           indf0	equ	0xFEF
 34895                           postinc0	equ	0xFEE
 34896                           fsr0h	equ	0xFEA
 34897                           fsr0l	equ	0xFE9
 34898                           wreg	equ	0xFE8
 34899                           indf1	equ	0xFE7
 34900                           postinc1	equ	0xFE6
 34901                           postdec1	equ	0xFE5
 34902                           fsr1h	equ	0xFE2
 34903                           fsr1l	equ	0xFE1
 34904                           indf2	equ	0xFDF
 34905                           postinc2	equ	0xFDE
 34906                           postdec2	equ	0xFDD
 34907                           fsr2h	equ	0xFDA
 34908                           fsr2l	equ	0xFD9
 34909                           status	equ	0xFD8
 34910                           
 34911 ;; *************** function ___wmul *****************
 34912 ;; Defined at:
 34913 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 34914 ;; Parameters:    Size  Location     Type
 34915 ;;  multiplier      2   14[BANK1 ] unsigned int 
 34916 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 34917 ;; Auto vars:     Size  Location     Type
 34918 ;;  product         2   18[BANK1 ] unsigned int 
 34919 ;; Return value:  Size  Location     Type
 34920 ;;                  2   14[BANK1 ] unsigned int 
 34921 ;; Registers used:
 34922 ;;		wreg, status,2, status,0, prodl, prodh
 34923 ;; Tracked objects:
 34924 ;;		On entry : 0/0
 34925 ;;		On exit  : 0/0
 34926 ;;		Unchanged: 0/0
 34927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 34928 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34929 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34931 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34932 ;;Total ram usage:        6 bytes
 34933 ;; Hardware stack levels used:    1
 34934 ;; Hardware stack levels required when called:   10
 34935 ;; This function calls:
 34936 ;;		Nothing
 34937 ;; This function is called by:
 34938 ;;		_TCPTick
 34939 ;;		_FindMatchingSocket
 34940 ;;		_fround
 34941 ;;		_scale
 34942 ;;		_sprintf
 34943 ;;		_uitoa
 34944 ;; This function uses a non-reentrant model
 34945 ;;
 34946                           
 34947                           	psect	text63
 34948  01B42A                     __ptext63:
 34949                           	opt stack 0
 34950  01B42A                     ___wmul:
 34951                           	opt stack 16
 34952                           
 34953                           ;incstack = 0
 34954  01B42A  0101               	movlb	1	; () banked
 34955  01B42C  510E               	movf	___wmul@multiplier& (0+255),w,b
 34956  01B42E  0101               	movlb	1	; () banked
 34957  01B430  0310               	mulwf	___wmul@multiplicand& (0+255),b
 34958  01B432  CFF3 F112          	movff	prodl,___wmul@product
 34959  01B436  CFF4 F113          	movff	prodh,___wmul@product+1
 34960  01B43A  0101               	movlb	1	; () banked
 34961  01B43C  510E               	movf	___wmul@multiplier& (0+255),w,b
 34962  01B43E  0101               	movlb	1	; () banked
 34963  01B440  0311               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 34964  01B442  50F3               	movf	prodl,w,c
 34965  01B444  0101               	movlb	1	; () banked
 34966  01B446  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 34967  01B448  0101               	movlb	1	; () banked
 34968  01B44A  510F               	movf	(___wmul@multiplier+1)& (0+255),w,b
 34969  01B44C  0101               	movlb	1	; () banked
 34970  01B44E  0310               	mulwf	___wmul@multiplicand& (0+255),b
 34971  01B450  50F3               	movf	prodl,w,c
 34972  01B452  0101               	movlb	1	; () banked
 34973  01B454  2713               	addwf	(___wmul@product+1)& (0+255),f,b
 34974                           
 34975                           ; BSR set to: 1
 34976  01B456  C112  F10E         	movff	___wmul@product,?___wmul
 34977  01B45A  C113  F10F         	movff	___wmul@product+1,?___wmul+1
 34978  01B45E  0012               	return	
 34979  01B460                     __end_of___wmul:
 34980                           	opt stack 0
 34981                           tblptru	equ	0xFF8
 34982                           tblptrh	equ	0xFF7
 34983                           tblptrl	equ	0xFF6
 34984                           tablat	equ	0xFF5
 34985                           prodh	equ	0xFF4
 34986                           prodl	equ	0xFF3
 34987                           intcon	equ	0xFF2
 34988                           indf0	equ	0xFEF
 34989                           postinc0	equ	0xFEE
 34990                           fsr0h	equ	0xFEA
 34991                           fsr0l	equ	0xFE9
 34992                           wreg	equ	0xFE8
 34993                           indf1	equ	0xFE7
 34994                           postinc1	equ	0xFE6
 34995                           postdec1	equ	0xFE5
 34996                           fsr1h	equ	0xFE2
 34997                           fsr1l	equ	0xFE1
 34998                           indf2	equ	0xFDF
 34999                           postinc2	equ	0xFDE
 35000                           postdec2	equ	0xFDD
 35001                           fsr2h	equ	0xFDA
 35002                           fsr2l	equ	0xFD9
 35003                           status	equ	0xFD8
 35004                           
 35005 ;; *************** function _TickGetDiv256 *****************
 35006 ;; Defined at:
 35007 ;;		line 290 in file "../tcpip/tick.c"
 35008 ;; Parameters:    Size  Location     Type
 35009 ;;		None
 35010 ;; Auto vars:     Size  Location     Type
 35011 ;;  dw              4    4[BANK1 ] unsigned long 
 35012 ;; Return value:  Size  Location     Type
 35013 ;;                  4    0[BANK1 ] unsigned long 
 35014 ;; Registers used:
 35015 ;;		fsr2l, fsr2h, cstack
 35016 ;; Tracked objects:
 35017 ;;		On entry : 0/0
 35018 ;;		On exit  : 0/0
 35019 ;;		Unchanged: 0/0
 35020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35021 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35022 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35024 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35025 ;;Total ram usage:        8 bytes
 35026 ;; Hardware stack levels used:    1
 35027 ;; Hardware stack levels required when called:   11
 35028 ;; This function calls:
 35029 ;;		_GetTickCopy
 35030 ;; This function is called by:
 35031 ;;		_TCPPutArray
 35032 ;;		_TCPGetArray
 35033 ;;		_TCPTick
 35034 ;;		_FindMatchingSocket
 35035 ;;		_HandleTCPSeg
 35036 ;;		_TCPPut
 35037 ;;		_TCPPutROMArray
 35038 ;;		_TCPGet
 35039 ;; This function uses a non-reentrant model
 35040 ;;
 35041                           
 35042                           	psect	text64
 35043  01B702                     __ptext64:
 35044                           	opt stack 0
 35045  01B702                     _TickGetDiv256:
 35046                           	opt stack 17
 35047                           
 35048                           ;tick.c: 292: uint32_t dw;
 35049                           ;tick.c: 294: GetTickCopy();
 35050                           
 35051                           ; BSR set to: 1
 35052                           ;incstack = 0
 35053  01B702  EC4B  F0DA         	call	_GetTickCopy	;wreg free
 35054                           
 35055                           ;tick.c: 295: ((uint8_t*)&dw)[0] = vTickReading[1];
 35056  01B706  C0C8  F104         	movff	_vTickReading+1,TickGetDiv256@dw	;volatile
 35057                           
 35058                           ;tick.c: 296: ((uint8_t*)&dw)[1] = vTickReading[2];
 35059  01B70A  C0C9  F105         	movff	_vTickReading+2,TickGetDiv256@dw+1	;volatile
 35060                           
 35061                           ;tick.c: 297: ((uint8_t*)&dw)[2] = vTickReading[3];
 35062  01B70E  C0CA  F106         	movff	_vTickReading+3,TickGetDiv256@dw+2	;volatile
 35063                           
 35064                           ;tick.c: 298: ((uint8_t*)&dw)[3] = vTickReading[4];
 35065  01B712  C0CB  F107         	movff	_vTickReading+4,TickGetDiv256@dw+3	;volatile
 35066                           
 35067                           ;tick.c: 300: return dw;
 35068  01B716  C104  F100         	movff	TickGetDiv256@dw,?_TickGetDiv256
 35069  01B71A  C105  F101         	movff	TickGetDiv256@dw+1,?_TickGetDiv256+1
 35070  01B71E  C106  F102         	movff	TickGetDiv256@dw+2,?_TickGetDiv256+2
 35071  01B722  C107  F103         	movff	TickGetDiv256@dw+3,?_TickGetDiv256+3
 35072  01B726  0012               	return	
 35073  01B728                     __end_of_TickGetDiv256:
 35074                           	opt stack 0
 35075                           tblptru	equ	0xFF8
 35076                           tblptrh	equ	0xFF7
 35077                           tblptrl	equ	0xFF6
 35078                           tablat	equ	0xFF5
 35079                           prodh	equ	0xFF4
 35080                           prodl	equ	0xFF3
 35081                           intcon	equ	0xFF2
 35082                           indf0	equ	0xFEF
 35083                           postinc0	equ	0xFEE
 35084                           fsr0h	equ	0xFEA
 35085                           fsr0l	equ	0xFE9
 35086                           wreg	equ	0xFE8
 35087                           indf1	equ	0xFE7
 35088                           postinc1	equ	0xFE6
 35089                           postdec1	equ	0xFE5
 35090                           fsr1h	equ	0xFE2
 35091                           fsr1l	equ	0xFE1
 35092                           indf2	equ	0xFDF
 35093                           postinc2	equ	0xFDE
 35094                           postdec2	equ	0xFDD
 35095                           fsr2h	equ	0xFDA
 35096                           fsr2l	equ	0xFD9
 35097                           status	equ	0xFD8
 35098                           
 35099 ;; *************** function _MACGetHeader *****************
 35100 ;; Defined at:
 35101 ;;		line 429 in file "../tcpip/ETH97J60.c"
 35102 ;; Parameters:    Size  Location     Type
 35103 ;;  remote          2   30[BANK1 ] PTR struct .
 35104 ;;		 -> remoteNode(10), 
 35105 ;;  type            2   32[BANK1 ] PTR unsigned char 
 35106 ;;		 -> StackTask@cFrameType(1), 
 35107 ;; Auto vars:     Size  Location     Type
 35108 ;;  header         20   36[BANK1 ] struct .
 35109 ;; Return value:  Size  Location     Type
 35110 ;;                  1    wreg      unsigned char 
 35111 ;; Registers used:
 35112 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35113 ;; Tracked objects:
 35114 ;;		On entry : 0/0
 35115 ;;		On exit  : 0/0
 35116 ;;		Unchanged: 0/0
 35117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35118 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35119 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35120 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35121 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35122 ;;Total ram usage:       26 bytes
 35123 ;; Hardware stack levels used:    1
 35124 ;; Hardware stack levels required when called:   11
 35125 ;; This function calls:
 35126 ;;		_MACDiscardRx
 35127 ;;		_MACGetArray
 35128 ;;		_memcpy
 35129 ;;		_swaps
 35130 ;; This function is called by:
 35131 ;;		_StackTask
 35132 ;; This function uses a non-reentrant model
 35133 ;;
 35134                           
 35135                           	psect	text65
 35136  018798                     __ptext65:
 35137                           	opt stack 0
 35138  018798                     _MACGetHeader:
 35139                           	opt stack 18
 35140                           
 35141                           ;ETH97J60.c: 431: ENC_PREAMBLE header;
 35142                           ;ETH97J60.c: 434: if(EPKTCNT == 0u)
 35143                           
 35144                           ;incstack = 0
 35145  018798  010E               	movlb	14	; () banked
 35146  01879A  67D9               	tstfsz	217,b	;volatile
 35147  01879C  D002               	goto	l285
 35148                           
 35149                           ; BSR set to: 14
 35150                           ;ETH97J60.c: 435: {
 35151                           ;ETH97J60.c: 471: return FALSE;
 35152  01879E  0E00               	movlw	0
 35153  0187A0  0012               	return	
 35154  0187A2                     l285:
 35155                           
 35156                           ; BSR set to: 14
 35157                           ;ETH97J60.c: 472: }
 35158                           ;ETH97J60.c: 476: flags.bits.bRXPolarityValid = 1;
 35159  0187A2  0101               	movlb	1	; () banked
 35160  0187A4  83B6               	bsf	_flags& (0+255),1,b
 35161                           
 35162                           ;ETH97J60.c: 479: if(flags.bits.bWasDiscarded == 0u)
 35163  0187A6  0101               	movlb	1	; () banked
 35164  0187A8  B1B6               	btfsc	_flags& (0+255),0,b
 35165  0187AA  D004               	goto	l287
 35166                           
 35167                           ; BSR set to: 1
 35168                           ;ETH97J60.c: 480: {
 35169                           ;ETH97J60.c: 481: MACDiscardRx();
 35170  0187AC  EC8E  F0D8         	call	_MACDiscardRx	;wreg free
 35171                           
 35172                           ;ETH97J60.c: 482: return FALSE;
 35173  0187B0  0E00               	movlw	0
 35174  0187B2  0012               	return	
 35175  0187B4                     l287:
 35176                           
 35177                           ; BSR set to: 1
 35178                           ;ETH97J60.c: 483: }
 35179                           ;ETH97J60.c: 485: CurrentPacketLocation.Val = NextPacketLocation.Val;
 35180  0187B4  C0E3  F0E1         	movff	_NextPacketLocation,_CurrentPacketLocation
 35181  0187B8  C0E4  F0E2         	movff	_NextPacketLocation+1,_CurrentPacketLocation+1
 35182                           
 35183                           ;ETH97J60.c: 488: ERDPT = CurrentPacketLocation.Val;
 35184  0187BC  C0E1  FF7A         	movff	_CurrentPacketLocation,3962	;volatile
 35185  0187C0  C0E2  FF7B         	movff	_CurrentPacketLocation+1,3963	;volatile
 35186                           
 35187                           ; BSR set to: 1
 35188                           ;ETH97J60.c: 491: MACGetArray((BYTE*)&header, sizeof(header));
 35189  0187C4  0101               	movlb	1	; () banked
 35190  0187C6  0E01               	movlw	high MACGetHeader@header
 35191  0187C8  0101               	movlb	1	; () banked
 35192  0187CA  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 35193  0187CC  0101               	movlb	1	; () banked
 35194  0187CE  0E24               	movlw	low MACGetHeader@header
 35195  0187D0  0101               	movlb	1	; () banked
 35196  0187D2  6F00               	movwf	MACGetArray@val& (0+255),b
 35197  0187D4  0E00               	movlw	0
 35198  0187D6  0101               	movlb	1	; () banked
 35199  0187D8  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 35200  0187DA  0E14               	movlw	20
 35201  0187DC  0101               	movlb	1	; () banked
 35202  0187DE  6F02               	movwf	MACGetArray@len& (0+255),b
 35203  0187E0  EC35  F0D7         	call	_MACGetArray	;wreg free
 35204                           
 35205                           ;ETH97J60.c: 495: header.Type.Val = swaps(header.Type.Val);
 35206  0187E4  C136  F100         	movff	MACGetHeader@header+18,swaps@v
 35207  0187E8  C137  F101         	movff	MACGetHeader@header+19,swaps@v+1
 35208  0187EC  EC79  F0DC         	call	_swaps	;wreg free
 35209  0187F0  0101               	movlb	1	; () banked
 35210  0187F2  C100  F136         	movff	?_swaps,MACGetHeader@header+18
 35211  0187F6  0101               	movlb	1	; () banked
 35212  0187F8  C101  F137         	movff	?_swaps+1,MACGetHeader@header+19
 35213                           
 35214                           ; BSR set to: 1
 35215                           ;ETH97J60.c: 499: if(header.NextPacketPointer > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892
      +                          ul) - 0ul - 0ul)-2ul) | 0x0001ul) || ((BYTE_VAL*)(&header.NextPacketPointer))->bits.b0 |
      +                          |
 35216                           ;ETH97J60.c: 500: header.StatusVector.bits.Zero ||
 35217                           ;ETH97J60.c: 501: header.StatusVector.bits.CRCError ||
 35218                           ;ETH97J60.c: 502: header.StatusVector.bits.ByteCount > 1518u ||
 35219                           ;ETH97J60.c: 503: !header.StatusVector.bits.ReceiveOk)
 35220  0187FC  0EA6               	movlw	166
 35221  0187FE  0101               	movlb	1	; () banked
 35222  018800  5D24               	subwf	MACGetHeader@header& (0+255),w,b
 35223  018802  0E12               	movlw	18
 35224  018804  0101               	movlb	1	; () banked
 35225  018806  5925               	subwfb	(MACGetHeader@header+1)& (0+255),w,b
 35226  018808  B0D8               	btfsc	status,0,c
 35227  01880A  D013               	goto	l290
 35228                           
 35229                           ; BSR set to: 1
 35230  01880C  0101               	movlb	1	; () banked
 35231  01880E  B124               	btfsc	MACGetHeader@header& (0+255),0,b
 35232  018810  D010               	goto	l290
 35233                           
 35234                           ; BSR set to: 1
 35235  018812  0101               	movlb	1	; () banked
 35236  018814  BF29               	btfsc	(MACGetHeader@header+5)& (0+255),7,b
 35237  018816  D00D               	goto	l290
 35238                           
 35239                           ; BSR set to: 1
 35240  018818  0101               	movlb	1	; () banked
 35241  01881A  B928               	btfsc	(MACGetHeader@header+4)& (0+255),4,b
 35242  01881C  D00A               	goto	l290
 35243                           
 35244                           ; BSR set to: 1
 35245  01881E  0EEF               	movlw	239
 35246  018820  0101               	movlb	1	; () banked
 35247  018822  5D26               	subwf	(MACGetHeader@header+2)& (0+255),w,b
 35248  018824  0E05               	movlw	5
 35249  018826  0101               	movlb	1	; () banked
 35250  018828  5927               	subwfb	(MACGetHeader@header+3)& (0+255),w,b
 35251  01882A  B0D8               	btfsc	status,0,c
 35252  01882C  D002               	goto	l290
 35253                           
 35254                           ; BSR set to: 1
 35255  01882E  0101               	movlb	1	; () banked
 35256  018830  AF28               	btfss	(MACGetHeader@header+4)& (0+255),7,b
 35257  018832                     l290:
 35258                           
 35259                           ; BSR set to: 1
 35260  018832  00FF               	reset		;# 
 35261                           
 35262                           ;ETH97J60.c: 506: }
 35263                           ;ETH97J60.c: 509: NextPacketLocation.Val = header.NextPacketPointer;
 35264  018834  C124  F0E3         	movff	MACGetHeader@header,_NextPacketLocation
 35265  018838  C125  F0E4         	movff	MACGetHeader@header+1,_NextPacketLocation+1
 35266                           
 35267                           ;ETH97J60.c: 514: memcpy((void*)remote->v, (void*)header.SourceMACAddr.v, sizeof(*remote
      +                          ));
 35268  01883C  0101               	movlb	1	; () banked
 35269  01883E  C11F  F115         	movff	MACGetHeader@remote+1,memcpy@d1+1
 35270  018842  0101               	movlb	1	; () banked
 35271  018844  C11E  F114         	movff	MACGetHeader@remote,memcpy@d1
 35272  018848  0E30               	movlw	low (MACGetHeader@header+12)
 35273  01884A  0101               	movlb	1	; () banked
 35274  01884C  6F22               	movwf	??_MACGetHeader& (0+255),b
 35275  01884E  0E01               	movlw	high (MACGetHeader@header+12)
 35276  018850  6F23               	movwf	(??_MACGetHeader+1)& (0+255),b
 35277  018852  C122  F116         	movff	??_MACGetHeader,memcpy@s1
 35278  018856  C123  F117         	movff	??_MACGetHeader+1,memcpy@s1+1
 35279  01885A  0E00               	movlw	0
 35280  01885C  0101               	movlb	1	; () banked
 35281  01885E  6F19               	movwf	(memcpy@n+1)& (0+255),b
 35282  018860  0E06               	movlw	6
 35283  018862  0101               	movlb	1	; () banked
 35284  018864  6F18               	movwf	memcpy@n& (0+255),b
 35285  018866  ECCF  F0D5         	call	_memcpy	;wreg free
 35286                           
 35287                           ;ETH97J60.c: 517: *type = (0xFFu);
 35288  01886A  C120  FFD9         	movff	MACGetHeader@type,fsr2l
 35289  01886E  C121  FFDA         	movff	MACGetHeader@type+1,fsr2h
 35290  018872  0EFF               	movlw	255
 35291  018874  6EDF               	movwf	indf2,c
 35292                           
 35293                           ;ETH97J60.c: 518: if( (header.Type.v[1] == 0x08u) &&
 35294                           ;ETH97J60.c: 519: ((header.Type.v[0] == (0x00u)) || (header.Type.v[0] == (0x06u))) )
 35295  018876  0101               	movlb	1	; () banked
 35296  018878  5137               	movf	(MACGetHeader@header+19)& (0+255),w,b
 35297  01887A  0A08               	xorlw	8
 35298  01887C  A4D8               	btfss	status,2,c
 35299  01887E  D010               	goto	l14038
 35300                           
 35301                           ; BSR set to: 1
 35302  018880  0101               	movlb	1	; () banked
 35303  018882  5136               	movf	(MACGetHeader@header+18)& (0+255),w,b
 35304  018884  B4D8               	btfsc	status,2,c
 35305  018886  D005               	goto	l14036
 35306                           
 35307                           ; BSR set to: 1
 35308  018888  0101               	movlb	1	; () banked
 35309  01888A  5136               	movf	(MACGetHeader@header+18)& (0+255),w,b
 35310  01888C  0A06               	xorlw	6
 35311  01888E  A4D8               	btfss	status,2,c
 35312  018890  D007               	goto	l14038
 35313  018892                     l14036:
 35314                           
 35315                           ; BSR set to: 1
 35316                           ;ETH97J60.c: 520: {
 35317                           ;ETH97J60.c: 521: *type = header.Type.v[0];
 35318  018892  C120  FFD9         	movff	MACGetHeader@type,fsr2l
 35319  018896  C121  FFDA         	movff	MACGetHeader@type+1,fsr2h
 35320  01889A  0101               	movlb	1	; () banked
 35321  01889C  C136  FFDF         	movff	MACGetHeader@header+18,indf2
 35322  0188A0                     l14038:
 35323                           
 35324                           ; BSR set to: 1
 35325                           ;ETH97J60.c: 522: }
 35326                           ;ETH97J60.c: 525: flags.bits.bWasDiscarded = 0;
 35327  0188A0  0101               	movlb	1	; () banked
 35328  0188A2  91B6               	bcf	_flags& (0+255),0,b
 35329                           
 35330                           ; BSR set to: 1
 35331                           ;ETH97J60.c: 526: return TRUE;
 35332  0188A4  0E01               	movlw	1
 35333  0188A6  0012               	return	
 35334  0188A8                     __end_of_MACGetHeader:
 35335                           	opt stack 0
 35336                           tblptru	equ	0xFF8
 35337                           tblptrh	equ	0xFF7
 35338                           tblptrl	equ	0xFF6
 35339                           tablat	equ	0xFF5
 35340                           prodh	equ	0xFF4
 35341                           prodl	equ	0xFF3
 35342                           intcon	equ	0xFF2
 35343                           indf0	equ	0xFEF
 35344                           postinc0	equ	0xFEE
 35345                           fsr0h	equ	0xFEA
 35346                           fsr0l	equ	0xFE9
 35347                           wreg	equ	0xFE8
 35348                           indf1	equ	0xFE7
 35349                           postinc1	equ	0xFE6
 35350                           postdec1	equ	0xFE5
 35351                           fsr1h	equ	0xFE2
 35352                           fsr1l	equ	0xFE1
 35353                           indf2	equ	0xFDF
 35354                           postinc2	equ	0xFDE
 35355                           postdec2	equ	0xFDD
 35356                           fsr2h	equ	0xFDA
 35357                           fsr2l	equ	0xFD9
 35358                           status	equ	0xFD8
 35359                           
 35360 ;; *************** function _IPGetHeader *****************
 35361 ;; Defined at:
 35362 ;;		line 118 in file "../tcpip/ip.c"
 35363 ;; Parameters:    Size  Location     Type
 35364 ;;  localIP         2   50[BANK1 ] PTR struct .
 35365 ;;		 -> StackTask@tempLocalIP(4), 
 35366 ;;  remote          2   52[BANK1 ] PTR struct .
 35367 ;;		 -> remoteNode(10), 
 35368 ;;  protocol        2   54[BANK1 ] PTR unsigned char 
 35369 ;;		 -> StackTask@cIPFrameType(1), 
 35370 ;;  len             2   56[BANK1 ] PTR unsigned int 
 35371 ;;		 -> StackTask@dataCount(2), 
 35372 ;; Auto vars:     Size  Location     Type
 35373 ;;  header         20   64[BANK1 ] struct _IP_HEADER
 35374 ;;  CalcChecksum    2   62[BANK1 ] struct .
 35375 ;; Return value:  Size  Location     Type
 35376 ;;                  1    wreg      unsigned char 
 35377 ;; Registers used:
 35378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35379 ;; Tracked objects:
 35380 ;;		On entry : 0/0
 35381 ;;		On exit  : 0/0
 35382 ;;		Unchanged: 0/0
 35383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35384 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35385 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35386 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35387 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35388 ;;Total ram usage:       34 bytes
 35389 ;; Hardware stack levels used:    1
 35390 ;; Hardware stack levels required when called:   13
 35391 ;; This function calls:
 35392 ;;		_MACCalcRxChecksum
 35393 ;;		_MACGetArray
 35394 ;;		_MACSetReadPtrInRx
 35395 ;;		_SwapIPHeader
 35396 ;; This function is called by:
 35397 ;;		_StackTask
 35398 ;; This function uses a non-reentrant model
 35399 ;;
 35400                           
 35401                           	psect	text66
 35402  0178BA                     __ptext66:
 35403                           	opt stack 0
 35404  0178BA                     _IPGetHeader:
 35405                           	opt stack 16
 35406                           
 35407                           ;ip.c: 123: TCPIP_UINT16_VAL CalcChecksum;
 35408                           ;ip.c: 124: IP_HEADER header;
 35409                           ;ip.c: 135: MACGetArray((uint8_t*)&header, sizeof(header));
 35410                           
 35411                           ;incstack = 0
 35412  0178BA  0101               	movlb	1	; () banked
 35413  0178BC  0E01               	movlw	high IPGetHeader@header
 35414  0178BE  0101               	movlb	1	; () banked
 35415  0178C0  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 35416  0178C2  0101               	movlb	1	; () banked
 35417  0178C4  0E40               	movlw	low IPGetHeader@header
 35418  0178C6  0101               	movlb	1	; () banked
 35419  0178C8  6F00               	movwf	MACGetArray@val& (0+255),b
 35420  0178CA  0E00               	movlw	0
 35421  0178CC  0101               	movlb	1	; () banked
 35422  0178CE  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 35423  0178D0  0E14               	movlw	20
 35424  0178D2  0101               	movlb	1	; () banked
 35425  0178D4  6F02               	movwf	MACGetArray@len& (0+255),b
 35426  0178D6  EC35  F0D7         	call	_MACGetArray	;wreg free
 35427                           
 35428                           ;ip.c: 138: if((header.VersionIHL & 0xf0) != (0x40u))
 35429  0178DA  C140  F13A         	movff	IPGetHeader@header,??_IPGetHeader
 35430  0178DE  0EF0               	movlw	240
 35431  0178E0  0101               	movlb	1	; () banked
 35432  0178E2  173A               	andwf	??_IPGetHeader& (0+255),f,b
 35433  0178E4  0101               	movlb	1	; () banked
 35434  0178E6  513A               	movf	??_IPGetHeader& (0+255),w,b
 35435  0178E8  0A40               	xorlw	64
 35436  0178EA  B4D8               	btfsc	status,2,c
 35437  0178EC  D002               	goto	l14098
 35438                           
 35439                           ; BSR set to: 1
 35440                           ;ip.c: 139: return 0;
 35441  0178EE  0E00               	movlw	0
 35442  0178F0  0012               	return	
 35443  0178F2                     l14098:
 35444                           
 35445                           ; BSR set to: 1
 35446                           ;ip.c: 143: if(header.FragmentInfo & 0xFF1F)
 35447  0178F2  0E1F               	movlw	31
 35448  0178F4  0101               	movlb	1	; () banked
 35449  0178F6  6F3A               	movwf	??_IPGetHeader& (0+255),b
 35450  0178F8  0EFF               	movlw	255
 35451  0178FA  6F3B               	movwf	(??_IPGetHeader+1)& (0+255),b
 35452  0178FC  0101               	movlb	1	; () banked
 35453  0178FE  EE21  F046         	lfsr	2,IPGetHeader@header+6
 35454  017902  CFDE F13C          	movff	postinc2,??_IPGetHeader+2
 35455  017906  CFDD F13D          	movff	postdec2,??_IPGetHeader+3
 35456  01790A  0101               	movlb	1	; () banked
 35457  01790C  513A               	movf	??_IPGetHeader& (0+255),w,b
 35458  01790E  0101               	movlb	1	; () banked
 35459  017910  173C               	andwf	(??_IPGetHeader+2)& (0+255),f,b
 35460  017912  0101               	movlb	1	; () banked
 35461  017914  513B               	movf	(??_IPGetHeader+1)& (0+255),w,b
 35462  017916  0101               	movlb	1	; () banked
 35463  017918  173D               	andwf	(??_IPGetHeader+3)& (0+255),f,b
 35464  01791A  0101               	movlb	1	; () banked
 35465  01791C  513D               	movf	(??_IPGetHeader+3)& (0+255),w,b
 35466  01791E  113C               	iorwf	(??_IPGetHeader+2)& (0+255),w,b
 35467  017920  B4D8               	btfsc	status,2,c
 35468  017922  D002               	goto	l14104
 35469                           
 35470                           ; BSR set to: 1
 35471                           ;ip.c: 144: return 0;
 35472  017924  0E00               	movlw	0
 35473  017926  0012               	return	
 35474  017928                     l14104:
 35475                           
 35476                           ; BSR set to: 1
 35477                           ;ip.c: 146: IPHeaderLen = (header.VersionIHL & 0x0f) << 2;
 35478  017928  C140  F13A         	movff	IPGetHeader@header,??_IPGetHeader
 35479  01792C  0E0F               	movlw	15
 35480  01792E  0101               	movlb	1	; () banked
 35481  017930  173A               	andwf	??_IPGetHeader& (0+255),f,b
 35482  017932  0101               	movlb	1	; () banked
 35483  017934  90D8               	bcf	status,0,c
 35484  017936  373A               	rlcf	??_IPGetHeader& (0+255),f,b
 35485  017938  0101               	movlb	1	; () banked
 35486  01793A  90D8               	bcf	status,0,c
 35487  01793C  353A               	rlcf	??_IPGetHeader& (0+255),w,b
 35488  01793E  0101               	movlb	1	; () banked
 35489  017940  6FB5               	movwf	_IPHeaderLen& (0+255),b
 35490                           
 35491                           ; BSR set to: 1
 35492                           ;ip.c: 153: CalcChecksum.Val = MACCalcRxChecksum(0, IPHeaderLen);
 35493  017942  0E00               	movlw	0
 35494  017944  0101               	movlb	1	; () banked
 35495  017946  6F29               	movwf	(MACCalcRxChecksum@offset+1)& (0+255),b
 35496  017948  0E00               	movlw	0
 35497  01794A  0101               	movlb	1	; () banked
 35498  01794C  6F28               	movwf	MACCalcRxChecksum@offset& (0+255),b
 35499  01794E  0101               	movlb	1	; () banked
 35500  017950  C1B5  F12A         	movff	_IPHeaderLen,MACCalcRxChecksum@len
 35501  017954  0101               	movlb	1	; () banked
 35502  017956  6B2B               	clrf	(MACCalcRxChecksum@len+1)& (0+255),b
 35503  017958  ECD7  F0D3         	call	_MACCalcRxChecksum	;wreg free
 35504  01795C  0101               	movlb	1	; () banked
 35505  01795E  C128  F13E         	movff	?_MACCalcRxChecksum,IPGetHeader@CalcChecksum
 35506  017962  0101               	movlb	1	; () banked
 35507  017964  C129  F13F         	movff	?_MACCalcRxChecksum+1,IPGetHeader@CalcChecksum+1
 35508                           
 35509                           ; BSR set to: 1
 35510                           ;ip.c: 156: MACSetReadPtrInRx(IPHeaderLen);
 35511  017968  0101               	movlb	1	; () banked
 35512  01796A  C1B5  F100         	movff	_IPHeaderLen,MACSetReadPtrInRx@offset
 35513  01796E  0101               	movlb	1	; () banked
 35514  017970  6B01               	clrf	(MACSetReadPtrInRx@offset+1)& (0+255),b
 35515  017972  EC18  F0D8         	call	_MACSetReadPtrInRx	;wreg free
 35516                           
 35517                           ;ip.c: 158: if(CalcChecksum.Val)
 35518  017976  0101               	movlb	1	; () banked
 35519  017978  513F               	movf	(IPGetHeader@CalcChecksum+1)& (0+255),w,b
 35520  01797A  113E               	iorwf	IPGetHeader@CalcChecksum& (0+255),w,b
 35521  01797C  B4D8               	btfsc	status,2,c
 35522  01797E  D002               	goto	l14116
 35523                           
 35524                           ; BSR set to: 1
 35525                           ;ip.c: 192: {
 35526                           ;ip.c: 195: return 0;
 35527  017980  0E00               	movlw	0
 35528  017982  0012               	return	
 35529  017984                     l14116:
 35530                           
 35531                           ; BSR set to: 1
 35532                           ;ip.c: 196: }
 35533                           ;ip.c: 199: SwapIPHeader(&header);
 35534  017984  0101               	movlb	1	; () banked
 35535  017986  0E01               	movlw	high IPGetHeader@header
 35536  017988  0101               	movlb	1	; () banked
 35537  01798A  6F06               	movwf	(SwapIPHeader@h+1)& (0+255),b
 35538  01798C  0101               	movlb	1	; () banked
 35539  01798E  0E40               	movlw	low IPGetHeader@header
 35540  017990  0101               	movlb	1	; () banked
 35541  017992  6F05               	movwf	SwapIPHeader@h& (0+255),b
 35542  017994  EC1B  F0CF         	call	_SwapIPHeader	;wreg free
 35543                           
 35544                           ;ip.c: 203: if ( localIP )
 35545  017998  0101               	movlb	1	; () banked
 35546  01799A  5133               	movf	(IPGetHeader@localIP+1)& (0+255),w,b
 35547  01799C  1132               	iorwf	IPGetHeader@localIP& (0+255),w,b
 35548  01799E  B4D8               	btfsc	status,2,c
 35549  0179A0  D010               	goto	l719
 35550                           
 35551                           ; BSR set to: 1
 35552                           ;ip.c: 204: localIP->Val = header.DestAddress.Val;
 35553  0179A2  C132  FFD9         	movff	IPGetHeader@localIP,fsr2l
 35554  0179A6  C133  FFDA         	movff	IPGetHeader@localIP+1,fsr2h
 35555  0179AA  0101               	movlb	1	; () banked
 35556  0179AC  C150  FFDE         	movff	IPGetHeader@header+16,postinc2
 35557  0179B0  0101               	movlb	1	; () banked
 35558  0179B2  C151  FFDE         	movff	IPGetHeader@header+17,postinc2
 35559  0179B6  0101               	movlb	1	; () banked
 35560  0179B8  C152  FFDE         	movff	IPGetHeader@header+18,postinc2
 35561  0179BC  0101               	movlb	1	; () banked
 35562  0179BE  C153  FFDE         	movff	IPGetHeader@header+19,postinc2
 35563  0179C2                     l719:
 35564                           
 35565                           ; BSR set to: 1
 35566                           ;ip.c: 206: remote->IPAddr.Val = header.SourceAddress.Val;
 35567  0179C2  C134  FFD9         	movff	IPGetHeader@remote,fsr2l
 35568  0179C6  C135  FFDA         	movff	IPGetHeader@remote+1,fsr2h
 35569  0179CA  0101               	movlb	1	; () banked
 35570  0179CC  C14C  FFDE         	movff	IPGetHeader@header+12,postinc2
 35571  0179D0  0101               	movlb	1	; () banked
 35572  0179D2  C14D  FFDE         	movff	IPGetHeader@header+13,postinc2
 35573  0179D6  0101               	movlb	1	; () banked
 35574  0179D8  C14E  FFDE         	movff	IPGetHeader@header+14,postinc2
 35575  0179DC  0101               	movlb	1	; () banked
 35576  0179DE  C14F  FFDE         	movff	IPGetHeader@header+15,postinc2
 35577                           
 35578                           ;ip.c: 207: *protocol = header.Protocol;
 35579  0179E2  C136  FFD9         	movff	IPGetHeader@protocol,fsr2l
 35580  0179E6  C137  FFDA         	movff	IPGetHeader@protocol+1,fsr2h
 35581  0179EA  0101               	movlb	1	; () banked
 35582  0179EC  C149  FFDF         	movff	IPGetHeader@header+9,indf2
 35583                           
 35584                           ; BSR set to: 1
 35585                           ;ip.c: 208: *len = header.TotalLength - IPHeaderLen;
 35586  0179F0  0101               	movlb	1	; () banked
 35587  0179F2  51B5               	movf	_IPHeaderLen& (0+255),w,b
 35588  0179F4  0101               	movlb	1	; () banked
 35589  0179F6  6F3A               	movwf	??_IPGetHeader& (0+255),b
 35590  0179F8  6B3B               	clrf	(??_IPGetHeader+1)& (0+255),b
 35591  0179FA  0101               	movlb	1	; () banked
 35592  0179FC  1F3A               	comf	??_IPGetHeader& (0+255),f,b
 35593  0179FE  1F3B               	comf	(??_IPGetHeader+1)& (0+255),f,b
 35594  017A00  4B3A               	infsnz	??_IPGetHeader& (0+255),f,b
 35595  017A02  2B3B               	incf	(??_IPGetHeader+1)& (0+255),f,b
 35596  017A04  0101               	movlb	1	; () banked
 35597  017A06  5142               	movf	(IPGetHeader@header+2)& (0+255),w,b
 35598  017A08  0101               	movlb	1	; () banked
 35599  017A0A  273A               	addwf	??_IPGetHeader& (0+255),f,b
 35600  017A0C  0101               	movlb	1	; () banked
 35601  017A0E  5143               	movf	(IPGetHeader@header+3)& (0+255),w,b
 35602  017A10  0101               	movlb	1	; () banked
 35603  017A12  233B               	addwfc	(??_IPGetHeader+1)& (0+255),f,b
 35604  017A14  C138  FFD9         	movff	IPGetHeader@len,fsr2l
 35605  017A18  C139  FFDA         	movff	IPGetHeader@len+1,fsr2h
 35606  017A1C  C13A  FFDE         	movff	??_IPGetHeader,postinc2
 35607  017A20  C13B  FFDD         	movff	??_IPGetHeader+1,postdec2
 35608                           
 35609                           ; BSR set to: 1
 35610                           ;ip.c: 210: return 1;
 35611  017A24  0E01               	movlw	1
 35612  017A26  0012               	return	
 35613  017A28                     __end_of_IPGetHeader:
 35614                           	opt stack 0
 35615                           tblptru	equ	0xFF8
 35616                           tblptrh	equ	0xFF7
 35617                           tblptrl	equ	0xFF6
 35618                           tablat	equ	0xFF5
 35619                           prodh	equ	0xFF4
 35620                           prodl	equ	0xFF3
 35621                           intcon	equ	0xFF2
 35622                           indf0	equ	0xFEF
 35623                           postinc0	equ	0xFEE
 35624                           fsr0h	equ	0xFEA
 35625                           fsr0l	equ	0xFE9
 35626                           wreg	equ	0xFE8
 35627                           indf1	equ	0xFE7
 35628                           postinc1	equ	0xFE6
 35629                           postdec1	equ	0xFE5
 35630                           fsr1h	equ	0xFE2
 35631                           fsr1l	equ	0xFE1
 35632                           indf2	equ	0xFDF
 35633                           postinc2	equ	0xFDE
 35634                           postdec2	equ	0xFDD
 35635                           fsr2h	equ	0xFDA
 35636                           fsr2l	equ	0xFD9
 35637                           status	equ	0xFD8
 35638                           
 35639 ;; *************** function _SwapIPHeader *****************
 35640 ;; Defined at:
 35641 ;;		line 288 in file "../tcpip/ip.c"
 35642 ;; Parameters:    Size  Location     Type
 35643 ;;  h               2    5[BANK1 ] PTR struct _IP_HEADER
 35644 ;;		 -> IPPutHeader@header(20), IPGetHeader@header(20), 
 35645 ;; Auto vars:     Size  Location     Type
 35646 ;;		None
 35647 ;; Return value:  Size  Location     Type
 35648 ;;		None               void
 35649 ;; Registers used:
 35650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35651 ;; Tracked objects:
 35652 ;;		On entry : 0/0
 35653 ;;		On exit  : 0/0
 35654 ;;		Unchanged: 0/0
 35655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35656 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35659 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35660 ;;Total ram usage:        2 bytes
 35661 ;; Hardware stack levels used:    1
 35662 ;; Hardware stack levels required when called:   11
 35663 ;; This function calls:
 35664 ;;		_swaps
 35665 ;; This function is called by:
 35666 ;;		_IPGetHeader
 35667 ;;		_IPPutHeader
 35668 ;; This function uses a non-reentrant model
 35669 ;;
 35670                           
 35671                           	psect	text67
 35672  019E36                     __ptext67:
 35673                           	opt stack 0
 35674  019E36                     _SwapIPHeader:
 35675                           	opt stack 14
 35676                           
 35677                           ;ip.c: 290: h->TotalLength = swaps(h->TotalLength);
 35678                           
 35679                           ; BSR set to: 1
 35680                           ;incstack = 0
 35681  019E36  0101               	movlb	1	; () banked
 35682  019E38  EE20 F002          	lfsr	2,2
 35683  019E3C  0101               	movlb	1	; () banked
 35684  019E3E  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35685  019E40  26D9               	addwf	fsr2l,f,c
 35686  019E42  0101               	movlb	1	; () banked
 35687  019E44  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35688  019E46  22DA               	addwfc	fsr2h,f,c
 35689  019E48  0101               	movlb	1	; () banked
 35690  019E4A  CFDE F100          	movff	postinc2,swaps@v
 35691  019E4E  0101               	movlb	1	; () banked
 35692  019E50  CFDD F101          	movff	postdec2,swaps@v+1
 35693  019E54  EC79  F0DC         	call	_swaps	;wreg free
 35694  019E58  0101               	movlb	1	; () banked
 35695  019E5A  EE20 F002          	lfsr	2,2
 35696  019E5E  0101               	movlb	1	; () banked
 35697  019E60  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35698  019E62  26D9               	addwf	fsr2l,f,c
 35699  019E64  0101               	movlb	1	; () banked
 35700  019E66  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35701  019E68  22DA               	addwfc	fsr2h,f,c
 35702  019E6A  0101               	movlb	1	; () banked
 35703  019E6C  C100  FFDE         	movff	?_swaps,postinc2
 35704  019E70  0101               	movlb	1	; () banked
 35705  019E72  C101  FFDD         	movff	?_swaps+1,postdec2
 35706                           
 35707                           ;ip.c: 291: h->Identification = swaps(h->Identification);
 35708  019E76  0101               	movlb	1	; () banked
 35709  019E78  EE20 F004          	lfsr	2,4
 35710  019E7C  0101               	movlb	1	; () banked
 35711  019E7E  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35712  019E80  26D9               	addwf	fsr2l,f,c
 35713  019E82  0101               	movlb	1	; () banked
 35714  019E84  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35715  019E86  22DA               	addwfc	fsr2h,f,c
 35716  019E88  0101               	movlb	1	; () banked
 35717  019E8A  CFDE F100          	movff	postinc2,swaps@v
 35718  019E8E  0101               	movlb	1	; () banked
 35719  019E90  CFDD F101          	movff	postdec2,swaps@v+1
 35720  019E94  EC79  F0DC         	call	_swaps	;wreg free
 35721  019E98  0101               	movlb	1	; () banked
 35722  019E9A  EE20 F004          	lfsr	2,4
 35723  019E9E  0101               	movlb	1	; () banked
 35724  019EA0  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35725  019EA2  26D9               	addwf	fsr2l,f,c
 35726  019EA4  0101               	movlb	1	; () banked
 35727  019EA6  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35728  019EA8  22DA               	addwfc	fsr2h,f,c
 35729  019EAA  0101               	movlb	1	; () banked
 35730  019EAC  C100  FFDE         	movff	?_swaps,postinc2
 35731  019EB0  0101               	movlb	1	; () banked
 35732  019EB2  C101  FFDD         	movff	?_swaps+1,postdec2
 35733                           
 35734                           ;ip.c: 292: h->HeaderChecksum = swaps(h->HeaderChecksum);
 35735  019EB6  0101               	movlb	1	; () banked
 35736  019EB8  EE20 F00A          	lfsr	2,10
 35737  019EBC  0101               	movlb	1	; () banked
 35738  019EBE  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35739  019EC0  26D9               	addwf	fsr2l,f,c
 35740  019EC2  0101               	movlb	1	; () banked
 35741  019EC4  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35742  019EC6  22DA               	addwfc	fsr2h,f,c
 35743  019EC8  0101               	movlb	1	; () banked
 35744  019ECA  CFDE F100          	movff	postinc2,swaps@v
 35745  019ECE  0101               	movlb	1	; () banked
 35746  019ED0  CFDD F101          	movff	postdec2,swaps@v+1
 35747  019ED4  EC79  F0DC         	call	_swaps	;wreg free
 35748  019ED8  0101               	movlb	1	; () banked
 35749  019EDA  EE20 F00A          	lfsr	2,10
 35750  019EDE  0101               	movlb	1	; () banked
 35751  019EE0  5105               	movf	SwapIPHeader@h& (0+255),w,b
 35752  019EE2  26D9               	addwf	fsr2l,f,c
 35753  019EE4  0101               	movlb	1	; () banked
 35754  019EE6  5106               	movf	(SwapIPHeader@h+1)& (0+255),w,b
 35755  019EE8  22DA               	addwfc	fsr2h,f,c
 35756  019EEA  0101               	movlb	1	; () banked
 35757  019EEC  C100  FFDE         	movff	?_swaps,postinc2
 35758  019EF0  0101               	movlb	1	; () banked
 35759  019EF2  C101  FFDD         	movff	?_swaps+1,postdec2
 35760                           
 35761                           ; BSR set to: 1
 35762  019EF6  0012               	return	
 35763  019EF8                     __end_of_SwapIPHeader:
 35764                           	opt stack 0
 35765                           tblptru	equ	0xFF8
 35766                           tblptrh	equ	0xFF7
 35767                           tblptrl	equ	0xFF6
 35768                           tablat	equ	0xFF5
 35769                           prodh	equ	0xFF4
 35770                           prodl	equ	0xFF3
 35771                           intcon	equ	0xFF2
 35772                           indf0	equ	0xFEF
 35773                           postinc0	equ	0xFEE
 35774                           fsr0h	equ	0xFEA
 35775                           fsr0l	equ	0xFE9
 35776                           wreg	equ	0xFE8
 35777                           indf1	equ	0xFE7
 35778                           postinc1	equ	0xFE6
 35779                           postdec1	equ	0xFE5
 35780                           fsr1h	equ	0xFE2
 35781                           fsr1l	equ	0xFE1
 35782                           indf2	equ	0xFDF
 35783                           postinc2	equ	0xFDE
 35784                           postdec2	equ	0xFDD
 35785                           fsr2h	equ	0xFDA
 35786                           fsr2l	equ	0xFD9
 35787                           status	equ	0xFD8
 35788                           
 35789 ;; *************** function _MACSetReadPtrInRx *****************
 35790 ;; Defined at:
 35791 ;;		line 671 in file "../tcpip/ETH97J60.c"
 35792 ;; Parameters:    Size  Location     Type
 35793 ;;  offset          2    0[BANK1 ] unsigned int 
 35794 ;; Auto vars:     Size  Location     Type
 35795 ;;  ReadPT          2    4[BANK1 ] struct .
 35796 ;; Return value:  Size  Location     Type
 35797 ;;		None               void
 35798 ;; Registers used:
 35799 ;;		wreg, status,2, status,0
 35800 ;; Tracked objects:
 35801 ;;		On entry : 0/0
 35802 ;;		On exit  : 0/0
 35803 ;;		Unchanged: 0/0
 35804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35805 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35806 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35807 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35808 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35809 ;;Total ram usage:        6 bytes
 35810 ;; Hardware stack levels used:    1
 35811 ;; Hardware stack levels required when called:   10
 35812 ;; This function calls:
 35813 ;;		Nothing
 35814 ;; This function is called by:
 35815 ;;		_IPGetHeader
 35816 ;;		_IPSetRxBuffer
 35817 ;; This function uses a non-reentrant model
 35818 ;;
 35819                           
 35820                           	psect	text68
 35821  01B030                     __ptext68:
 35822                           	opt stack 0
 35823  01B030                     _MACSetReadPtrInRx:
 35824                           	opt stack 17
 35825                           
 35826                           ;ETH97J60.c: 673: WORD_VAL ReadPT;
 35827                           ;ETH97J60.c: 677: ReadPT.Val = CurrentPacketLocation.Val + sizeof(ENC_PREAMBLE) + offset
      +                          ;
 35828                           
 35829                           ; BSR set to: 1
 35830                           ;incstack = 0
 35831  01B030  0100               	movlb	0	; () banked
 35832  01B032  C0E1  F102         	movff	_CurrentPacketLocation,??_MACSetReadPtrInRx
 35833  01B036  0100               	movlb	0	; () banked
 35834  01B038  C0E2  F103         	movff	_CurrentPacketLocation+1,??_MACSetReadPtrInRx+1
 35835  01B03C  0101               	movlb	1	; () banked
 35836  01B03E  5100               	movf	MACSetReadPtrInRx@offset& (0+255),w,b
 35837  01B040  0101               	movlb	1	; () banked
 35838  01B042  2702               	addwf	??_MACSetReadPtrInRx& (0+255),f,b
 35839  01B044  0101               	movlb	1	; () banked
 35840  01B046  5101               	movf	(MACSetReadPtrInRx@offset+1)& (0+255),w,b
 35841  01B048  0101               	movlb	1	; () banked
 35842  01B04A  2303               	addwfc	(??_MACSetReadPtrInRx+1)& (0+255),f,b
 35843  01B04C  0E14               	movlw	20
 35844  01B04E  0101               	movlb	1	; () banked
 35845  01B050  2502               	addwf	??_MACSetReadPtrInRx& (0+255),w,b
 35846  01B052  0101               	movlb	1	; () banked
 35847  01B054  6F04               	movwf	MACSetReadPtrInRx@ReadPT& (0+255),b
 35848  01B056  0E00               	movlw	0
 35849  01B058  0101               	movlb	1	; () banked
 35850  01B05A  2103               	addwfc	(??_MACSetReadPtrInRx+1)& (0+255),w,b
 35851  01B05C  0101               	movlb	1	; () banked
 35852  01B05E  6F05               	movwf	(MACSetReadPtrInRx@ReadPT+1)& (0+255),b
 35853                           
 35854                           ;ETH97J60.c: 680: if(ReadPT.Val > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0u
      +                          l)-2ul) | 0x0001ul))
 35855  01B060  0EA6               	movlw	166
 35856  01B062  0101               	movlb	1	; () banked
 35857  01B064  5D04               	subwf	MACSetReadPtrInRx@ReadPT& (0+255),w,b
 35858  01B066  0E12               	movlw	18
 35859  01B068  0101               	movlb	1	; () banked
 35860  01B06A  5905               	subwfb	(MACSetReadPtrInRx@ReadPT+1)& (0+255),w,b
 35861  01B06C  A0D8               	btfss	status,0,c
 35862  01B06E  D007               	goto	l10526
 35863                           
 35864                           ; BSR set to: 1
 35865                           ;ETH97J60.c: 681: ReadPT.Val -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul
      +                          )-2ul) | 0x0001ul)-(0ul)+1ul);
 35866  01B070  0101               	movlb	1	; () banked
 35867  01B072  0EA6               	movlw	166
 35868  01B074  0101               	movlb	1	; () banked
 35869  01B076  5F04               	subwf	MACSetReadPtrInRx@ReadPT& (0+255),f,b
 35870  01B078  0E12               	movlw	18
 35871  01B07A  0101               	movlb	1	; () banked
 35872  01B07C  5B05               	subwfb	(MACSetReadPtrInRx@ReadPT+1)& (0+255),f,b
 35873  01B07E                     l10526:
 35874                           
 35875                           ; BSR set to: 1
 35876                           ;ETH97J60.c: 684: ERDPTL = ReadPT.v[0];
 35877  01B07E  C104  FF7A         	movff	MACSetReadPtrInRx@ReadPT,3962	;volatile
 35878                           
 35879                           ; BSR set to: 1
 35880                           ;ETH97J60.c: 685: ERDPTH = ReadPT.v[1];
 35881  01B082  C105  FF7B         	movff	MACSetReadPtrInRx@ReadPT+1,3963	;volatile
 35882                           
 35883                           ; BSR set to: 1
 35884  01B086  0012               	return	
 35885  01B088                     __end_of_MACSetReadPtrInRx:
 35886                           	opt stack 0
 35887                           tblptru	equ	0xFF8
 35888                           tblptrh	equ	0xFF7
 35889                           tblptrl	equ	0xFF6
 35890                           tablat	equ	0xFF5
 35891                           prodh	equ	0xFF4
 35892                           prodl	equ	0xFF3
 35893                           intcon	equ	0xFF2
 35894                           indf0	equ	0xFEF
 35895                           postinc0	equ	0xFEE
 35896                           fsr0h	equ	0xFEA
 35897                           fsr0l	equ	0xFE9
 35898                           wreg	equ	0xFE8
 35899                           indf1	equ	0xFE7
 35900                           postinc1	equ	0xFE6
 35901                           postdec1	equ	0xFE5
 35902                           fsr1h	equ	0xFE2
 35903                           fsr1l	equ	0xFE1
 35904                           indf2	equ	0xFDF
 35905                           postinc2	equ	0xFDE
 35906                           postdec2	equ	0xFDD
 35907                           fsr2h	equ	0xFDA
 35908                           fsr2l	equ	0xFD9
 35909                           status	equ	0xFD8
 35910                           
 35911 ;; *************** function _MACCalcRxChecksum *****************
 35912 ;; Defined at:
 35913 ;;		line 759 in file "../tcpip/ETH97J60.c"
 35914 ;; Parameters:    Size  Location     Type
 35915 ;;  offset          2   40[BANK1 ] unsigned int 
 35916 ;;  len             2   42[BANK1 ] unsigned int 
 35917 ;; Auto vars:     Size  Location     Type
 35918 ;;  temp            2   48[BANK1 ] unsigned short 
 35919 ;;  RDSave          2   46[BANK1 ] unsigned short 
 35920 ;; Return value:  Size  Location     Type
 35921 ;;                  2   40[BANK1 ] unsigned int 
 35922 ;; Registers used:
 35923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35924 ;; Tracked objects:
 35925 ;;		On entry : 0/0
 35926 ;;		On exit  : 0/0
 35927 ;;		Unchanged: 0/0
 35928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 35929 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35930 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35931 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35932 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35933 ;;Total ram usage:       10 bytes
 35934 ;; Hardware stack levels used:    1
 35935 ;; Hardware stack levels required when called:   12
 35936 ;; This function calls:
 35937 ;;		_CalcIPBufferChecksum
 35938 ;; This function is called by:
 35939 ;;		_IPGetHeader
 35940 ;; This function uses a non-reentrant model
 35941 ;;
 35942                           
 35943                           	psect	text69
 35944  01A7AE                     __ptext69:
 35945                           	opt stack 0
 35946  01A7AE                     _MACCalcRxChecksum:
 35947                           	opt stack 16
 35948                           
 35949                           ;ETH97J60.c: 761: WORD temp;
 35950                           ;ETH97J60.c: 762: WORD RDSave;
 35951                           ;ETH97J60.c: 765: temp = CurrentPacketLocation.Val + sizeof(ENC_PREAMBLE) + offset;
 35952                           
 35953                           ; BSR set to: 1
 35954                           ;incstack = 0
 35955  01A7AE  0100               	movlb	0	; () banked
 35956  01A7B0  C0E1  F12C         	movff	_CurrentPacketLocation,??_MACCalcRxChecksum
 35957  01A7B4  0100               	movlb	0	; () banked
 35958  01A7B6  C0E2  F12D         	movff	_CurrentPacketLocation+1,??_MACCalcRxChecksum+1
 35959  01A7BA  0101               	movlb	1	; () banked
 35960  01A7BC  5128               	movf	MACCalcRxChecksum@offset& (0+255),w,b
 35961  01A7BE  0101               	movlb	1	; () banked
 35962  01A7C0  272C               	addwf	??_MACCalcRxChecksum& (0+255),f,b
 35963  01A7C2  0101               	movlb	1	; () banked
 35964  01A7C4  5129               	movf	(MACCalcRxChecksum@offset+1)& (0+255),w,b
 35965  01A7C6  0101               	movlb	1	; () banked
 35966  01A7C8  232D               	addwfc	(??_MACCalcRxChecksum+1)& (0+255),f,b
 35967  01A7CA  0E14               	movlw	20
 35968  01A7CC  0101               	movlb	1	; () banked
 35969  01A7CE  252C               	addwf	??_MACCalcRxChecksum& (0+255),w,b
 35970  01A7D0  0101               	movlb	1	; () banked
 35971  01A7D2  6F30               	movwf	MACCalcRxChecksum@temp& (0+255),b
 35972  01A7D4  0E00               	movlw	0
 35973  01A7D6  0101               	movlb	1	; () banked
 35974  01A7D8  212D               	addwfc	(??_MACCalcRxChecksum+1)& (0+255),w,b
 35975  01A7DA  0101               	movlb	1	; () banked
 35976  01A7DC  6F31               	movwf	(MACCalcRxChecksum@temp+1)& (0+255),b
 35977                           
 35978                           ;ETH97J60.c: 766: if(temp > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul
      +                          ) | 0x0001ul))
 35979  01A7DE  0EA6               	movlw	166
 35980  01A7E0  0101               	movlb	1	; () banked
 35981  01A7E2  5D30               	subwf	MACCalcRxChecksum@temp& (0+255),w,b
 35982  01A7E4  0E12               	movlw	18
 35983  01A7E6  0101               	movlb	1	; () banked
 35984  01A7E8  5931               	subwfb	(MACCalcRxChecksum@temp+1)& (0+255),w,b
 35985  01A7EA  A0D8               	btfss	status,0,c
 35986  01A7EC  D007               	goto	l12918
 35987                           
 35988                           ; BSR set to: 1
 35989                           ;ETH97J60.c: 767: {
 35990                           ;ETH97J60.c: 768: temp -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul)
      +                           | 0x0001ul)-(0ul)+1ul);
 35991  01A7EE  0101               	movlb	1	; () banked
 35992  01A7F0  0EA6               	movlw	166
 35993  01A7F2  0101               	movlb	1	; () banked
 35994  01A7F4  5F30               	subwf	MACCalcRxChecksum@temp& (0+255),f,b
 35995  01A7F6  0E12               	movlw	18
 35996  01A7F8  0101               	movlb	1	; () banked
 35997  01A7FA  5B31               	subwfb	(MACCalcRxChecksum@temp+1)& (0+255),f,b
 35998  01A7FC                     l12918:
 35999                           
 36000                           ; BSR set to: 1
 36001                           ;ETH97J60.c: 769: }
 36002                           ;ETH97J60.c: 771: RDSave = ERDPT;
 36003  01A7FC  CF7A F12E          	movff	3962,MACCalcRxChecksum@RDSave	;volatile
 36004  01A800  CF7B F12F          	movff	3963,MACCalcRxChecksum@RDSave+1	;volatile
 36005                           
 36006                           ; BSR set to: 1
 36007                           ;ETH97J60.c: 772: ERDPT = temp;
 36008  01A804  C130  FF7A         	movff	MACCalcRxChecksum@temp,3962	;volatile
 36009  01A808  C131  FF7B         	movff	MACCalcRxChecksum@temp+1,3963	;volatile
 36010                           
 36011                           ; BSR set to: 1
 36012                           ;ETH97J60.c: 773: temp = CalcIPBufferChecksum(len);
 36013  01A80C  C12A  F106         	movff	MACCalcRxChecksum@len,CalcIPBufferChecksum@len
 36014  01A810  C12B  F107         	movff	MACCalcRxChecksum@len+1,CalcIPBufferChecksum@len+1
 36015  01A814  EC74  F0BE         	call	_CalcIPBufferChecksum	;wreg free
 36016  01A818  0101               	movlb	1	; () banked
 36017  01A81A  C106  F130         	movff	?_CalcIPBufferChecksum,MACCalcRxChecksum@temp
 36018  01A81E  0101               	movlb	1	; () banked
 36019  01A820  C107  F131         	movff	?_CalcIPBufferChecksum+1,MACCalcRxChecksum@temp+1
 36020                           
 36021                           ; BSR set to: 1
 36022                           ;ETH97J60.c: 774: ERDPT = RDSave;
 36023  01A824  C12E  FF7A         	movff	MACCalcRxChecksum@RDSave,3962	;volatile
 36024  01A828  C12F  FF7B         	movff	MACCalcRxChecksum@RDSave+1,3963	;volatile
 36025                           
 36026                           ; BSR set to: 1
 36027                           ;ETH97J60.c: 776: return temp;
 36028  01A82C  C130  F128         	movff	MACCalcRxChecksum@temp,?_MACCalcRxChecksum
 36029  01A830  C131  F129         	movff	MACCalcRxChecksum@temp+1,?_MACCalcRxChecksum+1
 36030  01A834  0012               	return	
 36031  01A836                     __end_of_MACCalcRxChecksum:
 36032                           	opt stack 0
 36033                           tblptru	equ	0xFF8
 36034                           tblptrh	equ	0xFF7
 36035                           tblptrl	equ	0xFF6
 36036                           tablat	equ	0xFF5
 36037                           prodh	equ	0xFF4
 36038                           prodl	equ	0xFF3
 36039                           intcon	equ	0xFF2
 36040                           indf0	equ	0xFEF
 36041                           postinc0	equ	0xFEE
 36042                           fsr0h	equ	0xFEA
 36043                           fsr0l	equ	0xFE9
 36044                           wreg	equ	0xFE8
 36045                           indf1	equ	0xFE7
 36046                           postinc1	equ	0xFE6
 36047                           postdec1	equ	0xFE5
 36048                           fsr1h	equ	0xFE2
 36049                           fsr1l	equ	0xFE1
 36050                           indf2	equ	0xFDF
 36051                           postinc2	equ	0xFDE
 36052                           postdec2	equ	0xFDD
 36053                           fsr2h	equ	0xFDA
 36054                           fsr2l	equ	0xFD9
 36055                           status	equ	0xFD8
 36056                           
 36057 ;; *************** function _CalcIPBufferChecksum *****************
 36058 ;; Defined at:
 36059 ;;		line 880 in file "../tcpip/ETH97J60.c"
 36060 ;; Parameters:    Size  Location     Type
 36061 ;;  len             2    6[BANK1 ] unsigned int 
 36062 ;; Auto vars:     Size  Location     Type
 36063 ;;  DataBuffer     20   10[BANK1 ] unsigned char [20]
 36064 ;;  Checksum        4   34[BANK1 ] struct .
 36065 ;;  ChunkLen        2   38[BANK1 ] unsigned short 
 36066 ;;  DataPtr         2   32[BANK1 ] PTR unsigned short 
 36067 ;;		 -> CalcIPBufferChecksum@DataBuffer(20), 
 36068 ;;  Start           2   30[BANK1 ] unsigned short 
 36069 ;; Return value:  Size  Location     Type
 36070 ;;                  2    6[BANK1 ] unsigned int 
 36071 ;; Registers used:
 36072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36073 ;; Tracked objects:
 36074 ;;		On entry : 0/0
 36075 ;;		On exit  : 0/0
 36076 ;;		Unchanged: 0/0
 36077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36078 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36079 ;;      Locals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36080 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36081 ;;      Totals:         0       0      34       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36082 ;;Total ram usage:       34 bytes
 36083 ;; Hardware stack levels used:    1
 36084 ;; Hardware stack levels required when called:   11
 36085 ;; This function calls:
 36086 ;;		_MACGetArray
 36087 ;; This function is called by:
 36088 ;;		_MACCalcRxChecksum
 36089 ;;		_TCPProcess
 36090 ;;		_SendTCP
 36091 ;; This function uses a non-reentrant model
 36092 ;;
 36093                           
 36094                           	psect	text70
 36095  017CE8                     __ptext70:
 36096                           	opt stack 0
 36097  017CE8                     _CalcIPBufferChecksum:
 36098                           	opt stack 15
 36099                           
 36100                           ;ETH97J60.c: 882: WORD Start;
 36101                           ;ETH97J60.c: 883: DWORD_VAL Checksum = {0x00000000ul};
 36102                           
 36103                           ; BSR set to: 1
 36104                           ;incstack = 0
 36105  017CE8  C0CD  F122         	movff	CalcIPBufferChecksum@F7102,CalcIPBufferChecksum@Checksum
 36106  017CEC  C0CE  F123         	movff	CalcIPBufferChecksum@F7102+1,CalcIPBufferChecksum@Checksum+1
 36107  017CF0  C0CF  F124         	movff	CalcIPBufferChecksum@F7102+2,CalcIPBufferChecksum@Checksum+2
 36108  017CF4  C0D0  F125         	movff	CalcIPBufferChecksum@F7102+3,CalcIPBufferChecksum@Checksum+3
 36109                           
 36110                           ;ETH97J60.c: 884: WORD ChunkLen;
 36111                           ;ETH97J60.c: 885: BYTE DataBuffer[20];
 36112                           ;ETH97J60.c: 886: WORD *DataPtr;
 36113                           ;ETH97J60.c: 889: Start = ERDPT;
 36114  017CF8  CF7A F11E          	movff	3962,CalcIPBufferChecksum@Start	;volatile
 36115  017CFC  CF7B F11F          	movff	3963,CalcIPBufferChecksum@Start+1	;volatile
 36116                           
 36117                           ;ETH97J60.c: 891: while(len)
 36118  017D00  D06B               	goto	l11138
 36119  017D02                     l11112:
 36120                           
 36121                           ;ETH97J60.c: 892: {
 36122                           ;ETH97J60.c: 895: ChunkLen = len > sizeof(DataBuffer) ? sizeof(DataBuffer) : len;
 36123  017D02  0E15               	movlw	21
 36124  017D04  0101               	movlb	1	; () banked
 36125  017D06  5D06               	subwf	CalcIPBufferChecksum@len& (0+255),w,b
 36126  017D08  0E00               	movlw	0
 36127  017D0A  0101               	movlb	1	; () banked
 36128  017D0C  5907               	subwfb	(CalcIPBufferChecksum@len+1)& (0+255),w,b
 36129  017D0E  B0D8               	btfsc	status,0,c
 36130  017D10  D005               	goto	l11116
 36131                           
 36132                           ; BSR set to: 1
 36133  017D12  C106  F126         	movff	CalcIPBufferChecksum@len,CalcIPBufferChecksum@ChunkLen
 36134  017D16  C107  F127         	movff	CalcIPBufferChecksum@len+1,CalcIPBufferChecksum@ChunkLen+1
 36135  017D1A  D006               	goto	l11118
 36136  017D1C                     l11116:
 36137                           
 36138                           ; BSR set to: 1
 36139  017D1C  0E00               	movlw	0
 36140  017D1E  0101               	movlb	1	; () banked
 36141  017D20  6F27               	movwf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),b
 36142  017D22  0E14               	movlw	20
 36143  017D24  0101               	movlb	1	; () banked
 36144  017D26  6F26               	movwf	CalcIPBufferChecksum@ChunkLen& (0+255),b
 36145  017D28                     l11118:
 36146                           
 36147                           ; BSR set to: 1
 36148                           ;ETH97J60.c: 896: MACGetArray(DataBuffer, ChunkLen);
 36149  017D28  0101               	movlb	1	; () banked
 36150  017D2A  0E01               	movlw	high CalcIPBufferChecksum@DataBuffer
 36151  017D2C  0101               	movlb	1	; () banked
 36152  017D2E  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 36153  017D30  0101               	movlb	1	; () banked
 36154  017D32  0E0A               	movlw	low CalcIPBufferChecksum@DataBuffer
 36155  017D34  0101               	movlb	1	; () banked
 36156  017D36  6F00               	movwf	MACGetArray@val& (0+255),b
 36157  017D38  C126  F102         	movff	CalcIPBufferChecksum@ChunkLen,MACGetArray@len
 36158  017D3C  C127  F103         	movff	CalcIPBufferChecksum@ChunkLen+1,MACGetArray@len+1
 36159  017D40  EC35  F0D7         	call	_MACGetArray	;wreg free
 36160                           
 36161                           ;ETH97J60.c: 898: len -= ChunkLen;
 36162  017D44  0101               	movlb	1	; () banked
 36163  017D46  5126               	movf	CalcIPBufferChecksum@ChunkLen& (0+255),w,b
 36164  017D48  0101               	movlb	1	; () banked
 36165  017D4A  5F06               	subwf	CalcIPBufferChecksum@len& (0+255),f,b
 36166  017D4C  0101               	movlb	1	; () banked
 36167  017D4E  5127               	movf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),w,b
 36168  017D50  0101               	movlb	1	; () banked
 36169  017D52  5B07               	subwfb	(CalcIPBufferChecksum@len+1)& (0+255),f,b
 36170                           
 36171                           ; BSR set to: 1
 36172                           ;ETH97J60.c: 901: if(((WORD_VAL*)&ChunkLen)->bits.b0)
 36173  017D54  0101               	movlb	1	; () banked
 36174  017D56  A126               	btfss	CalcIPBufferChecksum@ChunkLen& (0+255),0,b
 36175  017D58  D00F               	goto	l11128
 36176                           
 36177                           ; BSR set to: 1
 36178                           ;ETH97J60.c: 902: {
 36179                           ;ETH97J60.c: 903: DataBuffer[ChunkLen] = 0x00;
 36180  017D5A  0101               	movlb	1	; () banked
 36181  017D5C  0E0A               	movlw	low CalcIPBufferChecksum@DataBuffer
 36182  017D5E  0101               	movlb	1	; () banked
 36183  017D60  2526               	addwf	CalcIPBufferChecksum@ChunkLen& (0+255),w,b
 36184  017D62  6ED9               	movwf	fsr2l,c
 36185  017D64  0101               	movlb	1	; () banked
 36186  017D66  0E01               	movlw	high CalcIPBufferChecksum@DataBuffer
 36187  017D68  0101               	movlb	1	; () banked
 36188  017D6A  2127               	addwfc	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),w,b
 36189  017D6C  6EDA               	movwf	fsr2h,c
 36190  017D6E  0E00               	movlw	0
 36191  017D70  6EDF               	movwf	indf2,c
 36192                           
 36193                           ; BSR set to: 1
 36194                           ;ETH97J60.c: 904: ChunkLen++;
 36195  017D72  0101               	movlb	1	; () banked
 36196  017D74  4B26               	infsnz	CalcIPBufferChecksum@ChunkLen& (0+255),f,b
 36197  017D76  2B27               	incf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),f,b
 36198  017D78                     l11128:
 36199                           
 36200                           ; BSR set to: 1
 36201                           ;ETH97J60.c: 905: }
 36202                           ;ETH97J60.c: 908: DataPtr = (WORD*)&DataBuffer[0];
 36203  017D78  0101               	movlb	1	; () banked
 36204  017D7A  0E01               	movlw	high CalcIPBufferChecksum@DataBuffer
 36205  017D7C  0101               	movlb	1	; () banked
 36206  017D7E  6F21               	movwf	(CalcIPBufferChecksum@DataPtr+1)& (0+255),b
 36207  017D80  0101               	movlb	1	; () banked
 36208  017D82  0E0A               	movlw	low CalcIPBufferChecksum@DataBuffer
 36209  017D84  0101               	movlb	1	; () banked
 36210  017D86  6F20               	movwf	CalcIPBufferChecksum@DataPtr& (0+255),b
 36211                           
 36212                           ;ETH97J60.c: 909: while(ChunkLen)
 36213  017D88  D022               	goto	l11136
 36214  017D8A                     l11130:
 36215                           
 36216                           ; BSR set to: 1
 36217                           ;ETH97J60.c: 910: {
 36218                           ;ETH97J60.c: 911: Checksum.Val += *DataPtr++;
 36219  017D8A  C120  FFD9         	movff	CalcIPBufferChecksum@DataPtr,fsr2l
 36220  017D8E  C121  FFDA         	movff	CalcIPBufferChecksum@DataPtr+1,fsr2h
 36221  017D92  CFDE F108          	movff	postinc2,??_CalcIPBufferChecksum
 36222  017D96  CFDD F109          	movff	postdec2,??_CalcIPBufferChecksum+1
 36223  017D9A  0101               	movlb	1	; () banked
 36224  017D9C  5108               	movf	??_CalcIPBufferChecksum& (0+255),w,b
 36225  017D9E  0101               	movlb	1	; () banked
 36226  017DA0  2722               	addwf	CalcIPBufferChecksum@Checksum& (0+255),f,b
 36227  017DA2  0101               	movlb	1	; () banked
 36228  017DA4  5109               	movf	(??_CalcIPBufferChecksum+1)& (0+255),w,b
 36229  017DA6  0101               	movlb	1	; () banked
 36230  017DA8  2323               	addwfc	(CalcIPBufferChecksum@Checksum+1)& (0+255),f,b
 36231  017DAA  0E00               	movlw	0
 36232  017DAC  0101               	movlb	1	; () banked
 36233  017DAE  2324               	addwfc	(CalcIPBufferChecksum@Checksum+2)& (0+255),f,b
 36234  017DB0  0E00               	movlw	0
 36235  017DB2  0101               	movlb	1	; () banked
 36236  017DB4  2325               	addwfc	(CalcIPBufferChecksum@Checksum+3)& (0+255),f,b
 36237                           
 36238                           ; BSR set to: 1
 36239  017DB6  0E02               	movlw	2
 36240  017DB8  0101               	movlb	1	; () banked
 36241  017DBA  2720               	addwf	CalcIPBufferChecksum@DataPtr& (0+255),f,b
 36242  017DBC  0E00               	movlw	0
 36243  017DBE  0101               	movlb	1	; () banked
 36244  017DC0  2321               	addwfc	(CalcIPBufferChecksum@DataPtr+1)& (0+255),f,b
 36245                           
 36246                           ; BSR set to: 1
 36247                           ;ETH97J60.c: 912: ChunkLen -= 2;
 36248  017DC2  0E02               	movlw	2
 36249  017DC4  0101               	movlb	1	; () banked
 36250  017DC6  5F26               	subwf	CalcIPBufferChecksum@ChunkLen& (0+255),f,b
 36251  017DC8  0E00               	movlw	0
 36252  017DCA  0101               	movlb	1	; () banked
 36253  017DCC  5B27               	subwfb	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),f,b
 36254  017DCE                     l11136:
 36255                           
 36256                           ; BSR set to: 1
 36257  017DCE  0101               	movlb	1	; () banked
 36258  017DD0  5127               	movf	(CalcIPBufferChecksum@ChunkLen+1)& (0+255),w,b
 36259  017DD2  1126               	iorwf	CalcIPBufferChecksum@ChunkLen& (0+255),w,b
 36260  017DD4  A4D8               	btfss	status,2,c
 36261  017DD6  D7D9               	goto	l11130
 36262  017DD8                     l11138:
 36263  017DD8  0101               	movlb	1	; () banked
 36264  017DDA  5107               	movf	(CalcIPBufferChecksum@len+1)& (0+255),w,b
 36265  017DDC  1106               	iorwf	CalcIPBufferChecksum@len& (0+255),w,b
 36266  017DDE  A4D8               	btfss	status,2,c
 36267  017DE0  D790               	goto	l11112
 36268                           
 36269                           ; BSR set to: 1
 36270                           ;ETH97J60.c: 913: }
 36271                           ;ETH97J60.c: 914: }
 36272                           ;ETH97J60.c: 917: ERDPT = Start;
 36273  017DE2  C11E  FF7A         	movff	CalcIPBufferChecksum@Start,3962	;volatile
 36274  017DE6  C11F  FF7B         	movff	CalcIPBufferChecksum@Start+1,3963	;volatile
 36275                           
 36276                           ; BSR set to: 1
 36277                           ;ETH97J60.c: 920: Checksum.Val = (DWORD)Checksum.w[0] + (DWORD)Checksum.w[1];
 36278  017DEA  0101               	movlb	1	; () banked
 36279  017DEC  5122               	movf	CalcIPBufferChecksum@Checksum& (0+255),w,b
 36280  017DEE  0101               	movlb	1	; () banked
 36281  017DF0  2524               	addwf	(CalcIPBufferChecksum@Checksum+2)& (0+255),w,b
 36282  017DF2  0101               	movlb	1	; () banked
 36283  017DF4  6F22               	movwf	CalcIPBufferChecksum@Checksum& (0+255),b
 36284  017DF6  0101               	movlb	1	; () banked
 36285  017DF8  5123               	movf	(CalcIPBufferChecksum@Checksum+1)& (0+255),w,b
 36286  017DFA  0101               	movlb	1	; () banked
 36287  017DFC  2125               	addwfc	(CalcIPBufferChecksum@Checksum+3)& (0+255),w,b
 36288  017DFE  0101               	movlb	1	; () banked
 36289  017E00  6F23               	movwf	(CalcIPBufferChecksum@Checksum+1)& (0+255),b
 36290  017E02  0101               	movlb	1	; () banked
 36291  017E04  6B24               	clrf	(CalcIPBufferChecksum@Checksum+2)& (0+255),b
 36292  017E06  B0D8               	btfsc	status,0,c
 36293  017E08  2B24               	incf	(CalcIPBufferChecksum@Checksum+2)& (0+255),f,b
 36294  017E0A  0101               	movlb	1	; () banked
 36295  017E0C  6B25               	clrf	(CalcIPBufferChecksum@Checksum+3)& (0+255),b
 36296                           
 36297                           ; BSR set to: 1
 36298                           ;ETH97J60.c: 924: Checksum.w[0] += Checksum.w[1];
 36299  017E0E  0101               	movlb	1	; () banked
 36300  017E10  EE21  F024         	lfsr	2,CalcIPBufferChecksum@Checksum+2
 36301  017E14  50DE               	movf	postinc2,w,c
 36302  017E16  0101               	movlb	1	; () banked
 36303  017E18  2722               	addwf	CalcIPBufferChecksum@Checksum& (0+255),f,b
 36304  017E1A  50DD               	movf	postdec2,w,c
 36305  017E1C  0101               	movlb	1	; () banked
 36306  017E1E  2323               	addwfc	(CalcIPBufferChecksum@Checksum+1)& (0+255),f,b
 36307                           
 36308                           ; BSR set to: 1
 36309                           ;ETH97J60.c: 927: return ~Checksum.w[0];
 36310  017E20  0101               	movlb	1	; () banked
 36311  017E22  1D22               	comf	CalcIPBufferChecksum@Checksum& (0+255),w,b
 36312  017E24  0101               	movlb	1	; () banked
 36313  017E26  6F06               	movwf	?_CalcIPBufferChecksum& (0+255),b
 36314  017E28  0101               	movlb	1	; () banked
 36315  017E2A  1D23               	comf	(CalcIPBufferChecksum@Checksum+1)& (0+255),w,b
 36316  017E2C  0101               	movlb	1	; () banked
 36317  017E2E  6F07               	movwf	(?_CalcIPBufferChecksum+1)& (0+255),b
 36318  017E30  0012               	return	
 36319  017E32                     __end_of_CalcIPBufferChecksum:
 36320                           	opt stack 0
 36321                           tblptru	equ	0xFF8
 36322                           tblptrh	equ	0xFF7
 36323                           tblptrl	equ	0xFF6
 36324                           tablat	equ	0xFF5
 36325                           prodh	equ	0xFF4
 36326                           prodl	equ	0xFF3
 36327                           intcon	equ	0xFF2
 36328                           indf0	equ	0xFEF
 36329                           postinc0	equ	0xFEE
 36330                           fsr0h	equ	0xFEA
 36331                           fsr0l	equ	0xFE9
 36332                           wreg	equ	0xFE8
 36333                           indf1	equ	0xFE7
 36334                           postinc1	equ	0xFE6
 36335                           postdec1	equ	0xFE5
 36336                           fsr1h	equ	0xFE2
 36337                           fsr1l	equ	0xFE1
 36338                           indf2	equ	0xFDF
 36339                           postinc2	equ	0xFDE
 36340                           postdec2	equ	0xFDD
 36341                           fsr2h	equ	0xFDA
 36342                           fsr2l	equ	0xFD9
 36343                           status	equ	0xFD8
 36344                           
 36345 ;; *************** function _ARPProcess *****************
 36346 ;; Defined at:
 36347 ;;		line 413 in file "../tcpip/arp.c"
 36348 ;; Parameters:    Size  Location     Type
 36349 ;;		None
 36350 ;; Auto vars:     Size  Location     Type
 36351 ;;  packet         28   32[BANK1 ] struct .
 36352 ;; Return value:  Size  Location     Type
 36353 ;;                  1    wreg      unsigned char 
 36354 ;; Registers used:
 36355 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36356 ;; Tracked objects:
 36357 ;;		On entry : 0/0
 36358 ;;		On exit  : 0/0
 36359 ;;		Unchanged: 0/0
 36360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36362 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36364 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36365 ;;Total ram usage:       28 bytes
 36366 ;; Hardware stack levels used:    1
 36367 ;; Hardware stack levels required when called:   15
 36368 ;; This function calls:
 36369 ;;		_ARPPut
 36370 ;;		_MACDiscardRx
 36371 ;;		_MACGetArray
 36372 ;;		_SwapARPPacket
 36373 ;; This function is called by:
 36374 ;;		_StackTask
 36375 ;; This function uses a non-reentrant model
 36376 ;;
 36377                           
 36378                           	psect	text71
 36379  017F78                     __ptext71:
 36380                           	opt stack 0
 36381  017F78                     _ARPProcess:
 36382                           	opt stack 14
 36383                           
 36384                           ;arp.c: 415: ARP_PACKET packet;
 36385                           ;arp.c: 416: static NODE_INFO Target;
 36386                           ;arp.c: 420: static enum
 36387                           ;arp.c: 421: {
 36388                           ;arp.c: 422: SM_ARP_IDLE = 0,
 36389                           ;arp.c: 423: SM_ARP_REPLY
 36390                           ;arp.c: 424: } smARP = SM_ARP_IDLE;
 36391                           ;arp.c: 426: switch(smARP)
 36392                           
 36393                           ; BSR set to: 1
 36394                           ;incstack = 0
 36395  017F78  D099               	goto	l14088
 36396  017F7A                     l14046:
 36397                           
 36398                           ;arp.c: 430: MACGetArray((uint8_t*)&packet, sizeof(packet));
 36399  017F7A  0101               	movlb	1	; () banked
 36400  017F7C  0E01               	movlw	high ARPProcess@packet
 36401  017F7E  0101               	movlb	1	; () banked
 36402  017F80  6F01               	movwf	(MACGetArray@val+1)& (0+255),b
 36403  017F82  0101               	movlb	1	; () banked
 36404  017F84  0E20               	movlw	low ARPProcess@packet
 36405  017F86  0101               	movlb	1	; () banked
 36406  017F88  6F00               	movwf	MACGetArray@val& (0+255),b
 36407  017F8A  0E00               	movlw	0
 36408  017F8C  0101               	movlb	1	; () banked
 36409  017F8E  6F03               	movwf	(MACGetArray@len+1)& (0+255),b
 36410  017F90  0E1C               	movlw	28
 36411  017F92  0101               	movlb	1	; () banked
 36412  017F94  6F02               	movwf	MACGetArray@len& (0+255),b
 36413  017F96  EC35  F0D7         	call	_MACGetArray	;wreg free
 36414                           
 36415                           ;arp.c: 431: MACDiscardRx();
 36416  017F9A  EC8E  F0D8         	call	_MACDiscardRx	;wreg free
 36417                           
 36418                           ;arp.c: 432: SwapARPPacket(&packet);
 36419  017F9E  0101               	movlb	1	; () banked
 36420  017FA0  0E01               	movlw	high ARPProcess@packet
 36421  017FA2  0101               	movlb	1	; () banked
 36422  017FA4  6F06               	movwf	(SwapARPPacket@p+1)& (0+255),b
 36423  017FA6  0101               	movlb	1	; () banked
 36424  017FA8  0E20               	movlw	low ARPProcess@packet
 36425  017FAA  0101               	movlb	1	; () banked
 36426  017FAC  6F05               	movwf	SwapARPPacket@p& (0+255),b
 36427  017FAE  ECD9  F0CF         	call	_SwapARPPacket	;wreg free
 36428                           
 36429                           ;arp.c: 435: if ( packet.HardwareType != (0x0001u) ||
 36430                           ;arp.c: 436: packet.MACAddrLen != sizeof(MAC_ADDR) ||
 36431                           ;arp.c: 437: packet.ProtocolLen != sizeof(TCPIP_UINT32_VAL) )
 36432  017FB2  0101               	movlb	1	; () banked
 36433  017FB4  0520               	decf	ARPProcess@packet& (0+255),w,b
 36434  017FB6  1121               	iorwf	(ARPProcess@packet+1)& (0+255),w,b
 36435  017FB8  A4D8               	btfss	status,2,c
 36436  017FBA  0012               	return	
 36437                           
 36438                           ; BSR set to: 1
 36439  017FBC  0101               	movlb	1	; () banked
 36440  017FBE  5124               	movf	(ARPProcess@packet+4)& (0+255),w,b
 36441  017FC0  0A06               	xorlw	6
 36442  017FC2  A4D8               	btfss	status,2,c
 36443  017FC4  0012               	return	
 36444                           
 36445                           ; BSR set to: 1
 36446  017FC6  0101               	movlb	1	; () banked
 36447  017FC8  5125               	movf	(ARPProcess@packet+5)& (0+255),w,b
 36448  017FCA  0A04               	xorlw	4
 36449  017FCC  A4D8               	btfss	status,2,c
 36450  017FCE  0012               	return	
 36451                           
 36452                           ; BSR set to: 1
 36453                           ;arp.c: 440: }
 36454                           ;arp.c: 455: if(packet.Operation == 0x0002u)
 36455                           
 36456                           ; BSR set to: 1
 36457                           
 36458                           ; BSR set to: 1
 36459                           ;arp.c: 438: {
 36460                           ;arp.c: 439: return 1;
 36461                           ;	Return value of _ARPProcess is never used
 36462  017FD0  0101               	movlb	1	; () banked
 36463  017FD2  5126               	movf	(ARPProcess@packet+6)& (0+255),w,b
 36464  017FD4  0A02               	xorlw	2
 36465  017FD6  1127               	iorwf	(ARPProcess@packet+7)& (0+255),w,b
 36466  017FD8  A4D8               	btfss	status,2,c
 36467  017FDA  D012               	goto	l14066
 36468                           
 36469                           ; BSR set to: 1
 36470                           ;arp.c: 456: {
 36471                           ;arp.c: 462: Cache.MACAddr = packet.SenderMACAddr;
 36472  017FDC  EE21  F028         	lfsr	2,ARPProcess@packet+8
 36473  017FE0  EE10  F0C1         	lfsr	1,_Cache+4
 36474  017FE4  0E06               	movlw	6
 36475  017FE6                     u15971:
 36476  017FE6  CFDE FFE6          	movff	postinc2,postinc1
 36477  017FEA  2EE8               	decfsz	wreg,f,c
 36478  017FEC  D7FC               	goto	u15971
 36479                           
 36480                           ; BSR set to: 1
 36481                           ;arp.c: 463: Cache.IPAddr = packet.SenderIPAddr;
 36482  017FEE  C12E  F0BD         	movff	ARPProcess@packet+14,_Cache
 36483  017FF2  C12F  F0BE         	movff	ARPProcess@packet+15,_Cache+1
 36484  017FF6  C130  F0BF         	movff	ARPProcess@packet+16,_Cache+2
 36485  017FFA  C131  F0C0         	movff	ARPProcess@packet+17,_Cache+3
 36486  017FFE  0012               	return	
 36487  018000                     l14066:
 36488                           
 36489                           ; BSR set to: 1
 36490                           ;arp.c: 467: }
 36491                           ;arp.c: 471: if(packet.Operation == 0x0001u)
 36492  018000  0101               	movlb	1	; () banked
 36493  018002  0526               	decf	(ARPProcess@packet+6)& (0+255),w,b
 36494  018004  1127               	iorwf	(ARPProcess@packet+7)& (0+255),w,b
 36495  018006  A4D8               	btfss	status,2,c
 36496  018008  D029               	goto	l14076
 36497                           
 36498                           ; BSR set to: 1
 36499                           ;arp.c: 472: {
 36500                           ;arp.c: 473: if(packet.TargetIPAddr.Val != AppConfig.MyIPAddr.Val)
 36501  01800A  0102               	movlb	2	; () banked
 36502  01800C  513F               	movf	(_AppConfig+3)& (0+255),w,b
 36503  01800E  0101               	movlb	1	; () banked
 36504  018010  193B               	xorwf	(ARPProcess@packet+27)& (0+255),w,b
 36505  018012  E10E               	bnz	u15995
 36506  018014  0102               	movlb	2	; () banked
 36507  018016  513E               	movf	(_AppConfig+2)& (0+255),w,b
 36508  018018  0101               	movlb	1	; () banked
 36509  01801A  193A               	xorwf	(ARPProcess@packet+26)& (0+255),w,b
 36510  01801C  E109               	bnz	u15995
 36511  01801E  0102               	movlb	2	; () banked
 36512  018020  513D               	movf	(_AppConfig+1)& (0+255),w,b
 36513  018022  0101               	movlb	1	; () banked
 36514  018024  1939               	xorwf	(ARPProcess@packet+25)& (0+255),w,b
 36515  018026  E104               	bnz	u15995
 36516  018028  0102               	movlb	2	; () banked
 36517  01802A  513C               	movf	_AppConfig& (0+255),w,b
 36518  01802C  0101               	movlb	1	; () banked
 36519  01802E  1938               	xorwf	(ARPProcess@packet+24)& (0+255),w,b
 36520  018030                     u15995:
 36521  018030  A4D8               	btfss	status,2,c
 36522  018032  0012               	return	
 36523                           
 36524                           ; BSR set to: 1
 36525                           ;arp.c: 476: }
 36526                           ;arp.c: 497: Target.IPAddr = packet.SenderIPAddr;
 36527                           
 36528                           ; BSR set to: 1
 36529                           ;arp.c: 474: {
 36530                           ;arp.c: 475: return 1;
 36531                           ;	Return value of _ARPProcess is never used
 36532  018034  C12E  F0B3         	movff	ARPProcess@packet+14,ARPProcess@Target
 36533  018038  C12F  F0B4         	movff	ARPProcess@packet+15,ARPProcess@Target+1
 36534  01803C  C130  F0B5         	movff	ARPProcess@packet+16,ARPProcess@Target+2
 36535  018040  C131  F0B6         	movff	ARPProcess@packet+17,ARPProcess@Target+3
 36536                           
 36537                           ; BSR set to: 1
 36538                           ;arp.c: 498: Target.MACAddr = packet.SenderMACAddr;
 36539  018044  EE21  F028         	lfsr	2,ARPProcess@packet+8
 36540  018048  EE10  F0B7         	lfsr	1,ARPProcess@Target+4
 36541  01804C  0E06               	movlw	6
 36542  01804E                     u16001:
 36543  01804E  CFDE FFE6          	movff	postinc2,postinc1
 36544  018052  2EE8               	decfsz	wreg,f,c
 36545  018054  D7FC               	goto	u16001
 36546                           
 36547                           ; BSR set to: 1
 36548                           ;arp.c: 502: smARP = SM_ARP_REPLY;
 36549  018056  0E01               	movlw	1
 36550  018058  0101               	movlb	1	; () banked
 36551  01805A  6FB3               	movwf	ARPProcess@smARP& (0+255),b
 36552  01805C                     l14076:
 36553                           
 36554                           ; BSR set to: 1
 36555                           ;arp.c: 507: packet.Operation = 0x0002u;
 36556  01805C  0E00               	movlw	0
 36557  01805E  0101               	movlb	1	; () banked
 36558  018060  6F27               	movwf	(ARPProcess@packet+7)& (0+255),b
 36559  018062  0E02               	movlw	2
 36560  018064  0101               	movlb	1	; () banked
 36561  018066  6F26               	movwf	(ARPProcess@packet+6)& (0+255),b
 36562                           
 36563                           ;arp.c: 520: packet.TargetMACAddr = Target.MACAddr;
 36564  018068  EE20  F0B7         	lfsr	2,ARPProcess@Target+4
 36565  01806C  EE11  F032         	lfsr	1,ARPProcess@packet+18
 36566  018070  0E06               	movlw	6
 36567  018072                     u16011:
 36568  018072  CFDE FFE6          	movff	postinc2,postinc1
 36569  018076  2EE8               	decfsz	wreg,f,c
 36570  018078  D7FC               	goto	u16011
 36571                           
 36572                           ; BSR set to: 1
 36573                           ;arp.c: 521: packet.TargetIPAddr = Target.IPAddr;
 36574  01807A  C0B3  F138         	movff	ARPProcess@Target,ARPProcess@packet+24
 36575  01807E  C0B4  F139         	movff	ARPProcess@Target+1,ARPProcess@packet+25
 36576  018082  C0B5  F13A         	movff	ARPProcess@Target+2,ARPProcess@packet+26
 36577  018086  C0B6  F13B         	movff	ARPProcess@Target+3,ARPProcess@packet+27
 36578                           
 36579                           ; BSR set to: 1
 36580                           ;arp.c: 528: if(!ARPPut(&packet))
 36581  01808A  0101               	movlb	1	; () banked
 36582  01808C  0E01               	movlw	high ARPProcess@packet
 36583  01808E  0101               	movlb	1	; () banked
 36584  018090  6F1F               	movwf	(ARPPut@packet+1)& (0+255),b
 36585  018092  0101               	movlb	1	; () banked
 36586  018094  0E20               	movlw	low ARPProcess@packet
 36587  018096  0101               	movlb	1	; () banked
 36588  018098  6F1E               	movwf	ARPPut@packet& (0+255),b
 36589  01809A  ECF8  F0C0         	call	_ARPPut	;wreg free
 36590  01809E  0900               	iorlw	0
 36591  0180A0  B4D8               	btfsc	status,2,c
 36592  0180A2  0012               	return	
 36593                           
 36594                           ;arp.c: 531: }
 36595                           ;arp.c: 534: smARP = SM_ARP_IDLE;
 36596                           
 36597                           ;arp.c: 529: {
 36598                           ;arp.c: 530: return 0;
 36599                           ;	Return value of _ARPProcess is never used
 36600  0180A4  0E00               	movlw	0
 36601  0180A6  0101               	movlb	1	; () banked
 36602  0180A8  6FB3               	movwf	ARPProcess@smARP& (0+255),b
 36603                           
 36604                           ;arp.c: 535: break;
 36605  0180AA  0012               	return	
 36606  0180AC                     l14088:
 36607  0180AC  0101               	movlb	1	; () banked
 36608  0180AE  51B3               	movf	ARPProcess@smARP& (0+255),w,b
 36609                           
 36610                           ; Switch size 1, requested type "space"
 36611                           ; Number of cases is 2, Range of values is 0 to 1
 36612                           ; switch strategies available:
 36613                           ; Name         Instructions Cycles
 36614                           ; simple_byte            7     4 (average)
 36615                           ;	Chosen strategy is simple_byte
 36616  0180B0  0A00               	xorlw	0	; case 0
 36617  0180B2  B4D8               	btfsc	status,2,c
 36618  0180B4  D762               	goto	l14046
 36619  0180B6  0A01               	xorlw	1	; case 1
 36620  0180B8  A4D8               	btfss	status,2,c
 36621  0180BA  0012               	return	
 36622  0180BC  D7CF               	goto	l14076
 36623  0180BE                     __end_of_ARPProcess:
 36624                           	opt stack 0
 36625                           tblptru	equ	0xFF8
 36626                           tblptrh	equ	0xFF7
 36627                           tblptrl	equ	0xFF6
 36628                           tablat	equ	0xFF5
 36629                           prodh	equ	0xFF4
 36630                           prodl	equ	0xFF3
 36631                           intcon	equ	0xFF2
 36632                           indf0	equ	0xFEF
 36633                           postinc0	equ	0xFEE
 36634                           fsr0h	equ	0xFEA
 36635                           fsr0l	equ	0xFE9
 36636                           wreg	equ	0xFE8
 36637                           indf1	equ	0xFE7
 36638                           postinc1	equ	0xFE6
 36639                           postdec1	equ	0xFE5
 36640                           fsr1h	equ	0xFE2
 36641                           fsr1l	equ	0xFE1
 36642                           indf2	equ	0xFDF
 36643                           postinc2	equ	0xFDE
 36644                           postdec2	equ	0xFDD
 36645                           fsr2h	equ	0xFDA
 36646                           fsr2l	equ	0xFD9
 36647                           status	equ	0xFD8
 36648                           
 36649 ;; *************** function _MACDiscardRx *****************
 36650 ;; Defined at:
 36651 ;;		line 321 in file "../tcpip/ETH97J60.c"
 36652 ;; Parameters:    Size  Location     Type
 36653 ;;		None
 36654 ;; Auto vars:     Size  Location     Type
 36655 ;;  NewRXRDLocat    2    0[BANK1 ] struct .
 36656 ;; Return value:  Size  Location     Type
 36657 ;;		None               void
 36658 ;; Registers used:
 36659 ;;		wreg, status,2, status,0
 36660 ;; Tracked objects:
 36661 ;;		On entry : 0/0
 36662 ;;		On exit  : 0/0
 36663 ;;		Unchanged: 0/0
 36664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36666 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36668 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36669 ;;Total ram usage:        2 bytes
 36670 ;; Hardware stack levels used:    1
 36671 ;; Hardware stack levels required when called:   10
 36672 ;; This function calls:
 36673 ;;		Nothing
 36674 ;; This function is called by:
 36675 ;;		_MACGetHeader
 36676 ;;		_ARPProcess
 36677 ;;		_TCPProcess
 36678 ;; This function uses a non-reentrant model
 36679 ;;
 36680                           
 36681                           	psect	text72
 36682  01B11C                     __ptext72:
 36683                           	opt stack 0
 36684  01B11C                     _MACDiscardRx:
 36685                           	opt stack 18
 36686                           
 36687                           ;ETH97J60.c: 323: WORD_VAL NewRXRDLocation;
 36688                           ;ETH97J60.c: 326: if(flags.bits.bWasDiscarded)
 36689                           
 36690                           ;incstack = 0
 36691  01B11C  0101               	movlb	1	; () banked
 36692  01B11E  B1B6               	btfsc	_flags& (0+255),0,b
 36693  01B120  0012               	return	
 36694                           
 36695                           ; BSR set to: 1
 36696                           ;ETH97J60.c: 328: flags.bits.bWasDiscarded = 1;
 36697                           
 36698                           ; BSR set to: 1
 36699                           ;ETH97J60.c: 327: return;
 36700  01B122  0101               	movlb	1	; () banked
 36701  01B124  81B6               	bsf	_flags& (0+255),0,b
 36702                           
 36703                           ; BSR set to: 1
 36704                           ;ETH97J60.c: 334: NewRXRDLocation.Val = NextPacketLocation.Val - 1;
 36705  01B126  0EFF               	movlw	255
 36706  01B128  0100               	movlb	0	; () banked
 36707  01B12A  25E3               	addwf	_NextPacketLocation& (0+255),w,b
 36708  01B12C  0101               	movlb	1	; () banked
 36709  01B12E  6F00               	movwf	MACDiscardRx@NewRXRDLocation& (0+255),b
 36710  01B130  0EFF               	movlw	255
 36711  01B132  0100               	movlb	0	; () banked
 36712  01B134  21E4               	addwfc	(_NextPacketLocation+1)& (0+255),w,b
 36713  01B136  0101               	movlb	1	; () banked
 36714  01B138  6F01               	movwf	(MACDiscardRx@NewRXRDLocation+1)& (0+255),b
 36715                           
 36716                           ;ETH97J60.c: 338: if((NewRXRDLocation.Val < (0ul)) || (NewRXRDLocation.Val > ((((8*1024u
      +                          l) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) | 0x0001ul)))
 36717  01B13A  0EA6               	movlw	166
 36718  01B13C  0101               	movlb	1	; () banked
 36719  01B13E  5D00               	subwf	MACDiscardRx@NewRXRDLocation& (0+255),w,b
 36720  01B140  0E12               	movlw	18
 36721  01B142  0101               	movlb	1	; () banked
 36722  01B144  5901               	subwfb	(MACDiscardRx@NewRXRDLocation+1)& (0+255),w,b
 36723  01B146  A0D8               	btfss	status,0,c
 36724  01B148  D006               	goto	l12908
 36725                           
 36726                           ; BSR set to: 1
 36727                           ;ETH97J60.c: 340: {
 36728                           ;ETH97J60.c: 341: NewRXRDLocation.Val = ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0u
      +                          l - 0ul)-2ul) | 0x0001ul);
 36729  01B14A  0E12               	movlw	18
 36730  01B14C  0101               	movlb	1	; () banked
 36731  01B14E  6F01               	movwf	(MACDiscardRx@NewRXRDLocation+1)& (0+255),b
 36732  01B150  0EA5               	movlw	165
 36733  01B152  0101               	movlb	1	; () banked
 36734  01B154  6F00               	movwf	MACDiscardRx@NewRXRDLocation& (0+255),b
 36735  01B156                     l12908:
 36736                           
 36737                           ; BSR set to: 1
 36738                           ;ETH97J60.c: 342: }
 36739                           ;ETH97J60.c: 345: ECON2bits.PKTDEC = 1;
 36740  01B156  010E               	movlb	14	; () banked
 36741  01B158  8DFE               	bsf	254,6,b	;volatile
 36742                           
 36743                           ; BSR set to: 14
 36744                           ;ETH97J60.c: 350: ERXRDPTL = NewRXRDLocation.v[0];
 36745  01B15A  C100  FEEC         	movff	MACDiscardRx@NewRXRDLocation,3820	;volatile
 36746                           
 36747                           ; BSR set to: 14
 36748                           ;ETH97J60.c: 351: ERXRDPTH = NewRXRDLocation.v[1];
 36749  01B15E  C101  FEED         	movff	MACDiscardRx@NewRXRDLocation+1,3821	;volatile
 36750  01B162  0012               	return	
 36751  01B164                     __end_of_MACDiscardRx:
 36752                           	opt stack 0
 36753                           tblptru	equ	0xFF8
 36754                           tblptrh	equ	0xFF7
 36755                           tblptrl	equ	0xFF6
 36756                           tablat	equ	0xFF5
 36757                           prodh	equ	0xFF4
 36758                           prodl	equ	0xFF3
 36759                           intcon	equ	0xFF2
 36760                           indf0	equ	0xFEF
 36761                           postinc0	equ	0xFEE
 36762                           fsr0h	equ	0xFEA
 36763                           fsr0l	equ	0xFE9
 36764                           wreg	equ	0xFE8
 36765                           indf1	equ	0xFE7
 36766                           postinc1	equ	0xFE6
 36767                           postdec1	equ	0xFE5
 36768                           fsr1h	equ	0xFE2
 36769                           fsr1l	equ	0xFE1
 36770                           indf2	equ	0xFDF
 36771                           postinc2	equ	0xFDE
 36772                           postdec2	equ	0xFDD
 36773                           fsr2h	equ	0xFDA
 36774                           fsr2l	equ	0xFD9
 36775                           status	equ	0xFD8
 36776                           
 36777 ;; *************** function _ARPPut *****************
 36778 ;; Defined at:
 36779 ;;		line 320 in file "../tcpip/arp.c"
 36780 ;; Parameters:    Size  Location     Type
 36781 ;;  packet          2   30[BANK1 ] PTR struct .
 36782 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), 
 36783 ;; Auto vars:     Size  Location     Type
 36784 ;;		None
 36785 ;; Return value:  Size  Location     Type
 36786 ;;                  1    wreg      unsigned char 
 36787 ;; Registers used:
 36788 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36789 ;; Tracked objects:
 36790 ;;		On entry : 0/0
 36791 ;;		On exit  : 0/0
 36792 ;;		Unchanged: 0/0
 36793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 36794 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36797 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36798 ;;Total ram usage:        2 bytes
 36799 ;; Hardware stack levels used:    1
 36800 ;; Hardware stack levels required when called:   14
 36801 ;; This function calls:
 36802 ;;		_MACFlush
 36803 ;;		_MACIsTxReady
 36804 ;;		_MACPutArray
 36805 ;;		_MACPutHeader
 36806 ;;		_MACSetWritePtr
 36807 ;;		_SwapARPPacket
 36808 ;;		_memcpy
 36809 ;; This function is called by:
 36810 ;;		_ARPProcess
 36811 ;;		_ARPResolve
 36812 ;;		_ARPSendPkt
 36813 ;; This function uses a non-reentrant model
 36814 ;;
 36815                           
 36816                           	psect	text73
 36817  0181F0                     __ptext73:
 36818                           	opt stack 0
 36819  0181F0                     _ARPPut:
 36820                           	opt stack 13
 36821  0181F0                     l11920:
 36822  0181F0  ECBE  F0D7         	call	_MACIsTxReady	;wreg free
 36823  0181F4  0900               	iorlw	0
 36824  0181F6  B4D8               	btfsc	status,2,c
 36825  0181F8  D7FB               	goto	l11920
 36826                           
 36827                           ;arp.c: 323: MACSetWritePtr((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1u
      +                          l));
 36828  0181FA  0E12               	movlw	18
 36829  0181FC  0101               	movlb	1	; () banked
 36830  0181FE  6F01               	movwf	(MACSetWritePtr@address+1)& (0+255),b
 36831  018200  0EA7               	movlw	167
 36832  018202  0101               	movlb	1	; () banked
 36833  018204  6F00               	movwf	MACSetWritePtr@address& (0+255),b
 36834  018206  EC40  F0DD         	call	_MACSetWritePtr	;wreg free
 36835                           
 36836                           ;arp.c: 326: packet->HardwareType = (0x0001u);
 36837  01820A  C11E  FFD9         	movff	ARPPut@packet,fsr2l
 36838  01820E  C11F  FFDA         	movff	ARPPut@packet+1,fsr2h
 36839  018212  0E01               	movlw	1
 36840  018214  6EDE               	movwf	postinc2,c
 36841  018216  0E00               	movlw	0
 36842  018218  6EDD               	movwf	postdec2,c
 36843                           
 36844                           ;arp.c: 327: packet->Protocol = (0x0800u);
 36845  01821A  0101               	movlb	1	; () banked
 36846  01821C  EE20 F002          	lfsr	2,2
 36847  018220  0101               	movlb	1	; () banked
 36848  018222  511E               	movf	ARPPut@packet& (0+255),w,b
 36849  018224  26D9               	addwf	fsr2l,f,c
 36850  018226  0101               	movlb	1	; () banked
 36851  018228  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36852  01822A  22DA               	addwfc	fsr2h,f,c
 36853  01822C  0E00               	movlw	0
 36854  01822E  6EDE               	movwf	postinc2,c
 36855  018230  0E08               	movlw	8
 36856  018232  6EDD               	movwf	postdec2,c
 36857                           
 36858                           ; BSR set to: 1
 36859                           ;arp.c: 328: packet->MACAddrLen = sizeof(MAC_ADDR);
 36860  018234  0101               	movlb	1	; () banked
 36861  018236  EE20 F004          	lfsr	2,4
 36862  01823A  0101               	movlb	1	; () banked
 36863  01823C  511E               	movf	ARPPut@packet& (0+255),w,b
 36864  01823E  26D9               	addwf	fsr2l,f,c
 36865  018240  0101               	movlb	1	; () banked
 36866  018242  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36867  018244  22DA               	addwfc	fsr2h,f,c
 36868  018246  0E06               	movlw	6
 36869  018248  6EDF               	movwf	indf2,c
 36870                           
 36871                           ; BSR set to: 1
 36872                           ;arp.c: 329: packet->ProtocolLen = sizeof(TCPIP_UINT32_VAL);
 36873  01824A  0101               	movlb	1	; () banked
 36874  01824C  EE20 F005          	lfsr	2,5
 36875  018250  0101               	movlb	1	; () banked
 36876  018252  511E               	movf	ARPPut@packet& (0+255),w,b
 36877  018254  26D9               	addwf	fsr2l,f,c
 36878  018256  0101               	movlb	1	; () banked
 36879  018258  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36880  01825A  22DA               	addwfc	fsr2h,f,c
 36881  01825C  0E04               	movlw	4
 36882  01825E  6EDF               	movwf	indf2,c
 36883                           
 36884                           ; BSR set to: 1
 36885                           ;arp.c: 331: memcpy(&packet->SenderMACAddr, (void*)&AppConfig.MyMACAddr, sizeof(packet->
      +                          SenderMACAddr));
 36886  018260  0E08               	movlw	8
 36887  018262  0101               	movlb	1	; () banked
 36888  018264  251E               	addwf	ARPPut@packet& (0+255),w,b
 36889  018266  0101               	movlb	1	; () banked
 36890  018268  6F14               	movwf	memcpy@d1& (0+255),b
 36891  01826A  0E00               	movlw	0
 36892  01826C  0101               	movlb	1	; () banked
 36893  01826E  211F               	addwfc	(ARPPut@packet+1)& (0+255),w,b
 36894  018270  0101               	movlb	1	; () banked
 36895  018272  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 36896  018274  0102               	movlb	2	; () banked
 36897  018276  0E02               	movlw	high (_AppConfig+45)
 36898  018278  0101               	movlb	1	; () banked
 36899  01827A  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 36900  01827C  0102               	movlb	2	; () banked
 36901  01827E  0E69               	movlw	low (_AppConfig+45)
 36902  018280  0101               	movlb	1	; () banked
 36903  018282  6F16               	movwf	memcpy@s1& (0+255),b
 36904  018284  0E00               	movlw	0
 36905  018286  0101               	movlb	1	; () banked
 36906  018288  6F19               	movwf	(memcpy@n+1)& (0+255),b
 36907  01828A  0E06               	movlw	6
 36908  01828C  0101               	movlb	1	; () banked
 36909  01828E  6F18               	movwf	memcpy@n& (0+255),b
 36910  018290  ECCF  F0D5         	call	_memcpy	;wreg free
 36911                           
 36912                           ;arp.c: 335: packet->SenderIPAddr = AppConfig.MyIPAddr;
 36913  018294  0101               	movlb	1	; () banked
 36914  018296  EE20 F00E          	lfsr	2,14
 36915  01829A  0101               	movlb	1	; () banked
 36916  01829C  511E               	movf	ARPPut@packet& (0+255),w,b
 36917  01829E  26D9               	addwf	fsr2l,f,c
 36918  0182A0  0101               	movlb	1	; () banked
 36919  0182A2  511F               	movf	(ARPPut@packet+1)& (0+255),w,b
 36920  0182A4  22DA               	addwfc	fsr2h,f,c
 36921  0182A6  0102               	movlb	2	; () banked
 36922  0182A8  C23C  FFDE         	movff	_AppConfig,postinc2
 36923  0182AC  0102               	movlb	2	; () banked
 36924  0182AE  C23D  FFDE         	movff	_AppConfig+1,postinc2
 36925  0182B2  0102               	movlb	2	; () banked
 36926  0182B4  C23E  FFDE         	movff	_AppConfig+2,postinc2
 36927  0182B8  0102               	movlb	2	; () banked
 36928  0182BA  C23F  FFDE         	movff	_AppConfig+3,postinc2
 36929                           
 36930                           ; BSR set to: 2
 36931                           ;arp.c: 338: SwapARPPacket(packet);
 36932  0182BE  0101               	movlb	1	; () banked
 36933  0182C0  C11F  F106         	movff	ARPPut@packet+1,SwapARPPacket@p+1
 36934  0182C4  0101               	movlb	1	; () banked
 36935  0182C6  C11E  F105         	movff	ARPPut@packet,SwapARPPacket@p
 36936  0182CA  ECD9  F0CF         	call	_SwapARPPacket	;wreg free
 36937                           
 36938                           ;arp.c: 340: MACPutHeader(&packet->TargetMACAddr, (0x06u), sizeof(*packet));
 36939  0182CE  0E12               	movlw	18
 36940  0182D0  0101               	movlb	1	; () banked
 36941  0182D2  251E               	addwf	ARPPut@packet& (0+255),w,b
 36942  0182D4  0101               	movlb	1	; () banked
 36943  0182D6  6F04               	movwf	MACPutHeader@remote& (0+255),b
 36944  0182D8  0E00               	movlw	0
 36945  0182DA  0101               	movlb	1	; () banked
 36946  0182DC  211F               	addwfc	(ARPPut@packet+1)& (0+255),w,b
 36947  0182DE  0101               	movlb	1	; () banked
 36948  0182E0  6F05               	movwf	(MACPutHeader@remote+1)& (0+255),b
 36949  0182E2  0E06               	movlw	6
 36950  0182E4  0101               	movlb	1	; () banked
 36951  0182E6  6F06               	movwf	MACPutHeader@type& (0+255),b
 36952  0182E8  0E00               	movlw	0
 36953  0182EA  0101               	movlb	1	; () banked
 36954  0182EC  6F08               	movwf	(MACPutHeader@dataLen+1)& (0+255),b
 36955  0182EE  0E1C               	movlw	28
 36956  0182F0  0101               	movlb	1	; () banked
 36957  0182F2  6F07               	movwf	MACPutHeader@dataLen& (0+255),b
 36958  0182F4  EC91  F0D3         	call	_MACPutHeader	;wreg free
 36959                           
 36960                           ;arp.c: 341: MACPutArray((uint8_t*)packet, sizeof(*packet));
 36961  0182F8  0101               	movlb	1	; () banked
 36962  0182FA  C11F  F101         	movff	ARPPut@packet+1,MACPutArray@val+1
 36963  0182FE  0101               	movlb	1	; () banked
 36964  018300  C11E  F100         	movff	ARPPut@packet,MACPutArray@val
 36965  018304  0E00               	movlw	0
 36966  018306  0101               	movlb	1	; () banked
 36967  018308  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 36968  01830A  0E1C               	movlw	28
 36969  01830C  0101               	movlb	1	; () banked
 36970  01830E  6F02               	movwf	MACPutArray@len& (0+255),b
 36971  018310  ECE4  F0FF         	call	_MACPutArray	;wreg free
 36972                           
 36973                           ;arp.c: 342: MACFlush();
 36974  018314  ECDD  F0D9         	call	_MACFlush	;wreg free
 36975                           
 36976                           ;arp.c: 344: return 1;
 36977  018318  0E01               	movlw	1
 36978  01831A  0012               	return	
 36979  01831C                     __end_of_ARPPut:
 36980                           	opt stack 0
 36981                           tblptru	equ	0xFF8
 36982                           tblptrh	equ	0xFF7
 36983                           tblptrl	equ	0xFF6
 36984                           tablat	equ	0xFF5
 36985                           prodh	equ	0xFF4
 36986                           prodl	equ	0xFF3
 36987                           intcon	equ	0xFF2
 36988                           indf0	equ	0xFEF
 36989                           postinc0	equ	0xFEE
 36990                           fsr0h	equ	0xFEA
 36991                           fsr0l	equ	0xFE9
 36992                           wreg	equ	0xFE8
 36993                           indf1	equ	0xFE7
 36994                           postinc1	equ	0xFE6
 36995                           postdec1	equ	0xFE5
 36996                           fsr1h	equ	0xFE2
 36997                           fsr1l	equ	0xFE1
 36998                           indf2	equ	0xFDF
 36999                           postinc2	equ	0xFDE
 37000                           postdec2	equ	0xFDD
 37001                           fsr2h	equ	0xFDA
 37002                           fsr2l	equ	0xFD9
 37003                           status	equ	0xFD8
 37004                           
 37005 ;; *************** function _SwapARPPacket *****************
 37006 ;; Defined at:
 37007 ;;		line 688 in file "../tcpip/arp.c"
 37008 ;; Parameters:    Size  Location     Type
 37009 ;;  p               2    5[BANK1 ] PTR struct .
 37010 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), 
 37011 ;; Auto vars:     Size  Location     Type
 37012 ;;		None
 37013 ;; Return value:  Size  Location     Type
 37014 ;;		None               void
 37015 ;; Registers used:
 37016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37017 ;; Tracked objects:
 37018 ;;		On entry : 0/0
 37019 ;;		On exit  : 0/0
 37020 ;;		Unchanged: 0/0
 37021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37022 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37025 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37026 ;;Total ram usage:        2 bytes
 37027 ;; Hardware stack levels used:    1
 37028 ;; Hardware stack levels required when called:   11
 37029 ;; This function calls:
 37030 ;;		_swaps
 37031 ;; This function is called by:
 37032 ;;		_ARPPut
 37033 ;;		_ARPProcess
 37034 ;; This function uses a non-reentrant model
 37035 ;;
 37036                           
 37037                           	psect	text74
 37038  019FB2                     __ptext74:
 37039                           	opt stack 0
 37040  019FB2                     _SwapARPPacket:
 37041                           	opt stack 15
 37042                           
 37043                           ;arp.c: 690: p->HardwareType = swaps(p->HardwareType);
 37044                           
 37045                           ;incstack = 0
 37046  019FB2  C105  FFD9         	movff	SwapARPPacket@p,fsr2l
 37047  019FB6  C106  FFDA         	movff	SwapARPPacket@p+1,fsr2h
 37048  019FBA  0101               	movlb	1	; () banked
 37049  019FBC  CFDE F100          	movff	postinc2,swaps@v
 37050  019FC0  0101               	movlb	1	; () banked
 37051  019FC2  CFDD F101          	movff	postdec2,swaps@v+1
 37052  019FC6  EC79  F0DC         	call	_swaps	;wreg free
 37053  019FCA  C105  FFD9         	movff	SwapARPPacket@p,fsr2l
 37054  019FCE  C106  FFDA         	movff	SwapARPPacket@p+1,fsr2h
 37055  019FD2  0101               	movlb	1	; () banked
 37056  019FD4  C100  FFDE         	movff	?_swaps,postinc2
 37057  019FD8  0101               	movlb	1	; () banked
 37058  019FDA  C101  FFDD         	movff	?_swaps+1,postdec2
 37059                           
 37060                           ; BSR set to: 1
 37061                           ;arp.c: 691: p->Protocol = swaps(p->Protocol);
 37062  019FDE  0101               	movlb	1	; () banked
 37063  019FE0  EE20 F002          	lfsr	2,2
 37064  019FE4  0101               	movlb	1	; () banked
 37065  019FE6  5105               	movf	SwapARPPacket@p& (0+255),w,b
 37066  019FE8  26D9               	addwf	fsr2l,f,c
 37067  019FEA  0101               	movlb	1	; () banked
 37068  019FEC  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 37069  019FEE  22DA               	addwfc	fsr2h,f,c
 37070  019FF0  0101               	movlb	1	; () banked
 37071  019FF2  CFDE F100          	movff	postinc2,swaps@v
 37072  019FF6  0101               	movlb	1	; () banked
 37073  019FF8  CFDD F101          	movff	postdec2,swaps@v+1
 37074  019FFC  EC79  F0DC         	call	_swaps	;wreg free
 37075  01A000  0101               	movlb	1	; () banked
 37076  01A002  EE20 F002          	lfsr	2,2
 37077  01A006  0101               	movlb	1	; () banked
 37078  01A008  5105               	movf	SwapARPPacket@p& (0+255),w,b
 37079  01A00A  26D9               	addwf	fsr2l,f,c
 37080  01A00C  0101               	movlb	1	; () banked
 37081  01A00E  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 37082  01A010  22DA               	addwfc	fsr2h,f,c
 37083  01A012  0101               	movlb	1	; () banked
 37084  01A014  C100  FFDE         	movff	?_swaps,postinc2
 37085  01A018  0101               	movlb	1	; () banked
 37086  01A01A  C101  FFDD         	movff	?_swaps+1,postdec2
 37087                           
 37088                           ; BSR set to: 1
 37089                           ;arp.c: 692: p->Operation = swaps(p->Operation);
 37090  01A01E  0101               	movlb	1	; () banked
 37091  01A020  EE20 F006          	lfsr	2,6
 37092  01A024  0101               	movlb	1	; () banked
 37093  01A026  5105               	movf	SwapARPPacket@p& (0+255),w,b
 37094  01A028  26D9               	addwf	fsr2l,f,c
 37095  01A02A  0101               	movlb	1	; () banked
 37096  01A02C  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 37097  01A02E  22DA               	addwfc	fsr2h,f,c
 37098  01A030  0101               	movlb	1	; () banked
 37099  01A032  CFDE F100          	movff	postinc2,swaps@v
 37100  01A036  0101               	movlb	1	; () banked
 37101  01A038  CFDD F101          	movff	postdec2,swaps@v+1
 37102  01A03C  EC79  F0DC         	call	_swaps	;wreg free
 37103  01A040  0101               	movlb	1	; () banked
 37104  01A042  EE20 F006          	lfsr	2,6
 37105  01A046  0101               	movlb	1	; () banked
 37106  01A048  5105               	movf	SwapARPPacket@p& (0+255),w,b
 37107  01A04A  26D9               	addwf	fsr2l,f,c
 37108  01A04C  0101               	movlb	1	; () banked
 37109  01A04E  5106               	movf	(SwapARPPacket@p+1)& (0+255),w,b
 37110  01A050  22DA               	addwfc	fsr2h,f,c
 37111  01A052  0101               	movlb	1	; () banked
 37112  01A054  C100  FFDE         	movff	?_swaps,postinc2
 37113  01A058  0101               	movlb	1	; () banked
 37114  01A05A  C101  FFDD         	movff	?_swaps+1,postdec2
 37115                           
 37116                           ; BSR set to: 1
 37117  01A05E  0012               	return	
 37118  01A060                     __end_of_SwapARPPacket:
 37119                           	opt stack 0
 37120                           tblptru	equ	0xFF8
 37121                           tblptrh	equ	0xFF7
 37122                           tblptrl	equ	0xFF6
 37123                           tablat	equ	0xFF5
 37124                           prodh	equ	0xFF4
 37125                           prodl	equ	0xFF3
 37126                           intcon	equ	0xFF2
 37127                           indf0	equ	0xFEF
 37128                           postinc0	equ	0xFEE
 37129                           fsr0h	equ	0xFEA
 37130                           fsr0l	equ	0xFE9
 37131                           wreg	equ	0xFE8
 37132                           indf1	equ	0xFE7
 37133                           postinc1	equ	0xFE6
 37134                           postdec1	equ	0xFE5
 37135                           fsr1h	equ	0xFE2
 37136                           fsr1l	equ	0xFE1
 37137                           indf2	equ	0xFDF
 37138                           postinc2	equ	0xFDE
 37139                           postdec2	equ	0xFDD
 37140                           fsr2h	equ	0xFDA
 37141                           fsr2l	equ	0xFD9
 37142                           status	equ	0xFD8
 37143                           
 37144 ;; *************** function _swaps *****************
 37145 ;; Defined at:
 37146 ;;		line 1071 in file "../tcpip/helpers.c"
 37147 ;; Parameters:    Size  Location     Type
 37148 ;;  v               2    0[BANK1 ] unsigned int 
 37149 ;; Auto vars:     Size  Location     Type
 37150 ;;  t               2    3[BANK1 ] struct .
 37151 ;;  b               1    2[BANK1 ] unsigned char 
 37152 ;; Return value:  Size  Location     Type
 37153 ;;                  2    0[BANK1 ] unsigned int 
 37154 ;; Registers used:
 37155 ;;		None
 37156 ;; Tracked objects:
 37157 ;;		On entry : 0/0
 37158 ;;		On exit  : 0/0
 37159 ;;		Unchanged: 0/0
 37160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37161 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37162 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37164 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37165 ;;Total ram usage:        5 bytes
 37166 ;; Hardware stack levels used:    1
 37167 ;; Hardware stack levels required when called:   10
 37168 ;; This function calls:
 37169 ;;		Nothing
 37170 ;; This function is called by:
 37171 ;;		_MACGetHeader
 37172 ;;		_SwapARPPacket
 37173 ;;		_SwapIPHeader
 37174 ;;		_TCPProcess
 37175 ;;		_SendTCP
 37176 ;;		_SwapTCPHeader
 37177 ;; This function uses a non-reentrant model
 37178 ;;
 37179                           
 37180                           	psect	text75
 37181  01B8F2                     __ptext75:
 37182                           	opt stack 0
 37183  01B8F2                     _swaps:
 37184                           	opt stack 16
 37185                           
 37186                           ;helpers.c: 1073: TCPIP_UINT16_VAL t;
 37187                           ;helpers.c: 1074: uint8_t b;
 37188                           ;helpers.c: 1076: t.Val = v;
 37189                           
 37190                           ; BSR set to: 1
 37191                           ;incstack = 0
 37192  01B8F2  C100  F103         	movff	swaps@v,swaps@t
 37193  01B8F6  C101  F104         	movff	swaps@v+1,swaps@t+1
 37194                           
 37195                           ;helpers.c: 1077: b = t.v[1];
 37196  01B8FA  C104  F102         	movff	swaps@t+1,swaps@b
 37197                           
 37198                           ;helpers.c: 1078: t.v[1] = t.v[0];
 37199  01B8FE  C103  F104         	movff	swaps@t,swaps@t+1
 37200                           
 37201                           ;helpers.c: 1079: t.v[0] = b;
 37202  01B902  C102  F103         	movff	swaps@b,swaps@t
 37203                           
 37204                           ;helpers.c: 1081: return t.Val;
 37205  01B906  C103  F100         	movff	swaps@t,?_swaps
 37206  01B90A  C104  F101         	movff	swaps@t+1,?_swaps+1
 37207  01B90E  0012               	return	
 37208  01B910                     __end_of_swaps:
 37209                           	opt stack 0
 37210                           tblptru	equ	0xFF8
 37211                           tblptrh	equ	0xFF7
 37212                           tblptrl	equ	0xFF6
 37213                           tablat	equ	0xFF5
 37214                           prodh	equ	0xFF4
 37215                           prodl	equ	0xFF3
 37216                           intcon	equ	0xFF2
 37217                           indf0	equ	0xFEF
 37218                           postinc0	equ	0xFEE
 37219                           fsr0h	equ	0xFEA
 37220                           fsr0l	equ	0xFE9
 37221                           wreg	equ	0xFE8
 37222                           indf1	equ	0xFE7
 37223                           postinc1	equ	0xFE6
 37224                           postdec1	equ	0xFE5
 37225                           fsr1h	equ	0xFE2
 37226                           fsr1l	equ	0xFE1
 37227                           indf2	equ	0xFDF
 37228                           postinc2	equ	0xFDE
 37229                           postdec2	equ	0xFDD
 37230                           fsr2h	equ	0xFDA
 37231                           fsr2l	equ	0xFD9
 37232                           status	equ	0xFD8
 37233                           
 37234 ;; *************** function _MACPutHeader *****************
 37235 ;; Defined at:
 37236 ;;		line 554 in file "../tcpip/ETH97J60.c"
 37237 ;; Parameters:    Size  Location     Type
 37238 ;;  remote          2    4[BANK1 ] PTR struct .
 37239 ;;		 -> MyTCB.remote(10), MyTCB(39), ARPResolve@packet(28), ARPProcess@packet(28), 
 37240 ;;		 -> ARPSendPkt@packet(28), 
 37241 ;;  type            1    6[BANK1 ] unsigned char 
 37242 ;;  dataLen         2    7[BANK1 ] unsigned int 
 37243 ;; Auto vars:     Size  Location     Type
 37244 ;;		None
 37245 ;; Return value:  Size  Location     Type
 37246 ;;		None               void
 37247 ;; Registers used:
 37248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37249 ;; Tracked objects:
 37250 ;;		On entry : 0/0
 37251 ;;		On exit  : 0/0
 37252 ;;		Unchanged: 0/0
 37253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37254 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37255 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37257 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37258 ;;Total ram usage:        7 bytes
 37259 ;; Hardware stack levels used:    1
 37260 ;; Hardware stack levels required when called:   11
 37261 ;; This function calls:
 37262 ;;		_MACPut
 37263 ;;		_MACPutArray
 37264 ;; This function is called by:
 37265 ;;		_ARPPut
 37266 ;;		_IPPutHeader
 37267 ;; This function uses a non-reentrant model
 37268 ;;
 37269                           
 37270                           	psect	text76
 37271  01A722                     __ptext76:
 37272                           	opt stack 0
 37273  01A722                     _MACPutHeader:
 37274                           	opt stack 14
 37275                           
 37276                           ;ETH97J60.c: 557: EWRPT = ((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul) + 1;
 37277                           
 37278                           ;incstack = 0
 37279  01A722  0E12               	movlw	18
 37280  01A724  010E               	movlb	14	; () banked
 37281  01A726  6FE3               	movwf	227,b	;volatile
 37282  01A728  0EA7               	movlw	167
 37283  01A72A  010E               	movlb	14	; () banked
 37284  01A72C  6FE2               	movwf	226,b	;volatile
 37285                           
 37286                           ; BSR set to: 14
 37287                           ;ETH97J60.c: 560: dataLen += (WORD)sizeof(ETHER_HEADER) + ((8*1024ul) - (1ul+1518ul+7ul)
      +                           - (1892ul) - 0ul - 0ul);
 37288  01A72E  0101               	movlb	1	; () banked
 37289  01A730  0EB4               	movlw	180
 37290  01A732  0101               	movlb	1	; () banked
 37291  01A734  2707               	addwf	MACPutHeader@dataLen& (0+255),f,b
 37292  01A736  0E12               	movlw	18
 37293  01A738  0101               	movlb	1	; () banked
 37294  01A73A  2308               	addwfc	(MACPutHeader@dataLen+1)& (0+255),f,b
 37295                           
 37296                           ; BSR set to: 1
 37297                           ;ETH97J60.c: 563: ETXND = dataLen;
 37298  01A73C  C107  FEE6         	movff	MACPutHeader@dataLen,3814	;volatile
 37299  01A740  C108  FEE7         	movff	MACPutHeader@dataLen+1,3815	;volatile
 37300                           
 37301                           ; BSR set to: 1
 37302                           ;ETH97J60.c: 567: MACPutArray((BYTE*)remote, sizeof(*remote));
 37303  01A744  0101               	movlb	1	; () banked
 37304  01A746  C105  F101         	movff	MACPutHeader@remote+1,MACPutArray@val+1
 37305  01A74A  0101               	movlb	1	; () banked
 37306  01A74C  C104  F100         	movff	MACPutHeader@remote,MACPutArray@val
 37307  01A750  0E00               	movlw	0
 37308  01A752  0101               	movlb	1	; () banked
 37309  01A754  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 37310  01A756  0E06               	movlw	6
 37311  01A758  0101               	movlb	1	; () banked
 37312  01A75A  6F02               	movwf	MACPutArray@len& (0+255),b
 37313  01A75C  ECE4  F0FF         	call	_MACPutArray	;wreg free
 37314                           
 37315                           ;ETH97J60.c: 570: MACPutArray((BYTE*)&AppConfig.MyMACAddr, sizeof(AppConfig.MyMACAddr));
 37316  01A760  0102               	movlb	2	; () banked
 37317  01A762  0E02               	movlw	high (_AppConfig+45)
 37318  01A764  0101               	movlb	1	; () banked
 37319  01A766  6F01               	movwf	(MACPutArray@val+1)& (0+255),b
 37320  01A768  0102               	movlb	2	; () banked
 37321  01A76A  0E69               	movlw	low (_AppConfig+45)
 37322  01A76C  0101               	movlb	1	; () banked
 37323  01A76E  6F00               	movwf	MACPutArray@val& (0+255),b
 37324  01A770  0E00               	movlw	0
 37325  01A772  0101               	movlb	1	; () banked
 37326  01A774  6F03               	movwf	(MACPutArray@len+1)& (0+255),b
 37327  01A776  0E06               	movlw	6
 37328  01A778  0101               	movlb	1	; () banked
 37329  01A77A  6F02               	movwf	MACPutArray@len& (0+255),b
 37330  01A77C  ECE4  F0FF         	call	_MACPutArray	;wreg free
 37331                           
 37332                           ;ETH97J60.c: 573: MACPut(0x08);
 37333  01A780  0E08               	movlw	8
 37334  01A782  EC63  F0DD         	call	_MACPut
 37335                           
 37336                           ;ETH97J60.c: 574: MACPut((type == (0x00u)) ? (0x00u) : (0x06u));
 37337  01A786  0101               	movlb	1	; () banked
 37338  01A788  5106               	movf	MACPutHeader@type& (0+255),w,b
 37339  01A78A  B4D8               	btfsc	status,2,c
 37340  01A78C  D005               	goto	l10518
 37341                           
 37342                           ; BSR set to: 1
 37343  01A78E  0E00               	movlw	0
 37344  01A790  0101               	movlb	1	; () banked
 37345  01A792  6F0A               	movwf	(_MACPutHeader$1874+1)& (0+255),b
 37346  01A794  0E06               	movlw	6
 37347  01A796  D004               	goto	L40
 37348  01A798                     l10518:
 37349                           
 37350                           ; BSR set to: 1
 37351  01A798  0E00               	movlw	0
 37352  01A79A  0101               	movlb	1	; () banked
 37353  01A79C  6F0A               	movwf	(_MACPutHeader$1874+1)& (0+255),b
 37354  01A79E  0E00               	movlw	0
 37355  01A7A0                     L40:
 37356  01A7A0  0101               	movlb	1	; () banked
 37357  01A7A2  6F09               	movwf	_MACPutHeader$1874& (0+255),b
 37358                           
 37359                           ; BSR set to: 1
 37360                           
 37361                           ; BSR set to: 1
 37362  01A7A4  0101               	movlb	1	; () banked
 37363  01A7A6  5109               	movf	_MACPutHeader$1874& (0+255),w,b
 37364  01A7A8  EC63  F0DD         	call	_MACPut
 37365  01A7AC  0012               	return	
 37366  01A7AE                     __end_of_MACPutHeader:
 37367                           	opt stack 0
 37368                           tblptru	equ	0xFF8
 37369                           tblptrh	equ	0xFF7
 37370                           tblptrl	equ	0xFF6
 37371                           tablat	equ	0xFF5
 37372                           prodh	equ	0xFF4
 37373                           prodl	equ	0xFF3
 37374                           intcon	equ	0xFF2
 37375                           indf0	equ	0xFEF
 37376                           postinc0	equ	0xFEE
 37377                           fsr0h	equ	0xFEA
 37378                           fsr0l	equ	0xFE9
 37379                           wreg	equ	0xFE8
 37380                           indf1	equ	0xFE7
 37381                           postinc1	equ	0xFE6
 37382                           postdec1	equ	0xFE5
 37383                           fsr1h	equ	0xFE2
 37384                           fsr1l	equ	0xFE1
 37385                           indf2	equ	0xFDF
 37386                           postinc2	equ	0xFDE
 37387                           postdec2	equ	0xFDD
 37388                           fsr2h	equ	0xFDA
 37389                           fsr2l	equ	0xFD9
 37390                           status	equ	0xFD8
 37391                           
 37392 ;; *************** function _MACIsTxReady *****************
 37393 ;; Defined at:
 37394 ;;		line 285 in file "../tcpip/ETH97J60.c"
 37395 ;; Parameters:    Size  Location     Type
 37396 ;;		None
 37397 ;; Auto vars:     Size  Location     Type
 37398 ;;		None
 37399 ;; Return value:  Size  Location     Type
 37400 ;;                  1    wreg      unsigned char 
 37401 ;; Registers used:
 37402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37403 ;; Tracked objects:
 37404 ;;		On entry : 0/0
 37405 ;;		On exit  : 0/0
 37406 ;;		Unchanged: 0/0
 37407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37410 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37411 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37412 ;;Total ram usage:        6 bytes
 37413 ;; Hardware stack levels used:    1
 37414 ;; Hardware stack levels required when called:   13
 37415 ;; This function calls:
 37416 ;;		_MACFlush
 37417 ;;		_TickGet
 37418 ;; This function is called by:
 37419 ;;		_ARPPut
 37420 ;;		_TCPTick
 37421 ;;		_SendTCP
 37422 ;; This function uses a non-reentrant model
 37423 ;;
 37424                           
 37425                           	psect	text77
 37426  01AF7C                     __ptext77:
 37427                           	opt stack 0
 37428  01AF7C                     _MACIsTxReady:
 37429                           	opt stack 13
 37430                           
 37431                           ;ETH97J60.c: 287: if(!ECON1bits.TXRTS)
 37432                           
 37433                           ;incstack = 0
 37434  01AF7C  B6D2               	btfsc	4050,3,c	;volatile
 37435  01AF7E  D002               	goto	l11078
 37436                           
 37437                           ;ETH97J60.c: 288: return TRUE;
 37438  01AF80  0E01               	movlw	1
 37439  01AF82  0012               	return	
 37440  01AF84                     l11078:
 37441                           
 37442                           ;ETH97J60.c: 292: if((WORD)TickGet() - wTXWatchdog >= (3ull*(((((40000000ul)/4)+128ull)/
      +                          256ull))/1000ull))
 37443  01AF84  0100               	movlb	0	; () banked
 37444  01AF86  C0EB  F10D         	movff	_wTXWatchdog,??_MACIsTxReady
 37445  01AF8A  0100               	movlb	0	; () banked
 37446  01AF8C  C0EC  F10E         	movff	_wTXWatchdog+1,??_MACIsTxReady+1
 37447  01AF90  0101               	movlb	1	; () banked
 37448  01AF92  1F0D               	comf	??_MACIsTxReady& (0+255),f,b
 37449  01AF94  1F0E               	comf	(??_MACIsTxReady+1)& (0+255),f,b
 37450  01AF96  4B0D               	infsnz	??_MACIsTxReady& (0+255),f,b
 37451  01AF98  2B0E               	incf	(??_MACIsTxReady+1)& (0+255),f,b
 37452  01AF9A  EC94  F0DB         	call	_TickGet	;wreg free
 37453  01AF9E  C100  F10F         	movff	?_TickGet,??_MACIsTxReady+2
 37454  01AFA2  C101  F110         	movff	?_TickGet+1,??_MACIsTxReady+3
 37455  01AFA6  C102  F111         	movff	?_TickGet+2,??_MACIsTxReady+4
 37456  01AFAA  C103  F112         	movff	?_TickGet+3,??_MACIsTxReady+5
 37457  01AFAE  0101               	movlb	1	; () banked
 37458  01AFB0  510D               	movf	??_MACIsTxReady& (0+255),w,b
 37459  01AFB2  0101               	movlb	1	; () banked
 37460  01AFB4  270F               	addwf	(??_MACIsTxReady+2)& (0+255),f,b
 37461  01AFB6  0101               	movlb	1	; () banked
 37462  01AFB8  510E               	movf	(??_MACIsTxReady+1)& (0+255),w,b
 37463  01AFBA  0101               	movlb	1	; () banked
 37464  01AFBC  2310               	addwfc	(??_MACIsTxReady+3)& (0+255),f,b
 37465  01AFBE  0E75               	movlw	117
 37466  01AFC0  0101               	movlb	1	; () banked
 37467  01AFC2  5D0F               	subwf	(??_MACIsTxReady+2)& (0+255),w,b
 37468  01AFC4  0E00               	movlw	0
 37469  01AFC6  5910               	subwfb	(??_MACIsTxReady+3)& (0+255),w,b
 37470  01AFC8  A0D8               	btfss	status,0,c
 37471  01AFCA  D003               	goto	l11084
 37472                           
 37473                           ; BSR set to: 1
 37474                           ;ETH97J60.c: 293: {
 37475                           ;ETH97J60.c: 294: ECON1bits.TXRTS = 0;
 37476  01AFCC  96D2               	bcf	4050,3,c	;volatile
 37477                           
 37478                           ; BSR set to: 1
 37479                           ;ETH97J60.c: 295: MACFlush();
 37480  01AFCE  ECDD  F0D9         	call	_MACFlush	;wreg free
 37481  01AFD2                     l11084:
 37482                           
 37483                           ;ETH97J60.c: 296: }
 37484                           ;ETH97J60.c: 298: return FALSE;
 37485  01AFD2  0E00               	movlw	0
 37486  01AFD4  0012               	return	
 37487  01AFD6                     __end_of_MACIsTxReady:
 37488                           	opt stack 0
 37489                           tblptru	equ	0xFF8
 37490                           tblptrh	equ	0xFF7
 37491                           tblptrl	equ	0xFF6
 37492                           tablat	equ	0xFF5
 37493                           prodh	equ	0xFF4
 37494                           prodl	equ	0xFF3
 37495                           intcon	equ	0xFF2
 37496                           indf0	equ	0xFEF
 37497                           postinc0	equ	0xFEE
 37498                           fsr0h	equ	0xFEA
 37499                           fsr0l	equ	0xFE9
 37500                           wreg	equ	0xFE8
 37501                           indf1	equ	0xFE7
 37502                           postinc1	equ	0xFE6
 37503                           postdec1	equ	0xFE5
 37504                           fsr1h	equ	0xFE2
 37505                           fsr1l	equ	0xFE1
 37506                           indf2	equ	0xFDF
 37507                           postinc2	equ	0xFDE
 37508                           postdec2	equ	0xFDD
 37509                           fsr2h	equ	0xFDA
 37510                           fsr2l	equ	0xFD9
 37511                           status	equ	0xFD8
 37512                           
 37513 ;; *************** function _MACFlush *****************
 37514 ;; Defined at:
 37515 ;;		line 600 in file "../tcpip/ETH97J60.c"
 37516 ;; Parameters:    Size  Location     Type
 37517 ;;		None
 37518 ;; Auto vars:     Size  Location     Type
 37519 ;;  i               1   12[BANK1 ] volatile unsigned char 
 37520 ;; Return value:  Size  Location     Type
 37521 ;;		None               void
 37522 ;; Registers used:
 37523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37524 ;; Tracked objects:
 37525 ;;		On entry : 0/0
 37526 ;;		On exit  : 0/0
 37527 ;;		Unchanged: 0/0
 37528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37530 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37531 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37532 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37533 ;;Total ram usage:        5 bytes
 37534 ;; Hardware stack levels used:    1
 37535 ;; Hardware stack levels required when called:   12
 37536 ;; This function calls:
 37537 ;;		_TickGet
 37538 ;; This function is called by:
 37539 ;;		_MACIsTxReady
 37540 ;;		_ARPPut
 37541 ;;		_SendTCP
 37542 ;; This function uses a non-reentrant model
 37543 ;;
 37544                           
 37545                           	psect	text78
 37546  01B3BA                     __ptext78:
 37547                           	opt stack 0
 37548  01B3BA                     _MACFlush:
 37549                           	opt stack 13
 37550                           
 37551                           ;ETH97J60.c: 605: ECON1bits.TXRST = 1;
 37552                           
 37553                           ;incstack = 0
 37554  01B3BA  8ED2               	bsf	4050,7,c	;volatile
 37555                           
 37556                           ;ETH97J60.c: 606: ECON1bits.TXRST = 0;
 37557  01B3BC  9ED2               	bcf	4050,7,c	;volatile
 37558                           
 37559                           ;ETH97J60.c: 610: {volatile BYTE i = 8; while(i--);}
 37560  01B3BE  0E08               	movlw	8
 37561  01B3C0  0101               	movlb	1	; () banked
 37562  01B3C2  6F0C               	movwf	MACFlush@i& (0+255),b	;volatile
 37563  01B3C4                     l10498:
 37564                           
 37565                           ; BSR set to: 1
 37566  01B3C4  0101               	movlb	1	; () banked
 37567  01B3C6  070C               	decf	MACFlush@i& (0+255),f,b	;volatile
 37568  01B3C8  0101               	movlb	1	; () banked
 37569  01B3CA  290C               	incf	MACFlush@i& (0+255),w,b	;volatile
 37570  01B3CC  A4D8               	btfss	status,2,c
 37571  01B3CE  D7FA               	goto	l10498
 37572                           
 37573                           ; BSR set to: 1
 37574                           ;ETH97J60.c: 611: EIRbits.TXERIF = 0;
 37575  01B3D0  9260               	bcf	3936,1,c	;volatile
 37576                           
 37577                           ;ETH97J60.c: 644: ECON1bits.TXRTS = 1;
 37578  01B3D2  86D2               	bsf	4050,3,c	;volatile
 37579                           
 37580                           ; BSR set to: 1
 37581                           ;ETH97J60.c: 645: wTXWatchdog = TickGet();
 37582  01B3D4  EC94  F0DB         	call	_TickGet	;wreg free
 37583  01B3D8  C100  F108         	movff	?_TickGet,??_MACFlush
 37584  01B3DC  C101  F109         	movff	?_TickGet+1,??_MACFlush+1
 37585  01B3E0  C102  F10A         	movff	?_TickGet+2,??_MACFlush+2
 37586  01B3E4  C103  F10B         	movff	?_TickGet+3,??_MACFlush+3
 37587  01B3E8  C108  F0EB         	movff	??_MACFlush,_wTXWatchdog
 37588  01B3EC  C109  F0EC         	movff	??_MACFlush+1,_wTXWatchdog+1
 37589  01B3F0  0012               	return	
 37590  01B3F2                     __end_of_MACFlush:
 37591                           	opt stack 0
 37592                           tblptru	equ	0xFF8
 37593                           tblptrh	equ	0xFF7
 37594                           tblptrl	equ	0xFF6
 37595                           tablat	equ	0xFF5
 37596                           prodh	equ	0xFF4
 37597                           prodl	equ	0xFF3
 37598                           intcon	equ	0xFF2
 37599                           indf0	equ	0xFEF
 37600                           postinc0	equ	0xFEE
 37601                           fsr0h	equ	0xFEA
 37602                           fsr0l	equ	0xFE9
 37603                           wreg	equ	0xFE8
 37604                           indf1	equ	0xFE7
 37605                           postinc1	equ	0xFE6
 37606                           postdec1	equ	0xFE5
 37607                           fsr1h	equ	0xFE2
 37608                           fsr1l	equ	0xFE1
 37609                           indf2	equ	0xFDF
 37610                           postinc2	equ	0xFDE
 37611                           postdec2	equ	0xFDD
 37612                           fsr2h	equ	0xFDA
 37613                           fsr2l	equ	0xFD9
 37614                           status	equ	0xFD8
 37615                           
 37616 ;; *************** function _TickGet *****************
 37617 ;; Defined at:
 37618 ;;		line 254 in file "../tcpip/tick.c"
 37619 ;; Parameters:    Size  Location     Type
 37620 ;;		None
 37621 ;; Auto vars:     Size  Location     Type
 37622 ;;  dw              4    4[BANK1 ] unsigned long 
 37623 ;; Return value:  Size  Location     Type
 37624 ;;                  4    0[BANK1 ] unsigned long 
 37625 ;; Registers used:
 37626 ;;		fsr2l, fsr2h, cstack
 37627 ;; Tracked objects:
 37628 ;;		On entry : 0/0
 37629 ;;		On exit  : 0/0
 37630 ;;		Unchanged: 0/0
 37631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37632 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37633 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37635 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37636 ;;Total ram usage:        8 bytes
 37637 ;; Hardware stack levels used:    1
 37638 ;; Hardware stack levels required when called:   11
 37639 ;; This function calls:
 37640 ;;		_GetTickCopy
 37641 ;; This function is called by:
 37642 ;;		_MACIsTxReady
 37643 ;;		_MACFlush
 37644 ;;		_TCPOpen
 37645 ;;		_TCPTick
 37646 ;;		_SendTCP
 37647 ;;		_HandleTCPSeg
 37648 ;; This function uses a non-reentrant model
 37649 ;;
 37650                           
 37651                           	psect	text79
 37652  01B728                     __ptext79:
 37653                           	opt stack 0
 37654  01B728                     _TickGet:
 37655                           	opt stack 15
 37656                           
 37657                           ;tick.c: 256: uint32_t dw;
 37658                           ;tick.c: 258: GetTickCopy();
 37659                           
 37660                           ;incstack = 0
 37661  01B728  EC4B  F0DA         	call	_GetTickCopy	;wreg free
 37662                           
 37663                           ;tick.c: 259: ((uint8_t*)&dw)[0] = vTickReading[0];
 37664  01B72C  C0C7  F104         	movff	_vTickReading,TickGet@dw	;volatile
 37665                           
 37666                           ;tick.c: 260: ((uint8_t*)&dw)[1] = vTickReading[1];
 37667  01B730  C0C8  F105         	movff	_vTickReading+1,TickGet@dw+1	;volatile
 37668                           
 37669                           ;tick.c: 261: ((uint8_t*)&dw)[2] = vTickReading[2];
 37670  01B734  C0C9  F106         	movff	_vTickReading+2,TickGet@dw+2	;volatile
 37671                           
 37672                           ;tick.c: 262: ((uint8_t*)&dw)[3] = vTickReading[3];
 37673  01B738  C0CA  F107         	movff	_vTickReading+3,TickGet@dw+3	;volatile
 37674                           
 37675                           ;tick.c: 263: return dw;
 37676  01B73C  C104  F100         	movff	TickGet@dw,?_TickGet
 37677  01B740  C105  F101         	movff	TickGet@dw+1,?_TickGet+1
 37678  01B744  C106  F102         	movff	TickGet@dw+2,?_TickGet+2
 37679  01B748  C107  F103         	movff	TickGet@dw+3,?_TickGet+3
 37680  01B74C  0012               	return	
 37681  01B74E                     __end_of_TickGet:
 37682                           	opt stack 0
 37683                           tblptru	equ	0xFF8
 37684                           tblptrh	equ	0xFF7
 37685                           tblptrl	equ	0xFF6
 37686                           tablat	equ	0xFF5
 37687                           prodh	equ	0xFF4
 37688                           prodl	equ	0xFF3
 37689                           intcon	equ	0xFF2
 37690                           indf0	equ	0xFEF
 37691                           postinc0	equ	0xFEE
 37692                           fsr0h	equ	0xFEA
 37693                           fsr0l	equ	0xFE9
 37694                           wreg	equ	0xFE8
 37695                           indf1	equ	0xFE7
 37696                           postinc1	equ	0xFE6
 37697                           postdec1	equ	0xFE5
 37698                           fsr1h	equ	0xFE2
 37699                           fsr1l	equ	0xFE1
 37700                           indf2	equ	0xFDF
 37701                           postinc2	equ	0xFDE
 37702                           postdec2	equ	0xFDD
 37703                           fsr2h	equ	0xFDA
 37704                           fsr2l	equ	0xFD9
 37705                           status	equ	0xFD8
 37706                           
 37707 ;; *************** function _GetTickCopy *****************
 37708 ;; Defined at:
 37709 ;;		line 140 in file "../tcpip/tick.c"
 37710 ;; Parameters:    Size  Location     Type
 37711 ;;		None
 37712 ;; Auto vars:     Size  Location     Type
 37713 ;;		None
 37714 ;; Return value:  Size  Location     Type
 37715 ;;		None               void
 37716 ;; Registers used:
 37717 ;;		fsr2l, fsr2h
 37718 ;; Tracked objects:
 37719 ;;		On entry : 0/0
 37720 ;;		On exit  : 0/0
 37721 ;;		Unchanged: 0/0
 37722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37727 ;;Total ram usage:        0 bytes
 37728 ;; Hardware stack levels used:    1
 37729 ;; Hardware stack levels required when called:   10
 37730 ;; This function calls:
 37731 ;;		Nothing
 37732 ;; This function is called by:
 37733 ;;		_TickGet
 37734 ;;		_TickGetDiv256
 37735 ;;		_TickGetDiv64K
 37736 ;; This function uses a non-reentrant model
 37737 ;;
 37738                           
 37739                           	psect	text80
 37740  01B496                     __ptext80:
 37741                           	opt stack 0
 37742  01B496                     _GetTickCopy:
 37743                           	opt stack 17
 37744  01B496                     l1506:
 37745                           
 37746                           ;tick.c: 146: {
 37747                           ;tick.c: 147: INTCONbits.TMR0IE = 1;
 37748  01B496  8AF2               	bsf	intcon,5,c	;volatile
 37749                           
 37750                           ;tick.c: 148: __nop();
 37751  01B498  F000               	nop	
 37752                           
 37753                           ;tick.c: 149: INTCONbits.TMR0IE = 0;
 37754  01B49A  9AF2               	bcf	intcon,5,c	;volatile
 37755                           
 37756                           ;tick.c: 150: vTickReading[0] = TMR0L;
 37757  01B49C  CFD6 F0C7          	movff	4054,_vTickReading	;volatile
 37758                           
 37759                           ;tick.c: 151: vTickReading[1] = TMR0H;
 37760  01B4A0  CFD7 F0C8          	movff	4055,_vTickReading+1	;volatile
 37761                           
 37762                           ;tick.c: 152: *((uint32_t*)&vTickReading[2]) = dwInternalTicks;
 37763  01B4A4  0100               	movlb	0	; () banked
 37764  01B4A6  EE20  F0C9         	lfsr	2,_vTickReading+2	;volatile
 37765  01B4AA  0100               	movlb	0	; () banked
 37766  01B4AC  C0D1  FFDE         	movff	_dwInternalTicks,postinc2	;volatile
 37767  01B4B0  0100               	movlb	0	; () banked
 37768  01B4B2  C0D2  FFDE         	movff	_dwInternalTicks+1,postinc2	;volatile
 37769  01B4B6  0100               	movlb	0	; () banked
 37770  01B4B8  C0D3  FFDE         	movff	_dwInternalTicks+2,postinc2	;volatile
 37771  01B4BC  0100               	movlb	0	; () banked
 37772  01B4BE  C0D4  FFDE         	movff	_dwInternalTicks+3,postinc2	;volatile
 37773                           
 37774                           ; BSR set to: 0
 37775                           ;tick.c: 153: } while(INTCONbits.TMR0IF);
 37776  01B4C2  B4F2               	btfsc	intcon,2,c	;volatile
 37777  01B4C4  D7E8               	goto	l1506
 37778                           
 37779                           ; BSR set to: 0
 37780                           ;tick.c: 154: INTCONbits.TMR0IE = 1;
 37781  01B4C6  8AF2               	bsf	intcon,5,c	;volatile
 37782                           
 37783                           ; BSR set to: 0
 37784  01B4C8  0012               	return	
 37785  01B4CA                     __end_of_GetTickCopy:
 37786                           	opt stack 0
 37787                           tblptru	equ	0xFF8
 37788                           tblptrh	equ	0xFF7
 37789                           tblptrl	equ	0xFF6
 37790                           tablat	equ	0xFF5
 37791                           prodh	equ	0xFF4
 37792                           prodl	equ	0xFF3
 37793                           intcon	equ	0xFF2
 37794                           indf0	equ	0xFEF
 37795                           postinc0	equ	0xFEE
 37796                           fsr0h	equ	0xFEA
 37797                           fsr0l	equ	0xFE9
 37798                           wreg	equ	0xFE8
 37799                           indf1	equ	0xFE7
 37800                           postinc1	equ	0xFE6
 37801                           postdec1	equ	0xFE5
 37802                           fsr1h	equ	0xFE2
 37803                           fsr1l	equ	0xFE1
 37804                           indf2	equ	0xFDF
 37805                           postinc2	equ	0xFDE
 37806                           postdec2	equ	0xFDD
 37807                           fsr2h	equ	0xFDA
 37808                           fsr2l	equ	0xFD9
 37809                           status	equ	0xFD8
 37810                           
 37811 ;; *************** function _RestoreFromFlash *****************
 37812 ;; Defined at:
 37813 ;;		line 35 in file "Persistence.c"
 37814 ;; Parameters:    Size  Location     Type
 37815 ;;		None
 37816 ;; Auto vars:     Size  Location     Type
 37817 ;;  chSum           1   28[BANK1 ] unsigned char 
 37818 ;;  addr            4   29[BANK1 ] unsigned long 
 37819 ;;  addrStop        4   24[BANK1 ] unsigned long 
 37820 ;; Return value:  Size  Location     Type
 37821 ;;		None               void
 37822 ;; Registers used:
 37823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37824 ;; Tracked objects:
 37825 ;;		On entry : 0/0
 37826 ;;		On exit  : 0/0
 37827 ;;		Unchanged: 0/0
 37828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 37829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37830 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37831 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37832 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37833 ;;Total ram usage:       17 bytes
 37834 ;; Hardware stack levels used:    1
 37835 ;; Hardware stack levels required when called:   11
 37836 ;; This function calls:
 37837 ;;		_GetCheckSum
 37838 ;;		_ReadFlash
 37839 ;;		_memset
 37840 ;; This function is called by:
 37841 ;;		_main
 37842 ;; This function uses a non-reentrant model
 37843 ;;
 37844                           
 37845                           	psect	text81
 37846  016DC8                     __ptext81:
 37847                           	opt stack 0
 37848  016DC8                     _RestoreFromFlash:
 37849                           	opt stack 19
 37850                           
 37851                           ;Persistence.c: 37: unsigned long addr = SETTINGS_ADDR;
 37852                           
 37853                           ; BSR set to: 0
 37854                           ;incstack = 0
 37855  016DC8  0E07               	movlw	low _SETTINGS_ADDR
 37856  016DCA  6EF6               	movwf	tblptrl,c
 37857  016DCC                     	if	1	;There is more than 1 active tblptr byte
 37858  016DCC  0EFF               	movlw	high _SETTINGS_ADDR
 37859  016DCE  6EF7               	movwf	tblptrh,c
 37860  016DD0                     	endif
 37861  016DD0                     	if	1	;There are 3 active tblptr bytes
 37862  016DD0  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 37863  016DD2  6EF8               	movwf	tblptru,c
 37864  016DD4                     	endif
 37865  016DD4  0009               	tblrd		*+
 37866  016DD6  0101               	movlb	1	; () banked
 37867  016DD8  CFF5 F11D          	movff	tablat,RestoreFromFlash@addr
 37868  016DDC  0009               	tblrd		*+
 37869  016DDE  0101               	movlb	1	; () banked
 37870  016DE0  CFF5 F11E          	movff	tablat,RestoreFromFlash@addr+1
 37871  016DE4  0009               	tblrd		*+
 37872  016DE6  0101               	movlb	1	; () banked
 37873  016DE8  CFF5 F11F          	movff	tablat,RestoreFromFlash@addr+2
 37874  016DEC  000A               	tblrd		*-
 37875  016DEE  0101               	movlb	1	; () banked
 37876  016DF0  CFF5 F120          	movff	tablat,RestoreFromFlash@addr+3
 37877                           
 37878                           ; BSR set to: 1
 37879                           ;Persistence.c: 38: unsigned long addrStop = SETTINGS_ADDR + SETTINGS_LEN;
 37880  016DF4  0E0B               	movlw	low _SETTINGS_LEN
 37881  016DF6  6EF6               	movwf	tblptrl,c
 37882  016DF8                     	if	1	;There is more than 1 active tblptr byte
 37883  016DF8  0EFF               	movlw	high _SETTINGS_LEN
 37884  016DFA  6EF7               	movwf	tblptrh,c
 37885  016DFC                     	endif
 37886  016DFC                     	if	1	;There are 3 active tblptr bytes
 37887  016DFC  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 37888  016DFE  6EF8               	movwf	tblptru,c
 37889  016E00                     	endif
 37890  016E00  0009               	tblrd		*+
 37891  016E02  CFF5 F110          	movff	tablat,??_RestoreFromFlash
 37892  016E06  0009               	tblrd		*+
 37893  016E08  CFF5 F111          	movff	tablat,??_RestoreFromFlash+1
 37894  016E0C  0009               	tblrd		*+
 37895  016E0E  CFF5 F112          	movff	tablat,??_RestoreFromFlash+2
 37896  016E12  0009               	tblrd		*+
 37897  016E14  CFF5 F113          	movff	tablat,??_RestoreFromFlash+3
 37898  016E18  0E07               	movlw	low _SETTINGS_ADDR
 37899  016E1A  6EF6               	movwf	tblptrl,c
 37900  016E1C                     	if	1	;There is more than 1 active tblptr byte
 37901  016E1C  0EFF               	movlw	high _SETTINGS_ADDR
 37902  016E1E  6EF7               	movwf	tblptrh,c
 37903  016E20                     	endif
 37904  016E20                     	if	1	;There are 3 active tblptr bytes
 37905  016E20  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 37906  016E22  6EF8               	movwf	tblptru,c
 37907  016E24                     	endif
 37908  016E24  0009               	tblrd		*+
 37909  016E26  CFF5 F114          	movff	tablat,??_RestoreFromFlash+4
 37910  016E2A  0009               	tblrd		*+
 37911  016E2C  CFF5 F115          	movff	tablat,??_RestoreFromFlash+5
 37912  016E30  0009               	tblrd		*+
 37913  016E32  CFF5 F116          	movff	tablat,??_RestoreFromFlash+6
 37914  016E36  0009               	tblrd		*+
 37915  016E38  CFF5 F117          	movff	tablat,??_RestoreFromFlash+7
 37916  016E3C  0101               	movlb	1	; () banked
 37917  016E3E  5110               	movf	??_RestoreFromFlash& (0+255),w,b
 37918  016E40  0101               	movlb	1	; () banked
 37919  016E42  2514               	addwf	(??_RestoreFromFlash+4)& (0+255),w,b
 37920  016E44  0101               	movlb	1	; () banked
 37921  016E46  6F18               	movwf	RestoreFromFlash@addrStop& (0+255),b
 37922  016E48  0101               	movlb	1	; () banked
 37923  016E4A  5111               	movf	(??_RestoreFromFlash+1)& (0+255),w,b
 37924  016E4C  0101               	movlb	1	; () banked
 37925  016E4E  2115               	addwfc	(??_RestoreFromFlash+5)& (0+255),w,b
 37926  016E50  0101               	movlb	1	; () banked
 37927  016E52  6F19               	movwf	(RestoreFromFlash@addrStop+1)& (0+255),b
 37928  016E54  0101               	movlb	1	; () banked
 37929  016E56  5112               	movf	(??_RestoreFromFlash+2)& (0+255),w,b
 37930  016E58  0101               	movlb	1	; () banked
 37931  016E5A  2116               	addwfc	(??_RestoreFromFlash+6)& (0+255),w,b
 37932  016E5C  0101               	movlb	1	; () banked
 37933  016E5E  6F1A               	movwf	(RestoreFromFlash@addrStop+2)& (0+255),b
 37934  016E60  0101               	movlb	1	; () banked
 37935  016E62  5113               	movf	(??_RestoreFromFlash+3)& (0+255),w,b
 37936  016E64  0101               	movlb	1	; () banked
 37937  016E66  2117               	addwfc	(??_RestoreFromFlash+7)& (0+255),w,b
 37938  016E68  0101               	movlb	1	; () banked
 37939  016E6A  6F1B               	movwf	(RestoreFromFlash@addrStop+3)& (0+255),b
 37940                           
 37941                           ; BSR set to: 1
 37942                           ;Persistence.c: 40: memset(&s_dacSettings.ChannelScaling, 0, sizeof(s_dacSettings.Channe
      +                          lScaling));
 37943  016E6C  0102               	movlb	2	; () banked
 37944  016E6E  0E02               	movlw	high (_s_dacSettings+3)
 37945  016E70  0101               	movlb	1	; () banked
 37946  016E72  6F01               	movwf	(memset@p1+1)& (0+255),b
 37947  016E74  0102               	movlb	2	; () banked
 37948  016E76  0ED6               	movlw	low (_s_dacSettings+3)
 37949  016E78  0101               	movlb	1	; () banked
 37950  016E7A  6F00               	movwf	memset@p1& (0+255),b
 37951  016E7C  0E00               	movlw	0
 37952  016E7E  0101               	movlb	1	; () banked
 37953  016E80  6F03               	movwf	(memset@c+1)& (0+255),b
 37954  016E82  0E00               	movlw	0
 37955  016E84  0101               	movlb	1	; () banked
 37956  016E86  6F02               	movwf	memset@c& (0+255),b
 37957  016E88  0E00               	movlw	0
 37958  016E8A  0101               	movlb	1	; () banked
 37959  016E8C  6F05               	movwf	(memset@n+1)& (0+255),b
 37960  016E8E  0E10               	movlw	16
 37961  016E90  0101               	movlb	1	; () banked
 37962  016E92  6F04               	movwf	memset@n& (0+255),b
 37963  016E94  ECF9  F0D9         	call	_memset	;wreg free
 37964                           
 37965                           ;Persistence.c: 41: s_dacSettings.Volume = 80;
 37966  016E98  0E50               	movlw	80
 37967  016E9A  0102               	movlb	2	; () banked
 37968  016E9C  6FD5               	movwf	(_s_dacSettings+2)& (0+255),b
 37969                           
 37970                           ; BSR set to: 2
 37971                           ;Persistence.c: 42: s_dacSettings.SampleRate = 4;
 37972  016E9E  0E04               	movlw	4
 37973  016EA0  0102               	movlb	2	; () banked
 37974  016EA2  6FD4               	movwf	(_s_dacSettings+1)& (0+255),b
 37975                           
 37976                           ; BSR set to: 2
 37977                           ;Persistence.c: 43: s_dacSettings.Sequence= 0xFF;
 37978  016EA4  0102               	movlb	2	; () banked
 37979  016EA6  69D3               	setf	_s_dacSettings& (0+255),b
 37980                           
 37981                           ;Persistence.c: 45: while(addr < addrStop)
 37982  016EA8  D050               	goto	l15402
 37983  016EAA                     l15390:
 37984                           
 37985                           ;Persistence.c: 46: {
 37986                           ;Persistence.c: 47: ReadFlash(addr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_dacSet
      +                          tingsTmp);
 37987  016EAA  C11D  F100         	movff	RestoreFromFlash@addr,ReadFlash@startaddr
 37988  016EAE  C11E  F101         	movff	RestoreFromFlash@addr+1,ReadFlash@startaddr+1
 37989  016EB2  C11F  F102         	movff	RestoreFromFlash@addr+2,ReadFlash@startaddr+2
 37990  016EB6  C120  F103         	movff	RestoreFromFlash@addr+3,ReadFlash@startaddr+3
 37991  016EBA  0E00               	movlw	0
 37992  016EBC  0101               	movlb	1	; () banked
 37993  016EBE  6F05               	movwf	(ReadFlash@num_bytes+1)& (0+255),b
 37994  016EC0  0E14               	movlw	20
 37995  016EC2  0101               	movlb	1	; () banked
 37996  016EC4  6F04               	movwf	ReadFlash@num_bytes& (0+255),b
 37997  016EC6  0102               	movlb	2	; () banked
 37998  016EC8  0E02               	movlw	high _s_dacSettingsTmp
 37999  016ECA  0101               	movlb	1	; () banked
 38000  016ECC  6F07               	movwf	(ReadFlash@flash_array+1)& (0+255),b
 38001  016ECE  0102               	movlb	2	; () banked
 38002  016ED0  0EE7               	movlw	low _s_dacSettingsTmp
 38003  016ED2  0101               	movlb	1	; () banked
 38004  016ED4  6F06               	movwf	ReadFlash@flash_array& (0+255),b
 38005  016ED6  ECD5  F0D6         	call	_ReadFlash	;wreg free
 38006                           
 38007                           ;Persistence.c: 48: if (s_dacSettingsTmp.Sequence < s_dacSettings.Sequence)
 38008  016EDA  0102               	movlb	2	; () banked
 38009  016EDC  51D3               	movf	_s_dacSettings& (0+255),w,b
 38010  016EDE  0102               	movlb	2	; () banked
 38011  016EE0  5DE7               	subwf	_s_dacSettingsTmp& (0+255),w,b
 38012  016EE2  B0D8               	btfsc	status,0,c
 38013  016EE4  D028               	goto	l15400
 38014                           
 38015                           ; BSR set to: 2
 38016                           ;Persistence.c: 49: {
 38017                           ;Persistence.c: 50: uint8_t chSum = GetCheckSum((unsigned char *)&s_dacSettingsTmp, size
      +                          of(s_dacSettingsTmp) - 1);
 38018  016EE6  0102               	movlb	2	; () banked
 38019  016EE8  0E02               	movlw	high _s_dacSettingsTmp
 38020  016EEA  0101               	movlb	1	; () banked
 38021  016EEC  6F01               	movwf	(GetCheckSum@data+1)& (0+255),b
 38022  016EEE  0102               	movlb	2	; () banked
 38023  016EF0  0EE7               	movlw	low _s_dacSettingsTmp
 38024  016EF2  0101               	movlb	1	; () banked
 38025  016EF4  6F00               	movwf	GetCheckSum@data& (0+255),b
 38026  016EF6  0E13               	movlw	19
 38027  016EF8  0101               	movlb	1	; () banked
 38028  016EFA  6F02               	movwf	GetCheckSum@dataLen& (0+255),b
 38029  016EFC  EC60  F0D9         	call	_GetCheckSum	;wreg free
 38030  016F00  0101               	movlb	1	; () banked
 38031  016F02  6F1C               	movwf	RestoreFromFlash@chSum& (0+255),b
 38032                           
 38033                           ; BSR set to: 1
 38034                           ;Persistence.c: 51: if (s_dacSettingsTmp.CheckSum == chSum)
 38035  016F04  0101               	movlb	1	; () banked
 38036  016F06  511C               	movf	RestoreFromFlash@chSum& (0+255),w,b
 38037  016F08  0102               	movlb	2	; () banked
 38038  016F0A  EE22  F0FA         	lfsr	2,_s_dacSettingsTmp+19
 38039  016F0E  62DF               	cpfseq	indf2,c
 38040  016F10  D012               	goto	l15400
 38041                           
 38042                           ; BSR set to: 2
 38043                           ;Persistence.c: 52: {
 38044                           ;Persistence.c: 53: s_dacSettings = s_dacSettingsTmp;
 38045  016F12  EE22  F0E7         	lfsr	2,_s_dacSettingsTmp
 38046  016F16  EE12  F0D3         	lfsr	1,_s_dacSettings
 38047  016F1A  0E14               	movlw	20
 38048  016F1C                     u17661:
 38049  016F1C  CFDE FFE6          	movff	postinc2,postinc1
 38050  016F20  2EE8               	decfsz	wreg,f,c
 38051  016F22  D7FC               	goto	u17661
 38052                           
 38053                           ;Persistence.c: 54: s_dacSettingsOriginal = s_dacSettingsTmp;
 38054  016F24  EE22  F0E7         	lfsr	2,_s_dacSettingsTmp
 38055  016F28  EE13  F000         	lfsr	1,_s_dacSettingsOriginal
 38056  016F2C  0E14               	movlw	20
 38057  016F2E                     u17671:
 38058  016F2E  CFDE FFE6          	movff	postinc2,postinc1
 38059  016F32  2EE8               	decfsz	wreg,f,c
 38060  016F34  D7FC               	goto	u17671
 38061  016F36                     l15400:
 38062                           
 38063                           ; BSR set to: 2
 38064                           ;Persistence.c: 55: }
 38065                           ;Persistence.c: 56: }
 38066                           ;Persistence.c: 57: addr += 0x40;
 38067  016F36  0E40               	movlw	64
 38068  016F38  0101               	movlb	1	; () banked
 38069  016F3A  271D               	addwf	RestoreFromFlash@addr& (0+255),f,b
 38070  016F3C  0E00               	movlw	0
 38071  016F3E  0101               	movlb	1	; () banked
 38072  016F40  231E               	addwfc	(RestoreFromFlash@addr+1)& (0+255),f,b
 38073  016F42  0101               	movlb	1	; () banked
 38074  016F44  231F               	addwfc	(RestoreFromFlash@addr+2)& (0+255),f,b
 38075  016F46  0101               	movlb	1	; () banked
 38076  016F48  2320               	addwfc	(RestoreFromFlash@addr+3)& (0+255),f,b
 38077  016F4A                     l15402:
 38078  016F4A  0101               	movlb	1	; () banked
 38079  016F4C  5118               	movf	RestoreFromFlash@addrStop& (0+255),w,b
 38080  016F4E  0101               	movlb	1	; () banked
 38081  016F50  5D1D               	subwf	RestoreFromFlash@addr& (0+255),w,b
 38082  016F52  0101               	movlb	1	; () banked
 38083  016F54  5119               	movf	(RestoreFromFlash@addrStop+1)& (0+255),w,b
 38084  016F56  0101               	movlb	1	; () banked
 38085  016F58  591E               	subwfb	(RestoreFromFlash@addr+1)& (0+255),w,b
 38086  016F5A  0101               	movlb	1	; () banked
 38087  016F5C  511A               	movf	(RestoreFromFlash@addrStop+2)& (0+255),w,b
 38088  016F5E  0101               	movlb	1	; () banked
 38089  016F60  591F               	subwfb	(RestoreFromFlash@addr+2)& (0+255),w,b
 38090  016F62  0101               	movlb	1	; () banked
 38091  016F64  511B               	movf	(RestoreFromFlash@addrStop+3)& (0+255),w,b
 38092  016F66  0101               	movlb	1	; () banked
 38093  016F68  5920               	subwfb	(RestoreFromFlash@addr+3)& (0+255),w,b
 38094  016F6A  B0D8               	btfsc	status,0,c
 38095                           
 38096                           ; BSR set to: 1
 38097                           
 38098                           ; BSR set to: 1
 38099  016F6C  0012               	return	
 38100  016F6E  D79D               	goto	l15390
 38101  016F70                     __end_of_RestoreFromFlash:
 38102                           	opt stack 0
 38103                           tblptru	equ	0xFF8
 38104                           tblptrh	equ	0xFF7
 38105                           tblptrl	equ	0xFF6
 38106                           tablat	equ	0xFF5
 38107                           prodh	equ	0xFF4
 38108                           prodl	equ	0xFF3
 38109                           intcon	equ	0xFF2
 38110                           indf0	equ	0xFEF
 38111                           postinc0	equ	0xFEE
 38112                           fsr0h	equ	0xFEA
 38113                           fsr0l	equ	0xFE9
 38114                           wreg	equ	0xFE8
 38115                           indf1	equ	0xFE7
 38116                           postinc1	equ	0xFE6
 38117                           postdec1	equ	0xFE5
 38118                           fsr1h	equ	0xFE2
 38119                           fsr1l	equ	0xFE1
 38120                           indf2	equ	0xFDF
 38121                           postinc2	equ	0xFDE
 38122                           postdec2	equ	0xFDD
 38123                           fsr2h	equ	0xFDA
 38124                           fsr2l	equ	0xFD9
 38125                           status	equ	0xFD8
 38126                           
 38127 ;; *************** function _ReadFlash *****************
 38128 ;; Defined at:
 38129 ;;		line 23 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\ReadFlash.c"
 38130 ;; Parameters:    Size  Location     Type
 38131 ;;  startaddr       4    0[BANK1 ] unsigned long 
 38132 ;;  num_bytes       2    4[BANK1 ] unsigned int 
 38133 ;;  flash_array     2    6[BANK1 ] PTR unsigned char 
 38134 ;;		 -> s_dacSettingsTmp(20), 
 38135 ;; Auto vars:     Size  Location     Type
 38136 ;;  tblptr_save     4   12[BANK1 ] struct .
 38137 ;;  flash_addr      4    8[BANK1 ] struct .
 38138 ;; Return value:  Size  Location     Type
 38139 ;;		None               void
 38140 ;; Registers used:
 38141 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38142 ;; Tracked objects:
 38143 ;;		On entry : 0/0
 38144 ;;		On exit  : 0/0
 38145 ;;		Unchanged: 0/0
 38146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38147 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38148 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38150 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38151 ;;Total ram usage:       16 bytes
 38152 ;; Hardware stack levels used:    1
 38153 ;; Hardware stack levels required when called:   10
 38154 ;; This function calls:
 38155 ;;		Nothing
 38156 ;; This function is called by:
 38157 ;;		_RestoreFromFlash
 38158 ;;		_FindEmpty
 38159 ;;		_SaveToFlash
 38160 ;; This function uses a non-reentrant model
 38161 ;;
 38162                           
 38163                           	psect	text82
 38164  01ADAA                     __ptext82:
 38165                           	opt stack 0
 38166  01ADAA                     _ReadFlash:
 38167                           	opt stack 18
 38168                           
 38169                           ; BSR set to: 1
 38170                           ;incstack = 0
 38171  01ADAA  C100  F108         	movff	ReadFlash@startaddr,ReadFlash@flash_addr
 38172  01ADAE  C101  F109         	movff	ReadFlash@startaddr+1,ReadFlash@flash_addr+1
 38173  01ADB2  C102  F10A         	movff	ReadFlash@startaddr+2,ReadFlash@flash_addr+2
 38174  01ADB6  C103  F10B         	movff	ReadFlash@startaddr+3,ReadFlash@flash_addr+3
 38175  01ADBA  CFF8 F10E          	movff	tblptru,ReadFlash@tblptr_save+2	;volatile
 38176  01ADBE  CFF7 F10D          	movff	tblptrh,ReadFlash@tblptr_save+1	;volatile
 38177  01ADC2  CFF6 F10C          	movff	tblptrl,ReadFlash@tblptr_save	;volatile
 38178  01ADC6  C10A  FFF8         	movff	ReadFlash@flash_addr+2,tblptru	;volatile
 38179  01ADCA  C109  FFF7         	movff	ReadFlash@flash_addr+1,tblptrh	;volatile
 38180  01ADCE  C108  FFF6         	movff	ReadFlash@flash_addr,tblptrl	;volatile
 38181  01ADD2  D00A               	goto	l12390
 38182  01ADD4                     l2149:
 38183                           
 38184                           ; BSR set to: 1
 38185  01ADD4  0009               	tblrd		*+	;# 
 38186  01ADD6  C106  FFD9         	movff	ReadFlash@flash_array,fsr2l
 38187  01ADDA  C107  FFDA         	movff	ReadFlash@flash_array+1,fsr2h
 38188  01ADDE  CFF5 FFDF          	movff	tablat,indf2	;volatile
 38189  01ADE2  0101               	movlb	1	; () banked
 38190  01ADE4  4B06               	infsnz	ReadFlash@flash_array& (0+255),f,b
 38191  01ADE6  2B07               	incf	(ReadFlash@flash_array+1)& (0+255),f,b
 38192  01ADE8                     l12390:
 38193  01ADE8  0101               	movlb	1	; () banked
 38194  01ADEA  0704               	decf	ReadFlash@num_bytes& (0+255),f,b
 38195  01ADEC  A0D8               	btfss	status,0,c
 38196  01ADEE  0705               	decf	(ReadFlash@num_bytes+1)& (0+255),f,b
 38197  01ADF0  0101               	movlb	1	; () banked
 38198  01ADF2  2904               	incf	ReadFlash@num_bytes& (0+255),w,b
 38199  01ADF4  B4D8               	btfsc	status,2,c
 38200  01ADF6  2905               	incf	(ReadFlash@num_bytes+1)& (0+255),w,b
 38201  01ADF8  A4D8               	btfss	status,2,c
 38202  01ADFA  D7EC               	goto	l2149
 38203                           
 38204                           ; BSR set to: 1
 38205  01ADFC  C10E  FFF8         	movff	ReadFlash@tblptr_save+2,tblptru	;volatile
 38206  01AE00  C10D  FFF7         	movff	ReadFlash@tblptr_save+1,tblptrh	;volatile
 38207  01AE04  C10C  FFF6         	movff	ReadFlash@tblptr_save,tblptrl	;volatile
 38208                           
 38209                           ; BSR set to: 1
 38210  01AE08  0012               	return	
 38211  01AE0A                     __end_of_ReadFlash:
 38212                           	opt stack 0
 38213                           tblptru	equ	0xFF8
 38214                           tblptrh	equ	0xFF7
 38215                           tblptrl	equ	0xFF6
 38216                           tablat	equ	0xFF5
 38217                           prodh	equ	0xFF4
 38218                           prodl	equ	0xFF3
 38219                           intcon	equ	0xFF2
 38220                           indf0	equ	0xFEF
 38221                           postinc0	equ	0xFEE
 38222                           fsr0h	equ	0xFEA
 38223                           fsr0l	equ	0xFE9
 38224                           wreg	equ	0xFE8
 38225                           indf1	equ	0xFE7
 38226                           postinc1	equ	0xFE6
 38227                           postdec1	equ	0xFE5
 38228                           fsr1h	equ	0xFE2
 38229                           fsr1l	equ	0xFE1
 38230                           indf2	equ	0xFDF
 38231                           postinc2	equ	0xFDE
 38232                           postdec2	equ	0xFDD
 38233                           fsr2h	equ	0xFDA
 38234                           fsr2l	equ	0xFD9
 38235                           status	equ	0xFD8
 38236                           
 38237 ;; *************** function _GetCheckSum *****************
 38238 ;; Defined at:
 38239 ;;		line 122 in file "Persistence.c"
 38240 ;; Parameters:    Size  Location     Type
 38241 ;;  data            2    0[BANK1 ] PTR unsigned char 
 38242 ;;		 -> s_dacSettingsTmp(20), TCPServer@cmdBytes(18), s_dacSettings(20), 
 38243 ;;  dataLen         1    2[BANK1 ] unsigned char 
 38244 ;; Auto vars:     Size  Location     Type
 38245 ;;  i               1    4[BANK1 ] unsigned char 
 38246 ;;  res             1    3[BANK1 ] unsigned char 
 38247 ;; Return value:  Size  Location     Type
 38248 ;;                  1    wreg      unsigned char 
 38249 ;; Registers used:
 38250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38251 ;; Tracked objects:
 38252 ;;		On entry : 0/0
 38253 ;;		On exit  : 0/0
 38254 ;;		Unchanged: 0/0
 38255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38256 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38257 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38259 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38260 ;;Total ram usage:        5 bytes
 38261 ;; Hardware stack levels used:    1
 38262 ;; Hardware stack levels required when called:   10
 38263 ;; This function calls:
 38264 ;;		Nothing
 38265 ;; This function is called by:
 38266 ;;		_TCPServer
 38267 ;;		_RestoreFromFlash
 38268 ;;		_SaveToFlash
 38269 ;; This function uses a non-reentrant model
 38270 ;;
 38271                           
 38272                           	psect	text83
 38273  01B2C0                     __ptext83:
 38274                           	opt stack 0
 38275  01B2C0                     _GetCheckSum:
 38276                           	opt stack 18
 38277                           
 38278                           ;Persistence.c: 124: uint8_t res = (*data) ^ 0xFF;
 38279                           
 38280                           ; BSR set to: 1
 38281                           ;incstack = 0
 38282  01B2C0  C100  FFD9         	movff	GetCheckSum@data,fsr2l
 38283  01B2C4  C101  FFDA         	movff	GetCheckSum@data+1,fsr2h
 38284  01B2C8  50DF               	movf	indf2,w,c
 38285  01B2CA  0AFF               	xorlw	255
 38286  01B2CC  0101               	movlb	1	; () banked
 38287  01B2CE  6F03               	movwf	GetCheckSum@res& (0+255),b
 38288                           
 38289                           ; BSR set to: 1
 38290                           ;Persistence.c: 125: for(uint8_t i = 1; i < dataLen; i ++)
 38291  01B2D0  0E01               	movlw	1
 38292  01B2D2  0101               	movlb	1	; () banked
 38293  01B2D4  6F04               	movwf	GetCheckSum@i& (0+255),b
 38294  01B2D6  D00C               	goto	l13812
 38295  01B2D8                     l13806:
 38296                           
 38297                           ; BSR set to: 1
 38298                           ;Persistence.c: 126: {
 38299                           ;Persistence.c: 127: data ++;
 38300  01B2D8  0101               	movlb	1	; () banked
 38301  01B2DA  4B00               	infsnz	GetCheckSum@data& (0+255),f,b
 38302  01B2DC  2B01               	incf	(GetCheckSum@data+1)& (0+255),f,b
 38303                           
 38304                           ; BSR set to: 1
 38305                           ;Persistence.c: 128: res += *data;
 38306  01B2DE  C100  FFD9         	movff	GetCheckSum@data,fsr2l
 38307  01B2E2  C101  FFDA         	movff	GetCheckSum@data+1,fsr2h
 38308  01B2E6  50DF               	movf	indf2,w,c
 38309  01B2E8  0101               	movlb	1	; () banked
 38310  01B2EA  2703               	addwf	GetCheckSum@res& (0+255),f,b
 38311                           
 38312                           ; BSR set to: 1
 38313  01B2EC  0101               	movlb	1	; () banked
 38314  01B2EE  2B04               	incf	GetCheckSum@i& (0+255),f,b
 38315  01B2F0                     l13812:
 38316                           
 38317                           ; BSR set to: 1
 38318  01B2F0  0101               	movlb	1	; () banked
 38319  01B2F2  5102               	movf	GetCheckSum@dataLen& (0+255),w,b
 38320  01B2F4  0101               	movlb	1	; () banked
 38321  01B2F6  5D04               	subwf	GetCheckSum@i& (0+255),w,b
 38322  01B2F8  A0D8               	btfss	status,0,c
 38323  01B2FA  D7EE               	goto	l13806
 38324                           
 38325                           ; BSR set to: 1
 38326                           ;Persistence.c: 129: }
 38327                           ;Persistence.c: 130: return res;
 38328                           
 38329                           ; BSR set to: 1
 38330  01B2FC  0101               	movlb	1	; () banked
 38331  01B2FE  5103               	movf	GetCheckSum@res& (0+255),w,b
 38332  01B300  0012               	return	
 38333  01B302                     __end_of_GetCheckSum:
 38334                           	opt stack 0
 38335                           tblptru	equ	0xFF8
 38336                           tblptrh	equ	0xFF7
 38337                           tblptrl	equ	0xFF6
 38338                           tablat	equ	0xFF5
 38339                           prodh	equ	0xFF4
 38340                           prodl	equ	0xFF3
 38341                           intcon	equ	0xFF2
 38342                           indf0	equ	0xFEF
 38343                           postinc0	equ	0xFEE
 38344                           fsr0h	equ	0xFEA
 38345                           fsr0l	equ	0xFE9
 38346                           wreg	equ	0xFE8
 38347                           indf1	equ	0xFE7
 38348                           postinc1	equ	0xFE6
 38349                           postdec1	equ	0xFE5
 38350                           fsr1h	equ	0xFE2
 38351                           fsr1l	equ	0xFE1
 38352                           indf2	equ	0xFDF
 38353                           postinc2	equ	0xFDE
 38354                           postdec2	equ	0xFDD
 38355                           fsr2h	equ	0xFDA
 38356                           fsr2l	equ	0xFD9
 38357                           status	equ	0xFD8
 38358                           
 38359 ;; *************** function _OpenSLCD *****************
 38360 ;; Defined at:
 38361 ;;		line 19 in file "SLCD/openslcd.c"
 38362 ;; Parameters:    Size  Location     Type
 38363 ;;  lcdtype         1    wreg     unsigned char 
 38364 ;; Auto vars:     Size  Location     Type
 38365 ;;  lcdtype         1    2[BANK1 ] unsigned char 
 38366 ;; Return value:  Size  Location     Type
 38367 ;;		None               void
 38368 ;; Registers used:
 38369 ;;		wreg, status,2, status,0, cstack
 38370 ;; Tracked objects:
 38371 ;;		On entry : 0/0
 38372 ;;		On exit  : 0/0
 38373 ;;		Unchanged: 0/0
 38374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38376 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38378 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38379 ;;Total ram usage:        1 bytes
 38380 ;; Hardware stack levels used:    1
 38381 ;; Hardware stack levels required when called:   13
 38382 ;; This function calls:
 38383 ;;		_BusySLCD
 38384 ;;		_Delay10KTCYx
 38385 ;;		_DelayPORSLCD
 38386 ;;		_SLCDSetDDRamAddr
 38387 ;;		_WriteCmdSLCD
 38388 ;; This function is called by:
 38389 ;;		_main
 38390 ;; This function uses a non-reentrant model
 38391 ;;
 38392                           
 38393                           	psect	text84
 38394  01A56E                     __ptext84:
 38395                           	opt stack 0
 38396  01A56E                     _OpenSLCD:
 38397                           	opt stack 17
 38398                           
 38399                           ; BSR set to: 1
 38400                           ;incstack = 0
 38401                           ;OpenSLCD@lcdtype stored from wreg
 38402  01A56E  0101               	movlb	1	; () banked
 38403  01A570  6F02               	movwf	OpenSLCD@lcdtype& (0+255),b
 38404                           
 38405                           ; BSR set to: 1
 38406                           ;openslcd.c: 24: LATC = 0;
 38407  01A572  0E00               	movlw	0
 38408  01A574  6E8B               	movwf	3979,c	;volatile
 38409                           
 38410                           ;openslcd.c: 25: TRISC = 0x00;
 38411  01A576  0E00               	movlw	0
 38412  01A578  6E94               	movwf	3988,c	;volatile
 38413                           
 38414                           ; BSR set to: 1
 38415                           ;openslcd.c: 35: TRISAbits.TRISA4 = 0;
 38416  01A57A  9892               	bcf	3986,4,c	;volatile
 38417                           
 38418                           ; BSR set to: 1
 38419                           ;openslcd.c: 36: TRISAbits.TRISA3 = 0;
 38420  01A57C  9692               	bcf	3986,3,c	;volatile
 38421                           
 38422                           ; BSR set to: 1
 38423                           ;openslcd.c: 37: TRISAbits.TRISA5 = 0;
 38424  01A57E  9A92               	bcf	3986,5,c	;volatile
 38425                           
 38426                           ; BSR set to: 1
 38427                           ;openslcd.c: 38: LATAbits.LATA4 = 0;
 38428  01A580  9889               	bcf	3977,4,c	;volatile
 38429                           
 38430                           ; BSR set to: 1
 38431                           ;openslcd.c: 39: LATAbits.LATA3 = 0;
 38432  01A582  9689               	bcf	3977,3,c	;volatile
 38433                           
 38434                           ; BSR set to: 1
 38435                           ;openslcd.c: 40: LATAbits.LATA5 = 0;
 38436  01A584  9A89               	bcf	3977,5,c	;volatile
 38437                           
 38438                           ; BSR set to: 1
 38439                           ;openslcd.c: 43: DelayPORSLCD();
 38440  01A586  EC7B  F0DD         	call	_DelayPORSLCD	;wreg free
 38441                           
 38442                           ;openslcd.c: 45: WriteCmdSLCD(0x30);
 38443  01A58A  0E30               	movlw	48
 38444  01A58C  ECE0  F0DB         	call	_WriteCmdSLCD
 38445                           
 38446                           ;openslcd.c: 46: Delay10KTCYx(0x05);
 38447  01A590  0E05               	movlw	5
 38448  01A592  EC96  F0DC         	call	_Delay10KTCYx
 38449                           
 38450                           ;openslcd.c: 48: WriteCmdSLCD(0x30);
 38451  01A596  0E30               	movlw	48
 38452  01A598  ECE0  F0DB         	call	_WriteCmdSLCD
 38453                           
 38454                           ;openslcd.c: 49: Delay10KTCYx(0x01);
 38455  01A59C  0E01               	movlw	1
 38456  01A59E  EC96  F0DC         	call	_Delay10KTCYx
 38457                           
 38458                           ;openslcd.c: 52: WriteCmdSLCD(0x32);
 38459  01A5A2  0E32               	movlw	50
 38460  01A5A4  ECE0  F0DB         	call	_WriteCmdSLCD
 38461  01A5A8                     l14876:
 38462  01A5A8  EC26  F0DC         	call	_BusySLCD	;wreg free
 38463  01A5AC  0900               	iorlw	0
 38464  01A5AE  A4D8               	btfss	status,2,c
 38465  01A5B0  D7FB               	goto	l14876
 38466                           
 38467                           ;openslcd.c: 58: WriteCmdSLCD(lcdtype);
 38468  01A5B2  0101               	movlb	1	; () banked
 38469  01A5B4  5102               	movf	OpenSLCD@lcdtype& (0+255),w,b
 38470  01A5B6  ECE0  F0DB         	call	_WriteCmdSLCD
 38471  01A5BA                     l14880:
 38472  01A5BA  EC26  F0DC         	call	_BusySLCD	;wreg free
 38473  01A5BE  0900               	iorlw	0
 38474  01A5C0  A4D8               	btfss	status,2,c
 38475  01A5C2  D7FB               	goto	l14880
 38476                           
 38477                           ;openslcd.c: 62: WriteCmdSLCD(0b00001011&0b00001101&0b00001110);
 38478  01A5C4  0E08               	movlw	8
 38479  01A5C6  ECE0  F0DB         	call	_WriteCmdSLCD
 38480  01A5CA                     l14884:
 38481  01A5CA  EC26  F0DC         	call	_BusySLCD	;wreg free
 38482  01A5CE  0900               	iorlw	0
 38483  01A5D0  A4D8               	btfss	status,2,c
 38484  01A5D2  D7FB               	goto	l14884
 38485                           
 38486                           ;openslcd.c: 64: WriteCmdSLCD(0b00001111&0b00001111&0b00001111);
 38487  01A5D4  0E0F               	movlw	15
 38488  01A5D6  ECE0  F0DB         	call	_WriteCmdSLCD
 38489  01A5DA                     l14888:
 38490  01A5DA  EC26  F0DC         	call	_BusySLCD	;wreg free
 38491  01A5DE  0900               	iorlw	0
 38492  01A5E0  A4D8               	btfss	status,2,c
 38493  01A5E2  D7FB               	goto	l14888
 38494                           
 38495                           ;openslcd.c: 68: WriteCmdSLCD(0x01);
 38496  01A5E4  0E01               	movlw	1
 38497  01A5E6  ECE0  F0DB         	call	_WriteCmdSLCD
 38498  01A5EA                     l14892:
 38499  01A5EA  EC26  F0DC         	call	_BusySLCD	;wreg free
 38500  01A5EE  0900               	iorlw	0
 38501  01A5F0  A4D8               	btfss	status,2,c
 38502  01A5F2  D7FB               	goto	l14892
 38503                           
 38504                           ;openslcd.c: 72: WriteCmdSLCD(0b00000110);
 38505  01A5F4  0E06               	movlw	6
 38506  01A5F6  ECE0  F0DB         	call	_WriteCmdSLCD
 38507                           
 38508                           ;openslcd.c: 75: SLCDSetDDRamAddr(0x00);
 38509  01A5FA  0E00               	movlw	0
 38510  01A5FC  ECB2  F0DC         	call	_SLCDSetDDRamAddr
 38511  01A600  0012               	return	
 38512  01A602                     __end_of_OpenSLCD:
 38513                           	opt stack 0
 38514                           tblptru	equ	0xFF8
 38515                           tblptrh	equ	0xFF7
 38516                           tblptrl	equ	0xFF6
 38517                           tablat	equ	0xFF5
 38518                           prodh	equ	0xFF4
 38519                           prodl	equ	0xFF3
 38520                           intcon	equ	0xFF2
 38521                           indf0	equ	0xFEF
 38522                           postinc0	equ	0xFEE
 38523                           fsr0h	equ	0xFEA
 38524                           fsr0l	equ	0xFE9
 38525                           wreg	equ	0xFE8
 38526                           indf1	equ	0xFE7
 38527                           postinc1	equ	0xFE6
 38528                           postdec1	equ	0xFE5
 38529                           fsr1h	equ	0xFE2
 38530                           fsr1l	equ	0xFE1
 38531                           indf2	equ	0xFDF
 38532                           postinc2	equ	0xFDE
 38533                           postdec2	equ	0xFDD
 38534                           fsr2h	equ	0xFDA
 38535                           fsr2l	equ	0xFD9
 38536                           status	equ	0xFD8
 38537                           
 38538 ;; *************** function _SLCDSetDDRamAddr *****************
 38539 ;; Defined at:
 38540 ;;		line 13 in file "SLCD/setddram.c"
 38541 ;; Parameters:    Size  Location     Type
 38542 ;;  DDaddr          1    wreg     unsigned char 
 38543 ;; Auto vars:     Size  Location     Type
 38544 ;;  DDaddr          1    1[BANK1 ] unsigned char 
 38545 ;; Return value:  Size  Location     Type
 38546 ;;		None               void
 38547 ;; Registers used:
 38548 ;;		wreg, status,2, status,0, cstack
 38549 ;; Tracked objects:
 38550 ;;		On entry : 0/0
 38551 ;;		On exit  : 0/0
 38552 ;;		Unchanged: 0/0
 38553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38555 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38557 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38558 ;;Total ram usage:        1 bytes
 38559 ;; Hardware stack levels used:    1
 38560 ;; Hardware stack levels required when called:   12
 38561 ;; This function calls:
 38562 ;;		_BusySLCD
 38563 ;;		_WriteCmdSLCD
 38564 ;; This function is called by:
 38565 ;;		_OpenSLCD
 38566 ;;		_RefreshLine1Ex
 38567 ;;		_RefreshLine2Ex
 38568 ;; This function uses a non-reentrant model
 38569 ;;
 38570                           
 38571                           	psect	text85
 38572  01B964                     __ptext85:
 38573                           	opt stack 0
 38574  01B964                     _SLCDSetDDRamAddr:
 38575                           	opt stack 15
 38576                           
 38577                           ;incstack = 0
 38578                           ;SLCDSetDDRamAddr@DDaddr stored from wreg
 38579  01B964  0101               	movlb	1	; () banked
 38580  01B966  6F01               	movwf	SLCDSetDDRamAddr@DDaddr& (0+255),b
 38581  01B968                     l10480:
 38582  01B968  EC26  F0DC         	call	_BusySLCD	;wreg free
 38583  01B96C  0900               	iorlw	0
 38584  01B96E  A4D8               	btfss	status,2,c
 38585  01B970  D7FB               	goto	l10480
 38586                           
 38587                           ;setddram.c: 16: WriteCmdSLCD(DDaddr | 0b10000000);
 38588  01B972  0101               	movlb	1	; () banked
 38589  01B974  5101               	movf	SLCDSetDDRamAddr@DDaddr& (0+255),w,b
 38590  01B976  0980               	iorlw	128
 38591  01B978  ECE0  F0DB         	call	_WriteCmdSLCD
 38592  01B97C  0012               	return	
 38593  01B97E                     __end_of_SLCDSetDDRamAddr:
 38594                           	opt stack 0
 38595                           tblptru	equ	0xFF8
 38596                           tblptrh	equ	0xFF7
 38597                           tblptrl	equ	0xFF6
 38598                           tablat	equ	0xFF5
 38599                           prodh	equ	0xFF4
 38600                           prodl	equ	0xFF3
 38601                           intcon	equ	0xFF2
 38602                           indf0	equ	0xFEF
 38603                           postinc0	equ	0xFEE
 38604                           fsr0h	equ	0xFEA
 38605                           fsr0l	equ	0xFE9
 38606                           wreg	equ	0xFE8
 38607                           indf1	equ	0xFE7
 38608                           postinc1	equ	0xFE6
 38609                           postdec1	equ	0xFE5
 38610                           fsr1h	equ	0xFE2
 38611                           fsr1l	equ	0xFE1
 38612                           indf2	equ	0xFDF
 38613                           postinc2	equ	0xFDE
 38614                           postdec2	equ	0xFDD
 38615                           fsr2h	equ	0xFDA
 38616                           fsr2l	equ	0xFD9
 38617                           status	equ	0xFD8
 38618                           
 38619 ;; *************** function _WriteCmdSLCD *****************
 38620 ;; Defined at:
 38621 ;;		line 13 in file "SLCD/wcmdslcd.c"
 38622 ;; Parameters:    Size  Location     Type
 38623 ;;  cmd             1    wreg     unsigned char 
 38624 ;; Auto vars:     Size  Location     Type
 38625 ;;  cmd             1    0[BANK1 ] unsigned char 
 38626 ;; Return value:  Size  Location     Type
 38627 ;;		None               void
 38628 ;; Registers used:
 38629 ;;		wreg, status,2, cstack
 38630 ;; Tracked objects:
 38631 ;;		On entry : 0/0
 38632 ;;		On exit  : 0/0
 38633 ;;		Unchanged: 0/0
 38634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38636 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38638 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38639 ;;Total ram usage:        1 bytes
 38640 ;; Hardware stack levels used:    1
 38641 ;; Hardware stack levels required when called:   11
 38642 ;; This function calls:
 38643 ;;		_DelayFor18TCY
 38644 ;; This function is called by:
 38645 ;;		_SLCDSetDDRamAddr
 38646 ;;		_OpenSLCD
 38647 ;;		_main
 38648 ;; This function uses a non-reentrant model
 38649 ;;
 38650                           
 38651                           	psect	text86
 38652  01B7C0                     __ptext86:
 38653                           	opt stack 0
 38654  01B7C0                     _WriteCmdSLCD:
 38655                           	opt stack 19
 38656                           
 38657                           ;incstack = 0
 38658                           ;WriteCmdSLCD@cmd stored from wreg
 38659  01B7C0  0101               	movlb	1	; () banked
 38660  01B7C2  6F00               	movwf	WriteCmdSLCD@cmd& (0+255),b
 38661                           
 38662                           ; BSR set to: 1
 38663                           ;wcmdslcd.c: 16: TRISC = 0;
 38664  01B7C4  0E00               	movlw	0
 38665  01B7C6  6E94               	movwf	3988,c	;volatile
 38666                           
 38667                           ; BSR set to: 1
 38668                           ;wcmdslcd.c: 17: LATC = cmd;
 38669  01B7C8  C100  FF8B         	movff	WriteCmdSLCD@cmd,3979	;volatile
 38670                           
 38671                           ; BSR set to: 1
 38672                           ;wcmdslcd.c: 19: LATAbits.LATA4 = 0;
 38673  01B7CC  9889               	bcf	3977,4,c	;volatile
 38674                           
 38675                           ; BSR set to: 1
 38676                           ;wcmdslcd.c: 20: LATAbits.LATA3 = 0;
 38677  01B7CE  9689               	bcf	3977,3,c	;volatile
 38678                           
 38679                           ; BSR set to: 1
 38680                           ;wcmdslcd.c: 21: DelayFor18TCY();
 38681  01B7D0  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 38682                           
 38683                           ;wcmdslcd.c: 22: LATAbits.LATA5 = 1;
 38684  01B7D4  8A89               	bsf	3977,5,c	;volatile
 38685                           
 38686                           ;wcmdslcd.c: 23: DelayFor18TCY();
 38687  01B7D6  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 38688                           
 38689                           ;wcmdslcd.c: 24: LATAbits.LATA5 = 0;
 38690  01B7DA  9A89               	bcf	3977,5,c	;volatile
 38691                           
 38692                           ;wcmdslcd.c: 25: DelayFor18TCY();
 38693  01B7DC  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 38694                           
 38695                           ;wcmdslcd.c: 26: TRISC = 0xff;
 38696  01B7E0  6894               	setf	3988,c	;volatile
 38697  01B7E2  0012               	return	
 38698  01B7E4                     __end_of_WriteCmdSLCD:
 38699                           	opt stack 0
 38700                           tblptru	equ	0xFF8
 38701                           tblptrh	equ	0xFF7
 38702                           tblptrl	equ	0xFF6
 38703                           tablat	equ	0xFF5
 38704                           prodh	equ	0xFF4
 38705                           prodl	equ	0xFF3
 38706                           intcon	equ	0xFF2
 38707                           indf0	equ	0xFEF
 38708                           postinc0	equ	0xFEE
 38709                           fsr0h	equ	0xFEA
 38710                           fsr0l	equ	0xFE9
 38711                           wreg	equ	0xFE8
 38712                           indf1	equ	0xFE7
 38713                           postinc1	equ	0xFE6
 38714                           postdec1	equ	0xFE5
 38715                           fsr1h	equ	0xFE2
 38716                           fsr1l	equ	0xFE1
 38717                           indf2	equ	0xFDF
 38718                           postinc2	equ	0xFDE
 38719                           postdec2	equ	0xFDD
 38720                           fsr2h	equ	0xFDA
 38721                           fsr2l	equ	0xFD9
 38722                           status	equ	0xFD8
 38723                           
 38724 ;; *************** function _BusySLCD *****************
 38725 ;; Defined at:
 38726 ;;		line 11 in file "SLCD/busyslcd.c"
 38727 ;; Parameters:    Size  Location     Type
 38728 ;;		None
 38729 ;; Auto vars:     Size  Location     Type
 38730 ;;		None
 38731 ;; Return value:  Size  Location     Type
 38732 ;;                  1    wreg      unsigned char 
 38733 ;; Registers used:
 38734 ;;		wreg, cstack
 38735 ;; Tracked objects:
 38736 ;;		On entry : 0/0
 38737 ;;		On exit  : 0/0
 38738 ;;		Unchanged: 0/0
 38739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38744 ;;Total ram usage:        0 bytes
 38745 ;; Hardware stack levels used:    1
 38746 ;; Hardware stack levels required when called:   11
 38747 ;; This function calls:
 38748 ;;		_DelayFor18TCY
 38749 ;; This function is called by:
 38750 ;;		_SLCDSetDDRamAddr
 38751 ;;		_OpenSLCD
 38752 ;;		_PutsSLCD
 38753 ;;		_main
 38754 ;;		_PutrsSLCD
 38755 ;; This function uses a non-reentrant model
 38756 ;;
 38757                           
 38758                           	psect	text87
 38759  01B84C                     __ptext87:
 38760                           	opt stack 0
 38761  01B84C                     _BusySLCD:
 38762                           	opt stack 15
 38763                           
 38764                           ;busyslcd.c: 13: LATAbits.LATA4 = 1;
 38765                           
 38766                           ;incstack = 0
 38767  01B84C  8889               	bsf	3977,4,c	;volatile
 38768                           
 38769                           ;busyslcd.c: 14: LATAbits.LATA3 = 0;
 38770  01B84E  9689               	bcf	3977,3,c	;volatile
 38771                           
 38772                           ;busyslcd.c: 15: DelayFor18TCY();
 38773  01B850  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 38774                           
 38775                           ;busyslcd.c: 16: LATAbits.LATA5 = 1;
 38776  01B854  8A89               	bsf	3977,5,c	;volatile
 38777                           
 38778                           ;busyslcd.c: 17: DelayFor18TCY();
 38779  01B856  ECB2  F0DA         	call	_DelayFor18TCY	;wreg free
 38780                           
 38781                           ;busyslcd.c: 19: if(PORTC&0x80)
 38782  01B85A  AE82               	btfss	3970,7,c	;volatile
 38783  01B85C  D004               	goto	l59
 38784                           
 38785                           ;busyslcd.c: 20: {
 38786                           ;busyslcd.c: 21: LATAbits.LATA5 = 0;
 38787  01B85E  9A89               	bcf	3977,5,c	;volatile
 38788                           
 38789                           ;busyslcd.c: 22: LATAbits.LATA4 = 0;
 38790  01B860  9889               	bcf	3977,4,c	;volatile
 38791                           
 38792                           ;busyslcd.c: 23: return 1;
 38793  01B862  0E01               	movlw	1
 38794  01B864  0012               	return	
 38795  01B866                     l59:
 38796                           
 38797                           ;busyslcd.c: 25: else
 38798                           ;busyslcd.c: 26: {
 38799                           ;busyslcd.c: 27: LATAbits.LATA5 = 0;
 38800  01B866  9A89               	bcf	3977,5,c	;volatile
 38801                           
 38802                           ;busyslcd.c: 28: LATAbits.LATA4 = 0;
 38803  01B868  9889               	bcf	3977,4,c	;volatile
 38804                           
 38805                           ;busyslcd.c: 29: return 0;
 38806  01B86A  0E00               	movlw	0
 38807  01B86C  0012               	return	
 38808  01B86E                     __end_of_BusySLCD:
 38809                           	opt stack 0
 38810                           tblptru	equ	0xFF8
 38811                           tblptrh	equ	0xFF7
 38812                           tblptrl	equ	0xFF6
 38813                           tablat	equ	0xFF5
 38814                           prodh	equ	0xFF4
 38815                           prodl	equ	0xFF3
 38816                           intcon	equ	0xFF2
 38817                           indf0	equ	0xFEF
 38818                           postinc0	equ	0xFEE
 38819                           fsr0h	equ	0xFEA
 38820                           fsr0l	equ	0xFE9
 38821                           wreg	equ	0xFE8
 38822                           indf1	equ	0xFE7
 38823                           postinc1	equ	0xFE6
 38824                           postdec1	equ	0xFE5
 38825                           fsr1h	equ	0xFE2
 38826                           fsr1l	equ	0xFE1
 38827                           indf2	equ	0xFDF
 38828                           postinc2	equ	0xFDE
 38829                           postdec2	equ	0xFDD
 38830                           fsr2h	equ	0xFDA
 38831                           fsr2l	equ	0xFD9
 38832                           status	equ	0xFD8
 38833                           
 38834 ;; *************** function _DelayFor18TCY *****************
 38835 ;; Defined at:
 38836 ;;		line 16 in file "LCDDelay.c"
 38837 ;; Parameters:    Size  Location     Type
 38838 ;;		None
 38839 ;; Auto vars:     Size  Location     Type
 38840 ;;		None
 38841 ;; Return value:  Size  Location     Type
 38842 ;;		None               void
 38843 ;; Registers used:
 38844 ;;		None
 38845 ;; Tracked objects:
 38846 ;;		On entry : 0/0
 38847 ;;		On exit  : 0/0
 38848 ;;		Unchanged: 0/0
 38849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38854 ;;Total ram usage:        0 bytes
 38855 ;; Hardware stack levels used:    1
 38856 ;; Hardware stack levels required when called:   10
 38857 ;; This function calls:
 38858 ;;		Nothing
 38859 ;; This function is called by:
 38860 ;;		_WriteDataSLCD
 38861 ;;		_BusySLCD
 38862 ;;		_WriteCmdSLCD
 38863 ;;		_ReadAddrSLCD
 38864 ;;		_ReadDataSLCD
 38865 ;;		_SetCGRamAddr
 38866 ;; This function uses a non-reentrant model
 38867 ;;
 38868                           
 38869                           	psect	text88
 38870  01B564                     __ptext88:
 38871                           	opt stack 0
 38872  01B564                     _DelayFor18TCY:
 38873                           	opt stack 19
 38874                           
 38875                           ;LCDDelay.c: 18: __nop();
 38876                           
 38877                           ;incstack = 0
 38878  01B564  F000               	nop	
 38879                           
 38880                           ;LCDDelay.c: 19: __nop();
 38881  01B566  F000               	nop	
 38882                           
 38883                           ;LCDDelay.c: 20: __nop();
 38884  01B568  F000               	nop	
 38885                           
 38886                           ;LCDDelay.c: 21: __nop();
 38887  01B56A  F000               	nop	
 38888                           
 38889                           ;LCDDelay.c: 22: __nop();
 38890  01B56C  F000               	nop	
 38891                           
 38892                           ;LCDDelay.c: 23: __nop();
 38893  01B56E  F000               	nop	
 38894                           
 38895                           ;LCDDelay.c: 24: __nop();
 38896  01B570  F000               	nop	
 38897                           
 38898                           ;LCDDelay.c: 25: __nop();
 38899  01B572  F000               	nop	
 38900                           
 38901                           ;LCDDelay.c: 26: __nop();
 38902  01B574  F000               	nop	
 38903                           
 38904                           ;LCDDelay.c: 27: __nop();
 38905  01B576  F000               	nop	
 38906                           
 38907                           ;LCDDelay.c: 28: __nop();
 38908  01B578  F000               	nop	
 38909                           
 38910                           ;LCDDelay.c: 29: __nop();
 38911  01B57A  F000               	nop	
 38912                           
 38913                           ;LCDDelay.c: 30: __nop();
 38914  01B57C  F000               	nop	
 38915                           
 38916                           ;LCDDelay.c: 31: __nop();
 38917  01B57E  F000               	nop	
 38918                           
 38919                           ;LCDDelay.c: 32: __nop();
 38920  01B580  F000               	nop	
 38921                           
 38922                           ;LCDDelay.c: 33: __nop();
 38923  01B582  F000               	nop	
 38924                           
 38925                           ;LCDDelay.c: 34: __nop();
 38926  01B584  F000               	nop	
 38927                           
 38928                           ;LCDDelay.c: 35: __nop();
 38929  01B586  F000               	nop	
 38930                           
 38931                           ;LCDDelay.c: 37: __nop();
 38932  01B588  F000               	nop	
 38933                           
 38934                           ;LCDDelay.c: 38: __nop();
 38935  01B58A  F000               	nop	
 38936                           
 38937                           ;LCDDelay.c: 39: __nop();
 38938  01B58C  F000               	nop	
 38939                           
 38940                           ;LCDDelay.c: 40: __nop();
 38941  01B58E  F000               	nop	
 38942                           
 38943                           ;LCDDelay.c: 41: __nop();
 38944  01B590  F000               	nop	
 38945                           
 38946                           ;LCDDelay.c: 42: __nop();
 38947  01B592  F000               	nop	
 38948  01B594  0012               	return	
 38949  01B596                     __end_of_DelayFor18TCY:
 38950                           	opt stack 0
 38951                           tblptru	equ	0xFF8
 38952                           tblptrh	equ	0xFF7
 38953                           tblptrl	equ	0xFF6
 38954                           tablat	equ	0xFF5
 38955                           prodh	equ	0xFF4
 38956                           prodl	equ	0xFF3
 38957                           intcon	equ	0xFF2
 38958                           indf0	equ	0xFEF
 38959                           postinc0	equ	0xFEE
 38960                           fsr0h	equ	0xFEA
 38961                           fsr0l	equ	0xFE9
 38962                           wreg	equ	0xFE8
 38963                           indf1	equ	0xFE7
 38964                           postinc1	equ	0xFE6
 38965                           postdec1	equ	0xFE5
 38966                           fsr1h	equ	0xFE2
 38967                           fsr1l	equ	0xFE1
 38968                           indf2	equ	0xFDF
 38969                           postinc2	equ	0xFDE
 38970                           postdec2	equ	0xFDD
 38971                           fsr2h	equ	0xFDA
 38972                           fsr2l	equ	0xFD9
 38973                           status	equ	0xFD8
 38974                           
 38975 ;; *************** function _DelayPORSLCD *****************
 38976 ;; Defined at:
 38977 ;;		line 5 in file "LCDDelay.c"
 38978 ;; Parameters:    Size  Location     Type
 38979 ;;		None
 38980 ;; Auto vars:     Size  Location     Type
 38981 ;;		None
 38982 ;; Return value:  Size  Location     Type
 38983 ;;		None               void
 38984 ;; Registers used:
 38985 ;;		wreg, cstack
 38986 ;; Tracked objects:
 38987 ;;		On entry : 0/0
 38988 ;;		On exit  : 0/0
 38989 ;;		Unchanged: 0/0
 38990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 38991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38995 ;;Total ram usage:        0 bytes
 38996 ;; Hardware stack levels used:    1
 38997 ;; Hardware stack levels required when called:   11
 38998 ;; This function calls:
 38999 ;;		_Delay1KTCYx
 39000 ;; This function is called by:
 39001 ;;		_OpenSLCD
 39002 ;; This function uses a non-reentrant model
 39003 ;;
 39004                           
 39005                           	psect	text89
 39006  01BAF6                     __ptext89:
 39007                           	opt stack 0
 39008  01BAF6                     _DelayPORSLCD:
 39009                           	opt stack 18
 39010                           
 39011                           ;LCDDelay.c: 8: Delay1KTCYx(15);
 39012                           
 39013                           ;incstack = 0
 39014  01BAF6  0E0F               	movlw	15
 39015  01BAF8  EC0E  F0DD         	call	_Delay1KTCYx
 39016  01BAFC  0012               	return	
 39017  01BAFE                     __end_of_DelayPORSLCD:
 39018                           	opt stack 0
 39019                           tblptru	equ	0xFF8
 39020                           tblptrh	equ	0xFF7
 39021                           tblptrl	equ	0xFF6
 39022                           tablat	equ	0xFF5
 39023                           prodh	equ	0xFF4
 39024                           prodl	equ	0xFF3
 39025                           intcon	equ	0xFF2
 39026                           indf0	equ	0xFEF
 39027                           postinc0	equ	0xFEE
 39028                           fsr0h	equ	0xFEA
 39029                           fsr0l	equ	0xFE9
 39030                           wreg	equ	0xFE8
 39031                           indf1	equ	0xFE7
 39032                           postinc1	equ	0xFE6
 39033                           postdec1	equ	0xFE5
 39034                           fsr1h	equ	0xFE2
 39035                           fsr1l	equ	0xFE1
 39036                           indf2	equ	0xFDF
 39037                           postinc2	equ	0xFDE
 39038                           postdec2	equ	0xFDD
 39039                           fsr2h	equ	0xFDA
 39040                           fsr2l	equ	0xFD9
 39041                           status	equ	0xFD8
 39042                           
 39043 ;; *************** function _Delay1KTCYx *****************
 39044 ;; Defined at:
 39045 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
 39046 ;; Parameters:    Size  Location     Type
 39047 ;;  unit            1    wreg     unsigned char 
 39048 ;; Auto vars:     Size  Location     Type
 39049 ;;  unit            1    0[BANK1 ] unsigned char 
 39050 ;; Return value:  Size  Location     Type
 39051 ;;		None               void
 39052 ;; Registers used:
 39053 ;;		wreg
 39054 ;; Tracked objects:
 39055 ;;		On entry : 0/0
 39056 ;;		On exit  : 0/0
 39057 ;;		Unchanged: 0/0
 39058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39060 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39062 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39063 ;;Total ram usage:        1 bytes
 39064 ;; Hardware stack levels used:    1
 39065 ;; Hardware stack levels required when called:   10
 39066 ;; This function calls:
 39067 ;;		Nothing
 39068 ;; This function is called by:
 39069 ;;		_DelayPORSLCD
 39070 ;;		_DelaySLCD
 39071 ;; This function uses a non-reentrant model
 39072 ;;
 39073                           
 39074                           	psect	text90
 39075  01BA1C                     __ptext90:
 39076                           	opt stack 0
 39077  01BA1C                     _Delay1KTCYx:
 39078                           	opt stack 18
 39079                           
 39080                           ;incstack = 0
 39081                           ;Delay1KTCYx@unit stored from wreg
 39082  01BA1C  0101               	movlb	1	; () banked
 39083  01BA1E  6F00               	movwf	Delay1KTCYx@unit& (0+255),b
 39084  01BA20                     l2401:
 39085                           
 39086                           ; BSR set to: 1
 39087                           
 39088                           ; BSR set to: 1
 39089  01BA20  0EFA               	movlw	250
 39090  01BA22                     u18657:
 39091  01BA22  F000               	nop	
 39092  01BA24  2EE8               	decfsz	wreg,f,c
 39093  01BA26  D7FD               	goto	u18657
 39094  01BA28  0101               	movlb	1	; () banked
 39095  01BA2A  2F00               	decfsz	Delay1KTCYx@unit& (0+255),f,b
 39096  01BA2C  D7F9               	goto	l2401
 39097  01BA2E  0012               	return	
 39098  01BA30                     __end_of_Delay1KTCYx:
 39099                           	opt stack 0
 39100                           tblptru	equ	0xFF8
 39101                           tblptrh	equ	0xFF7
 39102                           tblptrl	equ	0xFF6
 39103                           tablat	equ	0xFF5
 39104                           prodh	equ	0xFF4
 39105                           prodl	equ	0xFF3
 39106                           intcon	equ	0xFF2
 39107                           indf0	equ	0xFEF
 39108                           postinc0	equ	0xFEE
 39109                           fsr0h	equ	0xFEA
 39110                           fsr0l	equ	0xFE9
 39111                           wreg	equ	0xFE8
 39112                           indf1	equ	0xFE7
 39113                           postinc1	equ	0xFE6
 39114                           postdec1	equ	0xFE5
 39115                           fsr1h	equ	0xFE2
 39116                           fsr1l	equ	0xFE1
 39117                           indf2	equ	0xFDF
 39118                           postinc2	equ	0xFDE
 39119                           postdec2	equ	0xFDD
 39120                           fsr2h	equ	0xFDA
 39121                           fsr2l	equ	0xFD9
 39122                           status	equ	0xFD8
 39123                           
 39124 ;; *************** function _Delay10KTCYx *****************
 39125 ;; Defined at:
 39126 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
 39127 ;; Parameters:    Size  Location     Type
 39128 ;;  unit            1    wreg     unsigned char 
 39129 ;; Auto vars:     Size  Location     Type
 39130 ;;  unit            1    1[BANK1 ] unsigned char 
 39131 ;; Return value:  Size  Location     Type
 39132 ;;		None               void
 39133 ;; Registers used:
 39134 ;;		wreg
 39135 ;; Tracked objects:
 39136 ;;		On entry : 0/0
 39137 ;;		On exit  : 0/0
 39138 ;;		Unchanged: 0/0
 39139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39141 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39142 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39143 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39144 ;;Total ram usage:        2 bytes
 39145 ;; Hardware stack levels used:    1
 39146 ;; Hardware stack levels required when called:   10
 39147 ;; This function calls:
 39148 ;;		Nothing
 39149 ;; This function is called by:
 39150 ;;		_OpenSLCD
 39151 ;;		_PowerOn
 39152 ;; This function uses a non-reentrant model
 39153 ;;
 39154                           
 39155                           	psect	text91
 39156  01B92C                     __ptext91:
 39157                           	opt stack 0
 39158  01B92C                     _Delay10KTCYx:
 39159                           	opt stack 18
 39160                           
 39161                           ; BSR set to: 1
 39162                           ;incstack = 0
 39163                           ;Delay10KTCYx@unit stored from wreg
 39164  01B92C  0101               	movlb	1	; () banked
 39165  01B92E  6F01               	movwf	Delay10KTCYx@unit& (0+255),b
 39166  01B930                     l2394:
 39167                           
 39168                           ; BSR set to: 1
 39169                           
 39170                           ; BSR set to: 1
 39171  01B930  0E0D               	movlw	13
 39172  01B932  0101               	movlb	1	; () banked
 39173  01B934  6F00               	movwf	??_Delay10KTCYx& (0+255),b
 39174  01B936  0EFC               	movlw	252
 39175  01B938                     u18667:
 39176  01B938  2EE8               	decfsz	wreg,f,c
 39177  01B93A  D7FE               	goto	u18667
 39178  01B93C  2F00               	decfsz	??_Delay10KTCYx& (0+255),f,b
 39179  01B93E  D7FC               	goto	u18667
 39180  01B940  0101               	movlb	1	; () banked
 39181  01B942  2F01               	decfsz	Delay10KTCYx@unit& (0+255),f,b
 39182  01B944  D7F5               	goto	l2394
 39183  01B946  0012               	return	
 39184  01B948                     __end_of_Delay10KTCYx:
 39185                           	opt stack 0
 39186                           tblptru	equ	0xFF8
 39187                           tblptrh	equ	0xFF7
 39188                           tblptrl	equ	0xFF6
 39189                           tablat	equ	0xFF5
 39190                           prodh	equ	0xFF4
 39191                           prodl	equ	0xFF3
 39192                           intcon	equ	0xFF2
 39193                           indf0	equ	0xFEF
 39194                           postinc0	equ	0xFEE
 39195                           fsr0h	equ	0xFEA
 39196                           fsr0l	equ	0xFE9
 39197                           wreg	equ	0xFE8
 39198                           indf1	equ	0xFE7
 39199                           postinc1	equ	0xFE6
 39200                           postdec1	equ	0xFE5
 39201                           fsr1h	equ	0xFE2
 39202                           fsr1l	equ	0xFE1
 39203                           indf2	equ	0xFDF
 39204                           postinc2	equ	0xFDE
 39205                           postdec2	equ	0xFDD
 39206                           fsr2h	equ	0xFDA
 39207                           fsr2l	equ	0xFD9
 39208                           status	equ	0xFD8
 39209                           
 39210 ;; *************** function _Configure *****************
 39211 ;; Defined at:
 39212 ;;		line 105 in file "main.c"
 39213 ;; Parameters:    Size  Location     Type
 39214 ;;		None
 39215 ;; Auto vars:     Size  Location     Type
 39216 ;;		None
 39217 ;; Return value:  Size  Location     Type
 39218 ;;		None               void
 39219 ;; Registers used:
 39220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39221 ;; Tracked objects:
 39222 ;;		On entry : 0/0
 39223 ;;		On exit  : 0/0
 39224 ;;		Unchanged: 0/0
 39225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39230 ;;Total ram usage:        0 bytes
 39231 ;; Hardware stack levels used:    1
 39232 ;; Hardware stack levels required when called:   17
 39233 ;; This function calls:
 39234 ;;		_InitAppConfig
 39235 ;;		_InitrIR
 39236 ;;		_PowerOff
 39237 ;;		_StackInit
 39238 ;;		_TickInit
 39239 ;; This function is called by:
 39240 ;;		_main
 39241 ;; This function uses a non-reentrant model
 39242 ;;
 39243                           
 39244                           	psect	text92
 39245  01AC74                     __ptext92:
 39246                           	opt stack 0
 39247  01AC74                     _Configure:
 39248                           	opt stack 13
 39249                           
 39250                           ;main.c: 107: OSCTUNE = 0;
 39251                           
 39252                           ; BSR set to: 1
 39253                           ;incstack = 0
 39254  01AC74  0E00               	movlw	0
 39255  01AC76  6E9B               	movwf	3995,c	;volatile
 39256                           
 39257                           ;main.c: 108: OSCCONbits.IDLEN = 1;
 39258  01AC78  8ED3               	bsf	4051,7,c	;volatile
 39259                           
 39260                           ;main.c: 109: OSCCONbits.SCS1 = 1;
 39261  01AC7A  82D3               	bsf	4051,1,c	;volatile
 39262                           
 39263                           ;main.c: 110: OSCCONbits.SCS0 = 0;
 39264  01AC7C  90D3               	bcf	4051,0,c	;volatile
 39265                           
 39266                           ;main.c: 112: RCONbits.IPEN = 0;
 39267  01AC7E  9ED0               	bcf	4048,7,c	;volatile
 39268                           
 39269                           ;main.c: 114: ADCON1 = 0x0F;
 39270  01AC80  0E0F               	movlw	15
 39271  01AC82  6EC1               	movwf	4033,c	;volatile
 39272                           
 39273                           ;main.c: 115: CMCON = 0x0F;
 39274  01AC84  0E0F               	movlw	15
 39275  01AC86  6EB4               	movwf	4020,c	;volatile
 39276                           
 39277                           ;main.c: 117: LATDbits.LD2 = 1;
 39278  01AC88  848C               	bsf	3980,2,c	;volatile
 39279                           
 39280                           ;main.c: 118: PowerOff();
 39281  01AC8A  EC7F  F0DD         	call	_PowerOff	;wreg free
 39282                           
 39283                           ;main.c: 121: TRISA = 0b00000100;
 39284  01AC8E  0E04               	movlw	4
 39285  01AC90  6E92               	movwf	3986,c	;volatile
 39286                           
 39287                           ;main.c: 122: TRISB = 0b11011111;
 39288  01AC92  0EDF               	movlw	223
 39289  01AC94  6E93               	movwf	3987,c	;volatile
 39290                           
 39291                           ;main.c: 123: TRISC = 0x00;
 39292  01AC96  0E00               	movlw	0
 39293  01AC98  6E94               	movwf	3988,c	;volatile
 39294                           
 39295                           ;main.c: 124: TRISD = 0x00;
 39296  01AC9A  0E00               	movlw	0
 39297  01AC9C  6E95               	movwf	3989,c	;volatile
 39298                           
 39299                           ;main.c: 125: TRISE = 0x00;
 39300  01AC9E  0E00               	movlw	0
 39301  01ACA0  6E96               	movwf	3990,c	;volatile
 39302                           
 39303                           ;main.c: 126: TRISF = 0x00;
 39304  01ACA2  0E00               	movlw	0
 39305  01ACA4  6E97               	movwf	3991,c	;volatile
 39306                           
 39307                           ;main.c: 128: TRISG = 0x00;
 39308  01ACA6  0E00               	movlw	0
 39309  01ACA8  6E98               	movwf	3992,c	;volatile
 39310                           
 39311                           ;main.c: 130: LATA = 0;
 39312  01ACAA  0E00               	movlw	0
 39313  01ACAC  6E89               	movwf	3977,c	;volatile
 39314                           
 39315                           ;main.c: 131: LATB = 0;
 39316  01ACAE  0E00               	movlw	0
 39317  01ACB0  6E8A               	movwf	3978,c	;volatile
 39318                           
 39319                           ;main.c: 132: LATC = 0;
 39320  01ACB2  0E00               	movlw	0
 39321  01ACB4  6E8B               	movwf	3979,c	;volatile
 39322                           
 39323                           ;main.c: 133: LATD = 0;
 39324  01ACB6  0E00               	movlw	0
 39325  01ACB8  6E8C               	movwf	3980,c	;volatile
 39326                           
 39327                           ;main.c: 134: LATE = 0;
 39328  01ACBA  0E00               	movlw	0
 39329  01ACBC  6E8D               	movwf	3981,c	;volatile
 39330                           
 39331                           ;main.c: 136: INTCON2 = 0;
 39332  01ACBE  0E00               	movlw	0
 39333  01ACC0  6EF1               	movwf	intcon2,c	;volatile
 39334                           
 39335                           ;main.c: 137: INTCON3 = 0x10 | 0x8 | 0x20;
 39336  01ACC2  0E38               	movlw	56
 39337  01ACC4  6EF0               	movwf	intcon3,c	;volatile
 39338                           
 39339                           ;main.c: 139: TickInit();
 39340  01ACC6  EC18  F0DD         	call	_TickInit	;wreg free
 39341                           
 39342                           ;main.c: 140: InitAppConfig();
 39343  01ACCA  EC54  F0C4         	call	_InitAppConfig	;wreg free
 39344                           
 39345                           ;main.c: 141: StackInit();
 39346  01ACCE  EC1D  F0D9         	call	_StackInit	;wreg free
 39347                           
 39348                           ;main.c: 142: InitrIR();
 39349  01ACD2  EC60  F0D5         	call	_InitrIR	;wreg free
 39350                           
 39351                           ;main.c: 144: INTCON = 0x40 | 0x8 | 0x10;
 39352  01ACD6  0E58               	movlw	88
 39353  01ACD8  6EF2               	movwf	intcon,c	;volatile
 39354  01ACDA  0012               	return	
 39355  01ACDC                     __end_of_Configure:
 39356                           	opt stack 0
 39357                           tblptru	equ	0xFF8
 39358                           tblptrh	equ	0xFF7
 39359                           tblptrl	equ	0xFF6
 39360                           tablat	equ	0xFF5
 39361                           prodh	equ	0xFF4
 39362                           prodl	equ	0xFF3
 39363                           intcon	equ	0xFF2
 39364                           intcon2	equ	0xFF1
 39365                           intcon3	equ	0xFF0
 39366                           indf0	equ	0xFEF
 39367                           postinc0	equ	0xFEE
 39368                           fsr0h	equ	0xFEA
 39369                           fsr0l	equ	0xFE9
 39370                           wreg	equ	0xFE8
 39371                           indf1	equ	0xFE7
 39372                           postinc1	equ	0xFE6
 39373                           postdec1	equ	0xFE5
 39374                           fsr1h	equ	0xFE2
 39375                           fsr1l	equ	0xFE1
 39376                           indf2	equ	0xFDF
 39377                           postinc2	equ	0xFDE
 39378                           postdec2	equ	0xFDD
 39379                           fsr2h	equ	0xFDA
 39380                           fsr2l	equ	0xFD9
 39381                           status	equ	0xFD8
 39382                           
 39383 ;; *************** function _TickInit *****************
 39384 ;; Defined at:
 39385 ;;		line 79 in file "../tcpip/tick.c"
 39386 ;; Parameters:    Size  Location     Type
 39387 ;;		None
 39388 ;; Auto vars:     Size  Location     Type
 39389 ;;		None
 39390 ;; Return value:  Size  Location     Type
 39391 ;;		None               void
 39392 ;; Registers used:
 39393 ;;		wreg, status,2
 39394 ;; Tracked objects:
 39395 ;;		On entry : 0/0
 39396 ;;		On exit  : 0/0
 39397 ;;		Unchanged: 0/0
 39398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39403 ;;Total ram usage:        0 bytes
 39404 ;; Hardware stack levels used:    1
 39405 ;; Hardware stack levels required when called:   10
 39406 ;; This function calls:
 39407 ;;		Nothing
 39408 ;; This function is called by:
 39409 ;;		_Configure
 39410 ;; This function uses a non-reentrant model
 39411 ;;
 39412                           
 39413                           	psect	text93
 39414  01BA30                     __ptext93:
 39415                           	opt stack 0
 39416  01BA30                     _TickInit:
 39417                           	opt stack 19
 39418                           
 39419                           ;tick.c: 84: TMR0H = 0;
 39420                           
 39421                           ;incstack = 0
 39422  01BA30  0E00               	movlw	0
 39423  01BA32  6ED7               	movwf	4055,c	;volatile
 39424                           
 39425                           ;tick.c: 85: TMR0L = 0;
 39426  01BA34  0E00               	movlw	0
 39427  01BA36  6ED6               	movwf	4054,c	;volatile
 39428                           
 39429                           ;tick.c: 88: INTCON2bits.TMR0IP = 0;
 39430  01BA38  94F1               	bcf	intcon2,2,c	;volatile
 39431                           
 39432                           ;tick.c: 89: INTCONbits.TMR0IF = 0;
 39433  01BA3A  94F2               	bcf	intcon,2,c	;volatile
 39434                           
 39435                           ;tick.c: 90: INTCONbits.TMR0IE = 1;
 39436  01BA3C  8AF2               	bsf	intcon,5,c	;volatile
 39437                           
 39438                           ;tick.c: 93: T0CON = 0x87;
 39439  01BA3E  0E87               	movlw	135
 39440  01BA40  6ED5               	movwf	4053,c	;volatile
 39441  01BA42  0012               	return	
 39442  01BA44                     __end_of_TickInit:
 39443                           	opt stack 0
 39444                           tblptru	equ	0xFF8
 39445                           tblptrh	equ	0xFF7
 39446                           tblptrl	equ	0xFF6
 39447                           tablat	equ	0xFF5
 39448                           prodh	equ	0xFF4
 39449                           prodl	equ	0xFF3
 39450                           intcon	equ	0xFF2
 39451                           intcon2	equ	0xFF1
 39452                           intcon3	equ	0xFF0
 39453                           indf0	equ	0xFEF
 39454                           postinc0	equ	0xFEE
 39455                           fsr0h	equ	0xFEA
 39456                           fsr0l	equ	0xFE9
 39457                           wreg	equ	0xFE8
 39458                           indf1	equ	0xFE7
 39459                           postinc1	equ	0xFE6
 39460                           postdec1	equ	0xFE5
 39461                           fsr1h	equ	0xFE2
 39462                           fsr1l	equ	0xFE1
 39463                           indf2	equ	0xFDF
 39464                           postinc2	equ	0xFDE
 39465                           postdec2	equ	0xFDD
 39466                           fsr2h	equ	0xFDA
 39467                           fsr2l	equ	0xFD9
 39468                           status	equ	0xFD8
 39469                           
 39470 ;; *************** function _StackInit *****************
 39471 ;; Defined at:
 39472 ;;		line 94 in file "../tcpip/stack_task.c"
 39473 ;; Parameters:    Size  Location     Type
 39474 ;;		None
 39475 ;; Auto vars:     Size  Location     Type
 39476 ;;		None
 39477 ;; Return value:  Size  Location     Type
 39478 ;;		None               void
 39479 ;; Registers used:
 39480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39481 ;; Tracked objects:
 39482 ;;		On entry : 0/0
 39483 ;;		On exit  : 0/0
 39484 ;;		Unchanged: 0/0
 39485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39487 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39489 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39490 ;;Total ram usage:        4 bytes
 39491 ;; Hardware stack levels used:    1
 39492 ;; Hardware stack levels required when called:   16
 39493 ;; This function calls:
 39494 ;;		_ARPInit
 39495 ;;		_GenerateRandomDWORD
 39496 ;;		_LFSRSeedRand
 39497 ;;		_MACInit
 39498 ;;		_TCPInit
 39499 ;; This function is called by:
 39500 ;;		_Configure
 39501 ;; This function uses a non-reentrant model
 39502 ;;
 39503                           
 39504                           	psect	text94
 39505  01B23A                     __ptext94:
 39506                           	opt stack 0
 39507  01B23A                     _StackInit:
 39508                           	opt stack 13
 39509                           
 39510                           ;stack_task.c: 96: static bool once = 0;
 39511                           ;stack_task.c: 97: smStack = SM_STACK_IDLE;
 39512                           
 39513                           ;incstack = 0
 39514  01B23A  0E00               	movlw	0
 39515  01B23C  0100               	movlb	0	; () banked
 39516  01B23E  6FEE               	movwf	_smStack& (0+255),b
 39517                           
 39518                           ; BSR set to: 0
 39519                           ;stack_task.c: 112: if (!once) {
 39520  01B240  665F               	tstfsz	StackInit@once,c
 39521  01B242  D016               	goto	l14136
 39522                           
 39523                           ; BSR set to: 0
 39524                           ;stack_task.c: 114: LFSRSeedRand(GenerateRandomDWORD());
 39525  01B244  ECB8  F0B7         	call	_GenerateRandomDWORD	;wreg free
 39526  01B248  C118  F143         	movff	?_GenerateRandomDWORD,_StackInit$10831
 39527  01B24C  C119  F144         	movff	?_GenerateRandomDWORD+1,_StackInit$10831+1
 39528  01B250  C11A  F145         	movff	?_GenerateRandomDWORD+2,_StackInit$10831+2
 39529  01B254  C11B  F146         	movff	?_GenerateRandomDWORD+3,_StackInit$10831+3
 39530                           
 39531                           ;stack_task.c: 114: LFSRSeedRand(GenerateRandomDWORD());
 39532  01B258  C143  F10F         	movff	_StackInit$10831,LFSRSeedRand@dwSeed
 39533  01B25C  C144  F110         	movff	_StackInit$10831+1,LFSRSeedRand@dwSeed+1
 39534  01B260  C145  F111         	movff	_StackInit$10831+2,LFSRSeedRand@dwSeed+2
 39535  01B264  C146  F112         	movff	_StackInit$10831+3,LFSRSeedRand@dwSeed+3
 39536  01B268  EC6E  F0D6         	call	_LFSRSeedRand	;wreg free
 39537                           
 39538                           ;stack_task.c: 115: once = 1;
 39539  01B26C  0E01               	movlw	1
 39540  01B26E  6E5F               	movwf	StackInit@once,c
 39541  01B270                     l14136:
 39542                           
 39543                           ;stack_task.c: 116: }
 39544                           ;stack_task.c: 118: MACInit();
 39545  01B270  ECE6  F0C5         	call	_MACInit	;wreg free
 39546                           
 39547                           ;stack_task.c: 124: ARPInit();
 39548  01B274  EC6C  F0DB         	call	_ARPInit	;wreg free
 39549                           
 39550                           ;stack_task.c: 135: TCPInit();
 39551  01B278  EC6A  F0AD         	call	_TCPInit	;wreg free
 39552  01B27C  0012               	return	
 39553  01B27E                     __end_of_StackInit:
 39554                           	opt stack 0
 39555                           tblptru	equ	0xFF8
 39556                           tblptrh	equ	0xFF7
 39557                           tblptrl	equ	0xFF6
 39558                           tablat	equ	0xFF5
 39559                           prodh	equ	0xFF4
 39560                           prodl	equ	0xFF3
 39561                           intcon	equ	0xFF2
 39562                           intcon2	equ	0xFF1
 39563                           intcon3	equ	0xFF0
 39564                           indf0	equ	0xFEF
 39565                           postinc0	equ	0xFEE
 39566                           fsr0h	equ	0xFEA
 39567                           fsr0l	equ	0xFE9
 39568                           wreg	equ	0xFE8
 39569                           indf1	equ	0xFE7
 39570                           postinc1	equ	0xFE6
 39571                           postdec1	equ	0xFE5
 39572                           fsr1h	equ	0xFE2
 39573                           fsr1l	equ	0xFE1
 39574                           indf2	equ	0xFDF
 39575                           postinc2	equ	0xFDE
 39576                           postdec2	equ	0xFDD
 39577                           fsr2h	equ	0xFDA
 39578                           fsr2l	equ	0xFD9
 39579                           status	equ	0xFD8
 39580                           
 39581 ;; *************** function _TCPInit *****************
 39582 ;; Defined at:
 39583 ;;		line 332 in file "../tcpip/tcp.c"
 39584 ;; Parameters:    Size  Location     Type
 39585 ;;		None
 39586 ;; Auto vars:     Size  Location     Type
 39587 ;;  wCurrentETHA    2   63[BANK1 ] unsigned int 
 39588 ;;  wRXSize         2   61[BANK1 ] unsigned int 
 39589 ;;  wTXSize         2   59[BANK1 ] unsigned int 
 39590 ;;  ptrBaseAddre    2   57[BANK1 ] unsigned short 
 39591 ;;  i               1   66[BANK1 ] unsigned char 
 39592 ;;  vMedium         1   65[BANK1 ] unsigned char 
 39593 ;;  vSocketsAllo    1   56[BANK1 ] unsigned char 
 39594 ;; Return value:  Size  Location     Type
 39595 ;;		None               void
 39596 ;; Registers used:
 39597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39598 ;; Tracked objects:
 39599 ;;		On entry : 0/0
 39600 ;;		On exit  : 0/0
 39601 ;;		Unchanged: 0/0
 39602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 39603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39604 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39605 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39606 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39607 ;;Total ram usage:       17 bytes
 39608 ;; Hardware stack levels used:    1
 39609 ;; Hardware stack levels required when called:   15
 39610 ;; This function calls:
 39611 ;;		_CloseSocket
 39612 ;;		_GenerateRandomDWORD
 39613 ;;		_SyncTCB
 39614 ;;		_SyncTCBStub
 39615 ;;		_memset
 39616 ;; This function is called by:
 39617 ;;		_StackInit
 39618 ;; This function uses a non-reentrant model
 39619 ;;
 39620                           
 39621                           	psect	text95
 39622  015AD4                     __ptext95:
 39623                           	opt stack 0
 39624  015AD4                     _TCPInit:
 39625                           	opt stack 13
 39626                           
 39627                           ;tcp.c: 334: uint8_t i;
 39628                           ;tcp.c: 335: uint8_t vSocketsAllocated;
 39629                           ;tcp.c: 336: uint16_t wTXSize, wRXSize;
 39630                           ;tcp.c: 337: unsigned short ptrBaseAddress;
 39631                           ;tcp.c: 338: uint8_t vMedium;
 39632                           ;tcp.c: 340: uint16_t wCurrentETHAddress = (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) 
      +                          - 0ul - 0ul) + 1ul) + (1514ul+7ul)));
 39633                           
 39634                           ;incstack = 0
 39635  015AD4  0E18               	movlw	24
 39636  015AD6  0101               	movlb	1	; () banked
 39637  015AD8  6F40               	movwf	(TCPInit@wCurrentETHAddress+1)& (0+255),b
 39638  015ADA  0E98               	movlw	152
 39639  015ADC  0101               	movlb	1	; () banked
 39640  015ADE  6F3F               	movwf	TCPInit@wCurrentETHAddress& (0+255),b
 39641                           
 39642                           ; BSR set to: 1
 39643                           ;tcp.c: 355: if(NextPort == 0u)
 39644  015AE0  0100               	movlb	0	; () banked
 39645  015AE2  51E6               	movf	(_NextPort+1)& (0+255),w,b
 39646  015AE4  11E5               	iorwf	_NextPort& (0+255),w,b
 39647  015AE6  A4D8               	btfss	status,2,c
 39648  015AE8  D021               	goto	l12994
 39649                           
 39650                           ; BSR set to: 0
 39651                           ;tcp.c: 356: NextPort = (((uint16_t)GenerateRandomDWORD()) & 0x07FFu) + (1024u);
 39652  015AEA  0EFF               	movlw	255
 39653  015AEC  0101               	movlb	1	; () banked
 39654  015AEE  6F32               	movwf	??_TCPInit& (0+255),b
 39655  015AF0  0E07               	movlw	7
 39656  015AF2  6F33               	movwf	(??_TCPInit+1)& (0+255),b
 39657  015AF4  ECB8  F0B7         	call	_GenerateRandomDWORD	;wreg free
 39658  015AF8  C118  F134         	movff	?_GenerateRandomDWORD,??_TCPInit+2
 39659  015AFC  C119  F135         	movff	?_GenerateRandomDWORD+1,??_TCPInit+3
 39660  015B00  C11A  F136         	movff	?_GenerateRandomDWORD+2,??_TCPInit+4
 39661  015B04  C11B  F137         	movff	?_GenerateRandomDWORD+3,??_TCPInit+5
 39662  015B08  0101               	movlb	1	; () banked
 39663  015B0A  5132               	movf	??_TCPInit& (0+255),w,b
 39664  015B0C  0101               	movlb	1	; () banked
 39665  015B0E  1734               	andwf	(??_TCPInit+2)& (0+255),f,b
 39666  015B10  0101               	movlb	1	; () banked
 39667  015B12  5133               	movf	(??_TCPInit+1)& (0+255),w,b
 39668  015B14  0101               	movlb	1	; () banked
 39669  015B16  1735               	andwf	(??_TCPInit+3)& (0+255),f,b
 39670  015B18  0E00               	movlw	0
 39671  015B1A  0101               	movlb	1	; () banked
 39672  015B1C  2534               	addwf	(??_TCPInit+2)& (0+255),w,b
 39673  015B1E  0100               	movlb	0	; () banked
 39674  015B20  6FE5               	movwf	_NextPort& (0+255),b
 39675  015B22  0E04               	movlw	4
 39676  015B24  0101               	movlb	1	; () banked
 39677  015B26  2135               	addwfc	(??_TCPInit+3)& (0+255),w,b
 39678  015B28  0100               	movlb	0	; () banked
 39679  015B2A  6FE6               	movwf	(_NextPort+1)& (0+255),b
 39680  015B2C                     l12994:
 39681                           
 39682                           ; BSR set to: 0
 39683                           ;tcp.c: 362: memset((void*)SYNQueue, 0x00, sizeof(SYNQueue));
 39684  015B2C  0102               	movlb	2	; () banked
 39685  015B2E  0E02               	movlw	high _SYNQueue
 39686  015B30  0101               	movlb	1	; () banked
 39687  015B32  6F01               	movwf	(memset@p1+1)& (0+255),b
 39688  015B34  0102               	movlb	2	; () banked
 39689  015B36  0E00               	movlw	low _SYNQueue
 39690  015B38  0101               	movlb	1	; () banked
 39691  015B3A  6F00               	movwf	memset@p1& (0+255),b
 39692  015B3C  0E00               	movlw	0
 39693  015B3E  0101               	movlb	1	; () banked
 39694  015B40  6F03               	movwf	(memset@c+1)& (0+255),b
 39695  015B42  0E00               	movlw	0
 39696  015B44  0101               	movlb	1	; () banked
 39697  015B46  6F02               	movwf	memset@c& (0+255),b
 39698  015B48  0E00               	movlw	0
 39699  015B4A  0101               	movlb	1	; () banked
 39700  015B4C  6F05               	movwf	(memset@n+1)& (0+255),b
 39701  015B4E  0E3C               	movlw	60
 39702  015B50  0101               	movlb	1	; () banked
 39703  015B52  6F04               	movwf	memset@n& (0+255),b
 39704  015B54  ECF9  F0D9         	call	_memset	;wreg free
 39705                           
 39706                           ;tcp.c: 366: vSocketsAllocated = 0;
 39707  015B58  0E00               	movlw	0
 39708  015B5A  0101               	movlb	1	; () banked
 39709  015B5C  6F38               	movwf	TCPInit@vSocketsAllocated& (0+255),b
 39710                           
 39711                           ; BSR set to: 1
 39712                           ;tcp.c: 367: for(i = 0; i < (sizeof(TCPSocketInitializer)/sizeof(TCPSocketInitializer[0]
      +                          )); i++)
 39713  015B5E  0E00               	movlw	0
 39714  015B60  0101               	movlb	1	; () banked
 39715  015B62  6F42               	movwf	TCPInit@i& (0+255),b
 39716  015B64                     
 39717                           ; BSR set to: 1
 39718  015B64  0101               	movlb	1	; () banked
 39719  015B66  5142               	movf	TCPInit@i& (0+255),w,b
 39720  015B68  A4D8               	btfss	status,2,c
 39721  015B6A  0012               	return	
 39722                           
 39723                           ; BSR set to: 1
 39724                           ;tcp.c: 368: {
 39725                           ;tcp.c: 370: SyncTCBStub(i);
 39726                           
 39727                           ; BSR set to: 1
 39728                           
 39729                           ; BSR set to: 1
 39730  015B6C  0101               	movlb	1	; () banked
 39731  015B6E  5142               	movf	TCPInit@i& (0+255),w,b
 39732  015B70  EC30  F0D0         	call	_SyncTCBStub
 39733                           
 39734                           ;tcp.c: 372: vMedium = TCPSocketInitializer[i].vMemoryMedium;
 39735  015B74  0101               	movlb	1	; () banked
 39736  015B76  5142               	movf	TCPInit@i& (0+255),w,b
 39737  015B78  0D06               	mullw	6
 39738  015B7A  0E01               	movlw	1
 39739  015B7C  26F3               	addwf	prodl,f,c
 39740  015B7E  0E00               	movlw	0
 39741  015B80  22F4               	addwfc	prodh,f,c
 39742  015B82  0E01               	movlw	low _TCPSocketInitializer
 39743  015B84  24F3               	addwf	prodl,w,c
 39744  015B86  6EF6               	movwf	tblptrl,c
 39745  015B88  0EFF               	movlw	high _TCPSocketInitializer
 39746  015B8A  20F4               	addwfc	prodh,w,c
 39747  015B8C  6EF7               	movwf	tblptrh,c
 39748  015B8E                     	if	1	;There are 3 active tblptr bytes
 39749  015B8E  6AF8               	clrf	tblptru,c
 39750  015B90  0E00               	movlw	low (__mediumconst shr (0+16))
 39751  015B92  22F8               	addwfc	tblptru,f,c
 39752  015B94                     	endif
 39753  015B94  0008               	tblrd		*
 39754  015B96  0101               	movlb	1	; () banked
 39755  015B98  CFF5 F141          	movff	tablat,TCPInit@vMedium
 39756                           
 39757                           ; BSR set to: 1
 39758                           ;tcp.c: 373: wTXSize = TCPSocketInitializer[i].wTXBufferSize;
 39759  015B9C  0101               	movlb	1	; () banked
 39760  015B9E  5142               	movf	TCPInit@i& (0+255),w,b
 39761  015BA0  0D06               	mullw	6
 39762  015BA2  0E02               	movlw	2
 39763  015BA4  26F3               	addwf	prodl,f,c
 39764  015BA6  0E00               	movlw	0
 39765  015BA8  22F4               	addwfc	prodh,f,c
 39766  015BAA  0E01               	movlw	low _TCPSocketInitializer
 39767  015BAC  24F3               	addwf	prodl,w,c
 39768  015BAE  6EF6               	movwf	tblptrl,c
 39769  015BB0  0EFF               	movlw	high _TCPSocketInitializer
 39770  015BB2  20F4               	addwfc	prodh,w,c
 39771  015BB4  6EF7               	movwf	tblptrh,c
 39772  015BB6                     	if	1	;There are 3 active tblptr bytes
 39773  015BB6  6AF8               	clrf	tblptru,c
 39774  015BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 39775  015BBA  22F8               	addwfc	tblptru,f,c
 39776  015BBC                     	endif
 39777  015BBC  0009               	tblrd		*+
 39778  015BBE  0101               	movlb	1	; () banked
 39779  015BC0  CFF5 F13B          	movff	tablat,TCPInit@wTXSize
 39780  015BC4  000A               	tblrd		*-
 39781  015BC6  0101               	movlb	1	; () banked
 39782  015BC8  CFF5 F13C          	movff	tablat,TCPInit@wTXSize+1
 39783                           
 39784                           ; BSR set to: 1
 39785                           ;tcp.c: 374: wRXSize = TCPSocketInitializer[i].wRXBufferSize;
 39786  015BCC  0101               	movlb	1	; () banked
 39787  015BCE  5142               	movf	TCPInit@i& (0+255),w,b
 39788  015BD0  0D06               	mullw	6
 39789  015BD2  0E04               	movlw	4
 39790  015BD4  26F3               	addwf	prodl,f,c
 39791  015BD6  0E00               	movlw	0
 39792  015BD8  22F4               	addwfc	prodh,f,c
 39793  015BDA  0E01               	movlw	low _TCPSocketInitializer
 39794  015BDC  24F3               	addwf	prodl,w,c
 39795  015BDE  6EF6               	movwf	tblptrl,c
 39796  015BE0  0EFF               	movlw	high _TCPSocketInitializer
 39797  015BE2  20F4               	addwfc	prodh,w,c
 39798  015BE4  6EF7               	movwf	tblptrh,c
 39799  015BE6                     	if	1	;There are 3 active tblptr bytes
 39800  015BE6  6AF8               	clrf	tblptru,c
 39801  015BE8  0E00               	movlw	low (__mediumconst shr (0+16))
 39802  015BEA  22F8               	addwfc	tblptru,f,c
 39803  015BEC                     	endif
 39804  015BEC  0009               	tblrd		*+
 39805  015BEE  0101               	movlb	1	; () banked
 39806  015BF0  CFF5 F13D          	movff	tablat,TCPInit@wRXSize
 39807  015BF4  000A               	tblrd		*-
 39808  015BF6  0101               	movlb	1	; () banked
 39809  015BF8  CFF5 F13E          	movff	tablat,TCPInit@wRXSize+1
 39810                           
 39811                           ;tcp.c: 376: switch(vMedium)
 39812  015BFC  D029               	goto	l13016
 39813  015BFE                     l878:
 39814                           
 39815                           ; BSR set to: 1
 39816                           ;tcp.c: 380: ptrBaseAddress = wCurrentETHAddress;
 39817  015BFE  C13F  F139         	movff	TCPInit@wCurrentETHAddress,TCPInit@ptrBaseAddress
 39818  015C02  C140  F13A         	movff	TCPInit@wCurrentETHAddress+1,TCPInit@ptrBaseAddress+1
 39819                           
 39820                           ; BSR set to: 1
 39821                           ;tcp.c: 381: wCurrentETHAddress += sizeof(TCB) + wTXSize+1 + wRXSize+1;
 39822  015C06  0101               	movlb	1	; () banked
 39823  015C08  C13B  F132         	movff	TCPInit@wTXSize,??_TCPInit
 39824  015C0C  0101               	movlb	1	; () banked
 39825  015C0E  C13C  F133         	movff	TCPInit@wTXSize+1,??_TCPInit+1
 39826  015C12  0101               	movlb	1	; () banked
 39827  015C14  513D               	movf	TCPInit@wRXSize& (0+255),w,b
 39828  015C16  0101               	movlb	1	; () banked
 39829  015C18  2732               	addwf	??_TCPInit& (0+255),f,b
 39830  015C1A  0101               	movlb	1	; () banked
 39831  015C1C  513E               	movf	(TCPInit@wRXSize+1)& (0+255),w,b
 39832  015C1E  0101               	movlb	1	; () banked
 39833  015C20  2333               	addwfc	(??_TCPInit+1)& (0+255),f,b
 39834  015C22  0E29               	movlw	41
 39835  015C24  0101               	movlb	1	; () banked
 39836  015C26  2732               	addwf	??_TCPInit& (0+255),f,b
 39837  015C28  0E00               	movlw	0
 39838  015C2A  2333               	addwfc	(??_TCPInit+1)& (0+255),f,b
 39839  015C2C  0101               	movlb	1	; () banked
 39840  015C2E  5132               	movf	??_TCPInit& (0+255),w,b
 39841  015C30  0101               	movlb	1	; () banked
 39842  015C32  273F               	addwf	TCPInit@wCurrentETHAddress& (0+255),f,b
 39843  015C34  0101               	movlb	1	; () banked
 39844  015C36  5133               	movf	(??_TCPInit+1)& (0+255),w,b
 39845  015C38  0101               	movlb	1	; () banked
 39846  015C3A  2340               	addwfc	(TCPInit@wCurrentETHAddress+1)& (0+255),f,b
 39847  015C3C                     l13014:
 39848                           
 39849                           ; BSR set to: 1
 39850  015C3C  0EFD               	movlw	253
 39851  015C3E  0101               	movlb	1	; () banked
 39852  015C40  5D3F               	subwf	TCPInit@wCurrentETHAddress& (0+255),w,b
 39853  015C42  0E1F               	movlw	31
 39854  015C44  0101               	movlb	1	; () banked
 39855  015C46  5940               	subwfb	(TCPInit@wCurrentETHAddress+1)& (0+255),w,b
 39856  015C48  A0D8               	btfss	status,0,c
 39857  015C4A  D008               	goto	l882
 39858  015C4C  D7F7               	goto	l13014
 39859  015C4E                     l884:
 39860  015C4E  D7FF               	goto	l884
 39861  015C50                     l13016:
 39862  015C50  0101               	movlb	1	; () banked
 39863  015C52  5141               	movf	TCPInit@vMedium& (0+255),w,b
 39864                           
 39865                           ; Switch size 1, requested type "space"
 39866                           ; Number of cases is 1, Range of values is 0 to 0
 39867                           ; switch strategies available:
 39868                           ; Name         Instructions Cycles
 39869                           ; simple_byte            4     3 (average)
 39870                           ;	Chosen strategy is simple_byte
 39871  015C54  0A00               	xorlw	0	; case 0
 39872  015C56  B4D8               	btfsc	status,2,c
 39873  015C58  D7D2               	goto	l878
 39874  015C5A  D7F9               	goto	l884
 39875  015C5C                     l882:
 39876                           
 39877                           ;tcp.c: 416: MyTCBStub.vMemoryMedium = vMedium;
 39878  015C5C  C141  F1FB         	movff	TCPInit@vMedium,_MyTCBStub+27
 39879                           
 39880                           ;tcp.c: 417: MyTCBStub.bufferTxStart = ptrBaseAddress + sizeof(TCB);
 39881  015C60  0E27               	movlw	39
 39882  015C62  0101               	movlb	1	; () banked
 39883  015C64  2539               	addwf	TCPInit@ptrBaseAddress& (0+255),w,b
 39884  015C66  0101               	movlb	1	; () banked
 39885  015C68  6FE0               	movwf	_MyTCBStub& (0+255),b
 39886  015C6A  0E00               	movlw	0
 39887  015C6C  0101               	movlb	1	; () banked
 39888  015C6E  213A               	addwfc	(TCPInit@ptrBaseAddress+1)& (0+255),w,b
 39889  015C70  0101               	movlb	1	; () banked
 39890  015C72  6FE1               	movwf	(_MyTCBStub+1)& (0+255),b
 39891                           
 39892                           ;tcp.c: 418: MyTCBStub.bufferRxStart = MyTCBStub.bufferTxStart + wTXSize + 1;
 39893  015C74  0101               	movlb	1	; () banked
 39894  015C76  C1E0  F132         	movff	_MyTCBStub,??_TCPInit
 39895  015C7A  0101               	movlb	1	; () banked
 39896  015C7C  C1E1  F133         	movff	_MyTCBStub+1,??_TCPInit+1
 39897  015C80  0101               	movlb	1	; () banked
 39898  015C82  513B               	movf	TCPInit@wTXSize& (0+255),w,b
 39899  015C84  0101               	movlb	1	; () banked
 39900  015C86  2732               	addwf	??_TCPInit& (0+255),f,b
 39901  015C88  0101               	movlb	1	; () banked
 39902  015C8A  513C               	movf	(TCPInit@wTXSize+1)& (0+255),w,b
 39903  015C8C  0101               	movlb	1	; () banked
 39904  015C8E  2333               	addwfc	(??_TCPInit+1)& (0+255),f,b
 39905  015C90  0E01               	movlw	1
 39906  015C92  0101               	movlb	1	; () banked
 39907  015C94  2532               	addwf	??_TCPInit& (0+255),w,b
 39908  015C96  0101               	movlb	1	; () banked
 39909  015C98  6FE2               	movwf	(_MyTCBStub+2)& (0+255),b
 39910  015C9A  0E00               	movlw	0
 39911  015C9C  0101               	movlb	1	; () banked
 39912  015C9E  2133               	addwfc	(??_TCPInit+1)& (0+255),w,b
 39913  015CA0  0101               	movlb	1	; () banked
 39914  015CA2  6FE3               	movwf	(_MyTCBStub+3)& (0+255),b
 39915                           
 39916                           ;tcp.c: 419: MyTCBStub.bufferEnd = MyTCBStub.bufferRxStart + wRXSize;
 39917  015CA4  0101               	movlb	1	; () banked
 39918  015CA6  513D               	movf	TCPInit@wRXSize& (0+255),w,b
 39919  015CA8  0101               	movlb	1	; () banked
 39920  015CAA  25E2               	addwf	(_MyTCBStub+2)& (0+255),w,b
 39921  015CAC  0101               	movlb	1	; () banked
 39922  015CAE  6FE4               	movwf	(_MyTCBStub+4)& (0+255),b
 39923  015CB0  0101               	movlb	1	; () banked
 39924  015CB2  513E               	movf	(TCPInit@wRXSize+1)& (0+255),w,b
 39925  015CB4  0101               	movlb	1	; () banked
 39926  015CB6  21E3               	addwfc	(_MyTCBStub+3)& (0+255),w,b
 39927  015CB8  0101               	movlb	1	; () banked
 39928  015CBA  6FE5               	movwf	(_MyTCBStub+5)& (0+255),b
 39929                           
 39930                           ; BSR set to: 1
 39931                           ;tcp.c: 420: MyTCBStub.smState = TCP_CLOSED;
 39932  015CBC  0E0D               	movlw	13
 39933  015CBE  0101               	movlb	1	; () banked
 39934  015CC0  6FF6               	movwf	(_MyTCBStub+22)& (0+255),b
 39935                           
 39936                           ; BSR set to: 1
 39937                           ;tcp.c: 421: MyTCBStub.Flags.bServer = 0;
 39938  015CC2  0101               	movlb	1	; () banked
 39939  015CC4  97F7               	bcf	(_MyTCBStub+23)& (0+255),3,b
 39940                           
 39941                           ; BSR set to: 1
 39942                           ;tcp.c: 426: SyncTCB();
 39943  015CC6  EC10  F0CB         	call	_SyncTCB	;wreg free
 39944                           
 39945                           ;tcp.c: 427: MyTCB.vSocketPurpose = TCPSocketInitializer[i].vSocketPurpose;
 39946  015CCA  0101               	movlb	1	; () banked
 39947  015CCC  5142               	movf	TCPInit@i& (0+255),w,b
 39948  015CCE  0D06               	mullw	6
 39949  015CD0  0E01               	movlw	low _TCPSocketInitializer
 39950  015CD2  24F3               	addwf	prodl,w,c
 39951  015CD4  6EF6               	movwf	tblptrl,c
 39952  015CD6  0EFF               	movlw	high _TCPSocketInitializer
 39953  015CD8  20F4               	addwfc	prodh,w,c
 39954  015CDA  6EF7               	movwf	tblptrh,c
 39955  015CDC                     	if	1	;There are 3 active tblptr bytes
 39956  015CDC  6AF8               	clrf	tblptru,c
 39957  015CDE  0E00               	movlw	low (__mediumconst shr (0+16))
 39958  015CE0  22F8               	addwfc	tblptru,f,c
 39959  015CE2                     	endif
 39960  015CE2  0008               	tblrd		*
 39961  015CE4  0101               	movlb	1	; () banked
 39962  015CE6  CFF5 F1DF          	movff	tablat,_MyTCB+38
 39963                           
 39964                           ; BSR set to: 1
 39965                           ;tcp.c: 428: CloseSocket();
 39966  015CEA  ECF0  F0CD         	call	_CloseSocket	;wreg free
 39967  015CEE  0101               	movlb	1	; () banked
 39968  015CF0  2B42               	incf	TCPInit@i& (0+255),f,b
 39969  015CF2  D738               	goto	L41
 39970  015CF4                     __end_of_TCPInit:
 39971                           	opt stack 0
 39972                           tblptru	equ	0xFF8
 39973                           tblptrh	equ	0xFF7
 39974                           tblptrl	equ	0xFF6
 39975                           tablat	equ	0xFF5
 39976                           prodh	equ	0xFF4
 39977                           prodl	equ	0xFF3
 39978                           intcon	equ	0xFF2
 39979                           intcon2	equ	0xFF1
 39980                           intcon3	equ	0xFF0
 39981                           indf0	equ	0xFEF
 39982                           postinc0	equ	0xFEE
 39983                           fsr0h	equ	0xFEA
 39984                           fsr0l	equ	0xFE9
 39985                           wreg	equ	0xFE8
 39986                           indf1	equ	0xFE7
 39987                           postinc1	equ	0xFE6
 39988                           postdec1	equ	0xFE5
 39989                           fsr1h	equ	0xFE2
 39990                           fsr1l	equ	0xFE1
 39991                           indf2	equ	0xFDF
 39992                           postinc2	equ	0xFDE
 39993                           postdec2	equ	0xFDD
 39994                           fsr2h	equ	0xFDA
 39995                           fsr2l	equ	0xFD9
 39996                           status	equ	0xFD8
 39997                           
 39998 ;; *************** function _SyncTCBStub *****************
 39999 ;; Defined at:
 40000 ;;		line 257 in file "../tcpip/tcp.c"
 40001 ;; Parameters:    Size  Location     Type
 40002 ;;  hTCP            1    wreg     unsigned char 
 40003 ;; Auto vars:     Size  Location     Type
 40004 ;;  hTCP            1   32[BANK1 ] unsigned char 
 40005 ;; Return value:  Size  Location     Type
 40006 ;;		None               void
 40007 ;; Registers used:
 40008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40009 ;; Tracked objects:
 40010 ;;		On entry : 0/0
 40011 ;;		On exit  : 0/0
 40012 ;;		Unchanged: 0/0
 40013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40015 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40016 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40017 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40018 ;;Total ram usage:        3 bytes
 40019 ;; Hardware stack levels used:    1
 40020 ;; Hardware stack levels required when called:   11
 40021 ;; This function calls:
 40022 ;;		_memcpy
 40023 ;; This function is called by:
 40024 ;;		_TCPInit
 40025 ;;		_TCPOpen
 40026 ;;		_TCPIsConnected
 40027 ;;		_TCPDisconnect
 40028 ;;		_TCPClose
 40029 ;;		_TCPFlush
 40030 ;;		_TCPIsPutReady
 40031 ;;		_TCPPutArray
 40032 ;;		_TCPIsGetReady
 40033 ;;		_TCPGetArray
 40034 ;;		_TCPTick
 40035 ;;		_FindMatchingSocket
 40036 ;;		_TCPWasReset
 40037 ;;		_TCPGetRemoteInfo
 40038 ;;		_TCPPut
 40039 ;;		_TCPPutROMArray
 40040 ;;		_TCPGetTxFIFOFull
 40041 ;;		_TCPDiscard
 40042 ;;		_TCPGet
 40043 ;;		_TCPGetRxFIFOFree
 40044 ;;		_TCPPeekArray
 40045 ;;		_TCPFindArrayEx
 40046 ;;		_TCPFindROMArrayEx
 40047 ;;		_TCPAdjustFIFOSize
 40048 ;; This function uses a non-reentrant model
 40049 ;;
 40050                           
 40051                           	psect	text96
 40052  01A060                     __ptext96:
 40053                           	opt stack 0
 40054  01A060                     _SyncTCBStub:
 40055                           	opt stack 16
 40056                           
 40057                           ; BSR set to: 1
 40058                           ;incstack = 0
 40059                           ;SyncTCBStub@hTCP stored from wreg
 40060  01A060  0101               	movlb	1	; () banked
 40061  01A062  6F20               	movwf	SyncTCBStub@hTCP& (0+255),b
 40062                           
 40063                           ; BSR set to: 1
 40064                           ;tcp.c: 259: if(hCurrentTCP == hTCP)
 40065  01A064  0101               	movlb	1	; () banked
 40066  01A066  5120               	movf	SyncTCBStub@hTCP& (0+255),w,b
 40067  01A068  0101               	movlb	1	; () banked
 40068  01A06A  63FD               	cpfseq	_hCurrentTCP& (0+255),b
 40069  01A06C  D001               	goto	l12002
 40070  01A06E  0012               	return	
 40071  01A070                     l12002:
 40072                           
 40073                           ; BSR set to: 1
 40074                           ;tcp.c: 262: if(hCurrentTCP != (0xFE))
 40075  01A070  0101               	movlb	1	; () banked
 40076  01A072  51FD               	movf	_hCurrentTCP& (0+255),w,b
 40077  01A074  0AFE               	xorlw	254
 40078  01A076  B4D8               	btfsc	status,2,c
 40079  01A078  D01D               	goto	l12006
 40080                           
 40081                           ; BSR set to: 1
 40082                           ;tcp.c: 263: {
 40083                           ;tcp.c: 265: memcpy((void*)&TCBStubs[hCurrentTCP], (void*)&MyTCBStub, sizeof(MyTCBStub))
      +                          ;
 40084  01A07A  0101               	movlb	1	; () banked
 40085  01A07C  51FD               	movf	_hCurrentTCP& (0+255),w,b
 40086  01A07E  0D1C               	mullw	28
 40087  01A080  0102               	movlb	2	; () banked
 40088  01A082  0E6F               	movlw	low _TCBStubs
 40089  01A084  24F3               	addwf	prodl,w,c
 40090  01A086  0101               	movlb	1	; () banked
 40091  01A088  6F14               	movwf	memcpy@d1& (0+255),b
 40092  01A08A  0102               	movlb	2	; () banked
 40093  01A08C  0E02               	movlw	high _TCBStubs
 40094  01A08E  20F4               	addwfc	prodh,w,c
 40095  01A090  0101               	movlb	1	; () banked
 40096  01A092  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 40097  01A094  0101               	movlb	1	; () banked
 40098  01A096  0E01               	movlw	high _MyTCBStub
 40099  01A098  0101               	movlb	1	; () banked
 40100  01A09A  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 40101  01A09C  0101               	movlb	1	; () banked
 40102  01A09E  0EE0               	movlw	low _MyTCBStub
 40103  01A0A0  0101               	movlb	1	; () banked
 40104  01A0A2  6F16               	movwf	memcpy@s1& (0+255),b
 40105  01A0A4  0E00               	movlw	0
 40106  01A0A6  0101               	movlb	1	; () banked
 40107  01A0A8  6F19               	movwf	(memcpy@n+1)& (0+255),b
 40108  01A0AA  0E1C               	movlw	28
 40109  01A0AC  0101               	movlb	1	; () banked
 40110  01A0AE  6F18               	movwf	memcpy@n& (0+255),b
 40111  01A0B0  ECCF  F0D5         	call	_memcpy	;wreg free
 40112  01A0B4                     l12006:
 40113                           
 40114                           ;tcp.c: 266: }
 40115                           ;tcp.c: 268: hCurrentTCP = hTCP;
 40116  01A0B4  C120  F1FD         	movff	SyncTCBStub@hTCP,_hCurrentTCP
 40117                           
 40118                           ;tcp.c: 270: if(hTCP == (0xFE))
 40119  01A0B8  0101               	movlb	1	; () banked
 40120  01A0BA  5120               	movf	SyncTCBStub@hTCP& (0+255),w,b
 40121  01A0BC  0AFE               	xorlw	254
 40122  01A0BE  B4D8               	btfsc	status,2,c
 40123  01A0C0  0012               	return	
 40124                           
 40125                           ; BSR set to: 1
 40126                           ;tcp.c: 274: memcpy((void*)&MyTCBStub, (void*)&TCBStubs[hTCP], sizeof(MyTCBStub));
 40127                           
 40128                           ; BSR set to: 1
 40129                           
 40130                           ; BSR set to: 1
 40131                           ;tcp.c: 271: return;
 40132  01A0C2  0101               	movlb	1	; () banked
 40133  01A0C4  0E01               	movlw	high _MyTCBStub
 40134  01A0C6  0101               	movlb	1	; () banked
 40135  01A0C8  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 40136  01A0CA  0101               	movlb	1	; () banked
 40137  01A0CC  0EE0               	movlw	low _MyTCBStub
 40138  01A0CE  0101               	movlb	1	; () banked
 40139  01A0D0  6F14               	movwf	memcpy@d1& (0+255),b
 40140  01A0D2  0101               	movlb	1	; () banked
 40141  01A0D4  5120               	movf	SyncTCBStub@hTCP& (0+255),w,b
 40142  01A0D6  0D1C               	mullw	28
 40143  01A0D8  0E6F               	movlw	low _TCBStubs
 40144  01A0DA  0101               	movlb	1	; () banked
 40145  01A0DC  6F1E               	movwf	??_SyncTCBStub& (0+255),b
 40146  01A0DE  0E02               	movlw	high _TCBStubs
 40147  01A0E0  6F1F               	movwf	(??_SyncTCBStub+1)& (0+255),b
 40148  01A0E2  50F3               	movf	prodl,w,c
 40149  01A0E4  0101               	movlb	1	; () banked
 40150  01A0E6  271E               	addwf	??_SyncTCBStub& (0+255),f,b
 40151  01A0E8  50F4               	movf	prodh,w,c
 40152  01A0EA  0101               	movlb	1	; () banked
 40153  01A0EC  231F               	addwfc	(??_SyncTCBStub+1)& (0+255),f,b
 40154  01A0EE  C11E  F116         	movff	??_SyncTCBStub,memcpy@s1
 40155  01A0F2  C11F  F117         	movff	??_SyncTCBStub+1,memcpy@s1+1
 40156  01A0F6  0E00               	movlw	0
 40157  01A0F8  0101               	movlb	1	; () banked
 40158  01A0FA  6F19               	movwf	(memcpy@n+1)& (0+255),b
 40159  01A0FC  0E1C               	movlw	28
 40160  01A0FE  0101               	movlb	1	; () banked
 40161  01A100  6F18               	movwf	memcpy@n& (0+255),b
 40162  01A102  ECCF  F0D5         	call	_memcpy	;wreg free
 40163  01A106  0012               	return	
 40164  01A108                     __end_of_SyncTCBStub:
 40165                           	opt stack 0
 40166                           tblptru	equ	0xFF8
 40167                           tblptrh	equ	0xFF7
 40168                           tblptrl	equ	0xFF6
 40169                           tablat	equ	0xFF5
 40170                           prodh	equ	0xFF4
 40171                           prodl	equ	0xFF3
 40172                           intcon	equ	0xFF2
 40173                           intcon2	equ	0xFF1
 40174                           intcon3	equ	0xFF0
 40175                           indf0	equ	0xFEF
 40176                           postinc0	equ	0xFEE
 40177                           fsr0h	equ	0xFEA
 40178                           fsr0l	equ	0xFE9
 40179                           wreg	equ	0xFE8
 40180                           indf1	equ	0xFE7
 40181                           postinc1	equ	0xFE6
 40182                           postdec1	equ	0xFE5
 40183                           fsr1h	equ	0xFE2
 40184                           fsr1l	equ	0xFE1
 40185                           indf2	equ	0xFDF
 40186                           postinc2	equ	0xFDE
 40187                           postdec2	equ	0xFDD
 40188                           fsr2h	equ	0xFDA
 40189                           fsr2l	equ	0xFD9
 40190                           status	equ	0xFD8
 40191                           
 40192 ;; *************** function _GenerateRandomDWORD *****************
 40193 ;; Defined at:
 40194 ;;		line 196 in file "../tcpip/helpers.c"
 40195 ;; Parameters:    Size  Location     Type
 40196 ;;		None
 40197 ;; Auto vars:     Size  Location     Type
 40198 ;;  TMR0LSave       1   41[BANK1 ] unsigned char 
 40199 ;;  TMR0HSave       1   40[BANK1 ] unsigned char 
 40200 ;;  T0CONSave       1   39[BANK1 ] unsigned char 
 40201 ;;  ADCON2Save      1   38[BANK1 ] unsigned char 
 40202 ;;  ADCON0Save      1   37[BANK1 ] unsigned char 
 40203 ;;  randomResult    4   44[BANK1 ] struct .
 40204 ;;  dwTotalTime     4   32[BANK1 ] unsigned long 
 40205 ;;  wTime           2   48[BANK1 ] unsigned int 
 40206 ;;  wLastValue      2   42[BANK1 ] unsigned int 
 40207 ;;  w               2   30[BANK1 ] unsigned int 
 40208 ;;  vBitCount       1   36[BANK1 ] unsigned char 
 40209 ;; Return value:  Size  Location     Type
 40210 ;;                  4   24[BANK1 ] unsigned long 
 40211 ;; Registers used:
 40212 ;;		wreg, status,2, status,0, cstack
 40213 ;; Tracked objects:
 40214 ;;		On entry : 0/0
 40215 ;;		On exit  : 0/0
 40216 ;;		Unchanged: 0/0
 40217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40218 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40219 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40220 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40221 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40222 ;;Total ram usage:       26 bytes
 40223 ;; Hardware stack levels used:    1
 40224 ;; Hardware stack levels required when called:   12
 40225 ;; This function calls:
 40226 ;;		_LFSRRand
 40227 ;;		_LFSRSeedRand
 40228 ;; This function is called by:
 40229 ;;		_StackInit
 40230 ;;		_TCPInit
 40231 ;; This function uses a non-reentrant model
 40232 ;;
 40233                           
 40234                           	psect	text97
 40235  016F70                     __ptext97:
 40236                           	opt stack 0
 40237  016F70                     _GenerateRandomDWORD:
 40238                           	opt stack 15
 40239                           
 40240                           ;helpers.c: 198: uint8_t vBitCount;
 40241                           ;helpers.c: 199: uint16_t w, wTime, wLastValue;
 40242                           ;helpers.c: 200: uint32_t dwTotalTime;
 40243                           ;helpers.c: 201: union
 40244                           ;helpers.c: 202: {
 40245                           ;helpers.c: 203: uint32_t dw;
 40246                           ;helpers.c: 204: uint16_t w[2];
 40247                           ;helpers.c: 205: } randomResult;
 40248                           ;helpers.c: 208: {
 40249                           ;helpers.c: 209: uint8_t ADCON0Save, ADCON2Save;
 40250                           ;helpers.c: 210: uint8_t T0CONSave, TMR0HSave, TMR0LSave;
 40251                           ;helpers.c: 213: ADCON0Save = ADCON0;
 40252                           
 40253                           ;incstack = 0
 40254  016F70  CFC2 F125          	movff	4034,GenerateRandomDWORD@ADCON0Save	;volatile
 40255                           
 40256                           ;helpers.c: 214: ADCON2Save = ADCON2;
 40257  016F74  CFC0 F126          	movff	4032,GenerateRandomDWORD@ADCON2Save	;volatile
 40258                           
 40259                           ;helpers.c: 215: T0CONSave = T0CON;
 40260  016F78  CFD5 F127          	movff	4053,GenerateRandomDWORD@T0CONSave	;volatile
 40261                           
 40262                           ;helpers.c: 216: TMR0LSave = TMR0L;
 40263  016F7C  CFD6 F129          	movff	4054,GenerateRandomDWORD@TMR0LSave	;volatile
 40264                           
 40265                           ;helpers.c: 217: TMR0HSave = TMR0H;
 40266  016F80  CFD7 F128          	movff	4055,GenerateRandomDWORD@TMR0HSave	;volatile
 40267                           
 40268                           ;helpers.c: 220: ADCON0 = 0x01;
 40269  016F84  0E01               	movlw	1
 40270  016F86  6EC2               	movwf	4034,c	;volatile
 40271                           
 40272                           ;helpers.c: 221: ADCON2 = 0x3F;
 40273  016F88  0E3F               	movlw	63
 40274  016F8A  6EC0               	movwf	4032,c	;volatile
 40275                           
 40276                           ;helpers.c: 222: T0CON = 0x88;
 40277  016F8C  0E88               	movlw	136
 40278  016F8E  6ED5               	movwf	4053,c	;volatile
 40279                           
 40280                           ;helpers.c: 223: vBitCount = 0;
 40281  016F90  0E00               	movlw	0
 40282  016F92  0101               	movlb	1	; () banked
 40283  016F94  6F24               	movwf	GenerateRandomDWORD@vBitCount& (0+255),b
 40284                           
 40285                           ;helpers.c: 224: dwTotalTime = 0;
 40286  016F96  0E00               	movlw	0
 40287  016F98  0101               	movlb	1	; () banked
 40288  016F9A  6F20               	movwf	GenerateRandomDWORD@dwTotalTime& (0+255),b
 40289  016F9C  0E00               	movlw	0
 40290  016F9E  0101               	movlb	1	; () banked
 40291  016FA0  6F21               	movwf	(GenerateRandomDWORD@dwTotalTime+1)& (0+255),b
 40292  016FA2  0E00               	movlw	0
 40293  016FA4  0101               	movlb	1	; () banked
 40294  016FA6  6F22               	movwf	(GenerateRandomDWORD@dwTotalTime+2)& (0+255),b
 40295  016FA8  0E00               	movlw	0
 40296  016FAA  0101               	movlb	1	; () banked
 40297  016FAC  6F23               	movwf	(GenerateRandomDWORD@dwTotalTime+3)& (0+255),b
 40298                           
 40299                           ;helpers.c: 225: wLastValue = 0;
 40300  016FAE  0E00               	movlw	0
 40301  016FB0  0101               	movlb	1	; () banked
 40302  016FB2  6F2B               	movwf	(GenerateRandomDWORD@wLastValue+1)& (0+255),b
 40303  016FB4  0E00               	movlw	0
 40304  016FB6  0101               	movlb	1	; () banked
 40305  016FB8  6F2A               	movwf	GenerateRandomDWORD@wLastValue& (0+255),b
 40306                           
 40307                           ; BSR set to: 1
 40308                           ;helpers.c: 226: randomResult.dw = LFSRRand();
 40309  016FBA  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40310  016FBE  0101               	movlb	1	; () banked
 40311  016FC0  C100  F12C         	movff	?_LFSRRand,GenerateRandomDWORD@randomResult
 40312  016FC4  0101               	movlb	1	; () banked
 40313  016FC6  C101  F12D         	movff	?_LFSRRand+1,GenerateRandomDWORD@randomResult+1
 40314  016FCA  0101               	movlb	1	; () banked
 40315  016FCC  6B2E               	clrf	(GenerateRandomDWORD@randomResult+2)& (0+255),b
 40316  016FCE  0101               	movlb	1	; () banked
 40317  016FD0  6B2F               	clrf	(GenerateRandomDWORD@randomResult+3)& (0+255),b
 40318  016FD2                     l11954:
 40319                           
 40320                           ; BSR set to: 1
 40321                           ;helpers.c: 228: {
 40322                           ;helpers.c: 230: TMR0H = 0x00;
 40323  016FD2  0E00               	movlw	0
 40324  016FD4  6ED7               	movwf	4055,c	;volatile
 40325                           
 40326                           ; BSR set to: 1
 40327                           ;helpers.c: 231: TMR0L = 0x00;
 40328  016FD6  0E00               	movlw	0
 40329  016FD8  6ED6               	movwf	4054,c	;volatile
 40330                           
 40331                           ; BSR set to: 1
 40332                           ;helpers.c: 232: ADCON0bits.GO = 1;
 40333  016FDA  82C2               	bsf	4034,1,c	;volatile
 40334  016FDC  0004               	clrwdt		;# 
 40335  016FDE                     l542:
 40336  016FDE  B2C2               	btfsc	4034,1,c	;volatile
 40337  016FE0  D7FE               	goto	l542
 40338                           
 40339                           ;helpers.c: 235: ((uint8_t*)&wTime)[0] = TMR0L;
 40340  016FE2  CFD6 F130          	movff	4054,GenerateRandomDWORD@wTime	;volatile
 40341                           
 40342                           ;helpers.c: 236: ((uint8_t*)&wTime)[1] = TMR0H;
 40343  016FE6  CFD7 F131          	movff	4055,GenerateRandomDWORD@wTime+1	;volatile
 40344                           
 40345                           ;helpers.c: 237: w = LFSRRand();
 40346  016FEA  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40347  016FEE  0101               	movlb	1	; () banked
 40348  016FF0  C100  F11E         	movff	?_LFSRRand,GenerateRandomDWORD@w
 40349  016FF4  0101               	movlb	1	; () banked
 40350  016FF6  C101  F11F         	movff	?_LFSRRand+1,GenerateRandomDWORD@w+1
 40351                           
 40352                           ; BSR set to: 1
 40353                           ;helpers.c: 240: dwTotalTime += wTime;
 40354  016FFA  0101               	movlb	1	; () banked
 40355  016FFC  5130               	movf	GenerateRandomDWORD@wTime& (0+255),w,b
 40356  016FFE  0101               	movlb	1	; () banked
 40357  017000  2720               	addwf	GenerateRandomDWORD@dwTotalTime& (0+255),f,b
 40358  017002  0101               	movlb	1	; () banked
 40359  017004  5131               	movf	(GenerateRandomDWORD@wTime+1)& (0+255),w,b
 40360  017006  0101               	movlb	1	; () banked
 40361  017008  2321               	addwfc	(GenerateRandomDWORD@dwTotalTime+1)& (0+255),f,b
 40362  01700A  0E00               	movlw	0
 40363  01700C  0101               	movlb	1	; () banked
 40364  01700E  2322               	addwfc	(GenerateRandomDWORD@dwTotalTime+2)& (0+255),f,b
 40365  017010  0E00               	movlw	0
 40366  017012  0101               	movlb	1	; () banked
 40367  017014  2323               	addwfc	(GenerateRandomDWORD@dwTotalTime+3)& (0+255),f,b
 40368                           
 40369                           ; BSR set to: 1
 40370                           ;helpers.c: 241: if(dwTotalTime >= ((40000000ul)/4))
 40371  017016  0E80               	movlw	128
 40372  017018  0101               	movlb	1	; () banked
 40373  01701A  5D20               	subwf	GenerateRandomDWORD@dwTotalTime& (0+255),w,b
 40374  01701C  0E96               	movlw	150
 40375  01701E  0101               	movlb	1	; () banked
 40376  017020  5921               	subwfb	(GenerateRandomDWORD@dwTotalTime+1)& (0+255),w,b
 40377  017022  0E98               	movlw	152
 40378  017024  0101               	movlb	1	; () banked
 40379  017026  5922               	subwfb	(GenerateRandomDWORD@dwTotalTime+2)& (0+255),w,b
 40380  017028  0E00               	movlw	0
 40381  01702A  0101               	movlb	1	; () banked
 40382  01702C  5923               	subwfb	(GenerateRandomDWORD@dwTotalTime+3)& (0+255),w,b
 40383  01702E  A0D8               	btfss	status,0,c
 40384  017030  D015               	goto	l11968
 40385                           
 40386                           ; BSR set to: 1
 40387                           ;helpers.c: 242: {
 40388                           ;helpers.c: 243: randomResult.w[0] ^= LFSRRand();
 40389  017032  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40390  017036  0101               	movlb	1	; () banked
 40391  017038  5100               	movf	?_LFSRRand& (0+255),w,b
 40392  01703A  0101               	movlb	1	; () banked
 40393  01703C  1B2C               	xorwf	GenerateRandomDWORD@randomResult& (0+255),f,b
 40394  01703E  0101               	movlb	1	; () banked
 40395  017040  5101               	movf	(?_LFSRRand+1)& (0+255),w,b
 40396  017042  0101               	movlb	1	; () banked
 40397  017044  1B2D               	xorwf	(GenerateRandomDWORD@randomResult+1)& (0+255),f,b
 40398                           
 40399                           ;helpers.c: 244: randomResult.w[1] ^= LFSRRand();
 40400  017046  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40401  01704A  0101               	movlb	1	; () banked
 40402  01704C  5100               	movf	?_LFSRRand& (0+255),w,b
 40403  01704E  0101               	movlb	1	; () banked
 40404  017050  1B2E               	xorwf	(GenerateRandomDWORD@randomResult+2)& (0+255),f,b
 40405  017052  0101               	movlb	1	; () banked
 40406  017054  5101               	movf	(?_LFSRRand+1)& (0+255),w,b
 40407  017056  0101               	movlb	1	; () banked
 40408  017058  1B2F               	xorwf	(GenerateRandomDWORD@randomResult+3)& (0+255),f,b
 40409                           
 40410                           ;helpers.c: 245: break;
 40411  01705A  D04A               	goto	l546
 40412  01705C                     l11968:
 40413                           
 40414                           ; BSR set to: 1
 40415                           ;helpers.c: 246: }
 40416                           ;helpers.c: 249: if(wLastValue == wTime)
 40417  01705C  0101               	movlb	1	; () banked
 40418  01705E  5131               	movf	(GenerateRandomDWORD@wTime+1)& (0+255),w,b
 40419  017060  0101               	movlb	1	; () banked
 40420  017062  192B               	xorwf	(GenerateRandomDWORD@wLastValue+1)& (0+255),w,b
 40421  017064  E104               	bnz	u13055
 40422  017066  0101               	movlb	1	; () banked
 40423  017068  5130               	movf	GenerateRandomDWORD@wTime& (0+255),w,b
 40424  01706A  0101               	movlb	1	; () banked
 40425  01706C  192A               	xorwf	GenerateRandomDWORD@wLastValue& (0+255),w,b
 40426  01706E                     u13055:
 40427  01706E  B4D8               	btfsc	status,2,c
 40428  017070  D7B0               	goto	l11954
 40429                           
 40430                           ; BSR set to: 1
 40431                           ;helpers.c: 253: LFSRSeedRand(w + (wLastValue - wTime));
 40432                           
 40433                           ; BSR set to: 1
 40434                           
 40435                           ; BSR set to: 1
 40436                           ;helpers.c: 250: continue;
 40437  017072  0101               	movlb	1	; () banked
 40438  017074  C130  F11C         	movff	GenerateRandomDWORD@wTime,??_GenerateRandomDWORD
 40439  017078  0101               	movlb	1	; () banked
 40440  01707A  C131  F11D         	movff	GenerateRandomDWORD@wTime+1,??_GenerateRandomDWORD+1
 40441  01707E  0101               	movlb	1	; () banked
 40442  017080  1F1C               	comf	??_GenerateRandomDWORD& (0+255),f,b
 40443  017082  1F1D               	comf	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40444  017084  4B1C               	infsnz	??_GenerateRandomDWORD& (0+255),f,b
 40445  017086  2B1D               	incf	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40446  017088  0101               	movlb	1	; () banked
 40447  01708A  512A               	movf	GenerateRandomDWORD@wLastValue& (0+255),w,b
 40448  01708C  0101               	movlb	1	; () banked
 40449  01708E  271C               	addwf	??_GenerateRandomDWORD& (0+255),f,b
 40450  017090  0101               	movlb	1	; () banked
 40451  017092  512B               	movf	(GenerateRandomDWORD@wLastValue+1)& (0+255),w,b
 40452  017094  0101               	movlb	1	; () banked
 40453  017096  231D               	addwfc	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40454  017098  0101               	movlb	1	; () banked
 40455  01709A  511E               	movf	GenerateRandomDWORD@w& (0+255),w,b
 40456  01709C  0101               	movlb	1	; () banked
 40457  01709E  271C               	addwf	??_GenerateRandomDWORD& (0+255),f,b
 40458  0170A0  0101               	movlb	1	; () banked
 40459  0170A2  511F               	movf	(GenerateRandomDWORD@w+1)& (0+255),w,b
 40460  0170A4  0101               	movlb	1	; () banked
 40461  0170A6  231D               	addwfc	(??_GenerateRandomDWORD+1)& (0+255),f,b
 40462  0170A8  0101               	movlb	1	; () banked
 40463  0170AA  C11C  F10F         	movff	??_GenerateRandomDWORD,LFSRSeedRand@dwSeed
 40464  0170AE  0101               	movlb	1	; () banked
 40465  0170B0  C11D  F110         	movff	??_GenerateRandomDWORD+1,LFSRSeedRand@dwSeed+1
 40466  0170B4  0101               	movlb	1	; () banked
 40467  0170B6  6B11               	clrf	(LFSRSeedRand@dwSeed+2)& (0+255),b
 40468  0170B8  0101               	movlb	1	; () banked
 40469  0170BA  6B12               	clrf	(LFSRSeedRand@dwSeed+3)& (0+255),b
 40470  0170BC  EC6E  F0D6         	call	_LFSRSeedRand	;wreg free
 40471                           
 40472                           ;helpers.c: 254: wLastValue = wTime;
 40473  0170C0  C130  F12A         	movff	GenerateRandomDWORD@wTime,GenerateRandomDWORD@wLastValue
 40474  0170C4  C131  F12B         	movff	GenerateRandomDWORD@wTime+1,GenerateRandomDWORD@wLastValue+1
 40475                           
 40476                           ;helpers.c: 257: randomResult.dw <<= 1;
 40477  0170C8  0101               	movlb	1	; () banked
 40478  0170CA  90D8               	bcf	status,0,c
 40479  0170CC  0101               	movlb	1	; () banked
 40480  0170CE  372C               	rlcf	GenerateRandomDWORD@randomResult& (0+255),f,b
 40481  0170D0  0101               	movlb	1	; () banked
 40482  0170D2  372D               	rlcf	(GenerateRandomDWORD@randomResult+1)& (0+255),f,b
 40483  0170D4  0101               	movlb	1	; () banked
 40484  0170D6  372E               	rlcf	(GenerateRandomDWORD@randomResult+2)& (0+255),f,b
 40485  0170D8  0101               	movlb	1	; () banked
 40486  0170DA  372F               	rlcf	(GenerateRandomDWORD@randomResult+3)& (0+255),f,b
 40487                           
 40488                           ; BSR set to: 1
 40489                           ;helpers.c: 258: if(LFSRRand() & 0x0080)
 40490  0170DC  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40491  0170E0  0101               	movlb	1	; () banked
 40492  0170E2  AF00               	btfss	?_LFSRRand& (0+255),7,b
 40493  0170E4  D002               	goto	l11982
 40494                           
 40495                           ; BSR set to: 1
 40496                           ;helpers.c: 259: randomResult.w[0] |= 0x1;
 40497  0170E6  0101               	movlb	1	; () banked
 40498  0170E8  812C               	bsf	GenerateRandomDWORD@randomResult& (0+255),0,b
 40499  0170EA                     l11982:
 40500                           
 40501                           ; BSR set to: 1
 40502                           ;helpers.c: 262: if(++vBitCount == 0u)
 40503  0170EA  0101               	movlb	1	; () banked
 40504  0170EC  3F24               	incfsz	GenerateRandomDWORD@vBitCount& (0+255),f,b
 40505  0170EE  D771               	goto	l11954
 40506  0170F0                     l546:
 40507                           
 40508                           ; BSR set to: 1
 40509                           ;helpers.c: 264: }
 40510                           ;helpers.c: 267: ADCON0 = ADCON0Save;
 40511  0170F0  C125  FFC2         	movff	GenerateRandomDWORD@ADCON0Save,4034	;volatile
 40512                           
 40513                           ;helpers.c: 268: ADCON2 = ADCON2Save;
 40514  0170F4  C126  FFC0         	movff	GenerateRandomDWORD@ADCON2Save,4032	;volatile
 40515                           
 40516                           ;helpers.c: 269: TMR0H = TMR0HSave;
 40517  0170F8  C128  FFD7         	movff	GenerateRandomDWORD@TMR0HSave,4055	;volatile
 40518                           
 40519                           ;helpers.c: 270: TMR0L = TMR0LSave;
 40520  0170FC  C129  FFD6         	movff	GenerateRandomDWORD@TMR0LSave,4054	;volatile
 40521                           
 40522                           ;helpers.c: 271: T0CON = T0CONSave;
 40523  017100  C127  FFD5         	movff	GenerateRandomDWORD@T0CONSave,4053	;volatile
 40524                           
 40525                           ;helpers.c: 272: }
 40526                           ;helpers.c: 352: return randomResult.dw;
 40527  017104  C12C  F118         	movff	GenerateRandomDWORD@randomResult,?_GenerateRandomDWORD
 40528  017108  C12D  F119         	movff	GenerateRandomDWORD@randomResult+1,?_GenerateRandomDWORD+1
 40529  01710C  C12E  F11A         	movff	GenerateRandomDWORD@randomResult+2,?_GenerateRandomDWORD+2
 40530  017110  C12F  F11B         	movff	GenerateRandomDWORD@randomResult+3,?_GenerateRandomDWORD+3
 40531                           
 40532                           ; BSR set to: 1
 40533  017114  0012               	return	
 40534  017116                     __end_of_GenerateRandomDWORD:
 40535                           	opt stack 0
 40536                           tblptru	equ	0xFF8
 40537                           tblptrh	equ	0xFF7
 40538                           tblptrl	equ	0xFF6
 40539                           tablat	equ	0xFF5
 40540                           prodh	equ	0xFF4
 40541                           prodl	equ	0xFF3
 40542                           intcon	equ	0xFF2
 40543                           intcon2	equ	0xFF1
 40544                           intcon3	equ	0xFF0
 40545                           indf0	equ	0xFEF
 40546                           postinc0	equ	0xFEE
 40547                           fsr0h	equ	0xFEA
 40548                           fsr0l	equ	0xFE9
 40549                           wreg	equ	0xFE8
 40550                           indf1	equ	0xFE7
 40551                           postinc1	equ	0xFE6
 40552                           postdec1	equ	0xFE5
 40553                           fsr1h	equ	0xFE2
 40554                           fsr1l	equ	0xFE1
 40555                           indf2	equ	0xFDF
 40556                           postinc2	equ	0xFDE
 40557                           postdec2	equ	0xFDD
 40558                           fsr2h	equ	0xFDA
 40559                           fsr2l	equ	0xFD9
 40560                           status	equ	0xFD8
 40561                           
 40562 ;; *************** function _LFSRSeedRand *****************
 40563 ;; Defined at:
 40564 ;;		line 84 in file "../tcpip/helpers.c"
 40565 ;; Parameters:    Size  Location     Type
 40566 ;;  dwSeed          4   15[BANK1 ] unsigned long 
 40567 ;; Auto vars:     Size  Location     Type
 40568 ;;  dwOldSeed       4   19[BANK1 ] unsigned long 
 40569 ;;  i               1   23[BANK1 ] unsigned char 
 40570 ;; Return value:  Size  Location     Type
 40571 ;;                  4   15[BANK1 ] unsigned long 
 40572 ;; Registers used:
 40573 ;;		wreg, status,2, status,0, cstack
 40574 ;; Tracked objects:
 40575 ;;		On entry : 0/0
 40576 ;;		On exit  : 0/0
 40577 ;;		Unchanged: 0/0
 40578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40579 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40580 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40582 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40583 ;;Total ram usage:        9 bytes
 40584 ;; Hardware stack levels used:    1
 40585 ;; Hardware stack levels required when called:   11
 40586 ;; This function calls:
 40587 ;;		_LFSRRand
 40588 ;; This function is called by:
 40589 ;;		_GenerateRandomDWORD
 40590 ;;		_StackInit
 40591 ;; This function uses a non-reentrant model
 40592 ;;
 40593                           
 40594                           	psect	text98
 40595  01ACDC                     __ptext98:
 40596                           	opt stack 0
 40597  01ACDC                     _LFSRSeedRand:
 40598                           	opt stack 15
 40599                           
 40600                           ;helpers.c: 86: uint32_t dwOldSeed;
 40601                           ;helpers.c: 87: uint8_t i;
 40602                           ;helpers.c: 90: dwOldSeed = dwLFSRRandSeed;
 40603                           
 40604                           ; BSR set to: 1
 40605                           ;incstack = 0
 40606  01ACDC  C0F3  F113         	movff	_dwLFSRRandSeed,LFSRSeedRand@dwOldSeed
 40607  01ACE0  C0F4  F114         	movff	_dwLFSRRandSeed+1,LFSRSeedRand@dwOldSeed+1
 40608  01ACE4  C0F5  F115         	movff	_dwLFSRRandSeed+2,LFSRSeedRand@dwOldSeed+2
 40609  01ACE8  C0F6  F116         	movff	_dwLFSRRandSeed+3,LFSRSeedRand@dwOldSeed+3
 40610                           
 40611                           ;helpers.c: 94: if(dwSeed == 0u)
 40612  01ACEC  0101               	movlb	1	; () banked
 40613  01ACEE  5112               	movf	(LFSRSeedRand@dwSeed+3)& (0+255),w,b
 40614  01ACF0  110F               	iorwf	LFSRSeedRand@dwSeed& (0+255),w,b
 40615  01ACF2  1110               	iorwf	(LFSRSeedRand@dwSeed+1)& (0+255),w,b
 40616  01ACF4  1111               	iorwf	(LFSRSeedRand@dwSeed+2)& (0+255),w,b
 40617  01ACF6  A4D8               	btfss	status,2,c
 40618  01ACF8  D00C               	goto	l11160
 40619                           
 40620                           ; BSR set to: 1
 40621                           ;helpers.c: 95: dwSeed = 1;
 40622  01ACFA  0E01               	movlw	1
 40623  01ACFC  0101               	movlb	1	; () banked
 40624  01ACFE  6F0F               	movwf	LFSRSeedRand@dwSeed& (0+255),b
 40625  01AD00  0E00               	movlw	0
 40626  01AD02  0101               	movlb	1	; () banked
 40627  01AD04  6F10               	movwf	(LFSRSeedRand@dwSeed+1)& (0+255),b
 40628  01AD06  0E00               	movlw	0
 40629  01AD08  0101               	movlb	1	; () banked
 40630  01AD0A  6F11               	movwf	(LFSRSeedRand@dwSeed+2)& (0+255),b
 40631  01AD0C  0E00               	movlw	0
 40632  01AD0E  0101               	movlb	1	; () banked
 40633  01AD10  6F12               	movwf	(LFSRSeedRand@dwSeed+3)& (0+255),b
 40634  01AD12                     l11160:
 40635                           
 40636                           ; BSR set to: 1
 40637                           ;helpers.c: 98: dwLFSRRandSeed = dwSeed;
 40638  01AD12  C10F  F0F3         	movff	LFSRSeedRand@dwSeed,_dwLFSRRandSeed
 40639  01AD16  C110  F0F4         	movff	LFSRSeedRand@dwSeed+1,_dwLFSRRandSeed+1
 40640  01AD1A  C111  F0F5         	movff	LFSRSeedRand@dwSeed+2,_dwLFSRRandSeed+2
 40641  01AD1E  C112  F0F6         	movff	LFSRSeedRand@dwSeed+3,_dwLFSRRandSeed+3
 40642                           
 40643                           ;helpers.c: 102: for(i = 0; i < 16; i++)
 40644  01AD22  0E00               	movlw	0
 40645  01AD24  0101               	movlb	1	; () banked
 40646  01AD26  6F17               	movwf	LFSRSeedRand@i& (0+255),b
 40647                           
 40648                           ; BSR set to: 1
 40649  01AD28  0E0F               	movlw	15
 40650  01AD2A  0101               	movlb	1	; () banked
 40651  01AD2C  6517               	cpfsgt	LFSRSeedRand@i& (0+255),b
 40652  01AD2E  D001               	goto	l11166
 40653  01AD30  0012               	return	
 40654  01AD32                     l11166:
 40655                           
 40656                           ; BSR set to: 1
 40657                           ;helpers.c: 103: LFSRRand();
 40658  01AD32  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40659  01AD36  0101               	movlb	1	; () banked
 40660  01AD38  2B17               	incf	LFSRSeedRand@i& (0+255),f,b
 40661                           
 40662                           ; BSR set to: 1
 40663  01AD3A  0E0F               	movlw	15
 40664  01AD3C  0101               	movlb	1	; () banked
 40665  01AD3E  6517               	cpfsgt	LFSRSeedRand@i& (0+255),b
 40666  01AD40  D7F8               	goto	l11166
 40667  01AD42  0012               	return	
 40668  01AD44                     __end_of_LFSRSeedRand:
 40669                           	opt stack 0
 40670                           tblptru	equ	0xFF8
 40671                           tblptrh	equ	0xFF7
 40672                           tblptrl	equ	0xFF6
 40673                           tablat	equ	0xFF5
 40674                           prodh	equ	0xFF4
 40675                           prodl	equ	0xFF3
 40676                           intcon	equ	0xFF2
 40677                           intcon2	equ	0xFF1
 40678                           intcon3	equ	0xFF0
 40679                           indf0	equ	0xFEF
 40680                           postinc0	equ	0xFEE
 40681                           fsr0h	equ	0xFEA
 40682                           fsr0l	equ	0xFE9
 40683                           wreg	equ	0xFE8
 40684                           indf1	equ	0xFE7
 40685                           postinc1	equ	0xFE6
 40686                           postdec1	equ	0xFE5
 40687                           fsr1h	equ	0xFE2
 40688                           fsr1l	equ	0xFE1
 40689                           indf2	equ	0xFDF
 40690                           postinc2	equ	0xFDE
 40691                           postdec2	equ	0xFDD
 40692                           fsr2h	equ	0xFDA
 40693                           fsr2l	equ	0xFD9
 40694                           status	equ	0xFD8
 40695                           
 40696 ;; *************** function _CloseSocket *****************
 40697 ;; Defined at:
 40698 ;;		line 3395 in file "../tcpip/tcp.c"
 40699 ;; Parameters:    Size  Location     Type
 40700 ;;		None
 40701 ;; Auto vars:     Size  Location     Type
 40702 ;;		None
 40703 ;; Return value:  Size  Location     Type
 40704 ;;		None               void
 40705 ;; Registers used:
 40706 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40707 ;; Tracked objects:
 40708 ;;		On entry : 0/0
 40709 ;;		On exit  : 0/0
 40710 ;;		Unchanged: 0/0
 40711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40713 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40715 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40716 ;;Total ram usage:        2 bytes
 40717 ;; Hardware stack levels used:    1
 40718 ;; Hardware stack levels required when called:   14
 40719 ;; This function calls:
 40720 ;;		_LFSRRand
 40721 ;;		_SyncTCB
 40722 ;; This function is called by:
 40723 ;;		_TCPInit
 40724 ;;		_TCPDisconnect
 40725 ;;		_TCPTick
 40726 ;;		_HandleTCPSeg
 40727 ;; This function uses a non-reentrant model
 40728 ;;
 40729                           
 40730                           	psect	text99
 40731  019BE0                     __ptext99:
 40732                           	opt stack 0
 40733  019BE0                     _CloseSocket:
 40734                           	opt stack 13
 40735                           
 40736                           ;tcp.c: 3397: SyncTCB();
 40737                           
 40738                           ; BSR set to: 1
 40739                           ;incstack = 0
 40740  019BE0  EC10  F0CB         	call	_SyncTCB	;wreg free
 40741                           
 40742                           ;tcp.c: 3399: MyTCBStub.remoteHash.Val = MyTCB.localPort.Val;
 40743  019BE4  C1C9  F1F9         	movff	_MyTCB+16,_MyTCBStub+25
 40744  019BE8  C1CA  F1FA         	movff	_MyTCB+17,_MyTCBStub+26
 40745                           
 40746                           ;tcp.c: 3400: MyTCBStub.txHead = MyTCBStub.bufferTxStart;
 40747  019BEC  C1E0  F1E6         	movff	_MyTCBStub,_MyTCBStub+6
 40748  019BF0  C1E1  F1E7         	movff	_MyTCBStub+1,_MyTCBStub+7
 40749                           
 40750                           ;tcp.c: 3401: MyTCBStub.txTail = MyTCBStub.bufferTxStart;
 40751  019BF4  C1E0  F1E8         	movff	_MyTCBStub,_MyTCBStub+8
 40752  019BF8  C1E1  F1E9         	movff	_MyTCBStub+1,_MyTCBStub+9
 40753                           
 40754                           ;tcp.c: 3402: MyTCBStub.rxHead = MyTCBStub.bufferRxStart;
 40755  019BFC  C1E2  F1EA         	movff	_MyTCBStub+2,_MyTCBStub+10
 40756  019C00  C1E3  F1EB         	movff	_MyTCBStub+3,_MyTCBStub+11
 40757                           
 40758                           ;tcp.c: 3403: MyTCBStub.rxTail = MyTCBStub.bufferRxStart;
 40759  019C04  C1E2  F1EC         	movff	_MyTCBStub+2,_MyTCBStub+12
 40760  019C08  C1E3  F1ED         	movff	_MyTCBStub+3,_MyTCBStub+13
 40761                           
 40762                           ;tcp.c: 3404: MyTCBStub.smState = MyTCBStub.Flags.bServer ? TCP_LISTEN : TCP_CLOSED;
 40763  019C0C  0101               	movlb	1	; () banked
 40764  019C0E  B7F7               	btfsc	(_MyTCBStub+23)& (0+255),3,b
 40765  019C10  D005               	goto	l12038
 40766                           
 40767                           ; BSR set to: 1
 40768  019C12  0E00               	movlw	0
 40769  019C14  0101               	movlb	1	; () banked
 40770  019C16  6F29               	movwf	(_CloseSocket$7622+1)& (0+255),b
 40771  019C18  0E0D               	movlw	13
 40772  019C1A  D004               	goto	L42
 40773  019C1C                     l12038:
 40774                           
 40775                           ; BSR set to: 1
 40776  019C1C  0E00               	movlw	0
 40777  019C1E  0101               	movlb	1	; () banked
 40778  019C20  6F29               	movwf	(_CloseSocket$7622+1)& (0+255),b
 40779  019C22  0E04               	movlw	4
 40780  019C24                     L42:
 40781  019C24  0101               	movlb	1	; () banked
 40782  019C26  6F28               	movwf	_CloseSocket$7622& (0+255),b
 40783                           
 40784                           ; BSR set to: 1
 40785                           
 40786                           ; BSR set to: 1
 40787  019C28  C128  F1F6         	movff	_CloseSocket$7622,_MyTCBStub+22
 40788                           
 40789                           ; BSR set to: 1
 40790                           ;tcp.c: 3405: MyTCBStub.Flags.vUnackedKeepalives = 0;
 40791  019C2C  0101               	movlb	1	; () banked
 40792  019C2E  91F7               	bcf	(_MyTCBStub+23)& (0+255),0,b
 40793  019C30  0101               	movlb	1	; () banked
 40794  019C32  93F7               	bcf	(_MyTCBStub+23)& (0+255),1,b
 40795  019C34  0101               	movlb	1	; () banked
 40796  019C36  95F7               	bcf	(_MyTCBStub+23)& (0+255),2,b
 40797                           
 40798                           ; BSR set to: 1
 40799                           ;tcp.c: 3406: MyTCBStub.Flags.bTimerEnabled = 0;
 40800  019C38  0101               	movlb	1	; () banked
 40801  019C3A  99F7               	bcf	(_MyTCBStub+23)& (0+255),4,b
 40802                           
 40803                           ; BSR set to: 1
 40804                           ;tcp.c: 3407: MyTCBStub.Flags.bTimer2Enabled = 0;
 40805  019C3C  0101               	movlb	1	; () banked
 40806  019C3E  9BF7               	bcf	(_MyTCBStub+23)& (0+255),5,b
 40807                           
 40808                           ; BSR set to: 1
 40809                           ;tcp.c: 3408: MyTCBStub.Flags.bDelayedACKTimerEnabled = 0;
 40810  019C40  0101               	movlb	1	; () banked
 40811  019C42  9DF7               	bcf	(_MyTCBStub+23)& (0+255),6,b
 40812                           
 40813                           ; BSR set to: 1
 40814                           ;tcp.c: 3409: MyTCBStub.Flags.bOneSegmentReceived = 0;
 40815  019C44  0101               	movlb	1	; () banked
 40816  019C46  9FF7               	bcf	(_MyTCBStub+23)& (0+255),7,b
 40817                           
 40818                           ; BSR set to: 1
 40819                           ;tcp.c: 3410: MyTCBStub.Flags.bHalfFullFlush = 0;
 40820  019C48  0101               	movlb	1	; () banked
 40821  019C4A  91F8               	bcf	(_MyTCBStub+24)& (0+255),0,b
 40822                           
 40823                           ; BSR set to: 1
 40824                           ;tcp.c: 3411: MyTCBStub.Flags.bTXASAP = 0;
 40825  019C4C  0101               	movlb	1	; () banked
 40826  019C4E  93F8               	bcf	(_MyTCBStub+24)& (0+255),1,b
 40827                           
 40828                           ; BSR set to: 1
 40829                           ;tcp.c: 3412: MyTCBStub.Flags.bTXASAPWithoutTimerReset = 0;
 40830  019C50  0101               	movlb	1	; () banked
 40831  019C52  95F8               	bcf	(_MyTCBStub+24)& (0+255),2,b
 40832                           
 40833                           ; BSR set to: 1
 40834                           ;tcp.c: 3413: MyTCBStub.Flags.bTXFIN = 0;
 40835  019C54  0101               	movlb	1	; () banked
 40836  019C56  97F8               	bcf	(_MyTCBStub+24)& (0+255),3,b
 40837                           
 40838                           ; BSR set to: 1
 40839                           ;tcp.c: 3414: MyTCBStub.Flags.bSocketReset = 1;
 40840  019C58  0101               	movlb	1	; () banked
 40841  019C5A  89F8               	bsf	(_MyTCBStub+24)& (0+255),4,b
 40842                           
 40843                           ; BSR set to: 1
 40844                           ;tcp.c: 3438: MyTCB.flags.bFINSent = 0;
 40845  019C5C  0101               	movlb	1	; () banked
 40846  019C5E  91DB               	bcf	(_MyTCB+34)& (0+255),0,b
 40847                           
 40848                           ; BSR set to: 1
 40849                           ;tcp.c: 3439: MyTCB.flags.bSYNSent = 0;
 40850  019C60  0101               	movlb	1	; () banked
 40851  019C62  93DB               	bcf	(_MyTCB+34)& (0+255),1,b
 40852                           
 40853                           ; BSR set to: 1
 40854                           ;tcp.c: 3440: MyTCB.flags.bRXNoneACKed1 = 0;
 40855  019C64  0101               	movlb	1	; () banked
 40856  019C66  97DB               	bcf	(_MyTCB+34)& (0+255),3,b
 40857                           
 40858                           ; BSR set to: 1
 40859                           ;tcp.c: 3441: MyTCB.flags.bRXNoneACKed2 = 0;
 40860  019C68  0101               	movlb	1	; () banked
 40861  019C6A  99DB               	bcf	(_MyTCB+34)& (0+255),4,b
 40862                           
 40863                           ; BSR set to: 1
 40864                           ;tcp.c: 3442: MyTCB.txUnackedTail = MyTCBStub.bufferTxStart;
 40865  019C6C  C1E0  F1C5         	movff	_MyTCBStub,_MyTCB+12
 40866  019C70  C1E1  F1C6         	movff	_MyTCBStub+1,_MyTCB+13
 40867                           
 40868                           ; BSR set to: 1
 40869                           ;tcp.c: 3443: ((TCPIP_UINT32_VAL*)(&MyTCB.MySEQ))->w[0] = LFSRRand();
 40870  019C74  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40871  019C78  0101               	movlb	1	; () banked
 40872  019C7A  C100  F1BD         	movff	?_LFSRRand,_MyTCB+4
 40873  019C7E  0101               	movlb	1	; () banked
 40874  019C80  C101  F1BE         	movff	?_LFSRRand+1,_MyTCB+5
 40875                           
 40876                           ; BSR set to: 1
 40877                           ;tcp.c: 3444: ((TCPIP_UINT32_VAL*)(&MyTCB.MySEQ))->w[1] = LFSRRand();
 40878  019C84  EC7B  F0CB         	call	_LFSRRand	;wreg free
 40879  019C88  0101               	movlb	1	; () banked
 40880  019C8A  C100  F1BF         	movff	?_LFSRRand,_MyTCB+6
 40881  019C8E  0101               	movlb	1	; () banked
 40882  019C90  C101  F1C0         	movff	?_LFSRRand+1,_MyTCB+7
 40883                           
 40884                           ; BSR set to: 1
 40885                           ;tcp.c: 3445: MyTCB.sHoleSize = -1;
 40886  019C94  0101               	movlb	1	; () banked
 40887  019C96  69D9               	setf	(_MyTCB+32)& (0+255),b
 40888  019C98  0101               	movlb	1	; () banked
 40889  019C9A  69DA               	setf	(_MyTCB+33)& (0+255),b
 40890                           
 40891                           ;tcp.c: 3446: MyTCB.remoteWindow = 1;
 40892  019C9C  0E00               	movlw	0
 40893  019C9E  0101               	movlb	1	; () banked
 40894  019CA0  6FCC               	movwf	(_MyTCB+19)& (0+255),b
 40895  019CA2  0E01               	movlw	1
 40896  019CA4  0101               	movlb	1	; () banked
 40897  019CA6  6FCB               	movwf	(_MyTCB+18)& (0+255),b
 40898                           
 40899                           ; BSR set to: 1
 40900  019CA8  0012               	return	
 40901  019CAA                     __end_of_CloseSocket:
 40902                           	opt stack 0
 40903                           tblptru	equ	0xFF8
 40904                           tblptrh	equ	0xFF7
 40905                           tblptrl	equ	0xFF6
 40906                           tablat	equ	0xFF5
 40907                           prodh	equ	0xFF4
 40908                           prodl	equ	0xFF3
 40909                           intcon	equ	0xFF2
 40910                           intcon2	equ	0xFF1
 40911                           intcon3	equ	0xFF0
 40912                           indf0	equ	0xFEF
 40913                           postinc0	equ	0xFEE
 40914                           fsr0h	equ	0xFEA
 40915                           fsr0l	equ	0xFE9
 40916                           wreg	equ	0xFE8
 40917                           indf1	equ	0xFE7
 40918                           postinc1	equ	0xFE6
 40919                           postdec1	equ	0xFE5
 40920                           fsr1h	equ	0xFE2
 40921                           fsr1l	equ	0xFE1
 40922                           indf2	equ	0xFDF
 40923                           postinc2	equ	0xFDE
 40924                           postdec2	equ	0xFDD
 40925                           fsr2h	equ	0xFDA
 40926                           fsr2l	equ	0xFD9
 40927                           status	equ	0xFD8
 40928                           
 40929 ;; *************** function _SyncTCB *****************
 40930 ;; Defined at:
 40931 ;;		line 288 in file "../tcpip/tcp.c"
 40932 ;; Parameters:    Size  Location     Type
 40933 ;;		None
 40934 ;; Auto vars:     Size  Location     Type
 40935 ;;		None
 40936 ;; Return value:  Size  Location     Type
 40937 ;;		None               void
 40938 ;; Registers used:
 40939 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40940 ;; Tracked objects:
 40941 ;;		On entry : 0/0
 40942 ;;		On exit  : 0/0
 40943 ;;		Unchanged: 0/0
 40944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 40945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40947 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40948 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40949 ;;Total ram usage:        2 bytes
 40950 ;; Hardware stack levels used:    1
 40951 ;; Hardware stack levels required when called:   13
 40952 ;; This function calls:
 40953 ;;		_TCPRAMCopy
 40954 ;; This function is called by:
 40955 ;;		_TCPInit
 40956 ;;		_TCPOpen
 40957 ;;		_TCPFlush
 40958 ;;		_TCPTick
 40959 ;;		_SendTCP
 40960 ;;		_FindMatchingSocket
 40961 ;;		_CloseSocket
 40962 ;;		_HandleTCPSeg
 40963 ;;		_TCPGetRemoteInfo
 40964 ;;		_TCPAdjustFIFOSize
 40965 ;; This function uses a non-reentrant model
 40966 ;;
 40967                           
 40968                           	psect	text100
 40969  019620                     __ptext100:
 40970                           	opt stack 0
 40971  019620                     _SyncTCB:
 40972                           	opt stack 14
 40973                           
 40974                           ;tcp.c: 290: static TCP_SOCKET hLastTCB = (0xFE);
 40975                           ;tcp.c: 292: if(hLastTCB == hCurrentTCP)
 40976                           
 40977                           ; BSR set to: 1
 40978                           ;incstack = 0
 40979  019620  0101               	movlb	1	; () banked
 40980  019622  51FD               	movf	_hCurrentTCP& (0+255),w,b
 40981  019624  0101               	movlb	1	; () banked
 40982  019626  63FC               	cpfseq	SyncTCB@hLastTCB& (0+255),b
 40983  019628  D001               	goto	l11206
 40984  01962A  0012               	return	
 40985  01962C                     l11206:
 40986                           
 40987                           ; BSR set to: 1
 40988                           ;tcp.c: 295: if(hLastTCB != (0xFE))
 40989  01962C  0101               	movlb	1	; () banked
 40990  01962E  51FC               	movf	SyncTCB@hLastTCB& (0+255),w,b
 40991  019630  0AFE               	xorlw	254
 40992  019632  B4D8               	btfsc	status,2,c
 40993  019634  D03E               	goto	l11210
 40994                           
 40995                           ; BSR set to: 1
 40996                           ;tcp.c: 296: {
 40997                           ;tcp.c: 298: TCPRAMCopy(TCBStubs[hLastTCB].bufferTxStart - sizeof(MyTCB), TCBStubs[hLast
      +                          TCB].vMemoryMedium, (unsigned short)&MyTCB, 1u, sizeof(MyTCB));
 40998  019636  0101               	movlb	1	; () banked
 40999  019638  51FC               	movf	SyncTCB@hLastTCB& (0+255),w,b
 41000  01963A  0D1C               	mullw	28
 41001  01963C  0102               	movlb	2	; () banked
 41002  01963E  0E6F               	movlw	low _TCBStubs
 41003  019640  24F3               	addwf	prodl,w,c
 41004  019642  6ED9               	movwf	fsr2l,c
 41005  019644  0102               	movlb	2	; () banked
 41006  019646  0E02               	movlw	high _TCBStubs
 41007  019648  20F4               	addwfc	prodh,w,c
 41008  01964A  6EDA               	movwf	fsr2h,c
 41009  01964C  CFDE F126          	movff	postinc2,??_SyncTCB
 41010  019650  CFDD F127          	movff	postdec2,??_SyncTCB+1
 41011  019654  0ED9               	movlw	217
 41012  019656  0101               	movlb	1	; () banked
 41013  019658  2526               	addwf	??_SyncTCB& (0+255),w,b
 41014  01965A  0101               	movlb	1	; () banked
 41015  01965C  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 41016  01965E  0EFF               	movlw	255
 41017  019660  0101               	movlb	1	; () banked
 41018  019662  2127               	addwfc	(??_SyncTCB+1)& (0+255),w,b
 41019  019664  0101               	movlb	1	; () banked
 41020  019666  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 41021  019668  0101               	movlb	1	; () banked
 41022  01966A  51FC               	movf	SyncTCB@hLastTCB& (0+255),w,b
 41023  01966C  0D1C               	mullw	28
 41024  01966E  0E1B               	movlw	27
 41025  019670  26F3               	addwf	prodl,f,c
 41026  019672  0E00               	movlw	0
 41027  019674  22F4               	addwfc	prodh,f,c
 41028  019676  0102               	movlb	2	; () banked
 41029  019678  0E6F               	movlw	low _TCBStubs
 41030  01967A  24F3               	addwf	prodl,w,c
 41031  01967C  6ED9               	movwf	fsr2l,c
 41032  01967E  0102               	movlb	2	; () banked
 41033  019680  0E02               	movlw	high _TCBStubs
 41034  019682  20F4               	addwfc	prodh,w,c
 41035  019684  6EDA               	movwf	fsr2h,c
 41036  019686  50DF               	movf	indf2,w,c
 41037  019688  0101               	movlb	1	; () banked
 41038  01968A  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 41039  01968C  0101               	movlb	1	; () banked
 41040  01968E  0E01               	movlw	high _MyTCB
 41041  019690  0101               	movlb	1	; () banked
 41042  019692  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 41043  019694  0101               	movlb	1	; () banked
 41044  019696  0EB9               	movlw	low _MyTCB
 41045  019698  0101               	movlb	1	; () banked
 41046  01969A  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 41047  01969C  0E01               	movlw	1
 41048  01969E  0101               	movlb	1	; () banked
 41049  0196A0  6F23               	movwf	TCPRAMCopy@vSourceType& (0+255),b
 41050  0196A2  0E00               	movlw	0
 41051  0196A4  0101               	movlb	1	; () banked
 41052  0196A6  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 41053  0196A8  0E27               	movlw	39
 41054  0196AA  0101               	movlb	1	; () banked
 41055  0196AC  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 41056  0196AE  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 41057  0196B2                     l11210:
 41058                           
 41059                           ;tcp.c: 299: }
 41060                           ;tcp.c: 302: hLastTCB = hCurrentTCP;
 41061  0196B2  C1FD  F1FC         	movff	_hCurrentTCP,SyncTCB@hLastTCB
 41062                           
 41063                           ;tcp.c: 303: TCPRAMCopy((unsigned short)&MyTCB, 1u, MyTCBStub.bufferTxStart - sizeof(MyT
      +                          CB), MyTCBStub.vMemoryMedium, sizeof(MyTCB));
 41064  0196B6  0101               	movlb	1	; () banked
 41065  0196B8  0E01               	movlw	high _MyTCB
 41066  0196BA  0101               	movlb	1	; () banked
 41067  0196BC  6F1F               	movwf	(TCPRAMCopy@ptrDest+1)& (0+255),b
 41068  0196BE  0101               	movlb	1	; () banked
 41069  0196C0  0EB9               	movlw	low _MyTCB
 41070  0196C2  0101               	movlb	1	; () banked
 41071  0196C4  6F1E               	movwf	TCPRAMCopy@ptrDest& (0+255),b
 41072  0196C6  0E01               	movlw	1
 41073  0196C8  0101               	movlb	1	; () banked
 41074  0196CA  6F20               	movwf	TCPRAMCopy@vDestType& (0+255),b
 41075  0196CC  0ED9               	movlw	217
 41076  0196CE  0101               	movlb	1	; () banked
 41077  0196D0  25E0               	addwf	_MyTCBStub& (0+255),w,b
 41078  0196D2  0101               	movlb	1	; () banked
 41079  0196D4  6F21               	movwf	TCPRAMCopy@ptrSource& (0+255),b
 41080  0196D6  0EFF               	movlw	255
 41081  0196D8  0101               	movlb	1	; () banked
 41082  0196DA  21E1               	addwfc	(_MyTCBStub+1)& (0+255),w,b
 41083  0196DC  0101               	movlb	1	; () banked
 41084  0196DE  6F22               	movwf	(TCPRAMCopy@ptrSource+1)& (0+255),b
 41085  0196E0  C1FB  F123         	movff	_MyTCBStub+27,TCPRAMCopy@vSourceType
 41086  0196E4  0E00               	movlw	0
 41087  0196E6  0101               	movlb	1	; () banked
 41088  0196E8  6F25               	movwf	(TCPRAMCopy@wLength+1)& (0+255),b
 41089  0196EA  0E27               	movlw	39
 41090  0196EC  0101               	movlb	1	; () banked
 41091  0196EE  6F24               	movwf	TCPRAMCopy@wLength& (0+255),b
 41092  0196F0  ECD8  F0C8         	call	_TCPRAMCopy	;wreg free
 41093  0196F4  0012               	return	
 41094  0196F6                     __end_of_SyncTCB:
 41095                           	opt stack 0
 41096                           tblptru	equ	0xFF8
 41097                           tblptrh	equ	0xFF7
 41098                           tblptrl	equ	0xFF6
 41099                           tablat	equ	0xFF5
 41100                           prodh	equ	0xFF4
 41101                           prodl	equ	0xFF3
 41102                           intcon	equ	0xFF2
 41103                           intcon2	equ	0xFF1
 41104                           intcon3	equ	0xFF0
 41105                           indf0	equ	0xFEF
 41106                           postinc0	equ	0xFEE
 41107                           fsr0h	equ	0xFEA
 41108                           fsr0l	equ	0xFE9
 41109                           wreg	equ	0xFE8
 41110                           indf1	equ	0xFE7
 41111                           postinc1	equ	0xFE6
 41112                           postdec1	equ	0xFE5
 41113                           fsr1h	equ	0xFE2
 41114                           fsr1l	equ	0xFE1
 41115                           indf2	equ	0xFDF
 41116                           postinc2	equ	0xFDE
 41117                           postdec2	equ	0xFDD
 41118                           fsr2h	equ	0xFDA
 41119                           fsr2l	equ	0xFD9
 41120                           status	equ	0xFD8
 41121                           
 41122 ;; *************** function _TCPRAMCopy *****************
 41123 ;; Defined at:
 41124 ;;		line 4510 in file "../tcpip/tcp.c"
 41125 ;; Parameters:    Size  Location     Type
 41126 ;;  ptrDest         2   30[BANK1 ] unsigned short 
 41127 ;;  vDestType       1   32[BANK1 ] unsigned char 
 41128 ;;  ptrSource       2   33[BANK1 ] unsigned short 
 41129 ;;  vSourceType     1   35[BANK1 ] unsigned char 
 41130 ;;  wLength         2   36[BANK1 ] unsigned int 
 41131 ;; Auto vars:     Size  Location     Type
 41132 ;;		None
 41133 ;; Return value:  Size  Location     Type
 41134 ;;		None               void
 41135 ;; Registers used:
 41136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 41137 ;; Tracked objects:
 41138 ;;		On entry : 0/0
 41139 ;;		On exit  : 0/0
 41140 ;;		Unchanged: 0/0
 41141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41142 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41145 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41146 ;;Total ram usage:        8 bytes
 41147 ;; Hardware stack levels used:    1
 41148 ;; Hardware stack levels required when called:   12
 41149 ;; This function calls:
 41150 ;;		_MACGetArray
 41151 ;;		_MACIsMemCopyDone
 41152 ;;		_MACMemCopyAsync
 41153 ;;		_MACPutArray
 41154 ;;		_MACSetReadPtr
 41155 ;;		_MACSetWritePtr
 41156 ;;		_memcpy
 41157 ;; This function is called by:
 41158 ;;		_SyncTCB
 41159 ;;		_TCPPutArray
 41160 ;;		_TCPGetArray
 41161 ;;		_TCPTick
 41162 ;;		_SendTCP
 41163 ;;		_HandleTCPSeg
 41164 ;;		_TCPPut
 41165 ;;		_TCPGet
 41166 ;;		_TCPPeekArray
 41167 ;;		_TCPFindArrayEx
 41168 ;;		_TCPFindROMArrayEx
 41169 ;;		_TCPAdjustFIFOSize
 41170 ;; This function uses a non-reentrant model
 41171 ;;
 41172                           
 41173                           	psect	text101
 41174  0191B0                     __ptext101:
 41175                           	opt stack 0
 41176  0191B0                     _TCPRAMCopy:
 41177                           	opt stack 16
 41178                           
 41179                           ;tcp.c: 4517: switch(vSourceType)
 41180                           
 41181                           ;incstack = 0
 41182  0191B0  D06B               	goto	l10596
 41183  0191B2                     l10568:
 41184                           
 41185                           ;tcp.c: 4523: memcpy((void*)(uint8_t*)ptrDest, (void*)(uint8_t*)ptrSource, wLength);
 41186  0191B2  0101               	movlb	1	; () banked
 41187  0191B4  C11F  F115         	movff	TCPRAMCopy@ptrDest+1,memcpy@d1+1
 41188  0191B8  0101               	movlb	1	; () banked
 41189  0191BA  C11E  F114         	movff	TCPRAMCopy@ptrDest,memcpy@d1
 41190  0191BE  0101               	movlb	1	; () banked
 41191  0191C0  C122  F117         	movff	TCPRAMCopy@ptrSource+1,memcpy@s1+1
 41192  0191C4  0101               	movlb	1	; () banked
 41193  0191C6  C121  F116         	movff	TCPRAMCopy@ptrSource,memcpy@s1
 41194  0191CA  C124  F118         	movff	TCPRAMCopy@wLength,memcpy@n
 41195  0191CE  C125  F119         	movff	TCPRAMCopy@wLength+1,memcpy@n+1
 41196  0191D2  ECCF  F0D5         	call	_memcpy	;wreg free
 41197                           
 41198                           ;tcp.c: 4524: break;
 41199  0191D6  0012               	return	
 41200  0191D8                     l10570:
 41201                           
 41202                           ;tcp.c: 4527: if(ptrDest!=(unsigned short)-1)
 41203  0191D8  0101               	movlb	1	; () banked
 41204  0191DA  291E               	incf	TCPRAMCopy@ptrDest& (0+255),w,b
 41205  0191DC  B4D8               	btfsc	status,2,c
 41206  0191DE  291F               	incf	(TCPRAMCopy@ptrDest+1)& (0+255),w,b
 41207  0191E0  B4D8               	btfsc	status,2,c
 41208  0191E2  D006               	goto	l10574
 41209                           
 41210                           ; BSR set to: 1
 41211                           ;tcp.c: 4528: MACSetWritePtr(ptrDest);
 41212  0191E4  C11E  F100         	movff	TCPRAMCopy@ptrDest,MACSetWritePtr@address
 41213  0191E8  C11F  F101         	movff	TCPRAMCopy@ptrDest+1,MACSetWritePtr@address+1
 41214  0191EC  EC40  F0DD         	call	_MACSetWritePtr	;wreg free
 41215  0191F0                     l10574:
 41216                           
 41217                           ;tcp.c: 4529: MACPutArray((uint8_t*)ptrSource, wLength);
 41218  0191F0  0101               	movlb	1	; () banked
 41219  0191F2  C122  F101         	movff	TCPRAMCopy@ptrSource+1,MACPutArray@val+1
 41220  0191F6  0101               	movlb	1	; () banked
 41221  0191F8  C121  F100         	movff	TCPRAMCopy@ptrSource,MACPutArray@val
 41222  0191FC  C124  F102         	movff	TCPRAMCopy@wLength,MACPutArray@len
 41223  019200  C125  F103         	movff	TCPRAMCopy@wLength+1,MACPutArray@len+1
 41224  019204  ECE4  F0FF         	call	_MACPutArray	;wreg free
 41225                           
 41226                           ;tcp.c: 4530: break;
 41227  019208  0012               	return	
 41228  01920A                     l10578:
 41229  01920A  0101               	movlb	1	; () banked
 41230  01920C  5120               	movf	TCPRAMCopy@vDestType& (0+255),w,b
 41231                           
 41232                           ; Switch size 1, requested type "space"
 41233                           ; Number of cases is 2, Range of values is 0 to 1
 41234                           ; switch strategies available:
 41235                           ; Name         Instructions Cycles
 41236                           ; simple_byte            7     4 (average)
 41237                           ;	Chosen strategy is simple_byte
 41238  01920E  0A00               	xorlw	0	; case 0
 41239  019210  B4D8               	btfsc	status,2,c
 41240  019212  D7E2               	goto	l10570
 41241  019214  0A01               	xorlw	1	; case 1
 41242  019216  A4D8               	btfss	status,2,c
 41243  019218  0012               	return	
 41244  01921A  D7CB               	goto	l10568
 41245  01921C                     l10580:
 41246                           
 41247                           ; BSR set to: 1
 41248                           ;tcp.c: 4544: if(ptrSource!=(unsigned short)-1)
 41249  01921C  0101               	movlb	1	; () banked
 41250  01921E  2921               	incf	TCPRAMCopy@ptrSource& (0+255),w,b
 41251  019220  B4D8               	btfsc	status,2,c
 41252  019222  2922               	incf	(TCPRAMCopy@ptrSource+1)& (0+255),w,b
 41253  019224  B4D8               	btfsc	status,2,c
 41254  019226  D006               	goto	l10584
 41255                           
 41256                           ; BSR set to: 1
 41257                           ;tcp.c: 4545: MACSetReadPtr(ptrSource);
 41258  019228  C121  F100         	movff	TCPRAMCopy@ptrSource,MACSetReadPtr@address
 41259  01922C  C122  F101         	movff	TCPRAMCopy@ptrSource+1,MACSetReadPtr@address+1
 41260  019230  EC49  F0DD         	call	_MACSetReadPtr	;wreg free
 41261  019234                     l10584:
 41262                           
 41263                           ;tcp.c: 4546: MACGetArray((uint8_t*)ptrDest, wLength);
 41264  019234  0101               	movlb	1	; () banked
 41265  019236  C11F  F101         	movff	TCPRAMCopy@ptrDest+1,MACGetArray@val+1
 41266  01923A  0101               	movlb	1	; () banked
 41267  01923C  C11E  F100         	movff	TCPRAMCopy@ptrDest,MACGetArray@val
 41268  019240  C124  F102         	movff	TCPRAMCopy@wLength,MACGetArray@len
 41269  019244  C125  F103         	movff	TCPRAMCopy@wLength+1,MACGetArray@len+1
 41270  019248  EC35  F0D7         	call	_MACGetArray	;wreg free
 41271                           
 41272                           ;tcp.c: 4547: break;
 41273  01924C  0012               	return	
 41274  01924E                     l10586:
 41275                           
 41276                           ;tcp.c: 4550: MACMemCopyAsync(ptrDest, ptrSource, wLength);
 41277  01924E  C11E  F101         	movff	TCPRAMCopy@ptrDest,MACMemCopyAsync@destAddr
 41278  019252  C11F  F102         	movff	TCPRAMCopy@ptrDest+1,MACMemCopyAsync@destAddr+1
 41279  019256  C121  F103         	movff	TCPRAMCopy@ptrSource,MACMemCopyAsync@sourceAddr
 41280  01925A  C122  F104         	movff	TCPRAMCopy@ptrSource+1,MACMemCopyAsync@sourceAddr+1
 41281  01925E  C124  F105         	movff	TCPRAMCopy@wLength,MACMemCopyAsync@len
 41282  019262  C125  F106         	movff	TCPRAMCopy@wLength+1,MACMemCopyAsync@len+1
 41283  019266  EC8B  F0B8         	call	_MACMemCopyAsync	;wreg free
 41284  01926A                     l10588:
 41285  01926A  EC6A  F0DD         	call	_MACIsMemCopyDone	;wreg free
 41286  01926E  0900               	iorlw	0
 41287  019270  A4D8               	btfss	status,2,c
 41288  019272  0012               	return	
 41289  019274  D7FA               	goto	l10588
 41290  019276                     l10592:
 41291  019276  0101               	movlb	1	; () banked
 41292  019278  5120               	movf	TCPRAMCopy@vDestType& (0+255),w,b
 41293                           
 41294                           ; Switch size 1, requested type "space"
 41295                           ; Number of cases is 2, Range of values is 0 to 1
 41296                           ; switch strategies available:
 41297                           ; Name         Instructions Cycles
 41298                           ; simple_byte            7     4 (average)
 41299                           ;	Chosen strategy is simple_byte
 41300  01927A  0A00               	xorlw	0	; case 0
 41301  01927C  B4D8               	btfsc	status,2,c
 41302  01927E  D7E7               	goto	l10586
 41303  019280  0A01               	xorlw	1	; case 1
 41304  019282  A4D8               	btfss	status,2,c
 41305  019284  0012               	return	
 41306  019286  D7CA               	goto	l10580
 41307  019288                     l10596:
 41308  019288  0101               	movlb	1	; () banked
 41309  01928A  5123               	movf	TCPRAMCopy@vSourceType& (0+255),w,b
 41310                           
 41311                           ; Switch size 1, requested type "space"
 41312                           ; Number of cases is 2, Range of values is 0 to 1
 41313                           ; switch strategies available:
 41314                           ; Name         Instructions Cycles
 41315                           ; simple_byte            7     4 (average)
 41316                           ;	Chosen strategy is simple_byte
 41317  01928C  0A00               	xorlw	0	; case 0
 41318  01928E  B4D8               	btfsc	status,2,c
 41319  019290  D7F2               	goto	l10592
 41320  019292  0A01               	xorlw	1	; case 1
 41321  019294  A4D8               	btfss	status,2,c
 41322  019296  0012               	return	
 41323  019298  D7B8               	goto	l10578
 41324  01929A                     __end_of_TCPRAMCopy:
 41325                           	opt stack 0
 41326                           tblptru	equ	0xFF8
 41327                           tblptrh	equ	0xFF7
 41328                           tblptrl	equ	0xFF6
 41329                           tablat	equ	0xFF5
 41330                           prodh	equ	0xFF4
 41331                           prodl	equ	0xFF3
 41332                           intcon	equ	0xFF2
 41333                           intcon2	equ	0xFF1
 41334                           intcon3	equ	0xFF0
 41335                           indf0	equ	0xFEF
 41336                           postinc0	equ	0xFEE
 41337                           fsr0h	equ	0xFEA
 41338                           fsr0l	equ	0xFE9
 41339                           wreg	equ	0xFE8
 41340                           indf1	equ	0xFE7
 41341                           postinc1	equ	0xFE6
 41342                           postdec1	equ	0xFE5
 41343                           fsr1h	equ	0xFE2
 41344                           fsr1l	equ	0xFE1
 41345                           indf2	equ	0xFDF
 41346                           postinc2	equ	0xFDE
 41347                           postdec2	equ	0xFDD
 41348                           fsr2h	equ	0xFDA
 41349                           fsr2l	equ	0xFD9
 41350                           status	equ	0xFD8
 41351                           
 41352 ;; *************** function _MACSetWritePtr *****************
 41353 ;; Defined at:
 41354 ;;		line 705 in file "../tcpip/ETH97J60.c"
 41355 ;; Parameters:    Size  Location     Type
 41356 ;;  address         2    0[BANK1 ] unsigned short 
 41357 ;; Auto vars:     Size  Location     Type
 41358 ;;  oldVal          2    2[BANK1 ] unsigned short 
 41359 ;; Return value:  Size  Location     Type
 41360 ;;                  2    0[BANK1 ] unsigned short 
 41361 ;; Registers used:
 41362 ;;		None
 41363 ;; Tracked objects:
 41364 ;;		On entry : 0/0
 41365 ;;		On exit  : 0/0
 41366 ;;		Unchanged: 0/0
 41367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41368 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41369 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41371 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41372 ;;Total ram usage:        4 bytes
 41373 ;; Hardware stack levels used:    1
 41374 ;; Hardware stack levels required when called:   10
 41375 ;; This function calls:
 41376 ;;		Nothing
 41377 ;; This function is called by:
 41378 ;;		_ARPPut
 41379 ;;		_SendTCP
 41380 ;;		_TCPRAMCopy
 41381 ;;		_TCPRAMCopyROM
 41382 ;; This function uses a non-reentrant model
 41383 ;;
 41384                           
 41385                           	psect	text102
 41386  01BA80                     __ptext102:
 41387                           	opt stack 0
 41388  01BA80                     _MACSetWritePtr:
 41389                           	opt stack 17
 41390                           
 41391                           ;ETH97J60.c: 707: WORD oldVal;
 41392                           ;ETH97J60.c: 709: oldVal = EWRPT;
 41393                           
 41394                           ;incstack = 0
 41395  01BA80  CEE2 F102          	movff	3810,MACSetWritePtr@oldVal	;volatile
 41396  01BA84  CEE3 F103          	movff	3811,MACSetWritePtr@oldVal+1	;volatile
 41397                           
 41398                           ;ETH97J60.c: 710: EWRPT = address;
 41399  01BA88  C100  FEE2         	movff	MACSetWritePtr@address,3810	;volatile
 41400  01BA8C  C101  FEE3         	movff	MACSetWritePtr@address+1,3811	;volatile
 41401                           
 41402                           ;ETH97J60.c: 711: return oldVal;
 41403                           ;	Return value of _MACSetWritePtr is never used
 41404  01BA90  0012               	return	
 41405  01BA92                     __end_of_MACSetWritePtr:
 41406                           	opt stack 0
 41407                           tblptru	equ	0xFF8
 41408                           tblptrh	equ	0xFF7
 41409                           tblptrl	equ	0xFF6
 41410                           tablat	equ	0xFF5
 41411                           prodh	equ	0xFF4
 41412                           prodl	equ	0xFF3
 41413                           intcon	equ	0xFF2
 41414                           intcon2	equ	0xFF1
 41415                           intcon3	equ	0xFF0
 41416                           indf0	equ	0xFEF
 41417                           postinc0	equ	0xFEE
 41418                           fsr0h	equ	0xFEA
 41419                           fsr0l	equ	0xFE9
 41420                           wreg	equ	0xFE8
 41421                           indf1	equ	0xFE7
 41422                           postinc1	equ	0xFE6
 41423                           postdec1	equ	0xFE5
 41424                           fsr1h	equ	0xFE2
 41425                           fsr1l	equ	0xFE1
 41426                           indf2	equ	0xFDF
 41427                           postinc2	equ	0xFDE
 41428                           postdec2	equ	0xFDD
 41429                           fsr2h	equ	0xFDA
 41430                           fsr2l	equ	0xFD9
 41431                           status	equ	0xFD8
 41432                           
 41433 ;; *************** function _MACSetReadPtr *****************
 41434 ;; Defined at:
 41435 ;;		line 730 in file "../tcpip/ETH97J60.c"
 41436 ;; Parameters:    Size  Location     Type
 41437 ;;  address         2    0[BANK1 ] unsigned short 
 41438 ;; Auto vars:     Size  Location     Type
 41439 ;;  oldVal          2    2[BANK1 ] unsigned short 
 41440 ;; Return value:  Size  Location     Type
 41441 ;;                  2    0[BANK1 ] unsigned short 
 41442 ;; Registers used:
 41443 ;;		None
 41444 ;; Tracked objects:
 41445 ;;		On entry : 0/0
 41446 ;;		On exit  : 0/0
 41447 ;;		Unchanged: 0/0
 41448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41449 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41450 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41452 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41453 ;;Total ram usage:        4 bytes
 41454 ;; Hardware stack levels used:    1
 41455 ;; Hardware stack levels required when called:   10
 41456 ;; This function calls:
 41457 ;;		Nothing
 41458 ;; This function is called by:
 41459 ;;		_SendTCP
 41460 ;;		_TCPRAMCopy
 41461 ;; This function uses a non-reentrant model
 41462 ;;
 41463                           
 41464                           	psect	text103
 41465  01BA92                     __ptext103:
 41466                           	opt stack 0
 41467  01BA92                     _MACSetReadPtr:
 41468                           	opt stack 17
 41469                           
 41470                           ;ETH97J60.c: 732: WORD oldVal;
 41471                           ;ETH97J60.c: 734: oldVal = ERDPT;
 41472                           
 41473                           ;incstack = 0
 41474  01BA92  CF7A F102          	movff	3962,MACSetReadPtr@oldVal	;volatile
 41475  01BA96  CF7B F103          	movff	3963,MACSetReadPtr@oldVal+1	;volatile
 41476                           
 41477                           ;ETH97J60.c: 735: ERDPT = address;
 41478  01BA9A  C100  FF7A         	movff	MACSetReadPtr@address,3962	;volatile
 41479  01BA9E  C101  FF7B         	movff	MACSetReadPtr@address+1,3963	;volatile
 41480                           
 41481                           ;ETH97J60.c: 736: return oldVal;
 41482                           ;	Return value of _MACSetReadPtr is never used
 41483  01BAA2  0012               	return	
 41484  01BAA4                     __end_of_MACSetReadPtr:
 41485                           	opt stack 0
 41486                           tblptru	equ	0xFF8
 41487                           tblptrh	equ	0xFF7
 41488                           tblptrl	equ	0xFF6
 41489                           tablat	equ	0xFF5
 41490                           prodh	equ	0xFF4
 41491                           prodl	equ	0xFF3
 41492                           intcon	equ	0xFF2
 41493                           intcon2	equ	0xFF1
 41494                           intcon3	equ	0xFF0
 41495                           indf0	equ	0xFEF
 41496                           postinc0	equ	0xFEE
 41497                           fsr0h	equ	0xFEA
 41498                           fsr0l	equ	0xFE9
 41499                           wreg	equ	0xFE8
 41500                           indf1	equ	0xFE7
 41501                           postinc1	equ	0xFE6
 41502                           postdec1	equ	0xFE5
 41503                           fsr1h	equ	0xFE2
 41504                           fsr1l	equ	0xFE1
 41505                           indf2	equ	0xFDF
 41506                           postinc2	equ	0xFDE
 41507                           postdec2	equ	0xFDD
 41508                           fsr2h	equ	0xFDA
 41509                           fsr2l	equ	0xFD9
 41510                           status	equ	0xFD8
 41511                           
 41512 ;; *************** function _MACPutArray *****************
 41513 ;; Defined at:
 41514 ;;		line 1194 in file "../tcpip/ETH97J60.c"
 41515 ;; Parameters:    Size  Location     Type
 41516 ;;  val             2    0[BANK1 ] PTR unsigned char 
 41517 ;;		 -> TCPRAMCopyROM@vBuffer(16), SendTCP@options(4), SendTCP@wVal(2), SendTCP@header(20), 
 41518 ;;		 -> RAM(3935), MyTCB.remote(10), MyTCB(39), IPPutHeader@header(20), 
 41519 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), AppConfig(51), 
 41520 ;;  len             2    2[BANK1 ] unsigned int 
 41521 ;; Auto vars:     Size  Location     Type
 41522 ;;		None
 41523 ;; Return value:  Size  Location     Type
 41524 ;;		None               void
 41525 ;; Registers used:
 41526 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41527 ;; Tracked objects:
 41528 ;;		On entry : 0/0
 41529 ;;		On exit  : 0/0
 41530 ;;		Unchanged: 0/0
 41531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41532 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41535 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41536 ;;Total ram usage:        4 bytes
 41537 ;; Hardware stack levels used:    1
 41538 ;; Hardware stack levels required when called:   10
 41539 ;; This function calls:
 41540 ;;		Nothing
 41541 ;; This function is called by:
 41542 ;;		_MACPutHeader
 41543 ;;		_ARPPut
 41544 ;;		_IPPutHeader
 41545 ;;		_SendTCP
 41546 ;;		_TCPRAMCopy
 41547 ;;		_TCPRAMCopyROM
 41548 ;; This function uses a non-reentrant model
 41549 ;;
 41550                           
 41551                           	psect	text104
 41552  01FFC8                     __ptext104:
 41553                           	opt stack 0
 41554  01FFC8                     _MACPutArray:
 41555                           	opt stack 17
 41556                           
 41557                           ;ETH97J60.c: 1196: while(len--)
 41558                           
 41559                           ;incstack = 0
 41560  01FFC8  D00C               	goto	l10070
 41561  01FFCA                     l10066:
 41562                           
 41563                           ;ETH97J60.c: 1197: {
 41564                           ;ETH97J60.c: 1202: errataTempL = *val++;
 41565  01FFCA  C100  FFD9         	movff	MACPutArray@val,fsr2l
 41566  01FFCE  C101  FFDA         	movff	MACPutArray@val+1,fsr2h
 41567  01FFD2  50DF               	movf	indf2,w,c
 41568  01FFD4  010E               	movlb	14	; () banked
 41569  01FFD6  6F7E               	movwf	126,b
 41570                           
 41571                           ; BSR set to: 14
 41572  01FFD8  0101               	movlb	1	; () banked
 41573  01FFDA  4B00               	infsnz	MACPutArray@val& (0+255),f,b
 41574  01FFDC  2B01               	incf	(MACPutArray@val+1)& (0+255),f,b
 41575  01FFDE  CE7E FF61          	movff	3710,3937	;# 
 41576  01FFE2                     l10070:
 41577  01FFE2  0101               	movlb	1	; () banked
 41578  01FFE4  0702               	decf	MACPutArray@len& (0+255),f,b
 41579  01FFE6  A0D8               	btfss	status,0,c
 41580  01FFE8  0703               	decf	(MACPutArray@len+1)& (0+255),f,b
 41581  01FFEA  0101               	movlb	1	; () banked
 41582  01FFEC  2902               	incf	MACPutArray@len& (0+255),w,b
 41583  01FFEE  B4D8               	btfsc	status,2,c
 41584  01FFF0  2903               	incf	(MACPutArray@len+1)& (0+255),w,b
 41585  01FFF2  B4D8               	btfsc	status,2,c
 41586                           
 41587                           ; BSR set to: 1
 41588                           
 41589                           ; BSR set to: 1
 41590  01FFF4  0012               	return	
 41591  01FFF6  D7E9               	goto	l10066
 41592  01FFF8                     __end_of_MACPutArray:
 41593                           	opt stack 0
 41594                           tblptru	equ	0xFF8
 41595                           tblptrh	equ	0xFF7
 41596                           tblptrl	equ	0xFF6
 41597                           tablat	equ	0xFF5
 41598                           prodh	equ	0xFF4
 41599                           prodl	equ	0xFF3
 41600                           intcon	equ	0xFF2
 41601                           intcon2	equ	0xFF1
 41602                           intcon3	equ	0xFF0
 41603                           indf0	equ	0xFEF
 41604                           postinc0	equ	0xFEE
 41605                           fsr0h	equ	0xFEA
 41606                           fsr0l	equ	0xFE9
 41607                           wreg	equ	0xFE8
 41608                           indf1	equ	0xFE7
 41609                           postinc1	equ	0xFE6
 41610                           postdec1	equ	0xFE5
 41611                           fsr1h	equ	0xFE2
 41612                           fsr1l	equ	0xFE1
 41613                           indf2	equ	0xFDF
 41614                           postinc2	equ	0xFDE
 41615                           postdec2	equ	0xFDD
 41616                           fsr2h	equ	0xFDA
 41617                           fsr2l	equ	0xFD9
 41618                           status	equ	0xFD8
 41619                           
 41620 ;; *************** function _MACMemCopyAsync *****************
 41621 ;; Defined at:
 41622 ;;		line 954 in file "../tcpip/ETH97J60.c"
 41623 ;; Parameters:    Size  Location     Type
 41624 ;;  destAddr        2    1[BANK1 ] unsigned short 
 41625 ;;  sourceAddr      2    3[BANK1 ] unsigned short 
 41626 ;;  len             2    5[BANK1 ] unsigned int 
 41627 ;; Auto vars:     Size  Location     Type
 41628 ;;  WriteSave       2   13[BANK1 ] struct .
 41629 ;;  ReadSave        2   11[BANK1 ] struct .
 41630 ;;  UpdateReadPo    1   16[BANK1 ] enum E5595
 41631 ;;  UpdateWriteP    1   15[BANK1 ] enum E5595
 41632 ;; Return value:  Size  Location     Type
 41633 ;;		None               void
 41634 ;; Registers used:
 41635 ;;		wreg, status,2, status,0, cstack
 41636 ;; Tracked objects:
 41637 ;;		On entry : 0/0
 41638 ;;		On exit  : 0/0
 41639 ;;		Unchanged: 0/0
 41640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 41641 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41642 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41643 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41644 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41645 ;;Total ram usage:       16 bytes
 41646 ;; Hardware stack levels used:    1
 41647 ;; Hardware stack levels required when called:   11
 41648 ;; This function calls:
 41649 ;;		_MACGet
 41650 ;;		_MACPut
 41651 ;; This function is called by:
 41652 ;;		_TCPRAMCopy
 41653 ;; This function uses a non-reentrant model
 41654 ;;
 41655                           
 41656                           	psect	text105
 41657  017116                     __ptext105:
 41658                           	opt stack 0
 41659  017116                     _MACMemCopyAsync:
 41660                           	opt stack 16
 41661                           
 41662                           ;ETH97J60.c: 956: WORD_VAL ReadSave, WriteSave;
 41663                           ;ETH97J60.c: 957: BOOL UpdateWritePointer = FALSE;
 41664                           
 41665                           ; BSR set to: 1
 41666                           ;incstack = 0
 41667  017116  0E00               	movlw	0
 41668  017118  0101               	movlb	1	; () banked
 41669  01711A  6F0F               	movwf	MACMemCopyAsync@UpdateWritePointer& (0+255),b
 41670                           
 41671                           ;ETH97J60.c: 958: BOOL UpdateReadPointer = FALSE;
 41672  01711C  0E00               	movlw	0
 41673  01711E  0101               	movlb	1	; () banked
 41674  017120  6F10               	movwf	MACMemCopyAsync@UpdateReadPointer& (0+255),b
 41675                           
 41676                           ; BSR set to: 1
 41677                           ;ETH97J60.c: 960: if(destAddr == (unsigned short)-1)
 41678  017122  0101               	movlb	1	; () banked
 41679  017124  2901               	incf	MACMemCopyAsync@destAddr& (0+255),w,b
 41680  017126  B4D8               	btfsc	status,2,c
 41681  017128  2902               	incf	(MACMemCopyAsync@destAddr+1)& (0+255),w,b
 41682  01712A  A4D8               	btfss	status,2,c
 41683  01712C  D007               	goto	l10084
 41684                           
 41685                           ; BSR set to: 1
 41686                           ;ETH97J60.c: 961: {
 41687                           ;ETH97J60.c: 962: UpdateWritePointer = TRUE;
 41688  01712E  0E01               	movlw	1
 41689  017130  0101               	movlb	1	; () banked
 41690  017132  6F0F               	movwf	MACMemCopyAsync@UpdateWritePointer& (0+255),b
 41691                           
 41692                           ; BSR set to: 1
 41693                           ;ETH97J60.c: 963: destAddr = EWRPT;
 41694  017134  CEE2 F101          	movff	3810,MACMemCopyAsync@destAddr	;volatile
 41695  017138  CEE3 F102          	movff	3811,MACMemCopyAsync@destAddr+1	;volatile
 41696  01713C                     l10084:
 41697                           
 41698                           ; BSR set to: 1
 41699                           ;ETH97J60.c: 964: }
 41700                           ;ETH97J60.c: 965: if(sourceAddr == (unsigned short)-1)
 41701  01713C  0101               	movlb	1	; () banked
 41702  01713E  2903               	incf	MACMemCopyAsync@sourceAddr& (0+255),w,b
 41703  017140  B4D8               	btfsc	status,2,c
 41704  017142  2904               	incf	(MACMemCopyAsync@sourceAddr+1)& (0+255),w,b
 41705  017144  A4D8               	btfss	status,2,c
 41706  017146  D007               	goto	l10090
 41707                           
 41708                           ; BSR set to: 1
 41709                           ;ETH97J60.c: 966: {
 41710                           ;ETH97J60.c: 967: UpdateReadPointer = TRUE;
 41711  017148  0E01               	movlw	1
 41712  01714A  0101               	movlb	1	; () banked
 41713  01714C  6F10               	movwf	MACMemCopyAsync@UpdateReadPointer& (0+255),b
 41714                           
 41715                           ; BSR set to: 1
 41716                           ;ETH97J60.c: 968: sourceAddr = ERDPT;
 41717  01714E  CF7A F103          	movff	3962,MACMemCopyAsync@sourceAddr	;volatile
 41718  017152  CF7B F104          	movff	3963,MACMemCopyAsync@sourceAddr+1	;volatile
 41719  017156                     l10090:
 41720                           
 41721                           ; BSR set to: 1
 41722                           ;ETH97J60.c: 969: }
 41723                           ;ETH97J60.c: 973: if(len <= 1u)
 41724  017156  0E02               	movlw	2
 41725  017158  0101               	movlb	1	; () banked
 41726  01715A  5D05               	subwf	MACMemCopyAsync@len& (0+255),w,b
 41727  01715C  0E00               	movlw	0
 41728  01715E  0101               	movlb	1	; () banked
 41729  017160  5906               	subwfb	(MACMemCopyAsync@len+1)& (0+255),w,b
 41730  017162  B0D8               	btfsc	status,0,c
 41731  017164  D02E               	goto	l10102
 41732                           
 41733                           ; BSR set to: 1
 41734                           ;ETH97J60.c: 974: {
 41735                           ;ETH97J60.c: 975: ReadSave.Val = ERDPT;
 41736  017166  CF7A F10B          	movff	3962,MACMemCopyAsync@ReadSave	;volatile
 41737  01716A  CF7B F10C          	movff	3963,MACMemCopyAsync@ReadSave+1	;volatile
 41738                           
 41739                           ;ETH97J60.c: 976: WriteSave.Val = EWRPT;
 41740  01716E  CEE2 F10D          	movff	3810,MACMemCopyAsync@WriteSave	;volatile
 41741  017172  CEE3 F10E          	movff	3811,MACMemCopyAsync@WriteSave+1	;volatile
 41742                           
 41743                           ;ETH97J60.c: 977: ERDPT = sourceAddr;
 41744  017176  C103  FF7A         	movff	MACMemCopyAsync@sourceAddr,3962	;volatile
 41745  01717A  C104  FF7B         	movff	MACMemCopyAsync@sourceAddr+1,3963	;volatile
 41746                           
 41747                           ;ETH97J60.c: 978: EWRPT = destAddr;
 41748  01717E  C101  FEE2         	movff	MACMemCopyAsync@destAddr,3810	;volatile
 41749  017182  C102  FEE3         	movff	MACMemCopyAsync@destAddr+1,3811	;volatile
 41750                           
 41751                           ;ETH97J60.c: 979: while(len--)
 41752  017186  D004               	goto	l10096
 41753  017188                     l10094:
 41754                           
 41755                           ; BSR set to: 1
 41756                           ;ETH97J60.c: 980: MACPut(MACGet());
 41757  017188  EC76  F0DD         	call	_MACGet	;wreg free
 41758  01718C  EC63  F0DD         	call	_MACPut
 41759  017190                     l10096:
 41760  017190  0101               	movlb	1	; () banked
 41761  017192  0705               	decf	MACMemCopyAsync@len& (0+255),f,b
 41762  017194  A0D8               	btfss	status,0,c
 41763  017196  0706               	decf	(MACMemCopyAsync@len+1)& (0+255),f,b
 41764  017198  0101               	movlb	1	; () banked
 41765  01719A  2905               	incf	MACMemCopyAsync@len& (0+255),w,b
 41766  01719C  B4D8               	btfsc	status,2,c
 41767  01719E  2906               	incf	(MACMemCopyAsync@len+1)& (0+255),w,b
 41768  0171A0  A4D8               	btfss	status,2,c
 41769  0171A2  D7F2               	goto	l10094
 41770                           
 41771                           ; BSR set to: 1
 41772                           ;ETH97J60.c: 981: if(!UpdateReadPointer)
 41773  0171A4  0101               	movlb	1	; () banked
 41774  0171A6  6710               	tstfsz	MACMemCopyAsync@UpdateReadPointer& (0+255),b
 41775  0171A8  D004               	goto	l345
 41776                           
 41777                           ; BSR set to: 1
 41778                           ;ETH97J60.c: 982: {
 41779                           ;ETH97J60.c: 983: ERDPT = ReadSave.Val;
 41780  0171AA  C10B  FF7A         	movff	MACMemCopyAsync@ReadSave,3962	;volatile
 41781  0171AE  C10C  FF7B         	movff	MACMemCopyAsync@ReadSave+1,3963	;volatile
 41782  0171B2                     l345:
 41783                           
 41784                           ; BSR set to: 1
 41785                           ;ETH97J60.c: 984: }
 41786                           ;ETH97J60.c: 985: if(!UpdateWritePointer)
 41787  0171B2  0101               	movlb	1	; () banked
 41788  0171B4  670F               	tstfsz	MACMemCopyAsync@UpdateWritePointer& (0+255),b
 41789  0171B6  0012               	return	
 41790                           
 41791                           ; BSR set to: 1
 41792                           ;ETH97J60.c: 986: {
 41793                           ;ETH97J60.c: 987: EWRPT = WriteSave.Val;
 41794  0171B8  C10D  FEE2         	movff	MACMemCopyAsync@WriteSave,3810	;volatile
 41795  0171BC  C10E  FEE3         	movff	MACMemCopyAsync@WriteSave+1,3811	;volatile
 41796  0171C0  0012               	return	
 41797  0171C2                     l10102:
 41798                           
 41799                           ; BSR set to: 1
 41800                           ;ETH97J60.c: 990: else
 41801                           ;ETH97J60.c: 991: {
 41802                           ;ETH97J60.c: 992: if(UpdateWritePointer)
 41803  0171C2  0101               	movlb	1	; () banked
 41804  0171C4  510F               	movf	MACMemCopyAsync@UpdateWritePointer& (0+255),w,b
 41805  0171C6  B4D8               	btfsc	status,2,c
 41806  0171C8  D010               	goto	l348
 41807                           
 41808                           ; BSR set to: 1
 41809                           ;ETH97J60.c: 993: {
 41810                           ;ETH97J60.c: 994: WriteSave.Val = destAddr + len;
 41811  0171CA  0101               	movlb	1	; () banked
 41812  0171CC  5105               	movf	MACMemCopyAsync@len& (0+255),w,b
 41813  0171CE  0101               	movlb	1	; () banked
 41814  0171D0  2501               	addwf	MACMemCopyAsync@destAddr& (0+255),w,b
 41815  0171D2  0101               	movlb	1	; () banked
 41816  0171D4  6F0D               	movwf	MACMemCopyAsync@WriteSave& (0+255),b
 41817  0171D6  0101               	movlb	1	; () banked
 41818  0171D8  5106               	movf	(MACMemCopyAsync@len+1)& (0+255),w,b
 41819  0171DA  0101               	movlb	1	; () banked
 41820  0171DC  2102               	addwfc	(MACMemCopyAsync@destAddr+1)& (0+255),w,b
 41821  0171DE  0101               	movlb	1	; () banked
 41822  0171E0  6F0E               	movwf	(MACMemCopyAsync@WriteSave+1)& (0+255),b
 41823                           
 41824                           ; BSR set to: 1
 41825                           ;ETH97J60.c: 995: EWRPT = WriteSave.Val;
 41826  0171E2  C10D  FEE2         	movff	MACMemCopyAsync@WriteSave,3810	;volatile
 41827  0171E6  C10E  FEE3         	movff	MACMemCopyAsync@WriteSave+1,3811	;volatile
 41828  0171EA                     l348:
 41829                           
 41830                           ; BSR set to: 1
 41831                           ;ETH97J60.c: 996: }
 41832                           ;ETH97J60.c: 997: len += sourceAddr - 1;
 41833  0171EA  0EFF               	movlw	255
 41834  0171EC  0101               	movlb	1	; () banked
 41835  0171EE  6F07               	movwf	??_MACMemCopyAsync& (0+255),b
 41836  0171F0  0EFF               	movlw	255
 41837  0171F2  6F08               	movwf	(??_MACMemCopyAsync+1)& (0+255),b
 41838  0171F4  0101               	movlb	1	; () banked
 41839  0171F6  C103  F109         	movff	MACMemCopyAsync@sourceAddr,??_MACMemCopyAsync+2
 41840  0171FA  0101               	movlb	1	; () banked
 41841  0171FC  C104  F10A         	movff	MACMemCopyAsync@sourceAddr+1,??_MACMemCopyAsync+3
 41842  017200  0101               	movlb	1	; () banked
 41843  017202  5107               	movf	??_MACMemCopyAsync& (0+255),w,b
 41844  017204  0101               	movlb	1	; () banked
 41845  017206  2709               	addwf	(??_MACMemCopyAsync+2)& (0+255),f,b
 41846  017208  0101               	movlb	1	; () banked
 41847  01720A  5108               	movf	(??_MACMemCopyAsync+1)& (0+255),w,b
 41848  01720C  0101               	movlb	1	; () banked
 41849  01720E  230A               	addwfc	(??_MACMemCopyAsync+3)& (0+255),f,b
 41850  017210  0101               	movlb	1	; () banked
 41851  017212  5109               	movf	(??_MACMemCopyAsync+2)& (0+255),w,b
 41852  017214  0101               	movlb	1	; () banked
 41853  017216  2705               	addwf	MACMemCopyAsync@len& (0+255),f,b
 41854  017218  0101               	movlb	1	; () banked
 41855  01721A  510A               	movf	(??_MACMemCopyAsync+3)& (0+255),w,b
 41856  01721C  0101               	movlb	1	; () banked
 41857  01721E  2306               	addwfc	(MACMemCopyAsync@len+1)& (0+255),f,b
 41858  017220                     l349:
 41859  017220  BAD2               	btfsc	4050,5,c	;volatile
 41860  017222  D7FE               	goto	l349
 41861                           
 41862                           ;ETH97J60.c: 999: EDMAST = sourceAddr;
 41863  017224  C103  FEF0         	movff	MACMemCopyAsync@sourceAddr,3824	;volatile
 41864  017228  C104  FEF1         	movff	MACMemCopyAsync@sourceAddr+1,3825	;volatile
 41865                           
 41866                           ;ETH97J60.c: 1000: EDMADST = destAddr;
 41867  01722C  C101  FEF4         	movff	MACMemCopyAsync@destAddr,3828	;volatile
 41868  017230  C102  FEF5         	movff	MACMemCopyAsync@destAddr+1,3829	;volatile
 41869                           
 41870                           ;ETH97J60.c: 1001: if((sourceAddr <= ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul -
      +                           0ul)-2ul) | 0x0001ul)) && (len > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0u
      +                          l)-2ul) | 0x0001ul)))
 41871  017234  0EA6               	movlw	166
 41872  017236  0101               	movlb	1	; () banked
 41873  017238  5D03               	subwf	MACMemCopyAsync@sourceAddr& (0+255),w,b
 41874  01723A  0E12               	movlw	18
 41875  01723C  0101               	movlb	1	; () banked
 41876  01723E  5904               	subwfb	(MACMemCopyAsync@sourceAddr+1)& (0+255),w,b
 41877  017240  B0D8               	btfsc	status,0,c
 41878  017242  D00F               	goto	l10114
 41879                           
 41880                           ; BSR set to: 1
 41881  017244  0EA6               	movlw	166
 41882  017246  0101               	movlb	1	; () banked
 41883  017248  5D05               	subwf	MACMemCopyAsync@len& (0+255),w,b
 41884  01724A  0E12               	movlw	18
 41885  01724C  0101               	movlb	1	; () banked
 41886  01724E  5906               	subwfb	(MACMemCopyAsync@len+1)& (0+255),w,b
 41887  017250  A0D8               	btfss	status,0,c
 41888  017252  D007               	goto	l10114
 41889                           
 41890                           ; BSR set to: 1
 41891                           ;ETH97J60.c: 1002: len -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul)
      +                           | 0x0001ul)-(0ul)+1ul);
 41892  017254  0101               	movlb	1	; () banked
 41893  017256  0EA6               	movlw	166
 41894  017258  0101               	movlb	1	; () banked
 41895  01725A  5F05               	subwf	MACMemCopyAsync@len& (0+255),f,b
 41896  01725C  0E12               	movlw	18
 41897  01725E  0101               	movlb	1	; () banked
 41898  017260  5B06               	subwfb	(MACMemCopyAsync@len+1)& (0+255),f,b
 41899  017262                     l10114:
 41900                           
 41901                           ; BSR set to: 1
 41902                           ;ETH97J60.c: 1003: EDMAND = len;
 41903  017262  C105  FEF2         	movff	MACMemCopyAsync@len,3826	;volatile
 41904  017266  C106  FEF3         	movff	MACMemCopyAsync@len+1,3827	;volatile
 41905                           
 41906                           ; BSR set to: 1
 41907                           ;ETH97J60.c: 1004: ECON1bits.CSUMEN = 0;
 41908  01726A  98D2               	bcf	4050,4,c	;volatile
 41909                           
 41910                           ; BSR set to: 1
 41911                           ;ETH97J60.c: 1005: ECON1bits.DMAST = 1;
 41912  01726C  8AD2               	bsf	4050,5,c	;volatile
 41913  01726E                     l353:
 41914  01726E  BAD2               	btfsc	4050,5,c	;volatile
 41915  017270  D7FE               	goto	l353
 41916                           
 41917                           ;ETH97J60.c: 1008: if(UpdateReadPointer)
 41918  017272  0101               	movlb	1	; () banked
 41919  017274  5110               	movf	MACMemCopyAsync@UpdateReadPointer& (0+255),w,b
 41920  017276  B4D8               	btfsc	status,2,c
 41921  017278  0012               	return	
 41922                           
 41923                           ; BSR set to: 1
 41924                           ;ETH97J60.c: 1009: {
 41925                           ;ETH97J60.c: 1010: len++;
 41926  01727A  0101               	movlb	1	; () banked
 41927  01727C  4B05               	infsnz	MACMemCopyAsync@len& (0+255),f,b
 41928  01727E  2B06               	incf	(MACMemCopyAsync@len+1)& (0+255),f,b
 41929                           
 41930                           ; BSR set to: 1
 41931                           ;ETH97J60.c: 1011: if((sourceAddr <= ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul -
      +                           0ul)-2ul) | 0x0001ul)) && (len > ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0u
      +                          l)-2ul) | 0x0001ul)))
 41932  017280  0EA6               	movlw	166
 41933  017282  0101               	movlb	1	; () banked
 41934  017284  5D03               	subwf	MACMemCopyAsync@sourceAddr& (0+255),w,b
 41935  017286  0E12               	movlw	18
 41936  017288  0101               	movlb	1	; () banked
 41937  01728A  5904               	subwfb	(MACMemCopyAsync@sourceAddr+1)& (0+255),w,b
 41938  01728C  B0D8               	btfsc	status,0,c
 41939  01728E  D00F               	goto	l10130
 41940                           
 41941                           ; BSR set to: 1
 41942  017290  0EA6               	movlw	166
 41943  017292  0101               	movlb	1	; () banked
 41944  017294  5D05               	subwf	MACMemCopyAsync@len& (0+255),w,b
 41945  017296  0E12               	movlw	18
 41946  017298  0101               	movlb	1	; () banked
 41947  01729A  5906               	subwfb	(MACMemCopyAsync@len+1)& (0+255),w,b
 41948  01729C  A0D8               	btfss	status,0,c
 41949  01729E  D007               	goto	l10130
 41950                           
 41951                           ; BSR set to: 1
 41952                           ;ETH97J60.c: 1012: len -= (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul)
      +                           | 0x0001ul)-(0ul)+1ul);
 41953  0172A0  0101               	movlb	1	; () banked
 41954  0172A2  0EA6               	movlw	166
 41955  0172A4  0101               	movlb	1	; () banked
 41956  0172A6  5F05               	subwf	MACMemCopyAsync@len& (0+255),f,b
 41957  0172A8  0E12               	movlw	18
 41958  0172AA  0101               	movlb	1	; () banked
 41959  0172AC  5B06               	subwfb	(MACMemCopyAsync@len+1)& (0+255),f,b
 41960  0172AE                     l10130:
 41961                           
 41962                           ; BSR set to: 1
 41963                           ;ETH97J60.c: 1013: ERDPT = len;
 41964  0172AE  C105  FF7A         	movff	MACMemCopyAsync@len,3962	;volatile
 41965  0172B2  C106  FF7B         	movff	MACMemCopyAsync@len+1,3963	;volatile
 41966  0172B6  0012               	return	
 41967  0172B8                     __end_of_MACMemCopyAsync:
 41968                           	opt stack 0
 41969                           tblptru	equ	0xFF8
 41970                           tblptrh	equ	0xFF7
 41971                           tblptrl	equ	0xFF6
 41972                           tablat	equ	0xFF5
 41973                           prodh	equ	0xFF4
 41974                           prodl	equ	0xFF3
 41975                           intcon	equ	0xFF2
 41976                           intcon2	equ	0xFF1
 41977                           intcon3	equ	0xFF0
 41978                           indf0	equ	0xFEF
 41979                           postinc0	equ	0xFEE
 41980                           fsr0h	equ	0xFEA
 41981                           fsr0l	equ	0xFE9
 41982                           wreg	equ	0xFE8
 41983                           indf1	equ	0xFE7
 41984                           postinc1	equ	0xFE6
 41985                           postdec1	equ	0xFE5
 41986                           fsr1h	equ	0xFE2
 41987                           fsr1l	equ	0xFE1
 41988                           indf2	equ	0xFDF
 41989                           postinc2	equ	0xFDE
 41990                           postdec2	equ	0xFDD
 41991                           fsr2h	equ	0xFDA
 41992                           fsr2l	equ	0xFD9
 41993                           status	equ	0xFD8
 41994                           
 41995 ;; *************** function _MACGet *****************
 41996 ;; Defined at:
 41997 ;;		line 1079 in file "../tcpip/ETH97J60.c"
 41998 ;; Parameters:    Size  Location     Type
 41999 ;;		None
 42000 ;; Auto vars:     Size  Location     Type
 42001 ;;		None
 42002 ;; Return value:  Size  Location     Type
 42003 ;;                  1    wreg      unsigned char 
 42004 ;; Registers used:
 42005 ;;		wreg, status,2
 42006 ;; Tracked objects:
 42007 ;;		On entry : 0/0
 42008 ;;		On exit  : 0/0
 42009 ;;		Unchanged: 0/0
 42010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42015 ;;Total ram usage:        0 bytes
 42016 ;; Hardware stack levels used:    1
 42017 ;; Hardware stack levels required when called:   10
 42018 ;; This function calls:
 42019 ;;		Nothing
 42020 ;; This function is called by:
 42021 ;;		_MACMemCopyAsync
 42022 ;;		_GetMaxSegSizeOption
 42023 ;; This function uses a non-reentrant model
 42024 ;;
 42025                           
 42026                           	psect	text106
 42027  01BAEC                     __ptext106:
 42028                           	opt stack 0
 42029  01BAEC                     _MACGet:
 42030                           	opt stack 16
 42031                           
 42032                           ; BSR set to: 1
 42033                           ;incstack = 0
 42034  01BAEC  CF61 FE7E          	movff	3937,3710	;# 
 42035                           
 42036                           ;ETH97J60.c: 1083: return errataTempL;
 42037  01BAF0  010E               	movlb	14	; () banked
 42038  01BAF2  517E               	movf	126,w,b
 42039  01BAF4  0012               	return	
 42040  01BAF6                     __end_of_MACGet:
 42041                           	opt stack 0
 42042                           tblptru	equ	0xFF8
 42043                           tblptrh	equ	0xFF7
 42044                           tblptrl	equ	0xFF6
 42045                           tablat	equ	0xFF5
 42046                           prodh	equ	0xFF4
 42047                           prodl	equ	0xFF3
 42048                           intcon	equ	0xFF2
 42049                           intcon2	equ	0xFF1
 42050                           intcon3	equ	0xFF0
 42051                           indf0	equ	0xFEF
 42052                           postinc0	equ	0xFEE
 42053                           fsr0h	equ	0xFEA
 42054                           fsr0l	equ	0xFE9
 42055                           wreg	equ	0xFE8
 42056                           indf1	equ	0xFE7
 42057                           postinc1	equ	0xFE6
 42058                           postdec1	equ	0xFE5
 42059                           fsr1h	equ	0xFE2
 42060                           fsr1l	equ	0xFE1
 42061                           indf2	equ	0xFDF
 42062                           postinc2	equ	0xFDE
 42063                           postdec2	equ	0xFDD
 42064                           fsr2h	equ	0xFDA
 42065                           fsr2l	equ	0xFD9
 42066                           status	equ	0xFD8
 42067                           
 42068 ;; *************** function _MACIsMemCopyDone *****************
 42069 ;; Defined at:
 42070 ;;		line 1056 in file "../tcpip/ETH97J60.c"
 42071 ;; Parameters:    Size  Location     Type
 42072 ;;		None
 42073 ;; Auto vars:     Size  Location     Type
 42074 ;;		None
 42075 ;; Return value:  Size  Location     Type
 42076 ;;                  1    wreg      unsigned char 
 42077 ;; Registers used:
 42078 ;;		wreg
 42079 ;; Tracked objects:
 42080 ;;		On entry : 0/0
 42081 ;;		On exit  : 0/0
 42082 ;;		Unchanged: 0/0
 42083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42088 ;;Total ram usage:        0 bytes
 42089 ;; Hardware stack levels used:    1
 42090 ;; Hardware stack levels required when called:   10
 42091 ;; This function calls:
 42092 ;;		Nothing
 42093 ;; This function is called by:
 42094 ;;		_TCPRAMCopy
 42095 ;; This function uses a non-reentrant model
 42096 ;;
 42097                           
 42098                           	psect	text107
 42099  01BAD4                     __ptext107:
 42100                           	opt stack 0
 42101  01BAD4                     _MACIsMemCopyDone:
 42102                           	opt stack 17
 42103                           
 42104                           ;ETH97J60.c: 1058: return !ECON1bits.DMAST;
 42105                           
 42106                           ; BSR set to: 14
 42107                           ;incstack = 0
 42108  01BAD4  BAD2               	btfsc	4050,5,c	;volatile
 42109  01BAD6  D002               	goto	u10360
 42110  01BAD8  0E01               	movlw	1
 42111  01BADA  0012               	return	
 42112  01BADC                     u10360:
 42113  01BADC  0E00               	movlw	0
 42114  01BADE  0012               	return	
 42115  01BAE0                     __end_of_MACIsMemCopyDone:
 42116                           	opt stack 0
 42117                           tblptru	equ	0xFF8
 42118                           tblptrh	equ	0xFF7
 42119                           tblptrl	equ	0xFF6
 42120                           tablat	equ	0xFF5
 42121                           prodh	equ	0xFF4
 42122                           prodl	equ	0xFF3
 42123                           intcon	equ	0xFF2
 42124                           intcon2	equ	0xFF1
 42125                           intcon3	equ	0xFF0
 42126                           indf0	equ	0xFEF
 42127                           postinc0	equ	0xFEE
 42128                           fsr0h	equ	0xFEA
 42129                           fsr0l	equ	0xFE9
 42130                           wreg	equ	0xFE8
 42131                           indf1	equ	0xFE7
 42132                           postinc1	equ	0xFE6
 42133                           postdec1	equ	0xFE5
 42134                           fsr1h	equ	0xFE2
 42135                           fsr1l	equ	0xFE1
 42136                           indf2	equ	0xFDF
 42137                           postinc2	equ	0xFDE
 42138                           postdec2	equ	0xFDD
 42139                           fsr2h	equ	0xFDA
 42140                           fsr2l	equ	0xFD9
 42141                           status	equ	0xFD8
 42142                           
 42143 ;; *************** function _MACGetArray *****************
 42144 ;; Defined at:
 42145 ;;		line 1108 in file "../tcpip/ETH97J60.c"
 42146 ;; Parameters:    Size  Location     Type
 42147 ;;  val             2    0[BANK1 ] PTR unsigned char 
 42148 ;;		 -> TCPProcess@TCPHeader(20), RAM(3935), IPGetHeader@header(20), ARPProcess@packet(28), 
 42149 ;;		 -> NULL(0), CalcIPBufferChecksum@DataBuffer(20), MACGetHeader@header(20), 
 42150 ;;  len             2    2[BANK1 ] unsigned int 
 42151 ;; Auto vars:     Size  Location     Type
 42152 ;;  w               2    4[BANK1 ] unsigned short 
 42153 ;; Return value:  Size  Location     Type
 42154 ;;                  2    0[BANK1 ] unsigned int 
 42155 ;; Registers used:
 42156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42157 ;; Tracked objects:
 42158 ;;		On entry : 0/0
 42159 ;;		On exit  : 0/0
 42160 ;;		Unchanged: 0/0
 42161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42162 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42163 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42165 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42166 ;;Total ram usage:        6 bytes
 42167 ;; Hardware stack levels used:    1
 42168 ;; Hardware stack levels required when called:   10
 42169 ;; This function calls:
 42170 ;;		Nothing
 42171 ;; This function is called by:
 42172 ;;		_MACGetHeader
 42173 ;;		_CalcIPBufferChecksum
 42174 ;;		_ARPProcess
 42175 ;;		_IPGetHeader
 42176 ;;		_TCPProcess
 42177 ;;		_GetMaxSegSizeOption
 42178 ;;		_TCPRAMCopy
 42179 ;; This function uses a non-reentrant model
 42180 ;;
 42181                           
 42182                           	psect	text108
 42183  01AE6A                     __ptext108:
 42184                           	opt stack 0
 42185  01AE6A                     _MACGetArray:
 42186                           	opt stack 17
 42187                           
 42188                           ;ETH97J60.c: 1110: WORD w;
 42189                           ;ETH97J60.c: 1112: w = len;
 42190                           
 42191                           ;incstack = 0
 42192  01AE6A  C102  F104         	movff	MACGetArray@len,MACGetArray@w
 42193  01AE6E  C103  F105         	movff	MACGetArray@len+1,MACGetArray@w+1
 42194                           
 42195                           ;ETH97J60.c: 1113: if(val)
 42196  01AE72  0101               	movlb	1	; () banked
 42197  01AE74  5101               	movf	(MACGetArray@val+1)& (0+255),w,b
 42198  01AE76  1100               	iorwf	MACGetArray@val& (0+255),w,b
 42199  01AE78  A4D8               	btfss	status,2,c
 42200  01AE7A  D00D               	goto	l10048
 42201  01AE7C  D019               	goto	l10050
 42202  01AE7E                     l369:
 42203                           
 42204                           ; BSR set to: 1
 42205  01AE7E  CF61 FE7E          	movff	3937,3710	;# 
 42206                           
 42207                           ;ETH97J60.c: 1119: *val++ = errataTempL;
 42208  01AE82  C100  FFD9         	movff	MACGetArray@val,fsr2l
 42209  01AE86  C101  FFDA         	movff	MACGetArray@val+1,fsr2h
 42210  01AE8A  010E               	movlb	14	; () banked
 42211  01AE8C  CE7E FFDF          	movff	3710,indf2
 42212                           
 42213                           ; BSR set to: 14
 42214  01AE90  0101               	movlb	1	; () banked
 42215  01AE92  4B00               	infsnz	MACGetArray@val& (0+255),f,b
 42216  01AE94  2B01               	incf	(MACGetArray@val+1)& (0+255),f,b
 42217  01AE96                     l10048:
 42218                           
 42219                           ; BSR set to: 1
 42220  01AE96  0101               	movlb	1	; () banked
 42221  01AE98  0704               	decf	MACGetArray@w& (0+255),f,b
 42222  01AE9A  A0D8               	btfss	status,0,c
 42223  01AE9C  0705               	decf	(MACGetArray@w+1)& (0+255),f,b
 42224  01AE9E  0101               	movlb	1	; () banked
 42225  01AEA0  2904               	incf	MACGetArray@w& (0+255),w,b
 42226  01AEA2  B4D8               	btfsc	status,2,c
 42227  01AEA4  2905               	incf	(MACGetArray@w+1)& (0+255),w,b
 42228  01AEA6  B4D8               	btfsc	status,2,c
 42229  01AEA8  0012               	return	
 42230  01AEAA  D7E9               	goto	l369
 42231  01AEAC                     l373:
 42232                           
 42233                           ; BSR set to: 1
 42234  01AEAC  CF61 FE7E          	movff	3937,3710	;# 
 42235  01AEB0                     l10050:
 42236  01AEB0  0101               	movlb	1	; () banked
 42237  01AEB2  0704               	decf	MACGetArray@w& (0+255),f,b
 42238  01AEB4  A0D8               	btfss	status,0,c
 42239  01AEB6  0705               	decf	(MACGetArray@w+1)& (0+255),f,b
 42240  01AEB8  0101               	movlb	1	; () banked
 42241  01AEBA  2904               	incf	MACGetArray@w& (0+255),w,b
 42242  01AEBC  B4D8               	btfsc	status,2,c
 42243  01AEBE  2905               	incf	(MACGetArray@w+1)& (0+255),w,b
 42244  01AEC0  B4D8               	btfsc	status,2,c
 42245                           
 42246                           ; BSR set to: 1
 42247                           
 42248                           ; BSR set to: 1
 42249                           ;ETH97J60.c: 1132: }
 42250                           ;ETH97J60.c: 1138: }
 42251                           ;ETH97J60.c: 1139: }
 42252                           ;ETH97J60.c: 1141: return len;
 42253                           ;	Return value of _MACGetArray is never used
 42254                           
 42255                           ; BSR set to: 1
 42256  01AEC2  0012               	return	
 42257  01AEC4  D7F3               	goto	l373
 42258  01AEC6                     __end_of_MACGetArray:
 42259                           	opt stack 0
 42260                           tblptru	equ	0xFF8
 42261                           tblptrh	equ	0xFF7
 42262                           tblptrl	equ	0xFF6
 42263                           tablat	equ	0xFF5
 42264                           prodh	equ	0xFF4
 42265                           prodl	equ	0xFF3
 42266                           intcon	equ	0xFF2
 42267                           intcon2	equ	0xFF1
 42268                           intcon3	equ	0xFF0
 42269                           indf0	equ	0xFEF
 42270                           postinc0	equ	0xFEE
 42271                           fsr0h	equ	0xFEA
 42272                           fsr0l	equ	0xFE9
 42273                           wreg	equ	0xFE8
 42274                           indf1	equ	0xFE7
 42275                           postinc1	equ	0xFE6
 42276                           postdec1	equ	0xFE5
 42277                           fsr1h	equ	0xFE2
 42278                           fsr1l	equ	0xFE1
 42279                           indf2	equ	0xFDF
 42280                           postinc2	equ	0xFDE
 42281                           postdec2	equ	0xFDD
 42282                           fsr2h	equ	0xFDA
 42283                           fsr2l	equ	0xFD9
 42284                           status	equ	0xFD8
 42285                           
 42286 ;; *************** function _LFSRRand *****************
 42287 ;; Defined at:
 42288 ;;		line 142 in file "../tcpip/helpers.c"
 42289 ;; Parameters:    Size  Location     Type
 42290 ;;		None
 42291 ;; Auto vars:     Size  Location     Type
 42292 ;;  i               1   14[BANK1 ] unsigned char 
 42293 ;; Return value:  Size  Location     Type
 42294 ;;                  2    0[BANK1 ] unsigned int 
 42295 ;; Registers used:
 42296 ;;		wreg, status,2, status,0
 42297 ;; Tracked objects:
 42298 ;;		On entry : 0/0
 42299 ;;		On exit  : 0/0
 42300 ;;		Unchanged: 0/0
 42301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42302 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42303 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42304 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42305 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42306 ;;Total ram usage:       15 bytes
 42307 ;; Hardware stack levels used:    1
 42308 ;; Hardware stack levels required when called:   10
 42309 ;; This function calls:
 42310 ;;		Nothing
 42311 ;; This function is called by:
 42312 ;;		_LFSRSeedRand
 42313 ;;		_GenerateRandomDWORD
 42314 ;;		_CloseSocket
 42315 ;; This function uses a non-reentrant model
 42316 ;;
 42317                           
 42318                           	psect	text109
 42319  0196F6                     __ptext109:
 42320                           	opt stack 0
 42321  0196F6                     _LFSRRand:
 42322                           	opt stack 16
 42323                           
 42324                           ;helpers.c: 144: uint8_t i;
 42325                           ;helpers.c: 149: for(i = 0; i < 15; i++)
 42326                           
 42327                           ; BSR set to: 1
 42328                           ;incstack = 0
 42329  0196F6  0E00               	movlw	0
 42330  0196F8  0101               	movlb	1	; () banked
 42331  0196FA  6F0E               	movwf	LFSRRand@i& (0+255),b
 42332  0196FC  D05E               	goto	L43
 42333  0196FE                     l10536:
 42334                           
 42335                           ; BSR set to: 1
 42336                           ;helpers.c: 150: dwLFSRRandSeed = (dwLFSRRandSeed >> 1) ^ ((0ul - (dwLFSRRandSeed & 1ul)
      +                          ) & 0xD0000001ul);
 42337  0196FE  0E01               	movlw	1
 42338  019700  0100               	movlb	0	; () banked
 42339  019702  15F3               	andwf	_dwLFSRRandSeed& (0+255),w,b
 42340  019704  0101               	movlb	1	; () banked
 42341  019706  6F02               	movwf	??_LFSRRand& (0+255),b
 42342  019708  0E00               	movlw	0
 42343  01970A  0100               	movlb	0	; () banked
 42344  01970C  15F4               	andwf	(_dwLFSRRandSeed+1)& (0+255),w,b
 42345  01970E  0101               	movlb	1	; () banked
 42346  019710  6F03               	movwf	(??_LFSRRand+1)& (0+255),b
 42347  019712  0E00               	movlw	0
 42348  019714  0100               	movlb	0	; () banked
 42349  019716  15F5               	andwf	(_dwLFSRRandSeed+2)& (0+255),w,b
 42350  019718  0101               	movlb	1	; () banked
 42351  01971A  6F04               	movwf	(??_LFSRRand+2)& (0+255),b
 42352  01971C  0E00               	movlw	0
 42353  01971E  0100               	movlb	0	; () banked
 42354  019720  15F6               	andwf	(_dwLFSRRandSeed+3)& (0+255),w,b
 42355  019722  0101               	movlb	1	; () banked
 42356  019724  6F05               	movwf	(??_LFSRRand+3)& (0+255),b
 42357  019726  0101               	movlb	1	; () banked
 42358  019728  1F02               	comf	??_LFSRRand& (0+255),f,b
 42359  01972A  1F03               	comf	(??_LFSRRand+1)& (0+255),f,b
 42360  01972C  1F04               	comf	(??_LFSRRand+2)& (0+255),f,b
 42361  01972E  1F05               	comf	(??_LFSRRand+3)& (0+255),f,b
 42362  019730  2B02               	incf	??_LFSRRand& (0+255),f,b
 42363  019732  0E00               	movlw	0
 42364  019734  2303               	addwfc	(??_LFSRRand+1)& (0+255),f,b
 42365  019736  2304               	addwfc	(??_LFSRRand+2)& (0+255),f,b
 42366  019738  2305               	addwfc	(??_LFSRRand+3)& (0+255),f,b
 42367  01973A  0E01               	movlw	1
 42368  01973C  0101               	movlb	1	; () banked
 42369  01973E  1502               	andwf	??_LFSRRand& (0+255),w,b
 42370  019740  0101               	movlb	1	; () banked
 42371  019742  6F06               	movwf	(??_LFSRRand+4)& (0+255),b
 42372  019744  0E00               	movlw	0
 42373  019746  0101               	movlb	1	; () banked
 42374  019748  1503               	andwf	(??_LFSRRand+1)& (0+255),w,b
 42375  01974A  0101               	movlb	1	; () banked
 42376  01974C  6F07               	movwf	(??_LFSRRand+5)& (0+255),b
 42377  01974E  0E00               	movlw	0
 42378  019750  0101               	movlb	1	; () banked
 42379  019752  1504               	andwf	(??_LFSRRand+2)& (0+255),w,b
 42380  019754  0101               	movlb	1	; () banked
 42381  019756  6F08               	movwf	(??_LFSRRand+6)& (0+255),b
 42382  019758  0ED0               	movlw	208
 42383  01975A  0101               	movlb	1	; () banked
 42384  01975C  1505               	andwf	(??_LFSRRand+3)& (0+255),w,b
 42385  01975E  0101               	movlb	1	; () banked
 42386  019760  6F09               	movwf	(??_LFSRRand+7)& (0+255),b
 42387  019762  0100               	movlb	0	; () banked
 42388  019764  C0F3  F10A         	movff	_dwLFSRRandSeed,??_LFSRRand+8
 42389  019768  0100               	movlb	0	; () banked
 42390  01976A  C0F4  F10B         	movff	_dwLFSRRandSeed+1,??_LFSRRand+9
 42391  01976E  0100               	movlb	0	; () banked
 42392  019770  C0F5  F10C         	movff	_dwLFSRRandSeed+2,??_LFSRRand+10
 42393  019774  0100               	movlb	0	; () banked
 42394  019776  C0F6  F10D         	movff	_dwLFSRRandSeed+3,??_LFSRRand+11
 42395  01977A  0101               	movlb	1	; () banked
 42396  01977C  90D8               	bcf	status,0,c
 42397  01977E  330D               	rrcf	(??_LFSRRand+11)& (0+255),f,b
 42398  019780  330C               	rrcf	(??_LFSRRand+10)& (0+255),f,b
 42399  019782  330B               	rrcf	(??_LFSRRand+9)& (0+255),f,b
 42400  019784  330A               	rrcf	(??_LFSRRand+8)& (0+255),f,b
 42401  019786  0101               	movlb	1	; () banked
 42402  019788  5106               	movf	(??_LFSRRand+4)& (0+255),w,b
 42403  01978A  0101               	movlb	1	; () banked
 42404  01978C  190A               	xorwf	(??_LFSRRand+8)& (0+255),w,b
 42405  01978E  0100               	movlb	0	; () banked
 42406  019790  6FF3               	movwf	_dwLFSRRandSeed& (0+255),b
 42407  019792  0101               	movlb	1	; () banked
 42408  019794  5107               	movf	(??_LFSRRand+5)& (0+255),w,b
 42409  019796  0101               	movlb	1	; () banked
 42410  019798  190B               	xorwf	(??_LFSRRand+9)& (0+255),w,b
 42411  01979A  0100               	movlb	0	; () banked
 42412  01979C  6FF4               	movwf	(_dwLFSRRandSeed+1)& (0+255),b
 42413  01979E  0101               	movlb	1	; () banked
 42414  0197A0  5108               	movf	(??_LFSRRand+6)& (0+255),w,b
 42415  0197A2  0101               	movlb	1	; () banked
 42416  0197A4  190C               	xorwf	(??_LFSRRand+10)& (0+255),w,b
 42417  0197A6  0100               	movlb	0	; () banked
 42418  0197A8  6FF5               	movwf	(_dwLFSRRandSeed+2)& (0+255),b
 42419  0197AA  0101               	movlb	1	; () banked
 42420  0197AC  5109               	movf	(??_LFSRRand+7)& (0+255),w,b
 42421  0197AE  0101               	movlb	1	; () banked
 42422  0197B0  190D               	xorwf	(??_LFSRRand+11)& (0+255),w,b
 42423  0197B2  0100               	movlb	0	; () banked
 42424  0197B4  6FF6               	movwf	(_dwLFSRRandSeed+3)& (0+255),b
 42425                           
 42426                           ; BSR set to: 0
 42427  0197B6  0101               	movlb	1	; () banked
 42428  0197B8  2B0E               	incf	LFSRRand@i& (0+255),f,b
 42429  0197BA                     L43:
 42430  0197BA  0E0E               	movlw	14
 42431  0197BC  0101               	movlb	1	; () banked
 42432  0197BE  650E               	cpfsgt	LFSRRand@i& (0+255),b
 42433  0197C0  D79E               	goto	l10536
 42434                           
 42435                           ; BSR set to: 1
 42436                           ;helpers.c: 153: return (uint16_t)dwLFSRRandSeed;
 42437  0197C2  C0F3  F100         	movff	_dwLFSRRandSeed,?_LFSRRand
 42438  0197C6  C0F4  F101         	movff	_dwLFSRRandSeed+1,?_LFSRRand+1
 42439                           
 42440                           ; BSR set to: 1
 42441  0197CA  0012               	return	
 42442  0197CC                     __end_of_LFSRRand:
 42443                           	opt stack 0
 42444                           tblptru	equ	0xFF8
 42445                           tblptrh	equ	0xFF7
 42446                           tblptrl	equ	0xFF6
 42447                           tablat	equ	0xFF5
 42448                           prodh	equ	0xFF4
 42449                           prodl	equ	0xFF3
 42450                           intcon	equ	0xFF2
 42451                           intcon2	equ	0xFF1
 42452                           intcon3	equ	0xFF0
 42453                           indf0	equ	0xFEF
 42454                           postinc0	equ	0xFEE
 42455                           fsr0h	equ	0xFEA
 42456                           fsr0l	equ	0xFE9
 42457                           wreg	equ	0xFE8
 42458                           indf1	equ	0xFE7
 42459                           postinc1	equ	0xFE6
 42460                           postdec1	equ	0xFE5
 42461                           fsr1h	equ	0xFE2
 42462                           fsr1l	equ	0xFE1
 42463                           indf2	equ	0xFDF
 42464                           postinc2	equ	0xFDE
 42465                           postdec2	equ	0xFDD
 42466                           fsr2h	equ	0xFDA
 42467                           fsr2l	equ	0xFD9
 42468                           status	equ	0xFD8
 42469                           
 42470 ;; *************** function _MACInit *****************
 42471 ;; Defined at:
 42472 ;;		line 145 in file "../tcpip/ETH97J60.c"
 42473 ;; Parameters:    Size  Location     Type
 42474 ;;		None
 42475 ;; Auto vars:     Size  Location     Type
 42476 ;;  i               1    0        unsigned char 
 42477 ;; Return value:  Size  Location     Type
 42478 ;;		None               void
 42479 ;; Registers used:
 42480 ;;		wreg, status,2, status,0, cstack
 42481 ;; Tracked objects:
 42482 ;;		On entry : 0/0
 42483 ;;		On exit  : 0/0
 42484 ;;		Unchanged: 0/0
 42485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42490 ;;Total ram usage:        0 bytes
 42491 ;; Hardware stack levels used:    1
 42492 ;; Hardware stack levels required when called:   11
 42493 ;; This function calls:
 42494 ;;		_MACPut
 42495 ;;		_WritePHYReg
 42496 ;; This function is called by:
 42497 ;;		_StackInit
 42498 ;; This function uses a non-reentrant model
 42499 ;;
 42500                           
 42501                           	psect	text110
 42502  018BCC                     __ptext110:
 42503                           	opt stack 0
 42504  018BCC                     _MACInit:
 42505                           	opt stack 17
 42506                           
 42507                           ;ETH97J60.c: 147: BYTE i;
 42508                           ;ETH97J60.c: 149: TRISA &= 0xFC;
 42509                           
 42510                           ; BSR set to: 1
 42511                           ;incstack = 0
 42512  018BCC  0EFC               	movlw	252
 42513  018BCE  1692               	andwf	3986,f,c	;volatile
 42514                           
 42515                           ;ETH97J60.c: 150: ECON2bits.ETHEN = 1;
 42516  018BD0  010E               	movlb	14	; () banked
 42517  018BD2  8BFE               	bsf	254,5,b	;volatile
 42518  018BD4                     l257:
 42519                           
 42520                           ; BSR set to: 14
 42521  018BD4  010E               	movlb	14	; () banked
 42522  018BD6  A1FD               	btfss	253,0,b	;volatile
 42523  018BD8  D7FD               	goto	l257
 42524                           
 42525                           ; BSR set to: 14
 42526                           ;ETH97J60.c: 164: flags.v = 0;
 42527                           
 42528                           ; BSR set to: 14
 42529  018BDA  0E00               	movlw	0
 42530  018BDC  0101               	movlb	1	; () banked
 42531  018BDE  6FB6               	movwf	_flags& (0+255),b
 42532                           
 42533                           ; BSR set to: 1
 42534                           ;ETH97J60.c: 165: flags.bits.bWasDiscarded = 1;
 42535  018BE0  0101               	movlb	1	; () banked
 42536  018BE2  81B6               	bsf	_flags& (0+255),0,b
 42537                           
 42538                           ;ETH97J60.c: 166: NextPacketLocation.Val = (0ul);
 42539  018BE4  0E00               	movlw	0
 42540  018BE6  0100               	movlb	0	; () banked
 42541  018BE8  6FE4               	movwf	(_NextPacketLocation+1)& (0+255),b
 42542  018BEA  0E00               	movlw	0
 42543  018BEC  0100               	movlb	0	; () banked
 42544  018BEE  6FE3               	movwf	_NextPacketLocation& (0+255),b
 42545                           
 42546                           ;ETH97J60.c: 167: ERXST = (0ul);
 42547  018BF0  0E00               	movlw	0
 42548  018BF2  010E               	movlb	14	; () banked
 42549  018BF4  6FE9               	movwf	233,b	;volatile
 42550  018BF6  0E00               	movlw	0
 42551  018BF8  010E               	movlb	14	; () banked
 42552  018BFA  6FE8               	movwf	232,b	;volatile
 42553                           
 42554                           ;ETH97J60.c: 168: ERXRDPTL = (((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2
      +                          ul) | 0x0001ul) & 0xFF);
 42555  018BFC  0EA5               	movlw	165
 42556  018BFE  010E               	movlb	14	; () banked
 42557  018C00  6FEC               	movwf	236,b	;volatile
 42558                           
 42559                           ;ETH97J60.c: 169: ERXRDPTH = ((((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-
      +                          2ul) | 0x0001ul)>>8) & 0xFF);
 42560  018C02  0E12               	movlw	18
 42561  018C04  010E               	movlb	14	; () banked
 42562  018C06  6FED               	movwf	237,b	;volatile
 42563                           
 42564                           ;ETH97J60.c: 170: ERXND = ((((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul)-2ul) 
      +                          | 0x0001ul);
 42565  018C08  0E12               	movlw	18
 42566  018C0A  010E               	movlb	14	; () banked
 42567  018C0C  6FEB               	movwf	235,b	;volatile
 42568  018C0E  0EA5               	movlw	165
 42569  018C10  010E               	movlb	14	; () banked
 42570  018C12  6FEA               	movwf	234,b	;volatile
 42571                           
 42572                           ;ETH97J60.c: 171: ETXST = ((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul);
 42573  018C14  0E12               	movlw	18
 42574  018C16  010E               	movlb	14	; () banked
 42575  018C18  6FE5               	movwf	229,b	;volatile
 42576  018C1A  0EA6               	movlw	166
 42577  018C1C  010E               	movlb	14	; () banked
 42578  018C1E  6FE4               	movwf	228,b	;volatile
 42579                           
 42580                           ;ETH97J60.c: 174: EWRPT = ((8*1024ul) - (1ul+1518ul+7ul) - (1892ul) - 0ul - 0ul);
 42581  018C20  0E12               	movlw	18
 42582  018C22  010E               	movlb	14	; () banked
 42583  018C24  6FE3               	movwf	227,b	;volatile
 42584  018C26  0EA6               	movlw	166
 42585  018C28  010E               	movlb	14	; () banked
 42586  018C2A  6FE2               	movwf	226,b	;volatile
 42587                           
 42588                           ; BSR set to: 14
 42589                           ;ETH97J60.c: 175: MACPut(0x00);
 42590  018C2C  0E00               	movlw	0
 42591  018C2E  EC63  F0DD         	call	_MACPut
 42592                           
 42593                           ;ETH97J60.c: 184: MACON1 = (1<<3) | (1<<2) | (1); __nop();
 42594  018C32  0E0D               	movlw	13
 42595  018C34  010E               	movlb	14	; () banked
 42596  018C36  6FA0               	movwf	160,b	;volatile
 42597                           
 42598                           ; BSR set to: 14
 42599  018C38  F000               	nop	
 42600                           
 42601                           ;ETH97J60.c: 191: MACON3 = (1<<5) | (1<<4) | (1<<1); __nop();
 42602  018C3A  0E32               	movlw	50
 42603  018C3C  010E               	movlb	14	; () banked
 42604  018C3E  6FA2               	movwf	162,b	;volatile
 42605                           
 42606                           ; BSR set to: 14
 42607  018C40  F000               	nop	
 42608                           
 42609                           ;ETH97J60.c: 192: MABBIPG = 0x12; __nop();
 42610  018C42  0E12               	movlw	18
 42611  018C44  010E               	movlb	14	; () banked
 42612  018C46  6FA4               	movwf	164,b	;volatile
 42613                           
 42614                           ; BSR set to: 14
 42615  018C48  F000               	nop	
 42616                           
 42617                           ;ETH97J60.c: 198: MACON4 = (1<<6); __nop();
 42618  018C4A  0E40               	movlw	64
 42619  018C4C  010E               	movlb	14	; () banked
 42620  018C4E  6FA3               	movwf	163,b	;volatile
 42621                           
 42622                           ; BSR set to: 14
 42623  018C50  F000               	nop	
 42624                           
 42625                           ;ETH97J60.c: 203: MAIPGL = 0x12; __nop();
 42626  018C52  0E12               	movlw	18
 42627  018C54  010E               	movlb	14	; () banked
 42628  018C56  6FA6               	movwf	166,b	;volatile
 42629                           
 42630                           ; BSR set to: 14
 42631  018C58  F000               	nop	
 42632                           
 42633                           ;ETH97J60.c: 204: MAIPGH = 0x0C; __nop();
 42634  018C5A  0E0C               	movlw	12
 42635  018C5C  010E               	movlb	14	; () banked
 42636  018C5E  6FA7               	movwf	167,b	;volatile
 42637                           
 42638                           ; BSR set to: 14
 42639  018C60  F000               	nop	
 42640                           
 42641                           ;ETH97J60.c: 207: MAMXFLL = (6+6+2+1500+4 & 0xFF); __nop();
 42642  018C62  0EEE               	movlw	238
 42643  018C64  010E               	movlb	14	; () banked
 42644  018C66  6FAA               	movwf	170,b	;volatile
 42645                           
 42646                           ; BSR set to: 14
 42647  018C68  F000               	nop	
 42648                           
 42649                           ;ETH97J60.c: 208: MAMXFLH = ((6+6+2+1500+4>>8) & 0xFF); __nop();
 42650  018C6A  0E05               	movlw	5
 42651  018C6C  010E               	movlb	14	; () banked
 42652  018C6E  6FAB               	movwf	171,b	;volatile
 42653                           
 42654                           ; BSR set to: 14
 42655  018C70  F000               	nop	
 42656                           
 42657                           ;ETH97J60.c: 211: MAADR1 = AppConfig.MyMACAddr.v[0]; __nop();
 42658  018C72  C269  FE84         	movff	_AppConfig+45,3716	;volatile
 42659  018C76  F000               	nop	
 42660                           
 42661                           ;ETH97J60.c: 212: MAADR2 = AppConfig.MyMACAddr.v[1]; __nop();
 42662  018C78  C26A  FE85         	movff	_AppConfig+46,3717	;volatile
 42663  018C7C  F000               	nop	
 42664                           
 42665                           ;ETH97J60.c: 213: MAADR3 = AppConfig.MyMACAddr.v[2]; __nop();
 42666  018C7E  C26B  FE82         	movff	_AppConfig+47,3714	;volatile
 42667  018C82  F000               	nop	
 42668                           
 42669                           ;ETH97J60.c: 214: MAADR4 = AppConfig.MyMACAddr.v[3]; __nop();
 42670  018C84  C26C  FE83         	movff	_AppConfig+48,3715	;volatile
 42671  018C88  F000               	nop	
 42672                           
 42673                           ;ETH97J60.c: 215: MAADR5 = AppConfig.MyMACAddr.v[4]; __nop();
 42674  018C8A  C26D  FE80         	movff	_AppConfig+49,3712	;volatile
 42675  018C8E  F000               	nop	
 42676                           
 42677                           ;ETH97J60.c: 216: MAADR6 = AppConfig.MyMACAddr.v[5]; __nop();
 42678  018C90  C26E  FE81         	movff	_AppConfig+50,3713	;volatile
 42679  018C94  F000               	nop	
 42680                           
 42681                           ;ETH97J60.c: 219: WritePHYReg(0x10, (1ul<<8) | (1ul<<4));
 42682  018C96  0E01               	movlw	1
 42683  018C98  0101               	movlb	1	; () banked
 42684  018C9A  6F01               	movwf	(WritePHYReg@Data+1)& (0+255),b
 42685  018C9C  0E10               	movlw	16
 42686  018C9E  0101               	movlb	1	; () banked
 42687  018CA0  6F00               	movwf	WritePHYReg@Data& (0+255),b
 42688  018CA2  0E10               	movlw	16
 42689  018CA4  EC65  F0DA         	call	_WritePHYReg
 42690                           
 42691                           ;ETH97J60.c: 222: WritePHYReg(0x14, 0x3472);
 42692  018CA8  0E34               	movlw	52
 42693  018CAA  0101               	movlb	1	; () banked
 42694  018CAC  6F01               	movwf	(WritePHYReg@Data+1)& (0+255),b
 42695  018CAE  0E72               	movlw	114
 42696  018CB0  0101               	movlb	1	; () banked
 42697  018CB2  6F00               	movwf	WritePHYReg@Data& (0+255),b
 42698  018CB4  0E14               	movlw	20
 42699  018CB6  EC65  F0DA         	call	_WritePHYReg
 42700                           
 42701                           ;ETH97J60.c: 228: WritePHYReg(0x00, 0x0000);
 42702  018CBA  0E00               	movlw	0
 42703  018CBC  0101               	movlb	1	; () banked
 42704  018CBE  6F01               	movwf	(WritePHYReg@Data+1)& (0+255),b
 42705  018CC0  0E00               	movlw	0
 42706  018CC2  0101               	movlb	1	; () banked
 42707  018CC4  6F00               	movwf	WritePHYReg@Data& (0+255),b
 42708  018CC6  0E00               	movlw	0
 42709  018CC8  EC65  F0DA         	call	_WritePHYReg
 42710                           
 42711                           ;ETH97J60.c: 232: ECON1bits.RXEN = 1;
 42712  018CCC  84D2               	bsf	4050,2,c	;volatile
 42713  018CCE  0012               	return	
 42714  018CD0                     __end_of_MACInit:
 42715                           	opt stack 0
 42716                           tblptru	equ	0xFF8
 42717                           tblptrh	equ	0xFF7
 42718                           tblptrl	equ	0xFF6
 42719                           tablat	equ	0xFF5
 42720                           prodh	equ	0xFF4
 42721                           prodl	equ	0xFF3
 42722                           intcon	equ	0xFF2
 42723                           intcon2	equ	0xFF1
 42724                           intcon3	equ	0xFF0
 42725                           indf0	equ	0xFEF
 42726                           postinc0	equ	0xFEE
 42727                           fsr0h	equ	0xFEA
 42728                           fsr0l	equ	0xFE9
 42729                           wreg	equ	0xFE8
 42730                           indf1	equ	0xFE7
 42731                           postinc1	equ	0xFE6
 42732                           postdec1	equ	0xFE5
 42733                           fsr1h	equ	0xFE2
 42734                           fsr1l	equ	0xFE1
 42735                           indf2	equ	0xFDF
 42736                           postinc2	equ	0xFDE
 42737                           postdec2	equ	0xFDD
 42738                           fsr2h	equ	0xFDA
 42739                           fsr2l	equ	0xFD9
 42740                           status	equ	0xFD8
 42741                           
 42742 ;; *************** function _WritePHYReg *****************
 42743 ;; Defined at:
 42744 ;;		line 1288 in file "../tcpip/ETH97J60.c"
 42745 ;; Parameters:    Size  Location     Type
 42746 ;;  Register        1    wreg     unsigned char 
 42747 ;;  Data            2    0[BANK1 ] unsigned int 
 42748 ;; Auto vars:     Size  Location     Type
 42749 ;;  Register        1    2[BANK1 ] unsigned char 
 42750 ;;  GIESave         1    3[BANK1 ] unsigned char 
 42751 ;; Return value:  Size  Location     Type
 42752 ;;		None               void
 42753 ;; Registers used:
 42754 ;;		wreg, status,2, status,0
 42755 ;; Tracked objects:
 42756 ;;		On entry : 0/0
 42757 ;;		On exit  : 0/0
 42758 ;;		Unchanged: 0/0
 42759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42760 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42761 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42763 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42764 ;;Total ram usage:        4 bytes
 42765 ;; Hardware stack levels used:    1
 42766 ;; Hardware stack levels required when called:   10
 42767 ;; This function calls:
 42768 ;;		Nothing
 42769 ;; This function is called by:
 42770 ;;		_MACInit
 42771 ;; This function uses a non-reentrant model
 42772 ;;
 42773                           
 42774                           	psect	text111
 42775  01B4CA                     __ptext111:
 42776                           	opt stack 0
 42777  01B4CA                     _WritePHYReg:
 42778                           	opt stack 17
 42779                           
 42780                           ;incstack = 0
 42781                           ;WritePHYReg@Register stored from wreg
 42782  01B4CA  0101               	movlb	1	; () banked
 42783  01B4CC  6F02               	movwf	WritePHYReg@Register& (0+255),b
 42784                           
 42785                           ; BSR set to: 1
 42786                           ;ETH97J60.c: 1290: BYTE GIESave;
 42787                           ;ETH97J60.c: 1293: MIREGADR = Register;
 42788  01B4CE  C102  FEB4         	movff	WritePHYReg@Register,3764	;volatile
 42789                           
 42790                           ; BSR set to: 1
 42791                           ;ETH97J60.c: 1306: errataTempL = ((BYTE*)&Data)[0];
 42792  01B4D2  C100  FE7E         	movff	WritePHYReg@Data,3710
 42793                           
 42794                           ; BSR set to: 1
 42795                           ;ETH97J60.c: 1307: errataTempH = ((BYTE*)&Data)[1];
 42796  01B4D6  C101  FE7F         	movff	WritePHYReg@Data+1,3711
 42797                           
 42798                           ; BSR set to: 1
 42799                           ;ETH97J60.c: 1308: GIESave = INTCON & 0xC0;
 42800  01B4DA  50F2               	movf	intcon,w,c	;volatile
 42801  01B4DC  0BC0               	andlw	192
 42802  01B4DE  0101               	movlb	1	; () banked
 42803  01B4E0  6F03               	movwf	WritePHYReg@GIESave& (0+255),b
 42804                           
 42805                           ; BSR set to: 1
 42806                           ;ETH97J60.c: 1309: INTCON &= 0x3F;
 42807  01B4E2  0E3F               	movlw	63
 42808  01B4E4  16F2               	andwf	intcon,f,c	;volatile
 42809  01B4E6  CE7E FEB6          	movff	3710,3766	;# 
 42810  01B4EA  F000               	nop		;# 
 42811  01B4EC  CE7F FEB7          	movff	3711,3767	;# 
 42812                           
 42813                           ;ETH97J60.c: 1324: INTCON |= GIESave;
 42814  01B4F0  0101               	movlb	1	; () banked
 42815  01B4F2  5103               	movf	WritePHYReg@GIESave& (0+255),w,b
 42816  01B4F4  12F2               	iorwf	intcon,f,c	;volatile
 42817  01B4F6                     l399:
 42818  01B4F6  010E               	movlb	14	; () banked
 42819  01B4F8  A18A               	btfss	138,0,b	;volatile
 42820                           
 42821                           ; BSR set to: 14
 42822                           
 42823                           ; BSR set to: 14
 42824  01B4FA  0012               	return	
 42825  01B4FC  D7FC               	goto	l399
 42826  01B4FE                     __end_of_WritePHYReg:
 42827                           	opt stack 0
 42828                           tblptru	equ	0xFF8
 42829                           tblptrh	equ	0xFF7
 42830                           tblptrl	equ	0xFF6
 42831                           tablat	equ	0xFF5
 42832                           prodh	equ	0xFF4
 42833                           prodl	equ	0xFF3
 42834                           intcon	equ	0xFF2
 42835                           intcon2	equ	0xFF1
 42836                           intcon3	equ	0xFF0
 42837                           indf0	equ	0xFEF
 42838                           postinc0	equ	0xFEE
 42839                           fsr0h	equ	0xFEA
 42840                           fsr0l	equ	0xFE9
 42841                           wreg	equ	0xFE8
 42842                           indf1	equ	0xFE7
 42843                           postinc1	equ	0xFE6
 42844                           postdec1	equ	0xFE5
 42845                           fsr1h	equ	0xFE2
 42846                           fsr1l	equ	0xFE1
 42847                           indf2	equ	0xFDF
 42848                           postinc2	equ	0xFDE
 42849                           postdec2	equ	0xFDD
 42850                           fsr2h	equ	0xFDA
 42851                           fsr2l	equ	0xFD9
 42852                           status	equ	0xFD8
 42853                           
 42854 ;; *************** function _MACPut *****************
 42855 ;; Defined at:
 42856 ;;		line 1161 in file "../tcpip/ETH97J60.c"
 42857 ;; Parameters:    Size  Location     Type
 42858 ;;  val             1    wreg     unsigned char 
 42859 ;; Auto vars:     Size  Location     Type
 42860 ;;  val             1    0[BANK1 ] unsigned char 
 42861 ;; Return value:  Size  Location     Type
 42862 ;;		None               void
 42863 ;; Registers used:
 42864 ;;		wreg
 42865 ;; Tracked objects:
 42866 ;;		On entry : 0/0
 42867 ;;		On exit  : 0/0
 42868 ;;		Unchanged: 0/0
 42869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42871 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42873 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42874 ;;Total ram usage:        1 bytes
 42875 ;; Hardware stack levels used:    1
 42876 ;; Hardware stack levels required when called:   10
 42877 ;; This function calls:
 42878 ;;		Nothing
 42879 ;; This function is called by:
 42880 ;;		_MACInit
 42881 ;;		_MACPutHeader
 42882 ;;		_MACMemCopyAsync
 42883 ;; This function uses a non-reentrant model
 42884 ;;
 42885                           
 42886                           	psect	text112
 42887  01BAC6                     __ptext112:
 42888                           	opt stack 0
 42889  01BAC6                     _MACPut:
 42890                           	opt stack 16
 42891                           
 42892                           ; BSR set to: 14
 42893                           ;incstack = 0
 42894                           ;MACPut@val stored from wreg
 42895  01BAC6  0101               	movlb	1	; () banked
 42896  01BAC8  6F00               	movwf	MACPut@val& (0+255),b
 42897                           
 42898                           ; BSR set to: 1
 42899                           ;ETH97J60.c: 1167: errataTempL = val;
 42900  01BACA  C100  FE7E         	movff	MACPut@val,3710
 42901  01BACE  CE7E FF61          	movff	3710,3937	;# 
 42902  01BAD2  0012               	return	
 42903  01BAD4                     __end_of_MACPut:
 42904                           	opt stack 0
 42905                           tblptru	equ	0xFF8
 42906                           tblptrh	equ	0xFF7
 42907                           tblptrl	equ	0xFF6
 42908                           tablat	equ	0xFF5
 42909                           prodh	equ	0xFF4
 42910                           prodl	equ	0xFF3
 42911                           intcon	equ	0xFF2
 42912                           intcon2	equ	0xFF1
 42913                           intcon3	equ	0xFF0
 42914                           indf0	equ	0xFEF
 42915                           postinc0	equ	0xFEE
 42916                           fsr0h	equ	0xFEA
 42917                           fsr0l	equ	0xFE9
 42918                           wreg	equ	0xFE8
 42919                           indf1	equ	0xFE7
 42920                           postinc1	equ	0xFE6
 42921                           postdec1	equ	0xFE5
 42922                           fsr1h	equ	0xFE2
 42923                           fsr1l	equ	0xFE1
 42924                           indf2	equ	0xFDF
 42925                           postinc2	equ	0xFDE
 42926                           postdec2	equ	0xFDD
 42927                           fsr2h	equ	0xFDA
 42928                           fsr2l	equ	0xFD9
 42929                           status	equ	0xFD8
 42930                           
 42931 ;; *************** function _ARPInit *****************
 42932 ;; Defined at:
 42933 ;;		line 374 in file "../tcpip/arp.c"
 42934 ;; Parameters:    Size  Location     Type
 42935 ;;		None
 42936 ;; Auto vars:     Size  Location     Type
 42937 ;;		None
 42938 ;; Return value:  Size  Location     Type
 42939 ;;		None               void
 42940 ;; Registers used:
 42941 ;;		None
 42942 ;; Tracked objects:
 42943 ;;		On entry : 0/0
 42944 ;;		On exit  : 0/0
 42945 ;;		Unchanged: 0/0
 42946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 42947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42951 ;;Total ram usage:        0 bytes
 42952 ;; Hardware stack levels used:    1
 42953 ;; Hardware stack levels required when called:   10
 42954 ;; This function calls:
 42955 ;;		Nothing
 42956 ;; This function is called by:
 42957 ;;		_StackInit
 42958 ;; This function uses a non-reentrant model
 42959 ;;
 42960                           
 42961                           	psect	text113
 42962  01B6D8                     __ptext113:
 42963                           	opt stack 0
 42964  01B6D8                     _ARPInit:
 42965                           	opt stack 18
 42966                           
 42967                           ;arp.c: 376: Cache.MACAddr.v[0] = 0xff;
 42968                           
 42969                           ;incstack = 0
 42970  01B6D8  0100               	movlb	0	; () banked
 42971  01B6DA  69C1               	setf	(_Cache+4)& (0+255),b
 42972                           
 42973                           ;arp.c: 377: Cache.MACAddr.v[1] = 0xff;
 42974  01B6DC  0100               	movlb	0	; () banked
 42975  01B6DE  69C2               	setf	(_Cache+5)& (0+255),b
 42976                           
 42977                           ;arp.c: 378: Cache.MACAddr.v[2] = 0xff;
 42978  01B6E0  0100               	movlb	0	; () banked
 42979  01B6E2  69C3               	setf	(_Cache+6)& (0+255),b
 42980                           
 42981                           ;arp.c: 379: Cache.MACAddr.v[3] = 0xff;
 42982  01B6E4  0100               	movlb	0	; () banked
 42983  01B6E6  69C4               	setf	(_Cache+7)& (0+255),b
 42984                           
 42985                           ;arp.c: 380: Cache.MACAddr.v[4] = 0xff;
 42986  01B6E8  0100               	movlb	0	; () banked
 42987  01B6EA  69C5               	setf	(_Cache+8)& (0+255),b
 42988                           
 42989                           ;arp.c: 381: Cache.MACAddr.v[5] = 0xff;
 42990  01B6EC  0100               	movlb	0	; () banked
 42991  01B6EE  69C6               	setf	(_Cache+9)& (0+255),b
 42992                           
 42993                           ;arp.c: 383: Cache.IPAddr.Val = 0xfffffffful;
 42994  01B6F0  0100               	movlb	0	; () banked
 42995  01B6F2  69BD               	setf	_Cache& (0+255),b
 42996  01B6F4  0100               	movlb	0	; () banked
 42997  01B6F6  69BE               	setf	(_Cache+1)& (0+255),b
 42998  01B6F8  0100               	movlb	0	; () banked
 42999  01B6FA  69BF               	setf	(_Cache+2)& (0+255),b
 43000  01B6FC  0100               	movlb	0	; () banked
 43001  01B6FE  69C0               	setf	(_Cache+3)& (0+255),b
 43002                           
 43003                           ; BSR set to: 0
 43004  01B700  0012               	return	
 43005  01B702                     __end_of_ARPInit:
 43006                           	opt stack 0
 43007                           tblptru	equ	0xFF8
 43008                           tblptrh	equ	0xFF7
 43009                           tblptrl	equ	0xFF6
 43010                           tablat	equ	0xFF5
 43011                           prodh	equ	0xFF4
 43012                           prodl	equ	0xFF3
 43013                           intcon	equ	0xFF2
 43014                           intcon2	equ	0xFF1
 43015                           intcon3	equ	0xFF0
 43016                           indf0	equ	0xFEF
 43017                           postinc0	equ	0xFEE
 43018                           fsr0h	equ	0xFEA
 43019                           fsr0l	equ	0xFE9
 43020                           wreg	equ	0xFE8
 43021                           indf1	equ	0xFE7
 43022                           postinc1	equ	0xFE6
 43023                           postdec1	equ	0xFE5
 43024                           fsr1h	equ	0xFE2
 43025                           fsr1l	equ	0xFE1
 43026                           indf2	equ	0xFDF
 43027                           postinc2	equ	0xFDE
 43028                           postdec2	equ	0xFDD
 43029                           fsr2h	equ	0xFDA
 43030                           fsr2l	equ	0xFD9
 43031                           status	equ	0xFD8
 43032                           
 43033 ;; *************** function _PowerOff *****************
 43034 ;; Defined at:
 43035 ;;		line 304 in file "Device.c"
 43036 ;; Parameters:    Size  Location     Type
 43037 ;;		None
 43038 ;; Auto vars:     Size  Location     Type
 43039 ;;		None
 43040 ;; Return value:  Size  Location     Type
 43041 ;;		None               void
 43042 ;; Registers used:
 43043 ;;		None
 43044 ;; Tracked objects:
 43045 ;;		On entry : 0/0
 43046 ;;		On exit  : 0/0
 43047 ;;		Unchanged: 0/0
 43048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43053 ;;Total ram usage:        0 bytes
 43054 ;; Hardware stack levels used:    1
 43055 ;; Hardware stack levels required when called:   10
 43056 ;; This function calls:
 43057 ;;		Nothing
 43058 ;; This function is called by:
 43059 ;;		_Configure
 43060 ;;		_TCPServer
 43061 ;; This function uses a non-reentrant model
 43062 ;;
 43063                           
 43064                           	psect	text114
 43065  01BAFE                     __ptext114:
 43066                           	opt stack 0
 43067  01BAFE                     _PowerOff:
 43068                           	opt stack 19
 43069                           
 43070                           ;Device.c: 306: LATDbits.LD0 = 0;
 43071                           
 43072                           ; BSR set to: 0
 43073                           ;incstack = 0
 43074  01BAFE  908C               	bcf	3980,0,c	;volatile
 43075                           
 43076                           ;Device.c: 307: LATBbits.LATB5 = 1;
 43077  01BB00  8A8A               	bsf	3978,5,c	;volatile
 43078  01BB02  0012               	return	
 43079  01BB04                     __end_of_PowerOff:
 43080                           	opt stack 0
 43081                           tblptru	equ	0xFF8
 43082                           tblptrh	equ	0xFF7
 43083                           tblptrl	equ	0xFF6
 43084                           tablat	equ	0xFF5
 43085                           prodh	equ	0xFF4
 43086                           prodl	equ	0xFF3
 43087                           intcon	equ	0xFF2
 43088                           intcon2	equ	0xFF1
 43089                           intcon3	equ	0xFF0
 43090                           indf0	equ	0xFEF
 43091                           postinc0	equ	0xFEE
 43092                           fsr0h	equ	0xFEA
 43093                           fsr0l	equ	0xFE9
 43094                           wreg	equ	0xFE8
 43095                           indf1	equ	0xFE7
 43096                           postinc1	equ	0xFE6
 43097                           postdec1	equ	0xFE5
 43098                           fsr1h	equ	0xFE2
 43099                           fsr1l	equ	0xFE1
 43100                           indf2	equ	0xFDF
 43101                           postinc2	equ	0xFDE
 43102                           postdec2	equ	0xFDD
 43103                           fsr2h	equ	0xFDA
 43104                           fsr2l	equ	0xFD9
 43105                           status	equ	0xFD8
 43106                           
 43107 ;; *************** function _InitrIR *****************
 43108 ;; Defined at:
 43109 ;;		line 35 in file "IR.c"
 43110 ;; Parameters:    Size  Location     Type
 43111 ;;		None
 43112 ;; Auto vars:     Size  Location     Type
 43113 ;;		None
 43114 ;; Return value:  Size  Location     Type
 43115 ;;		None               void
 43116 ;; Registers used:
 43117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43118 ;; Tracked objects:
 43119 ;;		On entry : 0/0
 43120 ;;		On exit  : 0/0
 43121 ;;		Unchanged: 0/0
 43122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43127 ;;Total ram usage:        0 bytes
 43128 ;; Hardware stack levels used:    1
 43129 ;; Hardware stack levels required when called:   11
 43130 ;; This function calls:
 43131 ;;		_memset
 43132 ;; This function is called by:
 43133 ;;		_Configure
 43134 ;; This function uses a non-reentrant model
 43135 ;;
 43136                           
 43137                           	psect	text115
 43138  01AAC0                     __ptext115:
 43139                           	opt stack 0
 43140  01AAC0                     _InitrIR:
 43141                           	opt stack 18
 43142                           
 43143                           ;IR.c: 37: s_prevIRPort = PORTBbits.RB4;
 43144                           
 43145                           ;incstack = 0
 43146  01AAC0  0E00               	movlw	0
 43147  01AAC2  B881               	btfsc	3969,4,c	;volatile
 43148  01AAC4  0E01               	movlw	1
 43149  01AAC6  0101               	movlb	1	; () banked
 43150  01AAC8  6FFF               	movwf	_s_prevIRPort& (0+255),b
 43151                           
 43152                           ; BSR set to: 1
 43153                           ;IR.c: 38: memset(&s_numTicksDiff, 0, sizeof(s_numTicksDiff));
 43154  01AACA  0104               	movlb	4	; () banked
 43155  01AACC  0E04               	movlw	high _s_numTicksDiff
 43156  01AACE  0101               	movlb	1	; () banked
 43157  01AAD0  6F01               	movwf	(memset@p1+1)& (0+255),b
 43158  01AAD2  0104               	movlb	4	; () banked
 43159  01AAD4  0E00               	movlw	low _s_numTicksDiff
 43160  01AAD6  0101               	movlb	1	; () banked
 43161  01AAD8  6F00               	movwf	memset@p1& (0+255),b
 43162  01AADA  0E00               	movlw	0
 43163  01AADC  0101               	movlb	1	; () banked
 43164  01AADE  6F03               	movwf	(memset@c+1)& (0+255),b
 43165  01AAE0  0E00               	movlw	0
 43166  01AAE2  0101               	movlb	1	; () banked
 43167  01AAE4  6F02               	movwf	memset@c& (0+255),b
 43168  01AAE6  0E01               	movlw	1
 43169  01AAE8  0101               	movlb	1	; () banked
 43170  01AAEA  6F05               	movwf	(memset@n+1)& (0+255),b
 43171  01AAEC  0E00               	movlw	0
 43172  01AAEE  0101               	movlb	1	; () banked
 43173  01AAF0  6F04               	movwf	memset@n& (0+255),b
 43174  01AAF2  ECF9  F0D9         	call	_memset	;wreg free
 43175                           
 43176                           ;IR.c: 39: memset(&s_irCode, 0, sizeof(s_irCode));
 43177  01AAF6  0102               	movlb	2	; () banked
 43178  01AAF8  0E02               	movlw	high _s_irCode	;volatile
 43179  01AAFA  0101               	movlb	1	; () banked
 43180  01AAFC  6F01               	movwf	(memset@p1+1)& (0+255),b
 43181  01AAFE  0102               	movlb	2	; () banked
 43182  01AB00  0EAD               	movlw	low _s_irCode	;volatile
 43183  01AB02  0101               	movlb	1	; () banked
 43184  01AB04  6F00               	movwf	memset@p1& (0+255),b
 43185  01AB06  0E00               	movlw	0
 43186  01AB08  0101               	movlb	1	; () banked
 43187  01AB0A  6F03               	movwf	(memset@c+1)& (0+255),b
 43188  01AB0C  0E00               	movlw	0
 43189  01AB0E  0101               	movlb	1	; () banked
 43190  01AB10  6F02               	movwf	memset@c& (0+255),b
 43191  01AB12  0E00               	movlw	0
 43192  01AB14  0101               	movlb	1	; () banked
 43193  01AB16  6F05               	movwf	(memset@n+1)& (0+255),b
 43194  01AB18  0E10               	movlw	16
 43195  01AB1A  0101               	movlb	1	; () banked
 43196  01AB1C  6F04               	movwf	memset@n& (0+255),b
 43197  01AB1E  ECF9  F0D9         	call	_memset	;wreg free
 43198                           
 43199                           ;IR.c: 40: s_irCodeBitIdx = 0b00000001;
 43200  01AB22  0E01               	movlw	1
 43201  01AB24  0101               	movlb	1	; () banked
 43202  01AB26  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 43203                           
 43204                           ; BSR set to: 1
 43205                           ;IR.c: 41: s_irCodeByteIdx = 0;
 43206  01AB28  0E00               	movlw	0
 43207  01AB2A  0101               	movlb	1	; () banked
 43208  01AB2C  6FB7               	movwf	_s_irCodeByteIdx& (0+255),b	;volatile
 43209                           
 43210                           ; BSR set to: 1
 43211  01AB2E  0012               	return	
 43212  01AB30                     __end_of_InitrIR:
 43213                           	opt stack 0
 43214                           tblptru	equ	0xFF8
 43215                           tblptrh	equ	0xFF7
 43216                           tblptrl	equ	0xFF6
 43217                           tablat	equ	0xFF5
 43218                           prodh	equ	0xFF4
 43219                           prodl	equ	0xFF3
 43220                           intcon	equ	0xFF2
 43221                           intcon2	equ	0xFF1
 43222                           intcon3	equ	0xFF0
 43223                           indf0	equ	0xFEF
 43224                           postinc0	equ	0xFEE
 43225                           fsr0h	equ	0xFEA
 43226                           fsr0l	equ	0xFE9
 43227                           wreg	equ	0xFE8
 43228                           indf1	equ	0xFE7
 43229                           postinc1	equ	0xFE6
 43230                           postdec1	equ	0xFE5
 43231                           fsr1h	equ	0xFE2
 43232                           fsr1l	equ	0xFE1
 43233                           indf2	equ	0xFDF
 43234                           postinc2	equ	0xFDE
 43235                           postdec2	equ	0xFDD
 43236                           fsr2h	equ	0xFDA
 43237                           fsr2l	equ	0xFD9
 43238                           status	equ	0xFD8
 43239                           
 43240 ;; *************** function _memset *****************
 43241 ;; Defined at:
 43242 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
 43243 ;; Parameters:    Size  Location     Type
 43244 ;;  p1              2    0[BANK1 ] PTR void 
 43245 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 43246 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 43247 ;;  c               2    2[BANK1 ] int 
 43248 ;;  n               2    4[BANK1 ] unsigned int 
 43249 ;; Auto vars:     Size  Location     Type
 43250 ;;  p               2    6[BANK1 ] PTR unsigned char 
 43251 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 43252 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 43253 ;; Return value:  Size  Location     Type
 43254 ;;                  2    0[BANK1 ] PTR void 
 43255 ;; Registers used:
 43256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43257 ;; Tracked objects:
 43258 ;;		On entry : 0/0
 43259 ;;		On exit  : 0/0
 43260 ;;		Unchanged: 0/0
 43261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43262 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43263 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43265 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43266 ;;Total ram usage:        8 bytes
 43267 ;; Hardware stack levels used:    1
 43268 ;; Hardware stack levels required when called:   10
 43269 ;; This function calls:
 43270 ;;		Nothing
 43271 ;; This function is called by:
 43272 ;;		_TCPInit
 43273 ;;		_TCPServer
 43274 ;;		_RestoreFromFlash
 43275 ;;		_InitrIR
 43276 ;; This function uses a non-reentrant model
 43277 ;;
 43278                           
 43279                           	psect	text116
 43280  01B3F2                     __ptext116:
 43281                           	opt stack 0
 43282  01B3F2                     _memset:
 43283                           	opt stack 19
 43284                           
 43285                           ; BSR set to: 1
 43286                           ;incstack = 0
 43287  01B3F2  0101               	movlb	1	; () banked
 43288  01B3F4  C101  F107         	movff	memset@p1+1,memset@p+1
 43289  01B3F8  0101               	movlb	1	; () banked
 43290  01B3FA  C100  F106         	movff	memset@p1,memset@p
 43291  01B3FE  D00A               	goto	l12020
 43292  01B400                     l12016:
 43293                           
 43294                           ; BSR set to: 1
 43295  01B400  C106  FFD9         	movff	memset@p,fsr2l
 43296  01B404  C107  FFDA         	movff	memset@p+1,fsr2h
 43297  01B408  0101               	movlb	1	; () banked
 43298  01B40A  C102  FFDF         	movff	memset@c,indf2
 43299                           
 43300                           ; BSR set to: 1
 43301  01B40E  0101               	movlb	1	; () banked
 43302  01B410  4B06               	infsnz	memset@p& (0+255),f,b
 43303  01B412  2B07               	incf	(memset@p+1)& (0+255),f,b
 43304  01B414                     l12020:
 43305                           
 43306                           ; BSR set to: 1
 43307  01B414  0101               	movlb	1	; () banked
 43308  01B416  0704               	decf	memset@n& (0+255),f,b
 43309  01B418  A0D8               	btfss	status,0,c
 43310  01B41A  0705               	decf	(memset@n+1)& (0+255),f,b
 43311  01B41C  0101               	movlb	1	; () banked
 43312  01B41E  2904               	incf	memset@n& (0+255),w,b
 43313  01B420  B4D8               	btfsc	status,2,c
 43314  01B422  2905               	incf	(memset@n+1)& (0+255),w,b
 43315  01B424  B4D8               	btfsc	status,2,c
 43316                           
 43317                           ; BSR set to: 1
 43318                           
 43319                           ; BSR set to: 1
 43320                           ;	Return value of _memset is never used
 43321  01B426  0012               	return	
 43322  01B428  D7EB               	goto	l12016
 43323  01B42A                     __end_of_memset:
 43324                           	opt stack 0
 43325                           tblptru	equ	0xFF8
 43326                           tblptrh	equ	0xFF7
 43327                           tblptrl	equ	0xFF6
 43328                           tablat	equ	0xFF5
 43329                           prodh	equ	0xFF4
 43330                           prodl	equ	0xFF3
 43331                           intcon	equ	0xFF2
 43332                           intcon2	equ	0xFF1
 43333                           intcon3	equ	0xFF0
 43334                           indf0	equ	0xFEF
 43335                           postinc0	equ	0xFEE
 43336                           fsr0h	equ	0xFEA
 43337                           fsr0l	equ	0xFE9
 43338                           wreg	equ	0xFE8
 43339                           indf1	equ	0xFE7
 43340                           postinc1	equ	0xFE6
 43341                           postdec1	equ	0xFE5
 43342                           fsr1h	equ	0xFE2
 43343                           fsr1l	equ	0xFE1
 43344                           indf2	equ	0xFDF
 43345                           postinc2	equ	0xFDE
 43346                           postdec2	equ	0xFDD
 43347                           fsr2h	equ	0xFDA
 43348                           fsr2l	equ	0xFD9
 43349                           status	equ	0xFD8
 43350                           
 43351 ;; *************** function _InitAppConfig *****************
 43352 ;; Defined at:
 43353 ;;		line 82 in file "main.c"
 43354 ;; Parameters:    Size  Location     Type
 43355 ;;		None
 43356 ;; Auto vars:     Size  Location     Type
 43357 ;;		None
 43358 ;; Return value:  Size  Location     Type
 43359 ;;		None               void
 43360 ;; Registers used:
 43361 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43362 ;; Tracked objects:
 43363 ;;		On entry : 0/0
 43364 ;;		On exit  : 0/0
 43365 ;;		Unchanged: 0/0
 43366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43371 ;;Total ram usage:        0 bytes
 43372 ;; Hardware stack levels used:    1
 43373 ;; Hardware stack levels required when called:   12
 43374 ;; This function calls:
 43375 ;;		_FormatNetBIOSName
 43376 ;;		_memcpy
 43377 ;; This function is called by:
 43378 ;;		_Configure
 43379 ;; This function uses a non-reentrant model
 43380 ;;
 43381                           
 43382                           	psect	text117
 43383  0188A8                     __ptext117:
 43384                           	opt stack 0
 43385  0188A8                     _InitAppConfig:
 43386                           	opt stack 17
 43387                           
 43388                           ;main.c: 84: AppConfig.Flags.bIsDHCPEnabled = FALSE;
 43389                           
 43390                           ; BSR set to: 1
 43391                           ;incstack = 0
 43392  0188A8  0102               	movlb	2	; () banked
 43393  0188AA  9D68               	bcf	(_AppConfig+44)& (0+255),6,b
 43394                           
 43395                           ;main.c: 85: AppConfig.Flags.bInConfigMode = TRUE;
 43396  0188AC  0102               	movlb	2	; () banked
 43397  0188AE  8F68               	bsf	(_AppConfig+44)& (0+255),7,b
 43398                           
 43399                           ; BSR set to: 2
 43400                           ;main.c: 86: memcpy((void*)&AppConfig.MyMACAddr,(const void*)SerializedMACAddress,sizeof
      +                          (AppConfig.MyMACAddr));
 43401  0188B0  0102               	movlb	2	; () banked
 43402  0188B2  0E02               	movlw	high (_AppConfig+45)
 43403  0188B4  0101               	movlb	1	; () banked
 43404  0188B6  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 43405  0188B8  0102               	movlb	2	; () banked
 43406  0188BA  0E69               	movlw	low (_AppConfig+45)
 43407  0188BC  0101               	movlb	1	; () banked
 43408  0188BE  6F14               	movwf	memcpy@d1& (0+255),b
 43409  0188C0  0EFF               	movlw	high _SerializedMACAddress
 43410  0188C2  0101               	movlb	1	; () banked
 43411  0188C4  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 43412  0188C6  0E21               	movlw	low _SerializedMACAddress
 43413  0188C8  0101               	movlb	1	; () banked
 43414  0188CA  6F16               	movwf	memcpy@s1& (0+255),b
 43415  0188CC  0E00               	movlw	0
 43416  0188CE  0101               	movlb	1	; () banked
 43417  0188D0  6F19               	movwf	(memcpy@n+1)& (0+255),b
 43418  0188D2  0E06               	movlw	6
 43419  0188D4  0101               	movlb	1	; () banked
 43420  0188D6  6F18               	movwf	memcpy@n& (0+255),b
 43421  0188D8  ECCF  F0D5         	call	_memcpy	;wreg free
 43422                           
 43423                           ;main.c: 92: AppConfig.MyIPAddr.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (97ul)<<24u
      +                          l;
 43424  0188DC  0EC0               	movlw	192
 43425  0188DE  0102               	movlb	2	; () banked
 43426  0188E0  6F3C               	movwf	_AppConfig& (0+255),b
 43427  0188E2  0EA8               	movlw	168
 43428  0188E4  0102               	movlb	2	; () banked
 43429  0188E6  6F3D               	movwf	(_AppConfig+1)& (0+255),b
 43430  0188E8  0E00               	movlw	0
 43431  0188EA  0102               	movlb	2	; () banked
 43432  0188EC  6F3E               	movwf	(_AppConfig+2)& (0+255),b
 43433  0188EE  0E61               	movlw	97
 43434  0188F0  0102               	movlb	2	; () banked
 43435  0188F2  6F3F               	movwf	(_AppConfig+3)& (0+255),b
 43436                           
 43437                           ; BSR set to: 2
 43438                           ;main.c: 93: AppConfig.DefaultIPAddr.Val = AppConfig.MyIPAddr.Val;
 43439  0188F4  C23C  F250         	movff	_AppConfig,_AppConfig+20
 43440  0188F8  C23D  F251         	movff	_AppConfig+1,_AppConfig+21
 43441  0188FC  C23E  F252         	movff	_AppConfig+2,_AppConfig+22
 43442  018900  C23F  F253         	movff	_AppConfig+3,_AppConfig+23
 43443                           
 43444                           ; BSR set to: 2
 43445                           ;main.c: 94: AppConfig.MyMask.Val = (255ul) | (255ul)<<8ul | (255ul)<<16ul | (0ul)<<24ul
      +                          ;
 43446  018904  0EFF               	movlw	255
 43447  018906  0102               	movlb	2	; () banked
 43448  018908  6F40               	movwf	(_AppConfig+4)& (0+255),b
 43449  01890A  0EFF               	movlw	255
 43450  01890C  0102               	movlb	2	; () banked
 43451  01890E  6F41               	movwf	(_AppConfig+5)& (0+255),b
 43452  018910  0EFF               	movlw	255
 43453  018912  0102               	movlb	2	; () banked
 43454  018914  6F42               	movwf	(_AppConfig+6)& (0+255),b
 43455  018916  0E00               	movlw	0
 43456  018918  0102               	movlb	2	; () banked
 43457  01891A  6F43               	movwf	(_AppConfig+7)& (0+255),b
 43458                           
 43459                           ; BSR set to: 2
 43460                           ;main.c: 95: AppConfig.DefaultMask.Val = AppConfig.MyMask.Val;
 43461  01891C  C240  F254         	movff	_AppConfig+4,_AppConfig+24
 43462  018920  C241  F255         	movff	_AppConfig+5,_AppConfig+25
 43463  018924  C242  F256         	movff	_AppConfig+6,_AppConfig+26
 43464  018928  C243  F257         	movff	_AppConfig+7,_AppConfig+27
 43465                           
 43466                           ; BSR set to: 2
 43467                           ;main.c: 96: AppConfig.MyGateway.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (1ul)<<24u
      +                          l;
 43468  01892C  0EC0               	movlw	192
 43469  01892E  0102               	movlb	2	; () banked
 43470  018930  6F44               	movwf	(_AppConfig+8)& (0+255),b
 43471  018932  0EA8               	movlw	168
 43472  018934  0102               	movlb	2	; () banked
 43473  018936  6F45               	movwf	(_AppConfig+9)& (0+255),b
 43474  018938  0E00               	movlw	0
 43475  01893A  0102               	movlb	2	; () banked
 43476  01893C  6F46               	movwf	(_AppConfig+10)& (0+255),b
 43477  01893E  0E01               	movlw	1
 43478  018940  0102               	movlb	2	; () banked
 43479  018942  6F47               	movwf	(_AppConfig+11)& (0+255),b
 43480                           
 43481                           ; BSR set to: 2
 43482                           ;main.c: 97: AppConfig.PrimaryDNSServer.Val = (192ul) | (168ul)<<8ul | (0ul)<<16ul | (1u
      +                          l)<<24ul;
 43483  018944  0EC0               	movlw	192
 43484  018946  0102               	movlb	2	; () banked
 43485  018948  6F48               	movwf	(_AppConfig+12)& (0+255),b
 43486  01894A  0EA8               	movlw	168
 43487  01894C  0102               	movlb	2	; () banked
 43488  01894E  6F49               	movwf	(_AppConfig+13)& (0+255),b
 43489  018950  0E00               	movlw	0
 43490  018952  0102               	movlb	2	; () banked
 43491  018954  6F4A               	movwf	(_AppConfig+14)& (0+255),b
 43492  018956  0E01               	movlw	1
 43493  018958  0102               	movlb	2	; () banked
 43494  01895A  6F4B               	movwf	(_AppConfig+15)& (0+255),b
 43495                           
 43496                           ; BSR set to: 2
 43497                           ;main.c: 98: AppConfig.SecondaryDNSServer.Val = (0ul) | (0ul)<<8ul | (0ul)<<16ul | (0ul)
      +                          <<24ul;
 43498  01895C  0E00               	movlw	0
 43499  01895E  0102               	movlb	2	; () banked
 43500  018960  6F4C               	movwf	(_AppConfig+16)& (0+255),b
 43501  018962  0E00               	movlw	0
 43502  018964  0102               	movlb	2	; () banked
 43503  018966  6F4D               	movwf	(_AppConfig+17)& (0+255),b
 43504  018968  0E00               	movlw	0
 43505  01896A  0102               	movlb	2	; () banked
 43506  01896C  6F4E               	movwf	(_AppConfig+18)& (0+255),b
 43507  01896E  0E00               	movlw	0
 43508  018970  0102               	movlb	2	; () banked
 43509  018972  6F4F               	movwf	(_AppConfig+19)& (0+255),b
 43510                           
 43511                           ; BSR set to: 2
 43512                           ;main.c: 101: memcpy(AppConfig.NetBIOSName,(const void*)"TheDAC",16);
 43513  018974  0102               	movlb	2	; () banked
 43514  018976  0E02               	movlw	high (_AppConfig+28)
 43515  018978  0101               	movlb	1	; () banked
 43516  01897A  6F15               	movwf	(memcpy@d1+1)& (0+255),b
 43517  01897C  0102               	movlb	2	; () banked
 43518  01897E  0E58               	movlw	low (_AppConfig+28)
 43519  018980  0101               	movlb	1	; () banked
 43520  018982  6F14               	movwf	memcpy@d1& (0+255),b
 43521  018984  0EFF               	movlw	high STR_1
 43522  018986  0101               	movlb	1	; () banked
 43523  018988  6F17               	movwf	(memcpy@s1+1)& (0+255),b
 43524  01898A  0EF7               	movlw	low STR_1
 43525  01898C  0101               	movlb	1	; () banked
 43526  01898E  6F16               	movwf	memcpy@s1& (0+255),b
 43527  018990  0E00               	movlw	0
 43528  018992  0101               	movlb	1	; () banked
 43529  018994  6F19               	movwf	(memcpy@n+1)& (0+255),b
 43530  018996  0E10               	movlw	16
 43531  018998  0101               	movlb	1	; () banked
 43532  01899A  6F18               	movwf	memcpy@n& (0+255),b
 43533  01899C  ECCF  F0D5         	call	_memcpy	;wreg free
 43534                           
 43535                           ;main.c: 102: FormatNetBIOSName(AppConfig.NetBIOSName);
 43536  0189A0  0102               	movlb	2	; () banked
 43537  0189A2  0E02               	movlw	high (_AppConfig+28)
 43538  0189A4  0101               	movlb	1	; () banked
 43539  0189A6  6F06               	movwf	(FormatNetBIOSName@Name+1)& (0+255),b
 43540  0189A8  0102               	movlb	2	; () banked
 43541  0189AA  0E58               	movlw	low (_AppConfig+28)
 43542  0189AC  0101               	movlb	1	; () banked
 43543  0189AE  6F05               	movwf	FormatNetBIOSName@Name& (0+255),b
 43544  0189B0  EC5F  F0D4         	call	_FormatNetBIOSName	;wreg free
 43545  0189B4  0012               	return	
 43546  0189B6                     __end_of_InitAppConfig:
 43547                           	opt stack 0
 43548                           tblptru	equ	0xFF8
 43549                           tblptrh	equ	0xFF7
 43550                           tblptrl	equ	0xFF6
 43551                           tablat	equ	0xFF5
 43552                           prodh	equ	0xFF4
 43553                           prodl	equ	0xFF3
 43554                           intcon	equ	0xFF2
 43555                           intcon2	equ	0xFF1
 43556                           intcon3	equ	0xFF0
 43557                           indf0	equ	0xFEF
 43558                           postinc0	equ	0xFEE
 43559                           fsr0h	equ	0xFEA
 43560                           fsr0l	equ	0xFE9
 43561                           wreg	equ	0xFE8
 43562                           indf1	equ	0xFE7
 43563                           postinc1	equ	0xFE6
 43564                           postdec1	equ	0xFE5
 43565                           fsr1h	equ	0xFE2
 43566                           fsr1l	equ	0xFE1
 43567                           indf2	equ	0xFDF
 43568                           postinc2	equ	0xFDE
 43569                           postdec2	equ	0xFDD
 43570                           fsr2h	equ	0xFDA
 43571                           fsr2l	equ	0xFD9
 43572                           status	equ	0xFD8
 43573                           
 43574 ;; *************** function _memcpy *****************
 43575 ;; Defined at:
 43576 ;;		line 11 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
 43577 ;; Parameters:    Size  Location     Type
 43578 ;;  d1              2   20[BANK1 ] PTR void 
 43579 ;;		 -> TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), TCPRAMCopyROM@vBuffer(16), 
 43580 ;;		 -> TCPGetRemoteInfo@RemoteInfo(12), RAM(3935), MyTCB.remote(10), SYNQueue(60), 
 43581 ;;		 -> MyTCB(39), MyTCBStub(28), TCBStubs(28), remoteNode(10), 
 43582 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), AppConfig(51), 
 43583 ;;  s1              2   22[BANK1 ] PTR const void 
 43584 ;;		 -> s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), 
 43585 ;;		 -> STR_1(7), SerializedMACAddress(6), SYNQueue.niSourceAddress(10), RAM(3935), 
 43586 ;;		 -> MyTCB.remote(10), TCPOpen@dwRemoteHost(4), SYNQueue(60), MyTCB(39), 
 43587 ;;		 -> MyTCBStub(28), TCBStubs(28), remoteNode(10), header.SourceMACAddr.v(6), 
 43588 ;;		 -> header.SourceMACAddr(6), AppConfig.MyMACAddr(6), AppConfig(51), 
 43589 ;;  n               2   24[BANK1 ] unsigned int 
 43590 ;; Auto vars:     Size  Location     Type
 43591 ;;  s               2   28[BANK1 ] PTR const unsigned char 
 43592 ;;		 -> s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), 
 43593 ;;		 -> STR_1(7), SerializedMACAddress(6), SYNQueue.niSourceAddress(10), RAM(3935), 
 43594 ;;		 -> MyTCB.remote(10), TCPOpen@dwRemoteHost(4), SYNQueue(60), MyTCB(39), 
 43595 ;;		 -> MyTCBStub(28), TCBStubs(28), remoteNode(10), header.SourceMACAddr.v(6), 
 43596 ;;		 -> header.SourceMACAddr(6), AppConfig.MyMACAddr(6), AppConfig(51), 
 43597 ;;  d               2   26[BANK1 ] PTR unsigned char 
 43598 ;;		 -> TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), s_dacSettings(20), TCPRAMCopyROM@vBuffer(16), 
 43599 ;;		 -> TCPGetRemoteInfo@RemoteInfo(12), RAM(3935), MyTCB.remote(10), SYNQueue(60), 
 43600 ;;		 -> MyTCB(39), MyTCBStub(28), TCBStubs(28), remoteNode(10), 
 43601 ;;		 -> ARPResolve@packet(28), ARPProcess@packet(28), ARPSendPkt@packet(28), AppConfig(51), 
 43602 ;; Return value:  Size  Location     Type
 43603 ;;                  2   20[BANK1 ] PTR void 
 43604 ;; Registers used:
 43605 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 43606 ;; Tracked objects:
 43607 ;;		On entry : 0/0
 43608 ;;		On exit  : 0/0
 43609 ;;		Unchanged: 0/0
 43610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43611 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43612 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43614 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43615 ;;Total ram usage:       10 bytes
 43616 ;; Hardware stack levels used:    1
 43617 ;; Hardware stack levels required when called:   10
 43618 ;; This function calls:
 43619 ;;		Nothing
 43620 ;; This function is called by:
 43621 ;;		_MACGetHeader
 43622 ;;		_ARPPut
 43623 ;;		_SyncTCBStub
 43624 ;;		_TCPOpen
 43625 ;;		_TCPTick
 43626 ;;		_FindMatchingSocket
 43627 ;;		_TCPRAMCopy
 43628 ;;		_InitAppConfig
 43629 ;;		_TCPServer
 43630 ;;		_TCPGetRemoteInfo
 43631 ;;		_TCPRAMCopyROM
 43632 ;; This function uses a non-reentrant model
 43633 ;;
 43634                           
 43635                           	psect	text118
 43636  01AB9E                     __ptext118:
 43637                           	opt stack 0
 43638  01AB9E                     _memcpy:
 43639                           	opt stack 19
 43640                           
 43641                           ;incstack = 0
 43642  01AB9E  0101               	movlb	1	; () banked
 43643  01ABA0  C117  F11D         	movff	memcpy@s1+1,memcpy@s+1
 43644  01ABA4  0101               	movlb	1	; () banked
 43645  01ABA6  C116  F11C         	movff	memcpy@s1,memcpy@s
 43646  01ABAA  0101               	movlb	1	; () banked
 43647  01ABAC  C115  F11B         	movff	memcpy@d1+1,memcpy@d+1
 43648  01ABB0  0101               	movlb	1	; () banked
 43649  01ABB2  C114  F11A         	movff	memcpy@d1,memcpy@d
 43650  01ABB6  D01E               	goto	l10062
 43651  01ABB8                     l10056:
 43652                           
 43653                           ; BSR set to: 1
 43654  01ABB8  0101               	movlb	1	; () banked
 43655  01ABBA  C11C  FFF6         	movff	memcpy@s,tblptrl
 43656  01ABBE  0101               	movlb	1	; () banked
 43657  01ABC0  C11D  FFF7         	movff	memcpy@s+1,tblptrh
 43658  01ABC4  0E00               	movlw	low (__mediumconst shr (0+16))
 43659  01ABC6  6EF8               	movwf	tblptru,c
 43660  01ABC8  C11A  FFD9         	movff	memcpy@d,fsr2l
 43661  01ABCC  C11B  FFDA         	movff	memcpy@d+1,fsr2h
 43662  01ABD0  0E0F               	movlw	(high __ramtop+-1)
 43663  01ABD2  64F7               	cpfsgt	tblptrh,c
 43664  01ABD4  D003               	bra	u10197
 43665  01ABD6  0008               	tblrd		*
 43666  01ABD8  50F5               	movf	tablat,w,c
 43667  01ABDA  D005               	bra	u10190
 43668  01ABDC                     u10197:
 43669  01ABDC  CFF6 FFE9          	movff	tblptrl,fsr0l
 43670  01ABE0  CFF7 FFEA          	movff	tblptrh,fsr0h
 43671  01ABE4  50EF               	movf	indf0,w,c
 43672  01ABE6                     u10190:
 43673  01ABE6  6EDF               	movwf	indf2,c
 43674  01ABE8  0101               	movlb	1	; () banked
 43675  01ABEA  4B1C               	infsnz	memcpy@s& (0+255),f,b
 43676  01ABEC  2B1D               	incf	(memcpy@s+1)& (0+255),f,b
 43677                           
 43678                           ; BSR set to: 1
 43679  01ABEE  0101               	movlb	1	; () banked
 43680  01ABF0  4B1A               	infsnz	memcpy@d& (0+255),f,b
 43681  01ABF2  2B1B               	incf	(memcpy@d+1)& (0+255),f,b
 43682  01ABF4                     l10062:
 43683                           
 43684                           ; BSR set to: 1
 43685  01ABF4  0101               	movlb	1	; () banked
 43686  01ABF6  0718               	decf	memcpy@n& (0+255),f,b
 43687  01ABF8  A0D8               	btfss	status,0,c
 43688  01ABFA  0719               	decf	(memcpy@n+1)& (0+255),f,b
 43689  01ABFC  0101               	movlb	1	; () banked
 43690  01ABFE  2918               	incf	memcpy@n& (0+255),w,b
 43691  01AC00  B4D8               	btfsc	status,2,c
 43692  01AC02  2919               	incf	(memcpy@n+1)& (0+255),w,b
 43693  01AC04  B4D8               	btfsc	status,2,c
 43694                           
 43695                           ; BSR set to: 1
 43696                           
 43697                           ; BSR set to: 1
 43698                           ;	Return value of _memcpy is never used
 43699  01AC06  0012               	return	
 43700  01AC08  D7D7               	goto	l10056
 43701  01AC0A                     __end_of_memcpy:
 43702                           	opt stack 0
 43703                           tblptru	equ	0xFF8
 43704                           tblptrh	equ	0xFF7
 43705                           tblptrl	equ	0xFF6
 43706                           tablat	equ	0xFF5
 43707                           prodh	equ	0xFF4
 43708                           prodl	equ	0xFF3
 43709                           intcon	equ	0xFF2
 43710                           intcon2	equ	0xFF1
 43711                           intcon3	equ	0xFF0
 43712                           indf0	equ	0xFEF
 43713                           postinc0	equ	0xFEE
 43714                           fsr0h	equ	0xFEA
 43715                           fsr0l	equ	0xFE9
 43716                           wreg	equ	0xFE8
 43717                           indf1	equ	0xFE7
 43718                           postinc1	equ	0xFE6
 43719                           postdec1	equ	0xFE5
 43720                           fsr1h	equ	0xFE2
 43721                           fsr1l	equ	0xFE1
 43722                           indf2	equ	0xFDF
 43723                           postinc2	equ	0xFDE
 43724                           postdec2	equ	0xFDD
 43725                           fsr2h	equ	0xFDA
 43726                           fsr2l	equ	0xFD9
 43727                           status	equ	0xFD8
 43728                           
 43729 ;; *************** function _FormatNetBIOSName *****************
 43730 ;; Defined at:
 43731 ;;		line 1323 in file "../tcpip/helpers.c"
 43732 ;; Parameters:    Size  Location     Type
 43733 ;;  Name            2    5[BANK1 ] PTR unsigned char 
 43734 ;;		 -> AppConfig(51), 
 43735 ;; Auto vars:     Size  Location     Type
 43736 ;;  i               1    7[BANK1 ] unsigned char 
 43737 ;; Return value:  Size  Location     Type
 43738 ;;		None               void
 43739 ;; Registers used:
 43740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43741 ;; Tracked objects:
 43742 ;;		On entry : 0/0
 43743 ;;		On exit  : 0/0
 43744 ;;		Unchanged: 0/0
 43745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43746 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43747 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43749 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43750 ;;Total ram usage:        3 bytes
 43751 ;; Hardware stack levels used:    1
 43752 ;; Hardware stack levels required when called:   11
 43753 ;; This function calls:
 43754 ;;		_strupr
 43755 ;; This function is called by:
 43756 ;;		_InitAppConfig
 43757 ;; This function uses a non-reentrant model
 43758 ;;
 43759                           
 43760                           	psect	text119
 43761  01A8BE                     __ptext119:
 43762                           	opt stack 0
 43763  01A8BE                     _FormatNetBIOSName:
 43764                           	opt stack 17
 43765                           
 43766                           ;helpers.c: 1325: uint8_t i;
 43767                           ;helpers.c: 1327: Name[15] = '\0';
 43768                           
 43769                           ; BSR set to: 1
 43770                           ;incstack = 0
 43771  01A8BE  0101               	movlb	1	; () banked
 43772  01A8C0  EE20 F00F          	lfsr	2,15
 43773  01A8C4  0101               	movlb	1	; () banked
 43774  01A8C6  5105               	movf	FormatNetBIOSName@Name& (0+255),w,b
 43775  01A8C8  26D9               	addwf	fsr2l,f,c
 43776  01A8CA  0101               	movlb	1	; () banked
 43777  01A8CC  5106               	movf	(FormatNetBIOSName@Name+1)& (0+255),w,b
 43778  01A8CE  22DA               	addwfc	fsr2h,f,c
 43779  01A8D0  0E00               	movlw	0
 43780  01A8D2  6EDF               	movwf	indf2,c
 43781                           
 43782                           ; BSR set to: 1
 43783                           ;helpers.c: 1328: strupr((char*)Name);
 43784  01A8D4  0101               	movlb	1	; () banked
 43785  01A8D6  C106  F101         	movff	FormatNetBIOSName@Name+1,strupr@s+1
 43786  01A8DA  0101               	movlb	1	; () banked
 43787  01A8DC  C105  F100         	movff	FormatNetBIOSName@Name,strupr@s
 43788  01A8E0  ECB2  F0D8         	call	_strupr	;wreg free
 43789                           
 43790                           ;helpers.c: 1329: i = 0;
 43791  01A8E4  0E00               	movlw	0
 43792  01A8E6  0101               	movlb	1	; () banked
 43793  01A8E8  6F07               	movwf	FormatNetBIOSName@i& (0+255),b
 43794                           
 43795                           ;helpers.c: 1330: while(i < 15u)
 43796  01A8EA  D025               	goto	l12986
 43797  01A8EC                     l12974:
 43798                           
 43799                           ; BSR set to: 1
 43800                           ;helpers.c: 1331: {
 43801                           ;helpers.c: 1332: if(Name[i] == '\0')
 43802  01A8EC  0101               	movlb	1	; () banked
 43803  01A8EE  5107               	movf	FormatNetBIOSName@i& (0+255),w,b
 43804  01A8F0  0D01               	mullw	1
 43805  01A8F2  50F3               	movf	prodl,w,c
 43806  01A8F4  0101               	movlb	1	; () banked
 43807  01A8F6  2505               	addwf	FormatNetBIOSName@Name& (0+255),w,b
 43808  01A8F8  6ED9               	movwf	fsr2l,c
 43809  01A8FA  50F4               	movf	prodh,w,c
 43810  01A8FC  0101               	movlb	1	; () banked
 43811  01A8FE  2106               	addwfc	(FormatNetBIOSName@Name+1)& (0+255),w,b
 43812  01A900  6EDA               	movwf	fsr2h,c
 43813  01A902  50DF               	movf	indf2,w,c
 43814  01A904  B4D8               	btfsc	status,2,c
 43815  01A906  D010               	goto	l12982
 43816  01A908  D014               	goto	l12984
 43817  01A90A                     l12978:
 43818                           
 43819                           ; BSR set to: 1
 43820                           ;helpers.c: 1335: {
 43821                           ;helpers.c: 1336: Name[i++] = ' ';
 43822  01A90A  0101               	movlb	1	; () banked
 43823  01A90C  5107               	movf	FormatNetBIOSName@i& (0+255),w,b
 43824  01A90E  0D01               	mullw	1
 43825  01A910  50F3               	movf	prodl,w,c
 43826  01A912  0101               	movlb	1	; () banked
 43827  01A914  2505               	addwf	FormatNetBIOSName@Name& (0+255),w,b
 43828  01A916  6ED9               	movwf	fsr2l,c
 43829  01A918  50F4               	movf	prodh,w,c
 43830  01A91A  0101               	movlb	1	; () banked
 43831  01A91C  2106               	addwfc	(FormatNetBIOSName@Name+1)& (0+255),w,b
 43832  01A91E  6EDA               	movwf	fsr2h,c
 43833  01A920  0E20               	movlw	32
 43834  01A922  6EDF               	movwf	indf2,c
 43835                           
 43836                           ; BSR set to: 1
 43837  01A924  0101               	movlb	1	; () banked
 43838  01A926  2B07               	incf	FormatNetBIOSName@i& (0+255),f,b
 43839  01A928                     l12982:
 43840                           
 43841                           ; BSR set to: 1
 43842  01A928  0E0E               	movlw	14
 43843  01A92A  0101               	movlb	1	; () banked
 43844  01A92C  6507               	cpfsgt	FormatNetBIOSName@i& (0+255),b
 43845  01A92E  D7ED               	goto	l12978
 43846  01A930  0012               	return	
 43847  01A932                     l12984:
 43848                           
 43849                           ; BSR set to: 1
 43850                           ;helpers.c: 1339: }
 43851                           ;helpers.c: 1340: i++;
 43852  01A932  0101               	movlb	1	; () banked
 43853  01A934  2B07               	incf	FormatNetBIOSName@i& (0+255),f,b
 43854  01A936                     l12986:
 43855                           
 43856                           ; BSR set to: 1
 43857  01A936  0E0E               	movlw	14
 43858  01A938  0101               	movlb	1	; () banked
 43859  01A93A  6507               	cpfsgt	FormatNetBIOSName@i& (0+255),b
 43860  01A93C  D7D7               	goto	l12974
 43861  01A93E  0012               	return	
 43862  01A940                     __end_of_FormatNetBIOSName:
 43863                           	opt stack 0
 43864                           tblptru	equ	0xFF8
 43865                           tblptrh	equ	0xFF7
 43866                           tblptrl	equ	0xFF6
 43867                           tablat	equ	0xFF5
 43868                           prodh	equ	0xFF4
 43869                           prodl	equ	0xFF3
 43870                           intcon	equ	0xFF2
 43871                           intcon2	equ	0xFF1
 43872                           intcon3	equ	0xFF0
 43873                           indf0	equ	0xFEF
 43874                           postinc0	equ	0xFEE
 43875                           fsr0h	equ	0xFEA
 43876                           fsr0l	equ	0xFE9
 43877                           wreg	equ	0xFE8
 43878                           indf1	equ	0xFE7
 43879                           postinc1	equ	0xFE6
 43880                           postdec1	equ	0xFE5
 43881                           fsr1h	equ	0xFE2
 43882                           fsr1l	equ	0xFE1
 43883                           indf2	equ	0xFDF
 43884                           postinc2	equ	0xFDE
 43885                           postdec2	equ	0xFDD
 43886                           fsr2h	equ	0xFDA
 43887                           fsr2l	equ	0xFD9
 43888                           status	equ	0xFD8
 43889                           
 43890 ;; *************** function _strupr *****************
 43891 ;; Defined at:
 43892 ;;		line 1201 in file "../tcpip/helpers.c"
 43893 ;; Parameters:    Size  Location     Type
 43894 ;;  s               2    0[BANK1 ] PTR unsigned char 
 43895 ;;		 -> AppConfig(51), 
 43896 ;; Auto vars:     Size  Location     Type
 43897 ;;  t               2    2[BANK1 ] PTR unsigned char 
 43898 ;;		 -> AppConfig(51), 
 43899 ;;  c               1    4[BANK1 ] unsigned char 
 43900 ;; Return value:  Size  Location     Type
 43901 ;;                  2    0[BANK1 ] PTR unsigned char 
 43902 ;; Registers used:
 43903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43904 ;; Tracked objects:
 43905 ;;		On entry : 0/0
 43906 ;;		On exit  : 0/0
 43907 ;;		Unchanged: 0/0
 43908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 43909 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43910 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43912 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43913 ;;Total ram usage:        5 bytes
 43914 ;; Hardware stack levels used:    1
 43915 ;; Hardware stack levels required when called:   10
 43916 ;; This function calls:
 43917 ;;		Nothing
 43918 ;; This function is called by:
 43919 ;;		_FormatNetBIOSName
 43920 ;; This function uses a non-reentrant model
 43921 ;;
 43922                           
 43923                           	psect	text120
 43924  01B164                     __ptext120:
 43925                           	opt stack 0
 43926  01B164                     _strupr:
 43927                           	opt stack 17
 43928                           
 43929                           ;helpers.c: 1203: char c;
 43930                           ;helpers.c: 1204: char *t;
 43931                           ;helpers.c: 1206: t = s;
 43932                           
 43933                           ; BSR set to: 1
 43934                           ;incstack = 0
 43935  01B164  0101               	movlb	1	; () banked
 43936  01B166  C101  F103         	movff	strupr@s+1,strupr@t+1
 43937  01B16A  0101               	movlb	1	; () banked
 43938  01B16C  C100  F102         	movff	strupr@s,strupr@t
 43939                           
 43940                           ;helpers.c: 1207: while( (c = *t) )
 43941  01B170  D012               	goto	l11996
 43942  01B172                     l11988:
 43943                           
 43944                           ; BSR set to: 1
 43945                           ;helpers.c: 1208: {
 43946                           ;helpers.c: 1209: if(c >= 'a' && c <= 'z')
 43947  01B172  0E60               	movlw	96
 43948  01B174  0101               	movlb	1	; () banked
 43949  01B176  6504               	cpfsgt	strupr@c& (0+255),b
 43950  01B178  D00B               	goto	l11994
 43951                           
 43952                           ; BSR set to: 1
 43953  01B17A  0E7B               	movlw	123
 43954  01B17C  0101               	movlb	1	; () banked
 43955  01B17E  5D04               	subwf	strupr@c& (0+255),w,b
 43956  01B180  B0D8               	btfsc	status,0,c
 43957  01B182  D006               	goto	l11994
 43958                           
 43959                           ; BSR set to: 1
 43960                           ;helpers.c: 1210: {
 43961                           ;helpers.c: 1211: *t -= ('a' - 'A');
 43962  01B184  C102  FFD9         	movff	strupr@t,fsr2l
 43963  01B188  C103  FFDA         	movff	strupr@t+1,fsr2h
 43964  01B18C  0E20               	movlw	32
 43965  01B18E  5EDF               	subwf	indf2,f,c
 43966  01B190                     l11994:
 43967                           
 43968                           ; BSR set to: 1
 43969                           ;helpers.c: 1212: }
 43970                           ;helpers.c: 1213: t++;
 43971  01B190  0101               	movlb	1	; () banked
 43972  01B192  4B02               	infsnz	strupr@t& (0+255),f,b
 43973  01B194  2B03               	incf	(strupr@t+1)& (0+255),f,b
 43974  01B196                     l11996:
 43975                           
 43976                           ; BSR set to: 1
 43977  01B196  C102  FFD9         	movff	strupr@t,fsr2l
 43978  01B19A  C103  FFDA         	movff	strupr@t+1,fsr2h
 43979  01B19E  50DF               	movf	indf2,w,c
 43980  01B1A0  0101               	movlb	1	; () banked
 43981  01B1A2  6F04               	movwf	strupr@c& (0+255),b
 43982  01B1A4  0101               	movlb	1	; () banked
 43983  01B1A6  6704               	tstfsz	strupr@c& (0+255),b
 43984  01B1A8  D7E4               	goto	l11988
 43985  01B1AA  0012               	return	
 43986  01B1AC                     __end_of_strupr:
 43987                           	opt stack 0
 43988                           tblptru	equ	0xFF8
 43989                           tblptrh	equ	0xFF7
 43990                           tblptrl	equ	0xFF6
 43991                           tablat	equ	0xFF5
 43992                           prodh	equ	0xFF4
 43993                           prodl	equ	0xFF3
 43994                           intcon	equ	0xFF2
 43995                           intcon2	equ	0xFF1
 43996                           intcon3	equ	0xFF0
 43997                           indf0	equ	0xFEF
 43998                           postinc0	equ	0xFEE
 43999                           fsr0h	equ	0xFEA
 44000                           fsr0l	equ	0xFE9
 44001                           wreg	equ	0xFE8
 44002                           indf1	equ	0xFE7
 44003                           postinc1	equ	0xFE6
 44004                           postdec1	equ	0xFE5
 44005                           fsr1h	equ	0xFE2
 44006                           fsr1l	equ	0xFE1
 44007                           indf2	equ	0xFDF
 44008                           postinc2	equ	0xFDE
 44009                           postdec2	equ	0xFDD
 44010                           fsr2h	equ	0xFDA
 44011                           fsr2l	equ	0xFD9
 44012                           status	equ	0xFD8
 44013                           
 44014 ;; *************** function _ISRLP *****************
 44015 ;; Defined at:
 44016 ;;		line 151 in file "main.c"
 44017 ;; Parameters:    Size  Location     Type
 44018 ;;		None
 44019 ;; Auto vars:     Size  Location     Type
 44020 ;;  currentTS       4   78[BANK0 ] unsigned long 
 44021 ;;  diff            4   74[BANK0 ] unsigned long 
 44022 ;;  d               1   82[BANK0 ] char 
 44023 ;; Return value:  Size  Location     Type
 44024 ;;		None               void
 44025 ;; Registers used:
 44026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44027 ;; Tracked objects:
 44028 ;;		On entry : 0/0
 44029 ;;		On exit  : 0/0
 44030 ;;		Unchanged: 0/0
 44031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44033 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44034 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44035 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44036 ;;Total ram usage:       27 bytes
 44037 ;; Hardware stack levels used:    1
 44038 ;; Hardware stack levels required when called:    9
 44039 ;; This function calls:
 44040 ;;		_ChangeMasterVolume
 44041 ;;		_IRTimerInt
 44042 ;;		_ProcessIRInt
 44043 ;;		_TickUpdate
 44044 ;;		i2_Delay1KTCYx
 44045 ;;		i2_PowerOff
 44046 ;;		i2_PowerOn
 44047 ;;		i2_SaveToFlash
 44048 ;;		i2_TickGet
 44049 ;;		i2_UpdateSampleRate
 44050 ;; This function is called by:
 44051 ;;		Interrupt level 2
 44052 ;; This function uses a non-reentrant model
 44053 ;;
 44054                           
 44055                           	psect	intcode
 44056  000008                     __pintcode:
 44057                           	opt stack 0
 44058  000008                     _ISRLP:
 44059                           	opt stack 13
 44060                           
 44061                           ; BSR set to: 1
 44062                           ;incstack = 0
 44063  000008  CFFA F09C          	movff	pclath,??_ISRLP+4
 44064  00000C  CFFB F09D          	movff	pclatu,??_ISRLP+5
 44065  000010  CFE9 F09E          	movff	fsr0l,??_ISRLP+6
 44066  000014  CFEA F09F          	movff	fsr0h,??_ISRLP+7
 44067  000018  CFE1 F0A0          	movff	fsr1l,??_ISRLP+8
 44068  00001C  CFE2 F0A1          	movff	fsr1h,??_ISRLP+9
 44069  000020  CFD9 F0A2          	movff	fsr2l,??_ISRLP+10
 44070  000024  CFDA F0A3          	movff	fsr2h,??_ISRLP+11
 44071  000028  CFF3 F0A4          	movff	prodl,??_ISRLP+12
 44072  00002C  CFF4 F0A5          	movff	prodh,??_ISRLP+13
 44073  000030  CFF6 F0A6          	movff	tblptrl,??_ISRLP+14
 44074  000034  CFF7 F0A7          	movff	tblptrh,??_ISRLP+15
 44075  000038  CFF8 F0A8          	movff	tblptru,??_ISRLP+16
 44076  00003C  CFF5 F0A9          	movff	tablat,??_ISRLP+17
 44077                           
 44078                           ;main.c: 153: TickUpdate();
 44079  000040  ECA4  F0DC         	call	_TickUpdate	;wreg free
 44080                           
 44081                           ;main.c: 155: if (INTCON3bits.INT2F)
 44082  000044  A2F0               	btfss	intcon3,1,c	;volatile
 44083  000046  D00E               	goto	i2l15992
 44084                           
 44085                           ;main.c: 156: {
 44086                           ;main.c: 157: s_dacSettings.SampleRate ++;
 44087  000048  0102               	movlb	2	; () banked
 44088  00004A  2BD4               	incf	(_s_dacSettings+1)& (0+255),f,b
 44089                           
 44090                           ; BSR set to: 2
 44091                           ;main.c: 158: if (s_dacSettings.SampleRate > 5) s_dacSettings.SampleRate = 0;
 44092  00004C  0102               	movlb	2	; () banked
 44093  00004E  EE22  F0D4         	lfsr	2,_s_dacSettings+1
 44094  000052  0E05               	movlw	5
 44095  000054  64DF               	cpfsgt	indf2,c
 44096  000056  D003               	goto	i2l15988
 44097                           
 44098                           ; BSR set to: 2
 44099  000058  0E00               	movlw	0
 44100  00005A  0102               	movlb	2	; () banked
 44101  00005C  6FD4               	movwf	(_s_dacSettings+1)& (0+255),b
 44102  00005E                     i2l15988:
 44103                           
 44104                           ; BSR set to: 2
 44105                           ;main.c: 159: UpdateSampleRate();
 44106  00005E  EC1B  F0D4         	call	i2_UpdateSampleRate	;wreg free
 44107                           
 44108                           ;main.c: 160: INTCON3bits.INT2F = 0;
 44109  000062  92F0               	bcf	intcon3,1,c	;volatile
 44110  000064                     i2l15992:
 44111                           
 44112                           ;main.c: 161: }
 44113                           ;main.c: 163: if (INTCON3bits.INT1F)
 44114  000064  A0F0               	btfss	intcon3,0,c	;volatile
 44115  000066  D06C               	goto	i2l16010
 44116                           
 44117                           ;main.c: 164: {
 44118                           ;main.c: 166: if (!PORTBbits.RB1)
 44119  000068  B281               	btfsc	3969,1,c	;volatile
 44120  00006A  D069               	goto	i2l16008
 44121                           
 44122                           ;main.c: 167: {
 44123                           ;main.c: 168: uint32_t currentTS = TickGet();
 44124  00006C  ECA7  F0DB         	call	i2_TickGet	;wreg free
 44125  000070  C001  F0AE         	movff	?i2_TickGet,ISRLP@currentTS
 44126  000074  C002  F0AF         	movff	?i2_TickGet+1,ISRLP@currentTS+1
 44127  000078  C003  F0B0         	movff	?i2_TickGet+2,ISRLP@currentTS+2
 44128  00007C  C004  F0B1         	movff	?i2_TickGet+3,ISRLP@currentTS+3
 44129                           
 44130                           ;main.c: 169: uint32_t diff = currentTS - s_encoderLastUpdate;
 44131  000080  0100               	movlb	0	; () banked
 44132  000082  C0D5  F098         	movff	_s_encoderLastUpdate,??_ISRLP
 44133  000086  0100               	movlb	0	; () banked
 44134  000088  C0D6  F099         	movff	_s_encoderLastUpdate+1,??_ISRLP+1
 44135  00008C  0100               	movlb	0	; () banked
 44136  00008E  C0D7  F09A         	movff	_s_encoderLastUpdate+2,??_ISRLP+2
 44137  000092  0100               	movlb	0	; () banked
 44138  000094  C0D8  F09B         	movff	_s_encoderLastUpdate+3,??_ISRLP+3
 44139  000098  0100               	movlb	0	; () banked
 44140  00009A  1F98               	comf	??_ISRLP& (0+255),f,b
 44141  00009C  1F99               	comf	(??_ISRLP+1)& (0+255),f,b
 44142  00009E  1F9A               	comf	(??_ISRLP+2)& (0+255),f,b
 44143  0000A0  1F9B               	comf	(??_ISRLP+3)& (0+255),f,b
 44144  0000A2  2B98               	incf	??_ISRLP& (0+255),f,b
 44145  0000A4  0E00               	movlw	0
 44146  0000A6  2399               	addwfc	(??_ISRLP+1)& (0+255),f,b
 44147  0000A8  239A               	addwfc	(??_ISRLP+2)& (0+255),f,b
 44148  0000AA  239B               	addwfc	(??_ISRLP+3)& (0+255),f,b
 44149  0000AC  0100               	movlb	0	; () banked
 44150  0000AE  51AE               	movf	ISRLP@currentTS& (0+255),w,b
 44151  0000B0  0100               	movlb	0	; () banked
 44152  0000B2  2598               	addwf	??_ISRLP& (0+255),w,b
 44153  0000B4  0100               	movlb	0	; () banked
 44154  0000B6  6FAA               	movwf	ISRLP@diff& (0+255),b
 44155  0000B8  0100               	movlb	0	; () banked
 44156  0000BA  51AF               	movf	(ISRLP@currentTS+1)& (0+255),w,b
 44157  0000BC  0100               	movlb	0	; () banked
 44158  0000BE  2199               	addwfc	(??_ISRLP+1)& (0+255),w,b
 44159  0000C0  0100               	movlb	0	; () banked
 44160  0000C2  6FAB               	movwf	(ISRLP@diff+1)& (0+255),b
 44161  0000C4  0100               	movlb	0	; () banked
 44162  0000C6  51B0               	movf	(ISRLP@currentTS+2)& (0+255),w,b
 44163  0000C8  0100               	movlb	0	; () banked
 44164  0000CA  219A               	addwfc	(??_ISRLP+2)& (0+255),w,b
 44165  0000CC  0100               	movlb	0	; () banked
 44166  0000CE  6FAC               	movwf	(ISRLP@diff+2)& (0+255),b
 44167  0000D0  0100               	movlb	0	; () banked
 44168  0000D2  51B1               	movf	(ISRLP@currentTS+3)& (0+255),w,b
 44169  0000D4  0100               	movlb	0	; () banked
 44170  0000D6  219B               	addwfc	(??_ISRLP+3)& (0+255),w,b
 44171  0000D8  0100               	movlb	0	; () banked
 44172  0000DA  6FAD               	movwf	(ISRLP@diff+3)& (0+255),b
 44173                           
 44174                           ; BSR set to: 0
 44175                           ;main.c: 172: signed char d;
 44176                           ;main.c: 174: if (diff < 600)
 44177  0000DC  0E58               	movlw	88
 44178  0000DE  0100               	movlb	0	; () banked
 44179  0000E0  6F98               	movwf	??_ISRLP& (0+255),b
 44180  0000E2  0E02               	movlw	2
 44181  0000E4  6F99               	movwf	(??_ISRLP+1)& (0+255),b
 44182  0000E6  0E00               	movlw	0
 44183  0000E8  6F9A               	movwf	(??_ISRLP+2)& (0+255),b
 44184  0000EA  0E00               	movlw	0
 44185  0000EC  6F9B               	movwf	(??_ISRLP+3)& (0+255),b
 44186  0000EE  0100               	movlb	0	; () banked
 44187  0000F0  5198               	movf	??_ISRLP& (0+255),w,b
 44188  0000F2  0100               	movlb	0	; () banked
 44189  0000F4  5DAA               	subwf	ISRLP@diff& (0+255),w,b
 44190  0000F6  0100               	movlb	0	; () banked
 44191  0000F8  5199               	movf	(??_ISRLP+1)& (0+255),w,b
 44192  0000FA  0100               	movlb	0	; () banked
 44193  0000FC  59AB               	subwfb	(ISRLP@diff+1)& (0+255),w,b
 44194  0000FE  0100               	movlb	0	; () banked
 44195  000100  519A               	movf	(??_ISRLP+2)& (0+255),w,b
 44196  000102  0100               	movlb	0	; () banked
 44197  000104  59AC               	subwfb	(ISRLP@diff+2)& (0+255),w,b
 44198  000106  0100               	movlb	0	; () banked
 44199  000108  519B               	movf	(??_ISRLP+3)& (0+255),w,b
 44200  00010A  0100               	movlb	0	; () banked
 44201  00010C  59AD               	subwfb	(ISRLP@diff+3)& (0+255),w,b
 44202  00010E  B0D8               	btfsc	status,0,c
 44203  000110  D004               	goto	i2l1669
 44204                           
 44205                           ; BSR set to: 0
 44206                           ;main.c: 175: {
 44207                           ;main.c: 176: d = -2;
 44208  000112  0EFE               	movlw	254
 44209  000114  0100               	movlb	0	; () banked
 44210  000116  6FB2               	movwf	ISRLP@d& (0+255),b
 44211                           
 44212                           ;main.c: 177: }
 44213  000118  D002               	goto	i2l1670
 44214  00011A                     i2l1669:
 44215                           
 44216                           ; BSR set to: 0
 44217                           ;main.c: 178: else
 44218                           ;main.c: 179: {
 44219                           ;main.c: 180: d = -1;
 44220  00011A  0100               	movlb	0	; () banked
 44221  00011C  69B2               	setf	ISRLP@d& (0+255),b
 44222  00011E                     i2l1670:
 44223                           
 44224                           ; BSR set to: 0
 44225                           ;main.c: 181: }
 44226                           ;main.c: 182: s_encoderLastUpdate = currentTS;
 44227  00011E  C0AE  F0D5         	movff	ISRLP@currentTS,_s_encoderLastUpdate
 44228  000122  C0AF  F0D6         	movff	ISRLP@currentTS+1,_s_encoderLastUpdate+1
 44229  000126  C0B0  F0D7         	movff	ISRLP@currentTS+2,_s_encoderLastUpdate+2
 44230  00012A  C0B1  F0D8         	movff	ISRLP@currentTS+3,_s_encoderLastUpdate+3
 44231                           
 44232                           ;main.c: 183: if (PORTAbits.RA2)
 44233  00012E  A480               	btfss	3968,2,c	;volatile
 44234  000130  D002               	goto	i2l16006
 44235                           
 44236                           ; BSR set to: 0
 44237                           ;main.c: 184: {
 44238                           ;main.c: 185: d = -d;
 44239  000132  0100               	movlb	0	; () banked
 44240  000134  6DB2               	negf	ISRLP@d& (0+255),b
 44241  000136                     i2l16006:
 44242                           
 44243                           ; BSR set to: 0
 44244                           ;main.c: 186: }
 44245                           ;main.c: 188: ChangeMasterVolume(d);
 44246  000136  0100               	movlb	0	; () banked
 44247  000138  51B2               	movf	ISRLP@d& (0+255),w,b
 44248  00013A  ECA0  F0D9         	call	_ChangeMasterVolume
 44249  00013E                     i2l16008:
 44250                           
 44251                           ;main.c: 189: }
 44252                           ;main.c: 190: INTCON3bits.INT1F = 0;
 44253  00013E  90F0               	bcf	intcon3,0,c	;volatile
 44254  000140                     i2l16010:
 44255                           
 44256                           ;main.c: 191: }
 44257                           ;main.c: 192: if (INTCON3bits.INT3F)
 44258  000140  A4F0               	btfss	intcon3,2,c	;volatile
 44259  000142  D003               	goto	i2l16016
 44260                           
 44261                           ;main.c: 193: {
 44262                           ;main.c: 195: SaveToFlash();
 44263  000144  EC3E  F0AB         	call	i2_SaveToFlash	;wreg free
 44264                           
 44265                           ;main.c: 196: INTCON3bits.INT3F = 0;
 44266  000148  94F0               	bcf	intcon3,2,c	;volatile
 44267  00014A                     i2l16016:
 44268                           
 44269                           ;main.c: 197: }
 44270                           ;main.c: 199: if (INTCONbits.INT0F)
 44271  00014A  A2F2               	btfss	intcon,1,c	;volatile
 44272  00014C  D00B               	goto	i2l16028
 44273                           
 44274                           ;main.c: 200: {
 44275                           ;main.c: 202: if (LATDbits.LD0)
 44276  00014E  A08C               	btfss	3980,0,c	;volatile
 44277  000150  D006               	goto	i2l16024
 44278                           
 44279                           ;main.c: 203: {
 44280                           ;main.c: 204: PowerOff();
 44281  000152  EC82  F0DD         	call	i2_PowerOff	;wreg free
 44282                           
 44283                           ;main.c: 205: Delay1KTCYx(1);
 44284  000156  0E01               	movlw	1
 44285  000158  EC5B  F0DD         	call	i2_Delay1KTCYx
 44286                           
 44287                           ;main.c: 206: }
 44288  00015C  D002               	goto	i2l16026
 44289  00015E                     i2l16024:
 44290                           
 44291                           ;main.c: 207: else
 44292                           ;main.c: 208: {
 44293                           ;main.c: 209: PowerOn();
 44294  00015E  EC69  F0D8         	call	i2_PowerOn	;wreg free
 44295  000162                     i2l16026:
 44296                           
 44297                           ;main.c: 210: }
 44298                           ;main.c: 211: INTCONbits.INT0F = 0;
 44299  000162  92F2               	bcf	intcon,1,c	;volatile
 44300  000164                     i2l16028:
 44301                           
 44302                           ;main.c: 212: }
 44303                           ;main.c: 214: if (INTCONbits.RBIF)
 44304  000164  A0F2               	btfss	intcon,0,c	;volatile
 44305  000166  D003               	goto	i2l16034
 44306                           
 44307                           ;main.c: 215: {
 44308                           ;main.c: 216: ProcessIRInt();
 44309  000168  EC4D  F0C9         	call	_ProcessIRInt	;wreg free
 44310                           
 44311                           ;main.c: 217: INTCONbits.RBIF = 0;
 44312  00016C  90F2               	bcf	intcon,0,c	;volatile
 44313  00016E                     i2l16034:
 44314                           
 44315                           ;main.c: 218: }
 44316                           ;main.c: 219: if (PIR1bits.TMR1IF)
 44317  00016E  A09E               	btfss	3998,0,c	;volatile
 44318  000170  D003               	goto	i2l16040
 44319                           
 44320                           ;main.c: 220: {
 44321                           ;main.c: 221: IRTimerInt();
 44322  000172  EC81  F0D9         	call	_IRTimerInt	;wreg free
 44323                           
 44324                           ;main.c: 222: PIR1bits.TMR1IF = 0;
 44325  000176  909E               	bcf	3998,0,c	;volatile
 44326  000178                     i2l16040:
 44327                           
 44328                           ;main.c: 223: }
 44329                           ;main.c: 224: (INTCONbits.GIE = 1);
 44330  000178  8EF2               	bsf	intcon,7,c	;volatile
 44331  00017A  C0A9  FFF5         	movff	??_ISRLP+17,tablat
 44332  00017E  C0A8  FFF8         	movff	??_ISRLP+16,tblptru
 44333  000182  C0A7  FFF7         	movff	??_ISRLP+15,tblptrh
 44334  000186  C0A6  FFF6         	movff	??_ISRLP+14,tblptrl
 44335  00018A  C0A5  FFF4         	movff	??_ISRLP+13,prodh
 44336  00018E  C0A4  FFF3         	movff	??_ISRLP+12,prodl
 44337  000192  C0A3  FFDA         	movff	??_ISRLP+11,fsr2h
 44338  000196  C0A2  FFD9         	movff	??_ISRLP+10,fsr2l
 44339  00019A  C0A1  FFE2         	movff	??_ISRLP+9,fsr1h
 44340  00019E  C0A0  FFE1         	movff	??_ISRLP+8,fsr1l
 44341  0001A2  C09F  FFEA         	movff	??_ISRLP+7,fsr0h
 44342  0001A6  C09E  FFE9         	movff	??_ISRLP+6,fsr0l
 44343  0001AA  C09D  FFFB         	movff	??_ISRLP+5,pclatu
 44344  0001AE  C09C  FFFA         	movff	??_ISRLP+4,pclath
 44345  0001B2  0011               	retfie		f
 44346  0001B4                     __end_of_ISRLP:
 44347                           	opt stack 0
 44348                           pclatu	equ	0xFFB
 44349                           pclath	equ	0xFFA
 44350                           tblptru	equ	0xFF8
 44351                           tblptrh	equ	0xFF7
 44352                           tblptrl	equ	0xFF6
 44353                           tablat	equ	0xFF5
 44354                           prodh	equ	0xFF4
 44355                           prodl	equ	0xFF3
 44356                           intcon	equ	0xFF2
 44357                           intcon2	equ	0xFF1
 44358                           intcon3	equ	0xFF0
 44359                           indf0	equ	0xFEF
 44360                           postinc0	equ	0xFEE
 44361                           fsr0h	equ	0xFEA
 44362                           fsr0l	equ	0xFE9
 44363                           wreg	equ	0xFE8
 44364                           indf1	equ	0xFE7
 44365                           postinc1	equ	0xFE6
 44366                           postdec1	equ	0xFE5
 44367                           fsr1h	equ	0xFE2
 44368                           fsr1l	equ	0xFE1
 44369                           indf2	equ	0xFDF
 44370                           postinc2	equ	0xFDE
 44371                           postdec2	equ	0xFDD
 44372                           fsr2h	equ	0xFDA
 44373                           fsr2l	equ	0xFD9
 44374                           status	equ	0xFD8
 44375                           
 44376 ;; *************** function i2_SaveToFlash *****************
 44377 ;; Defined at:
 44378 ;;		line 83 in file "Persistence.c"
 44379 ;; Parameters:    Size  Location     Type
 44380 ;;		None
 44381 ;; Auto vars:     Size  Location     Type
 44382 ;;  SaveToFlash     4   59[COMRAM] unsigned long 
 44383 ;;  SaveToFlash     4   52[COMRAM] unsigned long 
 44384 ;;  SaveToFlash     2   56[COMRAM] int 
 44385 ;;  SaveToFlash     1   58[COMRAM] unsigned char 
 44386 ;; Return value:  Size  Location     Type
 44387 ;;		None               void
 44388 ;; Registers used:
 44389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 44390 ;; Tracked objects:
 44391 ;;		On entry : 0/0
 44392 ;;		On exit  : 0/0
 44393 ;;		Unchanged: 0/0
 44394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44396 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44397 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44398 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44399 ;;Total ram usage:       23 bytes
 44400 ;; Hardware stack levels used:    1
 44401 ;; Hardware stack levels required when called:    5
 44402 ;; This function calls:
 44403 ;;		i2_EraseFlash
 44404 ;;		i2_FindEmpty
 44405 ;;		i2_GetCheckSum
 44406 ;;		i2_ReadFlash
 44407 ;;		i2_RefreshLine1
 44408 ;;		i2_RefreshLine1Ex
 44409 ;;		i2_WriteBlockFlash
 44410 ;;		i2_memcmp
 44411 ;; This function is called by:
 44412 ;;		_ISRLP
 44413 ;; This function uses a non-reentrant model
 44414 ;;
 44415                           
 44416                           	psect	text122
 44417  01567C                     __ptext122:
 44418                           	opt stack 0
 44419  01567C                     i2_SaveToFlash:
 44420                           	opt stack 16
 44421                           
 44422                           ;Persistence.c: 85: s_dacSettingsOriginal.Sequence = s_dacSettings.Sequence;
 44423                           
 44424                           ;incstack = 0
 44425  01567C  C2D3  F300         	movff	_s_dacSettings,_s_dacSettingsOriginal
 44426                           
 44427                           ;Persistence.c: 86: int cmp = memcmp(&s_dacSettingsOriginal, &s_dacSettings, sizeof(s_da
      +                          cSettings) - 1);
 44428  015680  0103               	movlb	3	; () banked
 44429  015682  0E03               	movlw	high _s_dacSettingsOriginal
 44430  015684  6E02               	movwf	i2memcmp@s1+1,c
 44431  015686  0103               	movlb	3	; () banked
 44432  015688  0E00               	movlw	low _s_dacSettingsOriginal
 44433  01568A  6E01               	movwf	i2memcmp@s1,c
 44434  01568C  0102               	movlb	2	; () banked
 44435  01568E  0E02               	movlw	high _s_dacSettings
 44436  015690  6E04               	movwf	i2memcmp@s2+1,c
 44437  015692  0102               	movlb	2	; () banked
 44438  015694  0ED3               	movlw	low _s_dacSettings
 44439  015696  6E03               	movwf	i2memcmp@s2,c
 44440  015698  0E00               	movlw	0
 44441  01569A  6E06               	movwf	i2memcmp@n+1,c
 44442  01569C  0E13               	movlw	19
 44443  01569E  6E05               	movwf	i2memcmp@n,c
 44444  0156A0  ECCE  F0D1         	call	i2_memcmp	;wreg free
 44445  0156A4  C001  F039         	movff	?i2_memcmp,i2SaveToFlash@cmp
 44446  0156A8  C002  F03A         	movff	?i2_memcmp+1,i2SaveToFlash@cmp+1
 44447                           
 44448                           ;Persistence.c: 87: if (cmp)
 44449  0156AC  503A               	movf	i2SaveToFlash@cmp+1,w,c
 44450  0156AE  1039               	iorwf	i2SaveToFlash@cmp,w,c
 44451  0156B0  B4D8               	btfsc	status,2,c
 44452  0156B2  D0F5               	goto	i2l15446
 44453                           
 44454                           ;Persistence.c: 88: {
 44455                           ;Persistence.c: 89: unsigned long addr = SETTINGS_ADDR;
 44456  0156B4  0E07               	movlw	low _SETTINGS_ADDR
 44457  0156B6  6EF6               	movwf	tblptrl,c
 44458  0156B8                     	if	1	;There is more than 1 active tblptr byte
 44459  0156B8  0EFF               	movlw	high _SETTINGS_ADDR
 44460  0156BA  6EF7               	movwf	tblptrh,c
 44461  0156BC                     	endif
 44462  0156BC                     	if	1	;There are 3 active tblptr bytes
 44463  0156BC  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 44464  0156BE  6EF8               	movwf	tblptru,c
 44465  0156C0                     	endif
 44466  0156C0  0009               	tblrd		*+
 44467  0156C2  CFF5 F035          	movff	tablat,i2SaveToFlash@addr
 44468  0156C6  0009               	tblrd		*+
 44469  0156C8  CFF5 F036          	movff	tablat,i2SaveToFlash@addr+1
 44470  0156CC  0009               	tblrd		*+
 44471  0156CE  CFF5 F037          	movff	tablat,i2SaveToFlash@addr+2
 44472  0156D2  000A               	tblrd		*-
 44473  0156D4  CFF5 F038          	movff	tablat,i2SaveToFlash@addr+3
 44474                           
 44475                           ;Persistence.c: 90: uint8_t success = 0;
 44476  0156D8  0E00               	movlw	0
 44477  0156DA  6E3B               	movwf	i2SaveToFlash@success,c
 44478                           
 44479                           ;Persistence.c: 91: while (!success)
 44480  0156DC  D0CD               	goto	i2l15440
 44481  0156DE                     i2l15414:
 44482                           
 44483                           ;Persistence.c: 92: {
 44484                           ;Persistence.c: 93: RefreshLine1Ex( "Preparing...    ");
 44485  0156DE  0EFF               	movlw	high STR_2
 44486  0156E0  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44487  0156E2  0ED7               	movlw	low STR_2
 44488  0156E4  6E04               	movwf	i2RefreshLine1Ex@line,c
 44489  0156E6  EC36  F0DD         	call	i2_RefreshLine1Ex	;wreg free
 44490                           
 44491                           ;Persistence.c: 94: unsigned long emptyAddr = FindEmpty(addr);
 44492  0156EA  C035  F011         	movff	i2SaveToFlash@addr,i2FindEmpty@startAddr
 44493  0156EE  C036  F012         	movff	i2SaveToFlash@addr+1,i2FindEmpty@startAddr+1
 44494  0156F2  C037  F013         	movff	i2SaveToFlash@addr+2,i2FindEmpty@startAddr+2
 44495  0156F6  C038  F014         	movff	i2SaveToFlash@addr+3,i2FindEmpty@startAddr+3
 44496  0156FA  EC22  F0C2         	call	i2_FindEmpty	;wreg free
 44497  0156FE  C011  F03C         	movff	?i2_FindEmpty,i2SaveToFlash@emptyAddr
 44498  015702  C012  F03D         	movff	?i2_FindEmpty+1,i2SaveToFlash@emptyAddr+1
 44499  015706  C013  F03E         	movff	?i2_FindEmpty+2,i2SaveToFlash@emptyAddr+2
 44500  01570A  C014  F03F         	movff	?i2_FindEmpty+3,i2SaveToFlash@emptyAddr+3
 44501                           
 44502                           ;Persistence.c: 95: if (emptyAddr)
 44503  01570E  503F               	movf	i2SaveToFlash@emptyAddr+3,w,c
 44504  015710  103C               	iorwf	i2SaveToFlash@emptyAddr,w,c
 44505  015712  103D               	iorwf	i2SaveToFlash@emptyAddr+1,w,c
 44506  015714  103E               	iorwf	i2SaveToFlash@emptyAddr+2,w,c
 44507  015716  B4D8               	btfsc	status,2,c
 44508  015718  D057               	goto	i2l15434
 44509                           
 44510                           ;Persistence.c: 96: {
 44511                           ;Persistence.c: 97: RefreshLine1Ex("Writing...      ");
 44512  01571A  0EFF               	movlw	high STR_3
 44513  01571C  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44514  01571E  0EC6               	movlw	low STR_3
 44515  015720  6E04               	movwf	i2RefreshLine1Ex@line,c
 44516  015722  EC36  F0DD         	call	i2_RefreshLine1Ex	;wreg free
 44517                           
 44518                           ;Persistence.c: 98: s_dacSettings.Sequence --;
 44519  015726  0102               	movlb	2	; () banked
 44520  015728  07D3               	decf	_s_dacSettings& (0+255),f,b
 44521                           
 44522                           ; BSR set to: 2
 44523                           ;Persistence.c: 99: s_dacSettings.CheckSum = GetCheckSum((unsigned char *)&s_dacSettings
      +                          , sizeof(s_dacSettings) - 1);
 44524  01572A  0102               	movlb	2	; () banked
 44525  01572C  0E02               	movlw	high _s_dacSettings
 44526  01572E  6E02               	movwf	i2GetCheckSum@data+1,c
 44527  015730  0102               	movlb	2	; () banked
 44528  015732  0ED3               	movlw	low _s_dacSettings
 44529  015734  6E01               	movwf	i2GetCheckSum@data,c
 44530  015736  0E13               	movlw	19
 44531  015738  6E03               	movwf	i2GetCheckSum@dataLen,c
 44532  01573A  ECCB  F0DA         	call	i2_GetCheckSum	;wreg free
 44533  01573E  0102               	movlb	2	; () banked
 44534  015740  6FE6               	movwf	(_s_dacSettings+19)& (0+255),b
 44535                           
 44536                           ; BSR set to: 2
 44537                           ;Persistence.c: 100: WriteBlockFlash(emptyAddr, 1, (unsigned char *)&s_dacSettings);
 44538  015742  C03C  F001         	movff	i2SaveToFlash@emptyAddr,i2WriteBlockFlash@startaddr
 44539  015746  C03D  F002         	movff	i2SaveToFlash@emptyAddr+1,i2WriteBlockFlash@startaddr+1
 44540  01574A  C03E  F003         	movff	i2SaveToFlash@emptyAddr+2,i2WriteBlockFlash@startaddr+2
 44541  01574E  C03F  F004         	movff	i2SaveToFlash@emptyAddr+3,i2WriteBlockFlash@startaddr+3
 44542  015752  0E01               	movlw	1
 44543  015754  6E05               	movwf	i2WriteBlockFlash@num_blocks,c
 44544  015756  0102               	movlb	2	; () banked
 44545  015758  0E02               	movlw	high _s_dacSettings
 44546  01575A  6E07               	movwf	i2WriteBlockFlash@flash_array+1,c
 44547  01575C  0102               	movlb	2	; () banked
 44548  01575E  0ED3               	movlw	low _s_dacSettings
 44549  015760  6E06               	movwf	i2WriteBlockFlash@flash_array,c
 44550  015762  ECBA  F0CC         	call	i2_WriteBlockFlash	;wreg free
 44551                           
 44552                           ;Persistence.c: 102: ReadFlash(emptyAddr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_
      +                          dacSettingsTmp);
 44553  015766  C03C  F001         	movff	i2SaveToFlash@emptyAddr,i2ReadFlash@startaddr
 44554  01576A  C03D  F002         	movff	i2SaveToFlash@emptyAddr+1,i2ReadFlash@startaddr+1
 44555  01576E  C03E  F003         	movff	i2SaveToFlash@emptyAddr+2,i2ReadFlash@startaddr+2
 44556  015772  C03F  F004         	movff	i2SaveToFlash@emptyAddr+3,i2ReadFlash@startaddr+3
 44557  015776  0E00               	movlw	0
 44558  015778  6E06               	movwf	i2ReadFlash@num_bytes+1,c
 44559  01577A  0E14               	movlw	20
 44560  01577C  6E05               	movwf	i2ReadFlash@num_bytes,c
 44561  01577E  0102               	movlb	2	; () banked
 44562  015780  0E02               	movlw	high _s_dacSettingsTmp
 44563  015782  6E08               	movwf	i2ReadFlash@flash_array+1,c
 44564  015784  0102               	movlb	2	; () banked
 44565  015786  0EE7               	movlw	low _s_dacSettingsTmp
 44566  015788  6E07               	movwf	i2ReadFlash@flash_array,c
 44567  01578A  ECEB  F0D7         	call	i2_ReadFlash	;wreg free
 44568                           
 44569                           ;Persistence.c: 103: success = !memcmp(&s_dacSettingsTmp, &s_dacSettings, sizeof(s_dacSe
      +                          ttings));
 44570  01578E  0102               	movlb	2	; () banked
 44571  015790  0E02               	movlw	high _s_dacSettingsTmp
 44572  015792  6E02               	movwf	i2memcmp@s1+1,c
 44573  015794  0102               	movlb	2	; () banked
 44574  015796  0EE7               	movlw	low _s_dacSettingsTmp
 44575  015798  6E01               	movwf	i2memcmp@s1,c
 44576  01579A  0102               	movlb	2	; () banked
 44577  01579C  0E02               	movlw	high _s_dacSettings
 44578  01579E  6E04               	movwf	i2memcmp@s2+1,c
 44579  0157A0  0102               	movlb	2	; () banked
 44580  0157A2  0ED3               	movlw	low _s_dacSettings
 44581  0157A4  6E03               	movwf	i2memcmp@s2,c
 44582  0157A6  0E00               	movlw	0
 44583  0157A8  6E06               	movwf	i2memcmp@n+1,c
 44584  0157AA  0E14               	movlw	20
 44585  0157AC  6E05               	movwf	i2memcmp@n,c
 44586  0157AE  ECCE  F0D1         	call	i2_memcmp	;wreg free
 44587  0157B2  5002               	movf	?i2_memcmp+1,w,c
 44588  0157B4  1001               	iorwf	?i2_memcmp,w,c
 44589  0157B6  A4D8               	btfss	status,2,c
 44590  0157B8  D002               	goto	i2u1771_40
 44591  0157BA  0E01               	movlw	1
 44592  0157BC  D001               	goto	i2u1771_46
 44593  0157BE                     i2u1771_40:
 44594  0157BE  0E00               	movlw	0
 44595  0157C0                     i2u1771_46:
 44596  0157C0  6E3B               	movwf	i2SaveToFlash@success,c
 44597                           
 44598                           ;Persistence.c: 104: RefreshLine1();
 44599  0157C2  EC52  F0DD         	call	i2_RefreshLine1	;wreg free
 44600                           
 44601                           ;Persistence.c: 105: }
 44602  0157C6  D058               	goto	i2l15440
 44603  0157C8                     i2l15434:
 44604                           
 44605                           ;Persistence.c: 106: else
 44606                           ;Persistence.c: 107: {
 44607                           ;Persistence.c: 108: RefreshLine1Ex("Erasing...      ");
 44608  0157C8  0EFF               	movlw	high STR_4
 44609  0157CA  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44610  0157CC  0EB5               	movlw	low STR_4
 44611  0157CE  6E04               	movwf	i2RefreshLine1Ex@line,c
 44612  0157D0  EC36  F0DD         	call	i2_RefreshLine1Ex	;wreg free
 44613                           
 44614                           ;Persistence.c: 109: s_dacSettings.Sequence = 0xFF;
 44615  0157D4  0102               	movlb	2	; () banked
 44616  0157D6  69D3               	setf	_s_dacSettings& (0+255),b
 44617                           
 44618                           ; BSR set to: 2
 44619                           ;Persistence.c: 110: EraseFlash(SETTINGS_ADDR, SETTINGS_ADDR + SETTINGS_LEN - 1);
 44620  0157D8  0E07               	movlw	low _SETTINGS_ADDR
 44621  0157DA  6EF6               	movwf	tblptrl,c
 44622  0157DC                     	if	1	;There is more than 1 active tblptr byte
 44623  0157DC  0EFF               	movlw	high _SETTINGS_ADDR
 44624  0157DE  6EF7               	movwf	tblptrh,c
 44625  0157E0                     	endif
 44626  0157E0                     	if	1	;There are 3 active tblptr bytes
 44627  0157E0  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 44628  0157E2  6EF8               	movwf	tblptru,c
 44629  0157E4                     	endif
 44630  0157E4  0009               	tblrd		*+
 44631  0157E6  CFF5 F001          	movff	tablat,i2EraseFlash@startaddr
 44632  0157EA  0009               	tblrd		*+
 44633  0157EC  CFF5 F002          	movff	tablat,i2EraseFlash@startaddr+1
 44634  0157F0  0009               	tblrd		*+
 44635  0157F2  CFF5 F003          	movff	tablat,i2EraseFlash@startaddr+2
 44636  0157F6  000A               	tblrd		*-
 44637  0157F8  CFF5 F004          	movff	tablat,i2EraseFlash@startaddr+3
 44638  0157FC  0E0B               	movlw	low _SETTINGS_LEN
 44639  0157FE  6EF6               	movwf	tblptrl,c
 44640  015800                     	if	1	;There is more than 1 active tblptr byte
 44641  015800  0EFF               	movlw	high _SETTINGS_LEN
 44642  015802  6EF7               	movwf	tblptrh,c
 44643  015804                     	endif
 44644  015804                     	if	1	;There are 3 active tblptr bytes
 44645  015804  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 44646  015806  6EF8               	movwf	tblptru,c
 44647  015808                     	endif
 44648  015808  0009               	tblrd		*+
 44649  01580A  CFF5 F029          	movff	tablat,??i2_SaveToFlash
 44650  01580E  0009               	tblrd		*+
 44651  015810  CFF5 F02A          	movff	tablat,??i2_SaveToFlash+1
 44652  015814  0009               	tblrd		*+
 44653  015816  CFF5 F02B          	movff	tablat,??i2_SaveToFlash+2
 44654  01581A  0009               	tblrd		*+
 44655  01581C  CFF5 F02C          	movff	tablat,??i2_SaveToFlash+3
 44656  015820  0E07               	movlw	low _SETTINGS_ADDR
 44657  015822  6EF6               	movwf	tblptrl,c
 44658  015824                     	if	1	;There is more than 1 active tblptr byte
 44659  015824  0EFF               	movlw	high _SETTINGS_ADDR
 44660  015826  6EF7               	movwf	tblptrh,c
 44661  015828                     	endif
 44662  015828                     	if	1	;There are 3 active tblptr bytes
 44663  015828  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 44664  01582A  6EF8               	movwf	tblptru,c
 44665  01582C                     	endif
 44666  01582C  0009               	tblrd		*+
 44667  01582E  CFF5 F02D          	movff	tablat,??i2_SaveToFlash+4
 44668  015832  0009               	tblrd		*+
 44669  015834  CFF5 F02E          	movff	tablat,??i2_SaveToFlash+5
 44670  015838  0009               	tblrd		*+
 44671  01583A  CFF5 F02F          	movff	tablat,??i2_SaveToFlash+6
 44672  01583E  0009               	tblrd		*+
 44673  015840  CFF5 F030          	movff	tablat,??i2_SaveToFlash+7
 44674  015844  5029               	movf	??i2_SaveToFlash,w,c
 44675  015846  242D               	addwf	??i2_SaveToFlash+4,w,c
 44676  015848  6E31               	movwf	(??i2_SaveToFlash+8)& (0+255),c
 44677  01584A  502A               	movf	??i2_SaveToFlash+1,w,c
 44678  01584C  202E               	addwfc	??i2_SaveToFlash+5,w,c
 44679  01584E  6E32               	movwf	(??i2_SaveToFlash+9)& (0+255),c
 44680  015850  502B               	movf	??i2_SaveToFlash+2,w,c
 44681  015852  202F               	addwfc	??i2_SaveToFlash+6,w,c
 44682  015854  6E33               	movwf	(??i2_SaveToFlash+10)& (0+255),c
 44683  015856  502C               	movf	??i2_SaveToFlash+3,w,c
 44684  015858  2030               	addwfc	??i2_SaveToFlash+7,w,c
 44685  01585A  6E34               	movwf	(??i2_SaveToFlash+11)& (0+255),c
 44686  01585C  0EFF               	movlw	255
 44687  01585E  2431               	addwf	??i2_SaveToFlash+8,w,c
 44688  015860  6E05               	movwf	i2EraseFlash@endaddr,c
 44689  015862  0EFF               	movlw	255
 44690  015864  2032               	addwfc	??i2_SaveToFlash+9,w,c
 44691  015866  6E06               	movwf	i2EraseFlash@endaddr+1,c
 44692  015868  0EFF               	movlw	255
 44693  01586A  2033               	addwfc	??i2_SaveToFlash+10,w,c
 44694  01586C  6E07               	movwf	i2EraseFlash@endaddr+2,c
 44695  01586E  0EFF               	movlw	255
 44696  015870  2034               	addwfc	??i2_SaveToFlash+11,w,c
 44697  015872  6E08               	movwf	i2EraseFlash@endaddr+3,c
 44698  015874  EC98  F0D5         	call	i2_EraseFlash	;wreg free
 44699  015878                     i2l15440:
 44700  015878  503B               	movf	i2SaveToFlash@success,w,c
 44701  01587A  B4D8               	btfsc	status,2,c
 44702  01587C  D730               	goto	i2l15414
 44703                           
 44704                           ;Persistence.c: 111: }
 44705                           ;Persistence.c: 112: }
 44706                           ;Persistence.c: 113: s_dacSettingsOriginal = s_dacSettings;
 44707  01587E  EE22  F0D3         	lfsr	2,_s_dacSettings
 44708  015882  EE13  F000         	lfsr	1,_s_dacSettingsOriginal
 44709  015886  0E14               	movlw	20
 44710  015888                     i2u1773_41:
 44711  015888  CFDE FFE6          	movff	postinc2,postinc1
 44712  01588C  2EE8               	decfsz	wreg,f,c
 44713  01588E  D7FC               	goto	i2u1773_41
 44714                           
 44715                           ;Persistence.c: 114: RefreshLine1Ex("Stored          ");
 44716  015890  0EFF               	movlw	high STR_5
 44717  015892  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44718  015894  0E93               	movlw	low STR_5
 44719  015896  6E04               	movwf	i2RefreshLine1Ex@line,c
 44720  015898  EC36  F0DD         	call	i2_RefreshLine1Ex	;wreg free
 44721                           
 44722                           ;Persistence.c: 115: }
 44723  01589C  0012               	return	
 44724  01589E                     i2l15446:
 44725                           
 44726                           ;Persistence.c: 116: else
 44727                           ;Persistence.c: 117: {
 44728                           ;Persistence.c: 118: RefreshLine1Ex("No change       ");
 44729  01589E  0EFF               	movlw	high STR_6
 44730  0158A0  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 44731  0158A2  0EA4               	movlw	low STR_6
 44732  0158A4  6E04               	movwf	i2RefreshLine1Ex@line,c
 44733  0158A6  EC36  F0DD         	call	i2_RefreshLine1Ex	;wreg free
 44734  0158AA  0012               	return	
 44735  0158AC                     __end_ofi2_SaveToFlash:
 44736                           	opt stack 0
 44737                           pclatu	equ	0xFFB
 44738                           pclath	equ	0xFFA
 44739                           tblptru	equ	0xFF8
 44740                           tblptrh	equ	0xFF7
 44741                           tblptrl	equ	0xFF6
 44742                           tablat	equ	0xFF5
 44743                           prodh	equ	0xFF4
 44744                           prodl	equ	0xFF3
 44745                           intcon	equ	0xFF2
 44746                           intcon2	equ	0xFF1
 44747                           intcon3	equ	0xFF0
 44748                           indf0	equ	0xFEF
 44749                           postinc0	equ	0xFEE
 44750                           fsr0h	equ	0xFEA
 44751                           fsr0l	equ	0xFE9
 44752                           wreg	equ	0xFE8
 44753                           indf1	equ	0xFE7
 44754                           postinc1	equ	0xFE6
 44755                           postdec1	equ	0xFE5
 44756                           fsr1h	equ	0xFE2
 44757                           fsr1l	equ	0xFE1
 44758                           indf2	equ	0xFDF
 44759                           postinc2	equ	0xFDE
 44760                           postdec2	equ	0xFDD
 44761                           fsr2h	equ	0xFDA
 44762                           fsr2l	equ	0xFD9
 44763                           status	equ	0xFD8
 44764                           
 44765 ;; *************** function i2_WriteBlockFlash *****************
 44766 ;; Defined at:
 44767 ;;		line 119 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\WriteBlockFlash.c"
 44768 ;; Parameters:    Size  Location     Type
 44769 ;;  startaddr       4    0[COMRAM] unsigned long 
 44770 ;;  num_blocks      1    4[COMRAM] unsigned char 
 44771 ;;  flash_array     2    5[COMRAM] PTR unsigned char 
 44772 ;;		 -> s_dacSettings(20), 
 44773 ;; Auto vars:     Size  Location     Type
 44774 ;;  WriteBlockFl    4   13[COMRAM] unsigned long 
 44775 ;;  WriteBlockFl    3    8[COMRAM] PTR unsigned char 
 44776 ;;		 -> ROM(131063), 
 44777 ;;  WriteBlockFl    1   12[COMRAM] unsigned char 
 44778 ;;  WriteBlockFl    1   11[COMRAM] unsigned char 
 44779 ;; Return value:  Size  Location     Type
 44780 ;;		None               void
 44781 ;; Registers used:
 44782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 44783 ;; Tracked objects:
 44784 ;;		On entry : 0/0
 44785 ;;		On exit  : 0/0
 44786 ;;		Unchanged: 0/0
 44787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44788 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44789 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44791 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44792 ;;Total ram usage:       17 bytes
 44793 ;; Hardware stack levels used:    1
 44794 ;; This function calls:
 44795 ;;		Nothing
 44796 ;; This function is called by:
 44797 ;;		i2_SaveToFlash
 44798 ;; This function uses a non-reentrant model
 44799 ;;
 44800                           
 44801                           	psect	text123
 44802  019974                     __ptext123:
 44803                           	opt stack 0
 44804  019974                     i2_WriteBlockFlash:
 44805                           	opt stack 20
 44806                           
 44807                           ;incstack = 0
 44808  019974  0E00               	movlw	0
 44809  019976  6E0C               	movwf	i2WriteBlockFlash@write_byte,c
 44810  019978  0E00               	movlw	0
 44811  01997A  6E0D               	movwf	i2WriteBlockFlash@flag,c
 44812  01997C  0E06               	movlw	6
 44813  01997E  6E08               	movwf	??i2_WriteBlockFlash& (0+255),c
 44814  019980                     i2u1695_45:
 44815  019980  90D8               	bcf	status,0,c
 44816  019982  3204               	rrcf	i2WriteBlockFlash@startaddr+3,f,c
 44817  019984  3203               	rrcf	i2WriteBlockFlash@startaddr+2,f,c
 44818  019986  3202               	rrcf	i2WriteBlockFlash@startaddr+1,f,c
 44819  019988  3201               	rrcf	i2WriteBlockFlash@startaddr,f,c
 44820  01998A  2E08               	decfsz	??i2_WriteBlockFlash& (0+255),f,c
 44821  01998C  D7F9               	goto	i2u1695_45
 44822  01998E  0E06               	movlw	6
 44823  019990                     i2u1696_45:
 44824  019990  90D8               	bcf	status,0,c
 44825  019992  3601               	rlcf	i2WriteBlockFlash@startaddr,f,c
 44826  019994  3602               	rlcf	i2WriteBlockFlash@startaddr+1,f,c
 44827  019996  3603               	rlcf	i2WriteBlockFlash@startaddr+2,f,c
 44828  019998  3604               	rlcf	i2WriteBlockFlash@startaddr+3,f,c
 44829  01999A  2EE8               	decfsz	wreg,f,c
 44830  01999C  D7F9               	goto	i2u1696_45
 44831  01999E  C001  F00E         	movff	i2WriteBlockFlash@startaddr,i2WriteBlockFlash@saddress
 44832  0199A2  C002  F00F         	movff	i2WriteBlockFlash@startaddr+1,i2WriteBlockFlash@saddress+1
 44833  0199A6  C003  F010         	movff	i2WriteBlockFlash@startaddr+2,i2WriteBlockFlash@saddress+2
 44834  0199AA  C004  F011         	movff	i2WriteBlockFlash@startaddr+3,i2WriteBlockFlash@saddress+3
 44835  0199AE  D046               	goto	i2l14844
 44836  0199B0                     i2l14812:
 44837  0199B0  C010  F00B         	movff	i2WriteBlockFlash@saddress+2,i2WriteBlockFlash@startptr+2
 44838  0199B4  C00F  F00A         	movff	i2WriteBlockFlash@saddress+1,i2WriteBlockFlash@startptr+1
 44839  0199B8  C00E  F009         	movff	i2WriteBlockFlash@saddress,i2WriteBlockFlash@startptr
 44840  0199BC  0E40               	movlw	64
 44841  0199BE  6E0C               	movwf	i2WriteBlockFlash@write_byte,c
 44842  0199C0  D015               	goto	i2l14822
 44843  0199C2                     i2l14816:
 44844  0199C2  C006  FFD9         	movff	i2WriteBlockFlash@flash_array,fsr2l
 44845  0199C6  C007  FFDA         	movff	i2WriteBlockFlash@flash_array+1,fsr2h
 44846  0199CA  50DF               	movf	indf2,w,c
 44847  0199CC  C009  FFF6         	movff	i2WriteBlockFlash@startptr,tblptrl
 44848  0199D0  C00A  FFF7         	movff	i2WriteBlockFlash@startptr+1,tblptrh
 44849  0199D4  C00B  FFF8         	movff	i2WriteBlockFlash@startptr+2,tblptru
 44850  0199D8  6EF5               	movwf	tablat,c
 44851  0199DA  000C               	tblwt		*
 44852  0199DC  4A06               	infsnz	i2WriteBlockFlash@flash_array,f,c
 44853  0199DE  2A07               	incf	i2WriteBlockFlash@flash_array+1,f,c
 44854  0199E0  0E01               	movlw	1
 44855  0199E2  2609               	addwf	i2WriteBlockFlash@startptr,f,c
 44856  0199E4  0E00               	movlw	0
 44857  0199E6  220A               	addwfc	i2WriteBlockFlash@startptr+1,f,c
 44858  0199E8  0E00               	movlw	0
 44859  0199EA  220B               	addwfc	i2WriteBlockFlash@startptr+2,f,c
 44860  0199EC                     i2l14822:
 44861  0199EC  060C               	decf	i2WriteBlockFlash@write_byte,f,c
 44862  0199EE  280C               	incf	i2WriteBlockFlash@write_byte& (0+255),w,c
 44863  0199F0  A4D8               	btfss	status,2,c
 44864  0199F2  D7E7               	goto	i2l14816
 44865  0199F4  C010  F00B         	movff	i2WriteBlockFlash@saddress+2,i2WriteBlockFlash@startptr+2
 44866  0199F8  C00F  F00A         	movff	i2WriteBlockFlash@saddress+1,i2WriteBlockFlash@startptr+1
 44867  0199FC  C00E  F009         	movff	i2WriteBlockFlash@saddress,i2WriteBlockFlash@startptr
 44868  019A00  84A6               	bsf	4006,2,c	;volatile
 44869  019A02  AEF2               	btfss	intcon,7,c	;volatile
 44870  019A04  D003               	goto	i2l2165
 44871  019A06  9EF2               	bcf	intcon,7,c	;volatile
 44872  019A08  0E01               	movlw	1
 44873  019A0A  6E0D               	movwf	i2WriteBlockFlash@flag,c
 44874  019A0C                     i2l2165:
 44875  019A0C  0E55               	movlw	85
 44876  019A0E  6EA7               	movwf	4007,c	;volatile
 44877  019A10  0EAA               	movlw	170
 44878  019A12  6EA7               	movwf	4007,c	;volatile
 44879  019A14  82A6               	bsf	4006,1,c	;volatile
 44880  019A16  94A6               	bcf	4006,2,c	;volatile
 44881  019A18  500D               	movf	i2WriteBlockFlash@flag,w,c
 44882  019A1A  B4D8               	btfsc	status,2,c
 44883  019A1C  D003               	goto	i2l14842
 44884  019A1E  8EF2               	bsf	intcon,7,c	;volatile
 44885  019A20  0E00               	movlw	0
 44886  019A22  6E0D               	movwf	i2WriteBlockFlash@flag,c
 44887  019A24                     i2l14842:
 44888  019A24  0E40               	movlw	64
 44889  019A26  240E               	addwf	i2WriteBlockFlash@saddress,w,c
 44890  019A28  6E0E               	movwf	i2WriteBlockFlash@saddress,c
 44891  019A2A  0E00               	movlw	0
 44892  019A2C  200F               	addwfc	i2WriteBlockFlash@saddress+1,w,c
 44893  019A2E  6E0F               	movwf	i2WriteBlockFlash@saddress+1,c
 44894  019A30  0E00               	movlw	0
 44895  019A32  2010               	addwfc	i2WriteBlockFlash@saddress+2,w,c
 44896  019A34  6E10               	movwf	i2WriteBlockFlash@saddress+2,c
 44897  019A36  0E00               	movlw	0
 44898  019A38  2011               	addwfc	i2WriteBlockFlash@saddress+3,w,c
 44899  019A3A  6E11               	movwf	i2WriteBlockFlash@saddress+3,c
 44900  019A3C                     i2l14844:
 44901  019A3C  0605               	decf	i2WriteBlockFlash@num_blocks,f,c
 44902  019A3E  2805               	incf	i2WriteBlockFlash@num_blocks& (0+255),w,c
 44903  019A40  B4D8               	btfsc	status,2,c
 44904  019A42  0012               	return	
 44905  019A44  D7B5               	goto	i2l14812
 44906  019A46                     __end_ofi2_WriteBlockFlash:
 44907                           	opt stack 0
 44908                           pclatu	equ	0xFFB
 44909                           pclath	equ	0xFFA
 44910                           tblptru	equ	0xFF8
 44911                           tblptrh	equ	0xFF7
 44912                           tblptrl	equ	0xFF6
 44913                           tablat	equ	0xFF5
 44914                           prodh	equ	0xFF4
 44915                           prodl	equ	0xFF3
 44916                           intcon	equ	0xFF2
 44917                           intcon2	equ	0xFF1
 44918                           intcon3	equ	0xFF0
 44919                           indf0	equ	0xFEF
 44920                           postinc0	equ	0xFEE
 44921                           fsr0h	equ	0xFEA
 44922                           fsr0l	equ	0xFE9
 44923                           wreg	equ	0xFE8
 44924                           indf1	equ	0xFE7
 44925                           postinc1	equ	0xFE6
 44926                           postdec1	equ	0xFE5
 44927                           fsr1h	equ	0xFE2
 44928                           fsr1l	equ	0xFE1
 44929                           indf2	equ	0xFDF
 44930                           postinc2	equ	0xFDE
 44931                           postdec2	equ	0xFDD
 44932                           fsr2h	equ	0xFDA
 44933                           fsr2l	equ	0xFD9
 44934                           status	equ	0xFD8
 44935                           
 44936 ;; *************** function i2_GetCheckSum *****************
 44937 ;; Defined at:
 44938 ;;		line 122 in file "Persistence.c"
 44939 ;; Parameters:    Size  Location     Type
 44940 ;;  data            2    0[COMRAM] PTR unsigned char 
 44941 ;;		 -> s_dacSettingsTmp(20), TCPServer@cmdBytes(18), s_dacSettings(20), 
 44942 ;;  dataLen         1    2[COMRAM] unsigned char 
 44943 ;; Auto vars:     Size  Location     Type
 44944 ;;  GetCheckSum     1    4[COMRAM] unsigned char 
 44945 ;;  GetCheckSum     1    3[COMRAM] unsigned char 
 44946 ;; Return value:  Size  Location     Type
 44947 ;;                  1    wreg      unsigned char 
 44948 ;; Registers used:
 44949 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44950 ;; Tracked objects:
 44951 ;;		On entry : 0/0
 44952 ;;		On exit  : 0/0
 44953 ;;		Unchanged: 0/0
 44954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 44955 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44958 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44959 ;;Total ram usage:        5 bytes
 44960 ;; Hardware stack levels used:    1
 44961 ;; This function calls:
 44962 ;;		Nothing
 44963 ;; This function is called by:
 44964 ;;		i2_SaveToFlash
 44965 ;; This function uses a non-reentrant model
 44966 ;;
 44967                           
 44968                           	psect	text124
 44969  01B596                     __ptext124:
 44970                           	opt stack 0
 44971  01B596                     i2_GetCheckSum:
 44972                           	opt stack 20
 44973                           
 44974                           ;Persistence.c: 124: uint8_t res = (*data) ^ 0xFF;
 44975                           
 44976                           ;incstack = 0
 44977  01B596  C001  FFD9         	movff	i2GetCheckSum@data,fsr2l
 44978  01B59A  C002  FFDA         	movff	i2GetCheckSum@data+1,fsr2h
 44979  01B59E  50DF               	movf	indf2,w,c
 44980  01B5A0  0AFF               	xorlw	255
 44981  01B5A2  6E04               	movwf	i2GetCheckSum@res,c
 44982                           
 44983                           ;Persistence.c: 125: for(uint8_t i = 1; i < dataLen; i ++)
 44984  01B5A4  0E01               	movlw	1
 44985  01B5A6  6E05               	movwf	i2GetCheckSum@i,c
 44986  01B5A8  D009               	goto	i2l14784
 44987  01B5AA                     i2l14778:
 44988                           
 44989                           ;Persistence.c: 126: {
 44990                           ;Persistence.c: 127: data ++;
 44991  01B5AA  4A01               	infsnz	i2GetCheckSum@data,f,c
 44992  01B5AC  2A02               	incf	i2GetCheckSum@data+1,f,c
 44993                           
 44994                           ;Persistence.c: 128: res += *data;
 44995  01B5AE  C001  FFD9         	movff	i2GetCheckSum@data,fsr2l
 44996  01B5B2  C002  FFDA         	movff	i2GetCheckSum@data+1,fsr2h
 44997  01B5B6  50DF               	movf	indf2,w,c
 44998  01B5B8  2604               	addwf	i2GetCheckSum@res,f,c
 44999  01B5BA  2A05               	incf	i2GetCheckSum@i,f,c
 45000  01B5BC                     i2l14784:
 45001  01B5BC  5003               	movf	i2GetCheckSum@dataLen,w,c
 45002  01B5BE  5C05               	subwf	i2GetCheckSum@i,w,c
 45003  01B5C0  A0D8               	btfss	status,0,c
 45004  01B5C2  D7F3               	goto	i2l14778
 45005                           
 45006                           ;Persistence.c: 129: }
 45007                           ;Persistence.c: 130: return res;
 45008  01B5C4  5004               	movf	i2GetCheckSum@res,w,c
 45009  01B5C6  0012               	return	
 45010  01B5C8                     __end_ofi2_GetCheckSum:
 45011                           	opt stack 0
 45012                           pclatu	equ	0xFFB
 45013                           pclath	equ	0xFFA
 45014                           tblptru	equ	0xFF8
 45015                           tblptrh	equ	0xFF7
 45016                           tblptrl	equ	0xFF6
 45017                           tablat	equ	0xFF5
 45018                           prodh	equ	0xFF4
 45019                           prodl	equ	0xFF3
 45020                           intcon	equ	0xFF2
 45021                           intcon2	equ	0xFF1
 45022                           intcon3	equ	0xFF0
 45023                           indf0	equ	0xFEF
 45024                           postinc0	equ	0xFEE
 45025                           fsr0h	equ	0xFEA
 45026                           fsr0l	equ	0xFE9
 45027                           wreg	equ	0xFE8
 45028                           indf1	equ	0xFE7
 45029                           postinc1	equ	0xFE6
 45030                           postdec1	equ	0xFE5
 45031                           fsr1h	equ	0xFE2
 45032                           fsr1l	equ	0xFE1
 45033                           indf2	equ	0xFDF
 45034                           postinc2	equ	0xFDE
 45035                           postdec2	equ	0xFDD
 45036                           fsr2h	equ	0xFDA
 45037                           fsr2l	equ	0xFD9
 45038                           status	equ	0xFD8
 45039                           
 45040 ;; *************** function i2_FindEmpty *****************
 45041 ;; Defined at:
 45042 ;;		line 61 in file "Persistence.c"
 45043 ;; Parameters:    Size  Location     Type
 45044 ;;  startAddr       4   16[COMRAM] unsigned long 
 45045 ;; Auto vars:     Size  Location     Type
 45046 ;;  FindEmpty       4   34[COMRAM] unsigned long 
 45047 ;;  FindEmpty       4   28[COMRAM] unsigned long 
 45048 ;;  FindEmpty       2   38[COMRAM] PTR unsigned char 
 45049 ;;		 -> s_dacSettingsTmp(20), 
 45050 ;;  FindEmpty       2   32[COMRAM] PTR unsigned char 
 45051 ;;		 -> s_dacSettingsTmp(20), 
 45052 ;; Return value:  Size  Location     Type
 45053 ;;                  4   16[COMRAM] unsigned long 
 45054 ;; Registers used:
 45055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 45056 ;; Tracked objects:
 45057 ;;		On entry : 0/0
 45058 ;;		On exit  : 0/0
 45059 ;;		Unchanged: 0/0
 45060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45062 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45063 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45064 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45065 ;;Total ram usage:       24 bytes
 45066 ;; Hardware stack levels used:    1
 45067 ;; Hardware stack levels required when called:    1
 45068 ;; This function calls:
 45069 ;;		i2_ReadFlash
 45070 ;; This function is called by:
 45071 ;;		i2_SaveToFlash
 45072 ;; This function uses a non-reentrant model
 45073 ;;
 45074                           
 45075                           	psect	text125
 45076  018444                     __ptext125:
 45077                           	opt stack 0
 45078  018444                     i2_FindEmpty:
 45079                           	opt stack 19
 45080                           
 45081                           ;Persistence.c: 63: unsigned long addrStop = SETTINGS_ADDR + SETTINGS_LEN;
 45082                           
 45083                           ;incstack = 0
 45084  018444  0E0B               	movlw	low _SETTINGS_LEN
 45085  018446  6EF6               	movwf	tblptrl,c
 45086  018448                     	if	1	;There is more than 1 active tblptr byte
 45087  018448  0EFF               	movlw	high _SETTINGS_LEN
 45088  01844A  6EF7               	movwf	tblptrh,c
 45089  01844C                     	endif
 45090  01844C                     	if	1	;There are 3 active tblptr bytes
 45091  01844C  0E00               	movlw	low (_SETTINGS_LEN shr (0+16))
 45092  01844E  6EF8               	movwf	tblptru,c
 45093  018450                     	endif
 45094  018450  0009               	tblrd		*+
 45095  018452  CFF5 F015          	movff	tablat,??i2_FindEmpty
 45096  018456  0009               	tblrd		*+
 45097  018458  CFF5 F016          	movff	tablat,??i2_FindEmpty+1
 45098  01845C  0009               	tblrd		*+
 45099  01845E  CFF5 F017          	movff	tablat,??i2_FindEmpty+2
 45100  018462  0009               	tblrd		*+
 45101  018464  CFF5 F018          	movff	tablat,??i2_FindEmpty+3
 45102  018468  0E07               	movlw	low _SETTINGS_ADDR
 45103  01846A  6EF6               	movwf	tblptrl,c
 45104  01846C                     	if	1	;There is more than 1 active tblptr byte
 45105  01846C  0EFF               	movlw	high _SETTINGS_ADDR
 45106  01846E  6EF7               	movwf	tblptrh,c
 45107  018470                     	endif
 45108  018470                     	if	1	;There are 3 active tblptr bytes
 45109  018470  0E00               	movlw	low (_SETTINGS_ADDR shr (0+16))
 45110  018472  6EF8               	movwf	tblptru,c
 45111  018474                     	endif
 45112  018474  0009               	tblrd		*+
 45113  018476  CFF5 F019          	movff	tablat,??i2_FindEmpty+4
 45114  01847A  0009               	tblrd		*+
 45115  01847C  CFF5 F01A          	movff	tablat,??i2_FindEmpty+5
 45116  018480  0009               	tblrd		*+
 45117  018482  CFF5 F01B          	movff	tablat,??i2_FindEmpty+6
 45118  018486  0009               	tblrd		*+
 45119  018488  CFF5 F01C          	movff	tablat,??i2_FindEmpty+7
 45120  01848C  5015               	movf	??i2_FindEmpty,w,c
 45121  01848E  2419               	addwf	??i2_FindEmpty+4,w,c
 45122  018490  6E1D               	movwf	i2FindEmpty@addrStop,c
 45123  018492  5016               	movf	??i2_FindEmpty+1,w,c
 45124  018494  201A               	addwfc	??i2_FindEmpty+5,w,c
 45125  018496  6E1E               	movwf	i2FindEmpty@addrStop+1,c
 45126  018498  5017               	movf	??i2_FindEmpty+2,w,c
 45127  01849A  201B               	addwfc	??i2_FindEmpty+6,w,c
 45128  01849C  6E1F               	movwf	i2FindEmpty@addrStop+2,c
 45129  01849E  5018               	movf	??i2_FindEmpty+3,w,c
 45130  0184A0  201C               	addwfc	??i2_FindEmpty+7,w,c
 45131  0184A2  6E20               	movwf	i2FindEmpty@addrStop+3,c
 45132                           
 45133                           ;Persistence.c: 64: unsigned long addr = startAddr;
 45134  0184A4  C011  F023         	movff	i2FindEmpty@startAddr,i2FindEmpty@addr
 45135  0184A8  C012  F024         	movff	i2FindEmpty@startAddr+1,i2FindEmpty@addr+1
 45136  0184AC  C013  F025         	movff	i2FindEmpty@startAddr+2,i2FindEmpty@addr+2
 45137  0184B0  C014  F026         	movff	i2FindEmpty@startAddr+3,i2FindEmpty@addr+3
 45138                           
 45139                           ;Persistence.c: 65: while(addr < addrStop)
 45140  0184B4  D047               	goto	i2l1802
 45141  0184B6                     i2l14750:
 45142                           
 45143                           ;Persistence.c: 66: {
 45144                           ;Persistence.c: 67: ReadFlash(addr, sizeof(s_dacSettingsTmp), (unsigned char *)&s_dacSet
      +                          tingsTmp);
 45145  0184B6  C023  F001         	movff	i2FindEmpty@addr,i2ReadFlash@startaddr
 45146  0184BA  C024  F002         	movff	i2FindEmpty@addr+1,i2ReadFlash@startaddr+1
 45147  0184BE  C025  F003         	movff	i2FindEmpty@addr+2,i2ReadFlash@startaddr+2
 45148  0184C2  C026  F004         	movff	i2FindEmpty@addr+3,i2ReadFlash@startaddr+3
 45149  0184C6  0E00               	movlw	0
 45150  0184C8  6E06               	movwf	i2ReadFlash@num_bytes+1,c
 45151  0184CA  0E14               	movlw	20
 45152  0184CC  6E05               	movwf	i2ReadFlash@num_bytes,c
 45153  0184CE  0102               	movlb	2	; () banked
 45154  0184D0  0E02               	movlw	high _s_dacSettingsTmp
 45155  0184D2  6E08               	movwf	i2ReadFlash@flash_array+1,c
 45156  0184D4  0102               	movlb	2	; () banked
 45157  0184D6  0EE7               	movlw	low _s_dacSettingsTmp
 45158  0184D8  6E07               	movwf	i2ReadFlash@flash_array,c
 45159  0184DA  ECEB  F0D7         	call	i2_ReadFlash	;wreg free
 45160                           
 45161                           ;Persistence.c: 69: uint8_t *tmpAddr = (uint8_t *)&s_dacSettingsTmp;
 45162  0184DE  0102               	movlb	2	; () banked
 45163  0184E0  0E02               	movlw	high _s_dacSettingsTmp
 45164  0184E2  6E28               	movwf	i2FindEmpty@tmpAddr+1,c
 45165  0184E4  0102               	movlb	2	; () banked
 45166  0184E6  0EE7               	movlw	low _s_dacSettingsTmp
 45167  0184E8  6E27               	movwf	i2FindEmpty@tmpAddr,c
 45168                           
 45169                           ; BSR set to: 2
 45170                           ;Persistence.c: 70: uint8_t *blockEnd = tmpAddr + sizeof(s_dacSettingsTmp);
 45171  0184EA  0E14               	movlw	20
 45172  0184EC  2427               	addwf	i2FindEmpty@tmpAddr,w,c
 45173  0184EE  6E21               	movwf	i2FindEmpty@blockEnd,c
 45174  0184F0  0E00               	movlw	0
 45175  0184F2  2028               	addwfc	i2FindEmpty@tmpAddr+1,w,c
 45176  0184F4  6E22               	movwf	i2FindEmpty@blockEnd+1,c
 45177                           
 45178                           ;Persistence.c: 71: while(tmpAddr < blockEnd)
 45179  0184F6  D00A               	goto	i2l14762
 45180  0184F8                     i2l14756:
 45181                           
 45182                           ;Persistence.c: 72: {
 45183                           ;Persistence.c: 73: if (*tmpAddr != 0xFF) break;
 45184  0184F8  C027  FFD9         	movff	i2FindEmpty@tmpAddr,fsr2l
 45185  0184FC  C028  FFDA         	movff	i2FindEmpty@tmpAddr+1,fsr2h
 45186  018500  50DF               	movf	indf2,w,c
 45187  018502  0AFF               	xorlw	255
 45188  018504  A4D8               	btfss	status,2,c
 45189  018506  D008               	goto	i2l14764
 45190                           
 45191                           ;Persistence.c: 74: tmpAddr ++;
 45192  018508  4A27               	infsnz	i2FindEmpty@tmpAddr,f,c
 45193  01850A  2A28               	incf	i2FindEmpty@tmpAddr+1,f,c
 45194  01850C                     i2l14762:
 45195  01850C  5021               	movf	i2FindEmpty@blockEnd,w,c
 45196  01850E  5C27               	subwf	i2FindEmpty@tmpAddr,w,c
 45197  018510  5022               	movf	i2FindEmpty@blockEnd+1,w,c
 45198  018512  5828               	subwfb	i2FindEmpty@tmpAddr+1,w,c
 45199  018514  A0D8               	btfss	status,0,c
 45200  018516  D7F0               	goto	i2l14756
 45201  018518                     i2l14764:
 45202                           
 45203                           ;Persistence.c: 75: }
 45204                           ;Persistence.c: 76: if (tmpAddr == blockEnd) return addr;
 45205  018518  5022               	movf	i2FindEmpty@blockEnd+1,w,c
 45206  01851A  1828               	xorwf	i2FindEmpty@tmpAddr+1,w,c
 45207  01851C  E102               	bnz	i2u1689_45
 45208  01851E  5021               	movf	i2FindEmpty@blockEnd,w,c
 45209  018520  1827               	xorwf	i2FindEmpty@tmpAddr,w,c
 45210  018522                     i2u1689_45:
 45211  018522  A4D8               	btfss	status,2,c
 45212  018524  D009               	goto	i2l14768
 45213  018526  C023  F011         	movff	i2FindEmpty@addr,?i2_FindEmpty
 45214  01852A  C024  F012         	movff	i2FindEmpty@addr+1,?i2_FindEmpty+1
 45215  01852E  C025  F013         	movff	i2FindEmpty@addr+2,?i2_FindEmpty+2
 45216  018532  C026  F014         	movff	i2FindEmpty@addr+3,?i2_FindEmpty+3
 45217  018536  0012               	return	
 45218  018538                     i2l14768:
 45219                           
 45220                           ;Persistence.c: 78: addr += 0x40;
 45221  018538  0E40               	movlw	64
 45222  01853A  2623               	addwf	i2FindEmpty@addr,f,c
 45223  01853C  0E00               	movlw	0
 45224  01853E  2224               	addwfc	i2FindEmpty@addr+1,f,c
 45225  018540  2225               	addwfc	i2FindEmpty@addr+2,f,c
 45226  018542  2226               	addwfc	i2FindEmpty@addr+3,f,c
 45227  018544                     i2l1802:
 45228  018544  501D               	movf	i2FindEmpty@addrStop,w,c
 45229  018546  5C23               	subwf	i2FindEmpty@addr,w,c
 45230  018548  501E               	movf	i2FindEmpty@addrStop+1,w,c
 45231  01854A  5824               	subwfb	i2FindEmpty@addr+1,w,c
 45232  01854C  501F               	movf	i2FindEmpty@addrStop+2,w,c
 45233  01854E  5825               	subwfb	i2FindEmpty@addr+2,w,c
 45234  018550  5020               	movf	i2FindEmpty@addrStop+3,w,c
 45235  018552  5826               	subwfb	i2FindEmpty@addr+3,w,c
 45236  018554  A0D8               	btfss	status,0,c
 45237  018556  D7AF               	goto	i2l14750
 45238                           
 45239                           ;Persistence.c: 79: }
 45240                           ;Persistence.c: 80: return 0;
 45241  018558  0E00               	movlw	0
 45242  01855A  6E11               	movwf	?i2_FindEmpty,c
 45243  01855C  0E00               	movlw	0
 45244  01855E  6E12               	movwf	?i2_FindEmpty+1,c
 45245  018560  0E00               	movlw	0
 45246  018562  6E13               	movwf	?i2_FindEmpty+2,c
 45247  018564  0E00               	movlw	0
 45248  018566  6E14               	movwf	?i2_FindEmpty+3,c
 45249  018568  0012               	return	
 45250  01856A                     __end_ofi2_FindEmpty:
 45251                           	opt stack 0
 45252                           pclatu	equ	0xFFB
 45253                           pclath	equ	0xFFA
 45254                           tblptru	equ	0xFF8
 45255                           tblptrh	equ	0xFF7
 45256                           tblptrl	equ	0xFF6
 45257                           tablat	equ	0xFF5
 45258                           prodh	equ	0xFF4
 45259                           prodl	equ	0xFF3
 45260                           intcon	equ	0xFF2
 45261                           intcon2	equ	0xFF1
 45262                           intcon3	equ	0xFF0
 45263                           indf0	equ	0xFEF
 45264                           postinc0	equ	0xFEE
 45265                           fsr0h	equ	0xFEA
 45266                           fsr0l	equ	0xFE9
 45267                           wreg	equ	0xFE8
 45268                           indf1	equ	0xFE7
 45269                           postinc1	equ	0xFE6
 45270                           postdec1	equ	0xFE5
 45271                           fsr1h	equ	0xFE2
 45272                           fsr1l	equ	0xFE1
 45273                           indf2	equ	0xFDF
 45274                           postinc2	equ	0xFDE
 45275                           postdec2	equ	0xFDD
 45276                           fsr2h	equ	0xFDA
 45277                           fsr2l	equ	0xFD9
 45278                           status	equ	0xFD8
 45279                           
 45280 ;; *************** function i2_ReadFlash *****************
 45281 ;; Defined at:
 45282 ;;		line 23 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\ReadFlash.c"
 45283 ;; Parameters:    Size  Location     Type
 45284 ;;  startaddr       4    0[COMRAM] unsigned long 
 45285 ;;  num_bytes       2    4[COMRAM] unsigned int 
 45286 ;;  flash_array     2    6[COMRAM] PTR unsigned char 
 45287 ;;		 -> s_dacSettingsTmp(20), 
 45288 ;; Auto vars:     Size  Location     Type
 45289 ;;  ReadFlash       4   12[COMRAM] struct .
 45290 ;;  ReadFlash       4    8[COMRAM] struct .
 45291 ;; Return value:  Size  Location     Type
 45292 ;;		None               void
 45293 ;; Registers used:
 45294 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45295 ;; Tracked objects:
 45296 ;;		On entry : 0/0
 45297 ;;		On exit  : 0/0
 45298 ;;		Unchanged: 0/0
 45299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45301 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45303 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45304 ;;Total ram usage:       16 bytes
 45305 ;; Hardware stack levels used:    1
 45306 ;; This function calls:
 45307 ;;		Nothing
 45308 ;; This function is called by:
 45309 ;;		i2_FindEmpty
 45310 ;;		i2_SaveToFlash
 45311 ;; This function uses a non-reentrant model
 45312 ;;
 45313                           
 45314                           	psect	text126
 45315  01AFD6                     __ptext126:
 45316                           	opt stack 0
 45317  01AFD6                     i2_ReadFlash:
 45318                           	opt stack 20
 45319                           
 45320                           ;incstack = 0
 45321  01AFD6  C001  F009         	movff	i2ReadFlash@startaddr,i2ReadFlash@flash_addr
 45322  01AFDA  C002  F00A         	movff	i2ReadFlash@startaddr+1,i2ReadFlash@flash_addr+1
 45323  01AFDE  C003  F00B         	movff	i2ReadFlash@startaddr+2,i2ReadFlash@flash_addr+2
 45324  01AFE2  C004  F00C         	movff	i2ReadFlash@startaddr+3,i2ReadFlash@flash_addr+3
 45325  01AFE6  CFF8 F00F          	movff	tblptru,i2ReadFlash@tblptr_save+2	;volatile
 45326  01AFEA  CFF7 F00E          	movff	tblptrh,i2ReadFlash@tblptr_save+1	;volatile
 45327  01AFEE  CFF6 F00D          	movff	tblptrl,i2ReadFlash@tblptr_save	;volatile
 45328  01AFF2  C00B  FFF8         	movff	i2ReadFlash@flash_addr+2,tblptru	;volatile
 45329  01AFF6  C00A  FFF7         	movff	i2ReadFlash@flash_addr+1,tblptrh	;volatile
 45330  01AFFA  C009  FFF6         	movff	i2ReadFlash@flash_addr,tblptrl	;volatile
 45331  01AFFE  D009               	goto	i2l13978
 45332  01B000                     i2l2149:
 45333  01B000  0009               	tblrd		*+	;# 
 45334  01B002  C007  FFD9         	movff	i2ReadFlash@flash_array,fsr2l
 45335  01B006  C008  FFDA         	movff	i2ReadFlash@flash_array+1,fsr2h
 45336  01B00A  CFF5 FFDF          	movff	tablat,indf2	;volatile
 45337  01B00E  4A07               	infsnz	i2ReadFlash@flash_array,f,c
 45338  01B010  2A08               	incf	i2ReadFlash@flash_array+1,f,c
 45339  01B012                     i2l13978:
 45340  01B012  0605               	decf	i2ReadFlash@num_bytes,f,c
 45341  01B014  A0D8               	btfss	status,0,c
 45342  01B016  0606               	decf	i2ReadFlash@num_bytes+1,f,c
 45343  01B018  2805               	incf	i2ReadFlash@num_bytes& (0+255),w,c
 45344  01B01A  B4D8               	btfsc	status,2,c
 45345  01B01C  2806               	incf	(i2ReadFlash@num_bytes+1)& (0+255),w,c
 45346  01B01E  A4D8               	btfss	status,2,c
 45347  01B020  D7EF               	goto	i2l2149
 45348  01B022  C00F  FFF8         	movff	i2ReadFlash@tblptr_save+2,tblptru	;volatile
 45349  01B026  C00E  FFF7         	movff	i2ReadFlash@tblptr_save+1,tblptrh	;volatile
 45350  01B02A  C00D  FFF6         	movff	i2ReadFlash@tblptr_save,tblptrl	;volatile
 45351  01B02E  0012               	return	
 45352  01B030                     __end_ofi2_ReadFlash:
 45353                           	opt stack 0
 45354                           pclatu	equ	0xFFB
 45355                           pclath	equ	0xFFA
 45356                           tblptru	equ	0xFF8
 45357                           tblptrh	equ	0xFF7
 45358                           tblptrl	equ	0xFF6
 45359                           tablat	equ	0xFF5
 45360                           prodh	equ	0xFF4
 45361                           prodl	equ	0xFF3
 45362                           intcon	equ	0xFF2
 45363                           intcon2	equ	0xFF1
 45364                           intcon3	equ	0xFF0
 45365                           indf0	equ	0xFEF
 45366                           postinc0	equ	0xFEE
 45367                           fsr0h	equ	0xFEA
 45368                           fsr0l	equ	0xFE9
 45369                           wreg	equ	0xFE8
 45370                           indf1	equ	0xFE7
 45371                           postinc1	equ	0xFE6
 45372                           postdec1	equ	0xFE5
 45373                           fsr1h	equ	0xFE2
 45374                           fsr1l	equ	0xFE1
 45375                           indf2	equ	0xFDF
 45376                           postinc2	equ	0xFDE
 45377                           postdec2	equ	0xFDD
 45378                           fsr2h	equ	0xFDA
 45379                           fsr2l	equ	0xFD9
 45380                           status	equ	0xFD8
 45381                           
 45382 ;; *************** function i2_EraseFlash *****************
 45383 ;; Defined at:
 45384 ;;		line 59 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\Flash\EraseFlash.c"
 45385 ;; Parameters:    Size  Location     Type
 45386 ;;  startaddr       4    0[COMRAM] unsigned long 
 45387 ;;  endaddr         4    4[COMRAM] unsigned long 
 45388 ;; Auto vars:     Size  Location     Type
 45389 ;;  EraseFlash      4    9[COMRAM] struct .
 45390 ;;  EraseFlash      1    8[COMRAM] unsigned char 
 45391 ;; Return value:  Size  Location     Type
 45392 ;;		None               void
 45393 ;; Registers used:
 45394 ;;		wreg, status,2, status,0
 45395 ;; Tracked objects:
 45396 ;;		On entry : 0/0
 45397 ;;		On exit  : 0/0
 45398 ;;		Unchanged: 0/0
 45399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45400 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45401 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45403 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45404 ;;Total ram usage:       13 bytes
 45405 ;; Hardware stack levels used:    1
 45406 ;; This function calls:
 45407 ;;		Nothing
 45408 ;; This function is called by:
 45409 ;;		i2_SaveToFlash
 45410 ;; This function uses a non-reentrant model
 45411 ;;
 45412                           
 45413                           	psect	text127
 45414  01AB30                     __ptext127:
 45415                           	opt stack 0
 45416  01AB30                     i2_EraseFlash:
 45417                           	opt stack 20
 45418                           
 45419                           ;incstack = 0
 45420  01AB30  0E00               	movlw	0
 45421  01AB32  6E09               	movwf	i2EraseFlash@flag,c
 45422  01AB34  C001  F00A         	movff	i2EraseFlash@startaddr,i2EraseFlash@flash_addr
 45423  01AB38  C002  F00B         	movff	i2EraseFlash@startaddr+1,i2EraseFlash@flash_addr+1
 45424  01AB3C  C003  F00C         	movff	i2EraseFlash@startaddr+2,i2EraseFlash@flash_addr+2
 45425  01AB40  C004  F00D         	movff	i2EraseFlash@startaddr+3,i2EraseFlash@flash_addr+3
 45426  01AB44  D021               	goto	i2l2132
 45427  01AB46                     i2l2133:
 45428  01AB46  C00C  FFF8         	movff	i2EraseFlash@flash_addr+2,tblptru	;volatile
 45429  01AB4A  C00B  FFF7         	movff	i2EraseFlash@flash_addr+1,tblptrh	;volatile
 45430  01AB4E  C00A  FFF6         	movff	i2EraseFlash@flash_addr,tblptrl	;volatile
 45431  01AB52  84A6               	bsf	4006,2,c	;volatile
 45432  01AB54  88A6               	bsf	4006,4,c	;volatile
 45433  01AB56  AEF2               	btfss	intcon,7,c	;volatile
 45434  01AB58  D003               	goto	i2l2134
 45435  01AB5A  9EF2               	bcf	intcon,7,c	;volatile
 45436  01AB5C  0E01               	movlw	1
 45437  01AB5E  6E09               	movwf	i2EraseFlash@flag,c
 45438  01AB60                     i2l2134:
 45439  01AB60  0E55               	movlw	85
 45440  01AB62  6EA7               	movwf	4007,c	;volatile
 45441  01AB64  0EAA               	movlw	170
 45442  01AB66  6EA7               	movwf	4007,c	;volatile
 45443  01AB68  82A6               	bsf	4006,1,c	;volatile
 45444  01AB6A  5009               	movf	i2EraseFlash@flag,w,c
 45445  01AB6C  A4D8               	btfss	status,2,c
 45446  01AB6E  8EF2               	bsf	intcon,7,c	;volatile
 45447  01AB70  0E00               	movlw	0
 45448  01AB72  240A               	addwf	i2EraseFlash@flash_addr,w,c
 45449  01AB74  6E0A               	movwf	i2EraseFlash@flash_addr,c
 45450  01AB76  0E04               	movlw	4
 45451  01AB78  200B               	addwfc	i2EraseFlash@flash_addr+1,w,c
 45452  01AB7A  6E0B               	movwf	i2EraseFlash@flash_addr+1,c
 45453  01AB7C  0E00               	movlw	0
 45454  01AB7E  200C               	addwfc	i2EraseFlash@flash_addr+2,w,c
 45455  01AB80  6E0C               	movwf	i2EraseFlash@flash_addr+2,c
 45456  01AB82  0E00               	movlw	0
 45457  01AB84  200D               	addwfc	i2EraseFlash@flash_addr+3,w,c
 45458  01AB86  6E0D               	movwf	i2EraseFlash@flash_addr+3,c
 45459  01AB88                     i2l2132:
 45460  01AB88  5005               	movf	i2EraseFlash@endaddr,w,c
 45461  01AB8A  5C0A               	subwf	i2EraseFlash@flash_addr,w,c
 45462  01AB8C  5006               	movf	i2EraseFlash@endaddr+1,w,c
 45463  01AB8E  580B               	subwfb	i2EraseFlash@flash_addr+1,w,c
 45464  01AB90  5007               	movf	i2EraseFlash@endaddr+2,w,c
 45465  01AB92  580C               	subwfb	i2EraseFlash@flash_addr+2,w,c
 45466  01AB94  5008               	movf	i2EraseFlash@endaddr+3,w,c
 45467  01AB96  580D               	subwfb	i2EraseFlash@flash_addr+3,w,c
 45468  01AB98  B0D8               	btfsc	status,0,c
 45469  01AB9A  0012               	return	
 45470  01AB9C  D7D4               	goto	i2l2133
 45471  01AB9E                     __end_ofi2_EraseFlash:
 45472                           	opt stack 0
 45473                           pclatu	equ	0xFFB
 45474                           pclath	equ	0xFFA
 45475                           tblptru	equ	0xFF8
 45476                           tblptrh	equ	0xFF7
 45477                           tblptrl	equ	0xFF6
 45478                           tablat	equ	0xFF5
 45479                           prodh	equ	0xFF4
 45480                           prodl	equ	0xFF3
 45481                           intcon	equ	0xFF2
 45482                           intcon2	equ	0xFF1
 45483                           intcon3	equ	0xFF0
 45484                           indf0	equ	0xFEF
 45485                           postinc0	equ	0xFEE
 45486                           fsr0h	equ	0xFEA
 45487                           fsr0l	equ	0xFE9
 45488                           wreg	equ	0xFE8
 45489                           indf1	equ	0xFE7
 45490                           postinc1	equ	0xFE6
 45491                           postdec1	equ	0xFE5
 45492                           fsr1h	equ	0xFE2
 45493                           fsr1l	equ	0xFE1
 45494                           indf2	equ	0xFDF
 45495                           postinc2	equ	0xFDE
 45496                           postdec2	equ	0xFDD
 45497                           fsr2h	equ	0xFDA
 45498                           fsr2l	equ	0xFD9
 45499                           status	equ	0xFD8
 45500                           
 45501 ;; *************** function i2_Delay1KTCYx *****************
 45502 ;; Defined at:
 45503 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d1ktcyx.c"
 45504 ;; Parameters:    Size  Location     Type
 45505 ;;  unit            1    wreg     unsigned char 
 45506 ;; Auto vars:     Size  Location     Type
 45507 ;;  unit            1    0[COMRAM] unsigned char 
 45508 ;; Return value:  Size  Location     Type
 45509 ;;		None               void
 45510 ;; Registers used:
 45511 ;;		wreg
 45512 ;; Tracked objects:
 45513 ;;		On entry : 0/0
 45514 ;;		On exit  : 0/0
 45515 ;;		Unchanged: 0/0
 45516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45521 ;;Total ram usage:        1 bytes
 45522 ;; Hardware stack levels used:    1
 45523 ;; This function calls:
 45524 ;;		Nothing
 45525 ;; This function is called by:
 45526 ;;		_ISRLP
 45527 ;; This function uses a non-reentrant model
 45528 ;;
 45529                           
 45530                           	psect	text128
 45531  01BAB6                     __ptext128:
 45532                           	opt stack 0
 45533  01BAB6                     i2_Delay1KTCYx:
 45534                           	opt stack 21
 45535                           
 45536                           ;incstack = 0
 45537                           ;i2Delay1KTCYx@unit stored from wreg
 45538  01BAB6  6E01               	movwf	i2Delay1KTCYx@unit,c
 45539  01BAB8                     i2l2401:
 45540  01BAB8  0EFA               	movlw	250
 45541  01BABA                     i2u1867_47:
 45542  01BABA  F000               	nop	
 45543  01BABC  2EE8               	decfsz	wreg,f,c
 45544  01BABE  D7FD               	goto	i2u1867_47
 45545  01BAC0  2E01               	decfsz	i2Delay1KTCYx@unit,f,c
 45546  01BAC2  D7FA               	goto	i2l2401
 45547  01BAC4  0012               	return	
 45548  01BAC6                     __end_ofi2_Delay1KTCYx:
 45549                           	opt stack 0
 45550                           pclatu	equ	0xFFB
 45551                           pclath	equ	0xFFA
 45552                           tblptru	equ	0xFF8
 45553                           tblptrh	equ	0xFF7
 45554                           tblptrl	equ	0xFF6
 45555                           tablat	equ	0xFF5
 45556                           prodh	equ	0xFF4
 45557                           prodl	equ	0xFF3
 45558                           intcon	equ	0xFF2
 45559                           intcon2	equ	0xFF1
 45560                           intcon3	equ	0xFF0
 45561                           indf0	equ	0xFEF
 45562                           postinc0	equ	0xFEE
 45563                           fsr0h	equ	0xFEA
 45564                           fsr0l	equ	0xFE9
 45565                           wreg	equ	0xFE8
 45566                           indf1	equ	0xFE7
 45567                           postinc1	equ	0xFE6
 45568                           postdec1	equ	0xFE5
 45569                           fsr1h	equ	0xFE2
 45570                           fsr1l	equ	0xFE1
 45571                           indf2	equ	0xFDF
 45572                           postinc2	equ	0xFDE
 45573                           postdec2	equ	0xFDD
 45574                           fsr2h	equ	0xFDA
 45575                           fsr2l	equ	0xFD9
 45576                           status	equ	0xFD8
 45577                           
 45578 ;; *************** function _TickUpdate *****************
 45579 ;; Defined at:
 45580 ;;		line 391 in file "../tcpip/tick.c"
 45581 ;; Parameters:    Size  Location     Type
 45582 ;;		None
 45583 ;; Auto vars:     Size  Location     Type
 45584 ;;		None
 45585 ;; Return value:  Size  Location     Type
 45586 ;;		None               void
 45587 ;; Registers used:
 45588 ;;		wreg, status,2, status,0
 45589 ;; Tracked objects:
 45590 ;;		On entry : 0/0
 45591 ;;		On exit  : 0/0
 45592 ;;		Unchanged: 0/0
 45593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45598 ;;Total ram usage:        0 bytes
 45599 ;; Hardware stack levels used:    1
 45600 ;; This function calls:
 45601 ;;		Nothing
 45602 ;; This function is called by:
 45603 ;;		_ISRLP
 45604 ;; This function uses a non-reentrant model
 45605 ;;
 45606                           
 45607                           	psect	text129
 45608  01B948                     __ptext129:
 45609                           	opt stack 0
 45610  01B948                     _TickUpdate:
 45611                           	opt stack 21
 45612                           
 45613                           ;tick.c: 393: if(INTCONbits.TMR0IF)
 45614                           
 45615                           ;incstack = 0
 45616  01B948  A4F2               	btfss	intcon,2,c	;volatile
 45617  01B94A  0012               	return	
 45618                           
 45619                           ;tick.c: 394: {
 45620                           ;tick.c: 396: dwInternalTicks++;
 45621  01B94C  0E01               	movlw	1
 45622  01B94E  0100               	movlb	0	; () banked
 45623  01B950  27D1               	addwf	_dwInternalTicks& (0+255),f,b	;volatile
 45624  01B952  0E00               	movlw	0
 45625  01B954  0100               	movlb	0	; () banked
 45626  01B956  23D2               	addwfc	(_dwInternalTicks+1)& (0+255),f,b	;volatile
 45627  01B958  0100               	movlb	0	; () banked
 45628  01B95A  23D3               	addwfc	(_dwInternalTicks+2)& (0+255),f,b	;volatile
 45629  01B95C  0100               	movlb	0	; () banked
 45630  01B95E  23D4               	addwfc	(_dwInternalTicks+3)& (0+255),f,b	;volatile
 45631                           
 45632                           ; BSR set to: 0
 45633                           ;tick.c: 398: INTCONbits.TMR0IF = 0;
 45634  01B960  94F2               	bcf	intcon,2,c	;volatile
 45635  01B962  0012               	return	
 45636  01B964                     __end_of_TickUpdate:
 45637                           	opt stack 0
 45638                           pclatu	equ	0xFFB
 45639                           pclath	equ	0xFFA
 45640                           tblptru	equ	0xFF8
 45641                           tblptrh	equ	0xFF7
 45642                           tblptrl	equ	0xFF6
 45643                           tablat	equ	0xFF5
 45644                           prodh	equ	0xFF4
 45645                           prodl	equ	0xFF3
 45646                           intcon	equ	0xFF2
 45647                           intcon2	equ	0xFF1
 45648                           intcon3	equ	0xFF0
 45649                           indf0	equ	0xFEF
 45650                           postinc0	equ	0xFEE
 45651                           fsr0h	equ	0xFEA
 45652                           fsr0l	equ	0xFE9
 45653                           wreg	equ	0xFE8
 45654                           indf1	equ	0xFE7
 45655                           postinc1	equ	0xFE6
 45656                           postdec1	equ	0xFE5
 45657                           fsr1h	equ	0xFE2
 45658                           fsr1l	equ	0xFE1
 45659                           indf2	equ	0xFDF
 45660                           postinc2	equ	0xFDE
 45661                           postdec2	equ	0xFDD
 45662                           fsr2h	equ	0xFDA
 45663                           fsr2l	equ	0xFD9
 45664                           status	equ	0xFD8
 45665                           
 45666 ;; *************** function _ProcessIRInt *****************
 45667 ;; Defined at:
 45668 ;;		line 105 in file "IR.c"
 45669 ;; Parameters:    Size  Location     Type
 45670 ;;		None
 45671 ;; Auto vars:     Size  Location     Type
 45672 ;;  numTicks        4   16[COMRAM] unsigned long 
 45673 ;;  diff            4   12[COMRAM] unsigned long 
 45674 ;; Return value:  Size  Location     Type
 45675 ;;		None               void
 45676 ;; Registers used:
 45677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45678 ;; Tracked objects:
 45679 ;;		On entry : 0/0
 45680 ;;		On exit  : 0/0
 45681 ;;		Unchanged: 0/0
 45682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45684 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45686 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45687 ;;Total ram usage:       12 bytes
 45688 ;; Hardware stack levels used:    1
 45689 ;; Hardware stack levels required when called:    2
 45690 ;; This function calls:
 45691 ;;		_ReInitTimer
 45692 ;;		i2_TickGet
 45693 ;; This function is called by:
 45694 ;;		_ISRLP
 45695 ;; This function uses a non-reentrant model
 45696 ;;
 45697                           
 45698                           	psect	text130
 45699  01929A                     __ptext130:
 45700                           	opt stack 0
 45701  01929A                     _ProcessIRInt:
 45702                           	opt stack 19
 45703                           
 45704                           ;IR.c: 107: if (PORTBbits.RB4 != s_prevIRPort && s_irCodeByteIdx < sizeof(s_irCode))
 45705                           
 45706                           ;incstack = 0
 45707  01929A  A881               	btfss	3969,4,c	;volatile
 45708  01929C  D002               	goto	i2u1752_40
 45709  01929E  0E01               	movlw	1
 45710  0192A0  D001               	goto	i2u1752_46
 45711  0192A2                     i2u1752_40:
 45712  0192A2  0E00               	movlw	0
 45713  0192A4                     i2u1752_46:
 45714  0192A4  0101               	movlb	1	; () banked
 45715  0192A6  19FF               	xorwf	_s_prevIRPort& (0+255),w,b
 45716  0192A8  B4D8               	btfsc	status,2,c
 45717  0192AA  0012               	return	
 45718                           
 45719                           ; BSR set to: 1
 45720  0192AC  0E10               	movlw	16
 45721  0192AE  0101               	movlb	1	; () banked
 45722  0192B0  5DB7               	subwf	_s_irCodeByteIdx& (0+255),w,b	;volatile
 45723  0192B2  B0D8               	btfsc	status,0,c
 45724  0192B4  0012               	return	
 45725                           
 45726                           ; BSR set to: 1
 45727                           ;IR.c: 108: {
 45728                           ;IR.c: 109: ReInitTimer();
 45729  0192B6  EC22  F0DD         	call	_ReInitTimer	;wreg free
 45730                           
 45731                           ;IR.c: 110: s_prevIRPort = PORTBbits.RB4;
 45732  0192BA  0E00               	movlw	0
 45733  0192BC  B881               	btfsc	3969,4,c	;volatile
 45734  0192BE  0E01               	movlw	1
 45735  0192C0  0101               	movlb	1	; () banked
 45736  0192C2  6FFF               	movwf	_s_prevIRPort& (0+255),b
 45737                           
 45738                           ; BSR set to: 1
 45739                           ;IR.c: 111: uint32_t numTicks = TickGet();
 45740  0192C4  ECA7  F0DB         	call	i2_TickGet	;wreg free
 45741  0192C8  C001  F011         	movff	?i2_TickGet,ProcessIRInt@numTicks
 45742  0192CC  C002  F012         	movff	?i2_TickGet+1,ProcessIRInt@numTicks+1
 45743  0192D0  C003  F013         	movff	?i2_TickGet+2,ProcessIRInt@numTicks+2
 45744  0192D4  C004  F014         	movff	?i2_TickGet+3,ProcessIRInt@numTicks+3
 45745                           
 45746                           ;IR.c: 112: uint32_t diff = numTicks - s_numTicksPrev;
 45747  0192D8  0100               	movlb	0	; () banked
 45748  0192DA  C0DD  F009         	movff	_s_numTicksPrev,??_ProcessIRInt
 45749  0192DE  0100               	movlb	0	; () banked
 45750  0192E0  C0DE  F00A         	movff	_s_numTicksPrev+1,??_ProcessIRInt+1
 45751  0192E4  0100               	movlb	0	; () banked
 45752  0192E6  C0DF  F00B         	movff	_s_numTicksPrev+2,??_ProcessIRInt+2
 45753  0192EA  0100               	movlb	0	; () banked
 45754  0192EC  C0E0  F00C         	movff	_s_numTicksPrev+3,??_ProcessIRInt+3
 45755  0192F0  1E09               	comf	??_ProcessIRInt,f,c
 45756  0192F2  1E0A               	comf	??_ProcessIRInt+1,f,c
 45757  0192F4  1E0B               	comf	??_ProcessIRInt+2,f,c
 45758  0192F6  1E0C               	comf	??_ProcessIRInt+3,f,c
 45759  0192F8  2A09               	incf	??_ProcessIRInt,f,c
 45760  0192FA  0E00               	movlw	0
 45761  0192FC  220A               	addwfc	??_ProcessIRInt+1,f,c
 45762  0192FE  220B               	addwfc	??_ProcessIRInt+2,f,c
 45763  019300  220C               	addwfc	??_ProcessIRInt+3,f,c
 45764  019302  5011               	movf	ProcessIRInt@numTicks,w,c
 45765  019304  2409               	addwf	??_ProcessIRInt,w,c
 45766  019306  6E0D               	movwf	ProcessIRInt@diff,c
 45767  019308  5012               	movf	ProcessIRInt@numTicks+1,w,c
 45768  01930A  200A               	addwfc	??_ProcessIRInt+1,w,c
 45769  01930C  6E0E               	movwf	ProcessIRInt@diff+1,c
 45770  01930E  5013               	movf	ProcessIRInt@numTicks+2,w,c
 45771  019310  200B               	addwfc	??_ProcessIRInt+2,w,c
 45772  019312  6E0F               	movwf	ProcessIRInt@diff+2,c
 45773  019314  5014               	movf	ProcessIRInt@numTicks+3,w,c
 45774  019316  200C               	addwfc	??_ProcessIRInt+3,w,c
 45775  019318  6E10               	movwf	ProcessIRInt@diff+3,c
 45776                           
 45777                           ; BSR set to: 0
 45778                           ;IR.c: 125: if (s_irCodeByteIdx < sizeof(s_irCode))
 45779  01931A  0E10               	movlw	16
 45780  01931C  0101               	movlb	1	; () banked
 45781  01931E  5DB7               	subwf	_s_irCodeByteIdx& (0+255),w,b	;volatile
 45782  019320  B0D8               	btfsc	status,0,c
 45783  019322  D027               	goto	i2l15242
 45784                           
 45785                           ; BSR set to: 1
 45786                           ;IR.c: 126: {
 45787                           ;IR.c: 127: if (diff > 0x15)
 45788  019324  0E16               	movlw	22
 45789  019326  5C0D               	subwf	ProcessIRInt@diff,w,c
 45790  019328  0E00               	movlw	0
 45791  01932A  580E               	subwfb	ProcessIRInt@diff+1,w,c
 45792  01932C  0E00               	movlw	0
 45793  01932E  580F               	subwfb	ProcessIRInt@diff+2,w,c
 45794  019330  0E00               	movlw	0
 45795  019332  5810               	subwfb	ProcessIRInt@diff+3,w,c
 45796  019334  A0D8               	btfss	status,0,c
 45797  019336  D00E               	goto	i2l15234
 45798                           
 45799                           ; BSR set to: 1
 45800                           ;IR.c: 128: {
 45801                           ;IR.c: 129: s_irCode[s_irCodeByteIdx] |= s_irCodeBitIdx;
 45802  019338  0101               	movlb	1	; () banked
 45803  01933A  51B7               	movf	_s_irCodeByteIdx& (0+255),w,b	;volatile
 45804  01933C  0D01               	mullw	1
 45805  01933E  0102               	movlb	2	; () banked
 45806  019340  0EAD               	movlw	low _s_irCode	;volatile
 45807  019342  24F3               	addwf	prodl,w,c
 45808  019344  6ED9               	movwf	fsr2l,c
 45809  019346  0102               	movlb	2	; () banked
 45810  019348  0E02               	movlw	high _s_irCode	;volatile
 45811  01934A  20F4               	addwfc	prodh,w,c
 45812  01934C  6EDA               	movwf	fsr2h,c
 45813  01934E  0101               	movlb	1	; () banked
 45814  019350  51FE               	movf	_s_irCodeBitIdx& (0+255),w,b	;volatile
 45815  019352  12DF               	iorwf	indf2,f,c
 45816  019354                     i2l15234:
 45817                           
 45818                           ; BSR set to: 1
 45819                           ;IR.c: 130: }
 45820                           ;IR.c: 132: if (s_irCodeBitIdx == 0b10000000)
 45821  019354  0101               	movlb	1	; () banked
 45822  019356  51FE               	movf	_s_irCodeBitIdx& (0+255),w,b	;volatile
 45823  019358  0A80               	xorlw	128
 45824  01935A  A4D8               	btfss	status,2,c
 45825  01935C  D006               	goto	i2l15240
 45826                           
 45827                           ; BSR set to: 1
 45828                           ;IR.c: 133: {
 45829                           ;IR.c: 134: s_irCodeBitIdx = 0b00000001;
 45830  01935E  0E01               	movlw	1
 45831  019360  0101               	movlb	1	; () banked
 45832  019362  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 45833                           
 45834                           ; BSR set to: 1
 45835                           ;IR.c: 135: s_irCodeByteIdx ++;
 45836  019364  0101               	movlb	1	; () banked
 45837  019366  2BB7               	incf	_s_irCodeByteIdx& (0+255),f,b	;volatile
 45838                           
 45839                           ;IR.c: 136: }
 45840  019368  D003               	goto	i2l2006
 45841  01936A                     i2l15240:
 45842                           
 45843                           ; BSR set to: 1
 45844                           ;IR.c: 137: else
 45845                           ;IR.c: 138: {
 45846                           ;IR.c: 139: s_irCodeBitIdx <<= 1;
 45847  01936A  0101               	movlb	1	; () banked
 45848  01936C  90D8               	bcf	status,0,c
 45849  01936E  37FE               	rlcf	_s_irCodeBitIdx& (0+255),f,b
 45850  019370                     i2l2006:
 45851                           
 45852                           ; BSR set to: 1
 45853                           ;IR.c: 140: }
 45854                           ;IR.c: 142: LATDbits.LD1 ^= 1;
 45855  019370  728C               	btg	3980,1,c	;volatile
 45856  019372                     i2l15242:
 45857                           
 45858                           ; BSR set to: 1
 45859                           ;IR.c: 143: }
 45860                           ;IR.c: 144: s_numTicksPrev = numTicks;
 45861  019372  C011  F0DD         	movff	ProcessIRInt@numTicks,_s_numTicksPrev
 45862  019376  C012  F0DE         	movff	ProcessIRInt@numTicks+1,_s_numTicksPrev+1
 45863  01937A  C013  F0DF         	movff	ProcessIRInt@numTicks+2,_s_numTicksPrev+2
 45864  01937E  C014  F0E0         	movff	ProcessIRInt@numTicks+3,_s_numTicksPrev+3
 45865  019382  0012               	return	
 45866  019384                     __end_of_ProcessIRInt:
 45867                           	opt stack 0
 45868                           pclatu	equ	0xFFB
 45869                           pclath	equ	0xFFA
 45870                           tblptru	equ	0xFF8
 45871                           tblptrh	equ	0xFF7
 45872                           tblptrl	equ	0xFF6
 45873                           tablat	equ	0xFF5
 45874                           prodh	equ	0xFF4
 45875                           prodl	equ	0xFF3
 45876                           intcon	equ	0xFF2
 45877                           intcon2	equ	0xFF1
 45878                           intcon3	equ	0xFF0
 45879                           indf0	equ	0xFEF
 45880                           postinc0	equ	0xFEE
 45881                           fsr0h	equ	0xFEA
 45882                           fsr0l	equ	0xFE9
 45883                           wreg	equ	0xFE8
 45884                           indf1	equ	0xFE7
 45885                           postinc1	equ	0xFE6
 45886                           postdec1	equ	0xFE5
 45887                           fsr1h	equ	0xFE2
 45888                           fsr1l	equ	0xFE1
 45889                           indf2	equ	0xFDF
 45890                           postinc2	equ	0xFDE
 45891                           postdec2	equ	0xFDD
 45892                           fsr2h	equ	0xFDA
 45893                           fsr2l	equ	0xFD9
 45894                           status	equ	0xFD8
 45895                           
 45896 ;; *************** function _ReInitTimer *****************
 45897 ;; Defined at:
 45898 ;;		line 44 in file "IR.c"
 45899 ;; Parameters:    Size  Location     Type
 45900 ;;		None
 45901 ;; Auto vars:     Size  Location     Type
 45902 ;;		None
 45903 ;; Return value:  Size  Location     Type
 45904 ;;		None               void
 45905 ;; Registers used:
 45906 ;;		wreg, status,2
 45907 ;; Tracked objects:
 45908 ;;		On entry : 0/0
 45909 ;;		On exit  : 0/0
 45910 ;;		Unchanged: 0/0
 45911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 45912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45916 ;;Total ram usage:        0 bytes
 45917 ;; Hardware stack levels used:    1
 45918 ;; This function calls:
 45919 ;;		Nothing
 45920 ;; This function is called by:
 45921 ;;		_ProcessIRInt
 45922 ;; This function uses a non-reentrant model
 45923 ;;
 45924                           
 45925                           	psect	text131
 45926  01BA44                     __ptext131:
 45927                           	opt stack 0
 45928  01BA44                     _ReInitTimer:
 45929                           	opt stack 20
 45930                           
 45931                           ;IR.c: 46: T1CONbits.RD16 = 1;
 45932                           
 45933                           ; BSR set to: 1
 45934                           ;incstack = 0
 45935  01BA44  8ECD               	bsf	4045,7,c	;volatile
 45936                           
 45937                           ;IR.c: 47: T1CONbits.T1CKPS0 = 1;
 45938  01BA46  88CD               	bsf	4045,4,c	;volatile
 45939                           
 45940                           ;IR.c: 48: T1CONbits.T1CKPS1 = 1;
 45941  01BA48  8ACD               	bsf	4045,5,c	;volatile
 45942                           
 45943                           ;IR.c: 50: TMR1L = 0xC7;
 45944  01BA4A  0EC7               	movlw	199
 45945  01BA4C  6ECE               	movwf	4046,c	;volatile
 45946                           
 45947                           ;IR.c: 51: TMR1L = 0xE1;
 45948  01BA4E  0EE1               	movlw	225
 45949  01BA50  6ECE               	movwf	4046,c	;volatile
 45950                           
 45951                           ;IR.c: 52: T1CONbits.TMR1ON = 1;
 45952  01BA52  80CD               	bsf	4045,0,c	;volatile
 45953                           
 45954                           ;IR.c: 53: PIE1bits.TMR1IE = 1;
 45955  01BA54  809D               	bsf	3997,0,c	;volatile
 45956  01BA56  0012               	return	
 45957  01BA58                     __end_of_ReInitTimer:
 45958                           	opt stack 0
 45959                           pclatu	equ	0xFFB
 45960                           pclath	equ	0xFFA
 45961                           tblptru	equ	0xFF8
 45962                           tblptrh	equ	0xFF7
 45963                           tblptrl	equ	0xFF6
 45964                           tablat	equ	0xFF5
 45965                           prodh	equ	0xFF4
 45966                           prodl	equ	0xFF3
 45967                           intcon	equ	0xFF2
 45968                           intcon2	equ	0xFF1
 45969                           intcon3	equ	0xFF0
 45970                           indf0	equ	0xFEF
 45971                           postinc0	equ	0xFEE
 45972                           fsr0h	equ	0xFEA
 45973                           fsr0l	equ	0xFE9
 45974                           wreg	equ	0xFE8
 45975                           indf1	equ	0xFE7
 45976                           postinc1	equ	0xFE6
 45977                           postdec1	equ	0xFE5
 45978                           fsr1h	equ	0xFE2
 45979                           fsr1l	equ	0xFE1
 45980                           indf2	equ	0xFDF
 45981                           postinc2	equ	0xFDE
 45982                           postdec2	equ	0xFDD
 45983                           fsr2h	equ	0xFDA
 45984                           fsr2l	equ	0xFD9
 45985                           status	equ	0xFD8
 45986                           
 45987 ;; *************** function _IRTimerInt *****************
 45988 ;; Defined at:
 45989 ;;		line 91 in file "IR.c"
 45990 ;; Parameters:    Size  Location     Type
 45991 ;;		None
 45992 ;; Auto vars:     Size  Location     Type
 45993 ;;		None
 45994 ;; Return value:  Size  Location     Type
 45995 ;;		None               void
 45996 ;; Registers used:
 45997 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45998 ;; Tracked objects:
 45999 ;;		On entry : 0/0
 46000 ;;		On exit  : 0/0
 46001 ;;		Unchanged: 0/0
 46002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46007 ;;Total ram usage:        0 bytes
 46008 ;; Hardware stack levels used:    1
 46009 ;; Hardware stack levels required when called:    8
 46010 ;; This function calls:
 46011 ;;		_ProcessIRCode
 46012 ;;		i2_memset
 46013 ;; This function is called by:
 46014 ;;		_ISRLP
 46015 ;; This function uses a non-reentrant model
 46016 ;;
 46017                           
 46018                           	psect	text132
 46019  01B302                     __ptext132:
 46020                           	opt stack 0
 46021  01B302                     _IRTimerInt:
 46022                           	opt stack 13
 46023                           
 46024                           ;IR.c: 93: T1CONbits.TMR1ON = 0;
 46025                           
 46026                           ;incstack = 0
 46027  01B302  90CD               	bcf	4045,0,c	;volatile
 46028                           
 46029                           ;IR.c: 94: PIE1bits.TMR1IE = 0;
 46030  01B304  909D               	bcf	3997,0,c	;volatile
 46031                           
 46032                           ;IR.c: 95: ProcessIRCode();
 46033  01B306  EC5C  F0B9         	call	_ProcessIRCode	;wreg free
 46034                           
 46035                           ;IR.c: 96: if (!s_irLearn)
 46036  01B30A  0101               	movlb	1	; () banked
 46037  01B30C  67B8               	tstfsz	_s_irLearn& (0+255),b	;volatile
 46038  01B30E  D016               	goto	i2l15256
 46039                           
 46040                           ; BSR set to: 1
 46041                           ;IR.c: 97: {
 46042                           ;IR.c: 98: memset(&s_irCode, 0, sizeof(s_irCode));
 46043  01B310  0102               	movlb	2	; () banked
 46044  01B312  0E02               	movlw	high _s_irCode	;volatile
 46045  01B314  6E02               	movwf	i2memset@p1+1,c
 46046  01B316  0102               	movlb	2	; () banked
 46047  01B318  0EAD               	movlw	low _s_irCode	;volatile
 46048  01B31A  6E01               	movwf	i2memset@p1,c
 46049  01B31C  0E00               	movlw	0
 46050  01B31E  6E04               	movwf	i2memset@c+1,c
 46051  01B320  0E00               	movlw	0
 46052  01B322  6E03               	movwf	i2memset@c,c
 46053  01B324  0E00               	movlw	0
 46054  01B326  6E06               	movwf	i2memset@n+1,c
 46055  01B328  0E10               	movlw	16
 46056  01B32A  6E05               	movwf	i2memset@n,c
 46057  01B32C  EC41  F0DB         	call	i2_memset	;wreg free
 46058                           
 46059                           ;IR.c: 99: s_irCodeBitIdx = 0b00000001;
 46060  01B330  0E01               	movlw	1
 46061  01B332  0101               	movlb	1	; () banked
 46062  01B334  6FFE               	movwf	_s_irCodeBitIdx& (0+255),b	;volatile
 46063                           
 46064                           ; BSR set to: 1
 46065                           ;IR.c: 100: s_irCodeByteIdx = 0;
 46066  01B336  0E00               	movlw	0
 46067  01B338  0101               	movlb	1	; () banked
 46068  01B33A  6FB7               	movwf	_s_irCodeByteIdx& (0+255),b	;volatile
 46069  01B33C                     i2l15256:
 46070                           
 46071                           ; BSR set to: 1
 46072                           ;IR.c: 101: }
 46073                           ;IR.c: 102: PIR1bits.TMR1IF = 0;
 46074  01B33C  909E               	bcf	3998,0,c	;volatile
 46075                           
 46076                           ; BSR set to: 1
 46077  01B33E  0012               	return	
 46078  01B340                     __end_of_IRTimerInt:
 46079                           	opt stack 0
 46080                           pclatu	equ	0xFFB
 46081                           pclath	equ	0xFFA
 46082                           tblptru	equ	0xFF8
 46083                           tblptrh	equ	0xFF7
 46084                           tblptrl	equ	0xFF6
 46085                           tablat	equ	0xFF5
 46086                           prodh	equ	0xFF4
 46087                           prodl	equ	0xFF3
 46088                           intcon	equ	0xFF2
 46089                           intcon2	equ	0xFF1
 46090                           intcon3	equ	0xFF0
 46091                           indf0	equ	0xFEF
 46092                           postinc0	equ	0xFEE
 46093                           fsr0h	equ	0xFEA
 46094                           fsr0l	equ	0xFE9
 46095                           wreg	equ	0xFE8
 46096                           indf1	equ	0xFE7
 46097                           postinc1	equ	0xFE6
 46098                           postdec1	equ	0xFE5
 46099                           fsr1h	equ	0xFE2
 46100                           fsr1l	equ	0xFE1
 46101                           indf2	equ	0xFDF
 46102                           postinc2	equ	0xFDE
 46103                           postdec2	equ	0xFDD
 46104                           fsr2h	equ	0xFDA
 46105                           fsr2l	equ	0xFD9
 46106                           status	equ	0xFD8
 46107                           
 46108 ;; *************** function i2_memset *****************
 46109 ;; Defined at:
 46110 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memset.c"
 46111 ;; Parameters:    Size  Location     Type
 46112 ;;  p1              2    0[COMRAM] PTR void 
 46113 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 46114 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 46115 ;;  c               2    2[COMRAM] int 
 46116 ;;  n               2    4[COMRAM] unsigned int 
 46117 ;; Auto vars:     Size  Location     Type
 46118 ;;  memset          2    6[COMRAM] PTR unsigned char 
 46119 ;;		 -> s_numTicksDiff(256), s_irCode(16), TCPServer@cmdBytes(18), s_dacSettings.ChannelScaling(16), 
 46120 ;;		 -> s_dacSettings(20), SYNQueue(60), 
 46121 ;; Return value:  Size  Location     Type
 46122 ;;                  2    0[COMRAM] PTR void 
 46123 ;; Registers used:
 46124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 46125 ;; Tracked objects:
 46126 ;;		On entry : 0/0
 46127 ;;		On exit  : 0/0
 46128 ;;		Unchanged: 0/0
 46129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46130 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46133 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46134 ;;Total ram usage:        8 bytes
 46135 ;; Hardware stack levels used:    1
 46136 ;; This function calls:
 46137 ;;		Nothing
 46138 ;; This function is called by:
 46139 ;;		_IRTimerInt
 46140 ;; This function uses a non-reentrant model
 46141 ;;
 46142                           
 46143                           	psect	text133
 46144  01B682                     __ptext133:
 46145                           	opt stack 0
 46146  01B682                     i2_memset:
 46147                           	opt stack 20
 46148                           
 46149                           ; BSR set to: 1
 46150                           ;incstack = 0
 46151  01B682  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 46152  01B686  C001  F007         	movff	i2memset@p1,i2memset@p
 46153  01B68A  D008               	goto	i2l14852
 46154  01B68C                     i2l14848:
 46155  01B68C  C007  FFD9         	movff	i2memset@p,fsr2l
 46156  01B690  C008  FFDA         	movff	i2memset@p+1,fsr2h
 46157  01B694  C003  FFDF         	movff	i2memset@c,indf2
 46158  01B698  4A07               	infsnz	i2memset@p,f,c
 46159  01B69A  2A08               	incf	i2memset@p+1,f,c
 46160  01B69C                     i2l14852:
 46161  01B69C  0605               	decf	i2memset@n,f,c
 46162  01B69E  A0D8               	btfss	status,0,c
 46163  01B6A0  0606               	decf	i2memset@n+1,f,c
 46164  01B6A2  2805               	incf	i2memset@n& (0+255),w,c
 46165  01B6A4  B4D8               	btfsc	status,2,c
 46166  01B6A6  2806               	incf	(i2memset@n+1)& (0+255),w,c
 46167  01B6A8  B4D8               	btfsc	status,2,c
 46168                           
 46169                           ;	Return value of i2_memset is never used
 46170  01B6AA  0012               	return	
 46171  01B6AC  D7EF               	goto	i2l14848
 46172  01B6AE                     __end_ofi2_memset:
 46173                           	opt stack 0
 46174                           pclatu	equ	0xFFB
 46175                           pclath	equ	0xFFA
 46176                           tblptru	equ	0xFF8
 46177                           tblptrh	equ	0xFF7
 46178                           tblptrl	equ	0xFF6
 46179                           tablat	equ	0xFF5
 46180                           prodh	equ	0xFF4
 46181                           prodl	equ	0xFF3
 46182                           intcon	equ	0xFF2
 46183                           intcon2	equ	0xFF1
 46184                           intcon3	equ	0xFF0
 46185                           indf0	equ	0xFEF
 46186                           postinc0	equ	0xFEE
 46187                           fsr0h	equ	0xFEA
 46188                           fsr0l	equ	0xFE9
 46189                           wreg	equ	0xFE8
 46190                           indf1	equ	0xFE7
 46191                           postinc1	equ	0xFE6
 46192                           postdec1	equ	0xFE5
 46193                           fsr1h	equ	0xFE2
 46194                           fsr1l	equ	0xFE1
 46195                           indf2	equ	0xFDF
 46196                           postinc2	equ	0xFDE
 46197                           postdec2	equ	0xFDD
 46198                           fsr2h	equ	0xFDA
 46199                           fsr2l	equ	0xFD9
 46200                           status	equ	0xFD8
 46201                           
 46202 ;; *************** function _ProcessIRCode *****************
 46203 ;; Defined at:
 46204 ;;		line 56 in file "IR.c"
 46205 ;; Parameters:    Size  Location     Type
 46206 ;;		None
 46207 ;; Auto vars:     Size  Location     Type
 46208 ;;  numTick         4   51[BANK0 ] unsigned long 
 46209 ;;  delta           1   55[BANK0 ] unsigned char 
 46210 ;; Return value:  Size  Location     Type
 46211 ;;		None               void
 46212 ;; Registers used:
 46213 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46214 ;; Tracked objects:
 46215 ;;		On entry : 0/0
 46216 ;;		On exit  : 0/0
 46217 ;;		Unchanged: 0/0
 46218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46220 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46221 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46222 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46223 ;;Total ram usage:       17 bytes
 46224 ;; Hardware stack levels used:    1
 46225 ;; Hardware stack levels required when called:    7
 46226 ;; This function calls:
 46227 ;;		_ChangeMasterVolume
 46228 ;;		i2_PowerOff
 46229 ;;		i2_PowerOn
 46230 ;;		i2_TickGet
 46231 ;;		i2_memcmp
 46232 ;; This function is called by:
 46233 ;;		_IRTimerInt
 46234 ;; This function uses a non-reentrant model
 46235 ;;
 46236                           
 46237                           	psect	text134
 46238  0172B8                     __ptext134:
 46239                           	opt stack 0
 46240  0172B8                     _ProcessIRCode:
 46241                           	opt stack 13
 46242                           
 46243                           ;IR.c: 58: uint32_t numTick = TickGet();
 46244                           
 46245                           ;incstack = 0
 46246  0172B8  ECA7  F0DB         	call	i2_TickGet	;wreg free
 46247  0172BC  C001  F093         	movff	?i2_TickGet,ProcessIRCode@numTick
 46248  0172C0  C002  F094         	movff	?i2_TickGet+1,ProcessIRCode@numTick+1
 46249  0172C4  C003  F095         	movff	?i2_TickGet+2,ProcessIRCode@numTick+2
 46250  0172C8  C004  F096         	movff	?i2_TickGet+3,ProcessIRCode@numTick+3
 46251                           
 46252                           ;IR.c: 60: if (!memcmp(&IR_POWER_ON, &s_irCode, sizeof(IR_POWER_ON)))
 46253  0172CC  0EFF               	movlw	high _IR_POWER_ON
 46254  0172CE  6E02               	movwf	i2memcmp@s1+1,c
 46255  0172D0  0E2A               	movlw	low _IR_POWER_ON
 46256  0172D2  6E01               	movwf	i2memcmp@s1,c
 46257  0172D4  0102               	movlb	2	; () banked
 46258  0172D6  0E02               	movlw	high _s_irCode	;volatile
 46259  0172D8  6E04               	movwf	i2memcmp@s2+1,c
 46260  0172DA  0102               	movlb	2	; () banked
 46261  0172DC  0EAD               	movlw	low _s_irCode	;volatile
 46262  0172DE  6E03               	movwf	i2memcmp@s2,c
 46263  0172E0  0E00               	movlw	0
 46264  0172E2  6E06               	movwf	i2memcmp@n+1,c
 46265  0172E4  0E03               	movlw	3
 46266  0172E6  6E05               	movwf	i2memcmp@n,c
 46267  0172E8  ECCE  F0D1         	call	i2_memcmp	;wreg free
 46268  0172EC  5002               	movf	?i2_memcmp+1,w,c
 46269  0172EE  1001               	iorwf	?i2_memcmp,w,c
 46270  0172F0  A4D8               	btfss	status,2,c
 46271  0172F2  D003               	goto	i2l14722
 46272                           
 46273                           ;IR.c: 61: {
 46274                           ;IR.c: 62: PowerOn();
 46275  0172F4  EC69  F0D8         	call	i2_PowerOn	;wreg free
 46276  0172F8  0012               	return	
 46277  0172FA                     i2l14722:
 46278                           
 46279                           ;IR.c: 64: }
 46280                           ;IR.c: 66: if (!memcmp(&IR_POWER_OFF, &s_irCode, sizeof(IR_POWER_OFF)))
 46281  0172FA  0EFF               	movlw	high _IR_POWER_OFF
 46282  0172FC  6E02               	movwf	i2memcmp@s1+1,c
 46283  0172FE  0E27               	movlw	low _IR_POWER_OFF
 46284  017300  6E01               	movwf	i2memcmp@s1,c
 46285  017302  0102               	movlb	2	; () banked
 46286  017304  0E02               	movlw	high _s_irCode	;volatile
 46287  017306  6E04               	movwf	i2memcmp@s2+1,c
 46288  017308  0102               	movlb	2	; () banked
 46289  01730A  0EAD               	movlw	low _s_irCode	;volatile
 46290  01730C  6E03               	movwf	i2memcmp@s2,c
 46291  01730E  0E00               	movlw	0
 46292  017310  6E06               	movwf	i2memcmp@n+1,c
 46293  017312  0E03               	movlw	3
 46294  017314  6E05               	movwf	i2memcmp@n,c
 46295  017316  ECCE  F0D1         	call	i2_memcmp	;wreg free
 46296  01731A  5002               	movf	?i2_memcmp+1,w,c
 46297  01731C  1001               	iorwf	?i2_memcmp,w,c
 46298  01731E  A4D8               	btfss	status,2,c
 46299  017320  D003               	goto	i2l14728
 46300                           
 46301                           ;IR.c: 67: {
 46302                           ;IR.c: 68: PowerOff();
 46303  017322  EC82  F0DD         	call	i2_PowerOff	;wreg free
 46304  017326  0012               	return	
 46305  017328                     i2l14728:
 46306                           
 46307                           ;IR.c: 70: }
 46308                           ;IR.c: 72: uint8_t delta = 0;
 46309  017328  0E00               	movlw	0
 46310  01732A  0100               	movlb	0	; () banked
 46311  01732C  6F97               	movwf	ProcessIRCode@delta& (0+255),b
 46312                           
 46313                           ; BSR set to: 0
 46314                           ;IR.c: 73: if (!memcmp(&IR_VOLUME_UP, &s_irCode, sizeof(IR_VOLUME_UP)))
 46315  01732E  0EFF               	movlw	high _IR_VOLUME_UP
 46316  017330  6E02               	movwf	i2memcmp@s1+1,c
 46317  017332  0E18               	movlw	low _IR_VOLUME_UP
 46318  017334  6E01               	movwf	i2memcmp@s1,c
 46319  017336  0102               	movlb	2	; () banked
 46320  017338  0E02               	movlw	high _s_irCode	;volatile
 46321  01733A  6E04               	movwf	i2memcmp@s2+1,c
 46322  01733C  0102               	movlb	2	; () banked
 46323  01733E  0EAD               	movlw	low _s_irCode	;volatile
 46324  017340  6E03               	movwf	i2memcmp@s2,c
 46325  017342  0E00               	movlw	0
 46326  017344  6E06               	movwf	i2memcmp@n+1,c
 46327  017346  0E09               	movlw	9
 46328  017348  6E05               	movwf	i2memcmp@n,c
 46329  01734A  ECCE  F0D1         	call	i2_memcmp	;wreg free
 46330  01734E  5002               	movf	?i2_memcmp+1,w,c
 46331  017350  1001               	iorwf	?i2_memcmp,w,c
 46332  017352  A4D8               	btfss	status,2,c
 46333  017354  D004               	goto	i2l14734
 46334                           
 46335                           ;IR.c: 74: {
 46336                           ;IR.c: 75: delta = 1;
 46337  017356  0E01               	movlw	1
 46338  017358  0100               	movlb	0	; () banked
 46339  01735A  6F97               	movwf	ProcessIRCode@delta& (0+255),b
 46340                           
 46341                           ;IR.c: 76: }
 46342  01735C  D016               	goto	i2l14738
 46343  01735E                     i2l14734:
 46344                           
 46345                           ;IR.c: 77: else if (!memcmp(&IR_VOLUME_DOWN, &s_irCode, sizeof(IR_VOLUME_DOWN)))
 46346  01735E  0EFF               	movlw	high _IR_VOLUME_DOWN
 46347  017360  6E02               	movwf	i2memcmp@s1+1,c
 46348  017362  0E0F               	movlw	low _IR_VOLUME_DOWN
 46349  017364  6E01               	movwf	i2memcmp@s1,c
 46350  017366  0102               	movlb	2	; () banked
 46351  017368  0E02               	movlw	high _s_irCode	;volatile
 46352  01736A  6E04               	movwf	i2memcmp@s2+1,c
 46353  01736C  0102               	movlb	2	; () banked
 46354  01736E  0EAD               	movlw	low _s_irCode	;volatile
 46355  017370  6E03               	movwf	i2memcmp@s2,c
 46356  017372  0E00               	movlw	0
 46357  017374  6E06               	movwf	i2memcmp@n+1,c
 46358  017376  0E09               	movlw	9
 46359  017378  6E05               	movwf	i2memcmp@n,c
 46360  01737A  ECCE  F0D1         	call	i2_memcmp	;wreg free
 46361  01737E  5002               	movf	?i2_memcmp+1,w,c
 46362  017380  1001               	iorwf	?i2_memcmp,w,c
 46363  017382  A4D8               	btfss	status,2,c
 46364  017384  0012               	return	
 46365                           
 46366                           ;IR.c: 78: {
 46367                           ;IR.c: 79: delta = -1;
 46368  017386  0100               	movlb	0	; () banked
 46369  017388  6997               	setf	ProcessIRCode@delta& (0+255),b
 46370  01738A                     i2l14738:
 46371                           
 46372                           ; BSR set to: 0
 46373                           ;IR.c: 84: }
 46374                           ;IR.c: 86: if (numTick - s_lastIRCodeReceived < 10000) delta <<= 3;
 46375  01738A  0E10               	movlw	16
 46376  01738C  0100               	movlb	0	; () banked
 46377  01738E  6F87               	movwf	??_ProcessIRCode& (0+255),b
 46378  017390  0E27               	movlw	39
 46379  017392  6F88               	movwf	(??_ProcessIRCode+1)& (0+255),b
 46380  017394  0E00               	movlw	0
 46381  017396  6F89               	movwf	(??_ProcessIRCode+2)& (0+255),b
 46382  017398  0E00               	movlw	0
 46383  01739A  6F8A               	movwf	(??_ProcessIRCode+3)& (0+255),b
 46384  01739C  0100               	movlb	0	; () banked
 46385  01739E  C0D9  F08B         	movff	_s_lastIRCodeReceived,??_ProcessIRCode+4
 46386  0173A2  0100               	movlb	0	; () banked
 46387  0173A4  C0DA  F08C         	movff	_s_lastIRCodeReceived+1,??_ProcessIRCode+5
 46388  0173A8  0100               	movlb	0	; () banked
 46389  0173AA  C0DB  F08D         	movff	_s_lastIRCodeReceived+2,??_ProcessIRCode+6
 46390  0173AE  0100               	movlb	0	; () banked
 46391  0173B0  C0DC  F08E         	movff	_s_lastIRCodeReceived+3,??_ProcessIRCode+7
 46392  0173B4  0100               	movlb	0	; () banked
 46393  0173B6  1F8B               	comf	(??_ProcessIRCode+4)& (0+255),f,b
 46394  0173B8  1F8C               	comf	(??_ProcessIRCode+5)& (0+255),f,b
 46395  0173BA  1F8D               	comf	(??_ProcessIRCode+6)& (0+255),f,b
 46396  0173BC  1F8E               	comf	(??_ProcessIRCode+7)& (0+255),f,b
 46397  0173BE  2B8B               	incf	(??_ProcessIRCode+4)& (0+255),f,b
 46398  0173C0  0E00               	movlw	0
 46399  0173C2  238C               	addwfc	(??_ProcessIRCode+5)& (0+255),f,b
 46400  0173C4  238D               	addwfc	(??_ProcessIRCode+6)& (0+255),f,b
 46401  0173C6  238E               	addwfc	(??_ProcessIRCode+7)& (0+255),f,b
 46402  0173C8  0100               	movlb	0	; () banked
 46403  0173CA  5193               	movf	ProcessIRCode@numTick& (0+255),w,b
 46404  0173CC  0100               	movlb	0	; () banked
 46405  0173CE  258B               	addwf	(??_ProcessIRCode+4)& (0+255),w,b
 46406  0173D0  0100               	movlb	0	; () banked
 46407  0173D2  6F8F               	movwf	(??_ProcessIRCode+8)& (0+255),b
 46408  0173D4  0100               	movlb	0	; () banked
 46409  0173D6  5194               	movf	(ProcessIRCode@numTick+1)& (0+255),w,b
 46410  0173D8  0100               	movlb	0	; () banked
 46411  0173DA  218C               	addwfc	(??_ProcessIRCode+5)& (0+255),w,b
 46412  0173DC  0100               	movlb	0	; () banked
 46413  0173DE  6F90               	movwf	(??_ProcessIRCode+9)& (0+255),b
 46414  0173E0  0100               	movlb	0	; () banked
 46415  0173E2  5195               	movf	(ProcessIRCode@numTick+2)& (0+255),w,b
 46416  0173E4  0100               	movlb	0	; () banked
 46417  0173E6  218D               	addwfc	(??_ProcessIRCode+6)& (0+255),w,b
 46418  0173E8  0100               	movlb	0	; () banked
 46419  0173EA  6F91               	movwf	(??_ProcessIRCode+10)& (0+255),b
 46420  0173EC  0100               	movlb	0	; () banked
 46421  0173EE  5196               	movf	(ProcessIRCode@numTick+3)& (0+255),w,b
 46422  0173F0  0100               	movlb	0	; () banked
 46423  0173F2  218E               	addwfc	(??_ProcessIRCode+7)& (0+255),w,b
 46424  0173F4  0100               	movlb	0	; () banked
 46425  0173F6  6F92               	movwf	(??_ProcessIRCode+11)& (0+255),b
 46426  0173F8  0100               	movlb	0	; () banked
 46427  0173FA  5187               	movf	??_ProcessIRCode& (0+255),w,b
 46428  0173FC  0100               	movlb	0	; () banked
 46429  0173FE  5D8F               	subwf	(??_ProcessIRCode+8)& (0+255),w,b
 46430  017400  0100               	movlb	0	; () banked
 46431  017402  5188               	movf	(??_ProcessIRCode+1)& (0+255),w,b
 46432  017404  0100               	movlb	0	; () banked
 46433  017406  5990               	subwfb	(??_ProcessIRCode+9)& (0+255),w,b
 46434  017408  0100               	movlb	0	; () banked
 46435  01740A  5189               	movf	(??_ProcessIRCode+2)& (0+255),w,b
 46436  01740C  0100               	movlb	0	; () banked
 46437  01740E  5991               	subwfb	(??_ProcessIRCode+10)& (0+255),w,b
 46438  017410  0100               	movlb	0	; () banked
 46439  017412  518A               	movf	(??_ProcessIRCode+3)& (0+255),w,b
 46440  017414  0100               	movlb	0	; () banked
 46441  017416  5992               	subwfb	(??_ProcessIRCode+11)& (0+255),w,b
 46442  017418  B0D8               	btfsc	status,0,c
 46443  01741A  D007               	goto	i2l14742
 46444                           
 46445                           ; BSR set to: 0
 46446  01741C  0100               	movlb	0	; () banked
 46447  01741E  90D8               	bcf	status,0,c
 46448  017420  3797               	rlcf	ProcessIRCode@delta& (0+255),f,b
 46449  017422  90D8               	bcf	status,0,c
 46450  017424  3797               	rlcf	ProcessIRCode@delta& (0+255),f,b
 46451  017426  90D8               	bcf	status,0,c
 46452  017428  3797               	rlcf	ProcessIRCode@delta& (0+255),f,b
 46453  01742A                     i2l14742:
 46454                           
 46455                           ; BSR set to: 0
 46456                           ;IR.c: 87: ChangeMasterVolume(delta);
 46457  01742A  0100               	movlb	0	; () banked
 46458  01742C  5197               	movf	ProcessIRCode@delta& (0+255),w,b
 46459  01742E  ECA0  F0D9         	call	_ChangeMasterVolume
 46460                           
 46461                           ;IR.c: 88: s_lastIRCodeReceived = numTick;
 46462  017432  C093  F0D9         	movff	ProcessIRCode@numTick,_s_lastIRCodeReceived
 46463  017436  C094  F0DA         	movff	ProcessIRCode@numTick+1,_s_lastIRCodeReceived+1
 46464  01743A  C095  F0DB         	movff	ProcessIRCode@numTick+2,_s_lastIRCodeReceived+2
 46465  01743E  C096  F0DC         	movff	ProcessIRCode@numTick+3,_s_lastIRCodeReceived+3
 46466  017442  0012               	return	
 46467  017444                     __end_of_ProcessIRCode:
 46468                           	opt stack 0
 46469                           pclatu	equ	0xFFB
 46470                           pclath	equ	0xFFA
 46471                           tblptru	equ	0xFF8
 46472                           tblptrh	equ	0xFF7
 46473                           tblptrl	equ	0xFF6
 46474                           tablat	equ	0xFF5
 46475                           prodh	equ	0xFF4
 46476                           prodl	equ	0xFF3
 46477                           intcon	equ	0xFF2
 46478                           intcon2	equ	0xFF1
 46479                           intcon3	equ	0xFF0
 46480                           indf0	equ	0xFEF
 46481                           postinc0	equ	0xFEE
 46482                           fsr0h	equ	0xFEA
 46483                           fsr0l	equ	0xFE9
 46484                           wreg	equ	0xFE8
 46485                           indf1	equ	0xFE7
 46486                           postinc1	equ	0xFE6
 46487                           postdec1	equ	0xFE5
 46488                           fsr1h	equ	0xFE2
 46489                           fsr1l	equ	0xFE1
 46490                           indf2	equ	0xFDF
 46491                           postinc2	equ	0xFDE
 46492                           postdec2	equ	0xFDD
 46493                           fsr2h	equ	0xFDA
 46494                           fsr2l	equ	0xFD9
 46495                           status	equ	0xFD8
 46496                           
 46497 ;; *************** function i2_memcmp *****************
 46498 ;; Defined at:
 46499 ;;		line 3 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcmp.c"
 46500 ;; Parameters:    Size  Location     Type
 46501 ;;  s1              2    0[COMRAM] PTR const void 
 46502 ;;		 -> IR_VOLUME_DOWN(9), IR_VOLUME_UP(9), IR_POWER_OFF(3), IR_POWER_ON(3), 
 46503 ;;		 -> s_dacSettingsOriginal(20), s_dacSettingsTmp(20), 
 46504 ;;  s2              2    2[COMRAM] PTR const void 
 46505 ;;		 -> s_irCode(16), s_dacSettings(20), 
 46506 ;;  n               2    4[COMRAM] unsigned int 
 46507 ;; Auto vars:     Size  Location     Type
 46508 ;;		None
 46509 ;; Return value:  Size  Location     Type
 46510 ;;                  2    0[COMRAM] int 
 46511 ;; Registers used:
 46512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 46513 ;; Tracked objects:
 46514 ;;		On entry : 0/0
 46515 ;;		On exit  : 0/0
 46516 ;;		Unchanged: 0/0
 46517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46518 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46520 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46521 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46522 ;;Total ram usage:        9 bytes
 46523 ;; Hardware stack levels used:    1
 46524 ;; This function calls:
 46525 ;;		Nothing
 46526 ;; This function is called by:
 46527 ;;		_ProcessIRCode
 46528 ;;		i2_SaveToFlash
 46529 ;; This function uses a non-reentrant model
 46530 ;;
 46531                           
 46532                           	psect	text135
 46533  01A39C                     __ptext135:
 46534                           	opt stack 0
 46535  01A39C                     i2_memcmp:
 46536                           	opt stack 20
 46537                           
 46538                           ;incstack = 0
 46539  01A39C  D042               	goto	i2l13990
 46540  01A39E                     i2l13982:
 46541  01A39E  C003  FFD9         	movff	i2memcmp@s2,fsr2l
 46542  01A3A2  C004  FFDA         	movff	i2memcmp@s2+1,fsr2h
 46543  01A3A6  50DF               	movf	indf2,w,c
 46544  01A3A8  6E07               	movwf	??i2_memcmp& (0+255),c
 46545  01A3AA  C001  FFF6         	movff	i2memcmp@s1,tblptrl
 46546  01A3AE  C002  FFF7         	movff	i2memcmp@s1+1,tblptrh
 46547  01A3B2  0E00               	movlw	low (__mediumconst shr (0+16))
 46548  01A3B4  6EF8               	movwf	tblptru,c
 46549  01A3B6  0E0F               	movlw	(high __ramtop+-1)
 46550  01A3B8  64F7               	cpfsgt	tblptrh,c
 46551  01A3BA  D003               	bra	i2u1578_47
 46552  01A3BC  0008               	tblrd		*
 46553  01A3BE  50F5               	movf	tablat,w,c
 46554  01A3C0  D005               	bra	i2u1578_40
 46555  01A3C2                     i2u1578_47:
 46556  01A3C2  CFF6 FFE9          	movff	tblptrl,fsr0l
 46557  01A3C6  CFF7 FFEA          	movff	tblptrh,fsr0h
 46558  01A3CA  50EF               	movf	indf0,w,c
 46559  01A3CC                     i2u1578_40:
 46560  01A3CC  1807               	xorwf	??i2_memcmp,w,c
 46561  01A3CE  B4D8               	btfsc	status,2,c
 46562  01A3D0  D024               	goto	i2l13988
 46563  01A3D2  C003  FFD9         	movff	i2memcmp@s2,fsr2l
 46564  01A3D6  C004  FFDA         	movff	i2memcmp@s2+1,fsr2h
 46565  01A3DA  50DF               	movf	indf2,w,c
 46566  01A3DC  6E07               	movwf	??i2_memcmp& (0+255),c
 46567  01A3DE  6A08               	clrf	(??i2_memcmp+1)& (0+255),c
 46568  01A3E0  1E07               	comf	??i2_memcmp,f,c
 46569  01A3E2  1E08               	comf	??i2_memcmp+1,f,c
 46570  01A3E4  4A07               	infsnz	??i2_memcmp,f,c
 46571  01A3E6  2A08               	incf	??i2_memcmp+1,f,c
 46572  01A3E8  C001  FFF6         	movff	i2memcmp@s1,tblptrl
 46573  01A3EC  C002  FFF7         	movff	i2memcmp@s1+1,tblptrh
 46574  01A3F0  0E00               	movlw	low (__mediumconst shr (0+16))
 46575  01A3F2  6EF8               	movwf	tblptru,c
 46576  01A3F4  0E0F               	movlw	(high __ramtop+-1)
 46577  01A3F6  64F7               	cpfsgt	tblptrh,c
 46578  01A3F8  D003               	bra	i2u1580_47
 46579  01A3FA  0008               	tblrd		*
 46580  01A3FC  50F5               	movf	tablat,w,c
 46581  01A3FE  D005               	bra	i2u1580_40
 46582  01A400                     i2u1580_47:
 46583  01A400  CFF6 FFE9          	movff	tblptrl,fsr0l
 46584  01A404  CFF7 FFEA          	movff	tblptrh,fsr0h
 46585  01A408  50EF               	movf	indf0,w,c
 46586  01A40A                     i2u1580_40:
 46587  01A40A  6E09               	movwf	(??i2_memcmp+2)& (0+255),c
 46588  01A40C  5009               	movf	??i2_memcmp+2,w,c
 46589  01A40E  2407               	addwf	??i2_memcmp,w,c
 46590  01A410  6E01               	movwf	?i2_memcmp,c
 46591  01A412  0E00               	movlw	0
 46592  01A414  2008               	addwfc	??i2_memcmp+1,w,c
 46593  01A416  6E02               	movwf	?i2_memcmp+1,c
 46594  01A418  0012               	return	
 46595  01A41A                     i2l13988:
 46596  01A41A  4A01               	infsnz	i2memcmp@s1,f,c
 46597  01A41C  2A02               	incf	i2memcmp@s1+1,f,c
 46598  01A41E  4A03               	infsnz	i2memcmp@s2,f,c
 46599  01A420  2A04               	incf	i2memcmp@s2+1,f,c
 46600  01A422                     i2l13990:
 46601  01A422  0605               	decf	i2memcmp@n,f,c
 46602  01A424  A0D8               	btfss	status,0,c
 46603  01A426  0606               	decf	i2memcmp@n+1,f,c
 46604  01A428  2805               	incf	i2memcmp@n& (0+255),w,c
 46605  01A42A  B4D8               	btfsc	status,2,c
 46606  01A42C  2806               	incf	(i2memcmp@n+1)& (0+255),w,c
 46607  01A42E  A4D8               	btfss	status,2,c
 46608  01A430  D7B6               	goto	i2l13982
 46609  01A432  0E00               	movlw	0
 46610  01A434  6E02               	movwf	?i2_memcmp+1,c
 46611  01A436  0E00               	movlw	0
 46612  01A438  6E01               	movwf	?i2_memcmp,c
 46613  01A43A  0012               	return	
 46614  01A43C                     __end_ofi2_memcmp:
 46615                           	opt stack 0
 46616                           pclatu	equ	0xFFB
 46617                           pclath	equ	0xFFA
 46618                           tblptru	equ	0xFF8
 46619                           tblptrh	equ	0xFF7
 46620                           tblptrl	equ	0xFF6
 46621                           tablat	equ	0xFF5
 46622                           prodh	equ	0xFF4
 46623                           prodl	equ	0xFF3
 46624                           intcon	equ	0xFF2
 46625                           intcon2	equ	0xFF1
 46626                           intcon3	equ	0xFF0
 46627                           indf0	equ	0xFEF
 46628                           postinc0	equ	0xFEE
 46629                           fsr0h	equ	0xFEA
 46630                           fsr0l	equ	0xFE9
 46631                           wreg	equ	0xFE8
 46632                           indf1	equ	0xFE7
 46633                           postinc1	equ	0xFE6
 46634                           postdec1	equ	0xFE5
 46635                           fsr1h	equ	0xFE2
 46636                           fsr1l	equ	0xFE1
 46637                           indf2	equ	0xFDF
 46638                           postinc2	equ	0xFDE
 46639                           postdec2	equ	0xFDD
 46640                           fsr2h	equ	0xFDA
 46641                           fsr2l	equ	0xFD9
 46642                           status	equ	0xFD8
 46643                           
 46644 ;; *************** function i2_TickGet *****************
 46645 ;; Defined at:
 46646 ;;		line 254 in file "../tcpip/tick.c"
 46647 ;; Parameters:    Size  Location     Type
 46648 ;;		None
 46649 ;; Auto vars:     Size  Location     Type
 46650 ;;  TickGet         4    4[COMRAM] unsigned long 
 46651 ;; Return value:  Size  Location     Type
 46652 ;;                  4    0[COMRAM] unsigned long 
 46653 ;; Registers used:
 46654 ;;		fsr2l, fsr2h, cstack
 46655 ;; Tracked objects:
 46656 ;;		On entry : 0/0
 46657 ;;		On exit  : 0/0
 46658 ;;		Unchanged: 0/0
 46659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46664 ;;Total ram usage:        8 bytes
 46665 ;; Hardware stack levels used:    1
 46666 ;; Hardware stack levels required when called:    1
 46667 ;; This function calls:
 46668 ;;		i2_GetTickCopy
 46669 ;; This function is called by:
 46670 ;;		_ISRLP
 46671 ;;		_ProcessIRCode
 46672 ;;		_ProcessIRInt
 46673 ;; This function uses a non-reentrant model
 46674 ;;
 46675                           
 46676                           	psect	text136
 46677  01B74E                     __ptext136:
 46678                           	opt stack 0
 46679  01B74E                     i2_TickGet:
 46680                           	opt stack 20
 46681                           
 46682                           ;tick.c: 256: uint32_t dw;
 46683                           ;tick.c: 258: GetTickCopy();
 46684                           
 46685                           ;incstack = 0
 46686  01B74E  EC7F  F0DA         	call	i2_GetTickCopy	;wreg free
 46687                           
 46688                           ;tick.c: 259: ((uint8_t*)&dw)[0] = vTickReading[0];
 46689  01B752  C0C7  F005         	movff	_vTickReading,i2TickGet@dw	;volatile
 46690                           
 46691                           ;tick.c: 260: ((uint8_t*)&dw)[1] = vTickReading[1];
 46692  01B756  C0C8  F006         	movff	_vTickReading+1,i2TickGet@dw+1	;volatile
 46693                           
 46694                           ;tick.c: 261: ((uint8_t*)&dw)[2] = vTickReading[2];
 46695  01B75A  C0C9  F007         	movff	_vTickReading+2,i2TickGet@dw+2	;volatile
 46696                           
 46697                           ;tick.c: 262: ((uint8_t*)&dw)[3] = vTickReading[3];
 46698  01B75E  C0CA  F008         	movff	_vTickReading+3,i2TickGet@dw+3	;volatile
 46699                           
 46700                           ;tick.c: 263: return dw;
 46701  01B762  C005  F001         	movff	i2TickGet@dw,?i2_TickGet
 46702  01B766  C006  F002         	movff	i2TickGet@dw+1,?i2_TickGet+1
 46703  01B76A  C007  F003         	movff	i2TickGet@dw+2,?i2_TickGet+2
 46704  01B76E  C008  F004         	movff	i2TickGet@dw+3,?i2_TickGet+3
 46705  01B772  0012               	return	
 46706  01B774                     __end_ofi2_TickGet:
 46707                           	opt stack 0
 46708                           pclatu	equ	0xFFB
 46709                           pclath	equ	0xFFA
 46710                           tblptru	equ	0xFF8
 46711                           tblptrh	equ	0xFF7
 46712                           tblptrl	equ	0xFF6
 46713                           tablat	equ	0xFF5
 46714                           prodh	equ	0xFF4
 46715                           prodl	equ	0xFF3
 46716                           intcon	equ	0xFF2
 46717                           intcon2	equ	0xFF1
 46718                           intcon3	equ	0xFF0
 46719                           indf0	equ	0xFEF
 46720                           postinc0	equ	0xFEE
 46721                           fsr0h	equ	0xFEA
 46722                           fsr0l	equ	0xFE9
 46723                           wreg	equ	0xFE8
 46724                           indf1	equ	0xFE7
 46725                           postinc1	equ	0xFE6
 46726                           postdec1	equ	0xFE5
 46727                           fsr1h	equ	0xFE2
 46728                           fsr1l	equ	0xFE1
 46729                           indf2	equ	0xFDF
 46730                           postinc2	equ	0xFDE
 46731                           postdec2	equ	0xFDD
 46732                           fsr2h	equ	0xFDA
 46733                           fsr2l	equ	0xFD9
 46734                           status	equ	0xFD8
 46735                           
 46736 ;; *************** function i2_GetTickCopy *****************
 46737 ;; Defined at:
 46738 ;;		line 140 in file "../tcpip/tick.c"
 46739 ;; Parameters:    Size  Location     Type
 46740 ;;		None
 46741 ;; Auto vars:     Size  Location     Type
 46742 ;;		None
 46743 ;; Return value:  Size  Location     Type
 46744 ;;		None               void
 46745 ;; Registers used:
 46746 ;;		fsr2l, fsr2h
 46747 ;; Tracked objects:
 46748 ;;		On entry : 0/0
 46749 ;;		On exit  : 0/0
 46750 ;;		Unchanged: 0/0
 46751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46756 ;;Total ram usage:        0 bytes
 46757 ;; Hardware stack levels used:    1
 46758 ;; This function calls:
 46759 ;;		Nothing
 46760 ;; This function is called by:
 46761 ;;		i2_TickGet
 46762 ;; This function uses a non-reentrant model
 46763 ;;
 46764                           
 46765                           	psect	text137
 46766  01B4FE                     __ptext137:
 46767                           	opt stack 0
 46768  01B4FE                     i2_GetTickCopy:
 46769                           	opt stack 20
 46770  01B4FE                     i2l1506:
 46771                           
 46772                           ;tick.c: 146: {
 46773                           ;tick.c: 147: INTCONbits.TMR0IE = 1;
 46774  01B4FE  8AF2               	bsf	intcon,5,c	;volatile
 46775                           
 46776                           ;tick.c: 148: __nop();
 46777  01B500  F000               	nop	
 46778                           
 46779                           ;tick.c: 149: INTCONbits.TMR0IE = 0;
 46780  01B502  9AF2               	bcf	intcon,5,c	;volatile
 46781                           
 46782                           ;tick.c: 150: vTickReading[0] = TMR0L;
 46783  01B504  CFD6 F0C7          	movff	4054,_vTickReading	;volatile
 46784                           
 46785                           ;tick.c: 151: vTickReading[1] = TMR0H;
 46786  01B508  CFD7 F0C8          	movff	4055,_vTickReading+1	;volatile
 46787                           
 46788                           ;tick.c: 152: *((uint32_t*)&vTickReading[2]) = dwInternalTicks;
 46789  01B50C  0100               	movlb	0	; () banked
 46790  01B50E  EE20  F0C9         	lfsr	2,_vTickReading+2	;volatile
 46791  01B512  0100               	movlb	0	; () banked
 46792  01B514  C0D1  FFDE         	movff	_dwInternalTicks,postinc2	;volatile
 46793  01B518  0100               	movlb	0	; () banked
 46794  01B51A  C0D2  FFDE         	movff	_dwInternalTicks+1,postinc2	;volatile
 46795  01B51E  0100               	movlb	0	; () banked
 46796  01B520  C0D3  FFDE         	movff	_dwInternalTicks+2,postinc2	;volatile
 46797  01B524  0100               	movlb	0	; () banked
 46798  01B526  C0D4  FFDE         	movff	_dwInternalTicks+3,postinc2	;volatile
 46799                           
 46800                           ; BSR set to: 0
 46801                           ;tick.c: 153: } while(INTCONbits.TMR0IF);
 46802  01B52A  B4F2               	btfsc	intcon,2,c	;volatile
 46803  01B52C  D7E8               	goto	i2l1506
 46804                           
 46805                           ; BSR set to: 0
 46806                           ;tick.c: 154: INTCONbits.TMR0IE = 1;
 46807  01B52E  8AF2               	bsf	intcon,5,c	;volatile
 46808                           
 46809                           ; BSR set to: 0
 46810  01B530  0012               	return	
 46811  01B532                     __end_ofi2_GetTickCopy:
 46812                           	opt stack 0
 46813                           pclatu	equ	0xFFB
 46814                           pclath	equ	0xFFA
 46815                           tblptru	equ	0xFF8
 46816                           tblptrh	equ	0xFF7
 46817                           tblptrl	equ	0xFF6
 46818                           tablat	equ	0xFF5
 46819                           prodh	equ	0xFF4
 46820                           prodl	equ	0xFF3
 46821                           intcon	equ	0xFF2
 46822                           intcon2	equ	0xFF1
 46823                           intcon3	equ	0xFF0
 46824                           indf0	equ	0xFEF
 46825                           postinc0	equ	0xFEE
 46826                           fsr0h	equ	0xFEA
 46827                           fsr0l	equ	0xFE9
 46828                           wreg	equ	0xFE8
 46829                           indf1	equ	0xFE7
 46830                           postinc1	equ	0xFE6
 46831                           postdec1	equ	0xFE5
 46832                           fsr1h	equ	0xFE2
 46833                           fsr1l	equ	0xFE1
 46834                           indf2	equ	0xFDF
 46835                           postinc2	equ	0xFDE
 46836                           postdec2	equ	0xFDD
 46837                           fsr2h	equ	0xFDA
 46838                           fsr2l	equ	0xFD9
 46839                           status	equ	0xFD8
 46840                           
 46841 ;; *************** function i2_PowerOn *****************
 46842 ;; Defined at:
 46843 ;;		line 283 in file "Device.c"
 46844 ;; Parameters:    Size  Location     Type
 46845 ;;		None
 46846 ;; Auto vars:     Size  Location     Type
 46847 ;;		None
 46848 ;; Return value:  Size  Location     Type
 46849 ;;		None               void
 46850 ;; Registers used:
 46851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46852 ;; Tracked objects:
 46853 ;;		On entry : 0/0
 46854 ;;		On exit  : 0/0
 46855 ;;		Unchanged: 0/0
 46856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46861 ;;Total ram usage:        0 bytes
 46862 ;; Hardware stack levels used:    1
 46863 ;; Hardware stack levels required when called:    6
 46864 ;; This function calls:
 46865 ;;		i2_Delay10KTCYx
 46866 ;;		i2_UpdateMasterVolume
 46867 ;;		i2_UpdateSampleRate
 46868 ;; This function is called by:
 46869 ;;		_ISRLP
 46870 ;;		_ProcessIRCode
 46871 ;; This function uses a non-reentrant model
 46872 ;;
 46873                           
 46874                           	psect	text138
 46875  01B0D2                     __ptext138:
 46876                           	opt stack 0
 46877  01B0D2                     i2_PowerOn:
 46878                           	opt stack 15
 46879                           
 46880                           ;Device.c: 285: LATDbits.LD0 = 1;
 46881                           
 46882                           ; BSR set to: 0
 46883                           ;incstack = 0
 46884  01B0D2  808C               	bsf	3980,0,c	;volatile
 46885                           
 46886                           ;Device.c: 287: Delay10KTCYx(0);
 46887  01B0D4  0E00               	movlw	0
 46888  01B0D6  ECED  F0DC         	call	i2_Delay10KTCYx
 46889                           
 46890                           ;Device.c: 288: Delay10KTCYx(0);
 46891  01B0DA  0E00               	movlw	0
 46892  01B0DC  ECED  F0DC         	call	i2_Delay10KTCYx
 46893                           
 46894                           ;Device.c: 289: Delay10KTCYx(0);
 46895  01B0E0  0E00               	movlw	0
 46896  01B0E2  ECED  F0DC         	call	i2_Delay10KTCYx
 46897                           
 46898                           ;Device.c: 290: Delay10KTCYx(0);
 46899  01B0E6  0E00               	movlw	0
 46900  01B0E8  ECED  F0DC         	call	i2_Delay10KTCYx
 46901                           
 46902                           ;Device.c: 291: Delay10KTCYx(0);
 46903  01B0EC  0E00               	movlw	0
 46904  01B0EE  ECED  F0DC         	call	i2_Delay10KTCYx
 46905                           
 46906                           ;Device.c: 292: Delay10KTCYx(0);
 46907  01B0F2  0E00               	movlw	0
 46908  01B0F4  ECED  F0DC         	call	i2_Delay10KTCYx
 46909                           
 46910                           ;Device.c: 293: Delay10KTCYx(0);
 46911  01B0F8  0E00               	movlw	0
 46912  01B0FA  ECED  F0DC         	call	i2_Delay10KTCYx
 46913                           
 46914                           ;Device.c: 294: Delay10KTCYx(0);
 46915  01B0FE  0E00               	movlw	0
 46916  01B100  ECED  F0DC         	call	i2_Delay10KTCYx
 46917                           
 46918                           ;Device.c: 295: UpdateMasterVolume();
 46919  01B104  EC1E  F0D2         	call	i2_UpdateMasterVolume	;wreg free
 46920                           
 46921                           ;Device.c: 296: UpdateSampleRate();
 46922  01B108  EC1B  F0D4         	call	i2_UpdateSampleRate	;wreg free
 46923                           
 46924                           ;Device.c: 297: LATDbits.LD2 = 1;
 46925  01B10C  848C               	bsf	3980,2,c	;volatile
 46926                           
 46927                           ;Device.c: 298: Delay10KTCYx(10);
 46928  01B10E  0E0A               	movlw	10
 46929  01B110  ECED  F0DC         	call	i2_Delay10KTCYx
 46930                           
 46931                           ;Device.c: 299: LATBbits.LATB5 = 0;
 46932  01B114  9A8A               	bcf	3978,5,c	;volatile
 46933                           
 46934                           ;Device.c: 300: LATDbits.LD2 = 0;
 46935  01B116  948C               	bcf	3980,2,c	;volatile
 46936                           
 46937                           ;Device.c: 301: LATDbits.LD2 = 1;
 46938  01B118  848C               	bsf	3980,2,c	;volatile
 46939  01B11A  0012               	return	
 46940  01B11C                     __end_ofi2_PowerOn:
 46941                           	opt stack 0
 46942                           pclatu	equ	0xFFB
 46943                           pclath	equ	0xFFA
 46944                           tblptru	equ	0xFF8
 46945                           tblptrh	equ	0xFF7
 46946                           tblptrl	equ	0xFF6
 46947                           tablat	equ	0xFF5
 46948                           prodh	equ	0xFF4
 46949                           prodl	equ	0xFF3
 46950                           intcon	equ	0xFF2
 46951                           intcon2	equ	0xFF1
 46952                           intcon3	equ	0xFF0
 46953                           indf0	equ	0xFEF
 46954                           postinc0	equ	0xFEE
 46955                           fsr0h	equ	0xFEA
 46956                           fsr0l	equ	0xFE9
 46957                           wreg	equ	0xFE8
 46958                           indf1	equ	0xFE7
 46959                           postinc1	equ	0xFE6
 46960                           postdec1	equ	0xFE5
 46961                           fsr1h	equ	0xFE2
 46962                           fsr1l	equ	0xFE1
 46963                           indf2	equ	0xFDF
 46964                           postinc2	equ	0xFDE
 46965                           postdec2	equ	0xFDD
 46966                           fsr2h	equ	0xFDA
 46967                           fsr2l	equ	0xFD9
 46968                           status	equ	0xFD8
 46969                           
 46970 ;; *************** function i2_UpdateSampleRate *****************
 46971 ;; Defined at:
 46972 ;;		line 234 in file "Device.c"
 46973 ;; Parameters:    Size  Location     Type
 46974 ;;		None
 46975 ;; Auto vars:     Size  Location     Type
 46976 ;;  UpdateSample    2    5[COMRAM] PTR const unsigned char 
 46977 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 46978 ;;		 -> STR_9(17), STR_8(17), 
 46979 ;; Return value:  Size  Location     Type
 46980 ;;		None               void
 46981 ;; Registers used:
 46982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 46983 ;; Tracked objects:
 46984 ;;		On entry : 0/0
 46985 ;;		On exit  : 0/0
 46986 ;;		Unchanged: 0/0
 46987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 46988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46991 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 46992 ;;Total ram usage:        2 bytes
 46993 ;; Hardware stack levels used:    1
 46994 ;; Hardware stack levels required when called:    4
 46995 ;; This function calls:
 46996 ;;		i2_RefreshLine2Ex
 46997 ;; This function is called by:
 46998 ;;		_ISRLP
 46999 ;;		i2_PowerOn
 47000 ;; This function uses a non-reentrant model
 47001 ;;
 47002                           
 47003                           	psect	text139
 47004  01A836                     __ptext139:
 47005                           	opt stack 0
 47006  01A836                     i2_UpdateSampleRate:
 47007                           	opt stack 17
 47008                           
 47009                           ;Device.c: 246: const char * srStr;
 47010                           ;Device.c: 247: switch(s_dacSettings.SampleRate)
 47011                           
 47012                           ;incstack = 0
 47013  01A836  D02A               	goto	i2l12814
 47014  01A838                     i2l12764:
 47015  01A838  0EFF               	movlw	high STR_8
 47016  01A83A  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 47017  01A83C  0E60               	movlw	low STR_8
 47018  01A83E  6E06               	movwf	i2UpdateSampleRate@srStr,c
 47019                           
 47020                           ;Device.c: 250: LATEbits.LE2 = 0;
 47021  01A840  948D               	bcf	3981,2,c	;volatile
 47022  01A842  D005               	goto	L44
 47023  01A844                     i2l12772:
 47024  01A844  0EFF               	movlw	high STR_9
 47025  01A846  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 47026  01A848  0E4F               	movlw	low STR_9
 47027  01A84A  6E06               	movwf	i2UpdateSampleRate@srStr,c
 47028                           
 47029                           ;Device.c: 255: LATEbits.LE2 = 1;
 47030  01A84C  848D               	bsf	3981,2,c	;volatile
 47031  01A84E                     L44:
 47032                           
 47033                           ;Device.c: 256: LATEbits.LE1 = 0;
 47034  01A84E  928D               	bcf	3981,1,c	;volatile
 47035  01A850  D006               	goto	L45
 47036  01A852                     i2l12780:
 47037  01A852  0EFF               	movlw	high STR_10
 47038  01A854  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 47039  01A856  0E71               	movlw	low STR_10
 47040  01A858  6E06               	movwf	i2UpdateSampleRate@srStr,c
 47041                           
 47042                           ;Device.c: 260: LATEbits.LE2 = 0;
 47043  01A85A  948D               	bcf	3981,2,c	;volatile
 47044  01A85C  D007               	goto	L46
 47045  01A85E                     L45:
 47046                           
 47047                           ;Device.c: 262: LATEbits.LE0 = 0;
 47048  01A85E  908D               	bcf	3981,0,c	;volatile
 47049                           
 47050                           ;Device.c: 263: break;
 47051  01A860  D027               	goto	i2l12816
 47052  01A862                     i2l12788:
 47053  01A862  0EFF               	movlw	high STR_11
 47054  01A864  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 47055  01A866  0E3E               	movlw	low STR_11
 47056  01A868  6E06               	movwf	i2UpdateSampleRate@srStr,c
 47057                           
 47058                           ;Device.c: 265: LATEbits.LE2 = 1;
 47059  01A86A  848D               	bsf	3981,2,c	;volatile
 47060  01A86C                     L46:
 47061                           
 47062                           ;Device.c: 266: LATEbits.LE1 = 1;
 47063  01A86C  828D               	bsf	3981,1,c	;volatile
 47064  01A86E  D7F7               	goto	L45
 47065  01A870                     i2l12796:
 47066  01A870  0EFF               	movlw	high STR_12
 47067  01A872  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 47068  01A874  0E2D               	movlw	low STR_12
 47069  01A876  6E06               	movwf	i2UpdateSampleRate@srStr,c
 47070                           
 47071                           ;Device.c: 270: LATEbits.LE2 = 1;
 47072  01A878  848D               	bsf	3981,2,c	;volatile
 47073  01A87A  D005               	goto	L47
 47074  01A87C                     i2l12804:
 47075  01A87C  0EFF               	movlw	high STR_13
 47076  01A87E  6E07               	movwf	i2UpdateSampleRate@srStr+1,c
 47077  01A880  0E82               	movlw	low STR_13
 47078  01A882  6E06               	movwf	i2UpdateSampleRate@srStr,c
 47079                           
 47080                           ;Device.c: 275: LATEbits.LE2 = 0;
 47081  01A884  948D               	bcf	3981,2,c	;volatile
 47082  01A886                     L47:
 47083                           
 47084                           ;Device.c: 276: LATEbits.LE1 = 0;
 47085  01A886  928D               	bcf	3981,1,c	;volatile
 47086                           
 47087                           ;Device.c: 277: LATEbits.LE0 = 1;
 47088  01A888  808D               	bsf	3981,0,c	;volatile
 47089                           
 47090                           ;Device.c: 278: break;
 47091  01A88A  D012               	goto	i2l12816
 47092  01A88C                     i2l12814:
 47093  01A88C  0102               	movlb	2	; () banked
 47094  01A88E  51D4               	movf	(_s_dacSettings+1)& (0+255),w,b
 47095                           
 47096                           ; Switch size 1, requested type "space"
 47097                           ; Number of cases is 5, Range of values is 0 to 5
 47098                           ; switch strategies available:
 47099                           ; Name         Instructions Cycles
 47100                           ; simple_byte           16     9 (average)
 47101                           ;	Chosen strategy is simple_byte
 47102  01A890  0A00               	xorlw	0	; case 0
 47103  01A892  B4D8               	btfsc	status,2,c
 47104  01A894  D7D1               	goto	i2l12764
 47105  01A896  0A01               	xorlw	1	; case 1
 47106  01A898  B4D8               	btfsc	status,2,c
 47107  01A89A  D7D4               	goto	i2l12772
 47108  01A89C  0A03               	xorlw	3	; case 2
 47109  01A89E  B4D8               	btfsc	status,2,c
 47110  01A8A0  D7D8               	goto	i2l12780
 47111  01A8A2  0A01               	xorlw	1	; case 3
 47112  01A8A4  B4D8               	btfsc	status,2,c
 47113  01A8A6  D7DD               	goto	i2l12788
 47114  01A8A8  0A06               	xorlw	6	; case 5
 47115  01A8AA  B4D8               	btfsc	status,2,c
 47116  01A8AC  D7E1               	goto	i2l12796
 47117  01A8AE  D7E6               	goto	i2l12804
 47118  01A8B0                     i2l12816:
 47119                           
 47120                           ;Device.c: 280: RefreshLine2Ex(srStr);
 47121  01A8B0  C007  F005         	movff	i2UpdateSampleRate@srStr+1,i2RefreshLine2Ex@line+1
 47122  01A8B4  C006  F004         	movff	i2UpdateSampleRate@srStr,i2RefreshLine2Ex@line
 47123  01A8B8  EC2C  F0DD         	call	i2_RefreshLine2Ex	;wreg free
 47124  01A8BC  0012               	return	
 47125  01A8BE                     __end_ofi2_UpdateSampleRate:
 47126                           	opt stack 0
 47127                           pclatu	equ	0xFFB
 47128                           pclath	equ	0xFFA
 47129                           tblptru	equ	0xFF8
 47130                           tblptrh	equ	0xFF7
 47131                           tblptrl	equ	0xFF6
 47132                           tablat	equ	0xFF5
 47133                           prodh	equ	0xFF4
 47134                           prodl	equ	0xFF3
 47135                           intcon	equ	0xFF2
 47136                           intcon2	equ	0xFF1
 47137                           intcon3	equ	0xFF0
 47138                           indf0	equ	0xFEF
 47139                           postinc0	equ	0xFEE
 47140                           fsr0h	equ	0xFEA
 47141                           fsr0l	equ	0xFE9
 47142                           wreg	equ	0xFE8
 47143                           indf1	equ	0xFE7
 47144                           postinc1	equ	0xFE6
 47145                           postdec1	equ	0xFE5
 47146                           fsr1h	equ	0xFE2
 47147                           fsr1l	equ	0xFE1
 47148                           indf2	equ	0xFDF
 47149                           postinc2	equ	0xFDE
 47150                           postdec2	equ	0xFDD
 47151                           fsr2h	equ	0xFDA
 47152                           fsr2l	equ	0xFD9
 47153                           status	equ	0xFD8
 47154                           
 47155 ;; *************** function i2_RefreshLine2Ex *****************
 47156 ;; Defined at:
 47157 ;;		line 25 in file "LCD.c"
 47158 ;; Parameters:    Size  Location     Type
 47159 ;;  line            2    3[COMRAM] PTR const unsigned char 
 47160 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 47161 ;;		 -> STR_9(17), STR_8(17), dispbuf2(17), 
 47162 ;; Auto vars:     Size  Location     Type
 47163 ;;		None
 47164 ;; Return value:  Size  Location     Type
 47165 ;;		None               void
 47166 ;; Registers used:
 47167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 47168 ;; Tracked objects:
 47169 ;;		On entry : 0/0
 47170 ;;		On exit  : 0/0
 47171 ;;		Unchanged: 0/0
 47172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47177 ;;Total ram usage:        2 bytes
 47178 ;; Hardware stack levels used:    1
 47179 ;; Hardware stack levels required when called:    3
 47180 ;; This function calls:
 47181 ;;		i2_PutsSLCD
 47182 ;;		i2_SLCDSetDDRamAddr
 47183 ;; This function is called by:
 47184 ;;		i2_UpdateSampleRate
 47185 ;; This function uses a non-reentrant model
 47186 ;;
 47187                           
 47188                           	psect	text140
 47189  01BA58                     __ptext140:
 47190                           	opt stack 0
 47191  01BA58                     i2_RefreshLine2Ex:
 47192                           	opt stack 17
 47193                           
 47194                           ;LCD.c: 27: SLCDSetDDRamAddr(0x40);
 47195                           
 47196                           ;incstack = 0
 47197  01BA58  0E40               	movlw	64
 47198  01BA5A  EC03  F0DD         	call	i2_SLCDSetDDRamAddr
 47199                           
 47200                           ;LCD.c: 28: PutsSLCD(line);
 47201  01BA5E  C005  F003         	movff	i2RefreshLine2Ex@line+1,i2PutsSLCD@buffer+1
 47202  01BA62  C004  F002         	movff	i2RefreshLine2Ex@line,i2PutsSLCD@buffer
 47203  01BA66  EC05  F0D7         	call	i2_PutsSLCD	;wreg free
 47204  01BA6A  0012               	return	
 47205  01BA6C                     __end_ofi2_RefreshLine2Ex:
 47206                           	opt stack 0
 47207                           pclatu	equ	0xFFB
 47208                           pclath	equ	0xFFA
 47209                           tblptru	equ	0xFF8
 47210                           tblptrh	equ	0xFF7
 47211                           tblptrl	equ	0xFF6
 47212                           tablat	equ	0xFF5
 47213                           prodh	equ	0xFF4
 47214                           prodl	equ	0xFF3
 47215                           intcon	equ	0xFF2
 47216                           intcon2	equ	0xFF1
 47217                           intcon3	equ	0xFF0
 47218                           indf0	equ	0xFEF
 47219                           postinc0	equ	0xFEE
 47220                           fsr0h	equ	0xFEA
 47221                           fsr0l	equ	0xFE9
 47222                           wreg	equ	0xFE8
 47223                           indf1	equ	0xFE7
 47224                           postinc1	equ	0xFE6
 47225                           postdec1	equ	0xFE5
 47226                           fsr1h	equ	0xFE2
 47227                           fsr1l	equ	0xFE1
 47228                           indf2	equ	0xFDF
 47229                           postinc2	equ	0xFDE
 47230                           postdec2	equ	0xFDD
 47231                           fsr2h	equ	0xFDA
 47232                           fsr2l	equ	0xFD9
 47233                           status	equ	0xFD8
 47234                           
 47235 ;; *************** function i2_Delay10KTCYx *****************
 47236 ;; Defined at:
 47237 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\d10ktcyx.c"
 47238 ;; Parameters:    Size  Location     Type
 47239 ;;  unit            1    wreg     unsigned char 
 47240 ;; Auto vars:     Size  Location     Type
 47241 ;;  unit            1    1[COMRAM] unsigned char 
 47242 ;; Return value:  Size  Location     Type
 47243 ;;		None               void
 47244 ;; Registers used:
 47245 ;;		wreg
 47246 ;; Tracked objects:
 47247 ;;		On entry : 0/0
 47248 ;;		On exit  : 0/0
 47249 ;;		Unchanged: 0/0
 47250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47253 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47254 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47255 ;;Total ram usage:        2 bytes
 47256 ;; Hardware stack levels used:    1
 47257 ;; This function calls:
 47258 ;;		Nothing
 47259 ;; This function is called by:
 47260 ;;		i2_PowerOn
 47261 ;; This function uses a non-reentrant model
 47262 ;;
 47263                           
 47264                           	psect	text141
 47265  01B9DA                     __ptext141:
 47266                           	opt stack 0
 47267  01B9DA                     i2_Delay10KTCYx:
 47268                           	opt stack 20
 47269                           
 47270                           ;incstack = 0
 47271                           ;i2Delay10KTCYx@unit stored from wreg
 47272  01B9DA  6E02               	movwf	i2Delay10KTCYx@unit,c
 47273  01B9DC                     i2l2394:
 47274  01B9DC  0E0D               	movlw	13
 47275  01B9DE  6E01               	movwf	??i2_Delay10KTCYx& (0+255),c
 47276  01B9E0  0EFC               	movlw	252
 47277  01B9E2                     i2u1868_47:
 47278  01B9E2  2EE8               	decfsz	wreg,f,c
 47279  01B9E4  D7FE               	goto	i2u1868_47
 47280  01B9E6  2E01               	decfsz	??i2_Delay10KTCYx& (0+255),f,c
 47281  01B9E8  D7FC               	goto	i2u1868_47
 47282  01B9EA  2E02               	decfsz	i2Delay10KTCYx@unit,f,c
 47283  01B9EC  D7F7               	goto	i2l2394
 47284  01B9EE  0012               	return	
 47285  01B9F0                     __end_ofi2_Delay10KTCYx:
 47286                           	opt stack 0
 47287                           pclatu	equ	0xFFB
 47288                           pclath	equ	0xFFA
 47289                           tblptru	equ	0xFF8
 47290                           tblptrh	equ	0xFF7
 47291                           tblptrl	equ	0xFF6
 47292                           tablat	equ	0xFF5
 47293                           prodh	equ	0xFF4
 47294                           prodl	equ	0xFF3
 47295                           intcon	equ	0xFF2
 47296                           intcon2	equ	0xFF1
 47297                           intcon3	equ	0xFF0
 47298                           indf0	equ	0xFEF
 47299                           postinc0	equ	0xFEE
 47300                           fsr0h	equ	0xFEA
 47301                           fsr0l	equ	0xFE9
 47302                           wreg	equ	0xFE8
 47303                           indf1	equ	0xFE7
 47304                           postinc1	equ	0xFE6
 47305                           postdec1	equ	0xFE5
 47306                           fsr1h	equ	0xFE2
 47307                           fsr1l	equ	0xFE1
 47308                           indf2	equ	0xFDF
 47309                           postinc2	equ	0xFDE
 47310                           postdec2	equ	0xFDD
 47311                           fsr2h	equ	0xFDA
 47312                           fsr2l	equ	0xFD9
 47313                           status	equ	0xFD8
 47314                           
 47315 ;; *************** function i2_PowerOff *****************
 47316 ;; Defined at:
 47317 ;;		line 304 in file "Device.c"
 47318 ;; Parameters:    Size  Location     Type
 47319 ;;		None
 47320 ;; Auto vars:     Size  Location     Type
 47321 ;;		None
 47322 ;; Return value:  Size  Location     Type
 47323 ;;		None               void
 47324 ;; Registers used:
 47325 ;;		None
 47326 ;; Tracked objects:
 47327 ;;		On entry : 0/0
 47328 ;;		On exit  : 0/0
 47329 ;;		Unchanged: 0/0
 47330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47335 ;;Total ram usage:        0 bytes
 47336 ;; Hardware stack levels used:    1
 47337 ;; This function calls:
 47338 ;;		Nothing
 47339 ;; This function is called by:
 47340 ;;		_ISRLP
 47341 ;;		_ProcessIRCode
 47342 ;; This function uses a non-reentrant model
 47343 ;;
 47344                           
 47345                           	psect	text142
 47346  01BB04                     __ptext142:
 47347                           	opt stack 0
 47348  01BB04                     i2_PowerOff:
 47349                           	opt stack 21
 47350                           
 47351                           ;Device.c: 306: LATDbits.LD0 = 0;
 47352                           
 47353                           ;incstack = 0
 47354  01BB04  908C               	bcf	3980,0,c	;volatile
 47355                           
 47356                           ;Device.c: 307: LATBbits.LATB5 = 1;
 47357  01BB06  8A8A               	bsf	3978,5,c	;volatile
 47358  01BB08  0012               	return	
 47359  01BB0A                     __end_ofi2_PowerOff:
 47360                           	opt stack 0
 47361                           pclatu	equ	0xFFB
 47362                           pclath	equ	0xFFA
 47363                           tblptru	equ	0xFF8
 47364                           tblptrh	equ	0xFF7
 47365                           tblptrl	equ	0xFF6
 47366                           tablat	equ	0xFF5
 47367                           prodh	equ	0xFF4
 47368                           prodl	equ	0xFF3
 47369                           intcon	equ	0xFF2
 47370                           intcon2	equ	0xFF1
 47371                           intcon3	equ	0xFF0
 47372                           indf0	equ	0xFEF
 47373                           postinc0	equ	0xFEE
 47374                           fsr0h	equ	0xFEA
 47375                           fsr0l	equ	0xFE9
 47376                           wreg	equ	0xFE8
 47377                           indf1	equ	0xFE7
 47378                           postinc1	equ	0xFE6
 47379                           postdec1	equ	0xFE5
 47380                           fsr1h	equ	0xFE2
 47381                           fsr1l	equ	0xFE1
 47382                           indf2	equ	0xFDF
 47383                           postinc2	equ	0xFDE
 47384                           postdec2	equ	0xFDD
 47385                           fsr2h	equ	0xFDA
 47386                           fsr2l	equ	0xFD9
 47387                           status	equ	0xFD8
 47388                           
 47389 ;; *************** function _ChangeMasterVolume *****************
 47390 ;; Defined at:
 47391 ;;		line 173 in file "Device.c"
 47392 ;; Parameters:    Size  Location     Type
 47393 ;;  d               1    wreg     char 
 47394 ;; Auto vars:     Size  Location     Type
 47395 ;;  d               1   93[COMRAM] char 
 47396 ;;  prev            1   92[COMRAM] unsigned char 
 47397 ;; Return value:  Size  Location     Type
 47398 ;;		None               void
 47399 ;; Registers used:
 47400 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47401 ;; Tracked objects:
 47402 ;;		On entry : 0/0
 47403 ;;		On exit  : 0/0
 47404 ;;		Unchanged: 0/0
 47405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47410 ;;Total ram usage:        2 bytes
 47411 ;; Hardware stack levels used:    1
 47412 ;; Hardware stack levels required when called:    6
 47413 ;; This function calls:
 47414 ;;		i2_UpdateMasterVolume
 47415 ;; This function is called by:
 47416 ;;		_ISRLP
 47417 ;;		_ProcessIRCode
 47418 ;; This function uses a non-reentrant model
 47419 ;;
 47420                           
 47421                           	psect	text143
 47422  01B340                     __ptext143:
 47423                           	opt stack 0
 47424  01B340                     _ChangeMasterVolume:
 47425                           	opt stack 13
 47426                           
 47427                           ;incstack = 0
 47428                           ;ChangeMasterVolume@d stored from wreg
 47429  01B340  6E5E               	movwf	ChangeMasterVolume@d,c
 47430                           
 47431                           ;Device.c: 175: uint8_t prev = s_dacSettings.Volume;
 47432  01B342  C2D5  F05D         	movff	_s_dacSettings+2,ChangeMasterVolume@prev
 47433                           
 47434                           ;Device.c: 176: s_dacSettings.Volume += d;
 47435  01B346  505E               	movf	ChangeMasterVolume@d,w,c
 47436  01B348  0102               	movlb	2	; () banked
 47437  01B34A  27D5               	addwf	(_s_dacSettings+2)& (0+255),f,b
 47438                           
 47439                           ; BSR set to: 2
 47440                           ;Device.c: 177: if (d < 0 && prev < s_dacSettings.Volume) s_dacSettings.Volume = 0;
 47441  01B34C  AE5E               	btfss	ChangeMasterVolume@d,7,c
 47442  01B34E  D008               	goto	i2l13790
 47443                           
 47444                           ; BSR set to: 2
 47445  01B350  0102               	movlb	2	; () banked
 47446  01B352  51D5               	movf	(_s_dacSettings+2)& (0+255),w,b
 47447  01B354  5C5D               	subwf	ChangeMasterVolume@prev,w,c
 47448  01B356  B0D8               	btfsc	status,0,c
 47449  01B358  D003               	goto	i2l13790
 47450                           
 47451                           ; BSR set to: 2
 47452  01B35A  0E00               	movlw	0
 47453  01B35C  0102               	movlb	2	; () banked
 47454  01B35E  6FD5               	movwf	(_s_dacSettings+2)& (0+255),b
 47455  01B360                     i2l13790:
 47456                           
 47457                           ; BSR set to: 2
 47458                           ;Device.c: 178: if (d > 0 && prev > s_dacSettings.Volume) s_dacSettings.Volume = 0xFF;
 47459  01B360  505E               	movf	ChangeMasterVolume@d,w,c
 47460  01B362  0A80               	xorlw	128
 47461  01B364  0F7F               	addlw	-129
 47462  01B366  A0D8               	btfss	status,0,c
 47463  01B368  D007               	goto	i2l13796
 47464                           
 47465                           ; BSR set to: 2
 47466  01B36A  505D               	movf	ChangeMasterVolume@prev,w,c
 47467  01B36C  0102               	movlb	2	; () banked
 47468  01B36E  5DD5               	subwf	(_s_dacSettings+2)& (0+255),w,b
 47469  01B370  B0D8               	btfsc	status,0,c
 47470  01B372  D002               	goto	i2l13796
 47471                           
 47472                           ; BSR set to: 2
 47473  01B374  0102               	movlb	2	; () banked
 47474  01B376  69D5               	setf	(_s_dacSettings+2)& (0+255),b
 47475  01B378                     i2l13796:
 47476                           
 47477                           ; BSR set to: 2
 47478                           ;Device.c: 180: UpdateMasterVolume();
 47479  01B378  EC1E  F0D2         	call	i2_UpdateMasterVolume	;wreg free
 47480  01B37C  0012               	return	
 47481  01B37E                     __end_of_ChangeMasterVolume:
 47482                           	opt stack 0
 47483                           pclatu	equ	0xFFB
 47484                           pclath	equ	0xFFA
 47485                           tblptru	equ	0xFF8
 47486                           tblptrh	equ	0xFF7
 47487                           tblptrl	equ	0xFF6
 47488                           tablat	equ	0xFF5
 47489                           prodh	equ	0xFF4
 47490                           prodl	equ	0xFF3
 47491                           intcon	equ	0xFF2
 47492                           intcon2	equ	0xFF1
 47493                           intcon3	equ	0xFF0
 47494                           indf0	equ	0xFEF
 47495                           postinc0	equ	0xFEE
 47496                           fsr0h	equ	0xFEA
 47497                           fsr0l	equ	0xFE9
 47498                           wreg	equ	0xFE8
 47499                           indf1	equ	0xFE7
 47500                           postinc1	equ	0xFE6
 47501                           postdec1	equ	0xFE5
 47502                           fsr1h	equ	0xFE2
 47503                           fsr1l	equ	0xFE1
 47504                           indf2	equ	0xFDF
 47505                           postinc2	equ	0xFDE
 47506                           postdec2	equ	0xFDD
 47507                           fsr2h	equ	0xFDA
 47508                           fsr2l	equ	0xFD9
 47509                           status	equ	0xFD8
 47510                           
 47511 ;; *************** function i2_UpdateMasterVolume *****************
 47512 ;; Defined at:
 47513 ;;		line 161 in file "Device.c"
 47514 ;; Parameters:    Size  Location     Type
 47515 ;;		None
 47516 ;; Auto vars:     Size  Location     Type
 47517 ;;  UpdateMaster    3   88[COMRAM] unsigned char 
 47518 ;;  UpdateMaster    1   91[COMRAM] unsigned char 
 47519 ;; Return value:  Size  Location     Type
 47520 ;;		None               void
 47521 ;; Registers used:
 47522 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47523 ;; Tracked objects:
 47524 ;;		On entry : 0/0
 47525 ;;		On exit  : 0/0
 47526 ;;		Unchanged: 0/0
 47527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47532 ;;Total ram usage:        6 bytes
 47533 ;; Hardware stack levels used:    1
 47534 ;; Hardware stack levels required when called:    5
 47535 ;; This function calls:
 47536 ;;		i2_RefreshLine1
 47537 ;;		i2_SendVolumeToDevice
 47538 ;;		i2___awtoft
 47539 ;;		i2___ftdiv
 47540 ;;		i2_sprintf
 47541 ;; This function is called by:
 47542 ;;		_ChangeMasterVolume
 47543 ;;		i2_PowerOn
 47544 ;; This function uses a non-reentrant model
 47545 ;;
 47546                           
 47547                           	psect	text144
 47548  01A43C                     __ptext144:
 47549                           	opt stack 0
 47550  01A43C                     i2_UpdateMasterVolume:
 47551                           	opt stack 15
 47552                           
 47553                           ;Device.c: 163: double dvol = -s_dacSettings.Volume / 8.0;
 47554                           
 47555                           ;incstack = 0
 47556  01A43C  0102               	movlb	2	; () banked
 47557  01A43E  51D5               	movf	(_s_dacSettings+2)& (0+255),w,b
 47558  01A440  6E57               	movwf	??i2_UpdateMasterVolume& (0+255),c
 47559  01A442  6A58               	clrf	(??i2_UpdateMasterVolume+1)& (0+255),c
 47560  01A444  1E57               	comf	??i2_UpdateMasterVolume,f,c
 47561  01A446  1E58               	comf	??i2_UpdateMasterVolume+1,f,c
 47562  01A448  4A57               	infsnz	??i2_UpdateMasterVolume,f,c
 47563  01A44A  2A58               	incf	??i2_UpdateMasterVolume+1,f,c
 47564  01A44C  C057  F009         	movff	??i2_UpdateMasterVolume,i2___awtoft@c
 47565  01A450  C058  F00A         	movff	??i2_UpdateMasterVolume+1,i2___awtoft@c+1
 47566  01A454  ECD6  F0D8         	call	i2___awtoft	;wreg free
 47567  01A458  C009  F00D         	movff	?i2___awtoft,i2___ftdiv@f1
 47568  01A45C  C00A  F00E         	movff	?i2___awtoft+1,i2___ftdiv@f1+1
 47569  01A460  C00B  F00F         	movff	?i2___awtoft+2,i2___ftdiv@f1+2
 47570  01A464  0E00               	movlw	0
 47571  01A466  6E10               	movwf	i2___ftdiv@f2,c
 47572  01A468  0E00               	movlw	0
 47573  01A46A  6E11               	movwf	i2___ftdiv@f2+1,c
 47574  01A46C  0E41               	movlw	65
 47575  01A46E  6E12               	movwf	i2___ftdiv@f2+2,c
 47576  01A470  EC33  F0CA         	call	i2___ftdiv	;wreg free
 47577  01A474  C00D  F059         	movff	?i2___ftdiv,i2UpdateMasterVolume@dvol
 47578  01A478  C00E  F05A         	movff	?i2___ftdiv+1,i2UpdateMasterVolume@dvol+1
 47579  01A47C  C00F  F05B         	movff	?i2___ftdiv+2,i2UpdateMasterVolume@dvol+2
 47580                           
 47581                           ;Device.c: 165: uint8_t i = sprintf( &dispbuf1, "Volume %7.3fdB", dvol);
 47582  01A480  0102               	movlb	2	; () banked
 47583  01A482  0E02               	movlw	high _dispbuf1
 47584  01A484  6E4A               	movwf	i2sprintf@sp+1,c
 47585  01A486  0102               	movlb	2	; () banked
 47586  01A488  0E8B               	movlw	low _dispbuf1
 47587  01A48A  6E49               	movwf	i2sprintf@sp,c
 47588  01A48C  0EFF               	movlw	high STR_7
 47589  01A48E  6E4C               	movwf	i2sprintf@f+1,c
 47590  01A490  0EE8               	movlw	low STR_7
 47591  01A492  6E4B               	movwf	i2sprintf@f,c
 47592  01A494  C059  F04D         	movff	i2UpdateMasterVolume@dvol,?i2_sprintf+4
 47593  01A498  C05A  F04E         	movff	i2UpdateMasterVolume@dvol+1,?i2_sprintf+5
 47594  01A49C  C05B  F04F         	movff	i2UpdateMasterVolume@dvol+2,?i2_sprintf+6
 47595  01A4A0  EC7C  F091         	call	i2_sprintf	;wreg free
 47596  01A4A4  5049               	movf	?i2_sprintf,w,c
 47597  01A4A6  6E5C               	movwf	i2UpdateMasterVolume@i,c
 47598  01A4A8  D00D               	goto	L48
 47599  01A4AA                     i2l12750:
 47600  01A4AA  505C               	movf	i2UpdateMasterVolume@i,w,c
 47601  01A4AC  0D01               	mullw	1
 47602  01A4AE  0102               	movlb	2	; () banked
 47603  01A4B0  0E8B               	movlw	low _dispbuf1
 47604  01A4B2  24F3               	addwf	prodl,w,c
 47605  01A4B4  6ED9               	movwf	fsr2l,c
 47606  01A4B6  0102               	movlb	2	; () banked
 47607  01A4B8  0E02               	movlw	high _dispbuf1
 47608  01A4BA  20F4               	addwfc	prodh,w,c
 47609  01A4BC  6EDA               	movwf	fsr2h,c
 47610  01A4BE  0E20               	movlw	32
 47611  01A4C0  6EDF               	movwf	indf2,c
 47612                           
 47613                           ; BSR set to: 2
 47614  01A4C2  2A5C               	incf	i2UpdateMasterVolume@i,f,c
 47615  01A4C4                     L48:
 47616                           
 47617                           ; BSR set to: 2
 47618  01A4C4  0E0F               	movlw	15
 47619  01A4C6  645C               	cpfsgt	i2UpdateMasterVolume@i,c
 47620  01A4C8  D7F0               	goto	i2l12750
 47621                           
 47622                           ;Device.c: 167: dispbuf1[16] = 0;
 47623                           
 47624                           ; BSR set to: 2
 47625  01A4CA  0E00               	movlw	0
 47626  01A4CC  0102               	movlb	2	; () banked
 47627  01A4CE  6F9B               	movwf	(_dispbuf1+16)& (0+255),b
 47628                           
 47629                           ; BSR set to: 2
 47630                           ;Device.c: 168: RefreshLine1();
 47631  01A4D0  EC52  F0DD         	call	i2_RefreshLine1	;wreg free
 47632                           
 47633                           ;Device.c: 170: SendVolumeToDevice();
 47634  01A4D4  ECF8  F0DC         	call	i2_SendVolumeToDevice	;wreg free
 47635  01A4D8  0012               	return	
 47636  01A4DA                     __end_ofi2_UpdateMasterVolume:
 47637                           	opt stack 0
 47638                           pclatu	equ	0xFFB
 47639                           pclath	equ	0xFFA
 47640                           tblptru	equ	0xFF8
 47641                           tblptrh	equ	0xFF7
 47642                           tblptrl	equ	0xFF6
 47643                           tablat	equ	0xFF5
 47644                           prodh	equ	0xFF4
 47645                           prodl	equ	0xFF3
 47646                           intcon	equ	0xFF2
 47647                           intcon2	equ	0xFF1
 47648                           intcon3	equ	0xFF0
 47649                           indf0	equ	0xFEF
 47650                           postinc0	equ	0xFEE
 47651                           fsr0h	equ	0xFEA
 47652                           fsr0l	equ	0xFE9
 47653                           wreg	equ	0xFE8
 47654                           indf1	equ	0xFE7
 47655                           postinc1	equ	0xFE6
 47656                           postdec1	equ	0xFE5
 47657                           fsr1h	equ	0xFE2
 47658                           fsr1l	equ	0xFE1
 47659                           indf2	equ	0xFDF
 47660                           postinc2	equ	0xFDE
 47661                           postdec2	equ	0xFDD
 47662                           fsr2h	equ	0xFDA
 47663                           fsr2l	equ	0xFD9
 47664                           status	equ	0xFD8
 47665                           
 47666 ;; *************** function i2_sprintf *****************
 47667 ;; Defined at:
 47668 ;;		line 492 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 47669 ;; Parameters:    Size  Location     Type
 47670 ;;  sp              2   72[COMRAM] PTR unsigned char 
 47671 ;;		 -> dispbuf1(17), 
 47672 ;;  f               2   74[COMRAM] PTR const unsigned char 
 47673 ;;		 -> STR_7(15), 
 47674 ;; Auto vars:     Size  Location     Type
 47675 ;;  sprintf         5   22[BANK0 ] struct .
 47676 ;;  sprintf         4   13[BANK0 ] unsigned long 
 47677 ;;  sprintf         4    9[BANK0 ] unsigned long 
 47678 ;;  sprintf         3   33[BANK0 ] unsigned long 
 47679 ;;  sprintf         3   19[BANK0 ] unsigned long 
 47680 ;;  sprintf         3    0        unsigned long 
 47681 ;;  sprintf         2   36[BANK0 ] int 
 47682 ;;  sprintf         2   31[BANK0 ] int 
 47683 ;;  sprintf         2   29[BANK0 ] int 
 47684 ;;  sprintf         2   27[BANK0 ] unsigned short 
 47685 ;;  sprintf         2   17[BANK0 ] int 
 47686 ;;  sprintf         2    7[BANK0 ] PTR void [1]
 47687 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
 47688 ;;  sprintf         1   38[BANK0 ] char 
 47689 ;;  sprintf         1    0        unsigned char 
 47690 ;; Return value:  Size  Location     Type
 47691 ;;                  2   72[COMRAM] int 
 47692 ;; Registers used:
 47693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47694 ;; Tracked objects:
 47695 ;;		On entry : 0/0
 47696 ;;		On exit  : 0/0
 47697 ;;		Unchanged: 0/0
 47698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 47699 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47700 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47701 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47702 ;;      Totals:        13      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 47703 ;;Total ram usage:       52 bytes
 47704 ;; Hardware stack levels used:    1
 47705 ;; Hardware stack levels required when called:    3
 47706 ;; This function calls:
 47707 ;;		i2___awdiv
 47708 ;;		i2___ftadd
 47709 ;;		i2___ftge
 47710 ;;		i2___ftmul
 47711 ;;		i2___ftneg
 47712 ;;		i2___ftsub
 47713 ;;		i2___fttol
 47714 ;;		i2___lldiv
 47715 ;;		i2___llmod
 47716 ;;		i2___lltoft
 47717 ;;		i2___wmul
 47718 ;;		i2__div_to_l_
 47719 ;;		i2__tdiv_to_l_
 47720 ;;		i2_fround
 47721 ;;		i2_isdigit
 47722 ;;		i2_scale
 47723 ;; This function is called by:
 47724 ;;		i2_UpdateMasterVolume
 47725 ;; This function uses a non-reentrant model
 47726 ;;
 47727                           
 47728                           	psect	text145
 47729  0122F8                     __ptext145:
 47730                           	opt stack 0
 47731  0122F8                     i2_sprintf:
 47732                           	opt stack 16
 47733                           
 47734                           ;doprnt.c: 494: va_list ap;
 47735                           ;doprnt.c: 499: signed char c;
 47736                           ;doprnt.c: 501: int width;
 47737                           ;doprnt.c: 504: int prec;
 47738                           ;doprnt.c: 508: unsigned short flag;
 47739                           ;doprnt.c: 510: int ccnt = 0;
 47740                           
 47741                           ;incstack = 0
 47742  0122F8  0E00               	movlw	0
 47743  0122FA  0100               	movlb	0	; () banked
 47744  0122FC  6F72               	movwf	(i2sprintf@ccnt+1)& (0+255),b
 47745  0122FE  0E00               	movlw	0
 47746  012300  0100               	movlb	0	; () banked
 47747  012302  6F71               	movwf	i2sprintf@ccnt& (0+255),b
 47748                           
 47749                           ; BSR set to: 0
 47750                           ;doprnt.c: 515: char d;
 47751                           ;doprnt.c: 516: double fval, integ;
 47752                           ;doprnt.c: 517: int exp;
 47753                           ;doprnt.c: 518: double ival;
 47754                           ;doprnt.c: 519: union {
 47755                           ;doprnt.c: 520: unsigned long _val;
 47756                           ;doprnt.c: 521: struct {
 47757                           ;doprnt.c: 522: const char * _cp;
 47758                           ;doprnt.c: 523: unsigned _len;
 47759                           ;doprnt.c: 524: } _str;
 47760                           ;doprnt.c: 525: } _val;
 47761                           ;doprnt.c: 542: *ap = __va_start();
 47762  012304  0E00               	movlw	high (?i2_sprintf+4)
 47763  012306  0100               	movlb	0	; () banked
 47764  012308  6F68               	movwf	(i2sprintf@ap+1)& (0+255),b
 47765  01230A  0E4D               	movlw	low (?i2_sprintf+4)
 47766  01230C  0100               	movlb	0	; () banked
 47767  01230E  6F67               	movwf	i2sprintf@ap& (0+255),b
 47768                           
 47769                           ;doprnt.c: 545: while(c = *f++) {
 47770  012310  EFA6  F096         	goto	i2l11840
 47771  012314                     i2l11564:
 47772                           
 47773                           ; BSR set to: 0
 47774                           ;doprnt.c: 547: if(c != '%')
 47775  012314  0100               	movlb	0	; () banked
 47776  012316  5186               	movf	i2sprintf@c& (0+255),w,b
 47777  012318  0A25               	xorlw	37
 47778  01231A  B4D8               	btfsc	status,2,c
 47779  01231C  D009               	goto	i2l11572
 47780                           
 47781                           ; BSR set to: 0
 47782                           ;doprnt.c: 549: {
 47783                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
 47784  01231E  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 47785  012322  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 47786  012326  0100               	movlb	0	; () banked
 47787  012328  C086  FFDF         	movff	i2sprintf@c,indf2
 47788  01232C  EFA1  F096         	goto	L49
 47789  012330                     i2l11572:
 47790                           
 47791                           ; BSR set to: 0
 47792                           ;doprnt.c: 552: }
 47793                           ;doprnt.c: 555: width = 0;
 47794  012330  0E00               	movlw	0
 47795  012332  0100               	movlb	0	; () banked
 47796  012334  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 47797  012336  0E00               	movlw	0
 47798  012338  0100               	movlb	0	; () banked
 47799  01233A  6F7D               	movwf	i2sprintf@width& (0+255),b
 47800                           
 47801                           ;doprnt.c: 557: flag = 0;
 47802  01233C  0E00               	movlw	0
 47803  01233E  0100               	movlb	0	; () banked
 47804  012340  6F7C               	movwf	(i2sprintf@flag+1)& (0+255),b
 47805  012342  0E00               	movlw	0
 47806  012344  0100               	movlb	0	; () banked
 47807  012346  6F7B               	movwf	i2sprintf@flag& (0+255),b
 47808                           
 47809                           ; BSR set to: 0
 47810                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 47811  012348  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47812  01234C  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47813  012350                     	if	0	;tblptru may be non-zero
 47814  012350                     	endif
 47815  012350                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47816  012350  0E00               	movlw	low (__mediumconst shr (0+16))
 47817  012352  6EF8               	movwf	tblptru,c
 47818  012354                     	endif
 47819  012354  0008               	tblrd		*
 47820  012356  50F5               	movf	tablat,w,c
 47821  012358  EC59  F0DC         	call	i2_isdigit
 47822  01235C  A0D8               	btfss	status,0,c
 47823  01235E  D03A               	goto	i2l11586
 47824                           
 47825                           ;doprnt.c: 607: width = 0;
 47826  012360  0E00               	movlw	0
 47827  012362  0100               	movlb	0	; () banked
 47828  012364  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 47829  012366  0E00               	movlw	0
 47830  012368  0100               	movlb	0	; () banked
 47831  01236A  6F7D               	movwf	i2sprintf@width& (0+255),b
 47832  01236C                     i2l11578:
 47833                           
 47834                           ;doprnt.c: 609: width *= 10;
 47835  01236C  C07D  F00F         	movff	i2sprintf@width,i2___wmul@multiplier
 47836  012370  C07E  F010         	movff	i2sprintf@width+1,i2___wmul@multiplier+1
 47837  012374  0E00               	movlw	0
 47838  012376  6E12               	movwf	i2___wmul@multiplicand+1,c
 47839  012378  0E0A               	movlw	10
 47840  01237A  6E11               	movwf	i2___wmul@multiplicand,c
 47841  01237C  ECBA  F0DB         	call	i2___wmul	;wreg free
 47842  012380  C00F  F07D         	movff	?i2___wmul,i2sprintf@width
 47843  012384  C010  F07E         	movff	?i2___wmul+1,i2sprintf@width+1
 47844                           
 47845                           ;doprnt.c: 610: width += *f++ - '0';
 47846  012388  0ED0               	movlw	208
 47847  01238A  6E50               	movwf	??i2_sprintf& (0+255),c
 47848  01238C  0EFF               	movlw	255
 47849  01238E  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 47850  012390  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47851  012394  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47852  012398                     	if	0	;tblptru may be non-zero
 47853  012398                     	endif
 47854  012398                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47855  012398  0E00               	movlw	low (__mediumconst shr (0+16))
 47856  01239A  6EF8               	movwf	tblptru,c
 47857  01239C                     	endif
 47858  01239C  0008               	tblrd		*
 47859  01239E  50F5               	movf	tablat,w,c
 47860  0123A0  6E52               	movwf	(??i2_sprintf+2)& (0+255),c
 47861  0123A2  6A53               	clrf	(??i2_sprintf+3)& (0+255),c
 47862  0123A4  5050               	movf	??i2_sprintf,w,c
 47863  0123A6  2652               	addwf	??i2_sprintf+2,f,c
 47864  0123A8  5051               	movf	??i2_sprintf+1,w,c
 47865  0123AA  2253               	addwfc	??i2_sprintf+3,f,c
 47866  0123AC  5052               	movf	??i2_sprintf+2,w,c
 47867  0123AE  0100               	movlb	0	; () banked
 47868  0123B0  277D               	addwf	i2sprintf@width& (0+255),f,b
 47869  0123B2  5053               	movf	??i2_sprintf+3,w,c
 47870  0123B4  0100               	movlb	0	; () banked
 47871  0123B6  237E               	addwfc	(i2sprintf@width+1)& (0+255),f,b
 47872                           
 47873                           ; BSR set to: 0
 47874  0123B8  4A4B               	infsnz	i2sprintf@f,f,c
 47875  0123BA  2A4C               	incf	i2sprintf@f+1,f,c
 47876                           
 47877                           ; BSR set to: 0
 47878                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 47879  0123BC  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47880  0123C0  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47881  0123C4                     	if	0	;tblptru may be non-zero
 47882  0123C4                     	endif
 47883  0123C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47884  0123C4  0E00               	movlw	low (__mediumconst shr (0+16))
 47885  0123C6  6EF8               	movwf	tblptru,c
 47886  0123C8                     	endif
 47887  0123C8  0008               	tblrd		*
 47888  0123CA  50F5               	movf	tablat,w,c
 47889  0123CC  EC59  F0DC         	call	i2_isdigit
 47890  0123D0  B0D8               	btfsc	status,0,c
 47891  0123D2  D7CC               	goto	i2l11578
 47892  0123D4                     i2l11586:
 47893                           
 47894                           ;doprnt.c: 617: }
 47895                           ;doprnt.c: 620: if(*f == '.') {
 47896  0123D4  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47897  0123D8  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47898  0123DC                     	if	0	;tblptru may be non-zero
 47899  0123DC                     	endif
 47900  0123DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47901  0123DC  0E00               	movlw	low (__mediumconst shr (0+16))
 47902  0123DE  6EF8               	movwf	tblptru,c
 47903  0123E0                     	endif
 47904  0123E0  0008               	tblrd		*
 47905  0123E2  50F5               	movf	tablat,w,c
 47906  0123E4  0A2E               	xorlw	46
 47907  0123E6  A4D8               	btfss	status,2,c
 47908  0123E8  D037               	goto	i2l11598
 47909                           
 47910                           ;doprnt.c: 621: flag |= 0x4000;
 47911  0123EA  0100               	movlb	0	; () banked
 47912  0123EC  8D7C               	bsf	(i2sprintf@flag+1)& (0+255),6,b
 47913                           
 47914                           ;doprnt.c: 622: f++;
 47915  0123EE  4A4B               	infsnz	i2sprintf@f,f,c
 47916  0123F0  2A4C               	incf	i2sprintf@f+1,f,c
 47917                           
 47918                           ; BSR set to: 0
 47919                           ;doprnt.c: 629: {
 47920                           ;doprnt.c: 630: prec = 0;
 47921  0123F2  0E00               	movlw	0
 47922  0123F4  0100               	movlb	0	; () banked
 47923  0123F6  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47924  0123F8  0E00               	movlw	0
 47925  0123FA  0100               	movlb	0	; () banked
 47926  0123FC  6F84               	movwf	i2sprintf@prec& (0+255),b
 47927                           
 47928                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 47929  0123FE  D01F               	goto	i2l11596
 47930  012400                     i2l11592:
 47931                           
 47932                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 47933  012400  C084  F00F         	movff	i2sprintf@prec,i2___wmul@multiplier
 47934  012404  C085  F010         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
 47935  012408  0E00               	movlw	0
 47936  01240A  6E12               	movwf	i2___wmul@multiplicand+1,c
 47937  01240C  0E0A               	movlw	10
 47938  01240E  6E11               	movwf	i2___wmul@multiplicand,c
 47939  012410  ECBA  F0DB         	call	i2___wmul	;wreg free
 47940  012414  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47941  012418  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47942  01241C                     	if	0	;tblptru may be non-zero
 47943  01241C                     	endif
 47944  01241C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47945  01241C  0E00               	movlw	low (__mediumconst shr (0+16))
 47946  01241E  6EF8               	movwf	tblptru,c
 47947  012420                     	endif
 47948  012420  0008               	tblrd		*
 47949  012422  50F5               	movf	tablat,w,c
 47950  012424  260F               	addwf	?i2___wmul,f,c
 47951  012426  0E00               	movlw	0
 47952  012428  2210               	addwfc	?i2___wmul+1,f,c
 47953  01242A  0ED0               	movlw	208
 47954  01242C  240F               	addwf	?i2___wmul,w,c
 47955  01242E  0100               	movlb	0	; () banked
 47956  012430  6F84               	movwf	i2sprintf@prec& (0+255),b
 47957  012432  0EFF               	movlw	255
 47958  012434  2010               	addwfc	?i2___wmul+1,w,c
 47959  012436  0100               	movlb	0	; () banked
 47960  012438  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47961                           
 47962                           ; BSR set to: 0
 47963  01243A  4A4B               	infsnz	i2sprintf@f,f,c
 47964  01243C  2A4C               	incf	i2sprintf@f+1,f,c
 47965  01243E                     i2l11596:
 47966                           
 47967                           ; BSR set to: 0
 47968  01243E  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 47969  012442  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 47970  012446                     	if	0	;tblptru may be non-zero
 47971  012446                     	endif
 47972  012446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 47973  012446  0E00               	movlw	low (__mediumconst shr (0+16))
 47974  012448  6EF8               	movwf	tblptru,c
 47975  01244A                     	endif
 47976  01244A  0008               	tblrd		*
 47977  01244C  50F5               	movf	tablat,w,c
 47978  01244E  EC59  F0DC         	call	i2_isdigit
 47979  012452  A0D8               	btfss	status,0,c
 47980  012454  D00D               	goto	i2l11606
 47981  012456  D7D4               	goto	i2l11592
 47982  012458                     i2l11598:
 47983                           
 47984                           ;doprnt.c: 635: prec = 0;
 47985  012458  0E00               	movlw	0
 47986  01245A  0100               	movlb	0	; () banked
 47987  01245C  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 47988  01245E  0E00               	movlw	0
 47989  012460  0100               	movlb	0	; () banked
 47990  012462  6F84               	movwf	i2sprintf@prec& (0+255),b
 47991                           
 47992                           ; BSR set to: 0
 47993                           ;doprnt.c: 637: flag |= 0x1000;
 47994  012464  0100               	movlb	0	; () banked
 47995  012466  897C               	bsf	(i2sprintf@flag+1)& (0+255),4,b
 47996  012468  D003               	goto	i2l11606
 47997  01246A                     i2l11602:
 47998                           
 47999                           ; BSR set to: 0
 48000                           ;doprnt.c: 672: flag |= 0x400;
 48001  01246A  0100               	movlb	0	; () banked
 48002  01246C  857C               	bsf	(i2sprintf@flag+1)& (0+255),2,b
 48003                           
 48004                           ;doprnt.c: 673: break;
 48005  01246E  D017               	goto	i2l11608
 48006  012470                     i2l11606:
 48007  012470  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 48008  012474  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 48009  012478  4A4B               	infsnz	i2sprintf@f,f,c
 48010  01247A  2A4C               	incf	i2sprintf@f+1,f,c
 48011  01247C                     	if	0	;tblptru may be non-zero
 48012  01247C                     	endif
 48013  01247C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 48014  01247C  0E00               	movlw	low (__mediumconst shr (0+16))
 48015  01247E  6EF8               	movwf	tblptru,c
 48016  012480                     	endif
 48017  012480  0008               	tblrd		*
 48018  012482  0100               	movlb	0	; () banked
 48019  012484  CFF5 F086          	movff	tablat,i2sprintf@c
 48020  012488  0100               	movlb	0	; () banked
 48021  01248A  5186               	movf	i2sprintf@c& (0+255),w,b
 48022                           
 48023                           ; Switch size 1, requested type "space"
 48024                           ; Number of cases is 2, Range of values is 0 to 102
 48025                           ; switch strategies available:
 48026                           ; Name         Instructions Cycles
 48027                           ; simple_byte            7     4 (average)
 48028                           ;	Chosen strategy is simple_byte
 48029  01248C  0A00               	xorlw	0	; case 0
 48030  01248E  B4D8               	btfsc	status,2,c
 48031  012490  EFB6  F096         	goto	i2l11842
 48032  012494  0A66               	xorlw	102	; case 102
 48033  012496  B4D8               	btfsc	status,2,c
 48034  012498  D7E8               	goto	i2l11602
 48035  01249A  EFA6  F096         	goto	i2l11840
 48036  01249E                     i2l11608:
 48037                           
 48038                           ; BSR set to: 0
 48039                           ;doprnt.c: 834: if(flag & (0x700)) {
 48040  01249E  0E07               	movlw	7
 48041  0124A0  0100               	movlb	0	; () banked
 48042  0124A2  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48043  0124A4  B4D8               	btfsc	status,2,c
 48044  0124A6  D394               	goto	i2l11788
 48045                           
 48046                           ; BSR set to: 0
 48047                           ;doprnt.c: 836: if(flag & 0x1000)
 48048  0124A8  0100               	movlb	0	; () banked
 48049  0124AA  A97C               	btfss	(i2sprintf@flag+1)& (0+255),4,b
 48050  0124AC  D006               	goto	i2l11614
 48051                           
 48052                           ; BSR set to: 0
 48053                           ;doprnt.c: 838: prec = 6;
 48054  0124AE  0E00               	movlw	0
 48055  0124B0  0100               	movlb	0	; () banked
 48056  0124B2  6F85               	movwf	(i2sprintf@prec+1)& (0+255),b
 48057  0124B4  0E06               	movlw	6
 48058  0124B6  0100               	movlb	0	; () banked
 48059  0124B8  6F84               	movwf	i2sprintf@prec& (0+255),b
 48060  0124BA                     i2l11614:
 48061                           
 48062                           ; BSR set to: 0
 48063                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 48064  0124BA  C067  FFD9         	movff	i2sprintf@ap,fsr2l
 48065  0124BE  C068  FFDA         	movff	i2sprintf@ap+1,fsr2h
 48066  0124C2  0100               	movlb	0	; () banked
 48067  0124C4  CFDE F081          	movff	postinc2,i2sprintf@fval
 48068  0124C8  0100               	movlb	0	; () banked
 48069  0124CA  CFDE F082          	movff	postinc2,i2sprintf@fval+1
 48070  0124CE  0100               	movlb	0	; () banked
 48071  0124D0  CFDD F083          	movff	postdec2,i2sprintf@fval+2
 48072                           
 48073                           ; BSR set to: 0
 48074  0124D4  0E03               	movlw	3
 48075  0124D6  0100               	movlb	0	; () banked
 48076  0124D8  2767               	addwf	i2sprintf@ap& (0+255),f,b
 48077  0124DA  0E00               	movlw	0
 48078  0124DC  0100               	movlb	0	; () banked
 48079  0124DE  2368               	addwfc	(i2sprintf@ap+1)& (0+255),f,b
 48080                           
 48081                           ; BSR set to: 0
 48082                           ;doprnt.c: 840: if(fval < 0.0) {
 48083  0124E0  0100               	movlb	0	; () banked
 48084  0124E2  5183               	movf	(i2sprintf@fval+2)& (0+255),w,b
 48085  0124E4  0A80               	xorlw	128
 48086  0124E6  0F80               	addlw	128
 48087  0124E8  E107               	bnz	i2u1257_45
 48088  0124EA  0E00               	movlw	0
 48089  0124EC  0100               	movlb	0	; () banked
 48090  0124EE  5D82               	subwf	(i2sprintf@fval+1)& (0+255),w,b
 48091  0124F0  E103               	bnz	i2u1257_45
 48092  0124F2  0E00               	movlw	0
 48093  0124F4  0100               	movlb	0	; () banked
 48094  0124F6  5D81               	subwf	i2sprintf@fval& (0+255),w,b
 48095  0124F8                     i2u1257_45:
 48096  0124F8  B0D8               	btfsc	status,0,c
 48097  0124FA  D011               	goto	i2l11624
 48098                           
 48099                           ; BSR set to: 0
 48100                           ;doprnt.c: 841: fval = -fval;
 48101  0124FC  C081  F001         	movff	i2sprintf@fval,i2___ftneg@f1
 48102  012500  C082  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
 48103  012504  C083  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
 48104  012508  ECCD  F0DB         	call	i2___ftneg	;wreg free
 48105  01250C  C001  F081         	movff	?i2___ftneg,i2sprintf@fval
 48106  012510  C002  F082         	movff	?i2___ftneg+1,i2sprintf@fval+1
 48107  012514  C003  F083         	movff	?i2___ftneg+2,i2sprintf@fval+2
 48108                           
 48109                           ;doprnt.c: 842: flag |= 0x03;
 48110  012518  0E03               	movlw	3
 48111  01251A  0100               	movlb	0	; () banked
 48112  01251C  137B               	iorwf	i2sprintf@flag& (0+255),f,b
 48113  01251E                     i2l11624:
 48114                           
 48115                           ; BSR set to: 0
 48116                           ;doprnt.c: 843: }
 48117                           ;doprnt.c: 844: exp = 0;
 48118  01251E  0E00               	movlw	0
 48119  012520  0100               	movlb	0	; () banked
 48120  012522  6F80               	movwf	(i2sprintf@exp+1)& (0+255),b
 48121  012524  0E00               	movlw	0
 48122  012526  0100               	movlb	0	; () banked
 48123  012528  6F7F               	movwf	i2sprintf@exp& (0+255),b
 48124                           
 48125                           ; BSR set to: 0
 48126                           ;doprnt.c: 845: if( fval!=0) {
 48127  01252A  0E7F               	movlw	127
 48128  01252C  0100               	movlb	0	; () banked
 48129  01252E  1583               	andwf	(i2sprintf@fval+2)& (0+255),w,b
 48130  012530  0100               	movlb	0	; () banked
 48131  012532  1182               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 48132  012534  0100               	movlb	0	; () banked
 48133  012536  1181               	iorwf	i2sprintf@fval& (0+255),w,b
 48134  012538  B4D8               	btfsc	status,2,c
 48135  01253A  D097               	goto	i2l11652
 48136                           
 48137                           ; BSR set to: 0
 48138                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 48139  01253C  0E82               	movlw	130
 48140  01253E  6E50               	movwf	??i2_sprintf& (0+255),c
 48141  012540  0EFF               	movlw	255
 48142  012542  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48143  012544  0100               	movlb	0	; () banked
 48144  012546  C081  F052         	movff	i2sprintf@fval,??i2_sprintf+2
 48145  01254A  0100               	movlb	0	; () banked
 48146  01254C  C082  F053         	movff	i2sprintf@fval+1,??i2_sprintf+3
 48147  012550  0100               	movlb	0	; () banked
 48148  012552  C083  F054         	movff	i2sprintf@fval+2,??i2_sprintf+4
 48149  012556  0100               	movlb	0	; () banked
 48150  012558  C084  F055         	movff	i2sprintf@fval+3,??i2_sprintf+5
 48151  01255C  0E10               	movlw	16
 48152  01255E  D005               	goto	i2u1259_40
 48153  012560                     i2u1259_45:
 48154  012560  90D8               	bcf	status,0,c
 48155  012562  3255               	rrcf	??i2_sprintf+5,f,c
 48156  012564  3254               	rrcf	??i2_sprintf+4,f,c
 48157  012566  3253               	rrcf	??i2_sprintf+3,f,c
 48158  012568  3252               	rrcf	??i2_sprintf+2,f,c
 48159  01256A                     i2u1259_40:
 48160  01256A  2EE8               	decfsz	wreg,f,c
 48161  01256C  D7F9               	goto	i2u1259_45
 48162  01256E  5052               	movf	??i2_sprintf+2,w,c
 48163  012570  2450               	addwf	??i2_sprintf,w,c
 48164  012572  0100               	movlb	0	; () banked
 48165  012574  6F7F               	movwf	i2sprintf@exp& (0+255),b
 48166  012576  0E00               	movlw	0
 48167  012578  2051               	addwfc	??i2_sprintf+1,w,c
 48168  01257A  0100               	movlb	0	; () banked
 48169  01257C  6F80               	movwf	(i2sprintf@exp+1)& (0+255),b
 48170                           
 48171                           ; BSR set to: 0
 48172                           ;doprnt.c: 847: exp--;
 48173  01257E  0100               	movlb	0	; () banked
 48174  012580  077F               	decf	i2sprintf@exp& (0+255),f,b
 48175  012582  A0D8               	btfss	status,0,c
 48176  012584  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 48177                           
 48178                           ; BSR set to: 0
 48179                           ;doprnt.c: 848: exp *= 3;
 48180  012586  C07F  F00F         	movff	i2sprintf@exp,i2___wmul@multiplier
 48181  01258A  C080  F010         	movff	i2sprintf@exp+1,i2___wmul@multiplier+1
 48182  01258E  0E00               	movlw	0
 48183  012590  6E12               	movwf	i2___wmul@multiplicand+1,c
 48184  012592  0E03               	movlw	3
 48185  012594  6E11               	movwf	i2___wmul@multiplicand,c
 48186  012596  ECBA  F0DB         	call	i2___wmul	;wreg free
 48187  01259A  C00F  F07F         	movff	?i2___wmul,i2sprintf@exp
 48188  01259E  C010  F080         	movff	?i2___wmul+1,i2sprintf@exp+1
 48189                           
 48190                           ;doprnt.c: 849: exp /= 10;
 48191  0125A2  C07F  F007         	movff	i2sprintf@exp,i2___awdiv@dividend
 48192  0125A6  C080  F008         	movff	i2sprintf@exp+1,i2___awdiv@dividend+1
 48193  0125AA  0E00               	movlw	0
 48194  0125AC  6E0A               	movwf	i2___awdiv@divisor+1,c
 48195  0125AE  0E0A               	movlw	10
 48196  0125B0  6E09               	movwf	i2___awdiv@divisor,c
 48197  0125B2  EC7C  F0D1         	call	i2___awdiv	;wreg free
 48198  0125B6  C007  F07F         	movff	?i2___awdiv,i2sprintf@exp
 48199  0125BA  C008  F080         	movff	?i2___awdiv+1,i2sprintf@exp+1
 48200                           
 48201                           ;doprnt.c: 850: if(exp < 0)
 48202  0125BE  0100               	movlb	0	; () banked
 48203  0125C0  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 48204  0125C2  0A80               	xorlw	128
 48205  0125C4  6EF3               	movwf	prodl,c
 48206  0125C6  0E80               	movlw	128
 48207  0125C8  5CF3               	subwf	prodl,w,c
 48208  0125CA  0E00               	movlw	0
 48209  0125CC  B4D8               	btfsc	status,2,c
 48210  0125CE  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 48211  0125D0  B0D8               	btfsc	status,0,c
 48212  0125D2  D004               	goto	i2l11640
 48213                           
 48214                           ; BSR set to: 0
 48215                           ;doprnt.c: 851: exp--;
 48216  0125D4  0100               	movlb	0	; () banked
 48217  0125D6  077F               	decf	i2sprintf@exp& (0+255),f,b
 48218  0125D8  A0D8               	btfss	status,0,c
 48219  0125DA  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 48220  0125DC                     i2l11640:
 48221                           
 48222                           ; BSR set to: 0
 48223                           ;doprnt.c: 855: integ = scale(-exp);
 48224  0125DC  0100               	movlb	0	; () banked
 48225  0125DE  517F               	movf	i2sprintf@exp& (0+255),w,b
 48226  0125E0  0800               	sublw	0
 48227  0125E2  ECBC  F0FD         	call	i2_scale
 48228  0125E6  C024  F073         	movff	?i2_scale,i2sprintf@integ
 48229  0125EA  C025  F074         	movff	?i2_scale+1,i2sprintf@integ+1
 48230  0125EE  C026  F075         	movff	?i2_scale+2,i2sprintf@integ+2
 48231                           
 48232                           ;doprnt.c: 856: integ *= fval;
 48233  0125F2  C073  F015         	movff	i2sprintf@integ,i2___ftmul@f1
 48234  0125F6  C074  F016         	movff	i2sprintf@integ+1,i2___ftmul@f1+1
 48235  0125FA  C075  F017         	movff	i2sprintf@integ+2,i2___ftmul@f1+2
 48236  0125FE  C081  F018         	movff	i2sprintf@fval,i2___ftmul@f2
 48237  012602  C082  F019         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 48238  012606  C083  F01A         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 48239  01260A  EC60  F0C8         	call	i2___ftmul	;wreg free
 48240  01260E  C015  F073         	movff	?i2___ftmul,i2sprintf@integ
 48241  012612  C016  F074         	movff	?i2___ftmul+1,i2sprintf@integ+1
 48242  012616  C017  F075         	movff	?i2___ftmul+2,i2sprintf@integ+2
 48243                           
 48244                           ;doprnt.c: 857: if(integ < 1.0)
 48245  01261A  C073  F001         	movff	i2sprintf@integ,i2___ftge@ff1
 48246  01261E  C074  F002         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 48247  012622  C075  F003         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 48248  012626  0E00               	movlw	0
 48249  012628  6E04               	movwf	i2___ftge@ff2,c
 48250  01262A  0E80               	movlw	128
 48251  01262C  6E05               	movwf	i2___ftge@ff2+1,c
 48252  01262E  0E3F               	movlw	63
 48253  012630  6E06               	movwf	i2___ftge@ff2+2,c
 48254  012632  EC49  F0D3         	call	i2___ftge	;wreg free
 48255  012636  B0D8               	btfsc	status,0,c
 48256  012638  D005               	goto	i2l11648
 48257                           
 48258                           ;doprnt.c: 858: exp--;
 48259  01263A  0100               	movlb	0	; () banked
 48260  01263C  077F               	decf	i2sprintf@exp& (0+255),f,b
 48261  01263E  A0D8               	btfss	status,0,c
 48262  012640  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 48263  012642  D013               	goto	i2l11652
 48264  012644                     i2l11648:
 48265                           
 48266                           ;doprnt.c: 859: else if(integ >= 10.0)
 48267  012644  C073  F001         	movff	i2sprintf@integ,i2___ftge@ff1
 48268  012648  C074  F002         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 48269  01264C  C075  F003         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 48270  012650  0E00               	movlw	0
 48271  012652  6E04               	movwf	i2___ftge@ff2,c
 48272  012654  0E20               	movlw	32
 48273  012656  6E05               	movwf	i2___ftge@ff2+1,c
 48274  012658  0E41               	movlw	65
 48275  01265A  6E06               	movwf	i2___ftge@ff2+2,c
 48276  01265C  EC49  F0D3         	call	i2___ftge	;wreg free
 48277  012660  A0D8               	btfss	status,0,c
 48278  012662  D003               	goto	i2l11652
 48279                           
 48280                           ;doprnt.c: 860: exp++;
 48281  012664  0100               	movlb	0	; () banked
 48282  012666  4B7F               	infsnz	i2sprintf@exp& (0+255),f,b
 48283  012668  2B80               	incf	(i2sprintf@exp+1)& (0+255),f,b
 48284  01266A                     i2l11652:
 48285                           
 48286                           ;doprnt.c: 861: }
 48287                           ;doprnt.c: 1121: if(prec <= 12)
 48288  01266A  0100               	movlb	0	; () banked
 48289  01266C  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48290  01266E  0A80               	xorlw	128
 48291  012670  6EF3               	movwf	prodl,c
 48292  012672  0E80               	movlw	128
 48293  012674  5CF3               	subwf	prodl,w,c
 48294  012676  0E0D               	movlw	13
 48295  012678  B4D8               	btfsc	status,2,c
 48296  01267A  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 48297  01267C  B0D8               	btfsc	status,0,c
 48298  01267E  D018               	goto	i2l11656
 48299                           
 48300                           ; BSR set to: 0
 48301                           ;doprnt.c: 1122: fval += fround(prec);
 48302  012680  C081  F02E         	movff	i2sprintf@fval,i2___ftadd@f1
 48303  012684  C082  F02F         	movff	i2sprintf@fval+1,i2___ftadd@f1+1
 48304  012688  C083  F030         	movff	i2sprintf@fval+2,i2___ftadd@f1+2
 48305  01268C  0100               	movlb	0	; () banked
 48306  01268E  5184               	movf	i2sprintf@prec& (0+255),w,b
 48307  012690  ECB5  F0A7         	call	i2_fround
 48308  012694  C024  F031         	movff	?i2_fround,i2___ftadd@f2
 48309  012698  C025  F032         	movff	?i2_fround+1,i2___ftadd@f2+1
 48310  01269C  C026  F033         	movff	?i2_fround+2,i2___ftadd@f2+2
 48311  0126A0  EC0E  F0B6         	call	i2___ftadd	;wreg free
 48312  0126A4  C02E  F081         	movff	?i2___ftadd,i2sprintf@fval
 48313  0126A8  C02F  F082         	movff	?i2___ftadd+1,i2sprintf@fval+1
 48314  0126AC  C030  F083         	movff	?i2___ftadd+2,i2sprintf@fval+2
 48315  0126B0                     i2l11656:
 48316                           
 48317                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 48318  0126B0  0100               	movlb	0	; () banked
 48319  0126B2  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 48320  0126B4  0A80               	xorlw	128
 48321  0126B6  6EF3               	movwf	prodl,c
 48322  0126B8  0E80               	movlw	128
 48323  0126BA  5CF3               	subwf	prodl,w,c
 48324  0126BC  0E0A               	movlw	10
 48325  0126BE  B4D8               	btfsc	status,2,c
 48326  0126C0  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 48327  0126C2  B0D8               	btfsc	status,0,c
 48328  0126C4  D028               	goto	i2l11664
 48329                           
 48330                           ; BSR set to: 0
 48331  0126C6  0E7F               	movlw	127
 48332  0126C8  0100               	movlb	0	; () banked
 48333  0126CA  1583               	andwf	(i2sprintf@fval+2)& (0+255),w,b
 48334  0126CC  0100               	movlb	0	; () banked
 48335  0126CE  1182               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
 48336  0126D0  0100               	movlb	0	; () banked
 48337  0126D2  1181               	iorwf	i2sprintf@fval& (0+255),w,b
 48338  0126D4  B4D8               	btfsc	status,2,c
 48339  0126D6  D06B               	goto	i2l11680
 48340                           
 48341                           ; BSR set to: 0
 48342  0126D8  C081  F03A         	movff	i2sprintf@fval,i2___fttol@f1
 48343  0126DC  C082  F03B         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 48344  0126E0  C083  F03C         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 48345  0126E4  ECE5  F0C7         	call	i2___fttol	;wreg free
 48346  0126E8  C03A  F050         	movff	?i2___fttol,??i2_sprintf
 48347  0126EC  C03B  F051         	movff	?i2___fttol+1,??i2_sprintf+1
 48348  0126F0  C03C  F052         	movff	?i2___fttol+2,??i2_sprintf+2
 48349  0126F4  C03D  F053         	movff	?i2___fttol+3,??i2_sprintf+3
 48350  0126F8  5053               	movf	??i2_sprintf+3,w,c
 48351  0126FA  1050               	iorwf	??i2_sprintf,w,c
 48352  0126FC  1051               	iorwf	??i2_sprintf+1,w,c
 48353  0126FE  1052               	iorwf	??i2_sprintf+2,w,c
 48354  012700  A4D8               	btfss	status,2,c
 48355  012702  D055               	goto	i2l11680
 48356  012704  0100               	movlb	0	; () banked
 48357  012706  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 48358  012708  0A80               	xorlw	128
 48359  01270A  0F80               	addlw	-128
 48360  01270C  0E02               	movlw	2
 48361  01270E  B4D8               	btfsc	status,2,c
 48362  012710  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 48363  012712  A0D8               	btfss	status,0,c
 48364  012714  D04C               	goto	i2l11680
 48365  012716                     i2l11664:
 48366                           
 48367                           ; BSR set to: 0
 48368                           ;doprnt.c: 1129: if(integ < 4.294967296){
 48369  012716  C073  F001         	movff	i2sprintf@integ,i2___ftge@ff1
 48370  01271A  C074  F002         	movff	i2sprintf@integ+1,i2___ftge@ff1+1
 48371  01271E  C075  F003         	movff	i2sprintf@integ+2,i2___ftge@ff1+2
 48372  012722  0E70               	movlw	112
 48373  012724  6E04               	movwf	i2___ftge@ff2,c
 48374  012726  0E89               	movlw	137
 48375  012728  6E05               	movwf	i2___ftge@ff2+1,c
 48376  01272A  0E40               	movlw	64
 48377  01272C  6E06               	movwf	i2___ftge@ff2+2,c
 48378  01272E  EC49  F0D3         	call	i2___ftge	;wreg free
 48379  012732  B0D8               	btfsc	status,0,c
 48380  012734  D003               	goto	i2l11668
 48381                           
 48382                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 48383  012736  0100               	movlb	0	; () banked
 48384  012738  0EF7               	movlw	247
 48385  01273A  D002               	goto	L50
 48386  01273C                     i2l11668:
 48387                           
 48388                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 48389  01273C  0100               	movlb	0	; () banked
 48390  01273E  0EF8               	movlw	248
 48391  012740                     L50:
 48392  012740  0100               	movlb	0	; () banked
 48393  012742  277F               	addwf	i2sprintf@exp& (0+255),f,b
 48394  012744  0EFF               	movlw	255
 48395  012746  0100               	movlb	0	; () banked
 48396  012748  2380               	addwfc	(i2sprintf@exp+1)& (0+255),f,b
 48397                           
 48398                           ; BSR set to: 0
 48399                           ;doprnt.c: 1133: }
 48400                           ;doprnt.c: 1134: integ = scale(exp);
 48401                           
 48402                           ; BSR set to: 0
 48403  01274A  0100               	movlb	0	; () banked
 48404  01274C  517F               	movf	i2sprintf@exp& (0+255),w,b
 48405  01274E  ECBC  F0FD         	call	i2_scale
 48406  012752  C024  F073         	movff	?i2_scale,i2sprintf@integ
 48407  012756  C025  F074         	movff	?i2_scale+1,i2sprintf@integ+1
 48408  01275A  C026  F075         	movff	?i2_scale+2,i2sprintf@integ+2
 48409                           
 48410                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 48411  01275E  C081  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
 48412  012762  C082  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
 48413  012766  C083  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
 48414  01276A  C073  F004         	movff	i2sprintf@integ,i2__tdiv_to_l_@f2
 48415  01276E  C074  F005         	movff	i2sprintf@integ+1,i2__tdiv_to_l_@f2+1
 48416  012772  C075  F006         	movff	i2sprintf@integ+2,i2__tdiv_to_l_@f2+2
 48417  012776  EC5F  F0C0         	call	i2__tdiv_to_l_	;wreg free
 48418  01277A  C001  F063         	movff	?i2__tdiv_to_l_,i2_sprintf$9357
 48419  01277E  C002  F064         	movff	?i2__tdiv_to_l_+1,i2_sprintf$9357+1
 48420  012782  C003  F065         	movff	?i2__tdiv_to_l_+2,i2_sprintf$9357+2
 48421  012786  C004  F066         	movff	?i2__tdiv_to_l_+3,i2_sprintf$9357+3
 48422  01278A  C063  F076         	movff	i2_sprintf$9357,i2sprintf@_val
 48423  01278E  C064  F077         	movff	i2_sprintf$9357+1,i2sprintf@_val+1
 48424  012792  C065  F078         	movff	i2_sprintf$9357+2,i2sprintf@_val+2
 48425  012796  C066  F079         	movff	i2_sprintf$9357+3,i2sprintf@_val+3
 48426                           
 48427                           ;doprnt.c: 1138: fval = 0.0;
 48428  01279A  0E00               	movlw	0
 48429  01279C  0100               	movlb	0	; () banked
 48430  01279E  6F81               	movwf	i2sprintf@fval& (0+255),b
 48431  0127A0  0E00               	movlw	0
 48432  0127A2  0100               	movlb	0	; () banked
 48433  0127A4  6F82               	movwf	(i2sprintf@fval+1)& (0+255),b
 48434  0127A6  0E00               	movlw	0
 48435  0127A8  0100               	movlb	0	; () banked
 48436  0127AA  6F83               	movwf	(i2sprintf@fval+2)& (0+255),b
 48437                           
 48438                           ;doprnt.c: 1139: } else {
 48439  0127AC  D034               	goto	i2l11684
 48440  0127AE                     i2l11680:
 48441                           
 48442                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 48443  0127AE  C081  F03A         	movff	i2sprintf@fval,i2___fttol@f1
 48444  0127B2  C082  F03B         	movff	i2sprintf@fval+1,i2___fttol@f1+1
 48445  0127B6  C083  F03C         	movff	i2sprintf@fval+2,i2___fttol@f1+2
 48446  0127BA  ECE5  F0C7         	call	i2___fttol	;wreg free
 48447  0127BE  C03A  F076         	movff	?i2___fttol,i2sprintf@_val
 48448  0127C2  C03B  F077         	movff	?i2___fttol+1,i2sprintf@_val+1
 48449  0127C6  C03C  F078         	movff	?i2___fttol+2,i2sprintf@_val+2
 48450  0127CA  C03D  F079         	movff	?i2___fttol+3,i2sprintf@_val+3
 48451                           
 48452                           ;doprnt.c: 1141: fval -= (double)_val._val;
 48453  0127CE  C081  F03A         	movff	i2sprintf@fval,i2___ftsub@f1
 48454  0127D2  C082  F03B         	movff	i2sprintf@fval+1,i2___ftsub@f1+1
 48455  0127D6  C083  F03C         	movff	i2sprintf@fval+2,i2___ftsub@f1+2
 48456  0127DA  C076  F009         	movff	i2sprintf@_val,i2___lltoft@c
 48457  0127DE  C077  F00A         	movff	i2sprintf@_val+1,i2___lltoft@c+1
 48458  0127E2  C078  F00B         	movff	i2sprintf@_val+2,i2___lltoft@c+2
 48459  0127E6  C079  F00C         	movff	i2sprintf@_val+3,i2___lltoft@c+3
 48460  0127EA  EC63  F0D7         	call	i2___lltoft	;wreg free
 48461  0127EE  C009  F03D         	movff	?i2___lltoft,i2___ftsub@f2
 48462  0127F2  C00A  F03E         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 48463  0127F6  C00B  F03F         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 48464  0127FA  EC30  F0DA         	call	i2___ftsub	;wreg free
 48465  0127FE  C03A  F081         	movff	?i2___ftsub,i2sprintf@fval
 48466  012802  C03B  F082         	movff	?i2___ftsub+1,i2sprintf@fval+1
 48467  012806  C03C  F083         	movff	?i2___ftsub+2,i2sprintf@fval+2
 48468                           
 48469                           ;doprnt.c: 1142: exp = 0;
 48470  01280A  0E00               	movlw	0
 48471  01280C  0100               	movlb	0	; () banked
 48472  01280E  6F80               	movwf	(i2sprintf@exp+1)& (0+255),b
 48473  012810  0E00               	movlw	0
 48474  012812  0100               	movlb	0	; () banked
 48475  012814  6F7F               	movwf	i2sprintf@exp& (0+255),b
 48476  012816                     i2l11684:
 48477                           
 48478                           ; BSR set to: 0
 48479                           ;doprnt.c: 1143: }
 48480                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 48481  012816  0E01               	movlw	1
 48482  012818  0100               	movlb	0	; () banked
 48483  01281A  6F86               	movwf	i2sprintf@c& (0+255),b
 48484  01281C                     
 48485                           ; BSR set to: 0
 48486  01281C  0100               	movlb	0	; () banked
 48487  01281E  5186               	movf	i2sprintf@c& (0+255),w,b
 48488  012820  0A0A               	xorlw	10
 48489  012822  B4D8               	btfsc	status,2,c
 48490  012824  D021               	goto	i2l11698
 48491                           
 48492                           ; BSR set to: 0
 48493                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 48494                           
 48495                           ; BSR set to: 0
 48496                           
 48497                           ; BSR set to: 0
 48498  012826  0100               	movlb	0	; () banked
 48499  012828  5186               	movf	i2sprintf@c& (0+255),w,b
 48500  01282A  0D04               	mullw	4
 48501  01282C  0E8B               	movlw	low _dpowers
 48502  01282E  24F3               	addwf	prodl,w,c
 48503  012830  6EF6               	movwf	tblptrl,c
 48504  012832  0EFE               	movlw	high _dpowers
 48505  012834  20F4               	addwfc	prodh,w,c
 48506  012836  6EF7               	movwf	tblptrh,c
 48507  012838                     	if	1	;There are 3 active tblptr bytes
 48508  012838  6AF8               	clrf	tblptru,c
 48509  01283A  0E00               	movlw	low (__mediumconst shr (0+16))
 48510  01283C  22F8               	addwfc	tblptru,f,c
 48511  01283E                     	endif
 48512  01283E  0009               	tblrd		*+
 48513  012840  50F5               	movf	tablat,w,c
 48514  012842  0100               	movlb	0	; () banked
 48515  012844  5D76               	subwf	i2sprintf@_val& (0+255),w,b
 48516  012846  0009               	tblrd		*+
 48517  012848  50F5               	movf	tablat,w,c
 48518  01284A  0100               	movlb	0	; () banked
 48519  01284C  5977               	subwfb	(i2sprintf@_val+1)& (0+255),w,b
 48520  01284E  0009               	tblrd		*+
 48521  012850  50F5               	movf	tablat,w,c
 48522  012852  0100               	movlb	0	; () banked
 48523  012854  5978               	subwfb	(i2sprintf@_val+2)& (0+255),w,b
 48524  012856  0009               	tblrd		*+
 48525  012858  50F5               	movf	tablat,w,c
 48526  01285A  0100               	movlb	0	; () banked
 48527  01285C  5979               	subwfb	(i2sprintf@_val+3)& (0+255),w,b
 48528  01285E  A0D8               	btfss	status,0,c
 48529  012860  D003               	goto	i2l11698
 48530                           
 48531                           ; BSR set to: 0
 48532                           
 48533                           ; BSR set to: 0
 48534                           
 48535                           ; BSR set to: 0
 48536                           ;doprnt.c: 1147: break;
 48537  012862  0100               	movlb	0	; () banked
 48538  012864  2B86               	incf	i2sprintf@c& (0+255),f,b
 48539  012866  D7DA               	goto	L51
 48540  012868                     i2l11698:
 48541                           
 48542                           ; BSR set to: 0
 48543                           ;doprnt.c: 1151: width -= prec + c + exp;
 48544  012868  0100               	movlb	0	; () banked
 48545  01286A  C086  F050         	movff	i2sprintf@c,??i2_sprintf
 48546  01286E  6A51               	clrf	(??i2_sprintf+1)& (0+255),c
 48547  012870  BE50               	btfsc	??i2_sprintf& (0+255),7,c
 48548  012872  0651               	decf	(??i2_sprintf+1)& (0+255),f,c
 48549  012874  0100               	movlb	0	; () banked
 48550  012876  5184               	movf	i2sprintf@prec& (0+255),w,b
 48551  012878  2650               	addwf	??i2_sprintf,f,c
 48552  01287A  0100               	movlb	0	; () banked
 48553  01287C  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48554  01287E  2251               	addwfc	??i2_sprintf+1,f,c
 48555  012880  0100               	movlb	0	; () banked
 48556  012882  517F               	movf	i2sprintf@exp& (0+255),w,b
 48557  012884  2650               	addwf	??i2_sprintf,f,c
 48558  012886  0100               	movlb	0	; () banked
 48559  012888  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 48560  01288A  2251               	addwfc	??i2_sprintf+1,f,c
 48561  01288C  5050               	movf	??i2_sprintf,w,c
 48562  01288E  0100               	movlb	0	; () banked
 48563  012890  5F7D               	subwf	i2sprintf@width& (0+255),f,b
 48564  012892  5051               	movf	??i2_sprintf+1,w,c
 48565  012894  0100               	movlb	0	; () banked
 48566  012896  5B7E               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 48567                           
 48568                           ;doprnt.c: 1152: if(
 48569                           ;doprnt.c: 1156: prec)
 48570  012898  0100               	movlb	0	; () banked
 48571  01289A  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48572  01289C  1184               	iorwf	i2sprintf@prec& (0+255),w,b
 48573  01289E  B4D8               	btfsc	status,2,c
 48574  0128A0  D004               	goto	i2l11702
 48575                           
 48576                           ; BSR set to: 0
 48577                           ;doprnt.c: 1157: width--;
 48578  0128A2  0100               	movlb	0	; () banked
 48579  0128A4  077D               	decf	i2sprintf@width& (0+255),f,b
 48580  0128A6  A0D8               	btfss	status,0,c
 48581  0128A8  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 48582  0128AA                     i2l11702:
 48583                           
 48584                           ; BSR set to: 0
 48585                           ;doprnt.c: 1158: if(flag & 0x03)
 48586  0128AA  0E03               	movlw	3
 48587  0128AC  0100               	movlb	0	; () banked
 48588  0128AE  157B               	andwf	i2sprintf@flag& (0+255),w,b
 48589  0128B0  6E50               	movwf	??i2_sprintf& (0+255),c
 48590  0128B2  0E00               	movlw	0
 48591  0128B4  0100               	movlb	0	; () banked
 48592  0128B6  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48593  0128B8  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48594  0128BA  5051               	movf	??i2_sprintf+1,w,c
 48595  0128BC  1050               	iorwf	??i2_sprintf,w,c
 48596  0128BE  B4D8               	btfsc	status,2,c
 48597  0128C0  D010               	goto	i2l11714
 48598  0128C2  D00B               	goto	L52
 48599  0128C4                     i2l11706:
 48600                           
 48601                           ; BSR set to: 0
 48602                           ;doprnt.c: 1190: ((*sp++ = (' ')),(++ccnt));
 48603  0128C4  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48604  0128C8  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48605  0128CC  0E20               	movlw	32
 48606  0128CE  6EDF               	movwf	indf2,c
 48607                           
 48608                           ; BSR set to: 0
 48609  0128D0  4A49               	infsnz	i2sprintf@sp,f,c
 48610  0128D2  2A4A               	incf	i2sprintf@sp+1,f,c
 48611                           
 48612                           ; BSR set to: 0
 48613  0128D4  0100               	movlb	0	; () banked
 48614  0128D6  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48615  0128D8  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48616  0128DA                     L52:
 48617                           
 48618                           ; BSR set to: 0
 48619                           ;doprnt.c: 1191: width--;
 48620  0128DA  0100               	movlb	0	; () banked
 48621  0128DC  077D               	decf	i2sprintf@width& (0+255),f,b
 48622  0128DE  A0D8               	btfss	status,0,c
 48623  0128E0  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 48624  0128E2                     i2l11714:
 48625                           
 48626                           ; BSR set to: 0
 48627  0128E2  0100               	movlb	0	; () banked
 48628  0128E4  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 48629  0128E6  0A80               	xorlw	128
 48630  0128E8  6EF3               	movwf	prodl,c
 48631  0128EA  0E80               	movlw	128
 48632  0128EC  5CF3               	subwf	prodl,w,c
 48633  0128EE  0E01               	movlw	1
 48634  0128F0  B4D8               	btfsc	status,2,c
 48635  0128F2  5D7D               	subwf	i2sprintf@width& (0+255),w,b
 48636  0128F4  B0D8               	btfsc	status,0,c
 48637  0128F6  D7E6               	goto	i2l11706
 48638                           
 48639                           ; BSR set to: 0
 48640                           ;doprnt.c: 1192: }
 48641                           ;doprnt.c: 1197: if(flag & 0x03)
 48642                           
 48643                           ; BSR set to: 0
 48644  0128F8  0E03               	movlw	3
 48645  0128FA  0100               	movlb	0	; () banked
 48646  0128FC  157B               	andwf	i2sprintf@flag& (0+255),w,b
 48647  0128FE  6E50               	movwf	??i2_sprintf& (0+255),c
 48648  012900  0E00               	movlw	0
 48649  012902  0100               	movlb	0	; () banked
 48650  012904  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 48651  012906  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 48652  012908  5051               	movf	??i2_sprintf+1,w,c
 48653  01290A  1050               	iorwf	??i2_sprintf,w,c
 48654  01290C  B4D8               	btfsc	status,2,c
 48655  01290E  D057               	goto	i2l11734
 48656                           
 48657                           ; BSR set to: 0
 48658                           ;doprnt.c: 1199: ((*sp++ = ('-')),(++ccnt));
 48659  012910  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48660  012914  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48661  012918  0E2D               	movlw	45
 48662  01291A  D04B               	goto	L53
 48663  01291C                     i2l11724:
 48664                           
 48665                           ; BSR set to: 0
 48666                           ;doprnt.c: 1209: {
 48667                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
 48668  01291C  C076  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 48669  012920  C077  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 48670  012924  C078  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 48671  012928  C079  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 48672  01292C  0100               	movlb	0	; () banked
 48673  01292E  5186               	movf	i2sprintf@c& (0+255),w,b
 48674  012930  0D04               	mullw	4
 48675  012932  0E8B               	movlw	low _dpowers
 48676  012934  24F3               	addwf	prodl,w,c
 48677  012936  6EF6               	movwf	tblptrl,c
 48678  012938  0EFE               	movlw	high _dpowers
 48679  01293A  20F4               	addwfc	prodh,w,c
 48680  01293C  6EF7               	movwf	tblptrh,c
 48681  01293E                     	if	1	;There are 3 active tblptr bytes
 48682  01293E  6AF8               	clrf	tblptru,c
 48683  012940  0E00               	movlw	low (__mediumconst shr (0+16))
 48684  012942  22F8               	addwfc	tblptru,f,c
 48685  012944                     	endif
 48686  012944  0009               	tblrd		*+
 48687  012946  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 48688  01294A  0009               	tblrd		*+
 48689  01294C  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 48690  012950  0009               	tblrd		*+
 48691  012952  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 48692  012956  000A               	tblrd		*-
 48693  012958  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 48694  01295C  ECA0  F0D4         	call	i2___lldiv	;wreg free
 48695  012960  C001  F069         	movff	?i2___lldiv,i2sprintf@vd
 48696  012964  C002  F06A         	movff	?i2___lldiv+1,i2sprintf@vd+1
 48697  012968  C003  F06B         	movff	?i2___lldiv+2,i2sprintf@vd+2
 48698  01296C  C004  F06C         	movff	?i2___lldiv+3,i2sprintf@vd+3
 48699                           
 48700                           ;doprnt.c: 1211: vd %= 10;
 48701  012970  C069  F001         	movff	i2sprintf@vd,i2___llmod@dividend
 48702  012974  C06A  F002         	movff	i2sprintf@vd+1,i2___llmod@dividend+1
 48703  012978  C06B  F003         	movff	i2sprintf@vd+2,i2___llmod@dividend+2
 48704  01297C  C06C  F004         	movff	i2sprintf@vd+3,i2___llmod@dividend+3
 48705  012980  0E0A               	movlw	10
 48706  012982  6E05               	movwf	i2___llmod@divisor,c
 48707  012984  0E00               	movlw	0
 48708  012986  6E06               	movwf	i2___llmod@divisor+1,c
 48709  012988  0E00               	movlw	0
 48710  01298A  6E07               	movwf	i2___llmod@divisor+2,c
 48711  01298C  0E00               	movlw	0
 48712  01298E  6E08               	movwf	i2___llmod@divisor+3,c
 48713  012990  ECA2  F0D6         	call	i2___llmod	;wreg free
 48714  012994  C001  F069         	movff	?i2___llmod,i2sprintf@vd
 48715  012998  C002  F06A         	movff	?i2___llmod+1,i2sprintf@vd+1
 48716  01299C  C003  F06B         	movff	?i2___llmod+2,i2sprintf@vd+2
 48717  0129A0  C004  F06C         	movff	?i2___llmod+3,i2sprintf@vd+3
 48718                           
 48719                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)),(++ccnt));
 48720  0129A4  0100               	movlb	0	; () banked
 48721  0129A6  5169               	movf	i2sprintf@vd& (0+255),w,b
 48722  0129A8  0F30               	addlw	48
 48723  0129AA  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48724  0129AE  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48725  0129B2                     L53:
 48726  0129B2  6EDF               	movwf	indf2,c
 48727                           
 48728                           ; BSR set to: 0
 48729  0129B4  4A49               	infsnz	i2sprintf@sp,f,c
 48730  0129B6  2A4A               	incf	i2sprintf@sp+1,f,c
 48731                           
 48732                           ; BSR set to: 0
 48733  0129B8  0100               	movlb	0	; () banked
 48734  0129BA  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48735  0129BC  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48736  0129BE                     i2l11734:
 48737                           
 48738                           ; BSR set to: 0
 48739  0129BE  0100               	movlb	0	; () banked
 48740  0129C0  0786               	decf	i2sprintf@c& (0+255),f,b
 48741  0129C2  0100               	movlb	0	; () banked
 48742  0129C4  2986               	incf	i2sprintf@c& (0+255),w,b
 48743  0129C6  B4D8               	btfsc	status,2,c
 48744  0129C8  D010               	goto	i2l11744
 48745  0129CA  D7A8               	goto	i2l11724
 48746  0129CC                     i2l11736:
 48747                           
 48748                           ; BSR set to: 0
 48749                           ;doprnt.c: 1217: ((*sp++ = ('0')),(++ccnt));
 48750  0129CC  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48751  0129D0  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48752  0129D4  0E30               	movlw	48
 48753  0129D6  6EDF               	movwf	indf2,c
 48754                           
 48755                           ; BSR set to: 0
 48756  0129D8  4A49               	infsnz	i2sprintf@sp,f,c
 48757  0129DA  2A4A               	incf	i2sprintf@sp+1,f,c
 48758                           
 48759                           ; BSR set to: 0
 48760  0129DC  0100               	movlb	0	; () banked
 48761  0129DE  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48762  0129E0  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48763                           
 48764                           ; BSR set to: 0
 48765                           ;doprnt.c: 1218: exp--;
 48766  0129E2  0100               	movlb	0	; () banked
 48767  0129E4  077F               	decf	i2sprintf@exp& (0+255),f,b
 48768  0129E6  A0D8               	btfss	status,0,c
 48769  0129E8  0780               	decf	(i2sprintf@exp+1)& (0+255),f,b
 48770  0129EA                     i2l11744:
 48771                           
 48772                           ; BSR set to: 0
 48773  0129EA  0100               	movlb	0	; () banked
 48774  0129EC  5180               	movf	(i2sprintf@exp+1)& (0+255),w,b
 48775  0129EE  0A80               	xorlw	128
 48776  0129F0  6EF3               	movwf	prodl,c
 48777  0129F2  0E80               	movlw	128
 48778  0129F4  5CF3               	subwf	prodl,w,c
 48779  0129F6  0E01               	movlw	1
 48780  0129F8  B4D8               	btfsc	status,2,c
 48781  0129FA  5D7F               	subwf	i2sprintf@exp& (0+255),w,b
 48782  0129FC  B0D8               	btfsc	status,0,c
 48783  0129FE  D7E6               	goto	i2l11736
 48784                           
 48785                           ; BSR set to: 0
 48786                           ;doprnt.c: 1219: }
 48787                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 48788                           
 48789                           ; BSR set to: 0
 48790  012A00  0100               	movlb	0	; () banked
 48791  012A02  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 48792  012A04  0A80               	xorlw	128
 48793  012A06  0F80               	addlw	-128
 48794  012A08  0E09               	movlw	9
 48795  012A0A  B4D8               	btfsc	status,2,c
 48796  012A0C  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 48797  012A0E  A0D8               	btfss	status,0,c
 48798  012A10  D004               	goto	i2l2093
 48799                           
 48800                           ; BSR set to: 0
 48801                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
 48802  012A12  0E08               	movlw	8
 48803  012A14  0100               	movlb	0	; () banked
 48804  012A16  6F86               	movwf	i2sprintf@c& (0+255),b
 48805  012A18  D002               	goto	i2l11750
 48806  012A1A                     i2l2093:
 48807                           
 48808                           ; BSR set to: 0
 48809                           ;doprnt.c: 1222: else
 48810                           ;doprnt.c: 1223: c = prec;
 48811  012A1A  C084  F086         	movff	i2sprintf@prec,i2sprintf@c
 48812  012A1E                     i2l11750:
 48813                           
 48814                           ; BSR set to: 0
 48815                           ;doprnt.c: 1224: prec -= c;
 48816  012A1E  0100               	movlb	0	; () banked
 48817  012A20  5186               	movf	i2sprintf@c& (0+255),w,b
 48818  012A22  0100               	movlb	0	; () banked
 48819  012A24  5F84               	subwf	i2sprintf@prec& (0+255),f,b
 48820  012A26  0E00               	movlw	0
 48821  012A28  0100               	movlb	0	; () banked
 48822  012A2A  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 48823  012A2C  0EFF               	movlw	255
 48824  012A2E  0100               	movlb	0	; () banked
 48825  012A30  5B85               	subwfb	(i2sprintf@prec+1)& (0+255),f,b
 48826                           
 48827                           ; BSR set to: 0
 48828                           ;doprnt.c: 1228: if(c)
 48829  012A32  0100               	movlb	0	; () banked
 48830  012A34  5186               	movf	i2sprintf@c& (0+255),w,b
 48831  012A36  B4D8               	btfsc	status,2,c
 48832  012A38  D00B               	goto	i2l11760
 48833                           
 48834                           ; BSR set to: 0
 48835                           ;doprnt.c: 1230: ((*sp++ = ('.')),(++ccnt));
 48836  012A3A  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48837  012A3E  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48838  012A42  0E2E               	movlw	46
 48839  012A44  6EDF               	movwf	indf2,c
 48840                           
 48841                           ; BSR set to: 0
 48842  012A46  4A49               	infsnz	i2sprintf@sp,f,c
 48843  012A48  2A4A               	incf	i2sprintf@sp+1,f,c
 48844                           
 48845                           ; BSR set to: 0
 48846  012A4A  0100               	movlb	0	; () banked
 48847  012A4C  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48848  012A4E  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48849  012A50                     i2l11760:
 48850                           
 48851                           ; BSR set to: 0
 48852                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 48853  012A50  0100               	movlb	0	; () banked
 48854  012A52  5186               	movf	i2sprintf@c& (0+255),w,b
 48855  012A54  ECBC  F0FD         	call	i2_scale
 48856  012A58  C024  F060         	movff	?i2_scale,i2_sprintf$11863
 48857  012A5C  C025  F061         	movff	?i2_scale+1,i2_sprintf$11863+1
 48858  012A60  C026  F062         	movff	?i2_scale+2,i2_sprintf$11863+2
 48859                           
 48860                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 48861  012A64  C081  F018         	movff	i2sprintf@fval,i2___ftmul@f2
 48862  012A68  C082  F019         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
 48863  012A6C  C083  F01A         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
 48864  012A70  C060  F015         	movff	i2_sprintf$11863,i2___ftmul@f1
 48865  012A74  C061  F016         	movff	i2_sprintf$11863+1,i2___ftmul@f1+1
 48866  012A78  C062  F017         	movff	i2_sprintf$11863+2,i2___ftmul@f1+2
 48867  012A7C  EC60  F0C8         	call	i2___ftmul	;wreg free
 48868  012A80  C015  F03A         	movff	?i2___ftmul,i2___fttol@f1
 48869  012A84  C016  F03B         	movff	?i2___ftmul+1,i2___fttol@f1+1
 48870  012A88  C017  F03C         	movff	?i2___ftmul+2,i2___fttol@f1+2
 48871  012A8C  ECE5  F0C7         	call	i2___fttol	;wreg free
 48872  012A90  C03A  F076         	movff	?i2___fttol,i2sprintf@_val
 48873  012A94  C03B  F077         	movff	?i2___fttol+1,i2sprintf@_val+1
 48874  012A98  C03C  F078         	movff	?i2___fttol+2,i2sprintf@_val+2
 48875  012A9C  C03D  F079         	movff	?i2___fttol+3,i2sprintf@_val+3
 48876                           
 48877                           ;doprnt.c: 1237: while(c--) {
 48878  012AA0  D07B               	goto	i2l11776
 48879  012AA2                     i2l11764:
 48880                           
 48881                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
 48882  012AA2  C076  F001         	movff	i2sprintf@_val,i2___lldiv@dividend
 48883  012AA6  C077  F002         	movff	i2sprintf@_val+1,i2___lldiv@dividend+1
 48884  012AAA  C078  F003         	movff	i2sprintf@_val+2,i2___lldiv@dividend+2
 48885  012AAE  C079  F004         	movff	i2sprintf@_val+3,i2___lldiv@dividend+3
 48886  012AB2  0100               	movlb	0	; () banked
 48887  012AB4  5186               	movf	i2sprintf@c& (0+255),w,b
 48888  012AB6  0D04               	mullw	4
 48889  012AB8  0E8B               	movlw	low _dpowers
 48890  012ABA  24F3               	addwf	prodl,w,c
 48891  012ABC  6EF6               	movwf	tblptrl,c
 48892  012ABE  0EFE               	movlw	high _dpowers
 48893  012AC0  20F4               	addwfc	prodh,w,c
 48894  012AC2  6EF7               	movwf	tblptrh,c
 48895  012AC4                     	if	1	;There are 3 active tblptr bytes
 48896  012AC4  6AF8               	clrf	tblptru,c
 48897  012AC6  0E00               	movlw	low (__mediumconst shr (0+16))
 48898  012AC8  22F8               	addwfc	tblptru,f,c
 48899  012ACA                     	endif
 48900  012ACA  0009               	tblrd		*+
 48901  012ACC  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 48902  012AD0  0009               	tblrd		*+
 48903  012AD2  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 48904  012AD6  0009               	tblrd		*+
 48905  012AD8  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 48906  012ADC  000A               	tblrd		*-
 48907  012ADE  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 48908  012AE2  ECA0  F0D4         	call	i2___lldiv	;wreg free
 48909  012AE6  C001  F06D         	movff	?i2___lldiv,i2sprintf@vd_9359
 48910  012AEA  C002  F06E         	movff	?i2___lldiv+1,i2sprintf@vd_9359+1
 48911  012AEE  C003  F06F         	movff	?i2___lldiv+2,i2sprintf@vd_9359+2
 48912  012AF2  C004  F070         	movff	?i2___lldiv+3,i2sprintf@vd_9359+3
 48913                           
 48914                           ;doprnt.c: 1239: vd %= 10;
 48915  012AF6  C06D  F001         	movff	i2sprintf@vd_9359,i2___llmod@dividend
 48916  012AFA  C06E  F002         	movff	i2sprintf@vd_9359+1,i2___llmod@dividend+1
 48917  012AFE  C06F  F003         	movff	i2sprintf@vd_9359+2,i2___llmod@dividend+2
 48918  012B02  C070  F004         	movff	i2sprintf@vd_9359+3,i2___llmod@dividend+3
 48919  012B06  0E0A               	movlw	10
 48920  012B08  6E05               	movwf	i2___llmod@divisor,c
 48921  012B0A  0E00               	movlw	0
 48922  012B0C  6E06               	movwf	i2___llmod@divisor+1,c
 48923  012B0E  0E00               	movlw	0
 48924  012B10  6E07               	movwf	i2___llmod@divisor+2,c
 48925  012B12  0E00               	movlw	0
 48926  012B14  6E08               	movwf	i2___llmod@divisor+3,c
 48927  012B16  ECA2  F0D6         	call	i2___llmod	;wreg free
 48928  012B1A  C001  F06D         	movff	?i2___llmod,i2sprintf@vd_9359
 48929  012B1E  C002  F06E         	movff	?i2___llmod+1,i2sprintf@vd_9359+1
 48930  012B22  C003  F06F         	movff	?i2___llmod+2,i2sprintf@vd_9359+2
 48931  012B26  C004  F070         	movff	?i2___llmod+3,i2sprintf@vd_9359+3
 48932                           
 48933                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)),(++ccnt));
 48934  012B2A  0100               	movlb	0	; () banked
 48935  012B2C  516D               	movf	i2sprintf@vd_9359& (0+255),w,b
 48936  012B2E  0F30               	addlw	48
 48937  012B30  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48938  012B34  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48939  012B38  6EDF               	movwf	indf2,c
 48940                           
 48941                           ; BSR set to: 0
 48942  012B3A  4A49               	infsnz	i2sprintf@sp,f,c
 48943  012B3C  2A4A               	incf	i2sprintf@sp+1,f,c
 48944                           
 48945                           ; BSR set to: 0
 48946  012B3E  0100               	movlb	0	; () banked
 48947  012B40  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 48948  012B42  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 48949                           
 48950                           ; BSR set to: 0
 48951                           ;doprnt.c: 1241: _val._val %= dpowers[c];
 48952  012B44  C076  F001         	movff	i2sprintf@_val,i2___llmod@dividend
 48953  012B48  C077  F002         	movff	i2sprintf@_val+1,i2___llmod@dividend+1
 48954  012B4C  C078  F003         	movff	i2sprintf@_val+2,i2___llmod@dividend+2
 48955  012B50  C079  F004         	movff	i2sprintf@_val+3,i2___llmod@dividend+3
 48956  012B54  0100               	movlb	0	; () banked
 48957  012B56  5186               	movf	i2sprintf@c& (0+255),w,b
 48958  012B58  0D04               	mullw	4
 48959  012B5A  0E8B               	movlw	low _dpowers
 48960  012B5C  24F3               	addwf	prodl,w,c
 48961  012B5E  6EF6               	movwf	tblptrl,c
 48962  012B60  0EFE               	movlw	high _dpowers
 48963  012B62  20F4               	addwfc	prodh,w,c
 48964  012B64  6EF7               	movwf	tblptrh,c
 48965  012B66                     	if	1	;There are 3 active tblptr bytes
 48966  012B66  6AF8               	clrf	tblptru,c
 48967  012B68  0E00               	movlw	low (__mediumconst shr (0+16))
 48968  012B6A  22F8               	addwfc	tblptru,f,c
 48969  012B6C                     	endif
 48970  012B6C  0009               	tblrd		*+
 48971  012B6E  CFF5 F005          	movff	tablat,i2___llmod@divisor
 48972  012B72  0009               	tblrd		*+
 48973  012B74  CFF5 F006          	movff	tablat,i2___llmod@divisor+1
 48974  012B78  0009               	tblrd		*+
 48975  012B7A  CFF5 F007          	movff	tablat,i2___llmod@divisor+2
 48976  012B7E  000A               	tblrd		*-
 48977  012B80  CFF5 F008          	movff	tablat,i2___llmod@divisor+3
 48978  012B84  ECA2  F0D6         	call	i2___llmod	;wreg free
 48979  012B88  C001  F076         	movff	?i2___llmod,i2sprintf@_val
 48980  012B8C  C002  F077         	movff	?i2___llmod+1,i2sprintf@_val+1
 48981  012B90  C003  F078         	movff	?i2___llmod+2,i2sprintf@_val+2
 48982  012B94  C004  F079         	movff	?i2___llmod+3,i2sprintf@_val+3
 48983  012B98                     i2l11776:
 48984  012B98  0100               	movlb	0	; () banked
 48985  012B9A  0786               	decf	i2sprintf@c& (0+255),f,b
 48986  012B9C  0100               	movlb	0	; () banked
 48987  012B9E  2986               	incf	i2sprintf@c& (0+255),w,b
 48988  012BA0  B4D8               	btfsc	status,2,c
 48989  012BA2  D010               	goto	i2l11786
 48990  012BA4  D77E               	goto	i2l11764
 48991  012BA6                     i2l11778:
 48992                           
 48993                           ; BSR set to: 0
 48994                           ;doprnt.c: 1245: ((*sp++ = ('0')),(++ccnt));
 48995  012BA6  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 48996  012BAA  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 48997  012BAE  0E30               	movlw	48
 48998  012BB0  6EDF               	movwf	indf2,c
 48999                           
 49000                           ; BSR set to: 0
 49001  012BB2  4A49               	infsnz	i2sprintf@sp,f,c
 49002  012BB4  2A4A               	incf	i2sprintf@sp+1,f,c
 49003                           
 49004                           ; BSR set to: 0
 49005  012BB6  0100               	movlb	0	; () banked
 49006  012BB8  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 49007  012BBA  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 49008                           
 49009                           ; BSR set to: 0
 49010                           ;doprnt.c: 1246: prec--;
 49011  012BBC  0100               	movlb	0	; () banked
 49012  012BBE  0784               	decf	i2sprintf@prec& (0+255),f,b
 49013  012BC0  A0D8               	btfss	status,0,c
 49014  012BC2  0785               	decf	(i2sprintf@prec+1)& (0+255),f,b
 49015  012BC4                     i2l11786:
 49016                           
 49017                           ; BSR set to: 0
 49018  012BC4  0100               	movlb	0	; () banked
 49019  012BC6  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 49020  012BC8  1184               	iorwf	i2sprintf@prec& (0+255),w,b
 49021  012BCA  B4D8               	btfsc	status,2,c
 49022  012BCC  D0BF               	goto	i2l11840
 49023  012BCE  D7EB               	goto	i2l11778
 49024  012BD0                     i2l11788:
 49025                           
 49026                           ; BSR set to: 0
 49027                           ;doprnt.c: 1255: }
 49028                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 49029  012BD0  0100               	movlb	0	; () banked
 49030  012BD2  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 49031  012BD4  1184               	iorwf	i2sprintf@prec& (0+255),w,b
 49032  012BD6  A4D8               	btfss	status,2,c
 49033  012BD8  D00A               	goto	i2l11794
 49034                           
 49035                           ; BSR set to: 0
 49036  012BDA  0100               	movlb	0	; () banked
 49037  012BDC  5179               	movf	(i2sprintf@_val+3)& (0+255),w,b
 49038  012BDE  1176               	iorwf	i2sprintf@_val& (0+255),w,b
 49039  012BE0  1177               	iorwf	(i2sprintf@_val+1)& (0+255),w,b
 49040  012BE2  1178               	iorwf	(i2sprintf@_val+2)& (0+255),w,b
 49041  012BE4  A4D8               	btfss	status,2,c
 49042  012BE6  D003               	goto	i2l11794
 49043                           
 49044                           ; BSR set to: 0
 49045                           ;doprnt.c: 1300: prec++;
 49046  012BE8  0100               	movlb	0	; () banked
 49047  012BEA  4B84               	infsnz	i2sprintf@prec& (0+255),f,b
 49048  012BEC  2B85               	incf	(i2sprintf@prec+1)& (0+255),f,b
 49049  012BEE                     i2l11794:
 49050                           
 49051                           ; BSR set to: 0
 49052                           ;doprnt.c: 1348: if(c < prec)
 49053  012BEE  0E80               	movlw	128
 49054  012BF0  0100               	movlb	0	; () banked
 49055  012BF2  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 49056  012BF4  0E7F               	movlw	127
 49057  012BF6  6E50               	movwf	??i2_sprintf& (0+255),c
 49058  012BF8  0100               	movlb	0	; () banked
 49059  012BFA  5184               	movf	i2sprintf@prec& (0+255),w,b
 49060  012BFC  0100               	movlb	0	; () banked
 49061  012BFE  5D86               	subwf	i2sprintf@c& (0+255),w,b
 49062  012C00  0100               	movlb	0	; () banked
 49063  012C02  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 49064  012C04  0A80               	xorlw	128
 49065  012C06  5850               	subwfb	??i2_sprintf& (0+255),w,c
 49066  012C08  B0D8               	btfsc	status,0,c
 49067  012C0A  D003               	goto	i2l11798
 49068                           
 49069                           ; BSR set to: 0
 49070                           ;doprnt.c: 1349: c = prec;
 49071  012C0C  C084  F086         	movff	i2sprintf@prec,i2sprintf@c
 49072  012C10  D018               	goto	i2l11802
 49073  012C12                     i2l11798:
 49074                           
 49075                           ; BSR set to: 0
 49076                           ;doprnt.c: 1350: else if(prec < c)
 49077  012C12  0100               	movlb	0	; () banked
 49078  012C14  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 49079  012C16  0A80               	xorlw	128
 49080  012C18  6E50               	movwf	??i2_sprintf& (0+255),c
 49081  012C1A  0100               	movlb	0	; () banked
 49082  012C1C  5186               	movf	i2sprintf@c& (0+255),w,b
 49083  012C1E  0100               	movlb	0	; () banked
 49084  012C20  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 49085  012C22  0E80               	movlw	128
 49086  012C24  0100               	movlb	0	; () banked
 49087  012C26  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 49088  012C28  0E7F               	movlw	127
 49089  012C2A  5850               	subwfb	??i2_sprintf& (0+255),w,c
 49090  012C2C  B0D8               	btfsc	status,0,c
 49091  012C2E  D009               	goto	i2l11802
 49092                           
 49093                           ; BSR set to: 0
 49094                           ;doprnt.c: 1351: prec = c;
 49095  012C30  0100               	movlb	0	; () banked
 49096  012C32  5186               	movf	i2sprintf@c& (0+255),w,b
 49097  012C34  0100               	movlb	0	; () banked
 49098  012C36  6F84               	movwf	i2sprintf@prec& (0+255),b
 49099  012C38  0100               	movlb	0	; () banked
 49100  012C3A  6B85               	clrf	(i2sprintf@prec+1)& (0+255),b
 49101  012C3C  0100               	movlb	0	; () banked
 49102  012C3E  BF84               	btfsc	i2sprintf@prec& (0+255),7,b
 49103  012C40  0785               	decf	(i2sprintf@prec+1)& (0+255),f,b
 49104  012C42                     i2l11802:
 49105                           
 49106                           ; BSR set to: 0
 49107                           ;doprnt.c: 1354: if(width && flag & 0x03)
 49108  012C42  0100               	movlb	0	; () banked
 49109  012C44  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 49110  012C46  117D               	iorwf	i2sprintf@width& (0+255),w,b
 49111  012C48  B4D8               	btfsc	status,2,c
 49112  012C4A  D010               	goto	i2l11808
 49113                           
 49114                           ; BSR set to: 0
 49115  012C4C  0E03               	movlw	3
 49116  012C4E  0100               	movlb	0	; () banked
 49117  012C50  157B               	andwf	i2sprintf@flag& (0+255),w,b
 49118  012C52  6E50               	movwf	??i2_sprintf& (0+255),c
 49119  012C54  0E00               	movlw	0
 49120  012C56  0100               	movlb	0	; () banked
 49121  012C58  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 49122  012C5A  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 49123  012C5C  5051               	movf	??i2_sprintf+1,w,c
 49124  012C5E  1050               	iorwf	??i2_sprintf,w,c
 49125  012C60  B4D8               	btfsc	status,2,c
 49126  012C62  D004               	goto	i2l11808
 49127                           
 49128                           ; BSR set to: 0
 49129                           ;doprnt.c: 1355: width--;
 49130  012C64  0100               	movlb	0	; () banked
 49131  012C66  077D               	decf	i2sprintf@width& (0+255),f,b
 49132  012C68  A0D8               	btfss	status,0,c
 49133  012C6A  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 49134  012C6C                     i2l11808:
 49135                           
 49136                           ; BSR set to: 0
 49137                           ;doprnt.c: 1357: if(flag & 0x4000) {
 49138  012C6C  0100               	movlb	0	; () banked
 49139  012C6E  AD7C               	btfss	(i2sprintf@flag+1)& (0+255),6,b
 49140  012C70  D01D               	goto	i2l11816
 49141                           
 49142                           ; BSR set to: 0
 49143                           ;doprnt.c: 1358: if(width > prec)
 49144  012C72  0100               	movlb	0	; () banked
 49145  012C74  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 49146  012C76  0A80               	xorlw	128
 49147  012C78  6E50               	movwf	??i2_sprintf& (0+255),c
 49148  012C7A  0100               	movlb	0	; () banked
 49149  012C7C  517D               	movf	i2sprintf@width& (0+255),w,b
 49150  012C7E  0100               	movlb	0	; () banked
 49151  012C80  5D84               	subwf	i2sprintf@prec& (0+255),w,b
 49152  012C82  0100               	movlb	0	; () banked
 49153  012C84  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 49154  012C86  0A80               	xorlw	128
 49155  012C88  5850               	subwfb	??i2_sprintf& (0+255),w,c
 49156  012C8A  B0D8               	btfsc	status,0,c
 49157  012C8C  D009               	goto	i2l11814
 49158                           
 49159                           ; BSR set to: 0
 49160                           ;doprnt.c: 1359: width -= prec;
 49161  012C8E  0100               	movlb	0	; () banked
 49162  012C90  5184               	movf	i2sprintf@prec& (0+255),w,b
 49163  012C92  0100               	movlb	0	; () banked
 49164  012C94  5F7D               	subwf	i2sprintf@width& (0+255),f,b
 49165  012C96  0100               	movlb	0	; () banked
 49166  012C98  5185               	movf	(i2sprintf@prec+1)& (0+255),w,b
 49167  012C9A  0100               	movlb	0	; () banked
 49168  012C9C  5B7E               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 49169  012C9E  D006               	goto	i2l11816
 49170  012CA0                     i2l11814:
 49171                           
 49172                           ; BSR set to: 0
 49173                           ;doprnt.c: 1360: else
 49174                           ;doprnt.c: 1361: width = 0;
 49175  012CA0  0E00               	movlw	0
 49176  012CA2  0100               	movlb	0	; () banked
 49177  012CA4  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 49178  012CA6  0E00               	movlw	0
 49179  012CA8  0100               	movlb	0	; () banked
 49180  012CAA  6F7D               	movwf	i2sprintf@width& (0+255),b
 49181  012CAC                     i2l11816:
 49182                           
 49183                           ; BSR set to: 0
 49184                           ;doprnt.c: 1362: }
 49185                           ;doprnt.c: 1390: if(width > c)
 49186  012CAC  0E80               	movlw	128
 49187  012CAE  0100               	movlb	0	; () banked
 49188  012CB0  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 49189  012CB2  0E7F               	movlw	127
 49190  012CB4  6E50               	movwf	??i2_sprintf& (0+255),c
 49191  012CB6  0100               	movlb	0	; () banked
 49192  012CB8  517D               	movf	i2sprintf@width& (0+255),w,b
 49193  012CBA  0100               	movlb	0	; () banked
 49194  012CBC  5D86               	subwf	i2sprintf@c& (0+255),w,b
 49195  012CBE  0100               	movlb	0	; () banked
 49196  012CC0  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 49197  012CC2  0A80               	xorlw	128
 49198  012CC4  5850               	subwfb	??i2_sprintf& (0+255),w,c
 49199  012CC6  B0D8               	btfsc	status,0,c
 49200  012CC8  D00B               	goto	i2l11820
 49201                           
 49202                           ; BSR set to: 0
 49203                           ;doprnt.c: 1391: width -= c;
 49204  012CCA  0100               	movlb	0	; () banked
 49205  012CCC  5186               	movf	i2sprintf@c& (0+255),w,b
 49206  012CCE  0100               	movlb	0	; () banked
 49207  012CD0  5F7D               	subwf	i2sprintf@width& (0+255),f,b
 49208  012CD2  0E00               	movlw	0
 49209  012CD4  0100               	movlb	0	; () banked
 49210  012CD6  BF86               	btfsc	i2sprintf@c& (0+255),7,b
 49211  012CD8  0EFF               	movlw	255
 49212  012CDA  0100               	movlb	0	; () banked
 49213  012CDC  5B7E               	subwfb	(i2sprintf@width+1)& (0+255),f,b
 49214  012CDE  D006               	goto	i2l11822
 49215  012CE0                     i2l11820:
 49216                           
 49217                           ; BSR set to: 0
 49218                           ;doprnt.c: 1392: else
 49219                           ;doprnt.c: 1393: width = 0;
 49220  012CE0  0E00               	movlw	0
 49221  012CE2  0100               	movlb	0	; () banked
 49222  012CE4  6F7E               	movwf	(i2sprintf@width+1)& (0+255),b
 49223  012CE6  0E00               	movlw	0
 49224  012CE8  0100               	movlb	0	; () banked
 49225  012CEA  6F7D               	movwf	i2sprintf@width& (0+255),b
 49226  012CEC                     i2l11822:
 49227                           
 49228                           ; BSR set to: 0
 49229                           ;doprnt.c: 1431: {
 49230                           ;doprnt.c: 1433: if(width
 49231                           ;doprnt.c: 1437: )
 49232  012CEC  0100               	movlb	0	; () banked
 49233  012CEE  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 49234  012CF0  117D               	iorwf	i2sprintf@width& (0+255),w,b
 49235  012CF2  B4D8               	btfsc	status,2,c
 49236  012CF4  D014               	goto	i2l11832
 49237  012CF6                     i2l11824:
 49238                           
 49239                           ; BSR set to: 0
 49240                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
 49241  012CF6  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 49242  012CFA  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 49243  012CFE  0E20               	movlw	32
 49244  012D00  6EDF               	movwf	indf2,c
 49245                           
 49246                           ; BSR set to: 0
 49247  012D02  4A49               	infsnz	i2sprintf@sp,f,c
 49248  012D04  2A4A               	incf	i2sprintf@sp+1,f,c
 49249                           
 49250                           ; BSR set to: 0
 49251  012D06  0100               	movlb	0	; () banked
 49252  012D08  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 49253  012D0A  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 49254                           
 49255                           ; BSR set to: 0
 49256                           ;doprnt.c: 1440: while(--width);
 49257  012D0C  0100               	movlb	0	; () banked
 49258  012D0E  077D               	decf	i2sprintf@width& (0+255),f,b
 49259  012D10  A0D8               	btfss	status,0,c
 49260  012D12  077E               	decf	(i2sprintf@width+1)& (0+255),f,b
 49261  012D14  0100               	movlb	0	; () banked
 49262  012D16  517E               	movf	(i2sprintf@width+1)& (0+255),w,b
 49263  012D18  117D               	iorwf	i2sprintf@width& (0+255),w,b
 49264  012D1A  A4D8               	btfss	status,2,c
 49265  012D1C  D7EC               	goto	i2l11824
 49266  012D1E                     i2l11832:
 49267                           
 49268                           ; BSR set to: 0
 49269                           ;doprnt.c: 1447: if(flag & 0x03)
 49270  012D1E  0E03               	movlw	3
 49271  012D20  0100               	movlb	0	; () banked
 49272  012D22  157B               	andwf	i2sprintf@flag& (0+255),w,b
 49273  012D24  6E50               	movwf	??i2_sprintf& (0+255),c
 49274  012D26  0E00               	movlw	0
 49275  012D28  0100               	movlb	0	; () banked
 49276  012D2A  157C               	andwf	(i2sprintf@flag+1)& (0+255),w,b
 49277  012D2C  6E51               	movwf	(??i2_sprintf+1)& (0+255),c
 49278  012D2E  5051               	movf	??i2_sprintf+1,w,c
 49279  012D30  1050               	iorwf	??i2_sprintf,w,c
 49280  012D32  B4D8               	btfsc	status,2,c
 49281  012D34  D00B               	goto	i2l11840
 49282                           
 49283                           ; BSR set to: 0
 49284                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
 49285  012D36  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 49286  012D3A  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 49287  012D3E  0E2D               	movlw	45
 49288  012D40  6EDF               	movwf	indf2,c
 49289  012D42                     L49:
 49290                           
 49291                           ; BSR set to: 0
 49292  012D42  4A49               	infsnz	i2sprintf@sp,f,c
 49293  012D44  2A4A               	incf	i2sprintf@sp+1,f,c
 49294                           
 49295                           ; BSR set to: 0
 49296  012D46  0100               	movlb	0	; () banked
 49297  012D48  4B71               	infsnz	i2sprintf@ccnt& (0+255),f,b
 49298  012D4A  2B72               	incf	(i2sprintf@ccnt+1)& (0+255),f,b
 49299  012D4C                     i2l11840:
 49300                           
 49301                           ; BSR set to: 0
 49302  012D4C  C04B  FFF6         	movff	i2sprintf@f,tblptrl
 49303  012D50  C04C  FFF7         	movff	i2sprintf@f+1,tblptrh
 49304  012D54  4A4B               	infsnz	i2sprintf@f,f,c
 49305  012D56  2A4C               	incf	i2sprintf@f+1,f,c
 49306  012D58                     	if	0	;tblptru may be non-zero
 49307  012D58                     	endif
 49308  012D58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 49309  012D58  0E00               	movlw	low (__mediumconst shr (0+16))
 49310  012D5A  6EF8               	movwf	tblptru,c
 49311  012D5C                     	endif
 49312  012D5C  0008               	tblrd		*
 49313  012D5E  0100               	movlb	0	; () banked
 49314  012D60  CFF5 F086          	movff	tablat,i2sprintf@c
 49315  012D64  0100               	movlb	0	; () banked
 49316  012D66  6786               	tstfsz	i2sprintf@c& (0+255),b
 49317  012D68  EF8A  F091         	goto	i2l11564
 49318  012D6C                     i2l11842:
 49319                           
 49320                           ; BSR set to: 0
 49321                           ;doprnt.c: 1547: *sp = 0;
 49322  012D6C  C049  FFD9         	movff	i2sprintf@sp,fsr2l
 49323  012D70  C04A  FFDA         	movff	i2sprintf@sp+1,fsr2h
 49324  012D74  0E00               	movlw	0
 49325  012D76  6EDF               	movwf	indf2,c
 49326                           
 49327                           ; BSR set to: 0
 49328                           ;doprnt.c: 1549: return ccnt;
 49329  012D78  C071  F049         	movff	i2sprintf@ccnt,?i2_sprintf
 49330  012D7C  C072  F04A         	movff	i2sprintf@ccnt+1,?i2_sprintf+1
 49331  012D80  0012               	return	
 49332  012D82                     __end_ofi2_sprintf:
 49333                           	opt stack 0
 49334                           pclatu	equ	0xFFB
 49335                           pclath	equ	0xFFA
 49336                           tblptru	equ	0xFF8
 49337                           tblptrh	equ	0xFF7
 49338                           tblptrl	equ	0xFF6
 49339                           tablat	equ	0xFF5
 49340                           prodh	equ	0xFF4
 49341                           prodl	equ	0xFF3
 49342                           intcon	equ	0xFF2
 49343                           intcon2	equ	0xFF1
 49344                           intcon3	equ	0xFF0
 49345                           indf0	equ	0xFEF
 49346                           postinc0	equ	0xFEE
 49347                           fsr0h	equ	0xFEA
 49348                           fsr0l	equ	0xFE9
 49349                           wreg	equ	0xFE8
 49350                           indf1	equ	0xFE7
 49351                           postinc1	equ	0xFE6
 49352                           postdec1	equ	0xFE5
 49353                           fsr1h	equ	0xFE2
 49354                           fsr1l	equ	0xFE1
 49355                           indf2	equ	0xFDF
 49356                           postinc2	equ	0xFDE
 49357                           postdec2	equ	0xFDD
 49358                           fsr2h	equ	0xFDA
 49359                           fsr2l	equ	0xFD9
 49360                           status	equ	0xFD8
 49361                           
 49362 ;; *************** function i2_scale *****************
 49363 ;; Defined at:
 49364 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 49365 ;; Parameters:    Size  Location     Type
 49366 ;;  scl             1    wreg     char 
 49367 ;; Auto vars:     Size  Location     Type
 49368 ;;  scl             1   41[COMRAM] char 
 49369 ;; Return value:  Size  Location     Type
 49370 ;;                  3   35[COMRAM] char 
 49371 ;; Registers used:
 49372 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49373 ;; Tracked objects:
 49374 ;;		On entry : 0/0
 49375 ;;		On exit  : 0/0
 49376 ;;		Unchanged: 0/0
 49377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 49378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49381 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49382 ;;Total ram usage:        7 bytes
 49383 ;; Hardware stack levels used:    1
 49384 ;; Hardware stack levels required when called:    2
 49385 ;; This function calls:
 49386 ;;		i2___awdiv
 49387 ;;		i2___awmod
 49388 ;;		i2___ftmul
 49389 ;;		i2___wmul
 49390 ;; This function is called by:
 49391 ;;		i2_sprintf
 49392 ;; This function uses a non-reentrant model
 49393 ;;
 49394                           
 49395                           	psect	text146
 49396  01FB78                     __ptext146:
 49397                           	opt stack 0
 49398  01FB78                     i2_scale:
 49399                           	opt stack 16
 49400                           
 49401                           ; BSR set to: 0
 49402                           ;incstack = 0
 49403                           ;i2scale@scl stored from wreg
 49404  01FB78  6E2A               	movwf	i2scale@scl,c
 49405                           
 49406                           ;doprnt.c: 428: if(scl < 0) {
 49407  01FB7A  AE2A               	btfss	i2scale@scl,7,c
 49408  01FB7C  D113               	goto	i2l10854
 49409                           
 49410                           ;doprnt.c: 429: scl = -scl;
 49411  01FB7E  6C2A               	negf	i2scale@scl,c
 49412                           
 49413                           ;doprnt.c: 430: if(scl>=110)
 49414  01FB80  502A               	movf	i2scale@scl,w,c
 49415  01FB82  0A80               	xorlw	128
 49416  01FB84  0F12               	addlw	-238
 49417  01FB86  A0D8               	btfss	status,0,c
 49418  01FB88  D09A               	goto	i2l10844
 49419                           
 49420                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 49421  01FB8A  0E00               	movlw	0
 49422  01FB8C  6E12               	movwf	i2___wmul@multiplicand+1,c
 49423  01FB8E  0E03               	movlw	3
 49424  01FB90  6E11               	movwf	i2___wmul@multiplicand,c
 49425  01FB92  0E00               	movlw	0
 49426  01FB94  6E0A               	movwf	i2___awdiv@divisor+1,c
 49427  01FB96  0E0A               	movlw	10
 49428  01FB98  6E09               	movwf	i2___awdiv@divisor,c
 49429  01FB9A  0E00               	movlw	0
 49430  01FB9C  6E04               	movwf	i2___awmod@divisor+1,c
 49431  01FB9E  0E64               	movlw	100
 49432  01FBA0  6E03               	movwf	i2___awmod@divisor,c
 49433  01FBA2  502A               	movf	i2scale@scl,w,c
 49434  01FBA4  6E01               	movwf	i2___awmod@dividend,c
 49435  01FBA6  6A02               	clrf	i2___awmod@dividend+1,c
 49436  01FBA8  BE01               	btfsc	i2___awmod@dividend,7,c
 49437  01FBAA  0602               	decf	i2___awmod@dividend+1,f,c
 49438  01FBAC  EC01  F0D3         	call	i2___awmod	;wreg free
 49439  01FBB0  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 49440  01FBB4  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 49441  01FBB8  EC7C  F0D1         	call	i2___awdiv	;wreg free
 49442  01FBBC  0E09               	movlw	9
 49443  01FBBE  2407               	addwf	?i2___awdiv,w,c
 49444  01FBC0  6E0F               	movwf	i2___wmul@multiplier,c
 49445  01FBC2  0E00               	movlw	0
 49446  01FBC4  2008               	addwfc	?i2___awdiv+1,w,c
 49447  01FBC6  6E10               	movwf	i2___wmul@multiplier+1,c
 49448  01FBC8  ECBA  F0DB         	call	i2___wmul	;wreg free
 49449  01FBCC  0EB3               	movlw	low __npowers_
 49450  01FBCE  240F               	addwf	?i2___wmul,w,c
 49451  01FBD0  6EF6               	movwf	tblptrl,c
 49452  01FBD2  0EFE               	movlw	high __npowers_
 49453  01FBD4  2010               	addwfc	?i2___wmul+1,w,c
 49454  01FBD6  6EF7               	movwf	tblptrh,c
 49455  01FBD8                     	if	1	;There are 3 active tblptr bytes
 49456  01FBD8  6AF8               	clrf	tblptru,c
 49457  01FBDA  0E00               	movlw	low (__mediumconst shr (0+16))
 49458  01FBDC  22F8               	addwfc	tblptru,f,c
 49459  01FBDE                     	endif
 49460  01FBDE  0009               	tblrd		*+
 49461  01FBE0  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49462  01FBE4  0009               	tblrd		*+
 49463  01FBE6  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49464  01FBEA  000A               	tblrd		*-
 49465  01FBEC  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49466  01FBF0  0E00               	movlw	0
 49467  01FBF2  6E0A               	movwf	i2___awdiv@divisor+1,c
 49468  01FBF4  0E64               	movlw	100
 49469  01FBF6  6E09               	movwf	i2___awdiv@divisor,c
 49470  01FBF8  502A               	movf	i2scale@scl,w,c
 49471  01FBFA  6E07               	movwf	i2___awdiv@dividend,c
 49472  01FBFC  6A08               	clrf	i2___awdiv@dividend+1,c
 49473  01FBFE  BE07               	btfsc	i2___awdiv@dividend,7,c
 49474  01FC00  0608               	decf	i2___awdiv@dividend+1,f,c
 49475  01FC02  EC7C  F0D1         	call	i2___awdiv	;wreg free
 49476  01FC06  0E12               	movlw	18
 49477  01FC08  2407               	addwf	?i2___awdiv,w,c
 49478  01FC0A  6E0F               	movwf	i2___wmul@multiplier,c
 49479  01FC0C  0E00               	movlw	0
 49480  01FC0E  2008               	addwfc	?i2___awdiv+1,w,c
 49481  01FC10  6E10               	movwf	i2___wmul@multiplier+1,c
 49482  01FC12  0E00               	movlw	0
 49483  01FC14  6E12               	movwf	i2___wmul@multiplicand+1,c
 49484  01FC16  0E03               	movlw	3
 49485  01FC18  6E11               	movwf	i2___wmul@multiplicand,c
 49486  01FC1A  ECBA  F0DB         	call	i2___wmul	;wreg free
 49487  01FC1E  0EB3               	movlw	low __npowers_
 49488  01FC20  240F               	addwf	?i2___wmul,w,c
 49489  01FC22  6EF6               	movwf	tblptrl,c
 49490  01FC24  0EFE               	movlw	high __npowers_
 49491  01FC26  2010               	addwfc	?i2___wmul+1,w,c
 49492  01FC28  6EF7               	movwf	tblptrh,c
 49493  01FC2A                     	if	1	;There are 3 active tblptr bytes
 49494  01FC2A  6AF8               	clrf	tblptru,c
 49495  01FC2C  0E00               	movlw	low (__mediumconst shr (0+16))
 49496  01FC2E  22F8               	addwfc	tblptru,f,c
 49497  01FC30                     	endif
 49498  01FC30  0009               	tblrd		*+
 49499  01FC32  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49500  01FC36  0009               	tblrd		*+
 49501  01FC38  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49502  01FC3C  000A               	tblrd		*-
 49503  01FC3E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49504  01FC42  EC60  F0C8         	call	i2___ftmul	;wreg free
 49505  01FC46  C015  F027         	movff	?i2___ftmul,i2_scale$11862
 49506  01FC4A  C016  F028         	movff	?i2___ftmul+1,i2_scale$11862+1
 49507  01FC4E  C017  F029         	movff	?i2___ftmul+2,i2_scale$11862+2
 49508                           
 49509                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 49510  01FC52  C027  F015         	movff	i2_scale$11862,i2___ftmul@f1
 49511  01FC56  C028  F016         	movff	i2_scale$11862+1,i2___ftmul@f1+1
 49512  01FC5A  C029  F017         	movff	i2_scale$11862+2,i2___ftmul@f1+2
 49513  01FC5E  0E00               	movlw	0
 49514  01FC60  6E12               	movwf	i2___wmul@multiplicand+1,c
 49515  01FC62  0E03               	movlw	3
 49516  01FC64  6E11               	movwf	i2___wmul@multiplicand,c
 49517  01FC66  0E00               	movlw	0
 49518  01FC68  6E04               	movwf	i2___awmod@divisor+1,c
 49519  01FC6A  0E0A               	movlw	10
 49520  01FC6C  6E03               	movwf	i2___awmod@divisor,c
 49521  01FC6E  502A               	movf	i2scale@scl,w,c
 49522  01FC70  6E01               	movwf	i2___awmod@dividend,c
 49523  01FC72  6A02               	clrf	i2___awmod@dividend+1,c
 49524  01FC74  BE01               	btfsc	i2___awmod@dividend,7,c
 49525  01FC76  0602               	decf	i2___awmod@dividend+1,f,c
 49526  01FC78  EC01  F0D3         	call	i2___awmod	;wreg free
 49527  01FC7C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49528  01FC80  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49529  01FC84  ECBA  F0DB         	call	i2___wmul	;wreg free
 49530  01FC88  0EB3               	movlw	low __npowers_
 49531  01FC8A  240F               	addwf	?i2___wmul,w,c
 49532  01FC8C  6EF6               	movwf	tblptrl,c
 49533  01FC8E  0EFE               	movlw	high __npowers_
 49534  01FC90  2010               	addwfc	?i2___wmul+1,w,c
 49535  01FC92  6EF7               	movwf	tblptrh,c
 49536  01FC94                     	if	1	;There are 3 active tblptr bytes
 49537  01FC94  6AF8               	clrf	tblptru,c
 49538  01FC96  0E00               	movlw	low (__mediumconst shr (0+16))
 49539  01FC98  22F8               	addwfc	tblptru,f,c
 49540  01FC9A                     	endif
 49541  01FC9A  0009               	tblrd		*+
 49542  01FC9C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49543  01FCA0  0009               	tblrd		*+
 49544  01FCA2  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49545  01FCA6  000A               	tblrd		*-
 49546  01FCA8  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49547  01FCAC  EC60  F0C8         	call	i2___ftmul	;wreg free
 49548  01FCB0  C015  F024         	movff	?i2___ftmul,?i2_scale
 49549  01FCB4  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49550  01FCB8  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49551  01FCBC  0012               	return	
 49552  01FCBE                     i2l10844:
 49553                           
 49554                           ;doprnt.c: 432: else if(scl > 10)
 49555  01FCBE  502A               	movf	i2scale@scl,w,c
 49556  01FCC0  0A80               	xorlw	128
 49557  01FCC2  0F75               	addlw	-139
 49558  01FCC4  A0D8               	btfss	status,0,c
 49559  01FCC6  D059               	goto	i2l10850
 49560                           
 49561                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 49562  01FCC8  0E00               	movlw	0
 49563  01FCCA  6E0A               	movwf	i2___awdiv@divisor+1,c
 49564  01FCCC  0E0A               	movlw	10
 49565  01FCCE  6E09               	movwf	i2___awdiv@divisor,c
 49566  01FCD0  502A               	movf	i2scale@scl,w,c
 49567  01FCD2  6E07               	movwf	i2___awdiv@dividend,c
 49568  01FCD4  6A08               	clrf	i2___awdiv@dividend+1,c
 49569  01FCD6  BE07               	btfsc	i2___awdiv@dividend,7,c
 49570  01FCD8  0608               	decf	i2___awdiv@dividend+1,f,c
 49571  01FCDA  EC7C  F0D1         	call	i2___awdiv	;wreg free
 49572  01FCDE  0E09               	movlw	9
 49573  01FCE0  2407               	addwf	?i2___awdiv,w,c
 49574  01FCE2  6E0F               	movwf	i2___wmul@multiplier,c
 49575  01FCE4  0E00               	movlw	0
 49576  01FCE6  2008               	addwfc	?i2___awdiv+1,w,c
 49577  01FCE8  6E10               	movwf	i2___wmul@multiplier+1,c
 49578  01FCEA  0E00               	movlw	0
 49579  01FCEC  6E12               	movwf	i2___wmul@multiplicand+1,c
 49580  01FCEE  0E03               	movlw	3
 49581  01FCF0  6E11               	movwf	i2___wmul@multiplicand,c
 49582  01FCF2  ECBA  F0DB         	call	i2___wmul	;wreg free
 49583  01FCF6  0EB3               	movlw	low __npowers_
 49584  01FCF8  240F               	addwf	?i2___wmul,w,c
 49585  01FCFA  6EF6               	movwf	tblptrl,c
 49586  01FCFC  0EFE               	movlw	high __npowers_
 49587  01FCFE  2010               	addwfc	?i2___wmul+1,w,c
 49588  01FD00  6EF7               	movwf	tblptrh,c
 49589  01FD02                     	if	1	;There are 3 active tblptr bytes
 49590  01FD02  6AF8               	clrf	tblptru,c
 49591  01FD04  0E00               	movlw	low (__mediumconst shr (0+16))
 49592  01FD06  22F8               	addwfc	tblptru,f,c
 49593  01FD08                     	endif
 49594  01FD08  0009               	tblrd		*+
 49595  01FD0A  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49596  01FD0E  0009               	tblrd		*+
 49597  01FD10  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49598  01FD14  000A               	tblrd		*-
 49599  01FD16  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49600  01FD1A  0E00               	movlw	0
 49601  01FD1C  6E12               	movwf	i2___wmul@multiplicand+1,c
 49602  01FD1E  0E03               	movlw	3
 49603  01FD20  6E11               	movwf	i2___wmul@multiplicand,c
 49604  01FD22  0E00               	movlw	0
 49605  01FD24  6E04               	movwf	i2___awmod@divisor+1,c
 49606  01FD26  0E0A               	movlw	10
 49607  01FD28  6E03               	movwf	i2___awmod@divisor,c
 49608  01FD2A  502A               	movf	i2scale@scl,w,c
 49609  01FD2C  6E01               	movwf	i2___awmod@dividend,c
 49610  01FD2E  6A02               	clrf	i2___awmod@dividend+1,c
 49611  01FD30  BE01               	btfsc	i2___awmod@dividend,7,c
 49612  01FD32  0602               	decf	i2___awmod@dividend+1,f,c
 49613  01FD34  EC01  F0D3         	call	i2___awmod	;wreg free
 49614  01FD38  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49615  01FD3C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49616  01FD40  ECBA  F0DB         	call	i2___wmul	;wreg free
 49617  01FD44  0EB3               	movlw	low __npowers_
 49618  01FD46  240F               	addwf	?i2___wmul,w,c
 49619  01FD48  6EF6               	movwf	tblptrl,c
 49620  01FD4A  0EFE               	movlw	high __npowers_
 49621  01FD4C  2010               	addwfc	?i2___wmul+1,w,c
 49622  01FD4E  6EF7               	movwf	tblptrh,c
 49623  01FD50                     	if	1	;There are 3 active tblptr bytes
 49624  01FD50  6AF8               	clrf	tblptru,c
 49625  01FD52  0E00               	movlw	low (__mediumconst shr (0+16))
 49626  01FD54  22F8               	addwfc	tblptru,f,c
 49627  01FD56                     	endif
 49628  01FD56  0009               	tblrd		*+
 49629  01FD58  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49630  01FD5C  0009               	tblrd		*+
 49631  01FD5E  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49632  01FD62  000A               	tblrd		*-
 49633  01FD64  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49634  01FD68  EC60  F0C8         	call	i2___ftmul	;wreg free
 49635  01FD6C  C015  F024         	movff	?i2___ftmul,?i2_scale
 49636  01FD70  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49637  01FD74  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49638  01FD78  0012               	return	
 49639  01FD7A                     i2l10850:
 49640                           
 49641                           ;doprnt.c: 434: return _npowers_[scl];
 49642  01FD7A  502A               	movf	i2scale@scl,w,c
 49643  01FD7C  0D03               	mullw	3
 49644  01FD7E  0EB3               	movlw	low __npowers_
 49645  01FD80  24F3               	addwf	prodl,w,c
 49646  01FD82  6EF6               	movwf	tblptrl,c
 49647  01FD84  0EFE               	movlw	high __npowers_
 49648  01FD86  20F4               	addwfc	prodh,w,c
 49649  01FD88  6EF7               	movwf	tblptrh,c
 49650  01FD8A                     	if	1	;There are 3 active tblptr bytes
 49651  01FD8A  6AF8               	clrf	tblptru,c
 49652  01FD8C  0E00               	movlw	low (__mediumconst shr (0+16))
 49653  01FD8E  22F8               	addwfc	tblptru,f,c
 49654  01FD90                     	endif
 49655  01FD90  0009               	tblrd		*+
 49656  01FD92  CFF5 F024          	movff	tablat,?i2_scale
 49657  01FD96  0009               	tblrd		*+
 49658  01FD98  CFF5 F025          	movff	tablat,?i2_scale+1
 49659  01FD9C  000A               	tblrd		*-
 49660  01FD9E  CFF5 F026          	movff	tablat,?i2_scale+2
 49661  01FDA2  0012               	return	
 49662  01FDA4                     i2l10854:
 49663                           
 49664                           ;doprnt.c: 435: }
 49665                           ;doprnt.c: 436: if(scl>=110)
 49666  01FDA4  502A               	movf	i2scale@scl,w,c
 49667  01FDA6  0A80               	xorlw	128
 49668  01FDA8  0F12               	addlw	-238
 49669  01FDAA  A0D8               	btfss	status,0,c
 49670  01FDAC  D09A               	goto	i2l10862
 49671                           
 49672                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 49673  01FDAE  0E00               	movlw	0
 49674  01FDB0  6E12               	movwf	i2___wmul@multiplicand+1,c
 49675  01FDB2  0E03               	movlw	3
 49676  01FDB4  6E11               	movwf	i2___wmul@multiplicand,c
 49677  01FDB6  0E00               	movlw	0
 49678  01FDB8  6E0A               	movwf	i2___awdiv@divisor+1,c
 49679  01FDBA  0E0A               	movlw	10
 49680  01FDBC  6E09               	movwf	i2___awdiv@divisor,c
 49681  01FDBE  0E00               	movlw	0
 49682  01FDC0  6E04               	movwf	i2___awmod@divisor+1,c
 49683  01FDC2  0E64               	movlw	100
 49684  01FDC4  6E03               	movwf	i2___awmod@divisor,c
 49685  01FDC6  502A               	movf	i2scale@scl,w,c
 49686  01FDC8  6E01               	movwf	i2___awmod@dividend,c
 49687  01FDCA  6A02               	clrf	i2___awmod@dividend+1,c
 49688  01FDCC  BE01               	btfsc	i2___awmod@dividend,7,c
 49689  01FDCE  0602               	decf	i2___awmod@dividend+1,f,c
 49690  01FDD0  EC01  F0D3         	call	i2___awmod	;wreg free
 49691  01FDD4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 49692  01FDD8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 49693  01FDDC  EC7C  F0D1         	call	i2___awdiv	;wreg free
 49694  01FDE0  0E09               	movlw	9
 49695  01FDE2  2407               	addwf	?i2___awdiv,w,c
 49696  01FDE4  6E0F               	movwf	i2___wmul@multiplier,c
 49697  01FDE6  0E00               	movlw	0
 49698  01FDE8  2008               	addwfc	?i2___awdiv+1,w,c
 49699  01FDEA  6E10               	movwf	i2___wmul@multiplier+1,c
 49700  01FDEC  ECBA  F0DB         	call	i2___wmul	;wreg free
 49701  01FDF0  0EDA               	movlw	low __powers_
 49702  01FDF2  240F               	addwf	?i2___wmul,w,c
 49703  01FDF4  6EF6               	movwf	tblptrl,c
 49704  01FDF6  0EFE               	movlw	high __powers_
 49705  01FDF8  2010               	addwfc	?i2___wmul+1,w,c
 49706  01FDFA  6EF7               	movwf	tblptrh,c
 49707  01FDFC                     	if	1	;There are 3 active tblptr bytes
 49708  01FDFC  6AF8               	clrf	tblptru,c
 49709  01FDFE  0E00               	movlw	low (__mediumconst shr (0+16))
 49710  01FE00  22F8               	addwfc	tblptru,f,c
 49711  01FE02                     	endif
 49712  01FE02  0009               	tblrd		*+
 49713  01FE04  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49714  01FE08  0009               	tblrd		*+
 49715  01FE0A  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49716  01FE0E  000A               	tblrd		*-
 49717  01FE10  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49718  01FE14  0E00               	movlw	0
 49719  01FE16  6E0A               	movwf	i2___awdiv@divisor+1,c
 49720  01FE18  0E64               	movlw	100
 49721  01FE1A  6E09               	movwf	i2___awdiv@divisor,c
 49722  01FE1C  502A               	movf	i2scale@scl,w,c
 49723  01FE1E  6E07               	movwf	i2___awdiv@dividend,c
 49724  01FE20  6A08               	clrf	i2___awdiv@dividend+1,c
 49725  01FE22  BE07               	btfsc	i2___awdiv@dividend,7,c
 49726  01FE24  0608               	decf	i2___awdiv@dividend+1,f,c
 49727  01FE26  EC7C  F0D1         	call	i2___awdiv	;wreg free
 49728  01FE2A  0E12               	movlw	18
 49729  01FE2C  2407               	addwf	?i2___awdiv,w,c
 49730  01FE2E  6E0F               	movwf	i2___wmul@multiplier,c
 49731  01FE30  0E00               	movlw	0
 49732  01FE32  2008               	addwfc	?i2___awdiv+1,w,c
 49733  01FE34  6E10               	movwf	i2___wmul@multiplier+1,c
 49734  01FE36  0E00               	movlw	0
 49735  01FE38  6E12               	movwf	i2___wmul@multiplicand+1,c
 49736  01FE3A  0E03               	movlw	3
 49737  01FE3C  6E11               	movwf	i2___wmul@multiplicand,c
 49738  01FE3E  ECBA  F0DB         	call	i2___wmul	;wreg free
 49739  01FE42  0EDA               	movlw	low __powers_
 49740  01FE44  240F               	addwf	?i2___wmul,w,c
 49741  01FE46  6EF6               	movwf	tblptrl,c
 49742  01FE48  0EFE               	movlw	high __powers_
 49743  01FE4A  2010               	addwfc	?i2___wmul+1,w,c
 49744  01FE4C  6EF7               	movwf	tblptrh,c
 49745  01FE4E                     	if	1	;There are 3 active tblptr bytes
 49746  01FE4E  6AF8               	clrf	tblptru,c
 49747  01FE50  0E00               	movlw	low (__mediumconst shr (0+16))
 49748  01FE52  22F8               	addwfc	tblptru,f,c
 49749  01FE54                     	endif
 49750  01FE54  0009               	tblrd		*+
 49751  01FE56  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49752  01FE5A  0009               	tblrd		*+
 49753  01FE5C  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49754  01FE60  000A               	tblrd		*-
 49755  01FE62  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49756  01FE66  EC60  F0C8         	call	i2___ftmul	;wreg free
 49757  01FE6A  C015  F027         	movff	?i2___ftmul,i2_scale$11862
 49758  01FE6E  C016  F028         	movff	?i2___ftmul+1,i2_scale$11862+1
 49759  01FE72  C017  F029         	movff	?i2___ftmul+2,i2_scale$11862+2
 49760                           
 49761                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 49762  01FE76  C027  F015         	movff	i2_scale$11862,i2___ftmul@f1
 49763  01FE7A  C028  F016         	movff	i2_scale$11862+1,i2___ftmul@f1+1
 49764  01FE7E  C029  F017         	movff	i2_scale$11862+2,i2___ftmul@f1+2
 49765  01FE82  0E00               	movlw	0
 49766  01FE84  6E12               	movwf	i2___wmul@multiplicand+1,c
 49767  01FE86  0E03               	movlw	3
 49768  01FE88  6E11               	movwf	i2___wmul@multiplicand,c
 49769  01FE8A  0E00               	movlw	0
 49770  01FE8C  6E04               	movwf	i2___awmod@divisor+1,c
 49771  01FE8E  0E0A               	movlw	10
 49772  01FE90  6E03               	movwf	i2___awmod@divisor,c
 49773  01FE92  502A               	movf	i2scale@scl,w,c
 49774  01FE94  6E01               	movwf	i2___awmod@dividend,c
 49775  01FE96  6A02               	clrf	i2___awmod@dividend+1,c
 49776  01FE98  BE01               	btfsc	i2___awmod@dividend,7,c
 49777  01FE9A  0602               	decf	i2___awmod@dividend+1,f,c
 49778  01FE9C  EC01  F0D3         	call	i2___awmod	;wreg free
 49779  01FEA0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49780  01FEA4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49781  01FEA8  ECBA  F0DB         	call	i2___wmul	;wreg free
 49782  01FEAC  0EDA               	movlw	low __powers_
 49783  01FEAE  240F               	addwf	?i2___wmul,w,c
 49784  01FEB0  6EF6               	movwf	tblptrl,c
 49785  01FEB2  0EFE               	movlw	high __powers_
 49786  01FEB4  2010               	addwfc	?i2___wmul+1,w,c
 49787  01FEB6  6EF7               	movwf	tblptrh,c
 49788  01FEB8                     	if	1	;There are 3 active tblptr bytes
 49789  01FEB8  6AF8               	clrf	tblptru,c
 49790  01FEBA  0E00               	movlw	low (__mediumconst shr (0+16))
 49791  01FEBC  22F8               	addwfc	tblptru,f,c
 49792  01FEBE                     	endif
 49793  01FEBE  0009               	tblrd		*+
 49794  01FEC0  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49795  01FEC4  0009               	tblrd		*+
 49796  01FEC6  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49797  01FECA  000A               	tblrd		*-
 49798  01FECC  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49799  01FED0  EC60  F0C8         	call	i2___ftmul	;wreg free
 49800  01FED4  C015  F024         	movff	?i2___ftmul,?i2_scale
 49801  01FED8  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49802  01FEDC  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49803  01FEE0  0012               	return	
 49804  01FEE2                     i2l10862:
 49805                           
 49806                           ;doprnt.c: 438: else if(scl > 10)
 49807  01FEE2  502A               	movf	i2scale@scl,w,c
 49808  01FEE4  0A80               	xorlw	128
 49809  01FEE6  0F75               	addlw	-139
 49810  01FEE8  A0D8               	btfss	status,0,c
 49811  01FEEA  D059               	goto	i2l10868
 49812                           
 49813                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 49814  01FEEC  0E00               	movlw	0
 49815  01FEEE  6E0A               	movwf	i2___awdiv@divisor+1,c
 49816  01FEF0  0E0A               	movlw	10
 49817  01FEF2  6E09               	movwf	i2___awdiv@divisor,c
 49818  01FEF4  502A               	movf	i2scale@scl,w,c
 49819  01FEF6  6E07               	movwf	i2___awdiv@dividend,c
 49820  01FEF8  6A08               	clrf	i2___awdiv@dividend+1,c
 49821  01FEFA  BE07               	btfsc	i2___awdiv@dividend,7,c
 49822  01FEFC  0608               	decf	i2___awdiv@dividend+1,f,c
 49823  01FEFE  EC7C  F0D1         	call	i2___awdiv	;wreg free
 49824  01FF02  0E09               	movlw	9
 49825  01FF04  2407               	addwf	?i2___awdiv,w,c
 49826  01FF06  6E0F               	movwf	i2___wmul@multiplier,c
 49827  01FF08  0E00               	movlw	0
 49828  01FF0A  2008               	addwfc	?i2___awdiv+1,w,c
 49829  01FF0C  6E10               	movwf	i2___wmul@multiplier+1,c
 49830  01FF0E  0E00               	movlw	0
 49831  01FF10  6E12               	movwf	i2___wmul@multiplicand+1,c
 49832  01FF12  0E03               	movlw	3
 49833  01FF14  6E11               	movwf	i2___wmul@multiplicand,c
 49834  01FF16  ECBA  F0DB         	call	i2___wmul	;wreg free
 49835  01FF1A  0EDA               	movlw	low __powers_
 49836  01FF1C  240F               	addwf	?i2___wmul,w,c
 49837  01FF1E  6EF6               	movwf	tblptrl,c
 49838  01FF20  0EFE               	movlw	high __powers_
 49839  01FF22  2010               	addwfc	?i2___wmul+1,w,c
 49840  01FF24  6EF7               	movwf	tblptrh,c
 49841  01FF26                     	if	1	;There are 3 active tblptr bytes
 49842  01FF26  6AF8               	clrf	tblptru,c
 49843  01FF28  0E00               	movlw	low (__mediumconst shr (0+16))
 49844  01FF2A  22F8               	addwfc	tblptru,f,c
 49845  01FF2C                     	endif
 49846  01FF2C  0009               	tblrd		*+
 49847  01FF2E  CFF5 F015          	movff	tablat,i2___ftmul@f1
 49848  01FF32  0009               	tblrd		*+
 49849  01FF34  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 49850  01FF38  000A               	tblrd		*-
 49851  01FF3A  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 49852  01FF3E  0E00               	movlw	0
 49853  01FF40  6E12               	movwf	i2___wmul@multiplicand+1,c
 49854  01FF42  0E03               	movlw	3
 49855  01FF44  6E11               	movwf	i2___wmul@multiplicand,c
 49856  01FF46  0E00               	movlw	0
 49857  01FF48  6E04               	movwf	i2___awmod@divisor+1,c
 49858  01FF4A  0E0A               	movlw	10
 49859  01FF4C  6E03               	movwf	i2___awmod@divisor,c
 49860  01FF4E  502A               	movf	i2scale@scl,w,c
 49861  01FF50  6E01               	movwf	i2___awmod@dividend,c
 49862  01FF52  6A02               	clrf	i2___awmod@dividend+1,c
 49863  01FF54  BE01               	btfsc	i2___awmod@dividend,7,c
 49864  01FF56  0602               	decf	i2___awmod@dividend+1,f,c
 49865  01FF58  EC01  F0D3         	call	i2___awmod	;wreg free
 49866  01FF5C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 49867  01FF60  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 49868  01FF64  ECBA  F0DB         	call	i2___wmul	;wreg free
 49869  01FF68  0EDA               	movlw	low __powers_
 49870  01FF6A  240F               	addwf	?i2___wmul,w,c
 49871  01FF6C  6EF6               	movwf	tblptrl,c
 49872  01FF6E  0EFE               	movlw	high __powers_
 49873  01FF70  2010               	addwfc	?i2___wmul+1,w,c
 49874  01FF72  6EF7               	movwf	tblptrh,c
 49875  01FF74                     	if	1	;There are 3 active tblptr bytes
 49876  01FF74  6AF8               	clrf	tblptru,c
 49877  01FF76  0E00               	movlw	low (__mediumconst shr (0+16))
 49878  01FF78  22F8               	addwfc	tblptru,f,c
 49879  01FF7A                     	endif
 49880  01FF7A  0009               	tblrd		*+
 49881  01FF7C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 49882  01FF80  0009               	tblrd		*+
 49883  01FF82  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 49884  01FF86  000A               	tblrd		*-
 49885  01FF88  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 49886  01FF8C  EC60  F0C8         	call	i2___ftmul	;wreg free
 49887  01FF90  C015  F024         	movff	?i2___ftmul,?i2_scale
 49888  01FF94  C016  F025         	movff	?i2___ftmul+1,?i2_scale+1
 49889  01FF98  C017  F026         	movff	?i2___ftmul+2,?i2_scale+2
 49890  01FF9C  0012               	return	
 49891  01FF9E                     i2l10868:
 49892                           
 49893                           ;doprnt.c: 440: return _powers_[scl];
 49894  01FF9E  502A               	movf	i2scale@scl,w,c
 49895  01FFA0  0D03               	mullw	3
 49896  01FFA2  0EDA               	movlw	low __powers_
 49897  01FFA4  24F3               	addwf	prodl,w,c
 49898  01FFA6  6EF6               	movwf	tblptrl,c
 49899  01FFA8  0EFE               	movlw	high __powers_
 49900  01FFAA  20F4               	addwfc	prodh,w,c
 49901  01FFAC  6EF7               	movwf	tblptrh,c
 49902  01FFAE                     	if	1	;There are 3 active tblptr bytes
 49903  01FFAE  6AF8               	clrf	tblptru,c
 49904  01FFB0  0E00               	movlw	low (__mediumconst shr (0+16))
 49905  01FFB2  22F8               	addwfc	tblptru,f,c
 49906  01FFB4                     	endif
 49907  01FFB4  0009               	tblrd		*+
 49908  01FFB6  CFF5 F024          	movff	tablat,?i2_scale
 49909  01FFBA  0009               	tblrd		*+
 49910  01FFBC  CFF5 F025          	movff	tablat,?i2_scale+1
 49911  01FFC0  000A               	tblrd		*-
 49912  01FFC2  CFF5 F026          	movff	tablat,?i2_scale+2
 49913  01FFC6  0012               	return	
 49914  01FFC8                     __end_ofi2_scale:
 49915                           	opt stack 0
 49916                           pclatu	equ	0xFFB
 49917                           pclath	equ	0xFFA
 49918                           tblptru	equ	0xFF8
 49919                           tblptrh	equ	0xFF7
 49920                           tblptrl	equ	0xFF6
 49921                           tablat	equ	0xFF5
 49922                           prodh	equ	0xFF4
 49923                           prodl	equ	0xFF3
 49924                           intcon	equ	0xFF2
 49925                           intcon2	equ	0xFF1
 49926                           intcon3	equ	0xFF0
 49927                           indf0	equ	0xFEF
 49928                           postinc0	equ	0xFEE
 49929                           fsr0h	equ	0xFEA
 49930                           fsr0l	equ	0xFE9
 49931                           wreg	equ	0xFE8
 49932                           indf1	equ	0xFE7
 49933                           postinc1	equ	0xFE6
 49934                           postdec1	equ	0xFE5
 49935                           fsr1h	equ	0xFE2
 49936                           fsr1l	equ	0xFE1
 49937                           indf2	equ	0xFDF
 49938                           postinc2	equ	0xFDE
 49939                           postdec2	equ	0xFDD
 49940                           fsr2h	equ	0xFDA
 49941                           fsr2l	equ	0xFD9
 49942                           status	equ	0xFD8
 49943                           
 49944 ;; *************** function i2_isdigit *****************
 49945 ;; Defined at:
 49946 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 49947 ;; Parameters:    Size  Location     Type
 49948 ;;  c               1    wreg     unsigned char 
 49949 ;; Auto vars:     Size  Location     Type
 49950 ;;  c               1    2[COMRAM] unsigned char 
 49951 ;; Return value:  Size  Location     Type
 49952 ;;		None               void
 49953 ;; Registers used:
 49954 ;;		wreg, status,2, status,0
 49955 ;; Tracked objects:
 49956 ;;		On entry : 0/0
 49957 ;;		On exit  : 0/0
 49958 ;;		Unchanged: 0/0
 49959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 49960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 49964 ;;Total ram usage:        3 bytes
 49965 ;; Hardware stack levels used:    1
 49966 ;; This function calls:
 49967 ;;		Nothing
 49968 ;; This function is called by:
 49969 ;;		i2_sprintf
 49970 ;; This function uses a non-reentrant model
 49971 ;;
 49972                           
 49973                           	psect	text147
 49974  01B8B2                     __ptext147:
 49975                           	opt stack 0
 49976  01B8B2                     i2_isdigit:
 49977                           	opt stack 18
 49978                           
 49979                           ;incstack = 0
 49980                           ;i2isdigit@c stored from wreg
 49981  01B8B2  6E03               	movwf	i2isdigit@c,c
 49982  01B8B4  0E00               	movlw	0
 49983  01B8B6  6E02               	movwf	i2_isdigit$10242,c
 49984  01B8B8  0E3A               	movlw	58
 49985  01B8BA  5C03               	subwf	i2isdigit@c,w,c
 49986  01B8BC  B0D8               	btfsc	status,0,c
 49987  01B8BE  D005               	goto	i2l11020
 49988  01B8C0  0E2F               	movlw	47
 49989  01B8C2  6403               	cpfsgt	i2isdigit@c,c
 49990  01B8C4  D002               	goto	i2l11020
 49991  01B8C6  0E01               	movlw	1
 49992  01B8C8  6E02               	movwf	i2_isdigit$10242,c
 49993  01B8CA                     i2l11020:
 49994  01B8CA  C002  F001         	movff	i2_isdigit$10242,??i2_isdigit
 49995  01B8CE  3001               	rrcf	??i2_isdigit,w,c
 49996  01B8D0  0012               	return	
 49997  01B8D2                     __end_ofi2_isdigit:
 49998                           	opt stack 0
 49999                           pclatu	equ	0xFFB
 50000                           pclath	equ	0xFFA
 50001                           tblptru	equ	0xFF8
 50002                           tblptrh	equ	0xFF7
 50003                           tblptrl	equ	0xFF6
 50004                           tablat	equ	0xFF5
 50005                           prodh	equ	0xFF4
 50006                           prodl	equ	0xFF3
 50007                           intcon	equ	0xFF2
 50008                           intcon2	equ	0xFF1
 50009                           intcon3	equ	0xFF0
 50010                           indf0	equ	0xFEF
 50011                           postinc0	equ	0xFEE
 50012                           fsr0h	equ	0xFEA
 50013                           fsr0l	equ	0xFE9
 50014                           wreg	equ	0xFE8
 50015                           indf1	equ	0xFE7
 50016                           postinc1	equ	0xFE6
 50017                           postdec1	equ	0xFE5
 50018                           fsr1h	equ	0xFE2
 50019                           fsr1l	equ	0xFE1
 50020                           indf2	equ	0xFDF
 50021                           postinc2	equ	0xFDE
 50022                           postdec2	equ	0xFDD
 50023                           fsr2h	equ	0xFDA
 50024                           fsr2l	equ	0xFD9
 50025                           status	equ	0xFD8
 50026                           
 50027 ;; *************** function i2_fround *****************
 50028 ;; Defined at:
 50029 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 50030 ;; Parameters:    Size  Location     Type
 50031 ;;  prec            1    wreg     unsigned char 
 50032 ;; Auto vars:     Size  Location     Type
 50033 ;;  prec            1   44[COMRAM] unsigned char 
 50034 ;; Return value:  Size  Location     Type
 50035 ;;                  3   35[COMRAM] unsigned char 
 50036 ;; Registers used:
 50037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50038 ;; Tracked objects:
 50039 ;;		On entry : 0/0
 50040 ;;		On exit  : 0/0
 50041 ;;		Unchanged: 0/0
 50042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50043 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50044 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50046 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50047 ;;Total ram usage:       10 bytes
 50048 ;; Hardware stack levels used:    1
 50049 ;; Hardware stack levels required when called:    2
 50050 ;; This function calls:
 50051 ;;		i2___awdiv
 50052 ;;		i2___awmod
 50053 ;;		i2___ftmul
 50054 ;;		i2___wmul
 50055 ;; This function is called by:
 50056 ;;		i2_sprintf
 50057 ;; This function uses a non-reentrant model
 50058 ;;
 50059                           
 50060                           	psect	text148
 50061  014F6A                     __ptext148:
 50062                           	opt stack 0
 50063  014F6A                     i2_fround:
 50064                           	opt stack 16
 50065                           
 50066                           ;incstack = 0
 50067                           ;i2fround@prec stored from wreg
 50068  014F6A  6E2D               	movwf	i2fround@prec,c
 50069                           
 50070                           ;doprnt.c: 413: if(prec>=110)
 50071  014F6C  0E6D               	movlw	109
 50072  014F6E  642D               	cpfsgt	i2fround@prec,c
 50073  014F70  D0A8               	goto	i2l10822
 50074                           
 50075                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 50076  014F72  0E00               	movlw	0
 50077  014F74  6E12               	movwf	i2___wmul@multiplicand+1,c
 50078  014F76  0E03               	movlw	3
 50079  014F78  6E11               	movwf	i2___wmul@multiplicand,c
 50080  014F7A  0E00               	movlw	0
 50081  014F7C  6E0A               	movwf	i2___awdiv@divisor+1,c
 50082  014F7E  0E0A               	movlw	10
 50083  014F80  6E09               	movwf	i2___awdiv@divisor,c
 50084  014F82  0E00               	movlw	0
 50085  014F84  6E04               	movwf	i2___awmod@divisor+1,c
 50086  014F86  0E64               	movlw	100
 50087  014F88  6E03               	movwf	i2___awmod@divisor,c
 50088  014F8A  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 50089  014F8E  6A02               	clrf	i2___awmod@dividend+1,c
 50090  014F90  EC01  F0D3         	call	i2___awmod	;wreg free
 50091  014F94  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 50092  014F98  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 50093  014F9C  EC7C  F0D1         	call	i2___awdiv	;wreg free
 50094  014FA0  0E09               	movlw	9
 50095  014FA2  2407               	addwf	?i2___awdiv,w,c
 50096  014FA4  6E0F               	movwf	i2___wmul@multiplier,c
 50097  014FA6  0E00               	movlw	0
 50098  014FA8  2008               	addwfc	?i2___awdiv+1,w,c
 50099  014FAA  6E10               	movwf	i2___wmul@multiplier+1,c
 50100  014FAC  ECBA  F0DB         	call	i2___wmul	;wreg free
 50101  014FB0  0EB3               	movlw	low __npowers_
 50102  014FB2  240F               	addwf	?i2___wmul,w,c
 50103  014FB4  6EF6               	movwf	tblptrl,c
 50104  014FB6  0EFE               	movlw	high __npowers_
 50105  014FB8  2010               	addwfc	?i2___wmul+1,w,c
 50106  014FBA  6EF7               	movwf	tblptrh,c
 50107  014FBC                     	if	1	;There are 3 active tblptr bytes
 50108  014FBC  6AF8               	clrf	tblptru,c
 50109  014FBE  0E00               	movlw	low (__mediumconst shr (0+16))
 50110  014FC0  22F8               	addwfc	tblptru,f,c
 50111  014FC2                     	endif
 50112  014FC2  0009               	tblrd		*+
 50113  014FC4  CFF5 F018          	movff	tablat,i2___ftmul@f2
 50114  014FC8  0009               	tblrd		*+
 50115  014FCA  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 50116  014FCE  000A               	tblrd		*-
 50117  014FD0  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 50118  014FD4  0E00               	movlw	0
 50119  014FD6  6E0A               	movwf	i2___awdiv@divisor+1,c
 50120  014FD8  0E64               	movlw	100
 50121  014FDA  6E09               	movwf	i2___awdiv@divisor,c
 50122  014FDC  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 50123  014FE0  6A08               	clrf	i2___awdiv@dividend+1,c
 50124  014FE2  EC7C  F0D1         	call	i2___awdiv	;wreg free
 50125  014FE6  0E12               	movlw	18
 50126  014FE8  2407               	addwf	?i2___awdiv,w,c
 50127  014FEA  6E0F               	movwf	i2___wmul@multiplier,c
 50128  014FEC  0E00               	movlw	0
 50129  014FEE  2008               	addwfc	?i2___awdiv+1,w,c
 50130  014FF0  6E10               	movwf	i2___wmul@multiplier+1,c
 50131  014FF2  0E00               	movlw	0
 50132  014FF4  6E12               	movwf	i2___wmul@multiplicand+1,c
 50133  014FF6  0E03               	movlw	3
 50134  014FF8  6E11               	movwf	i2___wmul@multiplicand,c
 50135  014FFA  ECBA  F0DB         	call	i2___wmul	;wreg free
 50136  014FFE  0EB3               	movlw	low __npowers_
 50137  015000  240F               	addwf	?i2___wmul,w,c
 50138  015002  6EF6               	movwf	tblptrl,c
 50139  015004  0EFE               	movlw	high __npowers_
 50140  015006  2010               	addwfc	?i2___wmul+1,w,c
 50141  015008  6EF7               	movwf	tblptrh,c
 50142  01500A                     	if	1	;There are 3 active tblptr bytes
 50143  01500A  6AF8               	clrf	tblptru,c
 50144  01500C  0E00               	movlw	low (__mediumconst shr (0+16))
 50145  01500E  22F8               	addwfc	tblptru,f,c
 50146  015010                     	endif
 50147  015010  0009               	tblrd		*+
 50148  015012  CFF5 F015          	movff	tablat,i2___ftmul@f1
 50149  015016  0009               	tblrd		*+
 50150  015018  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 50151  01501C  000A               	tblrd		*-
 50152  01501E  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 50153  015022  EC60  F0C8         	call	i2___ftmul	;wreg free
 50154  015026  C015  F02A         	movff	?i2___ftmul,i2_fround$11860
 50155  01502A  C016  F02B         	movff	?i2___ftmul+1,i2_fround$11860+1
 50156  01502E  C017  F02C         	movff	?i2___ftmul+2,i2_fround$11860+2
 50157                           
 50158                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 50159  015032  0E00               	movlw	0
 50160  015034  6E12               	movwf	i2___wmul@multiplicand+1,c
 50161  015036  0E03               	movlw	3
 50162  015038  6E11               	movwf	i2___wmul@multiplicand,c
 50163  01503A  0E00               	movlw	0
 50164  01503C  6E04               	movwf	i2___awmod@divisor+1,c
 50165  01503E  0E0A               	movlw	10
 50166  015040  6E03               	movwf	i2___awmod@divisor,c
 50167  015042  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 50168  015046  6A02               	clrf	i2___awmod@dividend+1,c
 50169  015048  EC01  F0D3         	call	i2___awmod	;wreg free
 50170  01504C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 50171  015050  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 50172  015054  ECBA  F0DB         	call	i2___wmul	;wreg free
 50173  015058  0EB3               	movlw	low __npowers_
 50174  01505A  240F               	addwf	?i2___wmul,w,c
 50175  01505C  6EF6               	movwf	tblptrl,c
 50176  01505E  0EFE               	movlw	high __npowers_
 50177  015060  2010               	addwfc	?i2___wmul+1,w,c
 50178  015062  6EF7               	movwf	tblptrh,c
 50179  015064                     	if	1	;There are 3 active tblptr bytes
 50180  015064  6AF8               	clrf	tblptru,c
 50181  015066  0E00               	movlw	low (__mediumconst shr (0+16))
 50182  015068  22F8               	addwfc	tblptru,f,c
 50183  01506A                     	endif
 50184  01506A  0009               	tblrd		*+
 50185  01506C  CFF5 F018          	movff	tablat,i2___ftmul@f2
 50186  015070  0009               	tblrd		*+
 50187  015072  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 50188  015076  000A               	tblrd		*-
 50189  015078  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 50190  01507C  C02A  F015         	movff	i2_fround$11860,i2___ftmul@f1
 50191  015080  C02B  F016         	movff	i2_fround$11860+1,i2___ftmul@f1+1
 50192  015084  C02C  F017         	movff	i2_fround$11860+2,i2___ftmul@f1+2
 50193  015088  EC60  F0C8         	call	i2___ftmul	;wreg free
 50194  01508C  C015  F027         	movff	?i2___ftmul,i2_fround$11861
 50195  015090  C016  F028         	movff	?i2___ftmul+1,i2_fround$11861+1
 50196  015094  C017  F029         	movff	?i2___ftmul+2,i2_fround$11861+2
 50197                           
 50198                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 50199  015098  C027  F015         	movff	i2_fround$11861,i2___ftmul@f1
 50200  01509C  C028  F016         	movff	i2_fround$11861+1,i2___ftmul@f1+1
 50201  0150A0  C029  F017         	movff	i2_fround$11861+2,i2___ftmul@f1+2
 50202  0150A4  0E00               	movlw	0
 50203  0150A6  6E18               	movwf	i2___ftmul@f2,c
 50204  0150A8  0E00               	movlw	0
 50205  0150AA  6E19               	movwf	i2___ftmul@f2+1,c
 50206  0150AC  0E3F               	movlw	63
 50207  0150AE  6E1A               	movwf	i2___ftmul@f2+2,c
 50208  0150B0  EC60  F0C8         	call	i2___ftmul	;wreg free
 50209  0150B4  C015  F024         	movff	?i2___ftmul,?i2_fround
 50210  0150B8  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 50211  0150BC  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 50212  0150C0  0012               	return	
 50213  0150C2                     i2l10822:
 50214                           
 50215                           ;doprnt.c: 415: else if(prec > 10)
 50216  0150C2  0E0A               	movlw	10
 50217  0150C4  642D               	cpfsgt	i2fround@prec,c
 50218  0150C6  D069               	goto	i2l10830
 50219                           
 50220                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 50221  0150C8  0E00               	movlw	0
 50222  0150CA  6E12               	movwf	i2___wmul@multiplicand+1,c
 50223  0150CC  0E03               	movlw	3
 50224  0150CE  6E11               	movwf	i2___wmul@multiplicand,c
 50225  0150D0  0E00               	movlw	0
 50226  0150D2  6E04               	movwf	i2___awmod@divisor+1,c
 50227  0150D4  0E0A               	movlw	10
 50228  0150D6  6E03               	movwf	i2___awmod@divisor,c
 50229  0150D8  C02D  F001         	movff	i2fround@prec,i2___awmod@dividend
 50230  0150DC  6A02               	clrf	i2___awmod@dividend+1,c
 50231  0150DE  EC01  F0D3         	call	i2___awmod	;wreg free
 50232  0150E2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 50233  0150E6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 50234  0150EA  ECBA  F0DB         	call	i2___wmul	;wreg free
 50235  0150EE  0EB3               	movlw	low __npowers_
 50236  0150F0  240F               	addwf	?i2___wmul,w,c
 50237  0150F2  6EF6               	movwf	tblptrl,c
 50238  0150F4  0EFE               	movlw	high __npowers_
 50239  0150F6  2010               	addwfc	?i2___wmul+1,w,c
 50240  0150F8  6EF7               	movwf	tblptrh,c
 50241  0150FA                     	if	1	;There are 3 active tblptr bytes
 50242  0150FA  6AF8               	clrf	tblptru,c
 50243  0150FC  0E00               	movlw	low (__mediumconst shr (0+16))
 50244  0150FE  22F8               	addwfc	tblptru,f,c
 50245  015100                     	endif
 50246  015100  0009               	tblrd		*+
 50247  015102  CFF5 F018          	movff	tablat,i2___ftmul@f2
 50248  015106  0009               	tblrd		*+
 50249  015108  CFF5 F019          	movff	tablat,i2___ftmul@f2+1
 50250  01510C  000A               	tblrd		*-
 50251  01510E  CFF5 F01A          	movff	tablat,i2___ftmul@f2+2
 50252  015112  0E00               	movlw	0
 50253  015114  6E0A               	movwf	i2___awdiv@divisor+1,c
 50254  015116  0E0A               	movlw	10
 50255  015118  6E09               	movwf	i2___awdiv@divisor,c
 50256  01511A  C02D  F007         	movff	i2fround@prec,i2___awdiv@dividend
 50257  01511E  6A08               	clrf	i2___awdiv@dividend+1,c
 50258  015120  EC7C  F0D1         	call	i2___awdiv	;wreg free
 50259  015124  0E09               	movlw	9
 50260  015126  2407               	addwf	?i2___awdiv,w,c
 50261  015128  6E0F               	movwf	i2___wmul@multiplier,c
 50262  01512A  0E00               	movlw	0
 50263  01512C  2008               	addwfc	?i2___awdiv+1,w,c
 50264  01512E  6E10               	movwf	i2___wmul@multiplier+1,c
 50265  015130  0E00               	movlw	0
 50266  015132  6E12               	movwf	i2___wmul@multiplicand+1,c
 50267  015134  0E03               	movlw	3
 50268  015136  6E11               	movwf	i2___wmul@multiplicand,c
 50269  015138  ECBA  F0DB         	call	i2___wmul	;wreg free
 50270  01513C  0EB3               	movlw	low __npowers_
 50271  01513E  240F               	addwf	?i2___wmul,w,c
 50272  015140  6EF6               	movwf	tblptrl,c
 50273  015142  0EFE               	movlw	high __npowers_
 50274  015144  2010               	addwfc	?i2___wmul+1,w,c
 50275  015146  6EF7               	movwf	tblptrh,c
 50276  015148                     	if	1	;There are 3 active tblptr bytes
 50277  015148  6AF8               	clrf	tblptru,c
 50278  01514A  0E00               	movlw	low (__mediumconst shr (0+16))
 50279  01514C  22F8               	addwfc	tblptru,f,c
 50280  01514E                     	endif
 50281  01514E  0009               	tblrd		*+
 50282  015150  CFF5 F015          	movff	tablat,i2___ftmul@f1
 50283  015154  0009               	tblrd		*+
 50284  015156  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 50285  01515A  000A               	tblrd		*-
 50286  01515C  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 50287  015160  EC60  F0C8         	call	i2___ftmul	;wreg free
 50288  015164  C015  F02A         	movff	?i2___ftmul,i2_fround$11860
 50289  015168  C016  F02B         	movff	?i2___ftmul+1,i2_fround$11860+1
 50290  01516C  C017  F02C         	movff	?i2___ftmul+2,i2_fround$11860+2
 50291                           
 50292                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 50293  015170  C02A  F015         	movff	i2_fround$11860,i2___ftmul@f1
 50294  015174  C02B  F016         	movff	i2_fround$11860+1,i2___ftmul@f1+1
 50295  015178  C02C  F017         	movff	i2_fround$11860+2,i2___ftmul@f1+2
 50296  01517C  0E00               	movlw	0
 50297  01517E  6E18               	movwf	i2___ftmul@f2,c
 50298  015180  0E00               	movlw	0
 50299  015182  6E19               	movwf	i2___ftmul@f2+1,c
 50300  015184  0E3F               	movlw	63
 50301  015186  6E1A               	movwf	i2___ftmul@f2+2,c
 50302  015188  EC60  F0C8         	call	i2___ftmul	;wreg free
 50303  01518C  C015  F024         	movff	?i2___ftmul,?i2_fround
 50304  015190  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 50305  015194  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 50306  015198  0012               	return	
 50307  01519A                     i2l10830:
 50308                           
 50309                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 50310  01519A  502D               	movf	i2fround@prec,w,c
 50311  01519C  0D03               	mullw	3
 50312  01519E  0EB3               	movlw	low __npowers_
 50313  0151A0  24F3               	addwf	prodl,w,c
 50314  0151A2  6EF6               	movwf	tblptrl,c
 50315  0151A4  0EFE               	movlw	high __npowers_
 50316  0151A6  20F4               	addwfc	prodh,w,c
 50317  0151A8  6EF7               	movwf	tblptrh,c
 50318  0151AA                     	if	1	;There are 3 active tblptr bytes
 50319  0151AA  6AF8               	clrf	tblptru,c
 50320  0151AC  0E00               	movlw	low (__mediumconst shr (0+16))
 50321  0151AE  22F8               	addwfc	tblptru,f,c
 50322  0151B0                     	endif
 50323  0151B0  0009               	tblrd		*+
 50324  0151B2  CFF5 F015          	movff	tablat,i2___ftmul@f1
 50325  0151B6  0009               	tblrd		*+
 50326  0151B8  CFF5 F016          	movff	tablat,i2___ftmul@f1+1
 50327  0151BC  000A               	tblrd		*-
 50328  0151BE  CFF5 F017          	movff	tablat,i2___ftmul@f1+2
 50329  0151C2  0E00               	movlw	0
 50330  0151C4  6E18               	movwf	i2___ftmul@f2,c
 50331  0151C6  0E00               	movlw	0
 50332  0151C8  6E19               	movwf	i2___ftmul@f2+1,c
 50333  0151CA  0E3F               	movlw	63
 50334  0151CC  6E1A               	movwf	i2___ftmul@f2+2,c
 50335  0151CE  EC60  F0C8         	call	i2___ftmul	;wreg free
 50336  0151D2  C015  F024         	movff	?i2___ftmul,?i2_fround
 50337  0151D6  C016  F025         	movff	?i2___ftmul+1,?i2_fround+1
 50338  0151DA  C017  F026         	movff	?i2___ftmul+2,?i2_fround+2
 50339  0151DE  0012               	return	
 50340  0151E0                     __end_ofi2_fround:
 50341                           	opt stack 0
 50342                           pclatu	equ	0xFFB
 50343                           pclath	equ	0xFFA
 50344                           tblptru	equ	0xFF8
 50345                           tblptrh	equ	0xFF7
 50346                           tblptrl	equ	0xFF6
 50347                           tablat	equ	0xFF5
 50348                           prodh	equ	0xFF4
 50349                           prodl	equ	0xFF3
 50350                           intcon	equ	0xFF2
 50351                           intcon2	equ	0xFF1
 50352                           intcon3	equ	0xFF0
 50353                           indf0	equ	0xFEF
 50354                           postinc0	equ	0xFEE
 50355                           fsr0h	equ	0xFEA
 50356                           fsr0l	equ	0xFE9
 50357                           wreg	equ	0xFE8
 50358                           indf1	equ	0xFE7
 50359                           postinc1	equ	0xFE6
 50360                           postdec1	equ	0xFE5
 50361                           fsr1h	equ	0xFE2
 50362                           fsr1l	equ	0xFE1
 50363                           indf2	equ	0xFDF
 50364                           postinc2	equ	0xFDE
 50365                           postdec2	equ	0xFDD
 50366                           fsr2h	equ	0xFDA
 50367                           fsr2l	equ	0xFD9
 50368                           status	equ	0xFD8
 50369                           
 50370 ;; *************** function i2___wmul *****************
 50371 ;; Defined at:
 50372 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 50373 ;; Parameters:    Size  Location     Type
 50374 ;;  multiplier      2   14[COMRAM] unsigned int 
 50375 ;;  multiplicand    2   16[COMRAM] unsigned int 
 50376 ;; Auto vars:     Size  Location     Type
 50377 ;;  __wmul          2   18[COMRAM] unsigned int 
 50378 ;; Return value:  Size  Location     Type
 50379 ;;                  2   14[COMRAM] unsigned int 
 50380 ;; Registers used:
 50381 ;;		wreg, status,2, status,0, prodl, prodh
 50382 ;; Tracked objects:
 50383 ;;		On entry : 0/0
 50384 ;;		On exit  : 0/0
 50385 ;;		Unchanged: 0/0
 50386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50390 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50391 ;;Total ram usage:        6 bytes
 50392 ;; Hardware stack levels used:    1
 50393 ;; This function calls:
 50394 ;;		Nothing
 50395 ;; This function is called by:
 50396 ;;		i2_fround
 50397 ;;		i2_scale
 50398 ;;		i2_sprintf
 50399 ;; This function uses a non-reentrant model
 50400 ;;
 50401                           
 50402                           	psect	text149
 50403  01B774                     __ptext149:
 50404                           	opt stack 0
 50405  01B774                     i2___wmul:
 50406                           	opt stack 17
 50407                           
 50408                           ;incstack = 0
 50409  01B774  500F               	movf	i2___wmul@multiplier,w,c
 50410  01B776  0211               	mulwf	i2___wmul@multiplicand,c
 50411  01B778  CFF3 F013          	movff	prodl,i2___wmul@product
 50412  01B77C  CFF4 F014          	movff	prodh,i2___wmul@product+1
 50413  01B780  500F               	movf	i2___wmul@multiplier,w,c
 50414  01B782  0212               	mulwf	i2___wmul@multiplicand+1,c
 50415  01B784  50F3               	movf	prodl,w,c
 50416  01B786  2614               	addwf	i2___wmul@product+1,f,c
 50417  01B788  5010               	movf	i2___wmul@multiplier+1,w,c
 50418  01B78A  0211               	mulwf	i2___wmul@multiplicand,c
 50419  01B78C  50F3               	movf	prodl,w,c
 50420  01B78E  2614               	addwf	i2___wmul@product+1,f,c
 50421  01B790  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 50422  01B794  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 50423  01B798  0012               	return	
 50424  01B79A                     __end_ofi2___wmul:
 50425                           	opt stack 0
 50426                           pclatu	equ	0xFFB
 50427                           pclath	equ	0xFFA
 50428                           tblptru	equ	0xFF8
 50429                           tblptrh	equ	0xFF7
 50430                           tblptrl	equ	0xFF6
 50431                           tablat	equ	0xFF5
 50432                           prodh	equ	0xFF4
 50433                           prodl	equ	0xFF3
 50434                           intcon	equ	0xFF2
 50435                           intcon2	equ	0xFF1
 50436                           intcon3	equ	0xFF0
 50437                           indf0	equ	0xFEF
 50438                           postinc0	equ	0xFEE
 50439                           fsr0h	equ	0xFEA
 50440                           fsr0l	equ	0xFE9
 50441                           wreg	equ	0xFE8
 50442                           indf1	equ	0xFE7
 50443                           postinc1	equ	0xFE6
 50444                           postdec1	equ	0xFE5
 50445                           fsr1h	equ	0xFE2
 50446                           fsr1l	equ	0xFE1
 50447                           indf2	equ	0xFDF
 50448                           postinc2	equ	0xFDE
 50449                           postdec2	equ	0xFDD
 50450                           fsr2h	equ	0xFDA
 50451                           fsr2l	equ	0xFD9
 50452                           status	equ	0xFD8
 50453                           
 50454 ;; *************** function i2___awmod *****************
 50455 ;; Defined at:
 50456 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 50457 ;; Parameters:    Size  Location     Type
 50458 ;;  dividend        2    0[COMRAM] int 
 50459 ;;  divisor         2    2[COMRAM] int 
 50460 ;; Auto vars:     Size  Location     Type
 50461 ;;  __awmod         1    5[COMRAM] unsigned char 
 50462 ;;  __awmod         1    4[COMRAM] unsigned char 
 50463 ;; Return value:  Size  Location     Type
 50464 ;;                  2    0[COMRAM] int 
 50465 ;; Registers used:
 50466 ;;		wreg, status,2, status,0, prodl
 50467 ;; Tracked objects:
 50468 ;;		On entry : 0/0
 50469 ;;		On exit  : 0/0
 50470 ;;		Unchanged: 0/0
 50471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50476 ;;Total ram usage:        6 bytes
 50477 ;; Hardware stack levels used:    1
 50478 ;; This function calls:
 50479 ;;		Nothing
 50480 ;; This function is called by:
 50481 ;;		i2_fround
 50482 ;;		i2_scale
 50483 ;; This function uses a non-reentrant model
 50484 ;;
 50485                           
 50486                           	psect	text150
 50487  01A602                     __ptext150:
 50488                           	opt stack 0
 50489  01A602                     i2___awmod:
 50490                           	opt stack 17
 50491                           
 50492                           ;incstack = 0
 50493  01A602  0E00               	movlw	0
 50494  01A604  6E06               	movwf	i2___awmod@sign,c
 50495  01A606  5002               	movf	i2___awmod@dividend+1,w,c
 50496  01A608  0A80               	xorlw	128
 50497  01A60A  6EF3               	movwf	prodl,c
 50498  01A60C  0E80               	movlw	128
 50499  01A60E  5CF3               	subwf	prodl,w,c
 50500  01A610  0E00               	movlw	0
 50501  01A612  B4D8               	btfsc	status,2,c
 50502  01A614  5C01               	subwf	i2___awmod@dividend,w,c
 50503  01A616  B0D8               	btfsc	status,0,c
 50504  01A618  D006               	goto	i2l10450
 50505  01A61A  6C01               	negf	i2___awmod@dividend,c
 50506  01A61C  1E02               	comf	i2___awmod@dividend+1,f,c
 50507  01A61E  B0D8               	btfsc	status,0,c
 50508  01A620  2A02               	incf	i2___awmod@dividend+1,f,c
 50509  01A622  0E01               	movlw	1
 50510  01A624  6E06               	movwf	i2___awmod@sign,c
 50511  01A626                     i2l10450:
 50512  01A626  5004               	movf	i2___awmod@divisor+1,w,c
 50513  01A628  0A80               	xorlw	128
 50514  01A62A  6EF3               	movwf	prodl,c
 50515  01A62C  0E80               	movlw	128
 50516  01A62E  5CF3               	subwf	prodl,w,c
 50517  01A630  0E00               	movlw	0
 50518  01A632  B4D8               	btfsc	status,2,c
 50519  01A634  5C03               	subwf	i2___awmod@divisor,w,c
 50520  01A636  B0D8               	btfsc	status,0,c
 50521  01A638  D004               	goto	i2l10454
 50522  01A63A  6C03               	negf	i2___awmod@divisor,c
 50523  01A63C  1E04               	comf	i2___awmod@divisor+1,f,c
 50524  01A63E  B0D8               	btfsc	status,0,c
 50525  01A640  2A04               	incf	i2___awmod@divisor+1,f,c
 50526  01A642                     i2l10454:
 50527  01A642  5004               	movf	i2___awmod@divisor+1,w,c
 50528  01A644  1003               	iorwf	i2___awmod@divisor,w,c
 50529  01A646  B4D8               	btfsc	status,2,c
 50530  01A648  D018               	goto	i2l10470
 50531  01A64A  0E01               	movlw	1
 50532  01A64C  6E05               	movwf	i2___awmod@counter,c
 50533  01A64E  D004               	goto	i2l10460
 50534  01A650                     i2l10458:
 50535  01A650  90D8               	bcf	status,0,c
 50536  01A652  3603               	rlcf	i2___awmod@divisor,f,c
 50537  01A654  3604               	rlcf	i2___awmod@divisor+1,f,c
 50538  01A656  2A05               	incf	i2___awmod@counter,f,c
 50539  01A658                     i2l10460:
 50540  01A658  AE04               	btfss	i2___awmod@divisor+1,7,c
 50541  01A65A  D7FA               	goto	i2l10458
 50542  01A65C                     i2l10462:
 50543  01A65C  5003               	movf	i2___awmod@divisor,w,c
 50544  01A65E  5C01               	subwf	i2___awmod@dividend,w,c
 50545  01A660  5004               	movf	i2___awmod@divisor+1,w,c
 50546  01A662  5802               	subwfb	i2___awmod@dividend+1,w,c
 50547  01A664  A0D8               	btfss	status,0,c
 50548  01A666  D004               	goto	i2l10466
 50549  01A668  5003               	movf	i2___awmod@divisor,w,c
 50550  01A66A  5E01               	subwf	i2___awmod@dividend,f,c
 50551  01A66C  5004               	movf	i2___awmod@divisor+1,w,c
 50552  01A66E  5A02               	subwfb	i2___awmod@dividend+1,f,c
 50553  01A670                     i2l10466:
 50554  01A670  90D8               	bcf	status,0,c
 50555  01A672  3204               	rrcf	i2___awmod@divisor+1,f,c
 50556  01A674  3203               	rrcf	i2___awmod@divisor,f,c
 50557  01A676  2E05               	decfsz	i2___awmod@counter,f,c
 50558  01A678  D7F1               	goto	i2l10462
 50559  01A67A                     i2l10470:
 50560  01A67A  5006               	movf	i2___awmod@sign,w,c
 50561  01A67C  B4D8               	btfsc	status,2,c
 50562  01A67E  D004               	goto	i2l10474
 50563  01A680  6C01               	negf	i2___awmod@dividend,c
 50564  01A682  1E02               	comf	i2___awmod@dividend+1,f,c
 50565  01A684  B0D8               	btfsc	status,0,c
 50566  01A686  2A02               	incf	i2___awmod@dividend+1,f,c
 50567  01A688                     i2l10474:
 50568  01A688  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 50569  01A68C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 50570  01A690  0012               	return	
 50571  01A692                     __end_ofi2___awmod:
 50572                           	opt stack 0
 50573                           pclatu	equ	0xFFB
 50574                           pclath	equ	0xFFA
 50575                           tblptru	equ	0xFF8
 50576                           tblptrh	equ	0xFF7
 50577                           tblptrl	equ	0xFF6
 50578                           tablat	equ	0xFF5
 50579                           prodh	equ	0xFF4
 50580                           prodl	equ	0xFF3
 50581                           intcon	equ	0xFF2
 50582                           intcon2	equ	0xFF1
 50583                           intcon3	equ	0xFF0
 50584                           indf0	equ	0xFEF
 50585                           postinc0	equ	0xFEE
 50586                           fsr0h	equ	0xFEA
 50587                           fsr0l	equ	0xFE9
 50588                           wreg	equ	0xFE8
 50589                           indf1	equ	0xFE7
 50590                           postinc1	equ	0xFE6
 50591                           postdec1	equ	0xFE5
 50592                           fsr1h	equ	0xFE2
 50593                           fsr1l	equ	0xFE1
 50594                           indf2	equ	0xFDF
 50595                           postinc2	equ	0xFDE
 50596                           postdec2	equ	0xFDD
 50597                           fsr2h	equ	0xFDA
 50598                           fsr2l	equ	0xFD9
 50599                           status	equ	0xFD8
 50600                           
 50601 ;; *************** function i2___awdiv *****************
 50602 ;; Defined at:
 50603 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 50604 ;; Parameters:    Size  Location     Type
 50605 ;;  dividend        2    6[COMRAM] int 
 50606 ;;  divisor         2    8[COMRAM] int 
 50607 ;; Auto vars:     Size  Location     Type
 50608 ;;  __awdiv         2   12[COMRAM] int 
 50609 ;;  __awdiv         1   11[COMRAM] unsigned char 
 50610 ;;  __awdiv         1   10[COMRAM] unsigned char 
 50611 ;; Return value:  Size  Location     Type
 50612 ;;                  2    6[COMRAM] int 
 50613 ;; Registers used:
 50614 ;;		wreg, status,2, status,0, prodl
 50615 ;; Tracked objects:
 50616 ;;		On entry : 0/0
 50617 ;;		On exit  : 0/0
 50618 ;;		Unchanged: 0/0
 50619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50624 ;;Total ram usage:        8 bytes
 50625 ;; Hardware stack levels used:    1
 50626 ;; This function calls:
 50627 ;;		Nothing
 50628 ;; This function is called by:
 50629 ;;		i2_fround
 50630 ;;		i2_scale
 50631 ;;		i2_sprintf
 50632 ;; This function uses a non-reentrant model
 50633 ;;
 50634                           
 50635                           	psect	text151
 50636  01A2F8                     __ptext151:
 50637                           	opt stack 0
 50638  01A2F8                     i2___awdiv:
 50639                           	opt stack 17
 50640                           
 50641                           ;incstack = 0
 50642  01A2F8  0E00               	movlw	0
 50643  01A2FA  6E0C               	movwf	i2___awdiv@sign,c
 50644  01A2FC  500A               	movf	i2___awdiv@divisor+1,w,c
 50645  01A2FE  0A80               	xorlw	128
 50646  01A300  6EF3               	movwf	prodl,c
 50647  01A302  0E80               	movlw	128
 50648  01A304  5CF3               	subwf	prodl,w,c
 50649  01A306  0E00               	movlw	0
 50650  01A308  B4D8               	btfsc	status,2,c
 50651  01A30A  5C09               	subwf	i2___awdiv@divisor,w,c
 50652  01A30C  B0D8               	btfsc	status,0,c
 50653  01A30E  D006               	goto	i2l10406
 50654  01A310  6C09               	negf	i2___awdiv@divisor,c
 50655  01A312  1E0A               	comf	i2___awdiv@divisor+1,f,c
 50656  01A314  B0D8               	btfsc	status,0,c
 50657  01A316  2A0A               	incf	i2___awdiv@divisor+1,f,c
 50658  01A318  0E01               	movlw	1
 50659  01A31A  6E0C               	movwf	i2___awdiv@sign,c
 50660  01A31C                     i2l10406:
 50661  01A31C  5008               	movf	i2___awdiv@dividend+1,w,c
 50662  01A31E  0A80               	xorlw	128
 50663  01A320  6EF3               	movwf	prodl,c
 50664  01A322  0E80               	movlw	128
 50665  01A324  5CF3               	subwf	prodl,w,c
 50666  01A326  0E00               	movlw	0
 50667  01A328  B4D8               	btfsc	status,2,c
 50668  01A32A  5C07               	subwf	i2___awdiv@dividend,w,c
 50669  01A32C  B0D8               	btfsc	status,0,c
 50670  01A32E  D006               	goto	i2l10412
 50671  01A330  6C07               	negf	i2___awdiv@dividend,c
 50672  01A332  1E08               	comf	i2___awdiv@dividend+1,f,c
 50673  01A334  B0D8               	btfsc	status,0,c
 50674  01A336  2A08               	incf	i2___awdiv@dividend+1,f,c
 50675  01A338  0E01               	movlw	1
 50676  01A33A  1A0C               	xorwf	i2___awdiv@sign,f,c
 50677  01A33C                     i2l10412:
 50678  01A33C  0E00               	movlw	0
 50679  01A33E  6E0E               	movwf	i2___awdiv@quotient+1,c
 50680  01A340  0E00               	movlw	0
 50681  01A342  6E0D               	movwf	i2___awdiv@quotient,c
 50682  01A344  500A               	movf	i2___awdiv@divisor+1,w,c
 50683  01A346  1009               	iorwf	i2___awdiv@divisor,w,c
 50684  01A348  B4D8               	btfsc	status,2,c
 50685  01A34A  D01C               	goto	i2l10434
 50686  01A34C  0E01               	movlw	1
 50687  01A34E  6E0B               	movwf	i2___awdiv@counter,c
 50688  01A350  D004               	goto	i2l10420
 50689  01A352                     i2l10418:
 50690  01A352  90D8               	bcf	status,0,c
 50691  01A354  3609               	rlcf	i2___awdiv@divisor,f,c
 50692  01A356  360A               	rlcf	i2___awdiv@divisor+1,f,c
 50693  01A358  2A0B               	incf	i2___awdiv@counter,f,c
 50694  01A35A                     i2l10420:
 50695  01A35A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 50696  01A35C  D7FA               	goto	i2l10418
 50697  01A35E                     i2l10422:
 50698  01A35E  90D8               	bcf	status,0,c
 50699  01A360  360D               	rlcf	i2___awdiv@quotient,f,c
 50700  01A362  360E               	rlcf	i2___awdiv@quotient+1,f,c
 50701  01A364  5009               	movf	i2___awdiv@divisor,w,c
 50702  01A366  5C07               	subwf	i2___awdiv@dividend,w,c
 50703  01A368  500A               	movf	i2___awdiv@divisor+1,w,c
 50704  01A36A  5808               	subwfb	i2___awdiv@dividend+1,w,c
 50705  01A36C  A0D8               	btfss	status,0,c
 50706  01A36E  D005               	goto	i2l10430
 50707  01A370  5009               	movf	i2___awdiv@divisor,w,c
 50708  01A372  5E07               	subwf	i2___awdiv@dividend,f,c
 50709  01A374  500A               	movf	i2___awdiv@divisor+1,w,c
 50710  01A376  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 50711  01A378  800D               	bsf	i2___awdiv@quotient,0,c
 50712  01A37A                     i2l10430:
 50713  01A37A  90D8               	bcf	status,0,c
 50714  01A37C  320A               	rrcf	i2___awdiv@divisor+1,f,c
 50715  01A37E  3209               	rrcf	i2___awdiv@divisor,f,c
 50716  01A380  2E0B               	decfsz	i2___awdiv@counter,f,c
 50717  01A382  D7ED               	goto	i2l10422
 50718  01A384                     i2l10434:
 50719  01A384  500C               	movf	i2___awdiv@sign,w,c
 50720  01A386  B4D8               	btfsc	status,2,c
 50721  01A388  D004               	goto	i2l10438
 50722  01A38A  6C0D               	negf	i2___awdiv@quotient,c
 50723  01A38C  1E0E               	comf	i2___awdiv@quotient+1,f,c
 50724  01A38E  B0D8               	btfsc	status,0,c
 50725  01A390  2A0E               	incf	i2___awdiv@quotient+1,f,c
 50726  01A392                     i2l10438:
 50727  01A392  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 50728  01A396  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 50729  01A39A  0012               	return	
 50730  01A39C                     __end_ofi2___awdiv:
 50731                           	opt stack 0
 50732                           pclatu	equ	0xFFB
 50733                           pclath	equ	0xFFA
 50734                           tblptru	equ	0xFF8
 50735                           tblptrh	equ	0xFF7
 50736                           tblptrl	equ	0xFF6
 50737                           tablat	equ	0xFF5
 50738                           prodh	equ	0xFF4
 50739                           prodl	equ	0xFF3
 50740                           intcon	equ	0xFF2
 50741                           intcon2	equ	0xFF1
 50742                           intcon3	equ	0xFF0
 50743                           indf0	equ	0xFEF
 50744                           postinc0	equ	0xFEE
 50745                           fsr0h	equ	0xFEA
 50746                           fsr0l	equ	0xFE9
 50747                           wreg	equ	0xFE8
 50748                           indf1	equ	0xFE7
 50749                           postinc1	equ	0xFE6
 50750                           postdec1	equ	0xFE5
 50751                           fsr1h	equ	0xFE2
 50752                           fsr1l	equ	0xFE1
 50753                           indf2	equ	0xFDF
 50754                           postinc2	equ	0xFDE
 50755                           postdec2	equ	0xFDD
 50756                           fsr2h	equ	0xFDA
 50757                           fsr2l	equ	0xFD9
 50758                           status	equ	0xFD8
 50759                           
 50760 ;; *************** function i2__tdiv_to_l_ *****************
 50761 ;; Defined at:
 50762 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
 50763 ;; Parameters:    Size  Location     Type
 50764 ;;  f1              3    0[COMRAM] float 
 50765 ;;  f2              3    3[COMRAM] float 
 50766 ;; Auto vars:     Size  Location     Type
 50767 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 50768 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 50769 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 50770 ;; Return value:  Size  Location     Type
 50771 ;;                  4    0[COMRAM] unsigned long 
 50772 ;; Registers used:
 50773 ;;		wreg, status,2, status,0
 50774 ;; Tracked objects:
 50775 ;;		On entry : 0/0
 50776 ;;		On exit  : 0/0
 50777 ;;		Unchanged: 0/0
 50778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 50779 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50780 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50781 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50782 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 50783 ;;Total ram usage:       15 bytes
 50784 ;; Hardware stack levels used:    1
 50785 ;; This function calls:
 50786 ;;		Nothing
 50787 ;; This function is called by:
 50788 ;;		i2_sprintf
 50789 ;; This function uses a non-reentrant model
 50790 ;;
 50791                           
 50792                           	psect	text152
 50793  0180BE                     __ptext152:
 50794                           	opt stack 0
 50795  0180BE                     i2__tdiv_to_l_:
 50796                           	opt stack 18
 50797                           
 50798                           ;incstack = 0
 50799  0180BE  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 50800  0180C2  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 50801  0180C4  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 50802  0180C6  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 50803  0180C8  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 50804  0180CA  E301               	bnc	u1165_41
 50805  0180CC  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 50806  0180CE                     u1165_41:
 50807  0180CE  5007               	movf	??i2__tdiv_to_l_,w,c
 50808  0180D0  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 50809  0180D2  660F               	tstfsz	i2__tdiv_to_l_@exp1& (0+255),c
 50810  0180D4  D009               	goto	i2l10936
 50811  0180D6  0E00               	movlw	0
 50812  0180D8  6E01               	movwf	?i2__tdiv_to_l_,c
 50813  0180DA  0E00               	movlw	0
 50814  0180DC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50815  0180DE  0E00               	movlw	0
 50816  0180E0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50817  0180E2  0E00               	movlw	0
 50818  0180E4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50819  0180E6  0012               	return	
 50820  0180E8                     i2l10936:
 50821  0180E8  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 50822  0180EC  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 50823  0180EE  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 50824  0180F0  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 50825  0180F2  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 50826  0180F4  E301               	bnc	u1167_41
 50827  0180F6  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 50828  0180F8                     u1167_41:
 50829  0180F8  5007               	movf	??i2__tdiv_to_l_,w,c
 50830  0180FA  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 50831  0180FC  660E               	tstfsz	i2__tdiv_to_l_@cntr& (0+255),c
 50832  0180FE  D009               	goto	i2l10942
 50833  018100  0E00               	movlw	0
 50834  018102  6E01               	movwf	?i2__tdiv_to_l_,c
 50835  018104  0E00               	movlw	0
 50836  018106  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50837  018108  0E00               	movlw	0
 50838  01810A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50839  01810C  0E00               	movlw	0
 50840  01810E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50841  018110  0012               	return	
 50842  018112                     i2l10942:
 50843  018112  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 50844  018114  0EFF               	movlw	255
 50845  018116  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 50846  018118  0EFF               	movlw	255
 50847  01811A  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 50848  01811C  0E00               	movlw	0
 50849  01811E  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 50850  018120  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 50851  018122  0EFF               	movlw	255
 50852  018124  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 50853  018126  0EFF               	movlw	255
 50854  018128  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 50855  01812A  0E00               	movlw	0
 50856  01812C  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 50857  01812E  0E00               	movlw	0
 50858  018130  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 50859  018132  0E00               	movlw	0
 50860  018134  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 50861  018136  0E00               	movlw	0
 50862  018138  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 50863  01813A  0E00               	movlw	0
 50864  01813C  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 50865  01813E  0E7F               	movlw	127
 50866  018140  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 50867  018142  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 50868  018144  0F98               	addlw	152
 50869  018146  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 50870  018148  0E18               	movlw	24
 50871  01814A  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 50872  01814C                     i2l2587:
 50873  01814C  90D8               	bcf	status,0,c
 50874  01814E  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 50875  018150  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 50876  018152  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 50877  018154  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 50878  018156  5004               	movf	i2__tdiv_to_l_@f2,w,c
 50879  018158  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 50880  01815A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 50881  01815C  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 50882  01815E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 50883  018160  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 50884  018162  A0D8               	btfss	status,0,c
 50885  018164  D007               	goto	i2l2588
 50886  018166  5004               	movf	i2__tdiv_to_l_@f2,w,c
 50887  018168  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 50888  01816A  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 50889  01816C  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 50890  01816E  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 50891  018170  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 50892  018172  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 50893  018174                     i2l2588:
 50894  018174  90D8               	bcf	status,0,c
 50895  018176  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 50896  018178  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 50897  01817A  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 50898  01817C  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 50899  01817E  D7E6               	goto	i2l2587
 50900  018180  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 50901  018182  D019               	goto	i2l10974
 50902  018184  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 50903  018186  0A80               	xorlw	128
 50904  018188  6E07               	movwf	??i2__tdiv_to_l_& (0+255),c
 50905  01818A  0EE9               	movlw	233
 50906  01818C  0A80               	xorlw	128
 50907  01818E  5C07               	subwf	??i2__tdiv_to_l_,w,c
 50908  018190  B0D8               	btfsc	status,0,c
 50909  018192  D009               	goto	i2l10970
 50910  018194  0E00               	movlw	0
 50911  018196  6E01               	movwf	?i2__tdiv_to_l_,c
 50912  018198  0E00               	movlw	0
 50913  01819A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50914  01819C  0E00               	movlw	0
 50915  01819E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50916  0181A0  0E00               	movlw	0
 50917  0181A2  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50918  0181A4  0012               	return	
 50919  0181A6                     i2l10970:
 50920  0181A6  90D8               	bcf	status,0,c
 50921  0181A8  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 50922  0181AA  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 50923  0181AC  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 50924  0181AE  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 50925  0181B0  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 50926  0181B2  D7F9               	goto	i2l10970
 50927  0181B4  D014               	goto	i2l2594
 50928  0181B6                     i2l10974:
 50929  0181B6  0E17               	movlw	23
 50930  0181B8  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 50931  0181BA  D00F               	goto	i2l10982
 50932  0181BC  0E00               	movlw	0
 50933  0181BE  6E01               	movwf	?i2__tdiv_to_l_,c
 50934  0181C0  0E00               	movlw	0
 50935  0181C2  6E02               	movwf	?i2__tdiv_to_l_+1,c
 50936  0181C4  0E00               	movlw	0
 50937  0181C6  6E03               	movwf	?i2__tdiv_to_l_+2,c
 50938  0181C8  0E00               	movlw	0
 50939  0181CA  6E04               	movwf	?i2__tdiv_to_l_+3,c
 50940  0181CC  0012               	return	
 50941  0181CE                     i2l10980:
 50942  0181CE  90D8               	bcf	status,0,c
 50943  0181D0  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 50944  0181D2  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 50945  0181D4  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 50946  0181D6  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 50947  0181D8  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 50948  0181DA                     i2l10982:
 50949  0181DA  660F               	tstfsz	i2__tdiv_to_l_@exp1,c
 50950  0181DC  D7F8               	goto	i2l10980
 50951  0181DE                     i2l2594:
 50952  0181DE  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 50953  0181E2  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 50954  0181E6  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 50955  0181EA  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 50956  0181EE  0012               	return	
 50957  0181F0                     __end_ofi2__tdiv_to_l_:
 50958                           	opt stack 0
 50959                           pclatu	equ	0xFFB
 50960                           pclath	equ	0xFFA
 50961                           tblptru	equ	0xFF8
 50962                           tblptrh	equ	0xFF7
 50963                           tblptrl	equ	0xFF6
 50964                           tablat	equ	0xFF5
 50965                           prodh	equ	0xFF4
 50966                           prodl	equ	0xFF3
 50967                           intcon	equ	0xFF2
 50968                           intcon2	equ	0xFF1
 50969                           intcon3	equ	0xFF0
 50970                           indf0	equ	0xFEF
 50971                           postinc0	equ	0xFEE
 50972                           fsr0h	equ	0xFEA
 50973                           fsr0l	equ	0xFE9
 50974                           wreg	equ	0xFE8
 50975                           indf1	equ	0xFE7
 50976                           postinc1	equ	0xFE6
 50977                           postdec1	equ	0xFE5
 50978                           fsr1h	equ	0xFE2
 50979                           fsr1l	equ	0xFE1
 50980                           indf2	equ	0xFDF
 50981                           postinc2	equ	0xFDE
 50982                           postdec2	equ	0xFDD
 50983                           fsr2h	equ	0xFDA
 50984                           fsr2l	equ	0xFD9
 50985                           status	equ	0xFD8
 50986                           
 50987 ;; *************** function i2__div_to_l_ *****************
 50988 ;; Defined at:
 50989 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
 50990 ;; Parameters:    Size  Location     Type
 50991 ;;  f1              3    0[COMRAM] unsigned long 
 50992 ;;  f2              3    3[COMRAM] unsigned long 
 50993 ;; Auto vars:     Size  Location     Type
 50994 ;;  _div_to_l_      4   10[COMRAM] unsigned long 
 50995 ;;  _div_to_l_      1   15[COMRAM] unsigned char 
 50996 ;;  _div_to_l_      1   14[COMRAM] unsigned char 
 50997 ;; Return value:  Size  Location     Type
 50998 ;;                  4    0[COMRAM] unsigned long 
 50999 ;; Registers used:
 51000 ;;		wreg, status,2, status,0
 51001 ;; Tracked objects:
 51002 ;;		On entry : 0/0
 51003 ;;		On exit  : 0/0
 51004 ;;		Unchanged: 0/0
 51005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51007 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51008 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51009 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51010 ;;Total ram usage:       16 bytes
 51011 ;; Hardware stack levels used:    1
 51012 ;; This function calls:
 51013 ;;		Nothing
 51014 ;; This function is called by:
 51015 ;;		i2_sprintf
 51016 ;; This function uses a non-reentrant model
 51017 ;;
 51018                           
 51019                           	psect	text153
 51020  017A28                     __ptext153:
 51021                           	opt stack 0
 51022  017A28                     i2__div_to_l_:
 51023                           	opt stack 18
 51024                           
 51025                           ;incstack = 0
 51026  017A28  C001  F007         	movff	i2__div_to_l_@f1,??i2__div_to_l_
 51027  017A2C  C002  F008         	movff	i2__div_to_l_@f1+1,??i2__div_to_l_+1
 51028  017A30  C003  F009         	movff	i2__div_to_l_@f1+2,??i2__div_to_l_+2
 51029  017A34  C004  F00A         	movff	i2__div_to_l_@f1+3,??i2__div_to_l_+3
 51030  017A38  0E18               	movlw	24
 51031  017A3A  D005               	goto	i2u1156_40
 51032  017A3C                     i2u1156_45:
 51033  017A3C  90D8               	bcf	status,0,c
 51034  017A3E  320A               	rrcf	??i2__div_to_l_+3,f,c
 51035  017A40  3209               	rrcf	??i2__div_to_l_+2,f,c
 51036  017A42  3208               	rrcf	??i2__div_to_l_+1,f,c
 51037  017A44  3207               	rrcf	??i2__div_to_l_,f,c
 51038  017A46                     i2u1156_40:
 51039  017A46  2EE8               	decfsz	wreg,f,c
 51040  017A48  D7F9               	goto	i2u1156_45
 51041  017A4A  5007               	movf	??i2__div_to_l_,w,c
 51042  017A4C  6E10               	movwf	i2__div_to_l_@exp1,c
 51043  017A4E  6610               	tstfsz	i2__div_to_l_@exp1& (0+255),c
 51044  017A50  D009               	goto	i2l10878
 51045  017A52  0E00               	movlw	0
 51046  017A54  6E01               	movwf	?i2__div_to_l_,c
 51047  017A56  0E00               	movlw	0
 51048  017A58  6E02               	movwf	?i2__div_to_l_+1,c
 51049  017A5A  0E00               	movlw	0
 51050  017A5C  6E03               	movwf	?i2__div_to_l_+2,c
 51051  017A5E  0E00               	movlw	0
 51052  017A60  6E04               	movwf	?i2__div_to_l_+3,c
 51053  017A62  0012               	return	
 51054  017A64                     i2l10878:
 51055  017A64  C004  F007         	movff	i2__div_to_l_@f2,??i2__div_to_l_
 51056  017A68  C005  F008         	movff	i2__div_to_l_@f2+1,??i2__div_to_l_+1
 51057  017A6C  C006  F009         	movff	i2__div_to_l_@f2+2,??i2__div_to_l_+2
 51058  017A70  C007  F00A         	movff	i2__div_to_l_@f2+3,??i2__div_to_l_+3
 51059  017A74  0E18               	movlw	24
 51060  017A76  D005               	goto	i2u1158_40
 51061  017A78                     i2u1158_45:
 51062  017A78  90D8               	bcf	status,0,c
 51063  017A7A  320A               	rrcf	??i2__div_to_l_+3,f,c
 51064  017A7C  3209               	rrcf	??i2__div_to_l_+2,f,c
 51065  017A7E  3208               	rrcf	??i2__div_to_l_+1,f,c
 51066  017A80  3207               	rrcf	??i2__div_to_l_,f,c
 51067  017A82                     i2u1158_40:
 51068  017A82  2EE8               	decfsz	wreg,f,c
 51069  017A84  D7F9               	goto	i2u1158_45
 51070  017A86  5007               	movf	??i2__div_to_l_,w,c
 51071  017A88  6E0F               	movwf	i2__div_to_l_@cntr,c
 51072  017A8A  660F               	tstfsz	i2__div_to_l_@cntr& (0+255),c
 51073  017A8C  D009               	goto	i2l10884
 51074  017A8E  0E00               	movlw	0
 51075  017A90  6E01               	movwf	?i2__div_to_l_,c
 51076  017A92  0E00               	movlw	0
 51077  017A94  6E02               	movwf	?i2__div_to_l_+1,c
 51078  017A96  0E00               	movlw	0
 51079  017A98  6E03               	movwf	?i2__div_to_l_+2,c
 51080  017A9A  0E00               	movlw	0
 51081  017A9C  6E04               	movwf	?i2__div_to_l_+3,c
 51082  017A9E  0012               	return	
 51083  017AA0                     i2l10884:
 51084  017AA0  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 51085  017AA2  0EFF               	movlw	255
 51086  017AA4  1601               	andwf	i2__div_to_l_@f1,f,c
 51087  017AA6  0EFF               	movlw	255
 51088  017AA8  1602               	andwf	i2__div_to_l_@f1+1,f,c
 51089  017AAA  0EFF               	movlw	255
 51090  017AAC  1603               	andwf	i2__div_to_l_@f1+2,f,c
 51091  017AAE  0E00               	movlw	0
 51092  017AB0  1604               	andwf	i2__div_to_l_@f1+3,f,c
 51093  017AB2  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 51094  017AB4  0EFF               	movlw	255
 51095  017AB6  1604               	andwf	i2__div_to_l_@f2,f,c
 51096  017AB8  0EFF               	movlw	255
 51097  017ABA  1605               	andwf	i2__div_to_l_@f2+1,f,c
 51098  017ABC  0EFF               	movlw	255
 51099  017ABE  1606               	andwf	i2__div_to_l_@f2+2,f,c
 51100  017AC0  0E00               	movlw	0
 51101  017AC2  1607               	andwf	i2__div_to_l_@f2+3,f,c
 51102  017AC4  0E00               	movlw	0
 51103  017AC6  6E0B               	movwf	i2__div_to_l_@quot,c
 51104  017AC8  0E00               	movlw	0
 51105  017ACA  6E0C               	movwf	i2__div_to_l_@quot+1,c
 51106  017ACC  0E00               	movlw	0
 51107  017ACE  6E0D               	movwf	i2__div_to_l_@quot+2,c
 51108  017AD0  0E00               	movlw	0
 51109  017AD2  6E0E               	movwf	i2__div_to_l_@quot+3,c
 51110  017AD4  0E7F               	movlw	127
 51111  017AD6  5E10               	subwf	i2__div_to_l_@exp1,f,c
 51112  017AD8  500F               	movf	i2__div_to_l_@cntr,w,c
 51113  017ADA  0FA0               	addlw	160
 51114  017ADC  5E10               	subwf	i2__div_to_l_@exp1,f,c
 51115  017ADE  0E20               	movlw	32
 51116  017AE0  6E0F               	movwf	i2__div_to_l_@cntr,c
 51117  017AE2                     i2l10898:
 51118  017AE2  90D8               	bcf	status,0,c
 51119  017AE4  360B               	rlcf	i2__div_to_l_@quot,f,c
 51120  017AE6  360C               	rlcf	i2__div_to_l_@quot+1,f,c
 51121  017AE8  360D               	rlcf	i2__div_to_l_@quot+2,f,c
 51122  017AEA  360E               	rlcf	i2__div_to_l_@quot+3,f,c
 51123  017AEC  5004               	movf	i2__div_to_l_@f2,w,c
 51124  017AEE  5C01               	subwf	i2__div_to_l_@f1,w,c
 51125  017AF0  5005               	movf	i2__div_to_l_@f2+1,w,c
 51126  017AF2  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 51127  017AF4  5006               	movf	i2__div_to_l_@f2+2,w,c
 51128  017AF6  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 51129  017AF8  5007               	movf	i2__div_to_l_@f2+3,w,c
 51130  017AFA  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 51131  017AFC  A0D8               	btfss	status,0,c
 51132  017AFE  D009               	goto	i2l10906
 51133  017B00  5004               	movf	i2__div_to_l_@f2,w,c
 51134  017B02  5E01               	subwf	i2__div_to_l_@f1,f,c
 51135  017B04  5005               	movf	i2__div_to_l_@f2+1,w,c
 51136  017B06  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 51137  017B08  5006               	movf	i2__div_to_l_@f2+2,w,c
 51138  017B0A  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 51139  017B0C  5007               	movf	i2__div_to_l_@f2+3,w,c
 51140  017B0E  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 51141  017B10  800B               	bsf	i2__div_to_l_@quot,0,c
 51142  017B12                     i2l10906:
 51143  017B12  90D8               	bcf	status,0,c
 51144  017B14  3601               	rlcf	i2__div_to_l_@f1,f,c
 51145  017B16  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 51146  017B18  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 51147  017B1A  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 51148  017B1C  2E0F               	decfsz	i2__div_to_l_@cntr,f,c
 51149  017B1E  D7E1               	goto	i2l10898
 51150  017B20  AE10               	btfss	i2__div_to_l_@exp1,7,c
 51151  017B22  D019               	goto	i2l10920
 51152  017B24  5010               	movf	i2__div_to_l_@exp1,w,c
 51153  017B26  0A80               	xorlw	128
 51154  017B28  6E07               	movwf	??i2__div_to_l_& (0+255),c
 51155  017B2A  0EE1               	movlw	225
 51156  017B2C  0A80               	xorlw	128
 51157  017B2E  5C07               	subwf	??i2__div_to_l_,w,c
 51158  017B30  B0D8               	btfsc	status,0,c
 51159  017B32  D009               	goto	i2l10916
 51160  017B34  0E00               	movlw	0
 51161  017B36  6E01               	movwf	?i2__div_to_l_,c
 51162  017B38  0E00               	movlw	0
 51163  017B3A  6E02               	movwf	?i2__div_to_l_+1,c
 51164  017B3C  0E00               	movlw	0
 51165  017B3E  6E03               	movwf	?i2__div_to_l_+2,c
 51166  017B40  0E00               	movlw	0
 51167  017B42  6E04               	movwf	?i2__div_to_l_+3,c
 51168  017B44  0012               	return	
 51169  017B46                     i2l10916:
 51170  017B46  90D8               	bcf	status,0,c
 51171  017B48  320E               	rrcf	i2__div_to_l_@quot+3,f,c
 51172  017B4A  320D               	rrcf	i2__div_to_l_@quot+2,f,c
 51173  017B4C  320C               	rrcf	i2__div_to_l_@quot+1,f,c
 51174  017B4E  320B               	rrcf	i2__div_to_l_@quot,f,c
 51175  017B50  3E10               	incfsz	i2__div_to_l_@exp1,f,c
 51176  017B52  D7F9               	goto	i2l10916
 51177  017B54  D014               	goto	i2l2476
 51178  017B56                     i2l10920:
 51179  017B56  0E1F               	movlw	31
 51180  017B58  6410               	cpfsgt	i2__div_to_l_@exp1,c
 51181  017B5A  D00F               	goto	i2l10928
 51182  017B5C  0E00               	movlw	0
 51183  017B5E  6E01               	movwf	?i2__div_to_l_,c
 51184  017B60  0E00               	movlw	0
 51185  017B62  6E02               	movwf	?i2__div_to_l_+1,c
 51186  017B64  0E00               	movlw	0
 51187  017B66  6E03               	movwf	?i2__div_to_l_+2,c
 51188  017B68  0E00               	movlw	0
 51189  017B6A  6E04               	movwf	?i2__div_to_l_+3,c
 51190  017B6C  0012               	return	
 51191  017B6E                     i2l10926:
 51192  017B6E  90D8               	bcf	status,0,c
 51193  017B70  360B               	rlcf	i2__div_to_l_@quot,f,c
 51194  017B72  360C               	rlcf	i2__div_to_l_@quot+1,f,c
 51195  017B74  360D               	rlcf	i2__div_to_l_@quot+2,f,c
 51196  017B76  360E               	rlcf	i2__div_to_l_@quot+3,f,c
 51197  017B78  0610               	decf	i2__div_to_l_@exp1,f,c
 51198  017B7A                     i2l10928:
 51199  017B7A  6610               	tstfsz	i2__div_to_l_@exp1,c
 51200  017B7C  D7F8               	goto	i2l10926
 51201  017B7E                     i2l2476:
 51202  017B7E  C00B  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 51203  017B82  C00C  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 51204  017B86  C00D  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 51205  017B8A  C00E  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 51206  017B8E  0012               	return	
 51207  017B90                     __end_ofi2__div_to_l_:
 51208                           	opt stack 0
 51209                           pclatu	equ	0xFFB
 51210                           pclath	equ	0xFFA
 51211                           tblptru	equ	0xFF8
 51212                           tblptrh	equ	0xFF7
 51213                           tblptrl	equ	0xFF6
 51214                           tablat	equ	0xFF5
 51215                           prodh	equ	0xFF4
 51216                           prodl	equ	0xFF3
 51217                           intcon	equ	0xFF2
 51218                           intcon2	equ	0xFF1
 51219                           intcon3	equ	0xFF0
 51220                           indf0	equ	0xFEF
 51221                           postinc0	equ	0xFEE
 51222                           fsr0h	equ	0xFEA
 51223                           fsr0l	equ	0xFE9
 51224                           wreg	equ	0xFE8
 51225                           indf1	equ	0xFE7
 51226                           postinc1	equ	0xFE6
 51227                           postdec1	equ	0xFE5
 51228                           fsr1h	equ	0xFE2
 51229                           fsr1l	equ	0xFE1
 51230                           indf2	equ	0xFDF
 51231                           postinc2	equ	0xFDE
 51232                           postdec2	equ	0xFDD
 51233                           fsr2h	equ	0xFDA
 51234                           fsr2l	equ	0xFD9
 51235                           status	equ	0xFD8
 51236                           
 51237 ;; *************** function i2___lltoft *****************
 51238 ;; Defined at:
 51239 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
 51240 ;; Parameters:    Size  Location     Type
 51241 ;;  c               4    8[COMRAM] unsigned long 
 51242 ;; Auto vars:     Size  Location     Type
 51243 ;;  __lltoft        1   16[COMRAM] unsigned char 
 51244 ;; Return value:  Size  Location     Type
 51245 ;;                  3    8[COMRAM] float 
 51246 ;; Registers used:
 51247 ;;		wreg, status,2, status,0, cstack
 51248 ;; Tracked objects:
 51249 ;;		On entry : 0/0
 51250 ;;		On exit  : 0/0
 51251 ;;		Unchanged: 0/0
 51252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51255 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51256 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51257 ;;Total ram usage:        9 bytes
 51258 ;; Hardware stack levels used:    1
 51259 ;; Hardware stack levels required when called:    1
 51260 ;; This function calls:
 51261 ;;		i2___ftpack
 51262 ;; This function is called by:
 51263 ;;		i2_sprintf
 51264 ;; This function uses a non-reentrant model
 51265 ;;
 51266                           
 51267                           	psect	text154
 51268  01AEC6                     __ptext154:
 51269                           	opt stack 0
 51270  01AEC6                     i2___lltoft:
 51271                           	opt stack 17
 51272                           
 51273                           ;incstack = 0
 51274  01AEC6  0E8E               	movlw	142
 51275  01AEC8  6E11               	movwf	i2___lltoft@exp,c
 51276  01AECA  D006               	goto	i2l11066
 51277  01AECC                     i2l11064:
 51278  01AECC  90D8               	bcf	status,0,c
 51279  01AECE  320C               	rrcf	i2___lltoft@c+3,f,c
 51280  01AED0  320B               	rrcf	i2___lltoft@c+2,f,c
 51281  01AED2  320A               	rrcf	i2___lltoft@c+1,f,c
 51282  01AED4  3209               	rrcf	i2___lltoft@c,f,c
 51283  01AED6  2A11               	incf	i2___lltoft@exp,f,c
 51284  01AED8                     i2l11066:
 51285  01AED8  0E00               	movlw	0
 51286  01AEDA  1409               	andwf	i2___lltoft@c,w,c
 51287  01AEDC  6E0D               	movwf	??i2___lltoft& (0+255),c
 51288  01AEDE  0E00               	movlw	0
 51289  01AEE0  140A               	andwf	i2___lltoft@c+1,w,c
 51290  01AEE2  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 51291  01AEE4  0E00               	movlw	0
 51292  01AEE6  140B               	andwf	i2___lltoft@c+2,w,c
 51293  01AEE8  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 51294  01AEEA  0EFF               	movlw	255
 51295  01AEEC  140C               	andwf	i2___lltoft@c+3,w,c
 51296  01AEEE  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 51297  01AEF0  5010               	movf	??i2___lltoft+3,w,c
 51298  01AEF2  100D               	iorwf	??i2___lltoft,w,c
 51299  01AEF4  100E               	iorwf	??i2___lltoft+1,w,c
 51300  01AEF6  100F               	iorwf	??i2___lltoft+2,w,c
 51301  01AEF8  A4D8               	btfss	status,2,c
 51302  01AEFA  D7E8               	goto	i2l11064
 51303  01AEFC  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 51304  01AF00  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 51305  01AF04  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 51306  01AF08  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 51307  01AF0C  0E00               	movlw	0
 51308  01AF0E  6E05               	movwf	i2___ftpack@sign,c
 51309  01AF10  EC84  F0D0         	call	i2___ftpack	;wreg free
 51310  01AF14  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 51311  01AF18  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 51312  01AF1C  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 51313  01AF20  0012               	return	
 51314  01AF22                     __end_ofi2___lltoft:
 51315                           	opt stack 0
 51316                           pclatu	equ	0xFFB
 51317                           pclath	equ	0xFFA
 51318                           tblptru	equ	0xFF8
 51319                           tblptrh	equ	0xFF7
 51320                           tblptrl	equ	0xFF6
 51321                           tablat	equ	0xFF5
 51322                           prodh	equ	0xFF4
 51323                           prodl	equ	0xFF3
 51324                           intcon	equ	0xFF2
 51325                           intcon2	equ	0xFF1
 51326                           intcon3	equ	0xFF0
 51327                           indf0	equ	0xFEF
 51328                           postinc0	equ	0xFEE
 51329                           fsr0h	equ	0xFEA
 51330                           fsr0l	equ	0xFE9
 51331                           wreg	equ	0xFE8
 51332                           indf1	equ	0xFE7
 51333                           postinc1	equ	0xFE6
 51334                           postdec1	equ	0xFE5
 51335                           fsr1h	equ	0xFE2
 51336                           fsr1l	equ	0xFE1
 51337                           indf2	equ	0xFDF
 51338                           postinc2	equ	0xFDE
 51339                           postdec2	equ	0xFDD
 51340                           fsr2h	equ	0xFDA
 51341                           fsr2l	equ	0xFD9
 51342                           status	equ	0xFD8
 51343                           
 51344 ;; *************** function i2___llmod *****************
 51345 ;; Defined at:
 51346 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 51347 ;; Parameters:    Size  Location     Type
 51348 ;;  dividend        4    0[COMRAM] unsigned long 
 51349 ;;  divisor         4    4[COMRAM] unsigned long 
 51350 ;; Auto vars:     Size  Location     Type
 51351 ;;  __llmod         1    8[COMRAM] unsigned char 
 51352 ;; Return value:  Size  Location     Type
 51353 ;;                  4    0[COMRAM] unsigned long 
 51354 ;; Registers used:
 51355 ;;		wreg, status,2, status,0
 51356 ;; Tracked objects:
 51357 ;;		On entry : 0/0
 51358 ;;		On exit  : 0/0
 51359 ;;		Unchanged: 0/0
 51360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51364 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51365 ;;Total ram usage:        9 bytes
 51366 ;; Hardware stack levels used:    1
 51367 ;; This function calls:
 51368 ;;		Nothing
 51369 ;; This function is called by:
 51370 ;;		i2_sprintf
 51371 ;; This function uses a non-reentrant model
 51372 ;;
 51373                           
 51374                           	psect	text155
 51375  01AD44                     __ptext155:
 51376                           	opt stack 0
 51377  01AD44                     i2___llmod:
 51378                           	opt stack 18
 51379                           
 51380                           ;incstack = 0
 51381  01AD44  5008               	movf	i2___llmod@divisor+3,w,c
 51382  01AD46  1005               	iorwf	i2___llmod@divisor,w,c
 51383  01AD48  1006               	iorwf	i2___llmod@divisor+1,w,c
 51384  01AD4A  1007               	iorwf	i2___llmod@divisor+2,w,c
 51385  01AD4C  B4D8               	btfsc	status,2,c
 51386  01AD4E  D024               	goto	i2l2683
 51387  01AD50  0E01               	movlw	1
 51388  01AD52  6E09               	movwf	i2___llmod@counter,c
 51389  01AD54  D006               	goto	i2l11052
 51390  01AD56                     i2l11050:
 51391  01AD56  90D8               	bcf	status,0,c
 51392  01AD58  3605               	rlcf	i2___llmod@divisor,f,c
 51393  01AD5A  3606               	rlcf	i2___llmod@divisor+1,f,c
 51394  01AD5C  3607               	rlcf	i2___llmod@divisor+2,f,c
 51395  01AD5E  3608               	rlcf	i2___llmod@divisor+3,f,c
 51396  01AD60  2A09               	incf	i2___llmod@counter,f,c
 51397  01AD62                     i2l11052:
 51398  01AD62  AE08               	btfss	i2___llmod@divisor+3,7,c
 51399  01AD64  D7F8               	goto	i2l11050
 51400  01AD66                     i2l11054:
 51401  01AD66  5005               	movf	i2___llmod@divisor,w,c
 51402  01AD68  5C01               	subwf	i2___llmod@dividend,w,c
 51403  01AD6A  5006               	movf	i2___llmod@divisor+1,w,c
 51404  01AD6C  5802               	subwfb	i2___llmod@dividend+1,w,c
 51405  01AD6E  5007               	movf	i2___llmod@divisor+2,w,c
 51406  01AD70  5803               	subwfb	i2___llmod@dividend+2,w,c
 51407  01AD72  5008               	movf	i2___llmod@divisor+3,w,c
 51408  01AD74  5804               	subwfb	i2___llmod@dividend+3,w,c
 51409  01AD76  A0D8               	btfss	status,0,c
 51410  01AD78  D008               	goto	i2l11058
 51411  01AD7A  5005               	movf	i2___llmod@divisor,w,c
 51412  01AD7C  5E01               	subwf	i2___llmod@dividend,f,c
 51413  01AD7E  5006               	movf	i2___llmod@divisor+1,w,c
 51414  01AD80  5A02               	subwfb	i2___llmod@dividend+1,f,c
 51415  01AD82  5007               	movf	i2___llmod@divisor+2,w,c
 51416  01AD84  5A03               	subwfb	i2___llmod@dividend+2,f,c
 51417  01AD86  5008               	movf	i2___llmod@divisor+3,w,c
 51418  01AD88  5A04               	subwfb	i2___llmod@dividend+3,f,c
 51419  01AD8A                     i2l11058:
 51420  01AD8A  90D8               	bcf	status,0,c
 51421  01AD8C  3208               	rrcf	i2___llmod@divisor+3,f,c
 51422  01AD8E  3207               	rrcf	i2___llmod@divisor+2,f,c
 51423  01AD90  3206               	rrcf	i2___llmod@divisor+1,f,c
 51424  01AD92  3205               	rrcf	i2___llmod@divisor,f,c
 51425  01AD94  2E09               	decfsz	i2___llmod@counter,f,c
 51426  01AD96  D7E7               	goto	i2l11054
 51427  01AD98                     i2l2683:
 51428  01AD98  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
 51429  01AD9C  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
 51430  01ADA0  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
 51431  01ADA4  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
 51432  01ADA8  0012               	return	
 51433  01ADAA                     __end_ofi2___llmod:
 51434                           	opt stack 0
 51435                           pclatu	equ	0xFFB
 51436                           pclath	equ	0xFFA
 51437                           tblptru	equ	0xFF8
 51438                           tblptrh	equ	0xFF7
 51439                           tblptrl	equ	0xFF6
 51440                           tablat	equ	0xFF5
 51441                           prodh	equ	0xFF4
 51442                           prodl	equ	0xFF3
 51443                           intcon	equ	0xFF2
 51444                           intcon2	equ	0xFF1
 51445                           intcon3	equ	0xFF0
 51446                           indf0	equ	0xFEF
 51447                           postinc0	equ	0xFEE
 51448                           fsr0h	equ	0xFEA
 51449                           fsr0l	equ	0xFE9
 51450                           wreg	equ	0xFE8
 51451                           indf1	equ	0xFE7
 51452                           postinc1	equ	0xFE6
 51453                           postdec1	equ	0xFE5
 51454                           fsr1h	equ	0xFE2
 51455                           fsr1l	equ	0xFE1
 51456                           indf2	equ	0xFDF
 51457                           postinc2	equ	0xFDE
 51458                           postdec2	equ	0xFDD
 51459                           fsr2h	equ	0xFDA
 51460                           fsr2l	equ	0xFD9
 51461                           status	equ	0xFD8
 51462                           
 51463 ;; *************** function i2___lldiv *****************
 51464 ;; Defined at:
 51465 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 51466 ;; Parameters:    Size  Location     Type
 51467 ;;  dividend        4    0[COMRAM] unsigned long 
 51468 ;;  divisor         4    4[COMRAM] unsigned long 
 51469 ;; Auto vars:     Size  Location     Type
 51470 ;;  __lldiv         4    8[COMRAM] unsigned long 
 51471 ;;  __lldiv         1   12[COMRAM] unsigned char 
 51472 ;; Return value:  Size  Location     Type
 51473 ;;                  4    0[COMRAM] unsigned long 
 51474 ;; Registers used:
 51475 ;;		wreg, status,2, status,0
 51476 ;; Tracked objects:
 51477 ;;		On entry : 0/0
 51478 ;;		On exit  : 0/0
 51479 ;;		Unchanged: 0/0
 51480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51481 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51482 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51484 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51485 ;;Total ram usage:       13 bytes
 51486 ;; Hardware stack levels used:    1
 51487 ;; This function calls:
 51488 ;;		Nothing
 51489 ;; This function is called by:
 51490 ;;		i2_sprintf
 51491 ;; This function uses a non-reentrant model
 51492 ;;
 51493                           
 51494                           	psect	text156
 51495  01A940                     __ptext156:
 51496                           	opt stack 0
 51497  01A940                     i2___lldiv:
 51498                           	opt stack 18
 51499                           
 51500                           ;incstack = 0
 51501  01A940  0E00               	movlw	0
 51502  01A942  6E09               	movwf	i2___lldiv@quotient,c
 51503  01A944  0E00               	movlw	0
 51504  01A946  6E0A               	movwf	i2___lldiv@quotient+1,c
 51505  01A948  0E00               	movlw	0
 51506  01A94A  6E0B               	movwf	i2___lldiv@quotient+2,c
 51507  01A94C  0E00               	movlw	0
 51508  01A94E  6E0C               	movwf	i2___lldiv@quotient+3,c
 51509  01A950  5008               	movf	i2___lldiv@divisor+3,w,c
 51510  01A952  1005               	iorwf	i2___lldiv@divisor,w,c
 51511  01A954  1006               	iorwf	i2___lldiv@divisor+1,w,c
 51512  01A956  1007               	iorwf	i2___lldiv@divisor+2,w,c
 51513  01A958  B4D8               	btfsc	status,2,c
 51514  01A95A  D02A               	goto	i2l2673
 51515  01A95C  0E01               	movlw	1
 51516  01A95E  6E0D               	movwf	i2___lldiv@counter,c
 51517  01A960  D006               	goto	i2l11032
 51518  01A962                     i2l11030:
 51519  01A962  90D8               	bcf	status,0,c
 51520  01A964  3605               	rlcf	i2___lldiv@divisor,f,c
 51521  01A966  3606               	rlcf	i2___lldiv@divisor+1,f,c
 51522  01A968  3607               	rlcf	i2___lldiv@divisor+2,f,c
 51523  01A96A  3608               	rlcf	i2___lldiv@divisor+3,f,c
 51524  01A96C  2A0D               	incf	i2___lldiv@counter,f,c
 51525  01A96E                     i2l11032:
 51526  01A96E  AE08               	btfss	i2___lldiv@divisor+3,7,c
 51527  01A970  D7F8               	goto	i2l11030
 51528  01A972                     i2l11034:
 51529  01A972  90D8               	bcf	status,0,c
 51530  01A974  3609               	rlcf	i2___lldiv@quotient,f,c
 51531  01A976  360A               	rlcf	i2___lldiv@quotient+1,f,c
 51532  01A978  360B               	rlcf	i2___lldiv@quotient+2,f,c
 51533  01A97A  360C               	rlcf	i2___lldiv@quotient+3,f,c
 51534  01A97C  5005               	movf	i2___lldiv@divisor,w,c
 51535  01A97E  5C01               	subwf	i2___lldiv@dividend,w,c
 51536  01A980  5006               	movf	i2___lldiv@divisor+1,w,c
 51537  01A982  5802               	subwfb	i2___lldiv@dividend+1,w,c
 51538  01A984  5007               	movf	i2___lldiv@divisor+2,w,c
 51539  01A986  5803               	subwfb	i2___lldiv@dividend+2,w,c
 51540  01A988  5008               	movf	i2___lldiv@divisor+3,w,c
 51541  01A98A  5804               	subwfb	i2___lldiv@dividend+3,w,c
 51542  01A98C  A0D8               	btfss	status,0,c
 51543  01A98E  D009               	goto	i2l11042
 51544  01A990  5005               	movf	i2___lldiv@divisor,w,c
 51545  01A992  5E01               	subwf	i2___lldiv@dividend,f,c
 51546  01A994  5006               	movf	i2___lldiv@divisor+1,w,c
 51547  01A996  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 51548  01A998  5007               	movf	i2___lldiv@divisor+2,w,c
 51549  01A99A  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 51550  01A99C  5008               	movf	i2___lldiv@divisor+3,w,c
 51551  01A99E  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 51552  01A9A0  8009               	bsf	i2___lldiv@quotient,0,c
 51553  01A9A2                     i2l11042:
 51554  01A9A2  90D8               	bcf	status,0,c
 51555  01A9A4  3208               	rrcf	i2___lldiv@divisor+3,f,c
 51556  01A9A6  3207               	rrcf	i2___lldiv@divisor+2,f,c
 51557  01A9A8  3206               	rrcf	i2___lldiv@divisor+1,f,c
 51558  01A9AA  3205               	rrcf	i2___lldiv@divisor,f,c
 51559  01A9AC  2E0D               	decfsz	i2___lldiv@counter,f,c
 51560  01A9AE  D7E1               	goto	i2l11034
 51561  01A9B0                     i2l2673:
 51562  01A9B0  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 51563  01A9B4  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 51564  01A9B8  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 51565  01A9BC  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 51566  01A9C0  0012               	return	
 51567  01A9C2                     __end_ofi2___lldiv:
 51568                           	opt stack 0
 51569                           pclatu	equ	0xFFB
 51570                           pclath	equ	0xFFA
 51571                           tblptru	equ	0xFF8
 51572                           tblptrh	equ	0xFF7
 51573                           tblptrl	equ	0xFF6
 51574                           tablat	equ	0xFF5
 51575                           prodh	equ	0xFF4
 51576                           prodl	equ	0xFF3
 51577                           intcon	equ	0xFF2
 51578                           intcon2	equ	0xFF1
 51579                           intcon3	equ	0xFF0
 51580                           indf0	equ	0xFEF
 51581                           postinc0	equ	0xFEE
 51582                           fsr0h	equ	0xFEA
 51583                           fsr0l	equ	0xFE9
 51584                           wreg	equ	0xFE8
 51585                           indf1	equ	0xFE7
 51586                           postinc1	equ	0xFE6
 51587                           postdec1	equ	0xFE5
 51588                           fsr1h	equ	0xFE2
 51589                           fsr1l	equ	0xFE1
 51590                           indf2	equ	0xFDF
 51591                           postinc2	equ	0xFDE
 51592                           postdec2	equ	0xFDD
 51593                           fsr2h	equ	0xFDA
 51594                           fsr2l	equ	0xFD9
 51595                           status	equ	0xFD8
 51596                           
 51597 ;; *************** function i2___ftsub *****************
 51598 ;; Defined at:
 51599 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
 51600 ;; Parameters:    Size  Location     Type
 51601 ;;  f1              3   57[COMRAM] float 
 51602 ;;  f2              3   60[COMRAM] float 
 51603 ;; Auto vars:     Size  Location     Type
 51604 ;;		None
 51605 ;; Return value:  Size  Location     Type
 51606 ;;                  3   57[COMRAM] float 
 51607 ;; Registers used:
 51608 ;;		wreg, status,2, status,0, cstack
 51609 ;; Tracked objects:
 51610 ;;		On entry : 0/0
 51611 ;;		On exit  : 0/0
 51612 ;;		Unchanged: 0/0
 51613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51617 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51618 ;;Total ram usage:        6 bytes
 51619 ;; Hardware stack levels used:    1
 51620 ;; Hardware stack levels required when called:    2
 51621 ;; This function calls:
 51622 ;;		i2___ftadd
 51623 ;; This function is called by:
 51624 ;;		i2_sprintf
 51625 ;; This function uses a non-reentrant model
 51626 ;;
 51627                           
 51628                           	psect	text157
 51629  01B460                     __ptext157:
 51630                           	opt stack 0
 51631  01B460                     i2___ftsub:
 51632                           	opt stack 16
 51633                           
 51634                           ;incstack = 0
 51635  01B460  0E00               	movlw	0
 51636  01B462  1A3D               	xorwf	i2___ftsub@f2,f,c
 51637  01B464  0E00               	movlw	0
 51638  01B466  1A3E               	xorwf	i2___ftsub@f2+1,f,c
 51639  01B468  0E80               	movlw	128
 51640  01B46A  1A3F               	xorwf	i2___ftsub@f2+2,f,c
 51641  01B46C  C03A  F02E         	movff	i2___ftsub@f1,i2___ftadd@f1
 51642  01B470  C03B  F02F         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 51643  01B474  C03C  F030         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 51644  01B478  C03D  F031         	movff	i2___ftsub@f2,i2___ftadd@f2
 51645  01B47C  C03E  F032         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 51646  01B480  C03F  F033         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 51647  01B484  EC0E  F0B6         	call	i2___ftadd	;wreg free
 51648  01B488  C02E  F03A         	movff	?i2___ftadd,?i2___ftsub
 51649  01B48C  C02F  F03B         	movff	?i2___ftadd+1,?i2___ftsub+1
 51650  01B490  C030  F03C         	movff	?i2___ftadd+2,?i2___ftsub+2
 51651  01B494  0012               	return	
 51652  01B496                     __end_ofi2___ftsub:
 51653                           	opt stack 0
 51654                           pclatu	equ	0xFFB
 51655                           pclath	equ	0xFFA
 51656                           tblptru	equ	0xFF8
 51657                           tblptrh	equ	0xFF7
 51658                           tblptrl	equ	0xFF6
 51659                           tablat	equ	0xFF5
 51660                           prodh	equ	0xFF4
 51661                           prodl	equ	0xFF3
 51662                           intcon	equ	0xFF2
 51663                           intcon2	equ	0xFF1
 51664                           intcon3	equ	0xFF0
 51665                           indf0	equ	0xFEF
 51666                           postinc0	equ	0xFEE
 51667                           fsr0h	equ	0xFEA
 51668                           fsr0l	equ	0xFE9
 51669                           wreg	equ	0xFE8
 51670                           indf1	equ	0xFE7
 51671                           postinc1	equ	0xFE6
 51672                           postdec1	equ	0xFE5
 51673                           fsr1h	equ	0xFE2
 51674                           fsr1l	equ	0xFE1
 51675                           indf2	equ	0xFDF
 51676                           postinc2	equ	0xFDE
 51677                           postdec2	equ	0xFDD
 51678                           fsr2h	equ	0xFDA
 51679                           fsr2l	equ	0xFD9
 51680                           status	equ	0xFD8
 51681                           
 51682 ;; *************** function i2___ftneg *****************
 51683 ;; Defined at:
 51684 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
 51685 ;; Parameters:    Size  Location     Type
 51686 ;;  f1              3    0[COMRAM] float 
 51687 ;; Auto vars:     Size  Location     Type
 51688 ;;		None
 51689 ;; Return value:  Size  Location     Type
 51690 ;;                  3    0[COMRAM] float 
 51691 ;; Registers used:
 51692 ;;		wreg, status,2, status,0
 51693 ;; Tracked objects:
 51694 ;;		On entry : 0/0
 51695 ;;		On exit  : 0/0
 51696 ;;		Unchanged: 0/0
 51697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51698 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51701 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51702 ;;Total ram usage:        3 bytes
 51703 ;; Hardware stack levels used:    1
 51704 ;; This function calls:
 51705 ;;		Nothing
 51706 ;; This function is called by:
 51707 ;;		i2_sprintf
 51708 ;; This function uses a non-reentrant model
 51709 ;;
 51710                           
 51711                           	psect	text158
 51712  01B79A                     __ptext158:
 51713                           	opt stack 0
 51714  01B79A                     i2___ftneg:
 51715                           	opt stack 18
 51716                           
 51717                           ;incstack = 0
 51718  01B79A  0E7F               	movlw	127
 51719  01B79C  1403               	andwf	i2___ftneg@f1+2,w,c
 51720  01B79E  1002               	iorwf	i2___ftneg@f1+1,w,c
 51721  01B7A0  1001               	iorwf	i2___ftneg@f1,w,c
 51722  01B7A2  B4D8               	btfsc	status,2,c
 51723  01B7A4  D006               	goto	i2l2619
 51724  01B7A6  0E00               	movlw	0
 51725  01B7A8  1A01               	xorwf	i2___ftneg@f1,f,c
 51726  01B7AA  0E00               	movlw	0
 51727  01B7AC  1A02               	xorwf	i2___ftneg@f1+1,f,c
 51728  01B7AE  0E80               	movlw	128
 51729  01B7B0  1A03               	xorwf	i2___ftneg@f1+2,f,c
 51730  01B7B2                     i2l2619:
 51731  01B7B2  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 51732  01B7B6  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 51733  01B7BA  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 51734  01B7BE  0012               	return	
 51735  01B7C0                     __end_ofi2___ftneg:
 51736                           	opt stack 0
 51737                           pclatu	equ	0xFFB
 51738                           pclath	equ	0xFFA
 51739                           tblptru	equ	0xFF8
 51740                           tblptrh	equ	0xFF7
 51741                           tblptrl	equ	0xFF6
 51742                           tablat	equ	0xFF5
 51743                           prodh	equ	0xFF4
 51744                           prodl	equ	0xFF3
 51745                           intcon	equ	0xFF2
 51746                           intcon2	equ	0xFF1
 51747                           intcon3	equ	0xFF0
 51748                           indf0	equ	0xFEF
 51749                           postinc0	equ	0xFEE
 51750                           fsr0h	equ	0xFEA
 51751                           fsr0l	equ	0xFE9
 51752                           wreg	equ	0xFE8
 51753                           indf1	equ	0xFE7
 51754                           postinc1	equ	0xFE6
 51755                           postdec1	equ	0xFE5
 51756                           fsr1h	equ	0xFE2
 51757                           fsr1l	equ	0xFE1
 51758                           indf2	equ	0xFDF
 51759                           postinc2	equ	0xFDE
 51760                           postdec2	equ	0xFDD
 51761                           fsr2h	equ	0xFDA
 51762                           fsr2l	equ	0xFD9
 51763                           status	equ	0xFD8
 51764                           
 51765 ;; *************** function i2___ftge *****************
 51766 ;; Defined at:
 51767 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
 51768 ;; Parameters:    Size  Location     Type
 51769 ;;  ff1             3    0[COMRAM] float 
 51770 ;;  ff2             3    3[COMRAM] float 
 51771 ;; Auto vars:     Size  Location     Type
 51772 ;;		None
 51773 ;; Return value:  Size  Location     Type
 51774 ;;		None               void
 51775 ;; Registers used:
 51776 ;;		wreg, status,2, status,0
 51777 ;; Tracked objects:
 51778 ;;		On entry : 0/0
 51779 ;;		On exit  : 0/0
 51780 ;;		Unchanged: 0/0
 51781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51782 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51784 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51785 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51786 ;;Total ram usage:        9 bytes
 51787 ;; Hardware stack levels used:    1
 51788 ;; This function calls:
 51789 ;;		Nothing
 51790 ;; This function is called by:
 51791 ;;		i2_sprintf
 51792 ;; This function uses a non-reentrant model
 51793 ;;
 51794                           
 51795                           	psect	text159
 51796  01A692                     __ptext159:
 51797                           	opt stack 0
 51798  01A692                     i2___ftge:
 51799                           	opt stack 18
 51800                           
 51801                           ;incstack = 0
 51802  01A692  AE03               	btfss	i2___ftge@ff1+2,7,c
 51803  01A694  D016               	goto	i2l10988
 51804  01A696  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
 51805  01A69A  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
 51806  01A69E  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
 51807  01A6A2  1E07               	comf	??i2___ftge,f,c
 51808  01A6A4  1E08               	comf	??i2___ftge+1,f,c
 51809  01A6A6  1E09               	comf	??i2___ftge+2,f,c
 51810  01A6A8  2A07               	incf	??i2___ftge,f,c
 51811  01A6AA  0E00               	movlw	0
 51812  01A6AC  2208               	addwfc	??i2___ftge+1,f,c
 51813  01A6AE  2209               	addwfc	??i2___ftge+2,f,c
 51814  01A6B0  0E00               	movlw	0
 51815  01A6B2  2407               	addwf	??i2___ftge,w,c
 51816  01A6B4  6E01               	movwf	i2___ftge@ff1,c
 51817  01A6B6  0E00               	movlw	0
 51818  01A6B8  2008               	addwfc	??i2___ftge+1,w,c
 51819  01A6BA  6E02               	movwf	i2___ftge@ff1+1,c
 51820  01A6BC  0E80               	movlw	128
 51821  01A6BE  2009               	addwfc	??i2___ftge+2,w,c
 51822  01A6C0  6E03               	movwf	i2___ftge@ff1+2,c
 51823  01A6C2                     i2l10988:
 51824  01A6C2  AE06               	btfss	i2___ftge@ff2+2,7,c
 51825  01A6C4  D016               	goto	i2l10992
 51826  01A6C6  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
 51827  01A6CA  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
 51828  01A6CE  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
 51829  01A6D2  1E07               	comf	??i2___ftge,f,c
 51830  01A6D4  1E08               	comf	??i2___ftge+1,f,c
 51831  01A6D6  1E09               	comf	??i2___ftge+2,f,c
 51832  01A6D8  2A07               	incf	??i2___ftge,f,c
 51833  01A6DA  0E00               	movlw	0
 51834  01A6DC  2208               	addwfc	??i2___ftge+1,f,c
 51835  01A6DE  2209               	addwfc	??i2___ftge+2,f,c
 51836  01A6E0  0E00               	movlw	0
 51837  01A6E2  2407               	addwf	??i2___ftge,w,c
 51838  01A6E4  6E04               	movwf	i2___ftge@ff2,c
 51839  01A6E6  0E00               	movlw	0
 51840  01A6E8  2008               	addwfc	??i2___ftge+1,w,c
 51841  01A6EA  6E05               	movwf	i2___ftge@ff2+1,c
 51842  01A6EC  0E80               	movlw	128
 51843  01A6EE  2009               	addwfc	??i2___ftge+2,w,c
 51844  01A6F0  6E06               	movwf	i2___ftge@ff2+2,c
 51845  01A6F2                     i2l10992:
 51846  01A6F2  0E00               	movlw	0
 51847  01A6F4  1A01               	xorwf	i2___ftge@ff1,f,c
 51848  01A6F6  0E00               	movlw	0
 51849  01A6F8  1A02               	xorwf	i2___ftge@ff1+1,f,c
 51850  01A6FA  0E80               	movlw	128
 51851  01A6FC  1A03               	xorwf	i2___ftge@ff1+2,f,c
 51852  01A6FE  0E00               	movlw	0
 51853  01A700  1A04               	xorwf	i2___ftge@ff2,f,c
 51854  01A702  0E00               	movlw	0
 51855  01A704  1A05               	xorwf	i2___ftge@ff2+1,f,c
 51856  01A706  0E80               	movlw	128
 51857  01A708  1A06               	xorwf	i2___ftge@ff2+2,f,c
 51858  01A70A  5004               	movf	i2___ftge@ff2,w,c
 51859  01A70C  5C01               	subwf	i2___ftge@ff1,w,c
 51860  01A70E  5005               	movf	i2___ftge@ff2+1,w,c
 51861  01A710  5802               	subwfb	i2___ftge@ff1+1,w,c
 51862  01A712  5006               	movf	i2___ftge@ff2+2,w,c
 51863  01A714  5803               	subwfb	i2___ftge@ff1+2,w,c
 51864  01A716  B0D8               	btfsc	status,0,c
 51865  01A718  D002               	goto	i2l10998
 51866  01A71A  90D8               	bcf	status,0,c
 51867  01A71C  0012               	return	
 51868  01A71E                     i2l10998:
 51869  01A71E  80D8               	bsf	status,0,c
 51870  01A720  0012               	return	
 51871  01A722                     __end_ofi2___ftge:
 51872                           	opt stack 0
 51873                           pclatu	equ	0xFFB
 51874                           pclath	equ	0xFFA
 51875                           tblptru	equ	0xFF8
 51876                           tblptrh	equ	0xFF7
 51877                           tblptrl	equ	0xFF6
 51878                           tablat	equ	0xFF5
 51879                           prodh	equ	0xFF4
 51880                           prodl	equ	0xFF3
 51881                           intcon	equ	0xFF2
 51882                           intcon2	equ	0xFF1
 51883                           intcon3	equ	0xFF0
 51884                           indf0	equ	0xFEF
 51885                           postinc0	equ	0xFEE
 51886                           fsr0h	equ	0xFEA
 51887                           fsr0l	equ	0xFE9
 51888                           wreg	equ	0xFE8
 51889                           indf1	equ	0xFE7
 51890                           postinc1	equ	0xFE6
 51891                           postdec1	equ	0xFE5
 51892                           fsr1h	equ	0xFE2
 51893                           fsr1l	equ	0xFE1
 51894                           indf2	equ	0xFDF
 51895                           postinc2	equ	0xFDE
 51896                           postdec2	equ	0xFDD
 51897                           fsr2h	equ	0xFDA
 51898                           fsr2l	equ	0xFD9
 51899                           status	equ	0xFD8
 51900                           
 51901 ;; *************** function i2___ftdiv *****************
 51902 ;; Defined at:
 51903 ;;		line 49 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 51904 ;; Parameters:    Size  Location     Type
 51905 ;;  f1              3   12[COMRAM] float 
 51906 ;;  f2              3   15[COMRAM] float 
 51907 ;; Auto vars:     Size  Location     Type
 51908 ;;  __ftdiv         3   22[COMRAM] float 
 51909 ;;  __ftdiv         1   26[COMRAM] unsigned char 
 51910 ;;  __ftdiv         1   25[COMRAM] unsigned char 
 51911 ;;  __ftdiv         1   21[COMRAM] unsigned char 
 51912 ;; Return value:  Size  Location     Type
 51913 ;;                  3   12[COMRAM] float 
 51914 ;; Registers used:
 51915 ;;		wreg, status,2, status,0, cstack
 51916 ;; Tracked objects:
 51917 ;;		On entry : 0/0
 51918 ;;		On exit  : 0/0
 51919 ;;		Unchanged: 0/0
 51920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 51921 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51922 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51923 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51924 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 51925 ;;Total ram usage:       15 bytes
 51926 ;; Hardware stack levels used:    1
 51927 ;; Hardware stack levels required when called:    1
 51928 ;; This function calls:
 51929 ;;		i2___ftpack
 51930 ;; This function is called by:
 51931 ;;		i2_UpdateMasterVolume
 51932 ;; This function uses a non-reentrant model
 51933 ;;
 51934                           
 51935                           	psect	text160
 51936  019466                     __ptext160:
 51937                           	opt stack 0
 51938  019466                     i2___ftdiv:
 51939                           	opt stack 18
 51940                           
 51941                           ;incstack = 0
 51942  019466  C00F  F013         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 51943  01946A  6A14               	clrf	(??i2___ftdiv+1)& (0+255),c
 51944  01946C  6A15               	clrf	(??i2___ftdiv+2)& (0+255),c
 51945  01946E  340E               	rlcf	i2___ftdiv@f1+1,w,c
 51946  019470  3613               	rlcf	??i2___ftdiv& (0+255),f,c
 51947  019472  E301               	bnc	u1296_41
 51948  019474  8014               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 51949  019476                     u1296_41:
 51950  019476  5013               	movf	??i2___ftdiv,w,c
 51951  019478  6E1A               	movwf	i2___ftdiv@exp,c
 51952  01947A  661A               	tstfsz	i2___ftdiv@exp& (0+255),c
 51953  01947C  D007               	goto	i2l11866
 51954  01947E  0E00               	movlw	0
 51955  019480  6E0D               	movwf	?i2___ftdiv,c
 51956  019482  0E00               	movlw	0
 51957  019484  6E0E               	movwf	?i2___ftdiv+1,c
 51958  019486  0E00               	movlw	0
 51959  019488  6E0F               	movwf	?i2___ftdiv+2,c
 51960  01948A  0012               	return	
 51961  01948C                     i2l11866:
 51962  01948C  C012  F013         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 51963  019490  6A14               	clrf	(??i2___ftdiv+1)& (0+255),c
 51964  019492  6A15               	clrf	(??i2___ftdiv+2)& (0+255),c
 51965  019494  3411               	rlcf	i2___ftdiv@f2+1,w,c
 51966  019496  3613               	rlcf	??i2___ftdiv& (0+255),f,c
 51967  019498  E301               	bnc	u1298_41
 51968  01949A  8014               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 51969  01949C                     u1298_41:
 51970  01949C  5013               	movf	??i2___ftdiv,w,c
 51971  01949E  6E1B               	movwf	i2___ftdiv@sign,c
 51972  0194A0  661B               	tstfsz	i2___ftdiv@sign& (0+255),c
 51973  0194A2  D007               	goto	i2l11872
 51974  0194A4  0E00               	movlw	0
 51975  0194A6  6E0D               	movwf	?i2___ftdiv,c
 51976  0194A8  0E00               	movlw	0
 51977  0194AA  6E0E               	movwf	?i2___ftdiv+1,c
 51978  0194AC  0E00               	movlw	0
 51979  0194AE  6E0F               	movwf	?i2___ftdiv+2,c
 51980  0194B0  0012               	return	
 51981  0194B2                     i2l11872:
 51982  0194B2  0E00               	movlw	0
 51983  0194B4  6E17               	movwf	i2___ftdiv@f3,c
 51984  0194B6  0E00               	movlw	0
 51985  0194B8  6E18               	movwf	i2___ftdiv@f3+1,c
 51986  0194BA  0E00               	movlw	0
 51987  0194BC  6E19               	movwf	i2___ftdiv@f3+2,c
 51988  0194BE  501B               	movf	i2___ftdiv@sign,w,c
 51989  0194C0  0F89               	addlw	137
 51990  0194C2  5E1A               	subwf	i2___ftdiv@exp,f,c
 51991  0194C4  C00F  F01B         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 51992  0194C8  5012               	movf	i2___ftdiv@f2+2,w,c
 51993  0194CA  1A1B               	xorwf	i2___ftdiv@sign,f,c
 51994  0194CC  0E80               	movlw	128
 51995  0194CE  161B               	andwf	i2___ftdiv@sign,f,c
 51996  0194D0  8E0E               	bsf	i2___ftdiv@f1+1,7,c
 51997  0194D2  0EFF               	movlw	255
 51998  0194D4  160D               	andwf	i2___ftdiv@f1,f,c
 51999  0194D6  0EFF               	movlw	255
 52000  0194D8  160E               	andwf	i2___ftdiv@f1+1,f,c
 52001  0194DA  0E00               	movlw	0
 52002  0194DC  160F               	andwf	i2___ftdiv@f1+2,f,c
 52003  0194DE  8E11               	bsf	i2___ftdiv@f2+1,7,c
 52004  0194E0  0EFF               	movlw	255
 52005  0194E2  1610               	andwf	i2___ftdiv@f2,f,c
 52006  0194E4  0EFF               	movlw	255
 52007  0194E6  1611               	andwf	i2___ftdiv@f2+1,f,c
 52008  0194E8  0E00               	movlw	0
 52009  0194EA  1612               	andwf	i2___ftdiv@f2+2,f,c
 52010  0194EC  0E18               	movlw	24
 52011  0194EE  6E16               	movwf	i2___ftdiv@cntr,c
 52012  0194F0                     i2l11892:
 52013  0194F0  90D8               	bcf	status,0,c
 52014  0194F2  3617               	rlcf	i2___ftdiv@f3,f,c
 52015  0194F4  3618               	rlcf	i2___ftdiv@f3+1,f,c
 52016  0194F6  3619               	rlcf	i2___ftdiv@f3+2,f,c
 52017  0194F8  5010               	movf	i2___ftdiv@f2,w,c
 52018  0194FA  5C0D               	subwf	i2___ftdiv@f1,w,c
 52019  0194FC  5011               	movf	i2___ftdiv@f2+1,w,c
 52020  0194FE  580E               	subwfb	i2___ftdiv@f1+1,w,c
 52021  019500  5012               	movf	i2___ftdiv@f2+2,w,c
 52022  019502  580F               	subwfb	i2___ftdiv@f1+2,w,c
 52023  019504  A0D8               	btfss	status,0,c
 52024  019506  D007               	goto	i2l2580
 52025  019508  5010               	movf	i2___ftdiv@f2,w,c
 52026  01950A  5E0D               	subwf	i2___ftdiv@f1,f,c
 52027  01950C  5011               	movf	i2___ftdiv@f2+1,w,c
 52028  01950E  5A0E               	subwfb	i2___ftdiv@f1+1,f,c
 52029  019510  5012               	movf	i2___ftdiv@f2+2,w,c
 52030  019512  5A0F               	subwfb	i2___ftdiv@f1+2,f,c
 52031  019514  8017               	bsf	i2___ftdiv@f3,0,c
 52032  019516                     i2l2580:
 52033  019516  90D8               	bcf	status,0,c
 52034  019518  360D               	rlcf	i2___ftdiv@f1,f,c
 52035  01951A  360E               	rlcf	i2___ftdiv@f1+1,f,c
 52036  01951C  360F               	rlcf	i2___ftdiv@f1+2,f,c
 52037  01951E  2E16               	decfsz	i2___ftdiv@cntr,f,c
 52038  019520  D7E7               	goto	i2l11892
 52039  019522  C017  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 52040  019526  C018  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 52041  01952A  C019  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 52042  01952E  C01A  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 52043  019532  C01B  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 52044  019536  EC84  F0D0         	call	i2___ftpack	;wreg free
 52045  01953A  C001  F00D         	movff	?i2___ftpack,?i2___ftdiv
 52046  01953E  C002  F00E         	movff	?i2___ftpack+1,?i2___ftdiv+1
 52047  019542  C003  F00F         	movff	?i2___ftpack+2,?i2___ftdiv+2
 52048  019546  0012               	return	
 52049  019548                     __end_ofi2___ftdiv:
 52050                           	opt stack 0
 52051                           pclatu	equ	0xFFB
 52052                           pclath	equ	0xFFA
 52053                           tblptru	equ	0xFF8
 52054                           tblptrh	equ	0xFF7
 52055                           tblptrl	equ	0xFF6
 52056                           tablat	equ	0xFF5
 52057                           prodh	equ	0xFF4
 52058                           prodl	equ	0xFF3
 52059                           intcon	equ	0xFF2
 52060                           intcon2	equ	0xFF1
 52061                           intcon3	equ	0xFF0
 52062                           indf0	equ	0xFEF
 52063                           postinc0	equ	0xFEE
 52064                           fsr0h	equ	0xFEA
 52065                           fsr0l	equ	0xFE9
 52066                           wreg	equ	0xFE8
 52067                           indf1	equ	0xFE7
 52068                           postinc1	equ	0xFE6
 52069                           postdec1	equ	0xFE5
 52070                           fsr1h	equ	0xFE2
 52071                           fsr1l	equ	0xFE1
 52072                           indf2	equ	0xFDF
 52073                           postinc2	equ	0xFDE
 52074                           postdec2	equ	0xFDD
 52075                           fsr2h	equ	0xFDA
 52076                           fsr2l	equ	0xFD9
 52077                           status	equ	0xFD8
 52078                           
 52079 ;; *************** function i2___awtoft *****************
 52080 ;; Defined at:
 52081 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
 52082 ;; Parameters:    Size  Location     Type
 52083 ;;  c               2    8[COMRAM] int 
 52084 ;; Auto vars:     Size  Location     Type
 52085 ;;  __awtoft        1   11[COMRAM] unsigned char 
 52086 ;; Return value:  Size  Location     Type
 52087 ;;                  3    8[COMRAM] float 
 52088 ;; Registers used:
 52089 ;;		wreg, status,2, status,0, prodl, cstack
 52090 ;; Tracked objects:
 52091 ;;		On entry : 0/0
 52092 ;;		On exit  : 0/0
 52093 ;;		Unchanged: 0/0
 52094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52095 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52099 ;;Total ram usage:        4 bytes
 52100 ;; Hardware stack levels used:    1
 52101 ;; Hardware stack levels required when called:    1
 52102 ;; This function calls:
 52103 ;;		i2___ftpack
 52104 ;; This function is called by:
 52105 ;;		i2_UpdateMasterVolume
 52106 ;; This function uses a non-reentrant model
 52107 ;;
 52108                           
 52109                           	psect	text161
 52110  01B1AC                     __ptext161:
 52111                           	opt stack 0
 52112  01B1AC                     i2___awtoft:
 52113                           	opt stack 18
 52114                           
 52115                           ;incstack = 0
 52116  01B1AC  0E00               	movlw	0
 52117  01B1AE  6E0C               	movwf	i2___awtoft@sign,c
 52118  01B1B0  500A               	movf	i2___awtoft@c+1,w,c
 52119  01B1B2  0A80               	xorlw	128
 52120  01B1B4  6EF3               	movwf	prodl,c
 52121  01B1B6  0E80               	movlw	128
 52122  01B1B8  5CF3               	subwf	prodl,w,c
 52123  01B1BA  0E00               	movlw	0
 52124  01B1BC  B4D8               	btfsc	status,2,c
 52125  01B1BE  5C09               	subwf	i2___awtoft@c,w,c
 52126  01B1C0  B0D8               	btfsc	status,0,c
 52127  01B1C2  D006               	goto	i2l11856
 52128  01B1C4  6C09               	negf	i2___awtoft@c,c
 52129  01B1C6  1E0A               	comf	i2___awtoft@c+1,f,c
 52130  01B1C8  B0D8               	btfsc	status,0,c
 52131  01B1CA  2A0A               	incf	i2___awtoft@c+1,f,c
 52132  01B1CC  0E01               	movlw	1
 52133  01B1CE  6E0C               	movwf	i2___awtoft@sign,c
 52134  01B1D0                     i2l11856:
 52135  01B1D0  C009  F001         	movff	i2___awtoft@c,i2___ftpack@arg
 52136  01B1D4  C00A  F002         	movff	i2___awtoft@c+1,i2___ftpack@arg+1
 52137  01B1D8  6A03               	clrf	i2___ftpack@arg+2,c
 52138  01B1DA  0E8E               	movlw	142
 52139  01B1DC  6E04               	movwf	i2___ftpack@exp,c
 52140  01B1DE  C00C  F005         	movff	i2___awtoft@sign,i2___ftpack@sign
 52141  01B1E2  EC84  F0D0         	call	i2___ftpack	;wreg free
 52142  01B1E6  C001  F009         	movff	?i2___ftpack,?i2___awtoft
 52143  01B1EA  C002  F00A         	movff	?i2___ftpack+1,?i2___awtoft+1
 52144  01B1EE  C003  F00B         	movff	?i2___ftpack+2,?i2___awtoft+2
 52145  01B1F2  0012               	return	
 52146  01B1F4                     __end_ofi2___awtoft:
 52147                           	opt stack 0
 52148                           pclatu	equ	0xFFB
 52149                           pclath	equ	0xFFA
 52150                           tblptru	equ	0xFF8
 52151                           tblptrh	equ	0xFF7
 52152                           tblptrl	equ	0xFF6
 52153                           tablat	equ	0xFF5
 52154                           prodh	equ	0xFF4
 52155                           prodl	equ	0xFF3
 52156                           intcon	equ	0xFF2
 52157                           intcon2	equ	0xFF1
 52158                           intcon3	equ	0xFF0
 52159                           indf0	equ	0xFEF
 52160                           postinc0	equ	0xFEE
 52161                           fsr0h	equ	0xFEA
 52162                           fsr0l	equ	0xFE9
 52163                           wreg	equ	0xFE8
 52164                           indf1	equ	0xFE7
 52165                           postinc1	equ	0xFE6
 52166                           postdec1	equ	0xFE5
 52167                           fsr1h	equ	0xFE2
 52168                           fsr1l	equ	0xFE1
 52169                           indf2	equ	0xFDF
 52170                           postinc2	equ	0xFDE
 52171                           postdec2	equ	0xFDD
 52172                           fsr2h	equ	0xFDA
 52173                           fsr2l	equ	0xFD9
 52174                           status	equ	0xFD8
 52175                           
 52176 ;; *************** function i2_SendVolumeToDevice *****************
 52177 ;; Defined at:
 52178 ;;		line 224 in file "Device.c"
 52179 ;; Parameters:    Size  Location     Type
 52180 ;;		None
 52181 ;; Auto vars:     Size  Location     Type
 52182 ;;		None
 52183 ;; Return value:  Size  Location     Type
 52184 ;;		None               void
 52185 ;; Registers used:
 52186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52187 ;; Tracked objects:
 52188 ;;		On entry : 0/0
 52189 ;;		On exit  : 0/0
 52190 ;;		Unchanged: 0/0
 52191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52196 ;;Total ram usage:        0 bytes
 52197 ;; Hardware stack levels used:    1
 52198 ;; Hardware stack levels required when called:    4
 52199 ;; This function calls:
 52200 ;;		i2_SendDataToDeviceCh
 52201 ;; This function is called by:
 52202 ;;		i2_UpdateMasterVolume
 52203 ;; This function uses a non-reentrant model
 52204 ;;
 52205                           
 52206                           	psect	text162
 52207  01B9F0                     __ptext162:
 52208                           	opt stack 0
 52209  01B9F0                     i2_SendVolumeToDevice:
 52210                           	opt stack 15
 52211                           
 52212                           ;Device.c: 226: LATEbits.LE4 = 1;
 52213                           
 52214                           ;incstack = 0
 52215  01B9F0  888D               	bsf	3981,4,c	;volatile
 52216                           
 52217                           ;Device.c: 227: SendDataToDeviceCh(0);
 52218  01B9F2  0E00               	movlw	0
 52219  01B9F4  EC70  F0B2         	call	i2_SendDataToDeviceCh
 52220                           
 52221                           ;Device.c: 228: LATEbits.LE4 = 0;
 52222  01B9F8  988D               	bcf	3981,4,c	;volatile
 52223                           
 52224                           ;Device.c: 229: LATEbits.LE5 = 1;
 52225  01B9FA  8A8D               	bsf	3981,5,c	;volatile
 52226                           
 52227                           ;Device.c: 230: SendDataToDeviceCh(8);
 52228  01B9FC  0E08               	movlw	8
 52229  01B9FE  EC70  F0B2         	call	i2_SendDataToDeviceCh
 52230                           
 52231                           ;Device.c: 231: LATEbits.LE5 = 0;
 52232  01BA02  9A8D               	bcf	3981,5,c	;volatile
 52233  01BA04  0012               	return	
 52234  01BA06                     __end_ofi2_SendVolumeToDevice:
 52235                           	opt stack 0
 52236                           pclatu	equ	0xFFB
 52237                           pclath	equ	0xFFA
 52238                           tblptru	equ	0xFF8
 52239                           tblptrh	equ	0xFF7
 52240                           tblptrl	equ	0xFF6
 52241                           tablat	equ	0xFF5
 52242                           prodh	equ	0xFF4
 52243                           prodl	equ	0xFF3
 52244                           intcon	equ	0xFF2
 52245                           intcon2	equ	0xFF1
 52246                           intcon3	equ	0xFF0
 52247                           indf0	equ	0xFEF
 52248                           postinc0	equ	0xFEE
 52249                           fsr0h	equ	0xFEA
 52250                           fsr0l	equ	0xFE9
 52251                           wreg	equ	0xFE8
 52252                           indf1	equ	0xFE7
 52253                           postinc1	equ	0xFE6
 52254                           postdec1	equ	0xFE5
 52255                           fsr1h	equ	0xFE2
 52256                           fsr1l	equ	0xFE1
 52257                           indf2	equ	0xFDF
 52258                           postinc2	equ	0xFDE
 52259                           postdec2	equ	0xFDD
 52260                           fsr2h	equ	0xFDA
 52261                           fsr2l	equ	0xFD9
 52262                           status	equ	0xFD8
 52263                           
 52264 ;; *************** function i2_SendDataToDeviceCh *****************
 52265 ;; Defined at:
 52266 ;;		line 192 in file "Device.c"
 52267 ;; Parameters:    Size  Location     Type
 52268 ;;  offset          1    wreg     unsigned char 
 52269 ;; Auto vars:     Size  Location     Type
 52270 ;;  offset          1   18[BANK0 ] unsigned char 
 52271 ;;  SendDataToDe   16    0[BANK0 ] unsigned int [8]
 52272 ;;  SendDataToDe    2   20[BANK0 ] unsigned int 
 52273 ;;  SendDataToDe    2   16[BANK0 ] unsigned int 
 52274 ;;  SendDataToDe    1   19[BANK0 ] unsigned char 
 52275 ;; Return value:  Size  Location     Type
 52276 ;;		None               void
 52277 ;; Registers used:
 52278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 52279 ;; Tracked objects:
 52280 ;;		On entry : 0/0
 52281 ;;		On exit  : 0/0
 52282 ;;		Unchanged: 0/0
 52283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52285 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52286 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52287 ;;      Totals:         3      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52288 ;;Total ram usage:       25 bytes
 52289 ;; Hardware stack levels used:    1
 52290 ;; Hardware stack levels required when called:    3
 52291 ;; This function calls:
 52292 ;;		i2_DbToCode
 52293 ;; This function is called by:
 52294 ;;		i2_SendVolumeToDevice
 52295 ;; This function uses a non-reentrant model
 52296 ;;
 52297                           
 52298                           	psect	text163
 52299  0164E0                     __ptext163:
 52300                           	opt stack 0
 52301  0164E0                     i2_SendDataToDeviceCh:
 52302                           	opt stack 15
 52303                           
 52304                           ;incstack = 0
 52305                           ;i2SendDataToDeviceCh@offset stored from wreg
 52306  0164E0  0100               	movlb	0	; () banked
 52307  0164E2  6F72               	movwf	i2SendDataToDeviceCh@offset& (0+255),b
 52308                           
 52309                           ; BSR set to: 0
 52310                           ;Device.c: 194: uint16_t values[8];
 52311                           ;Device.c: 196: for(uint8_t i = 0; i < 8; i++)
 52312  0164E4  0E00               	movlw	0
 52313  0164E6  0100               	movlb	0	; () banked
 52314  0164E8  6F73               	movwf	i2SendDataToDeviceCh@i& (0+255),b
 52315  0164EA  D033               	goto	L54
 52316  0164EC                     i2l10766:
 52317                           
 52318                           ; BSR set to: 0
 52319                           ;Device.c: 197: {
 52320                           ;Device.c: 198: uint16_t v = ((uint16_t)s_dacSettings.ChannelScaling[i + offset]) + s_da
      +                          cSettings.Volume;
 52321  0164EC  0100               	movlb	0	; () banked
 52322  0164EE  5172               	movf	i2SendDataToDeviceCh@offset& (0+255),w,b
 52323  0164F0  0100               	movlb	0	; () banked
 52324  0164F2  C073  F054         	movff	i2SendDataToDeviceCh@i,??i2_SendDataToDeviceCh
 52325  0164F6  6A55               	clrf	(??i2_SendDataToDeviceCh+1)& (0+255),c
 52326  0164F8  2654               	addwf	??i2_SendDataToDeviceCh,f,c
 52327  0164FA  0E00               	movlw	0
 52328  0164FC  2255               	addwfc	??i2_SendDataToDeviceCh+1,f,c
 52329  0164FE  0102               	movlb	2	; () banked
 52330  016500  0ED6               	movlw	low (_s_dacSettings+3)
 52331  016502  2454               	addwf	??i2_SendDataToDeviceCh,w,c
 52332  016504  6ED9               	movwf	fsr2l,c
 52333  016506  0102               	movlb	2	; () banked
 52334  016508  0E02               	movlw	high (_s_dacSettings+3)
 52335  01650A  2055               	addwfc	??i2_SendDataToDeviceCh+1,w,c
 52336  01650C  6EDA               	movwf	fsr2h,c
 52337  01650E  50DF               	movf	indf2,w,c
 52338  016510  6E56               	movwf	(??i2_SendDataToDeviceCh+2)& (0+255),c
 52339  016512  5056               	movf	??i2_SendDataToDeviceCh+2,w,c
 52340  016514  0102               	movlb	2	; () banked
 52341  016516  25D5               	addwf	(_s_dacSettings+2)& (0+255),w,b
 52342  016518  0100               	movlb	0	; () banked
 52343  01651A  6F70               	movwf	i2SendDataToDeviceCh@v& (0+255),b
 52344  01651C  0100               	movlb	0	; () banked
 52345  01651E  6B71               	clrf	(i2SendDataToDeviceCh@v+1)& (0+255),b
 52346  016520  0100               	movlb	0	; () banked
 52347  016522  3771               	rlcf	(i2SendDataToDeviceCh@v+1)& (0+255),f,b
 52348                           
 52349                           ; BSR set to: 0
 52350                           ;Device.c: 199: values[i] = DbToCode(v);
 52351  016524  C070  F049         	movff	i2SendDataToDeviceCh@v,i2DbToCode@volume
 52352  016528  C071  F04A         	movff	i2SendDataToDeviceCh@v+1,i2DbToCode@volume+1
 52353  01652C  EC4D  F0B4         	call	i2_DbToCode	;wreg free
 52354  016530  0100               	movlb	0	; () banked
 52355  016532  5173               	movf	i2SendDataToDeviceCh@i& (0+255),w,b
 52356  016534  0D02               	mullw	2
 52357  016536  0100               	movlb	0	; () banked
 52358  016538  0E60               	movlw	low i2SendDataToDeviceCh@values
 52359  01653A  24F3               	addwf	prodl,w,c
 52360  01653C  6ED9               	movwf	fsr2l,c
 52361  01653E  0100               	movlb	0	; () banked
 52362  016540  0E00               	movlw	high i2SendDataToDeviceCh@values
 52363  016542  20F4               	addwfc	prodh,w,c
 52364  016544  6EDA               	movwf	fsr2h,c
 52365  016546  C049  FFDE         	movff	?i2_DbToCode,postinc2
 52366  01654A  C04A  FFDD         	movff	?i2_DbToCode+1,postdec2
 52367                           
 52368                           ; BSR set to: 0
 52369  01654E  0100               	movlb	0	; () banked
 52370  016550  2B73               	incf	i2SendDataToDeviceCh@i& (0+255),f,b
 52371  016552                     L54:
 52372                           
 52373                           ; BSR set to: 0
 52374  016552  0E07               	movlw	7
 52375  016554  0100               	movlb	0	; () banked
 52376  016556  6573               	cpfsgt	i2SendDataToDeviceCh@i& (0+255),b
 52377  016558  D7C9               	goto	i2l10766
 52378                           
 52379                           ; BSR set to: 0
 52380                           ;Device.c: 200: }
 52381                           ;Device.c: 202: uint16_t mask = 0x0800;
 52382                           
 52383                           ; BSR set to: 0
 52384  01655A  0E08               	movlw	8
 52385  01655C  0100               	movlb	0	; () banked
 52386  01655E  6F75               	movwf	(i2SendDataToDeviceCh@mask+1)& (0+255),b
 52387  016560  0E00               	movlw	0
 52388  016562  0100               	movlb	0	; () banked
 52389  016564  6F74               	movwf	i2SendDataToDeviceCh@mask& (0+255),b
 52390                           
 52391                           ;Device.c: 204: while(mask > 0)
 52392  016566  D0A5               	goto	i2l10810
 52393  016568                     i2l1891:
 52394                           
 52395                           ; BSR set to: 0
 52396                           ;Device.c: 205: {
 52397                           ;Device.c: 206: LATEbits.LE3 = 0;
 52398  016568  968D               	bcf	3981,3,c	;volatile
 52399                           
 52400                           ; BSR set to: 0
 52401                           ;Device.c: 207: if (values[0] & mask) LATFbits.LF1 = 1; else LATFbits.LF1 = 0;
 52402  01656A  0100               	movlb	0	; () banked
 52403  01656C  C060  F054         	movff	i2SendDataToDeviceCh@values,??i2_SendDataToDeviceCh
 52404  016570  0100               	movlb	0	; () banked
 52405  016572  C061  F055         	movff	i2SendDataToDeviceCh@values+1,??i2_SendDataToDeviceCh+1
 52406  016576  0100               	movlb	0	; () banked
 52407  016578  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52408  01657A  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52409  01657C  0100               	movlb	0	; () banked
 52410  01657E  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52411  016580  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52412  016582  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52413  016584  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52414  016586  B4D8               	btfsc	status,2,c
 52415  016588  D002               	goto	i2l1892
 52416                           
 52417                           ; BSR set to: 0
 52418  01658A  828E               	bsf	3982,1,c	;volatile
 52419  01658C  D001               	goto	i2l10780
 52420  01658E                     i2l1892:
 52421                           
 52422                           ; BSR set to: 0
 52423  01658E  928E               	bcf	3982,1,c	;volatile
 52424  016590                     i2l10780:
 52425                           
 52426                           ; BSR set to: 0
 52427                           ;Device.c: 208: if (values[1] & mask) LATFbits.LF2 = 1; else LATFbits.LF2 = 0;
 52428  016590  0100               	movlb	0	; () banked
 52429  016592  EE20  F062         	lfsr	2,i2SendDataToDeviceCh@values+2
 52430  016596  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52431  01659A  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52432  01659E  0100               	movlb	0	; () banked
 52433  0165A0  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52434  0165A2  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52435  0165A4  0100               	movlb	0	; () banked
 52436  0165A6  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52437  0165A8  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52438  0165AA  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52439  0165AC  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52440  0165AE  B4D8               	btfsc	status,2,c
 52441  0165B0  D002               	goto	i2l1894
 52442                           
 52443                           ; BSR set to: 0
 52444  0165B2  848E               	bsf	3982,2,c	;volatile
 52445  0165B4  D001               	goto	i2l10784
 52446  0165B6                     i2l1894:
 52447                           
 52448                           ; BSR set to: 0
 52449  0165B6  948E               	bcf	3982,2,c	;volatile
 52450  0165B8                     i2l10784:
 52451                           
 52452                           ; BSR set to: 0
 52453                           ;Device.c: 209: if (values[2] & mask) LATFbits.LF3 = 1; else LATFbits.LF3 = 0;
 52454  0165B8  0100               	movlb	0	; () banked
 52455  0165BA  EE20  F064         	lfsr	2,i2SendDataToDeviceCh@values+4
 52456  0165BE  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52457  0165C2  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52458  0165C6  0100               	movlb	0	; () banked
 52459  0165C8  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52460  0165CA  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52461  0165CC  0100               	movlb	0	; () banked
 52462  0165CE  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52463  0165D0  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52464  0165D2  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52465  0165D4  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52466  0165D6  B4D8               	btfsc	status,2,c
 52467  0165D8  D002               	goto	i2l1896
 52468                           
 52469                           ; BSR set to: 0
 52470  0165DA  868E               	bsf	3982,3,c	;volatile
 52471  0165DC  D001               	goto	i2l10788
 52472  0165DE                     i2l1896:
 52473                           
 52474                           ; BSR set to: 0
 52475  0165DE  968E               	bcf	3982,3,c	;volatile
 52476  0165E0                     i2l10788:
 52477                           
 52478                           ; BSR set to: 0
 52479                           ;Device.c: 210: if (values[3] & mask) LATFbits.LF4 = 1; else LATFbits.LF4 = 0;
 52480  0165E0  0100               	movlb	0	; () banked
 52481  0165E2  EE20  F066         	lfsr	2,i2SendDataToDeviceCh@values+6
 52482  0165E6  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52483  0165EA  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52484  0165EE  0100               	movlb	0	; () banked
 52485  0165F0  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52486  0165F2  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52487  0165F4  0100               	movlb	0	; () banked
 52488  0165F6  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52489  0165F8  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52490  0165FA  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52491  0165FC  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52492  0165FE  B4D8               	btfsc	status,2,c
 52493  016600  D002               	goto	i2l1898
 52494                           
 52495                           ; BSR set to: 0
 52496  016602  888E               	bsf	3982,4,c	;volatile
 52497  016604  D001               	goto	i2l10792
 52498  016606                     i2l1898:
 52499                           
 52500                           ; BSR set to: 0
 52501  016606  988E               	bcf	3982,4,c	;volatile
 52502  016608                     i2l10792:
 52503                           
 52504                           ; BSR set to: 0
 52505                           ;Device.c: 211: if (values[4] & mask) LATFbits.LF5 = 1; else LATFbits.LF5 = 0;
 52506  016608  0100               	movlb	0	; () banked
 52507  01660A  EE20  F068         	lfsr	2,i2SendDataToDeviceCh@values+8
 52508  01660E  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52509  016612  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52510  016616  0100               	movlb	0	; () banked
 52511  016618  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52512  01661A  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52513  01661C  0100               	movlb	0	; () banked
 52514  01661E  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52515  016620  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52516  016622  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52517  016624  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52518  016626  B4D8               	btfsc	status,2,c
 52519  016628  D002               	goto	i2l1900
 52520                           
 52521                           ; BSR set to: 0
 52522  01662A  8A8E               	bsf	3982,5,c	;volatile
 52523  01662C  D001               	goto	i2l10796
 52524  01662E                     i2l1900:
 52525                           
 52526                           ; BSR set to: 0
 52527  01662E  9A8E               	bcf	3982,5,c	;volatile
 52528  016630                     i2l10796:
 52529                           
 52530                           ; BSR set to: 0
 52531                           ;Device.c: 212: if (values[5] & mask) LATFbits.LF6 = 1; else LATFbits.LF6 = 0;
 52532  016630  0100               	movlb	0	; () banked
 52533  016632  EE20  F06A         	lfsr	2,i2SendDataToDeviceCh@values+10
 52534  016636  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52535  01663A  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52536  01663E  0100               	movlb	0	; () banked
 52537  016640  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52538  016642  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52539  016644  0100               	movlb	0	; () banked
 52540  016646  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52541  016648  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52542  01664A  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52543  01664C  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52544  01664E  B4D8               	btfsc	status,2,c
 52545  016650  D002               	goto	i2l1902
 52546                           
 52547                           ; BSR set to: 0
 52548  016652  8C8E               	bsf	3982,6,c	;volatile
 52549  016654  D001               	goto	i2l10800
 52550  016656                     i2l1902:
 52551                           
 52552                           ; BSR set to: 0
 52553  016656  9C8E               	bcf	3982,6,c	;volatile
 52554  016658                     i2l10800:
 52555                           
 52556                           ; BSR set to: 0
 52557                           ;Device.c: 213: if (values[6] & mask) LATFbits.LF7 = 1; else LATFbits.LF7 = 0;
 52558  016658  0100               	movlb	0	; () banked
 52559  01665A  EE20  F06C         	lfsr	2,i2SendDataToDeviceCh@values+12
 52560  01665E  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52561  016662  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52562  016666  0100               	movlb	0	; () banked
 52563  016668  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52564  01666A  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52565  01666C  0100               	movlb	0	; () banked
 52566  01666E  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52567  016670  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52568  016672  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52569  016674  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52570  016676  B4D8               	btfsc	status,2,c
 52571  016678  D002               	goto	i2l1904
 52572                           
 52573                           ; BSR set to: 0
 52574  01667A  8E8E               	bsf	3982,7,c	;volatile
 52575  01667C  D001               	goto	i2l10804
 52576  01667E                     i2l1904:
 52577                           
 52578                           ; BSR set to: 0
 52579  01667E  9E8E               	bcf	3982,7,c	;volatile
 52580  016680                     i2l10804:
 52581                           
 52582                           ; BSR set to: 0
 52583                           ;Device.c: 214: if (values[7] & mask) LATGbits.LG4 = 1; else LATGbits.LG4 = 0;
 52584  016680  0100               	movlb	0	; () banked
 52585  016682  EE20  F06E         	lfsr	2,i2SendDataToDeviceCh@values+14
 52586  016686  CFDE F054          	movff	postinc2,??i2_SendDataToDeviceCh
 52587  01668A  CFDD F055          	movff	postdec2,??i2_SendDataToDeviceCh+1
 52588  01668E  0100               	movlb	0	; () banked
 52589  016690  5174               	movf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52590  016692  1654               	andwf	??i2_SendDataToDeviceCh,f,c
 52591  016694  0100               	movlb	0	; () banked
 52592  016696  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52593  016698  1655               	andwf	??i2_SendDataToDeviceCh+1,f,c
 52594  01669A  5055               	movf	??i2_SendDataToDeviceCh+1,w,c
 52595  01669C  1054               	iorwf	??i2_SendDataToDeviceCh,w,c
 52596  01669E  B4D8               	btfsc	status,2,c
 52597  0166A0  D002               	goto	i2l1906
 52598                           
 52599                           ; BSR set to: 0
 52600  0166A2  888F               	bsf	3983,4,c	;volatile
 52601  0166A4  D001               	goto	i2l1907
 52602  0166A6                     i2l1906:
 52603                           
 52604                           ; BSR set to: 0
 52605  0166A6  988F               	bcf	3983,4,c	;volatile
 52606  0166A8                     i2l1907:
 52607                           
 52608                           ; BSR set to: 0
 52609                           ;Device.c: 215: LATEbits.LE3 = 1;
 52610  0166A8  868D               	bsf	3981,3,c	;volatile
 52611                           
 52612                           ; BSR set to: 0
 52613                           ;Device.c: 218: mask >>=1;
 52614  0166AA  0100               	movlb	0	; () banked
 52615  0166AC  90D8               	bcf	status,0,c
 52616  0166AE  3375               	rrcf	(i2SendDataToDeviceCh@mask+1)& (0+255),f,b
 52617  0166B0  3374               	rrcf	i2SendDataToDeviceCh@mask& (0+255),f,b
 52618  0166B2                     i2l10810:
 52619                           
 52620                           ; BSR set to: 0
 52621  0166B2  0100               	movlb	0	; () banked
 52622  0166B4  5175               	movf	(i2SendDataToDeviceCh@mask+1)& (0+255),w,b
 52623  0166B6  1174               	iorwf	i2SendDataToDeviceCh@mask& (0+255),w,b
 52624  0166B8  B4D8               	btfsc	status,2,c
 52625                           
 52626                           ; BSR set to: 0
 52627                           
 52628                           ; BSR set to: 0
 52629  0166BA  0012               	return	
 52630  0166BC  D755               	goto	i2l1891
 52631  0166BE                     __end_ofi2_SendDataToDeviceCh:
 52632                           	opt stack 0
 52633                           pclatu	equ	0xFFB
 52634                           pclath	equ	0xFFA
 52635                           tblptru	equ	0xFF8
 52636                           tblptrh	equ	0xFF7
 52637                           tblptrl	equ	0xFF6
 52638                           tablat	equ	0xFF5
 52639                           prodh	equ	0xFF4
 52640                           prodl	equ	0xFF3
 52641                           intcon	equ	0xFF2
 52642                           intcon2	equ	0xFF1
 52643                           intcon3	equ	0xFF0
 52644                           indf0	equ	0xFEF
 52645                           postinc0	equ	0xFEE
 52646                           fsr0h	equ	0xFEA
 52647                           fsr0l	equ	0xFE9
 52648                           wreg	equ	0xFE8
 52649                           indf1	equ	0xFE7
 52650                           postinc1	equ	0xFE6
 52651                           postdec1	equ	0xFE5
 52652                           fsr1h	equ	0xFE2
 52653                           fsr1l	equ	0xFE1
 52654                           indf2	equ	0xFDF
 52655                           postinc2	equ	0xFDE
 52656                           postdec2	equ	0xFDD
 52657                           fsr2h	equ	0xFDA
 52658                           fsr2l	equ	0xFD9
 52659                           status	equ	0xFD8
 52660                           
 52661 ;; *************** function i2_DbToCode *****************
 52662 ;; Defined at:
 52663 ;;		line 64 in file "Device.c"
 52664 ;; Parameters:    Size  Location     Type
 52665 ;;  volume          2   72[COMRAM] unsigned int 
 52666 ;; Auto vars:     Size  Location     Type
 52667 ;;  DbToCode        3   80[COMRAM] unsigned int 
 52668 ;; Return value:  Size  Location     Type
 52669 ;;                  2   72[COMRAM] unsigned int 
 52670 ;; Registers used:
 52671 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 52672 ;; Tracked objects:
 52673 ;;		On entry : 0/0
 52674 ;;		On exit  : 0/0
 52675 ;;		Unchanged: 0/0
 52676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 52677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52678 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52679 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52680 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 52681 ;;Total ram usage:       11 bytes
 52682 ;; Hardware stack levels used:    1
 52683 ;; Hardware stack levels required when called:    2
 52684 ;; This function calls:
 52685 ;;		i2___ftadd
 52686 ;;		i2___ftmul
 52687 ;;		i2___fttol
 52688 ;;		i2___lwtoft
 52689 ;; This function is called by:
 52690 ;;		i2_SendDataToDeviceCh
 52691 ;; This function uses a non-reentrant model
 52692 ;;
 52693                           
 52694                           	psect	text164
 52695  01689A                     __ptext164:
 52696                           	opt stack 0
 52697  01689A                     i2_DbToCode:
 52698                           	opt stack 15
 52699                           
 52700                           ;Device.c: 66: double k = 1;
 52701                           
 52702                           ; BSR set to: 0
 52703                           ;incstack = 0
 52704  01689A  0E00               	movlw	0
 52705  01689C  6E51               	movwf	i2DbToCode@k,c
 52706  01689E  0E80               	movlw	128
 52707  0168A0  6E52               	movwf	i2DbToCode@k+1,c
 52708  0168A2  0E3F               	movlw	63
 52709  0168A4  6E53               	movwf	i2DbToCode@k+2,c
 52710                           
 52711                           ;Device.c: 67: if (volume < 192)
 52712  0168A6  0EC0               	movlw	192
 52713  0168A8  5C49               	subwf	i2DbToCode@volume,w,c
 52714  0168AA  0E00               	movlw	0
 52715  0168AC  584A               	subwfb	i2DbToCode@volume+1,w,c
 52716  0168AE  B0D8               	btfsc	status,0,c
 52717  0168B0  D02A               	goto	i2l10342
 52718                           
 52719                           ;Device.c: 68: {
 52720                           ;Device.c: 69: if (volume < 96)
 52721  0168B2  0E60               	movlw	96
 52722  0168B4  5C49               	subwf	i2DbToCode@volume,w,c
 52723  0168B6  0E00               	movlw	0
 52724  0168B8  584A               	subwfb	i2DbToCode@volume+1,w,c
 52725  0168BA  B0D8               	btfsc	status,0,c
 52726  0168BC  D00E               	goto	i2l10332
 52727                           
 52728                           ;Device.c: 70: {
 52729                           ;Device.c: 71: if (volume >= 48)
 52730  0168BE  0E30               	movlw	48
 52731  0168C0  5C49               	subwf	i2DbToCode@volume,w,c
 52732  0168C2  0E00               	movlw	0
 52733  0168C4  584A               	subwfb	i2DbToCode@volume+1,w,c
 52734  0168C6  A0D8               	btfss	status,0,c
 52735  0168C8  D07E               	goto	i2l10382
 52736                           
 52737                           ;Device.c: 72: {
 52738                           ;Device.c: 73: k = 0.501187233627272;
 52739  0168CA  0E4E               	movlw	78
 52740  0168CC  6E51               	movwf	i2DbToCode@k,c
 52741  0168CE  0E00               	movlw	0
 52742  0168D0  6E52               	movwf	i2DbToCode@k+1,c
 52743  0168D2  0E3F               	movlw	63
 52744  0168D4  6E53               	movwf	i2DbToCode@k+2,c
 52745                           
 52746                           ;Device.c: 74: volume -= 48;
 52747  0168D6  0E30               	movlw	48
 52748  0168D8  D037               	goto	L58
 52749  0168DA                     i2l10332:
 52750                           
 52751                           ;Device.c: 77: else
 52752                           ;Device.c: 78: {
 52753                           ;Device.c: 79: if (volume < 144)
 52754  0168DA  0E90               	movlw	144
 52755  0168DC  5C49               	subwf	i2DbToCode@volume,w,c
 52756  0168DE  0E00               	movlw	0
 52757  0168E0  584A               	subwfb	i2DbToCode@volume+1,w,c
 52758  0168E2  B0D8               	btfsc	status,0,c
 52759  0168E4  D008               	goto	i2l10338
 52760                           
 52761                           ;Device.c: 80: {
 52762                           ;Device.c: 81: k = 0.251188643150958;
 52763  0168E6  0E9C               	movlw	156
 52764  0168E8  6E51               	movwf	i2DbToCode@k,c
 52765  0168EA  0E80               	movlw	128
 52766  0168EC  6E52               	movwf	i2DbToCode@k+1,c
 52767  0168EE  0E3E               	movlw	62
 52768  0168F0  6E53               	movwf	i2DbToCode@k+2,c
 52769                           
 52770                           ;Device.c: 82: volume -= 96;
 52771  0168F2  0E60               	movlw	96
 52772  0168F4  D029               	goto	L58
 52773  0168F6                     i2l10338:
 52774                           
 52775                           ;Device.c: 84: else
 52776                           ;Device.c: 85: {
 52777                           ;Device.c: 86: k = 0.125892541179417;
 52778  0168F6  0EEA               	movlw	234
 52779  0168F8  6E51               	movwf	i2DbToCode@k,c
 52780  0168FA  0E00               	movlw	0
 52781  0168FC  6E52               	movwf	i2DbToCode@k+1,c
 52782  0168FE  0E3E               	movlw	62
 52783  016900  6E53               	movwf	i2DbToCode@k+2,c
 52784                           
 52785                           ;Device.c: 87: volume -= 144;
 52786  016902  0E90               	movlw	144
 52787  016904  D021               	goto	L58
 52788  016906                     i2l10342:
 52789                           
 52790                           ;Device.c: 91: else
 52791                           ;Device.c: 92: {
 52792                           ;Device.c: 93: if (volume < 384)
 52793  016906  0E80               	movlw	128
 52794  016908  5C49               	subwf	i2DbToCode@volume,w,c
 52795  01690A  0E01               	movlw	1
 52796  01690C  584A               	subwfb	i2DbToCode@volume+1,w,c
 52797  01690E  B0D8               	btfsc	status,0,c
 52798  016910  D034               	goto	i2l10366
 52799                           
 52800                           ;Device.c: 94: {
 52801                           ;Device.c: 95: if (volume < 288)
 52802  016912  0E20               	movlw	32
 52803  016914  5C49               	subwf	i2DbToCode@volume,w,c
 52804  016916  0E01               	movlw	1
 52805  016918  584A               	subwfb	i2DbToCode@volume+1,w,c
 52806  01691A  B0D8               	btfsc	status,0,c
 52807  01691C  D018               	goto	i2l10356
 52808                           
 52809                           ;Device.c: 96: {
 52810                           ;Device.c: 97: if (volume < 240)
 52811  01691E  0EF0               	movlw	240
 52812  016920  5C49               	subwf	i2DbToCode@volume,w,c
 52813  016922  0E00               	movlw	0
 52814  016924  584A               	subwfb	i2DbToCode@volume+1,w,c
 52815  016926  B0D8               	btfsc	status,0,c
 52816  016928  D008               	goto	i2l10352
 52817                           
 52818                           ;Device.c: 98: {
 52819                           ;Device.c: 99: k = 0.0630957344480193;
 52820  01692A  0E38               	movlw	56
 52821  01692C  6E51               	movwf	i2DbToCode@k,c
 52822  01692E  0E81               	movlw	129
 52823  016930  6E52               	movwf	i2DbToCode@k+1,c
 52824  016932  0E3D               	movlw	61
 52825  016934  6E53               	movwf	i2DbToCode@k+2,c
 52826                           
 52827                           ;Device.c: 100: volume -= 192;
 52828  016936  0EC0               	movlw	192
 52829  016938  D007               	goto	L58
 52830  01693A                     i2l10352:
 52831                           
 52832                           ;Device.c: 102: else
 52833                           ;Device.c: 103: {
 52834                           ;Device.c: 104: k = 0.0316227766016838;
 52835  01693A  0E87               	movlw	135
 52836  01693C  6E51               	movwf	i2DbToCode@k,c
 52837  01693E  0E01               	movlw	1
 52838  016940  6E52               	movwf	i2DbToCode@k+1,c
 52839  016942  0E3D               	movlw	61
 52840  016944  6E53               	movwf	i2DbToCode@k+2,c
 52841                           
 52842                           ;Device.c: 105: volume -= 240;
 52843  016946  0EF0               	movlw	240
 52844  016948                     L58:
 52845  016948  5E49               	subwf	i2DbToCode@volume,f,c
 52846  01694A  0E00               	movlw	0
 52847  01694C  D03B               	goto	L61
 52848  01694E                     i2l10356:
 52849                           
 52850                           ;Device.c: 108: else
 52851                           ;Device.c: 109: {
 52852                           ;Device.c: 110: if (volume < 336)
 52853  01694E  0E50               	movlw	80
 52854  016950  5C49               	subwf	i2DbToCode@volume,w,c
 52855  016952  0E01               	movlw	1
 52856  016954  584A               	subwfb	i2DbToCode@volume+1,w,c
 52857  016956  B0D8               	btfsc	status,0,c
 52858  016958  D008               	goto	i2l10362
 52859                           
 52860                           ;Device.c: 111: {
 52861                           ;Device.c: 112: k = 0.0158489319246111;
 52862  01695A  0ED6               	movlw	214
 52863  01695C  6E51               	movwf	i2DbToCode@k,c
 52864  01695E  0E81               	movlw	129
 52865  016960  6E52               	movwf	i2DbToCode@k+1,c
 52866  016962  0E3C               	movlw	60
 52867  016964  6E53               	movwf	i2DbToCode@k+2,c
 52868                           
 52869                           ;Device.c: 113: volume -= 288;
 52870  016966  0E20               	movlw	32
 52871  016968  D02B               	goto	L62
 52872  01696A                     i2l10362:
 52873                           
 52874                           ;Device.c: 115: else
 52875                           ;Device.c: 116: {
 52876                           ;Device.c: 117: k = 0.0079432823472428;
 52877  01696A  0E25               	movlw	37
 52878  01696C  6E51               	movwf	i2DbToCode@k,c
 52879  01696E  0E02               	movlw	2
 52880  016970  6E52               	movwf	i2DbToCode@k+1,c
 52881  016972  0E3C               	movlw	60
 52882  016974  6E53               	movwf	i2DbToCode@k+2,c
 52883                           
 52884                           ;Device.c: 118: volume -= 336;
 52885  016976  0E50               	movlw	80
 52886  016978  D023               	goto	L62
 52887  01697A                     i2l10366:
 52888                           
 52889                           ;Device.c: 122: else
 52890                           ;Device.c: 123: {
 52891                           ;Device.c: 124: if (volume < 480)
 52892  01697A  0EE0               	movlw	224
 52893  01697C  5C49               	subwf	i2DbToCode@volume,w,c
 52894  01697E  0E01               	movlw	1
 52895  016980  584A               	subwfb	i2DbToCode@volume+1,w,c
 52896  016982  B0D8               	btfsc	status,0,c
 52897  016984  D016               	goto	i2l10378
 52898                           
 52899                           ;Device.c: 125: {
 52900                           ;Device.c: 126: if (volume < 432)
 52901  016986  0EB0               	movlw	176
 52902  016988  5C49               	subwf	i2DbToCode@volume,w,c
 52903  01698A  0E01               	movlw	1
 52904  01698C  584A               	subwfb	i2DbToCode@volume+1,w,c
 52905  01698E  B0D8               	btfsc	status,0,c
 52906  016990  D008               	goto	i2l10374
 52907                           
 52908                           ;Device.c: 127: {
 52909                           ;Device.c: 128: k = 0.00398107170553497;
 52910  016992  0E74               	movlw	116
 52911  016994  6E51               	movwf	i2DbToCode@k,c
 52912  016996  0E82               	movlw	130
 52913  016998  6E52               	movwf	i2DbToCode@k+1,c
 52914  01699A  0E3B               	movlw	59
 52915  01699C  6E53               	movwf	i2DbToCode@k+2,c
 52916                           
 52917                           ;Device.c: 129: volume -= 384;
 52918  01699E  0E80               	movlw	128
 52919  0169A0  D00F               	goto	L62
 52920  0169A2                     i2l10374:
 52921                           
 52922                           ;Device.c: 131: else
 52923                           ;Device.c: 132: {
 52924                           ;Device.c: 133: k = 0.00199526231496888;
 52925  0169A2  0EC3               	movlw	195
 52926  0169A4  6E51               	movwf	i2DbToCode@k,c
 52927  0169A6  0E02               	movlw	2
 52928  0169A8  6E52               	movwf	i2DbToCode@k+1,c
 52929  0169AA  0E3B               	movlw	59
 52930  0169AC  6E53               	movwf	i2DbToCode@k+2,c
 52931                           
 52932                           ;Device.c: 134: volume -= 432;
 52933  0169AE  0EB0               	movlw	176
 52934  0169B0  D007               	goto	L62
 52935  0169B2                     i2l10378:
 52936                           
 52937                           ;Device.c: 137: else
 52938                           ;Device.c: 138: {
 52939                           ;Device.c: 139: k = 0.001;
 52940  0169B2  0E12               	movlw	18
 52941  0169B4  6E51               	movwf	i2DbToCode@k,c
 52942  0169B6  0E83               	movlw	131
 52943  0169B8  6E52               	movwf	i2DbToCode@k+1,c
 52944  0169BA  0E3A               	movlw	58
 52945  0169BC  6E53               	movwf	i2DbToCode@k+2,c
 52946                           
 52947                           ;Device.c: 140: volume -= 480;
 52948  0169BE  0EE0               	movlw	224
 52949  0169C0                     L62:
 52950  0169C0  5E49               	subwf	i2DbToCode@volume,f,c
 52951  0169C2  0E01               	movlw	1
 52952  0169C4                     L61:
 52953  0169C4  5A4A               	subwfb	i2DbToCode@volume+1,f,c
 52954  0169C6                     i2l10382:
 52955                           
 52956                           ;Device.c: 141: }
 52957                           ;Device.c: 142: }
 52958                           ;Device.c: 143: }
 52959                           ;Device.c: 146: if (volume > 47) return 0;
 52960  0169C6  0E30               	movlw	48
 52961  0169C8  5C49               	subwf	i2DbToCode@volume,w,c
 52962  0169CA  0E00               	movlw	0
 52963  0169CC  584A               	subwfb	i2DbToCode@volume+1,w,c
 52964  0169CE  A0D8               	btfss	status,0,c
 52965  0169D0  D005               	goto	i2l10388
 52966  0169D2  0E00               	movlw	0
 52967  0169D4  6E4A               	movwf	?i2_DbToCode+1,c
 52968  0169D6  0E00               	movlw	0
 52969  0169D8  6E49               	movwf	?i2_DbToCode,c
 52970  0169DA  0012               	return	
 52971  0169DC                     i2l10388:
 52972                           
 52973                           ;Device.c: 147: return (uint16_t)(LOGS[volume] * k + 0.5);
 52974  0169DC  0E00               	movlw	0
 52975  0169DE  6E31               	movwf	i2___ftadd@f2,c
 52976  0169E0  0E00               	movlw	0
 52977  0169E2  6E32               	movwf	i2___ftadd@f2+1,c
 52978  0169E4  0E3F               	movlw	63
 52979  0169E6  6E33               	movwf	i2___ftadd@f2+2,c
 52980  0169E8  C051  F018         	movff	i2DbToCode@k,i2___ftmul@f2
 52981  0169EC  C052  F019         	movff	i2DbToCode@k+1,i2___ftmul@f2+1
 52982  0169F0  C053  F01A         	movff	i2DbToCode@k+2,i2___ftmul@f2+2
 52983  0169F4  C049  F04B         	movff	i2DbToCode@volume,??i2_DbToCode
 52984  0169F8  C04A  F04C         	movff	i2DbToCode@volume+1,??i2_DbToCode+1
 52985  0169FC  90D8               	bcf	status,0,c
 52986  0169FE  364B               	rlcf	??i2_DbToCode,f,c
 52987  016A00  364C               	rlcf	??i2_DbToCode+1,f,c
 52988  016A02  0E2B               	movlw	low _LOGS
 52989  016A04  244B               	addwf	??i2_DbToCode,w,c
 52990  016A06  6EF6               	movwf	tblptrl,c
 52991  016A08  0EFE               	movlw	high _LOGS
 52992  016A0A  204C               	addwfc	??i2_DbToCode+1,w,c
 52993  016A0C  6EF7               	movwf	tblptrh,c
 52994  016A0E                     	if	1	;There are 3 active tblptr bytes
 52995  016A0E  6AF8               	clrf	tblptru,c
 52996  016A10  0E00               	movlw	low (__mediumconst shr (0+16))
 52997  016A12  22F8               	addwfc	tblptru,f,c
 52998  016A14                     	endif
 52999  016A14  0009               	tblrd		*+
 53000  016A16  CFF5 F009          	movff	tablat,i2___lwtoft@c
 53001  016A1A  000A               	tblrd		*-
 53002  016A1C  CFF5 F00A          	movff	tablat,i2___lwtoft@c+1
 53003  016A20  ECF2  F0DB         	call	i2___lwtoft	;wreg free
 53004  016A24  C009  F015         	movff	?i2___lwtoft,i2___ftmul@f1
 53005  016A28  C00A  F016         	movff	?i2___lwtoft+1,i2___ftmul@f1+1
 53006  016A2C  C00B  F017         	movff	?i2___lwtoft+2,i2___ftmul@f1+2
 53007  016A30  EC60  F0C8         	call	i2___ftmul	;wreg free
 53008  016A34  C015  F02E         	movff	?i2___ftmul,i2___ftadd@f1
 53009  016A38  C016  F02F         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 53010  016A3C  C017  F030         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 53011  016A40  EC0E  F0B6         	call	i2___ftadd	;wreg free
 53012  016A44  C02E  F03A         	movff	?i2___ftadd,i2___fttol@f1
 53013  016A48  C02F  F03B         	movff	?i2___ftadd+1,i2___fttol@f1+1
 53014  016A4C  C030  F03C         	movff	?i2___ftadd+2,i2___fttol@f1+2
 53015  016A50  ECE5  F0C7         	call	i2___fttol	;wreg free
 53016  016A54  C03A  F04D         	movff	?i2___fttol,??i2_DbToCode+2
 53017  016A58  C03B  F04E         	movff	?i2___fttol+1,??i2_DbToCode+3
 53018  016A5C  C03C  F04F         	movff	?i2___fttol+2,??i2_DbToCode+4
 53019  016A60  C03D  F050         	movff	?i2___fttol+3,??i2_DbToCode+5
 53020  016A64  C04D  F049         	movff	??i2_DbToCode+2,?i2_DbToCode
 53021  016A68  C04E  F04A         	movff	??i2_DbToCode+3,?i2_DbToCode+1
 53022  016A6C  0012               	return	
 53023  016A6E                     __end_ofi2_DbToCode:
 53024                           	opt stack 0
 53025                           pclatu	equ	0xFFB
 53026                           pclath	equ	0xFFA
 53027                           tblptru	equ	0xFF8
 53028                           tblptrh	equ	0xFF7
 53029                           tblptrl	equ	0xFF6
 53030                           tablat	equ	0xFF5
 53031                           prodh	equ	0xFF4
 53032                           prodl	equ	0xFF3
 53033                           intcon	equ	0xFF2
 53034                           intcon2	equ	0xFF1
 53035                           intcon3	equ	0xFF0
 53036                           indf0	equ	0xFEF
 53037                           postinc0	equ	0xFEE
 53038                           fsr0h	equ	0xFEA
 53039                           fsr0l	equ	0xFE9
 53040                           wreg	equ	0xFE8
 53041                           indf1	equ	0xFE7
 53042                           postinc1	equ	0xFE6
 53043                           postdec1	equ	0xFE5
 53044                           fsr1h	equ	0xFE2
 53045                           fsr1l	equ	0xFE1
 53046                           indf2	equ	0xFDF
 53047                           postinc2	equ	0xFDE
 53048                           postdec2	equ	0xFDD
 53049                           fsr2h	equ	0xFDA
 53050                           fsr2l	equ	0xFD9
 53051                           status	equ	0xFD8
 53052                           
 53053 ;; *************** function i2___lwtoft *****************
 53054 ;; Defined at:
 53055 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 53056 ;; Parameters:    Size  Location     Type
 53057 ;;  c               2    8[COMRAM] unsigned int 
 53058 ;; Auto vars:     Size  Location     Type
 53059 ;;		None
 53060 ;; Return value:  Size  Location     Type
 53061 ;;                  3    8[COMRAM] float 
 53062 ;; Registers used:
 53063 ;;		wreg, status,2, status,0, cstack
 53064 ;; Tracked objects:
 53065 ;;		On entry : 0/0
 53066 ;;		On exit  : 0/0
 53067 ;;		Unchanged: 0/0
 53068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53072 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53073 ;;Total ram usage:        3 bytes
 53074 ;; Hardware stack levels used:    1
 53075 ;; Hardware stack levels required when called:    1
 53076 ;; This function calls:
 53077 ;;		i2___ftpack
 53078 ;; This function is called by:
 53079 ;;		i2_DbToCode
 53080 ;; This function uses a non-reentrant model
 53081 ;;
 53082                           
 53083                           	psect	text165
 53084  01B7E4                     __ptext165:
 53085                           	opt stack 0
 53086  01B7E4                     i2___lwtoft:
 53087                           	opt stack 15
 53088                           
 53089                           ;incstack = 0
 53090  01B7E4  C009  F001         	movff	i2___lwtoft@c,i2___ftpack@arg
 53091  01B7E8  C00A  F002         	movff	i2___lwtoft@c+1,i2___ftpack@arg+1
 53092  01B7EC  6A03               	clrf	i2___ftpack@arg+2,c
 53093  01B7EE  0E8E               	movlw	142
 53094  01B7F0  6E04               	movwf	i2___ftpack@exp,c
 53095  01B7F2  0E00               	movlw	0
 53096  01B7F4  6E05               	movwf	i2___ftpack@sign,c
 53097  01B7F6  EC84  F0D0         	call	i2___ftpack	;wreg free
 53098  01B7FA  C001  F009         	movff	?i2___ftpack,?i2___lwtoft
 53099  01B7FE  C002  F00A         	movff	?i2___ftpack+1,?i2___lwtoft+1
 53100  01B802  C003  F00B         	movff	?i2___ftpack+2,?i2___lwtoft+2
 53101  01B806  0012               	return	
 53102  01B808                     __end_ofi2___lwtoft:
 53103                           	opt stack 0
 53104                           pclatu	equ	0xFFB
 53105                           pclath	equ	0xFFA
 53106                           tblptru	equ	0xFF8
 53107                           tblptrh	equ	0xFF7
 53108                           tblptrl	equ	0xFF6
 53109                           tablat	equ	0xFF5
 53110                           prodh	equ	0xFF4
 53111                           prodl	equ	0xFF3
 53112                           intcon	equ	0xFF2
 53113                           intcon2	equ	0xFF1
 53114                           intcon3	equ	0xFF0
 53115                           indf0	equ	0xFEF
 53116                           postinc0	equ	0xFEE
 53117                           fsr0h	equ	0xFEA
 53118                           fsr0l	equ	0xFE9
 53119                           wreg	equ	0xFE8
 53120                           indf1	equ	0xFE7
 53121                           postinc1	equ	0xFE6
 53122                           postdec1	equ	0xFE5
 53123                           fsr1h	equ	0xFE2
 53124                           fsr1l	equ	0xFE1
 53125                           indf2	equ	0xFDF
 53126                           postinc2	equ	0xFDE
 53127                           postdec2	equ	0xFDD
 53128                           fsr2h	equ	0xFDA
 53129                           fsr2l	equ	0xFD9
 53130                           status	equ	0xFD8
 53131                           
 53132 ;; *************** function i2___fttol *****************
 53133 ;; Defined at:
 53134 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 53135 ;; Parameters:    Size  Location     Type
 53136 ;;  f1              3   57[COMRAM] float 
 53137 ;; Auto vars:     Size  Location     Type
 53138 ;;  __fttol         4   67[COMRAM] unsigned long 
 53139 ;;  __fttol         1   71[COMRAM] unsigned char 
 53140 ;;  __fttol         1   66[COMRAM] unsigned char 
 53141 ;; Return value:  Size  Location     Type
 53142 ;;                  4   57[COMRAM] long 
 53143 ;; Registers used:
 53144 ;;		wreg, status,2, status,0
 53145 ;; Tracked objects:
 53146 ;;		On entry : 0/0
 53147 ;;		On exit  : 0/0
 53148 ;;		Unchanged: 0/0
 53149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53151 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53152 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53153 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53154 ;;Total ram usage:       15 bytes
 53155 ;; Hardware stack levels used:    1
 53156 ;; This function calls:
 53157 ;;		Nothing
 53158 ;; This function is called by:
 53159 ;;		i2_DbToCode
 53160 ;;		i2_sprintf
 53161 ;; This function uses a non-reentrant model
 53162 ;;
 53163                           
 53164                           	psect	text166
 53165  018FCA                     __ptext166:
 53166                           	opt stack 0
 53167  018FCA                     i2___fttol:
 53168                           	opt stack 18
 53169                           
 53170                           ;incstack = 0
 53171  018FCA  C03C  F03E         	movff	i2___fttol@f1+2,??i2___fttol
 53172  018FCE  6A3F               	clrf	(??i2___fttol+1)& (0+255),c
 53173  018FD0  6A40               	clrf	(??i2___fttol+2)& (0+255),c
 53174  018FD2  343B               	rlcf	i2___fttol@f1+1,w,c
 53175  018FD4  363E               	rlcf	??i2___fttol& (0+255),f,c
 53176  018FD6  E301               	bnc	u1007_41
 53177  018FD8  803F               	bsf	(??i2___fttol+1)& (0+255),0,c
 53178  018FDA                     u1007_41:
 53179  018FDA  503E               	movf	??i2___fttol,w,c
 53180  018FDC  6E48               	movwf	i2___fttol@exp1,c
 53181  018FDE  6648               	tstfsz	i2___fttol@exp1& (0+255),c
 53182  018FE0  D009               	goto	i2l9916
 53183  018FE2  0E00               	movlw	0
 53184  018FE4  6E3A               	movwf	?i2___fttol,c
 53185  018FE6  0E00               	movlw	0
 53186  018FE8  6E3B               	movwf	?i2___fttol+1,c
 53187  018FEA  0E00               	movlw	0
 53188  018FEC  6E3C               	movwf	?i2___fttol+2,c
 53189  018FEE  0E00               	movlw	0
 53190  018FF0  6E3D               	movwf	?i2___fttol+3,c
 53191  018FF2  0012               	return	
 53192  018FF4                     i2l9916:
 53193  018FF4  0E17               	movlw	23
 53194  018FF6  6E3E               	movwf	??i2___fttol& (0+255),c
 53195  018FF8  C03A  F03F         	movff	i2___fttol@f1,??i2___fttol+1
 53196  018FFC  C03B  F040         	movff	i2___fttol@f1+1,??i2___fttol+2
 53197  019000  C03C  F041         	movff	i2___fttol@f1+2,??i2___fttol+3
 53198  019004  283E               	incf	??i2___fttol,w,c
 53199  019006  6E42               	movwf	(??i2___fttol+4)& (0+255),c
 53200  019008  D004               	goto	i2u1009_40
 53201  01900A                     i2u1009_45:
 53202  01900A  90D8               	bcf	status,0,c
 53203  01900C  3241               	rrcf	??i2___fttol+3,f,c
 53204  01900E  3240               	rrcf	??i2___fttol+2,f,c
 53205  019010  323F               	rrcf	??i2___fttol+1,f,c
 53206  019012                     i2u1009_40:
 53207  019012  2E42               	decfsz	(??i2___fttol+4)& (0+255),f,c
 53208  019014  D7FA               	goto	i2u1009_45
 53209  019016  503F               	movf	??i2___fttol+1,w,c
 53210  019018  6E43               	movwf	i2___fttol@sign1,c
 53211  01901A  8E3B               	bsf	i2___fttol@f1+1,7,c
 53212  01901C  0EFF               	movlw	255
 53213  01901E  163A               	andwf	i2___fttol@f1,f,c
 53214  019020  0EFF               	movlw	255
 53215  019022  163B               	andwf	i2___fttol@f1+1,f,c
 53216  019024  0E00               	movlw	0
 53217  019026  163C               	andwf	i2___fttol@f1+2,f,c
 53218  019028  503A               	movf	i2___fttol@f1,w,c
 53219  01902A  6E44               	movwf	i2___fttol@lval,c
 53220  01902C  503B               	movf	i2___fttol@f1+1,w,c
 53221  01902E  6E45               	movwf	i2___fttol@lval+1,c
 53222  019030  503C               	movf	i2___fttol@f1+2,w,c
 53223  019032  6E46               	movwf	i2___fttol@lval+2,c
 53224  019034  6A47               	clrf	i2___fttol@lval+3,c
 53225  019036  0E8E               	movlw	142
 53226  019038  5E48               	subwf	i2___fttol@exp1,f,c
 53227  01903A  AE48               	btfss	i2___fttol@exp1,7,c
 53228  01903C  D019               	goto	i2l9938
 53229  01903E  5048               	movf	i2___fttol@exp1,w,c
 53230  019040  0A80               	xorlw	128
 53231  019042  6E3E               	movwf	??i2___fttol& (0+255),c
 53232  019044  0EF1               	movlw	241
 53233  019046  0A80               	xorlw	128
 53234  019048  5C3E               	subwf	??i2___fttol,w,c
 53235  01904A  B0D8               	btfsc	status,0,c
 53236  01904C  D009               	goto	i2l9934
 53237  01904E  0E00               	movlw	0
 53238  019050  6E3A               	movwf	?i2___fttol,c
 53239  019052  0E00               	movlw	0
 53240  019054  6E3B               	movwf	?i2___fttol+1,c
 53241  019056  0E00               	movlw	0
 53242  019058  6E3C               	movwf	?i2___fttol+2,c
 53243  01905A  0E00               	movlw	0
 53244  01905C  6E3D               	movwf	?i2___fttol+3,c
 53245  01905E  0012               	return	
 53246  019060                     i2l9934:
 53247  019060  90D8               	bcf	status,0,c
 53248  019062  3247               	rrcf	i2___fttol@lval+3,f,c
 53249  019064  3246               	rrcf	i2___fttol@lval+2,f,c
 53250  019066  3245               	rrcf	i2___fttol@lval+1,f,c
 53251  019068  3244               	rrcf	i2___fttol@lval,f,c
 53252  01906A  3E48               	incfsz	i2___fttol@exp1,f,c
 53253  01906C  D7F9               	goto	i2l9934
 53254  01906E  D014               	goto	i2l9948
 53255  019070                     i2l9938:
 53256  019070  0E17               	movlw	23
 53257  019072  6448               	cpfsgt	i2___fttol@exp1,c
 53258  019074  D00F               	goto	i2l9946
 53259  019076  0E00               	movlw	0
 53260  019078  6E3A               	movwf	?i2___fttol,c
 53261  01907A  0E00               	movlw	0
 53262  01907C  6E3B               	movwf	?i2___fttol+1,c
 53263  01907E  0E00               	movlw	0
 53264  019080  6E3C               	movwf	?i2___fttol+2,c
 53265  019082  0E00               	movlw	0
 53266  019084  6E3D               	movwf	?i2___fttol+3,c
 53267  019086  0012               	return	
 53268  019088                     i2l9944:
 53269  019088  90D8               	bcf	status,0,c
 53270  01908A  3644               	rlcf	i2___fttol@lval,f,c
 53271  01908C  3645               	rlcf	i2___fttol@lval+1,f,c
 53272  01908E  3646               	rlcf	i2___fttol@lval+2,f,c
 53273  019090  3647               	rlcf	i2___fttol@lval+3,f,c
 53274  019092  0648               	decf	i2___fttol@exp1,f,c
 53275  019094                     i2l9946:
 53276  019094  6648               	tstfsz	i2___fttol@exp1,c
 53277  019096  D7F8               	goto	i2l9944
 53278  019098                     i2l9948:
 53279  019098  5043               	movf	i2___fttol@sign1,w,c
 53280  01909A  B4D8               	btfsc	status,2,c
 53281  01909C  D008               	goto	i2l9952
 53282  01909E  1E47               	comf	i2___fttol@lval+3,f,c
 53283  0190A0  1E46               	comf	i2___fttol@lval+2,f,c
 53284  0190A2  1E45               	comf	i2___fttol@lval+1,f,c
 53285  0190A4  6C44               	negf	i2___fttol@lval,c
 53286  0190A6  0E00               	movlw	0
 53287  0190A8  2245               	addwfc	i2___fttol@lval+1,f,c
 53288  0190AA  2246               	addwfc	i2___fttol@lval+2,f,c
 53289  0190AC  2247               	addwfc	i2___fttol@lval+3,f,c
 53290  0190AE                     i2l9952:
 53291  0190AE  C044  F03A         	movff	i2___fttol@lval,?i2___fttol
 53292  0190B2  C045  F03B         	movff	i2___fttol@lval+1,?i2___fttol+1
 53293  0190B6  C046  F03C         	movff	i2___fttol@lval+2,?i2___fttol+2
 53294  0190BA  C047  F03D         	movff	i2___fttol@lval+3,?i2___fttol+3
 53295  0190BE  0012               	return	
 53296  0190C0                     __end_ofi2___fttol:
 53297                           	opt stack 0
 53298                           pclatu	equ	0xFFB
 53299                           pclath	equ	0xFFA
 53300                           tblptru	equ	0xFF8
 53301                           tblptrh	equ	0xFF7
 53302                           tblptrl	equ	0xFF6
 53303                           tablat	equ	0xFF5
 53304                           prodh	equ	0xFF4
 53305                           prodl	equ	0xFF3
 53306                           intcon	equ	0xFF2
 53307                           intcon2	equ	0xFF1
 53308                           intcon3	equ	0xFF0
 53309                           indf0	equ	0xFEF
 53310                           postinc0	equ	0xFEE
 53311                           fsr0h	equ	0xFEA
 53312                           fsr0l	equ	0xFE9
 53313                           wreg	equ	0xFE8
 53314                           indf1	equ	0xFE7
 53315                           postinc1	equ	0xFE6
 53316                           postdec1	equ	0xFE5
 53317                           fsr1h	equ	0xFE2
 53318                           fsr1l	equ	0xFE1
 53319                           indf2	equ	0xFDF
 53320                           postinc2	equ	0xFDE
 53321                           postdec2	equ	0xFDD
 53322                           fsr2h	equ	0xFDA
 53323                           fsr2l	equ	0xFD9
 53324                           status	equ	0xFD8
 53325                           
 53326 ;; *************** function i2___ftmul *****************
 53327 ;; Defined at:
 53328 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 53329 ;; Parameters:    Size  Location     Type
 53330 ;;  f1              3   20[COMRAM] float 
 53331 ;;  f2              3   23[COMRAM] float 
 53332 ;; Auto vars:     Size  Location     Type
 53333 ;;  __ftmul         3   30[COMRAM] unsigned um
 53334 ;;  __ftmul         1   34[COMRAM] unsigned char 
 53335 ;;  __ftmul         1   33[COMRAM] unsigned char 
 53336 ;;  __ftmul         1   29[COMRAM] unsigned char 
 53337 ;; Return value:  Size  Location     Type
 53338 ;;                  3   20[COMRAM] float 
 53339 ;; Registers used:
 53340 ;;		wreg, status,2, status,0, cstack
 53341 ;; Tracked objects:
 53342 ;;		On entry : 0/0
 53343 ;;		On exit  : 0/0
 53344 ;;		Unchanged: 0/0
 53345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53346 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53347 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53348 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53349 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53350 ;;Total ram usage:       15 bytes
 53351 ;; Hardware stack levels used:    1
 53352 ;; Hardware stack levels required when called:    1
 53353 ;; This function calls:
 53354 ;;		i2___ftpack
 53355 ;; This function is called by:
 53356 ;;		i2_DbToCode
 53357 ;;		i2_fround
 53358 ;;		i2_scale
 53359 ;;		i2_sprintf
 53360 ;; This function uses a non-reentrant model
 53361 ;;
 53362                           
 53363                           	psect	text167
 53364  0190C0                     __ptext167:
 53365                           	opt stack 0
 53366  0190C0                     i2___ftmul:
 53367                           	opt stack 16
 53368                           
 53369                           ;incstack = 0
 53370  0190C0  C017  F01B         	movff	i2___ftmul@f1+2,??i2___ftmul
 53371  0190C4  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 53372  0190C6  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 53373  0190C8  3416               	rlcf	i2___ftmul@f1+1,w,c
 53374  0190CA  361B               	rlcf	??i2___ftmul& (0+255),f,c
 53375  0190CC  E301               	bnc	u1001_41
 53376  0190CE  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 53377  0190D0                     u1001_41:
 53378  0190D0  501B               	movf	??i2___ftmul,w,c
 53379  0190D2  6E1E               	movwf	i2___ftmul@exp,c
 53380  0190D4  661E               	tstfsz	i2___ftmul@exp& (0+255),c
 53381  0190D6  D007               	goto	i2l9868
 53382  0190D8  0E00               	movlw	0
 53383  0190DA  6E15               	movwf	?i2___ftmul,c
 53384  0190DC  0E00               	movlw	0
 53385  0190DE  6E16               	movwf	?i2___ftmul+1,c
 53386  0190E0  0E00               	movlw	0
 53387  0190E2  6E17               	movwf	?i2___ftmul+2,c
 53388  0190E4  0012               	return	
 53389  0190E6                     i2l9868:
 53390  0190E6  C01A  F01B         	movff	i2___ftmul@f2+2,??i2___ftmul
 53391  0190EA  6A1C               	clrf	(??i2___ftmul+1)& (0+255),c
 53392  0190EC  6A1D               	clrf	(??i2___ftmul+2)& (0+255),c
 53393  0190EE  3419               	rlcf	i2___ftmul@f2+1,w,c
 53394  0190F0  361B               	rlcf	??i2___ftmul& (0+255),f,c
 53395  0190F2  E301               	bnc	u1003_41
 53396  0190F4  801C               	bsf	(??i2___ftmul+1)& (0+255),0,c
 53397  0190F6                     u1003_41:
 53398  0190F6  501B               	movf	??i2___ftmul,w,c
 53399  0190F8  6E23               	movwf	i2___ftmul@sign,c
 53400  0190FA  6623               	tstfsz	i2___ftmul@sign& (0+255),c
 53401  0190FC  D007               	goto	i2l9874
 53402  0190FE  0E00               	movlw	0
 53403  019100  6E15               	movwf	?i2___ftmul,c
 53404  019102  0E00               	movlw	0
 53405  019104  6E16               	movwf	?i2___ftmul+1,c
 53406  019106  0E00               	movlw	0
 53407  019108  6E17               	movwf	?i2___ftmul+2,c
 53408  01910A  0012               	return	
 53409  01910C                     i2l9874:
 53410  01910C  5023               	movf	i2___ftmul@sign,w,c
 53411  01910E  0F7B               	addlw	123
 53412  019110  261E               	addwf	i2___ftmul@exp,f,c
 53413  019112  C017  F023         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 53414  019116  501A               	movf	i2___ftmul@f2+2,w,c
 53415  019118  1A23               	xorwf	i2___ftmul@sign,f,c
 53416  01911A  0E80               	movlw	128
 53417  01911C  1623               	andwf	i2___ftmul@sign,f,c
 53418  01911E  8E16               	bsf	i2___ftmul@f1+1,7,c
 53419  019120  8E19               	bsf	i2___ftmul@f2+1,7,c
 53420  019122  0EFF               	movlw	255
 53421  019124  1618               	andwf	i2___ftmul@f2,f,c
 53422  019126  0EFF               	movlw	255
 53423  019128  1619               	andwf	i2___ftmul@f2+1,f,c
 53424  01912A  0E00               	movlw	0
 53425  01912C  161A               	andwf	i2___ftmul@f2+2,f,c
 53426  01912E  0E00               	movlw	0
 53427  019130  6E1F               	movwf	i2___ftmul@f3_as_product,c
 53428  019132  0E00               	movlw	0
 53429  019134  6E20               	movwf	i2___ftmul@f3_as_product+1,c
 53430  019136  0E00               	movlw	0
 53431  019138  6E21               	movwf	i2___ftmul@f3_as_product+2,c
 53432  01913A  0E07               	movlw	7
 53433  01913C  6E22               	movwf	i2___ftmul@cntr,c
 53434  01913E                     i2l9888:
 53435  01913E  A015               	btfss	i2___ftmul@f1,0,c
 53436  019140  D006               	goto	i2l9892
 53437  019142  5018               	movf	i2___ftmul@f2,w,c
 53438  019144  261F               	addwf	i2___ftmul@f3_as_product,f,c
 53439  019146  5019               	movf	i2___ftmul@f2+1,w,c
 53440  019148  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 53441  01914A  501A               	movf	i2___ftmul@f2+2,w,c
 53442  01914C  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 53443  01914E                     i2l9892:
 53444  01914E  90D8               	bcf	status,0,c
 53445  019150  3217               	rrcf	i2___ftmul@f1+2,f,c
 53446  019152  3216               	rrcf	i2___ftmul@f1+1,f,c
 53447  019154  3215               	rrcf	i2___ftmul@f1,f,c
 53448  019156  90D8               	bcf	status,0,c
 53449  019158  3618               	rlcf	i2___ftmul@f2,f,c
 53450  01915A  3619               	rlcf	i2___ftmul@f2+1,f,c
 53451  01915C  361A               	rlcf	i2___ftmul@f2+2,f,c
 53452  01915E  2E22               	decfsz	i2___ftmul@cntr,f,c
 53453  019160  D7EE               	goto	i2l9888
 53454  019162  0E09               	movlw	9
 53455  019164  6E22               	movwf	i2___ftmul@cntr,c
 53456  019166                     i2l9898:
 53457  019166  A015               	btfss	i2___ftmul@f1,0,c
 53458  019168  D006               	goto	i2l9902
 53459  01916A  5018               	movf	i2___ftmul@f2,w,c
 53460  01916C  261F               	addwf	i2___ftmul@f3_as_product,f,c
 53461  01916E  5019               	movf	i2___ftmul@f2+1,w,c
 53462  019170  2220               	addwfc	i2___ftmul@f3_as_product+1,f,c
 53463  019172  501A               	movf	i2___ftmul@f2+2,w,c
 53464  019174  2221               	addwfc	i2___ftmul@f3_as_product+2,f,c
 53465  019176                     i2l9902:
 53466  019176  90D8               	bcf	status,0,c
 53467  019178  3217               	rrcf	i2___ftmul@f1+2,f,c
 53468  01917A  3216               	rrcf	i2___ftmul@f1+1,f,c
 53469  01917C  3215               	rrcf	i2___ftmul@f1,f,c
 53470  01917E  90D8               	bcf	status,0,c
 53471  019180  3221               	rrcf	i2___ftmul@f3_as_product+2,f,c
 53472  019182  3220               	rrcf	i2___ftmul@f3_as_product+1,f,c
 53473  019184  321F               	rrcf	i2___ftmul@f3_as_product,f,c
 53474  019186  2E22               	decfsz	i2___ftmul@cntr,f,c
 53475  019188  D7EE               	goto	i2l9898
 53476  01918A  C01F  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 53477  01918E  C020  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 53478  019192  C021  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 53479  019196  C01E  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 53480  01919A  C023  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 53481  01919E  EC84  F0D0         	call	i2___ftpack	;wreg free
 53482  0191A2  C001  F015         	movff	?i2___ftpack,?i2___ftmul
 53483  0191A6  C002  F016         	movff	?i2___ftpack+1,?i2___ftmul+1
 53484  0191AA  C003  F017         	movff	?i2___ftpack+2,?i2___ftmul+2
 53485  0191AE  0012               	return	
 53486  0191B0                     __end_ofi2___ftmul:
 53487                           	opt stack 0
 53488                           pclatu	equ	0xFFB
 53489                           pclath	equ	0xFFA
 53490                           tblptru	equ	0xFF8
 53491                           tblptrh	equ	0xFF7
 53492                           tblptrl	equ	0xFF6
 53493                           tablat	equ	0xFF5
 53494                           prodh	equ	0xFF4
 53495                           prodl	equ	0xFF3
 53496                           intcon	equ	0xFF2
 53497                           intcon2	equ	0xFF1
 53498                           intcon3	equ	0xFF0
 53499                           indf0	equ	0xFEF
 53500                           postinc0	equ	0xFEE
 53501                           fsr0h	equ	0xFEA
 53502                           fsr0l	equ	0xFE9
 53503                           wreg	equ	0xFE8
 53504                           indf1	equ	0xFE7
 53505                           postinc1	equ	0xFE6
 53506                           postdec1	equ	0xFE5
 53507                           fsr1h	equ	0xFE2
 53508                           fsr1l	equ	0xFE1
 53509                           indf2	equ	0xFDF
 53510                           postinc2	equ	0xFDE
 53511                           postdec2	equ	0xFDD
 53512                           fsr2h	equ	0xFDA
 53513                           fsr2l	equ	0xFD9
 53514                           status	equ	0xFD8
 53515                           
 53516 ;; *************** function i2___ftadd *****************
 53517 ;; Defined at:
 53518 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
 53519 ;; Parameters:    Size  Location     Type
 53520 ;;  f1              3   45[COMRAM] float 
 53521 ;;  f2              3   48[COMRAM] float 
 53522 ;; Auto vars:     Size  Location     Type
 53523 ;;  __ftadd         1   56[COMRAM] unsigned char 
 53524 ;;  __ftadd         1   55[COMRAM] unsigned char 
 53525 ;;  __ftadd         1   54[COMRAM] unsigned char 
 53526 ;; Return value:  Size  Location     Type
 53527 ;;                  3   45[COMRAM] float 
 53528 ;; Registers used:
 53529 ;;		wreg, status,2, status,0, cstack
 53530 ;; Tracked objects:
 53531 ;;		On entry : 0/0
 53532 ;;		On exit  : 0/0
 53533 ;;		Unchanged: 0/0
 53534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53535 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53536 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53537 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53538 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53539 ;;Total ram usage:       12 bytes
 53540 ;; Hardware stack levels used:    1
 53541 ;; Hardware stack levels required when called:    1
 53542 ;; This function calls:
 53543 ;;		i2___ftpack
 53544 ;; This function is called by:
 53545 ;;		i2_DbToCode
 53546 ;;		i2_sprintf
 53547 ;;		i2___ftsub
 53548 ;; This function uses a non-reentrant model
 53549 ;;
 53550                           
 53551                           	psect	text168
 53552  016C1C                     __ptext168:
 53553                           	opt stack 0
 53554  016C1C                     i2___ftadd:
 53555                           	opt stack 16
 53556                           
 53557                           ;incstack = 0
 53558  016C1C  C030  F034         	movff	i2___ftadd@f1+2,??i2___ftadd
 53559  016C20  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 53560  016C22  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 53561  016C24  342F               	rlcf	i2___ftadd@f1+1,w,c
 53562  016C26  3634               	rlcf	??i2___ftadd& (0+255),f,c
 53563  016C28  E301               	bnc	u980_41
 53564  016C2A  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 53565  016C2C                     u980_41:
 53566  016C2C  5034               	movf	??i2___ftadd,w,c
 53567  016C2E  6E39               	movwf	i2___ftadd@exp1,c
 53568  016C30  C033  F034         	movff	i2___ftadd@f2+2,??i2___ftadd
 53569  016C34  6A35               	clrf	(??i2___ftadd+1)& (0+255),c
 53570  016C36  6A36               	clrf	(??i2___ftadd+2)& (0+255),c
 53571  016C38  3432               	rlcf	i2___ftadd@f2+1,w,c
 53572  016C3A  3634               	rlcf	??i2___ftadd& (0+255),f,c
 53573  016C3C  E301               	bnc	u981_41
 53574  016C3E  8035               	bsf	(??i2___ftadd+1)& (0+255),0,c
 53575  016C40                     u981_41:
 53576  016C40  5034               	movf	??i2___ftadd,w,c
 53577  016C42  6E38               	movwf	i2___ftadd@exp2,c
 53578  016C44  5039               	movf	i2___ftadd@exp1,w,c
 53579  016C46  B4D8               	btfsc	status,2,c
 53580  016C48  D00C               	goto	i2l2545
 53581  016C4A  5038               	movf	i2___ftadd@exp2,w,c
 53582  016C4C  5C39               	subwf	i2___ftadd@exp1,w,c
 53583  016C4E  B0D8               	btfsc	status,0,c
 53584  016C50  D00F               	goto	i2l9800
 53585  016C52  5039               	movf	i2___ftadd@exp1,w,c
 53586  016C54  0800               	sublw	0
 53587  016C56  2438               	addwf	i2___ftadd@exp2,w,c
 53588  016C58  6E34               	movwf	??i2___ftadd& (0+255),c
 53589  016C5A  0E19               	movlw	25
 53590  016C5C  5C34               	subwf	??i2___ftadd,w,c
 53591  016C5E  A0D8               	btfss	status,0,c
 53592  016C60  D007               	goto	i2l9800
 53593  016C62                     i2l2545:
 53594  016C62  C031  F02E         	movff	i2___ftadd@f2,?i2___ftadd
 53595  016C66  C032  F02F         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 53596  016C6A  C033  F030         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 53597  016C6E  0012               	return	
 53598  016C70                     i2l9800:
 53599  016C70  5038               	movf	i2___ftadd@exp2,w,c
 53600  016C72  B4D8               	btfsc	status,2,c
 53601  016C74  D00C               	goto	i2l2549
 53602  016C76  5039               	movf	i2___ftadd@exp1,w,c
 53603  016C78  5C38               	subwf	i2___ftadd@exp2,w,c
 53604  016C7A  B0D8               	btfsc	status,0,c
 53605  016C7C  D00F               	goto	i2l9806
 53606  016C7E  5038               	movf	i2___ftadd@exp2,w,c
 53607  016C80  0800               	sublw	0
 53608  016C82  2439               	addwf	i2___ftadd@exp1,w,c
 53609  016C84  6E34               	movwf	??i2___ftadd& (0+255),c
 53610  016C86  0E19               	movlw	25
 53611  016C88  5C34               	subwf	??i2___ftadd,w,c
 53612  016C8A  A0D8               	btfss	status,0,c
 53613  016C8C  D007               	goto	i2l9806
 53614  016C8E                     i2l2549:
 53615  016C8E  C02E  F02E         	movff	i2___ftadd@f1,?i2___ftadd
 53616  016C92  C02F  F02F         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 53617  016C96  C030  F030         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 53618  016C9A  0012               	return	
 53619  016C9C                     i2l9806:
 53620  016C9C  0E06               	movlw	6
 53621  016C9E  6E37               	movwf	i2___ftadd@sign,c
 53622  016CA0  BE30               	btfsc	i2___ftadd@f1+2,7,c
 53623  016CA2  8E37               	bsf	i2___ftadd@sign,7,c
 53624  016CA4  BE33               	btfsc	i2___ftadd@f2+2,7,c
 53625  016CA6  8C37               	bsf	i2___ftadd@sign,6,c
 53626  016CA8  8E2F               	bsf	i2___ftadd@f1+1,7,c
 53627  016CAA  0EFF               	movlw	255
 53628  016CAC  162E               	andwf	i2___ftadd@f1,f,c
 53629  016CAE  0EFF               	movlw	255
 53630  016CB0  162F               	andwf	i2___ftadd@f1+1,f,c
 53631  016CB2  0E00               	movlw	0
 53632  016CB4  1630               	andwf	i2___ftadd@f1+2,f,c
 53633  016CB6  8E32               	bsf	i2___ftadd@f2+1,7,c
 53634  016CB8  0EFF               	movlw	255
 53635  016CBA  1631               	andwf	i2___ftadd@f2,f,c
 53636  016CBC  0EFF               	movlw	255
 53637  016CBE  1632               	andwf	i2___ftadd@f2+1,f,c
 53638  016CC0  0E00               	movlw	0
 53639  016CC2  1633               	andwf	i2___ftadd@f2+2,f,c
 53640  016CC4  5038               	movf	i2___ftadd@exp2,w,c
 53641  016CC6  5C39               	subwf	i2___ftadd@exp1,w,c
 53642  016CC8  B0D8               	btfsc	status,0,c
 53643  016CCA  D01A               	goto	i2l9832
 53644  016CCC                     i2l9822:
 53645  016CCC  90D8               	bcf	status,0,c
 53646  016CCE  3631               	rlcf	i2___ftadd@f2,f,c
 53647  016CD0  3632               	rlcf	i2___ftadd@f2+1,f,c
 53648  016CD2  3633               	rlcf	i2___ftadd@f2+2,f,c
 53649  016CD4  0638               	decf	i2___ftadd@exp2,f,c
 53650  016CD6  5038               	movf	i2___ftadd@exp2,w,c
 53651  016CD8  1839               	xorwf	i2___ftadd@exp1,w,c
 53652  016CDA  B4D8               	btfsc	status,2,c
 53653  016CDC  D00D               	goto	i2l9830
 53654  016CDE  0637               	decf	i2___ftadd@sign,f,c
 53655  016CE0  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 53656  016CE4  0E07               	movlw	7
 53657  016CE6  1634               	andwf	??i2___ftadd,f,c
 53658  016CE8  B4D8               	btfsc	status,2,c
 53659  016CEA  D006               	goto	i2l9830
 53660  016CEC  D7EF               	goto	i2l9822
 53661  016CEE                     i2l9828:
 53662  016CEE  90D8               	bcf	status,0,c
 53663  016CF0  3230               	rrcf	i2___ftadd@f1+2,f,c
 53664  016CF2  322F               	rrcf	i2___ftadd@f1+1,f,c
 53665  016CF4  322E               	rrcf	i2___ftadd@f1,f,c
 53666  016CF6  2A39               	incf	i2___ftadd@exp1,f,c
 53667  016CF8                     i2l9830:
 53668  016CF8  5038               	movf	i2___ftadd@exp2,w,c
 53669  016CFA  6239               	cpfseq	i2___ftadd@exp1,c
 53670  016CFC  D7F8               	goto	i2l9828
 53671  016CFE  D01D               	goto	i2l2560
 53672  016D00                     i2l9832:
 53673  016D00  5039               	movf	i2___ftadd@exp1,w,c
 53674  016D02  5C38               	subwf	i2___ftadd@exp2,w,c
 53675  016D04  B0D8               	btfsc	status,0,c
 53676  016D06  D019               	goto	i2l2560
 53677  016D08                     i2l9834:
 53678  016D08  90D8               	bcf	status,0,c
 53679  016D0A  362E               	rlcf	i2___ftadd@f1,f,c
 53680  016D0C  362F               	rlcf	i2___ftadd@f1+1,f,c
 53681  016D0E  3630               	rlcf	i2___ftadd@f1+2,f,c
 53682  016D10  0639               	decf	i2___ftadd@exp1,f,c
 53683  016D12  5038               	movf	i2___ftadd@exp2,w,c
 53684  016D14  1839               	xorwf	i2___ftadd@exp1,w,c
 53685  016D16  B4D8               	btfsc	status,2,c
 53686  016D18  D00D               	goto	i2l9842
 53687  016D1A  0637               	decf	i2___ftadd@sign,f,c
 53688  016D1C  C037  F034         	movff	i2___ftadd@sign,??i2___ftadd
 53689  016D20  0E07               	movlw	7
 53690  016D22  1634               	andwf	??i2___ftadd,f,c
 53691  016D24  B4D8               	btfsc	status,2,c
 53692  016D26  D006               	goto	i2l9842
 53693  016D28  D7EF               	goto	i2l9834
 53694  016D2A                     i2l9840:
 53695  016D2A  90D8               	bcf	status,0,c
 53696  016D2C  3233               	rrcf	i2___ftadd@f2+2,f,c
 53697  016D2E  3232               	rrcf	i2___ftadd@f2+1,f,c
 53698  016D30  3231               	rrcf	i2___ftadd@f2,f,c
 53699  016D32  2A38               	incf	i2___ftadd@exp2,f,c
 53700  016D34                     i2l9842:
 53701  016D34  5038               	movf	i2___ftadd@exp2,w,c
 53702  016D36  6239               	cpfseq	i2___ftadd@exp1,c
 53703  016D38  D7F8               	goto	i2l9840
 53704  016D3A                     i2l2560:
 53705  016D3A  AE37               	btfss	i2___ftadd@sign,7,c
 53706  016D3C  D00C               	goto	i2l2569
 53707  016D3E  0EFF               	movlw	255
 53708  016D40  1A2E               	xorwf	i2___ftadd@f1,f,c
 53709  016D42  0EFF               	movlw	255
 53710  016D44  1A2F               	xorwf	i2___ftadd@f1+1,f,c
 53711  016D46  0EFF               	movlw	255
 53712  016D48  1A30               	xorwf	i2___ftadd@f1+2,f,c
 53713  016D4A  0E01               	movlw	1
 53714  016D4C  262E               	addwf	i2___ftadd@f1,f,c
 53715  016D4E  0E00               	movlw	0
 53716  016D50  222F               	addwfc	i2___ftadd@f1+1,f,c
 53717  016D52  0E00               	movlw	0
 53718  016D54  2230               	addwfc	i2___ftadd@f1+2,f,c
 53719  016D56                     i2l2569:
 53720  016D56  AC37               	btfss	i2___ftadd@sign,6,c
 53721  016D58  D00C               	goto	i2l9848
 53722  016D5A  0EFF               	movlw	255
 53723  016D5C  1A31               	xorwf	i2___ftadd@f2,f,c
 53724  016D5E  0EFF               	movlw	255
 53725  016D60  1A32               	xorwf	i2___ftadd@f2+1,f,c
 53726  016D62  0EFF               	movlw	255
 53727  016D64  1A33               	xorwf	i2___ftadd@f2+2,f,c
 53728  016D66  0E01               	movlw	1
 53729  016D68  2631               	addwf	i2___ftadd@f2,f,c
 53730  016D6A  0E00               	movlw	0
 53731  016D6C  2232               	addwfc	i2___ftadd@f2+1,f,c
 53732  016D6E  0E00               	movlw	0
 53733  016D70  2233               	addwfc	i2___ftadd@f2+2,f,c
 53734  016D72                     i2l9848:
 53735  016D72  0E00               	movlw	0
 53736  016D74  6E37               	movwf	i2___ftadd@sign,c
 53737  016D76  502E               	movf	i2___ftadd@f1,w,c
 53738  016D78  2631               	addwf	i2___ftadd@f2,f,c
 53739  016D7A  502F               	movf	i2___ftadd@f1+1,w,c
 53740  016D7C  2232               	addwfc	i2___ftadd@f2+1,f,c
 53741  016D7E  5030               	movf	i2___ftadd@f1+2,w,c
 53742  016D80  2233               	addwfc	i2___ftadd@f2+2,f,c
 53743  016D82  AE33               	btfss	i2___ftadd@f2+2,7,c
 53744  016D84  D00E               	goto	i2l9858
 53745  016D86  0EFF               	movlw	255
 53746  016D88  1A31               	xorwf	i2___ftadd@f2,f,c
 53747  016D8A  0EFF               	movlw	255
 53748  016D8C  1A32               	xorwf	i2___ftadd@f2+1,f,c
 53749  016D8E  0EFF               	movlw	255
 53750  016D90  1A33               	xorwf	i2___ftadd@f2+2,f,c
 53751  016D92  0E01               	movlw	1
 53752  016D94  2631               	addwf	i2___ftadd@f2,f,c
 53753  016D96  0E00               	movlw	0
 53754  016D98  2232               	addwfc	i2___ftadd@f2+1,f,c
 53755  016D9A  0E00               	movlw	0
 53756  016D9C  2233               	addwfc	i2___ftadd@f2+2,f,c
 53757  016D9E  0E01               	movlw	1
 53758  016DA0  6E37               	movwf	i2___ftadd@sign,c
 53759  016DA2                     i2l9858:
 53760  016DA2  C031  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 53761  016DA6  C032  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 53762  016DAA  C033  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 53763  016DAE  C039  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 53764  016DB2  C037  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 53765  016DB6  EC84  F0D0         	call	i2___ftpack	;wreg free
 53766  016DBA  C001  F02E         	movff	?i2___ftpack,?i2___ftadd
 53767  016DBE  C002  F02F         	movff	?i2___ftpack+1,?i2___ftadd+1
 53768  016DC2  C003  F030         	movff	?i2___ftpack+2,?i2___ftadd+2
 53769  016DC6  0012               	return	
 53770  016DC8                     __end_ofi2___ftadd:
 53771                           	opt stack 0
 53772                           pclatu	equ	0xFFB
 53773                           pclath	equ	0xFFA
 53774                           tblptru	equ	0xFF8
 53775                           tblptrh	equ	0xFF7
 53776                           tblptrl	equ	0xFF6
 53777                           tablat	equ	0xFF5
 53778                           prodh	equ	0xFF4
 53779                           prodl	equ	0xFF3
 53780                           intcon	equ	0xFF2
 53781                           intcon2	equ	0xFF1
 53782                           intcon3	equ	0xFF0
 53783                           indf0	equ	0xFEF
 53784                           postinc0	equ	0xFEE
 53785                           fsr0h	equ	0xFEA
 53786                           fsr0l	equ	0xFE9
 53787                           wreg	equ	0xFE8
 53788                           indf1	equ	0xFE7
 53789                           postinc1	equ	0xFE6
 53790                           postdec1	equ	0xFE5
 53791                           fsr1h	equ	0xFE2
 53792                           fsr1l	equ	0xFE1
 53793                           indf2	equ	0xFDF
 53794                           postinc2	equ	0xFDE
 53795                           postdec2	equ	0xFDD
 53796                           fsr2h	equ	0xFDA
 53797                           fsr2l	equ	0xFD9
 53798                           status	equ	0xFD8
 53799                           
 53800 ;; *************** function i2___ftpack *****************
 53801 ;; Defined at:
 53802 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 53803 ;; Parameters:    Size  Location     Type
 53804 ;;  arg             3    0[COMRAM] unsigned um
 53805 ;;  exp             1    3[COMRAM] unsigned char 
 53806 ;;  sign            1    4[COMRAM] unsigned char 
 53807 ;; Auto vars:     Size  Location     Type
 53808 ;;		None
 53809 ;; Return value:  Size  Location     Type
 53810 ;;                  3    0[COMRAM] float 
 53811 ;; Registers used:
 53812 ;;		wreg, status,2, status,0
 53813 ;; Tracked objects:
 53814 ;;		On entry : 0/0
 53815 ;;		On exit  : 0/0
 53816 ;;		Unchanged: 0/0
 53817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53818 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53820 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53821 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53822 ;;Total ram usage:        8 bytes
 53823 ;; Hardware stack levels used:    1
 53824 ;; This function calls:
 53825 ;;		Nothing
 53826 ;; This function is called by:
 53827 ;;		i2___awtoft
 53828 ;;		i2___ftadd
 53829 ;;		i2___ftdiv
 53830 ;;		i2___ftmul
 53831 ;;		i2___lltoft
 53832 ;;		i2___lwtoft
 53833 ;; This function uses a non-reentrant model
 53834 ;;
 53835                           
 53836                           	psect	text169
 53837  01A108                     __ptext169:
 53838                           	opt stack 0
 53839  01A108                     i2___ftpack:
 53840                           	opt stack 16
 53841                           
 53842                           ;incstack = 0
 53843  01A108  5004               	movf	i2___ftpack@exp,w,c
 53844  01A10A  B4D8               	btfsc	status,2,c
 53845  01A10C  D005               	goto	i2l9650
 53846  01A10E  5001               	movf	i2___ftpack@arg,w,c
 53847  01A110  1002               	iorwf	i2___ftpack@arg+1,w,c
 53848  01A112  1003               	iorwf	i2___ftpack@arg+2,w,c
 53849  01A114  A4D8               	btfss	status,2,c
 53850  01A116  D00C               	goto	i2l9656
 53851  01A118                     i2l9650:
 53852  01A118  0E00               	movlw	0
 53853  01A11A  6E01               	movwf	?i2___ftpack,c
 53854  01A11C  0E00               	movlw	0
 53855  01A11E  6E02               	movwf	?i2___ftpack+1,c
 53856  01A120  0E00               	movlw	0
 53857  01A122  6E03               	movwf	?i2___ftpack+2,c
 53858  01A124  0012               	return	
 53859  01A126                     i2l9654:
 53860  01A126  2A04               	incf	i2___ftpack@exp,f,c
 53861  01A128  90D8               	bcf	status,0,c
 53862  01A12A  3203               	rrcf	i2___ftpack@arg+2,f,c
 53863  01A12C  3202               	rrcf	i2___ftpack@arg+1,f,c
 53864  01A12E  3201               	rrcf	i2___ftpack@arg,f,c
 53865  01A130                     i2l9656:
 53866  01A130  0E00               	movlw	0
 53867  01A132  1401               	andwf	i2___ftpack@arg,w,c
 53868  01A134  6E06               	movwf	??i2___ftpack& (0+255),c
 53869  01A136  0E00               	movlw	0
 53870  01A138  1402               	andwf	i2___ftpack@arg+1,w,c
 53871  01A13A  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 53872  01A13C  0EFE               	movlw	254
 53873  01A13E  1403               	andwf	i2___ftpack@arg+2,w,c
 53874  01A140  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 53875  01A142  5006               	movf	??i2___ftpack,w,c
 53876  01A144  1007               	iorwf	??i2___ftpack+1,w,c
 53877  01A146  1008               	iorwf	??i2___ftpack+2,w,c
 53878  01A148  B4D8               	btfsc	status,2,c
 53879  01A14A  D00C               	goto	i2l9662
 53880  01A14C  D7EC               	goto	i2l9654
 53881  01A14E                     i2l9658:
 53882  01A14E  2A04               	incf	i2___ftpack@exp,f,c
 53883  01A150  0E01               	movlw	1
 53884  01A152  2601               	addwf	i2___ftpack@arg,f,c
 53885  01A154  0E00               	movlw	0
 53886  01A156  2202               	addwfc	i2___ftpack@arg+1,f,c
 53887  01A158  0E00               	movlw	0
 53888  01A15A  2203               	addwfc	i2___ftpack@arg+2,f,c
 53889  01A15C  90D8               	bcf	status,0,c
 53890  01A15E  3203               	rrcf	i2___ftpack@arg+2,f,c
 53891  01A160  3202               	rrcf	i2___ftpack@arg+1,f,c
 53892  01A162  3201               	rrcf	i2___ftpack@arg,f,c
 53893  01A164                     i2l9662:
 53894  01A164  0E00               	movlw	0
 53895  01A166  1401               	andwf	i2___ftpack@arg,w,c
 53896  01A168  6E06               	movwf	??i2___ftpack& (0+255),c
 53897  01A16A  0E00               	movlw	0
 53898  01A16C  1402               	andwf	i2___ftpack@arg+1,w,c
 53899  01A16E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 53900  01A170  0EFF               	movlw	255
 53901  01A172  1403               	andwf	i2___ftpack@arg+2,w,c
 53902  01A174  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 53903  01A176  5006               	movf	??i2___ftpack,w,c
 53904  01A178  1007               	iorwf	??i2___ftpack+1,w,c
 53905  01A17A  1008               	iorwf	??i2___ftpack+2,w,c
 53906  01A17C  B4D8               	btfsc	status,2,c
 53907  01A17E  D006               	goto	i2l9666
 53908  01A180  D7E6               	goto	i2l9658
 53909  01A182                     i2l9664:
 53910  01A182  0604               	decf	i2___ftpack@exp,f,c
 53911  01A184  90D8               	bcf	status,0,c
 53912  01A186  3601               	rlcf	i2___ftpack@arg,f,c
 53913  01A188  3602               	rlcf	i2___ftpack@arg+1,f,c
 53914  01A18A  3603               	rlcf	i2___ftpack@arg+2,f,c
 53915  01A18C                     i2l9666:
 53916  01A18C  AE02               	btfss	i2___ftpack@arg+1,7,c
 53917  01A18E  D7F9               	goto	i2l9664
 53918  01A190  A004               	btfss	i2___ftpack@exp,0,c
 53919  01A192  9E02               	bcf	i2___ftpack@arg+1,7,c
 53920  01A194  90D8               	bcf	status,0,c
 53921  01A196  3204               	rrcf	i2___ftpack@exp,f,c
 53922  01A198  5004               	movf	i2___ftpack@exp,w,c
 53923  01A19A  1203               	iorwf	i2___ftpack@arg+2,f,c
 53924  01A19C  5005               	movf	i2___ftpack@sign,w,c
 53925  01A19E  A4D8               	btfss	status,2,c
 53926  01A1A0  8E03               	bsf	i2___ftpack@arg+2,7,c
 53927  01A1A2  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 53928  01A1A6  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 53929  01A1AA  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 53930  01A1AE  0012               	return	
 53931  01A1B0                     __end_ofi2___ftpack:
 53932                           	opt stack 0
 53933                           pclatu	equ	0xFFB
 53934                           pclath	equ	0xFFA
 53935                           tblptru	equ	0xFF8
 53936                           tblptrh	equ	0xFF7
 53937                           tblptrl	equ	0xFF6
 53938                           tablat	equ	0xFF5
 53939                           prodh	equ	0xFF4
 53940                           prodl	equ	0xFF3
 53941                           intcon	equ	0xFF2
 53942                           intcon2	equ	0xFF1
 53943                           intcon3	equ	0xFF0
 53944                           indf0	equ	0xFEF
 53945                           postinc0	equ	0xFEE
 53946                           fsr0h	equ	0xFEA
 53947                           fsr0l	equ	0xFE9
 53948                           wreg	equ	0xFE8
 53949                           indf1	equ	0xFE7
 53950                           postinc1	equ	0xFE6
 53951                           postdec1	equ	0xFE5
 53952                           fsr1h	equ	0xFE2
 53953                           fsr1l	equ	0xFE1
 53954                           indf2	equ	0xFDF
 53955                           postinc2	equ	0xFDE
 53956                           postdec2	equ	0xFDD
 53957                           fsr2h	equ	0xFDA
 53958                           fsr2l	equ	0xFD9
 53959                           status	equ	0xFD8
 53960                           
 53961 ;; *************** function i2_RefreshLine1 *****************
 53962 ;; Defined at:
 53963 ;;		line 7 in file "LCD.c"
 53964 ;; Parameters:    Size  Location     Type
 53965 ;;		None
 53966 ;; Auto vars:     Size  Location     Type
 53967 ;;		None
 53968 ;; Return value:  Size  Location     Type
 53969 ;;		None               void
 53970 ;; Registers used:
 53971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 53972 ;; Tracked objects:
 53973 ;;		On entry : 0/0
 53974 ;;		On exit  : 0/0
 53975 ;;		Unchanged: 0/0
 53976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 53977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 53981 ;;Total ram usage:        0 bytes
 53982 ;; Hardware stack levels used:    1
 53983 ;; Hardware stack levels required when called:    4
 53984 ;; This function calls:
 53985 ;;		i2_RefreshLine1Ex
 53986 ;; This function is called by:
 53987 ;;		i2_SaveToFlash
 53988 ;;		i2_UpdateMasterVolume
 53989 ;; This function uses a non-reentrant model
 53990 ;;
 53991                           
 53992                           	psect	text170
 53993  01BAA4                     __ptext170:
 53994                           	opt stack 0
 53995  01BAA4                     i2_RefreshLine1:
 53996                           	opt stack 16
 53997                           
 53998                           ;LCD.c: 9: RefreshLine1Ex(&dispbuf1);
 53999                           
 54000                           ;incstack = 0
 54001  01BAA4  0102               	movlb	2	; () banked
 54002  01BAA6  0E02               	movlw	high _dispbuf1
 54003  01BAA8  6E05               	movwf	i2RefreshLine1Ex@line+1,c
 54004  01BAAA  0102               	movlb	2	; () banked
 54005  01BAAC  0E8B               	movlw	low _dispbuf1
 54006  01BAAE  6E04               	movwf	i2RefreshLine1Ex@line,c
 54007  01BAB0  EC36  F0DD         	call	i2_RefreshLine1Ex	;wreg free
 54008  01BAB4  0012               	return	
 54009  01BAB6                     __end_ofi2_RefreshLine1:
 54010                           	opt stack 0
 54011                           pclatu	equ	0xFFB
 54012                           pclath	equ	0xFFA
 54013                           tblptru	equ	0xFF8
 54014                           tblptrh	equ	0xFF7
 54015                           tblptrl	equ	0xFF6
 54016                           tablat	equ	0xFF5
 54017                           prodh	equ	0xFF4
 54018                           prodl	equ	0xFF3
 54019                           intcon	equ	0xFF2
 54020                           intcon2	equ	0xFF1
 54021                           intcon3	equ	0xFF0
 54022                           indf0	equ	0xFEF
 54023                           postinc0	equ	0xFEE
 54024                           fsr0h	equ	0xFEA
 54025                           fsr0l	equ	0xFE9
 54026                           wreg	equ	0xFE8
 54027                           indf1	equ	0xFE7
 54028                           postinc1	equ	0xFE6
 54029                           postdec1	equ	0xFE5
 54030                           fsr1h	equ	0xFE2
 54031                           fsr1l	equ	0xFE1
 54032                           indf2	equ	0xFDF
 54033                           postinc2	equ	0xFDE
 54034                           postdec2	equ	0xFDD
 54035                           fsr2h	equ	0xFDA
 54036                           fsr2l	equ	0xFD9
 54037                           status	equ	0xFD8
 54038                           
 54039 ;; *************** function i2_RefreshLine1Ex *****************
 54040 ;; Defined at:
 54041 ;;		line 18 in file "LCD.c"
 54042 ;; Parameters:    Size  Location     Type
 54043 ;;  line            2    3[COMRAM] PTR const unsigned char 
 54044 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
 54045 ;;		 -> STR_2(17), dispbuf1(17), 
 54046 ;; Auto vars:     Size  Location     Type
 54047 ;;		None
 54048 ;; Return value:  Size  Location     Type
 54049 ;;		None               void
 54050 ;; Registers used:
 54051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54052 ;; Tracked objects:
 54053 ;;		On entry : 0/0
 54054 ;;		On exit  : 0/0
 54055 ;;		Unchanged: 0/0
 54056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54061 ;;Total ram usage:        2 bytes
 54062 ;; Hardware stack levels used:    1
 54063 ;; Hardware stack levels required when called:    3
 54064 ;; This function calls:
 54065 ;;		i2_PutsSLCD
 54066 ;;		i2_SLCDSetDDRamAddr
 54067 ;; This function is called by:
 54068 ;;		i2_RefreshLine1
 54069 ;;		i2_SaveToFlash
 54070 ;; This function uses a non-reentrant model
 54071 ;;
 54072                           
 54073                           	psect	text171
 54074  01BA6C                     __ptext171:
 54075                           	opt stack 0
 54076  01BA6C                     i2_RefreshLine1Ex:
 54077                           	opt stack 17
 54078                           
 54079                           ;LCD.c: 20: SLCDSetDDRamAddr(0x00);
 54080                           
 54081                           ;incstack = 0
 54082  01BA6C  0E00               	movlw	0
 54083  01BA6E  EC03  F0DD         	call	i2_SLCDSetDDRamAddr
 54084                           
 54085                           ;LCD.c: 21: PutsSLCD(line);
 54086  01BA72  C005  F003         	movff	i2RefreshLine1Ex@line+1,i2PutsSLCD@buffer+1
 54087  01BA76  C004  F002         	movff	i2RefreshLine1Ex@line,i2PutsSLCD@buffer
 54088  01BA7A  EC05  F0D7         	call	i2_PutsSLCD	;wreg free
 54089  01BA7E  0012               	return	
 54090  01BA80                     __end_ofi2_RefreshLine1Ex:
 54091                           	opt stack 0
 54092                           pclatu	equ	0xFFB
 54093                           pclath	equ	0xFFA
 54094                           tblptru	equ	0xFF8
 54095                           tblptrh	equ	0xFF7
 54096                           tblptrl	equ	0xFF6
 54097                           tablat	equ	0xFF5
 54098                           prodh	equ	0xFF4
 54099                           prodl	equ	0xFF3
 54100                           intcon	equ	0xFF2
 54101                           intcon2	equ	0xFF1
 54102                           intcon3	equ	0xFF0
 54103                           indf0	equ	0xFEF
 54104                           postinc0	equ	0xFEE
 54105                           fsr0h	equ	0xFEA
 54106                           fsr0l	equ	0xFE9
 54107                           wreg	equ	0xFE8
 54108                           indf1	equ	0xFE7
 54109                           postinc1	equ	0xFE6
 54110                           postdec1	equ	0xFE5
 54111                           fsr1h	equ	0xFE2
 54112                           fsr1l	equ	0xFE1
 54113                           indf2	equ	0xFDF
 54114                           postinc2	equ	0xFDE
 54115                           postdec2	equ	0xFDD
 54116                           fsr2h	equ	0xFDA
 54117                           fsr2l	equ	0xFD9
 54118                           status	equ	0xFD8
 54119                           
 54120 ;; *************** function i2_SLCDSetDDRamAddr *****************
 54121 ;; Defined at:
 54122 ;;		line 13 in file "SLCD/setddram.c"
 54123 ;; Parameters:    Size  Location     Type
 54124 ;;  DDaddr          1    wreg     unsigned char 
 54125 ;; Auto vars:     Size  Location     Type
 54126 ;;  DDaddr          1    1[COMRAM] unsigned char 
 54127 ;; Return value:  Size  Location     Type
 54128 ;;		None               void
 54129 ;; Registers used:
 54130 ;;		wreg, status,2, status,0, cstack
 54131 ;; Tracked objects:
 54132 ;;		On entry : 0/0
 54133 ;;		On exit  : 0/0
 54134 ;;		Unchanged: 0/0
 54135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54140 ;;Total ram usage:        1 bytes
 54141 ;; Hardware stack levels used:    1
 54142 ;; Hardware stack levels required when called:    2
 54143 ;; This function calls:
 54144 ;;		i2_BusySLCD
 54145 ;;		i2_WriteCmdSLCD
 54146 ;; This function is called by:
 54147 ;;		i2_RefreshLine1Ex
 54148 ;;		i2_RefreshLine2Ex
 54149 ;; This function uses a non-reentrant model
 54150 ;;
 54151                           
 54152                           	psect	text172
 54153  01BA06                     __ptext172:
 54154                           	opt stack 0
 54155  01BA06                     i2_SLCDSetDDRamAddr:
 54156                           	opt stack 17
 54157                           
 54158                           ;incstack = 0
 54159                           ;i2SLCDSetDDRamAddr@DDaddr stored from wreg
 54160  01BA06  6E02               	movwf	i2SLCDSetDDRamAddr@DDaddr,c
 54161  01BA08                     i2l10306:
 54162  01BA08  EC48  F0DC         	call	i2_BusySLCD	;wreg free
 54163  01BA0C  0900               	iorlw	0
 54164  01BA0E  A4D8               	btfss	status,2,c
 54165  01BA10  D7FB               	goto	i2l10306
 54166                           
 54167                           ;setddram.c: 16: WriteCmdSLCD(DDaddr | 0b10000000);
 54168  01BA12  5002               	movf	i2SLCDSetDDRamAddr@DDaddr,w,c
 54169  01BA14  0980               	iorlw	128
 54170  01BA16  EC37  F0DC         	call	i2_WriteCmdSLCD
 54171  01BA1A  0012               	return	
 54172  01BA1C                     __end_ofi2_SLCDSetDDRamAddr:
 54173                           	opt stack 0
 54174                           pclatu	equ	0xFFB
 54175                           pclath	equ	0xFFA
 54176                           tblptru	equ	0xFF8
 54177                           tblptrh	equ	0xFF7
 54178                           tblptrl	equ	0xFF6
 54179                           tablat	equ	0xFF5
 54180                           prodh	equ	0xFF4
 54181                           prodl	equ	0xFF3
 54182                           intcon	equ	0xFF2
 54183                           intcon2	equ	0xFF1
 54184                           intcon3	equ	0xFF0
 54185                           indf0	equ	0xFEF
 54186                           postinc0	equ	0xFEE
 54187                           fsr0h	equ	0xFEA
 54188                           fsr0l	equ	0xFE9
 54189                           wreg	equ	0xFE8
 54190                           indf1	equ	0xFE7
 54191                           postinc1	equ	0xFE6
 54192                           postdec1	equ	0xFE5
 54193                           fsr1h	equ	0xFE2
 54194                           fsr1l	equ	0xFE1
 54195                           indf2	equ	0xFDF
 54196                           postinc2	equ	0xFDE
 54197                           postdec2	equ	0xFDD
 54198                           fsr2h	equ	0xFDA
 54199                           fsr2l	equ	0xFD9
 54200                           status	equ	0xFD8
 54201                           
 54202 ;; *************** function i2_WriteCmdSLCD *****************
 54203 ;; Defined at:
 54204 ;;		line 13 in file "SLCD/wcmdslcd.c"
 54205 ;; Parameters:    Size  Location     Type
 54206 ;;  cmd             1    wreg     unsigned char 
 54207 ;; Auto vars:     Size  Location     Type
 54208 ;;  cmd             1    0[COMRAM] unsigned char 
 54209 ;; Return value:  Size  Location     Type
 54210 ;;		None               void
 54211 ;; Registers used:
 54212 ;;		wreg, status,2, cstack
 54213 ;; Tracked objects:
 54214 ;;		On entry : 0/0
 54215 ;;		On exit  : 0/0
 54216 ;;		Unchanged: 0/0
 54217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54222 ;;Total ram usage:        1 bytes
 54223 ;; Hardware stack levels used:    1
 54224 ;; Hardware stack levels required when called:    1
 54225 ;; This function calls:
 54226 ;;		i2_DelayFor18TCY
 54227 ;; This function is called by:
 54228 ;;		i2_SLCDSetDDRamAddr
 54229 ;; This function uses a non-reentrant model
 54230 ;;
 54231                           
 54232                           	psect	text173
 54233  01B86E                     __ptext173:
 54234                           	opt stack 0
 54235  01B86E                     i2_WriteCmdSLCD:
 54236                           	opt stack 17
 54237                           
 54238                           ;incstack = 0
 54239                           ;i2WriteCmdSLCD@cmd stored from wreg
 54240  01B86E  6E01               	movwf	i2WriteCmdSLCD@cmd,c
 54241                           
 54242                           ;wcmdslcd.c: 16: TRISC = 0;
 54243  01B870  0E00               	movlw	0
 54244  01B872  6E94               	movwf	3988,c	;volatile
 54245                           
 54246                           ;wcmdslcd.c: 17: LATC = cmd;
 54247  01B874  C001  FF8B         	movff	i2WriteCmdSLCD@cmd,3979	;volatile
 54248                           
 54249                           ;wcmdslcd.c: 19: LATAbits.LATA4 = 0;
 54250  01B878  9889               	bcf	3977,4,c	;volatile
 54251                           
 54252                           ;wcmdslcd.c: 20: LATAbits.LATA3 = 0;
 54253  01B87A  9689               	bcf	3977,3,c	;volatile
 54254                           
 54255                           ;wcmdslcd.c: 21: DelayFor18TCY();
 54256  01B87C  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54257                           
 54258                           ;wcmdslcd.c: 22: LATAbits.LATA5 = 1;
 54259  01B880  8A89               	bsf	3977,5,c	;volatile
 54260                           
 54261                           ;wcmdslcd.c: 23: DelayFor18TCY();
 54262  01B882  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54263                           
 54264                           ;wcmdslcd.c: 24: LATAbits.LATA5 = 0;
 54265  01B886  9A89               	bcf	3977,5,c	;volatile
 54266                           
 54267                           ;wcmdslcd.c: 25: DelayFor18TCY();
 54268  01B888  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54269                           
 54270                           ;wcmdslcd.c: 26: TRISC = 0xff;
 54271  01B88C  6894               	setf	3988,c	;volatile
 54272  01B88E  0012               	return	
 54273  01B890                     __end_ofi2_WriteCmdSLCD:
 54274                           	opt stack 0
 54275                           pclatu	equ	0xFFB
 54276                           pclath	equ	0xFFA
 54277                           tblptru	equ	0xFF8
 54278                           tblptrh	equ	0xFF7
 54279                           tblptrl	equ	0xFF6
 54280                           tablat	equ	0xFF5
 54281                           prodh	equ	0xFF4
 54282                           prodl	equ	0xFF3
 54283                           intcon	equ	0xFF2
 54284                           intcon2	equ	0xFF1
 54285                           intcon3	equ	0xFF0
 54286                           indf0	equ	0xFEF
 54287                           postinc0	equ	0xFEE
 54288                           fsr0h	equ	0xFEA
 54289                           fsr0l	equ	0xFE9
 54290                           wreg	equ	0xFE8
 54291                           indf1	equ	0xFE7
 54292                           postinc1	equ	0xFE6
 54293                           postdec1	equ	0xFE5
 54294                           fsr1h	equ	0xFE2
 54295                           fsr1l	equ	0xFE1
 54296                           indf2	equ	0xFDF
 54297                           postinc2	equ	0xFDE
 54298                           postdec2	equ	0xFDD
 54299                           fsr2h	equ	0xFDA
 54300                           fsr2l	equ	0xFD9
 54301                           status	equ	0xFD8
 54302                           
 54303 ;; *************** function i2_PutsSLCD *****************
 54304 ;; Defined at:
 54305 ;;		line 16 in file "SLCD/putsslcd.c"
 54306 ;; Parameters:    Size  Location     Type
 54307 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
 54308 ;;		 -> STR_13(17), STR_12(17), STR_11(17), STR_10(17), 
 54309 ;;		 -> STR_9(17), STR_8(17), STR_6(17), STR_5(17), 
 54310 ;;		 -> STR_4(17), STR_3(17), STR_2(17), dispbuf2(17), 
 54311 ;;		 -> dispbuf1(17), 
 54312 ;; Auto vars:     Size  Location     Type
 54313 ;;		None
 54314 ;; Return value:  Size  Location     Type
 54315 ;;		None               void
 54316 ;; Registers used:
 54317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54318 ;; Tracked objects:
 54319 ;;		On entry : 0/0
 54320 ;;		On exit  : 0/0
 54321 ;;		Unchanged: 0/0
 54322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54327 ;;Total ram usage:        2 bytes
 54328 ;; Hardware stack levels used:    1
 54329 ;; Hardware stack levels required when called:    2
 54330 ;; This function calls:
 54331 ;;		i2_BusySLCD
 54332 ;;		i2_WriteDataSLCD
 54333 ;; This function is called by:
 54334 ;;		i2_RefreshLine1Ex
 54335 ;;		i2_RefreshLine2Ex
 54336 ;; This function uses a non-reentrant model
 54337 ;;
 54338                           
 54339                           	psect	text174
 54340  01AE0A                     __ptext174:
 54341                           	opt stack 0
 54342  01AE0A                     i2_PutsSLCD:
 54343                           	opt stack 17
 54344                           
 54345                           ;putsslcd.c: 18: while(*buffer)
 54346                           
 54347                           ;incstack = 0
 54348  01AE0A  D01A               	goto	i2l10318
 54349  01AE0C                     i2l10312:
 54350  01AE0C  EC48  F0DC         	call	i2_BusySLCD	;wreg free
 54351  01AE10  0900               	iorlw	0
 54352  01AE12  A4D8               	btfss	status,2,c
 54353  01AE14  D7FB               	goto	i2l10312
 54354                           
 54355                           ;putsslcd.c: 21: WriteDataSLCD(*buffer);
 54356  01AE16  C002  FFF6         	movff	i2PutsSLCD@buffer,tblptrl
 54357  01AE1A  C003  FFF7         	movff	i2PutsSLCD@buffer+1,tblptrh
 54358  01AE1E  0E00               	movlw	low (__mediumconst shr (0+16))
 54359  01AE20  6EF8               	movwf	tblptru,c
 54360  01AE22  0E0F               	movlw	(high __ramtop+-1)
 54361  01AE24  64F7               	cpfsgt	tblptrh,c
 54362  01AE26  D003               	bra	i2u1074_47
 54363  01AE28  0008               	tblrd		*
 54364  01AE2A  50F5               	movf	tablat,w,c
 54365  01AE2C  D005               	bra	i2u1074_40
 54366  01AE2E                     i2u1074_47:
 54367  01AE2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 54368  01AE32  CFF7 FFEA          	movff	tblptrh,fsr0h
 54369  01AE36  50EF               	movf	indf0,w,c
 54370  01AE38                     i2u1074_40:
 54371  01AE38  EC69  F0DC         	call	i2_WriteDataSLCD
 54372                           
 54373                           ;putsslcd.c: 22: buffer++;
 54374  01AE3C  4A02               	infsnz	i2PutsSLCD@buffer,f,c
 54375  01AE3E  2A03               	incf	i2PutsSLCD@buffer+1,f,c
 54376  01AE40                     i2l10318:
 54377  01AE40  C002  FFF6         	movff	i2PutsSLCD@buffer,tblptrl
 54378  01AE44  C003  FFF7         	movff	i2PutsSLCD@buffer+1,tblptrh
 54379  01AE48  0E00               	movlw	low (__mediumconst shr (0+16))
 54380  01AE4A  6EF8               	movwf	tblptru,c
 54381  01AE4C  0E0F               	movlw	(high __ramtop+-1)
 54382  01AE4E  64F7               	cpfsgt	tblptrh,c
 54383  01AE50  D003               	bra	i2u1075_47
 54384  01AE52  0008               	tblrd		*
 54385  01AE54  50F5               	movf	tablat,w,c
 54386  01AE56  D005               	bra	i2u1075_40
 54387  01AE58                     i2u1075_47:
 54388  01AE58  CFF6 FFE9          	movff	tblptrl,fsr0l
 54389  01AE5C  CFF7 FFEA          	movff	tblptrh,fsr0h
 54390  01AE60  50EF               	movf	indf0,w,c
 54391  01AE62                     i2u1075_40:
 54392  01AE62  0900               	iorlw	0
 54393  01AE64  B4D8               	btfsc	status,2,c
 54394                           
 54395                           ;putsslcd.c: 23: }
 54396                           ;putsslcd.c: 24: return;
 54397  01AE66  0012               	return	
 54398  01AE68  D7D1               	goto	i2l10312
 54399  01AE6A                     __end_ofi2_PutsSLCD:
 54400                           	opt stack 0
 54401                           pclatu	equ	0xFFB
 54402                           pclath	equ	0xFFA
 54403                           tblptru	equ	0xFF8
 54404                           tblptrh	equ	0xFF7
 54405                           tblptrl	equ	0xFF6
 54406                           tablat	equ	0xFF5
 54407                           prodh	equ	0xFF4
 54408                           prodl	equ	0xFF3
 54409                           intcon	equ	0xFF2
 54410                           intcon2	equ	0xFF1
 54411                           intcon3	equ	0xFF0
 54412                           indf0	equ	0xFEF
 54413                           postinc0	equ	0xFEE
 54414                           fsr0h	equ	0xFEA
 54415                           fsr0l	equ	0xFE9
 54416                           wreg	equ	0xFE8
 54417                           indf1	equ	0xFE7
 54418                           postinc1	equ	0xFE6
 54419                           postdec1	equ	0xFE5
 54420                           fsr1h	equ	0xFE2
 54421                           fsr1l	equ	0xFE1
 54422                           indf2	equ	0xFDF
 54423                           postinc2	equ	0xFDE
 54424                           postdec2	equ	0xFDD
 54425                           fsr2h	equ	0xFDA
 54426                           fsr2l	equ	0xFD9
 54427                           status	equ	0xFD8
 54428                           
 54429 ;; *************** function i2_WriteDataSLCD *****************
 54430 ;; Defined at:
 54431 ;;		line 16 in file "SLCD/writdata.c"
 54432 ;; Parameters:    Size  Location     Type
 54433 ;;  data            1    wreg     unsigned char 
 54434 ;; Auto vars:     Size  Location     Type
 54435 ;;  data            1    0[COMRAM] unsigned char 
 54436 ;; Return value:  Size  Location     Type
 54437 ;;		None               void
 54438 ;; Registers used:
 54439 ;;		wreg, status,2, cstack
 54440 ;; Tracked objects:
 54441 ;;		On entry : 0/0
 54442 ;;		On exit  : 0/0
 54443 ;;		Unchanged: 0/0
 54444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54449 ;;Total ram usage:        1 bytes
 54450 ;; Hardware stack levels used:    1
 54451 ;; Hardware stack levels required when called:    1
 54452 ;; This function calls:
 54453 ;;		i2_DelayFor18TCY
 54454 ;; This function is called by:
 54455 ;;		i2_PutsSLCD
 54456 ;; This function uses a non-reentrant model
 54457 ;;
 54458                           
 54459                           	psect	text175
 54460  01B8D2                     __ptext175:
 54461                           	opt stack 0
 54462  01B8D2                     i2_WriteDataSLCD:
 54463                           	opt stack 17
 54464                           
 54465                           ;incstack = 0
 54466                           ;i2WriteDataSLCD@data stored from wreg
 54467  01B8D2  6E01               	movwf	i2WriteDataSLCD@data,c
 54468                           
 54469                           ;writdata.c: 19: TRISC = 0;
 54470  01B8D4  0E00               	movlw	0
 54471  01B8D6  6E94               	movwf	3988,c	;volatile
 54472                           
 54473                           ;writdata.c: 20: LATC = data;
 54474  01B8D8  C001  FF8B         	movff	i2WriteDataSLCD@data,3979	;volatile
 54475                           
 54476                           ;writdata.c: 22: LATAbits.LATA3 = 1;
 54477  01B8DC  8689               	bsf	3977,3,c	;volatile
 54478                           
 54479                           ;writdata.c: 23: LATAbits.LATA4 = 0;
 54480  01B8DE  9889               	bcf	3977,4,c	;volatile
 54481                           
 54482                           ;writdata.c: 24: DelayFor18TCY();
 54483  01B8E0  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54484                           
 54485                           ;writdata.c: 25: LATAbits.LATA5 = 1;
 54486  01B8E4  8A89               	bsf	3977,5,c	;volatile
 54487                           
 54488                           ;writdata.c: 26: DelayFor18TCY();
 54489  01B8E6  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54490                           
 54491                           ;writdata.c: 27: LATAbits.LATA5 = 0;
 54492  01B8EA  9A89               	bcf	3977,5,c	;volatile
 54493                           
 54494                           ;writdata.c: 28: LATAbits.LATA3 = 0;
 54495  01B8EC  9689               	bcf	3977,3,c	;volatile
 54496                           
 54497                           ;writdata.c: 29: TRISC = 0xff;
 54498  01B8EE  6894               	setf	3988,c	;volatile
 54499  01B8F0  0012               	return	
 54500  01B8F2                     __end_ofi2_WriteDataSLCD:
 54501                           	opt stack 0
 54502                           pclatu	equ	0xFFB
 54503                           pclath	equ	0xFFA
 54504                           tblptru	equ	0xFF8
 54505                           tblptrh	equ	0xFF7
 54506                           tblptrl	equ	0xFF6
 54507                           tablat	equ	0xFF5
 54508                           prodh	equ	0xFF4
 54509                           prodl	equ	0xFF3
 54510                           intcon	equ	0xFF2
 54511                           intcon2	equ	0xFF1
 54512                           intcon3	equ	0xFF0
 54513                           indf0	equ	0xFEF
 54514                           postinc0	equ	0xFEE
 54515                           fsr0h	equ	0xFEA
 54516                           fsr0l	equ	0xFE9
 54517                           wreg	equ	0xFE8
 54518                           indf1	equ	0xFE7
 54519                           postinc1	equ	0xFE6
 54520                           postdec1	equ	0xFE5
 54521                           fsr1h	equ	0xFE2
 54522                           fsr1l	equ	0xFE1
 54523                           indf2	equ	0xFDF
 54524                           postinc2	equ	0xFDE
 54525                           postdec2	equ	0xFDD
 54526                           fsr2h	equ	0xFDA
 54527                           fsr2l	equ	0xFD9
 54528                           status	equ	0xFD8
 54529                           
 54530 ;; *************** function i2_BusySLCD *****************
 54531 ;; Defined at:
 54532 ;;		line 11 in file "SLCD/busyslcd.c"
 54533 ;; Parameters:    Size  Location     Type
 54534 ;;		None
 54535 ;; Auto vars:     Size  Location     Type
 54536 ;;		None
 54537 ;; Return value:  Size  Location     Type
 54538 ;;                  1    wreg      unsigned char 
 54539 ;; Registers used:
 54540 ;;		wreg, cstack
 54541 ;; Tracked objects:
 54542 ;;		On entry : 0/0
 54543 ;;		On exit  : 0/0
 54544 ;;		Unchanged: 0/0
 54545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54550 ;;Total ram usage:        0 bytes
 54551 ;; Hardware stack levels used:    1
 54552 ;; Hardware stack levels required when called:    1
 54553 ;; This function calls:
 54554 ;;		i2_DelayFor18TCY
 54555 ;; This function is called by:
 54556 ;;		i2_SLCDSetDDRamAddr
 54557 ;;		i2_PutsSLCD
 54558 ;; This function uses a non-reentrant model
 54559 ;;
 54560                           
 54561                           	psect	text176
 54562  01B890                     __ptext176:
 54563                           	opt stack 0
 54564  01B890                     i2_BusySLCD:
 54565                           	opt stack 17
 54566                           
 54567                           ;busyslcd.c: 13: LATAbits.LATA4 = 1;
 54568                           
 54569                           ;incstack = 0
 54570  01B890  8889               	bsf	3977,4,c	;volatile
 54571                           
 54572                           ;busyslcd.c: 14: LATAbits.LATA3 = 0;
 54573  01B892  9689               	bcf	3977,3,c	;volatile
 54574                           
 54575                           ;busyslcd.c: 15: DelayFor18TCY();
 54576  01B894  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54577                           
 54578                           ;busyslcd.c: 16: LATAbits.LATA5 = 1;
 54579  01B898  8A89               	bsf	3977,5,c	;volatile
 54580                           
 54581                           ;busyslcd.c: 17: DelayFor18TCY();
 54582  01B89A  ECE4  F0DA         	call	i2_DelayFor18TCY	;wreg free
 54583                           
 54584                           ;busyslcd.c: 19: if(PORTC&0x80)
 54585  01B89E  AE82               	btfss	3970,7,c	;volatile
 54586  01B8A0  D004               	goto	i2l59
 54587                           
 54588                           ;busyslcd.c: 20: {
 54589                           ;busyslcd.c: 21: LATAbits.LATA5 = 0;
 54590  01B8A2  9A89               	bcf	3977,5,c	;volatile
 54591                           
 54592                           ;busyslcd.c: 22: LATAbits.LATA4 = 0;
 54593  01B8A4  9889               	bcf	3977,4,c	;volatile
 54594                           
 54595                           ;busyslcd.c: 23: return 1;
 54596  01B8A6  0E01               	movlw	1
 54597  01B8A8  0012               	return	
 54598  01B8AA                     i2l59:
 54599                           
 54600                           ;busyslcd.c: 25: else
 54601                           ;busyslcd.c: 26: {
 54602                           ;busyslcd.c: 27: LATAbits.LATA5 = 0;
 54603  01B8AA  9A89               	bcf	3977,5,c	;volatile
 54604                           
 54605                           ;busyslcd.c: 28: LATAbits.LATA4 = 0;
 54606  01B8AC  9889               	bcf	3977,4,c	;volatile
 54607                           
 54608                           ;busyslcd.c: 29: return 0;
 54609  01B8AE  0E00               	movlw	0
 54610  01B8B0  0012               	return	
 54611  01B8B2                     __end_ofi2_BusySLCD:
 54612                           	opt stack 0
 54613                           pclatu	equ	0xFFB
 54614                           pclath	equ	0xFFA
 54615                           tblptru	equ	0xFF8
 54616                           tblptrh	equ	0xFF7
 54617                           tblptrl	equ	0xFF6
 54618                           tablat	equ	0xFF5
 54619                           prodh	equ	0xFF4
 54620                           prodl	equ	0xFF3
 54621                           intcon	equ	0xFF2
 54622                           intcon2	equ	0xFF1
 54623                           intcon3	equ	0xFF0
 54624                           indf0	equ	0xFEF
 54625                           postinc0	equ	0xFEE
 54626                           fsr0h	equ	0xFEA
 54627                           fsr0l	equ	0xFE9
 54628                           wreg	equ	0xFE8
 54629                           indf1	equ	0xFE7
 54630                           postinc1	equ	0xFE6
 54631                           postdec1	equ	0xFE5
 54632                           fsr1h	equ	0xFE2
 54633                           fsr1l	equ	0xFE1
 54634                           indf2	equ	0xFDF
 54635                           postinc2	equ	0xFDE
 54636                           postdec2	equ	0xFDD
 54637                           fsr2h	equ	0xFDA
 54638                           fsr2l	equ	0xFD9
 54639                           status	equ	0xFD8
 54640                           
 54641 ;; *************** function i2_DelayFor18TCY *****************
 54642 ;; Defined at:
 54643 ;;		line 16 in file "LCDDelay.c"
 54644 ;; Parameters:    Size  Location     Type
 54645 ;;		None
 54646 ;; Auto vars:     Size  Location     Type
 54647 ;;		None
 54648 ;; Return value:  Size  Location     Type
 54649 ;;		None               void
 54650 ;; Registers used:
 54651 ;;		None
 54652 ;; Tracked objects:
 54653 ;;		On entry : 0/0
 54654 ;;		On exit  : 0/0
 54655 ;;		Unchanged: 0/0
 54656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13 BANK14l  BANK15
 54657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 54661 ;;Total ram usage:        0 bytes
 54662 ;; Hardware stack levels used:    1
 54663 ;; This function calls:
 54664 ;;		Nothing
 54665 ;; This function is called by:
 54666 ;;		i2_WriteDataSLCD
 54667 ;;		i2_BusySLCD
 54668 ;;		i2_WriteCmdSLCD
 54669 ;; This function uses a non-reentrant model
 54670 ;;
 54671                           
 54672                           	psect	text177
 54673  01B5C8                     __ptext177:
 54674                           	opt stack 0
 54675  01B5C8                     i2_DelayFor18TCY:
 54676                           	opt stack 17
 54677                           
 54678                           ;LCDDelay.c: 18: __nop();
 54679                           
 54680                           ;incstack = 0
 54681  01B5C8  F000               	nop	
 54682                           
 54683                           ;LCDDelay.c: 19: __nop();
 54684  01B5CA  F000               	nop	
 54685                           
 54686                           ;LCDDelay.c: 20: __nop();
 54687  01B5CC  F000               	nop	
 54688                           
 54689                           ;LCDDelay.c: 21: __nop();
 54690  01B5CE  F000               	nop	
 54691                           
 54692                           ;LCDDelay.c: 22: __nop();
 54693  01B5D0  F000               	nop	
 54694                           
 54695                           ;LCDDelay.c: 23: __nop();
 54696  01B5D2  F000               	nop	
 54697                           
 54698                           ;LCDDelay.c: 24: __nop();
 54699  01B5D4  F000               	nop	
 54700                           
 54701                           ;LCDDelay.c: 25: __nop();
 54702  01B5D6  F000               	nop	
 54703                           
 54704                           ;LCDDelay.c: 26: __nop();
 54705  01B5D8  F000               	nop	
 54706                           
 54707                           ;LCDDelay.c: 27: __nop();
 54708  01B5DA  F000               	nop	
 54709                           
 54710                           ;LCDDelay.c: 28: __nop();
 54711  01B5DC  F000               	nop	
 54712                           
 54713                           ;LCDDelay.c: 29: __nop();
 54714  01B5DE  F000               	nop	
 54715                           
 54716                           ;LCDDelay.c: 30: __nop();
 54717  01B5E0  F000               	nop	
 54718                           
 54719                           ;LCDDelay.c: 31: __nop();
 54720  01B5E2  F000               	nop	
 54721                           
 54722                           ;LCDDelay.c: 32: __nop();
 54723  01B5E4  F000               	nop	
 54724                           
 54725                           ;LCDDelay.c: 33: __nop();
 54726  01B5E6  F000               	nop	
 54727                           
 54728                           ;LCDDelay.c: 34: __nop();
 54729  01B5E8  F000               	nop	
 54730                           
 54731                           ;LCDDelay.c: 35: __nop();
 54732  01B5EA  F000               	nop	
 54733                           
 54734                           ;LCDDelay.c: 37: __nop();
 54735  01B5EC  F000               	nop	
 54736                           
 54737                           ;LCDDelay.c: 38: __nop();
 54738  01B5EE  F000               	nop	
 54739                           
 54740                           ;LCDDelay.c: 39: __nop();
 54741  01B5F0  F000               	nop	
 54742                           
 54743                           ;LCDDelay.c: 40: __nop();
 54744  01B5F2  F000               	nop	
 54745                           
 54746                           ;LCDDelay.c: 41: __nop();
 54747  01B5F4  F000               	nop	
 54748                           
 54749                           ;LCDDelay.c: 42: __nop();
 54750  01B5F6  F000               	nop	
 54751  01B5F8  0012               	return	
 54752  01B5FA                     __end_ofi2_DelayFor18TCY:
 54753                           	opt stack 0
 54754                           pclatu	equ	0xFFB
 54755                           pclath	equ	0xFFA
 54756                           tblptru	equ	0xFF8
 54757                           tblptrh	equ	0xFF7
 54758                           tblptrl	equ	0xFF6
 54759                           tablat	equ	0xFF5
 54760                           prodh	equ	0xFF4
 54761                           prodl	equ	0xFF3
 54762                           intcon	equ	0xFF2
 54763                           intcon2	equ	0xFF1
 54764                           intcon3	equ	0xFF0
 54765                           indf0	equ	0xFEF
 54766                           postinc0	equ	0xFEE
 54767                           fsr0h	equ	0xFEA
 54768                           fsr0l	equ	0xFE9
 54769                           wreg	equ	0xFE8
 54770                           indf1	equ	0xFE7
 54771                           postinc1	equ	0xFE6
 54772                           postdec1	equ	0xFE5
 54773                           fsr1h	equ	0xFE2
 54774                           fsr1l	equ	0xFE1
 54775                           indf2	equ	0xFDF
 54776                           postinc2	equ	0xFDE
 54777                           postdec2	equ	0xFDD
 54778                           fsr2h	equ	0xFDA
 54779                           fsr2l	equ	0xFD9
 54780                           status	equ	0xFD8
 54781                           pclatu	equ	0xFFB
 54782                           pclath	equ	0xFFA
 54783                           tblptru	equ	0xFF8
 54784                           tblptrh	equ	0xFF7
 54785                           tblptrl	equ	0xFF6
 54786                           tablat	equ	0xFF5
 54787                           prodh	equ	0xFF4
 54788                           prodl	equ	0xFF3
 54789                           intcon	equ	0xFF2
 54790                           intcon2	equ	0xFF1
 54791                           intcon3	equ	0xFF0
 54792                           indf0	equ	0xFEF
 54793                           postinc0	equ	0xFEE
 54794                           fsr0h	equ	0xFEA
 54795                           fsr0l	equ	0xFE9
 54796                           wreg	equ	0xFE8
 54797                           indf1	equ	0xFE7
 54798                           postinc1	equ	0xFE6
 54799                           postdec1	equ	0xFE5
 54800                           fsr1h	equ	0xFE2
 54801                           fsr1l	equ	0xFE1
 54802                           indf2	equ	0xFDF
 54803                           postinc2	equ	0xFDE
 54804                           postdec2	equ	0xFDD
 54805                           fsr2h	equ	0xFDA
 54806                           fsr2l	equ	0xFD9
 54807                           status	equ	0xFD8
 54808                           
 54809                           	psect	rparam
 54810  0000                     pclatu	equ	0xFFB
 54811                           pclath	equ	0xFFA
 54812                           tblptru	equ	0xFF8
 54813                           tblptrh	equ	0xFF7
 54814                           tblptrl	equ	0xFF6
 54815                           tablat	equ	0xFF5
 54816                           prodh	equ	0xFF4
 54817                           prodl	equ	0xFF3
 54818                           intcon	equ	0xFF2
 54819                           intcon2	equ	0xFF1
 54820                           intcon3	equ	0xFF0
 54821                           indf0	equ	0xFEF
 54822                           postinc0	equ	0xFEE
 54823                           fsr0h	equ	0xFEA
 54824                           fsr0l	equ	0xFE9
 54825                           wreg	equ	0xFE8
 54826                           indf1	equ	0xFE7
 54827                           postinc1	equ	0xFE6
 54828                           postdec1	equ	0xFE5
 54829                           fsr1h	equ	0xFE2
 54830                           fsr1l	equ	0xFE1
 54831                           indf2	equ	0xFDF
 54832                           postinc2	equ	0xFDE
 54833                           postdec2	equ	0xFDD
 54834                           fsr2h	equ	0xFDA
 54835                           fsr2l	equ	0xFD9
 54836                           status	equ	0xFD8


Data Sizes:
    Strings     209
    Constant    258
    Data        15
    BSS         605
    Persistent  60
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     83     158
    BANK1           256    179     256
    BANK2           256      0     251
    BANK3           256      0      20
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14l         126      0       0
    BANK15           96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 256
		 -> s_numTicksDiff(BANK4[256]), s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), 
		 -> s_dacSettings(BANK2[20]), SYNQueue(BANK2[60]), 

    memset@p	PTR unsigned char  size(2) Largest target is 256
		 -> s_numTicksDiff(BANK4[256]), s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), 
		 -> s_dacSettings(BANK2[20]), SYNQueue(BANK2[60]), 

    memcpy@d1	PTR void  size(2) Largest target is 3935
		 -> TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), TCPRAMCopyROM@vBuffer(COMRAM[16]), 
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), RAM(DATA[3935]), MyTCB.remote(BANK1[10]), SYNQueue(BANK2[60]), 
		 -> MyTCB(BANK1[39]), MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3935
		 -> TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), TCPRAMCopyROM@vBuffer(COMRAM[16]), 
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), RAM(DATA[3935]), MyTCB.remote(BANK1[10]), SYNQueue(BANK2[60]), 
		 -> MyTCB(BANK1[39]), MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3935
		 -> s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), 
		 -> STR_1(CODE[7]), SerializedMACAddress(CODE[6]), SYNQueue.niSourceAddress(BANK2[10]), RAM(DATA[3935]), 
		 -> MyTCB.remote(BANK1[10]), TCPOpen@dwRemoteHost(BANK1[4]), SYNQueue(BANK2[60]), MyTCB(BANK1[39]), 
		 -> MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), header.SourceMACAddr.v(COMRAM[6]), 
		 -> header.SourceMACAddr(COMRAM[6]), AppConfig.MyMACAddr(BANK2[6]), AppConfig(BANK2[51]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3935
		 -> s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), 
		 -> STR_1(CODE[7]), SerializedMACAddress(CODE[6]), SYNQueue.niSourceAddress(BANK2[10]), RAM(DATA[3935]), 
		 -> MyTCB.remote(BANK1[10]), TCPOpen@dwRemoteHost(BANK1[4]), SYNQueue(BANK2[60]), MyTCB(BANK1[39]), 
		 -> MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), header.SourceMACAddr.v(COMRAM[6]), 
		 -> header.SourceMACAddr(COMRAM[6]), AppConfig.MyMACAddr(BANK2[6]), AppConfig(BANK2[51]), 

    memcmp@s2	PTR const void  size(2) Largest target is 20
		 -> s_irCode(BANK2[16]), s_dacSettings(BANK2[20]), 

    memcmp@s1	PTR const void  size(2) Largest target is 20
		 -> IR_VOLUME_DOWN(CODE[9]), IR_VOLUME_UP(CODE[9]), IR_POWER_OFF(CODE[3]), IR_POWER_ON(CODE[3]), 
		 -> s_dacSettingsOriginal(BANK3[20]), s_dacSettingsTmp(BANK2[20]), 

    WriteBlockFlash@flash_array	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettings(BANK2[20]), 

    WriteBlockFlash@startptr	PTR unsigned char  size(3) Largest target is 131063
		 -> ROM(CODE[131063]), 

    ReadFlash@flash_array	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 17
		 -> dispbuf1(BANK2[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_sprintf(COMRAM[2]), ?_sprintf(BANK1[2]), 

    S9344$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    UpdateSampleRate@srStr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), 

    GetCheckSum@data	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings(BANK2[20]), 

    FindEmpty@blockEnd	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), 

    FindEmpty@tmpAddr	PTR unsigned char  size(2) Largest target is 20
		 -> s_dacSettingsTmp(BANK2[20]), 

    RefreshLine2Ex@line	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), dispbuf2(BANK2[17]), 

    RefreshLine1Ex@line	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), dispbuf1(BANK2[17]), 

    HandleTCPSeg@h	PTR struct . size(2) Largest target is 20
		 -> TCPProcess@TCPHeader(BANK1[20]), 

    SwapTCPHeader@header	PTR struct . size(2) Largest target is 20
		 -> SendTCP@header(BANK1[20]), TCPProcess@TCPHeader(BANK1[20]), 

    FindMatchingSocket@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    FindMatchingSocket@h	PTR struct . size(2) Largest target is 20
		 -> TCPProcess@TCPHeader(BANK1[20]), 

    TCPProcess@localIP	PTR struct . size(2) Largest target is 4
		 -> StackTask@tempLocalIP(BANK1[4]), 

    TCPProcess@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    TCPGetArray@buffer	PTR unsigned char  size(2) Largest target is 18
		 -> TCPServer@cmdBytes(BANK1[18]), 

    sp__TCPPutROMString	PTR const unsigned char  size(2) Largest target is 0

    sp__TCPPutString	PTR unsigned char  size(2) Largest target is 0

    TCPPutArray@data	PTR unsigned char  size(2) Largest target is 18
		 -> TCPServer@cmdBytes(BANK1[18]), 

    sp__TCPGetRemoteInfo	PTR struct . size(2) Largest target is 12
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 256
		 -> s_numTicksDiff(BANK4[256]), s_irCode(BANK2[16]), TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), 
		 -> s_dacSettings(BANK2[20]), SYNQueue(BANK2[60]), 

    SwapIPHeader@h	PTR struct _IP_HEADER size(2) Largest target is 20
		 -> IPPutHeader@header(BANK1[20]), IPGetHeader@header(BANK1[20]), 

    IPPutHeader@remote	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    IPGetHeader@len	PTR unsigned int  size(2) Largest target is 2
		 -> StackTask@dataCount(BANK1[2]), 

    IPGetHeader@protocol	PTR unsigned char  size(2) Largest target is 1
		 -> StackTask@cIPFrameType(BANK1[1]), 

    IPGetHeader@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    IPGetHeader@localIP	PTR struct . size(2) Largest target is 4
		 -> StackTask@tempLocalIP(BANK1[4]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 0

    sp__strnchr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FormatNetBIOSName@Name	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    sp__strupr	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    strupr@s	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    strupr@t	PTR unsigned char  size(2) Largest target is 51
		 -> AppConfig(BANK2[51]), 

    CalcIPChecksum@buffer	PTR unsigned char  size(2) Largest target is 20
		 -> SendTCP@pseudoHeader(BANK1[12]), TCPProcess@pseudoHeader(BANK1[12]), IPPutHeader@header(BANK1[20]), 

    CalcIPChecksum@val	PTR unsigned int  size(2) Largest target is 20
		 -> SendTCP@pseudoHeader(BANK1[12]), TCPProcess@pseudoHeader(BANK1[12]), IPPutHeader@header(BANK1[20]), 

    SwapARPPacket@p	PTR struct . size(2) Largest target is 28
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), 

    ARPIsResolved@MACAddr	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    ARPIsResolved@IPAddr	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    ARPResolve@IPAddr	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), 

    ARPPut@packet	PTR struct . size(2) Largest target is 28
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), 

    MACPutArray@val	PTR unsigned char  size(2) Largest target is 3935
		 -> TCPRAMCopyROM@vBuffer(COMRAM[16]), SendTCP@options(BANK1[4]), SendTCP@wVal(BANK1[2]), SendTCP@header(BANK1[20]), 
		 -> RAM(DATA[3935]), MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), IPPutHeader@header(BANK1[20]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    MACGetArray@val	PTR unsigned char  size(2) Largest target is 3935
		 -> TCPProcess@TCPHeader(BANK1[20]), RAM(DATA[3935]), IPGetHeader@header(BANK1[20]), ARPProcess@packet(BANK1[28]), 
		 -> NULL(NULL[0]), CalcIPBufferChecksum@DataBuffer(BANK1[20]), MACGetHeader@header(BANK1[20]), 

    CalcIPBufferChecksum@DataPtr	PTR unsigned short  size(2) Largest target is 20
		 -> CalcIPBufferChecksum@DataBuffer(BANK1[20]), 

    MACPutHeader@remote	PTR struct . size(2) Largest target is 39
		 -> MyTCB.remote(BANK1[10]), MyTCB(BANK1[39]), ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), 
		 -> ARPSendPkt@packet(COMRAM[28]), 

    MACGetHeader@type	PTR unsigned char  size(2) Largest target is 1
		 -> StackTask@cFrameType(BANK1[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 3935
		 -> TCPServer@cmdBytes(BANK1[18]), s_dacSettings.ChannelScaling(BANK2[16]), s_dacSettings(BANK2[20]), TCPRAMCopyROM@vBuffer(COMRAM[16]), 
		 -> TCPGetRemoteInfo@RemoteInfo(BANK2[12]), RAM(DATA[3935]), MyTCB.remote(BANK1[10]), SYNQueue(BANK2[60]), 
		 -> MyTCB(BANK1[39]), MyTCBStub(BANK1[28]), TCBStubs(BANK2[28]), remoteNode(BANK2[10]), 
		 -> ARPResolve@packet(BANK1[28]), ARPProcess@packet(BANK1[28]), ARPSendPkt@packet(COMRAM[28]), AppConfig(BANK2[51]), 

    MACGetHeader@remote	PTR struct . size(2) Largest target is 10
		 -> remoteNode(BANK2[10]), 

    PutsSLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), dispbuf2(BANK2[17]), 
		 -> dispbuf1(BANK2[17]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISRLP in COMRAM

    _ISRLP->_ChangeMasterVolume
    i2_SaveToFlash->i2_FindEmpty
    i2_FindEmpty->i2_ReadFlash
    _ProcessIRInt->i2_TickGet
    _ProcessIRCode->_ChangeMasterVolume
    i2_PowerOn->i2_UpdateMasterVolume
    i2_UpdateSampleRate->i2_RefreshLine2Ex
    i2_RefreshLine2Ex->i2_PutsSLCD
    _ChangeMasterVolume->i2_UpdateMasterVolume
    i2_sprintf->i2___fttol
    i2_scale->i2___ftmul
    i2_fround->i2___ftmul
    i2___wmul->i2___awdiv
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___ftsub->i2___ftadd
    i2___ftdiv->i2___awtoft
    i2___awtoft->i2___ftpack
    i2_SendVolumeToDevice->i2_SendDataToDeviceCh
    i2_SendDataToDeviceCh->i2_DbToCode
    i2_DbToCode->i2___fttol
    i2___lwtoft->i2___ftpack
    i2___fttol->i2___ftadd
    i2___ftmul->i2___wmul
    i2___ftadd->i2_fround
    i2_RefreshLine1->i2_RefreshLine1Ex
    i2_RefreshLine1Ex->i2_PutsSLCD
    i2_SLCDSetDDRamAddr->i2_WriteCmdSLCD
    i2_PutsSLCD->i2_WriteDataSLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRLP in BANK0

    _IRTimerInt->_ProcessIRCode
    i2_UpdateMasterVolume->i2_sprintf
    i2_SendVolumeToDevice->i2_SendDataToDeviceCh

Critical Paths under _main in BANK1

    _main->_StackTask
    _TCPServer->_UpdateMasterVolume
    _TCPPutArray->_TCPFlush
    _TCPIsPutReady->_SyncTCBStub
    _TCPFlush->_SendTCP
    _TCPOpen->_SendTCP
    _TCPIsConnected->_SyncTCBStub
    _TCPGetArray->_TCPIsGetReady
    _TCPGetArray->_TCPRAMCopy
    _TCPIsGetReady->_SyncTCBStub
    _TCPClose->_TCPDisconnect
    _SaveToFlash->_FindEmpty
    _FindEmpty->_ReadFlash
    _PowerOn->_UpdateMasterVolume
    _UpdateSampleRate->_RefreshLine2Ex
    _RefreshLine2Ex->_PutsSLCD
    _UpdateMasterVolume->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___ftadd
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SendVolumeToDevice->_SendDataToDeviceCh
    _SendDataToDeviceCh->_DbToCode
    _DbToCode->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___wmul
    ___ftadd->_fround
    _RefreshLine1->_RefreshLine1Ex
    _RefreshLine1Ex->_PutsSLCD
    _PutsSLCD->_WriteDataSLCD
    _StackTask->_TCPProcess
    _TCPTick->_TCPDisconnect
    _TCPDisconnect->_SendTCP
    _ARPResolve->_ARPPut
    _TCPProcess->_HandleTCPSeg
    _HandleTCPSeg->_SendTCP
    _SendTCP->_CalcIPBufferChecksum
    _SendTCP->_SyncTCB
    _SwapTCPHeader->_swaps
    _IPPutHeader->_CalcIPChecksum
    _GetMaxSegSizeOption->_IPSetRxBuffer
    _IPSetRxBuffer->_MACSetReadPtrInRx
    _FindMatchingSocket->_SyncTCB
    ___wmul->___awdiv
    _MACGetHeader->_memcpy
    _IPGetHeader->_MACCalcRxChecksum
    _SwapIPHeader->_swaps
    _MACCalcRxChecksum->_CalcIPBufferChecksum
    _CalcIPBufferChecksum->_MACGetArray
    _ARPProcess->_ARPPut
    _ARPPut->_memcpy
    _SwapARPPacket->_swaps
    _MACPutHeader->_MACPutArray
    _MACIsTxReady->_MACFlush
    _MACFlush->_TickGet
    _RestoreFromFlash->_ReadFlash
    _OpenSLCD->_Delay10KTCYx
    _OpenSLCD->_SLCDSetDDRamAddr
    _SLCDSetDDRamAddr->_WriteCmdSLCD
    _DelayPORSLCD->_Delay1KTCYx
    _Configure->_StackInit
    _StackInit->_TCPInit
    _TCPInit->_GenerateRandomDWORD
    _SyncTCBStub->_memcpy
    _GenerateRandomDWORD->_LFSRSeedRand
    _LFSRSeedRand->_LFSRRand
    _CloseSocket->_SyncTCB
    _SyncTCB->_TCPRAMCopy
    _TCPRAMCopy->_memcpy
    _MACMemCopyAsync->_MACPut
    _MACInit->_WritePHYReg
    _InitrIR->_memset
    _InitAppConfig->_memcpy
    _memcpy->___wmul
    _FormatNetBIOSName->_strupr

Critical Paths under _ISRLP in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRLP in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRLP in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRLP in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRLP in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRLP in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRLP in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISRLP in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISRLP in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISRLP in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISRLP in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISRLP in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISRLP in BANK13

    None.

Critical Paths under _main in BANK14l

    None.

Critical Paths under _ISRLP in BANK14l

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISRLP in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1554171
                           _BusySLCD
                          _Configure
                           _OpenSLCD
                            _PowerOn
                   _RestoreFromFlash
                          _StackTask
                          _TCPServer
                       _WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (1) _TCPServer                                           23    23      0  746202
                                            130 BANK1     23    23      0
                        _GetCheckSum
                           _PowerOff
                            _PowerOn
                        _SaveToFlash
                 _SendVolumeToDevice
                           _TCPClose
                        _TCPGetArray
                     _TCPIsConnected
                      _TCPIsGetReady
                      _TCPIsPutReady
                            _TCPOpen
                        _TCPPutArray
                 _UpdateMasterVolume
                   _UpdateSampleRate
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _TCPPutArray                                         15    11      4  156910
                                             87 BANK1     15    11      4
                        _SyncTCBStub
                           _TCPFlush
                      _TCPIsPutReady
                         _TCPRAMCopy
                      _TickGetDiv256
 ---------------------------------------------------------------------------------
 (3) _TCPIsPutReady                                        6     4      2    6315
                                             33 BANK1      6     4      2
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (3) _TCPFlush                                             1     1      0  115439
                                             86 BANK1      1     1      0
                            _SendTCP
                            _SyncTCB
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (2) _TCPOpen                                             13     5      8  122508
                                             86 BANK1     13     5      8
                            _SendTCP
                            _SyncTCB
                        _SyncTCBStub
                            _TickGet
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _TCPIsConnected                                       1     1      0    6270
                                             33 BANK1      1     1      0
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (2) _TCPGetArray                                         13     9      4   41108
                                             38 BANK1     13     9      4
                        _SyncTCBStub
                      _TCPIsGetReady
                         _TCPRAMCopy
                      _TickGetDiv256
 ---------------------------------------------------------------------------------
 (2) _TCPIsGetReady                                        5     3      2    6270
                                             33 BANK1      5     3      2
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (2) _TCPClose                                             1     1      0  121801
                                             87 BANK1      1     1      0
                        _SyncTCBStub
                      _TCPDisconnect
 ---------------------------------------------------------------------------------
 (2) _SaveToFlash                                         23    23      0    9271
                                             40 BANK1     23    23      0
                         _EraseFlash
                          _FindEmpty
                        _GetCheckSum
                          _ReadFlash
                       _RefreshLine1
                     _RefreshLine1Ex
                    _WriteBlockFlash
                             _memcmp
 ---------------------------------------------------------------------------------
 (3) _memcmp                                               9     3      6    1924
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) _WriteBlockFlash                                     17    10      7     565
                                              0 BANK1     17    10      7
 ---------------------------------------------------------------------------------
 (3) _FindEmpty                                           24    20      4    1689
                                             16 BANK1     24    20      4
                          _ReadFlash
 ---------------------------------------------------------------------------------
 (3) _EraseFlash                                          13     5      8     420
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (2) _PowerOn                                              0     0      0  121139
                       _Delay10KTCYx
                 _UpdateMasterVolume
                   _UpdateSampleRate
 ---------------------------------------------------------------------------------
 (2) _UpdateSampleRate                                     2     2      0     633
                                              5 BANK1      2     2      0
                     _RefreshLine2Ex
 ---------------------------------------------------------------------------------
 (3) _RefreshLine2Ex                                       2     0      2     605
                                              3 BANK1      2     0      2
                           _PutsSLCD
                   _SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (2) _UpdateMasterVolume                                   6     6      0  120484
                                            124 BANK1      6     6      0
                       _RefreshLine1
                 _SendVolumeToDevice
                           ___awtoft
                            ___ftdiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             56    49      7   91167
                                             72 BANK1     52    45      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   23626
                                             35 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   23428
                                             35 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2420
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2660
                                              6 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     539
                                              0 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          16    10      6     699
                                              0 BANK1     16    10      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    4095
                                              8 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     867
                                              0 BANK1      9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     870
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    6157
                                             57 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     163
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     844
                                              0 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    4634
                                             12 BANK1     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    4117
                                              8 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _SendVolumeToDevice                                   0     0      0   19398
                 _SendDataToDeviceCh
 ---------------------------------------------------------------------------------
 (4) _SendDataToDeviceCh                                  25    25      0   19398
                                             83 BANK1     25    25      0
                           _DbToCode
 ---------------------------------------------------------------------------------
 (5) _DbToCode                                            11     9      2   18847
                                             72 BANK1     11     9      2
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (6) ___lwtoft                                             3     0      3    4048
                                              8 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     724
                                             57 BANK1     15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    7984
                                             20 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5666
                                             45 BANK1     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    3908
                                              0 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (3) _RefreshLine1                                         0     0      0    1077
                     _RefreshLine1Ex
 ---------------------------------------------------------------------------------
 (4) _RefreshLine1Ex                                       2     0      2    1077
                                              3 BANK1      2     0      2
                           _PutsSLCD
                   _SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (4) _PutsSLCD                                             2     0      2     303
                                              1 BANK1      2     0      2
                           _BusySLCD
                      _WriteDataSLCD
 ---------------------------------------------------------------------------------
 (5) _WriteDataSLCD                                        1     1      0      22
                                              0 BANK1      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _StackTask                                            8     8      0  594600
                                            171 BANK1      8     8      0
                         _ARPProcess
                        _IPGetHeader
                       _MACGetHeader
                         _TCPProcess
                            _TCPTick
 ---------------------------------------------------------------------------------
 (2) _TCPTick                                             18    18      0  319732
                                             87 BANK1     18    18      0
                      _ARPIsResolved
                         _ARPResolve
                        _CloseSocket
                       _MACIsTxReady
                            _SendTCP
                            _SyncTCB
                        _SyncTCBStub
                      _TCPDisconnect
                         _TCPRAMCopy
                            _TickGet
                      _TickGetDiv256
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _TCPDisconnect                                        1     1      0  115509
                                             86 BANK1      1     1      0
                        _CloseSocket
                            _SendTCP
                        _SyncTCBStub
 ---------------------------------------------------------------------------------
 (3) _ARPResolve                                          46    44      2   15397
                                             32 BANK1     46    44      2
                             _ARPPut
 ---------------------------------------------------------------------------------
 (3) _ARPIsResolved                                       16    12      4     302
                                              0 BANK1     16    12      4
 ---------------------------------------------------------------------------------
 (2) _TCPProcess                                          45    39      6  235999
                                            126 BANK1     45    39      6
               _CalcIPBufferChecksum
                     _CalcIPChecksum
                 _FindMatchingSocket
                       _HandleTCPSeg
                      _IPSetRxBuffer
                       _MACDiscardRx
                        _MACGetArray
                      _SwapTCPHeader
                              _swaps
 ---------------------------------------------------------------------------------
 (3) _HandleTCPSeg                                        40    36      4  172298
                                             86 BANK1     40    36      4
                        _CloseSocket
                _GetMaxSegSizeOption
                      _IPSetRxBuffer
                            _SendTCP
                            _SyncTCB
                         _TCPRAMCopy
                            _TickGet
                      _TickGetDiv256
 ---------------------------------------------------------------------------------
 (4) _SendTCP                                             46    45      1   81341
                                             40 BANK1     46    45      1
               _CalcIPBufferChecksum
                     _CalcIPChecksum
                        _IPPutHeader
                           _MACFlush
                   _MACGetFreeRxSize
                       _MACIsTxReady
                        _MACPutArray
                      _MACSetReadPtr
                     _MACSetWritePtr
                      _SwapTCPHeader
                            _SyncTCB
                         _TCPRAMCopy
                            _TickGet
                              _swaps
 ---------------------------------------------------------------------------------
 (5) _SwapTCPHeader                                        6     4      2    2827
                                              5 BANK1      6     4      2
                              _swapl
                              _swaps
 ---------------------------------------------------------------------------------
 (6) _swapl                                                4     0      4     493
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (5) _MACGetFreeRxSize                                     8     6      2     201
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (5) _IPPutHeader                                         25    20      5    9038
                                             14 BANK1     25    20      5
                     _CalcIPChecksum
                        _MACPutArray
                       _MACPutHeader
                       _SwapIPHeader
 ---------------------------------------------------------------------------------
 (6) _CalcIPChecksum                                      14    10      4     938
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) _GetMaxSegSizeOption                                  6     4      2    3211
                                              8 BANK1      6     4      2
                      _IPSetRxBuffer
                             _MACGet
                        _MACGetArray
 ---------------------------------------------------------------------------------
 (3) _IPSetRxBuffer                                        2     0      2     821
                                              6 BANK1      2     0      2
                  _MACSetReadPtrInRx
 ---------------------------------------------------------------------------------
 (3) _FindMatchingSocket                                  18    14      4   51595
                                             40 BANK1     18    14      4
                            _SyncTCB
                        _SyncTCBStub
                      _TickGetDiv256
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4   10073
                                             14 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _TickGetDiv256                                        8     4      4      95
                                              0 BANK1      8     4      4
                        _GetTickCopy
 ---------------------------------------------------------------------------------
 (2) _MACGetHeader                                        26    22      4   10648
                                             30 BANK1     26    22      4
                       _MACDiscardRx
                        _MACGetArray
                             _memcpy
                              _swaps
 ---------------------------------------------------------------------------------
 (2) _IPGetHeader                                         34    26      8    8435
                                             50 BANK1     34    26      8
                  _MACCalcRxChecksum
                        _MACGetArray
                  _MACSetReadPtrInRx
                       _SwapIPHeader
 ---------------------------------------------------------------------------------
 (6) _SwapIPHeader                                         2     0      2    2158
                                              5 BANK1      2     0      2
                              _swaps
 ---------------------------------------------------------------------------------
 (4) _MACSetReadPtrInRx                                    6     4      2     327
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (3) _MACCalcRxChecksum                                   10     6      4    3125
                                             40 BANK1     10     6      4
               _CalcIPBufferChecksum
 ---------------------------------------------------------------------------------
 (5) _CalcIPBufferChecksum                                34    32      2    2753
                                              6 BANK1     34    32      2
                        _MACGetArray
 ---------------------------------------------------------------------------------
 (2) _ARPProcess                                          28    28      0   19599
                                             32 BANK1     28    28      0
                             _ARPPut
                       _MACDiscardRx
                        _MACGetArray
                      _SwapARPPacket
 ---------------------------------------------------------------------------------
 (3) _MACDiscardRx                                         2     2      0      69
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (4) _ARPPut                                               2     0      2   14975
                                             30 BANK1      2     0      2
                           _MACFlush
                       _MACIsTxReady
                        _MACPutArray
                       _MACPutHeader
                     _MACSetWritePtr
                      _SwapARPPacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _SwapARPPacket                                        2     0      2    2158
                                              5 BANK1      2     0      2
                              _swaps
 ---------------------------------------------------------------------------------
 (5) _swaps                                                5     3      2    1790
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 (6) _MACPutHeader                                         7     2      5    2990
                                              4 BANK1      7     2      5
                             _MACPut
                        _MACPutArray
 ---------------------------------------------------------------------------------
 (5) _MACIsTxReady                                         6     6      0     225
                                             13 BANK1      6     6      0
                           _MACFlush
                            _TickGet
 ---------------------------------------------------------------------------------
 (6) _MACFlush                                             5     5      0     124
                                              8 BANK1      5     5      0
                            _TickGet
 ---------------------------------------------------------------------------------
 (5) _TickGet                                              8     4      4     101
                                              0 BANK1      8     4      4
                        _GetTickCopy
 ---------------------------------------------------------------------------------
 (4) _GetTickCopy                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RestoreFromFlash                                    17    17      0    8510
                                             16 BANK1     17    17      0
                        _GetCheckSum
                          _ReadFlash
                             _memset
 ---------------------------------------------------------------------------------
 (3) _ReadFlash                                           16     8      8    1323
                                              0 BANK1     16     8      8
 ---------------------------------------------------------------------------------
 (3) _GetCheckSum                                          5     2      3    1059
                                              0 BANK1      5     2      3
 ---------------------------------------------------------------------------------
 (1) _OpenSLCD                                             1     1      0     132
                                              2 BANK1      1     1      0
                           _BusySLCD
                       _Delay10KTCYx
                       _DelayPORSLCD
                   _SLCDSetDDRamAddr
                       _WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (4) _SLCDSetDDRamAddr                                     1     1      0      44
                                              1 BANK1      1     1      0
                           _BusySLCD
                       _WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (1) _WriteCmdSLCD                                         1     1      0      22
                                              0 BANK1      1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _BusySLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayPORSLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configure                                            0     0      0   83566
                      _InitAppConfig
                            _InitrIR
                           _PowerOff
                          _StackInit
                           _TickInit
 ---------------------------------------------------------------------------------
 (2) _TickInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _StackInit                                            4     4      0   70858
                                             67 BANK1      4     4      0
                            _ARPInit
                _GenerateRandomDWORD
                       _LFSRSeedRand
                            _MACInit
                            _TCPInit
 ---------------------------------------------------------------------------------
 (3) _TCPInit                                             17    17      0   69169
                                             50 BANK1     17    17      0
                        _CloseSocket
                _GenerateRandomDWORD
                            _SyncTCB
                        _SyncTCBStub
                             _memset
 ---------------------------------------------------------------------------------
 (4) _SyncTCBStub                                          3     3      0    6226
                                             30 BANK1      3     3      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _GenerateRandomDWORD                                 26    22      4     820
                                             24 BANK1     26    22      4
                           _LFSRRand
                       _LFSRSeedRand
 ---------------------------------------------------------------------------------
 (5) _LFSRSeedRand                                         9     5      4     380
                                             15 BANK1      9     5      4
                           _LFSRRand
 ---------------------------------------------------------------------------------
 (4) _CloseSocket                                          2     2      0   27898
                                             40 BANK1      2     2      0
                           _LFSRRand
                            _SyncTCB
 ---------------------------------------------------------------------------------
 (4) _SyncTCB                                              2     2      0   27828
                                             38 BANK1      2     2      0
                         _TCPRAMCopy
 ---------------------------------------------------------------------------------
 (3) _TCPRAMCopy                                           8     0      8   27828
                                             30 BANK1      8     0      8
                        _MACGetArray
                   _MACIsMemCopyDone
                    _MACMemCopyAsync
                        _MACPutArray
                      _MACSetReadPtr
                     _MACSetWritePtr
                             ___wmul (ARG)
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _MACSetWritePtr                                       4     2      2     619
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (4) _MACSetReadPtr                                        4     2      2     265
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (4) _MACPutArray                                          4     0      4    2169
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (4) _MACMemCopyAsync                                     16    10      6     917
                                              1 BANK1     16    10      6
                             _MACGet
                             _MACPut
 ---------------------------------------------------------------------------------
 (5) _MACGet                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MACIsMemCopyDone                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MACGetArray                                          6     2      4    2006
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) _LFSRRand                                            15    13      2      46
                                              0 BANK1     15    13      2
 ---------------------------------------------------------------------------------
 (3) _MACInit                                              1     1      0     466
                             _MACPut
                        _WritePHYReg
 ---------------------------------------------------------------------------------
 (4) _WritePHYReg                                          4     2      2     444
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (5) _MACPut                                               1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _ARPInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PowerOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitrIR                                              0     0      0    6036
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    6036
                                              0 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (2) _InitAppConfig                                        0     0      0    6672
                  _FormatNetBIOSName
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     4      6    6138
                                             20 BANK1     10     4      6
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _FormatNetBIOSName                                    3     1      2     534
                                              5 BANK1      3     1      2
                             _strupr
 ---------------------------------------------------------------------------------
 (4) _strupr                                               5     3      2     237
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISRLP                                               27    27      0  125327
                                             56 BANK0     27    27      0
                 _ChangeMasterVolume
                         _IRTimerInt
                       _ProcessIRInt
                         _TickUpdate
                      i2_Delay1KTCYx
                         i2_PowerOff
                          i2_PowerOn
                      i2_SaveToFlash
                          i2_TickGet
                 i2_UpdateSampleRate
 ---------------------------------------------------------------------------------
 (10) i2_SaveToFlash                                      23    23      0    3163
                                             40 COMRAM    23    23      0
                       i2_EraseFlash
                        i2_FindEmpty
                      i2_GetCheckSum
                        i2_ReadFlash
                     i2_RefreshLine1
                   i2_RefreshLine1Ex
                  i2_WriteBlockFlash
                           i2_memcmp
 ---------------------------------------------------------------------------------
 (11) i2_WriteBlockFlash                                  17    10      7     289
                                              0 COMRAM    17    10      7
 ---------------------------------------------------------------------------------
 (11) i2_GetCheckSum                                       5     2      3     167
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (11) i2_FindEmpty                                        24    20      4     675
                                             16 COMRAM    24    20      4
                        i2_ReadFlash
 ---------------------------------------------------------------------------------
 (11) i2_ReadFlash                                        16     8      8     401
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (11) i2_EraseFlash                                       13     5      8     232
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (10) i2_Delay1KTCYx                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TickUpdate                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _ProcessIRInt                                       12    12      0     157
                                              8 COMRAM    12    12      0
                        _ReInitTimer
                          i2_TickGet
 ---------------------------------------------------------------------------------
 (11) _ReInitTimer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _IRTimerInt                                          0     0      0   61228
                      _ProcessIRCode
                           i2_memset
 ---------------------------------------------------------------------------------
 (11) i2_memset                                            8     2      6     174
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _ProcessIRCode                                      17    17      0   61054
                                             39 BANK0     17    17      0
                 _ChangeMasterVolume
                         i2_PowerOff
                          i2_PowerOn
                          i2_TickGet
                           i2_memcmp
 ---------------------------------------------------------------------------------
 (11) i2_memcmp                                            9     3      6     580
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (10) i2_TickGet                                           8     4      4      89
                                              0 COMRAM     8     4      4
                      i2_GetTickCopy
 ---------------------------------------------------------------------------------
 (11) i2_GetTickCopy                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i2_PowerOn                                           0     0      0   30232
                     i2_Delay10KTCYx
               i2_UpdateMasterVolume
                 i2_UpdateSampleRate
 ---------------------------------------------------------------------------------
 (10) i2_UpdateSampleRate                                  2     2      0     239
                                              5 COMRAM     2     2      0
                   i2_RefreshLine2Ex
 ---------------------------------------------------------------------------------
 (11) i2_RefreshLine2Ex                                    2     0      2     211
                                              3 COMRAM     2     0      2
                         i2_PutsSLCD
                 i2_SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (11) i2_Delay10KTCYx                                      2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) i2_PowerOff                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ChangeMasterVolume                                  2     2      0   30082
                                             92 COMRAM     2     2      0
               i2_UpdateMasterVolume
 ---------------------------------------------------------------------------------
 (11) i2_UpdateMasterVolume                                6     6      0   29971
                                             86 COMRAM     6     6      0
                     i2_RefreshLine1
               i2_SendVolumeToDevice
                         i2___awtoft
                          i2___ftdiv
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (12) i2_sprintf                                          56    49      7   22333
                                             72 COMRAM    13     6      7
                                              0 BANK0     39    39      0
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (13) i2_scale                                            13    10      3    4949
                                             35 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (13) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (13) i2_fround                                           16    13      3    4751
                                             35 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4    1093
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___awmod                                           6     2      4     764
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i2___awdiv                                           8     4      4     820
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (13) i2__tdiv_to_l_                                      15     9      6     355
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (13) i2__div_to_l_                                       16    10      6     481
                                              0 COMRAM    16    10      6
 ---------------------------------------------------------------------------------
 (13) i2___lltoft                                          9     5      4     772
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___llmod                                           9     1      8     315
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (13) i2___lldiv                                          13     5      8     266
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (13) i2___ftsub                                           6     0      6    1770
                                             57 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (13) i2___ftneg                                           3     0      3      71
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (13) i2___ftge                                            9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (12) i2___ftdiv                                          15     9      6    1009
                                             12 COMRAM    15     9      6
                         i2___awtoft (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2___awtoft                                          4     1      3     794
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (12) i2_SendVolumeToDevice                                0     0      0    5403
               i2_SendDataToDeviceCh
 ---------------------------------------------------------------------------------
 (13) i2_SendDataToDeviceCh                               25    25      0    5403
                                             83 COMRAM     3     3      0
                                              0 BANK0     22    22      0
                         i2_DbToCode
 ---------------------------------------------------------------------------------
 (14) i2_DbToCode                                         11     9      2    4870
                                             72 COMRAM    11     9      2
                          i2___ftadd
                          i2___ftmul
                          i2___fttol
                         i2___lwtoft
 ---------------------------------------------------------------------------------
 (15) i2___lwtoft                                          3     0      3     725
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (13) i2___fttol                                          15    11      4     356
                                             57 COMRAM    15    11      4
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                         i2___lwtoft (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftmul                                          15     9      6    1783
                                             20 COMRAM    15     9      6
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (14) i2___ftadd                                          12     6      6    1673
                                             45 COMRAM    12     6      6
                          i2___ftmul (ARG)
                         i2___ftpack
                         i2___lwtoft (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (15) i2___ftpack                                          8     3      5     677
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (11) i2_RefreshLine1                                      0     0      0     341
                   i2_RefreshLine1Ex
 ---------------------------------------------------------------------------------
 (11) i2_RefreshLine1Ex                                    2     0      2     341
                                              3 COMRAM     2     0      2
                         i2_PutsSLCD
                 i2_SLCDSetDDRamAddr
 ---------------------------------------------------------------------------------
 (12) i2_SLCDSetDDRamAddr                                  1     1      0      44
                                              1 COMRAM     1     1      0
                         i2_BusySLCD
                     i2_WriteCmdSLCD
 ---------------------------------------------------------------------------------
 (13) i2_WriteCmdSLCD                                      1     1      0      22
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (12) i2_PutsSLCD                                          2     0      2     119
                                              1 COMRAM     2     0      2
                         i2_BusySLCD
                    i2_WriteDataSLCD
 ---------------------------------------------------------------------------------
 (13) i2_WriteDataSLCD                                     1     1      0      22
                                              0 COMRAM     1     1      0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (13) i2_BusySLCD                                          0     0      0       0
                    i2_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (14) i2_DelayFor18TCY                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusySLCD
     _DelayFor18TCY
   _Configure
     _InitAppConfig
       _FormatNetBIOSName
         _strupr
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _InitrIR
       _memset
     _PowerOff
     _StackInit
       _ARPInit
       _GenerateRandomDWORD
         _LFSRRand
         _LFSRSeedRand
           _LFSRRand
       _LFSRSeedRand
         _LFSRRand
       _MACInit
         _MACPut
         _WritePHYReg
       _TCPInit
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _GenerateRandomDWORD
           _LFSRRand
           _LFSRSeedRand
             _LFSRRand
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _memset
     _TickInit
   _OpenSLCD
     _BusySLCD
       _DelayFor18TCY
     _Delay10KTCYx
     _DelayPORSLCD
       _Delay1KTCYx
     _SLCDSetDDRamAddr
       _BusySLCD
         _DelayFor18TCY
       _WriteCmdSLCD
         _DelayFor18TCY
     _WriteCmdSLCD
       _DelayFor18TCY
   _PowerOn
     _Delay10KTCYx
     _UpdateMasterVolume
       _RefreshLine1
         _RefreshLine1Ex
           _PutsSLCD
             _BusySLCD
               _DelayFor18TCY
             _WriteDataSLCD
               _DelayFor18TCY
           _SLCDSetDDRamAddr
             _BusySLCD
               _DelayFor18TCY
             _WriteCmdSLCD
               _DelayFor18TCY
       _SendVolumeToDevice
         _SendDataToDeviceCh
           _DbToCode
             ___ftadd
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lwtoft
               ___ftpack
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _UpdateSampleRate
       _RefreshLine2Ex
         _PutsSLCD
           _BusySLCD
             _DelayFor18TCY
           _WriteDataSLCD
             _DelayFor18TCY
         _SLCDSetDDRamAddr
           _BusySLCD
             _DelayFor18TCY
           _WriteCmdSLCD
             _DelayFor18TCY
   _RestoreFromFlash
     _GetCheckSum
     _ReadFlash
     _memset
   _StackTask
     _ARPProcess
       _ARPPut
         _MACFlush
           _TickGet
             _GetTickCopy
         _MACIsTxReady
           _MACFlush
             _TickGet
               _GetTickCopy
           _TickGet
             _GetTickCopy
         _MACPutArray
         _MACPutHeader
           _MACPut
           _MACPutArray
         _MACSetWritePtr
         _SwapARPPacket
           _swaps
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _MACDiscardRx
       _MACGetArray
       _SwapARPPacket
         _swaps
     _IPGetHeader
       _MACCalcRxChecksum
         _CalcIPBufferChecksum
           _MACGetArray
       _MACGetArray
       _MACSetReadPtrInRx
       _SwapIPHeader
         _swaps
     _MACGetHeader
       _MACDiscardRx
       _MACGetArray
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _swaps
     _TCPProcess
       _CalcIPBufferChecksum
         _MACGetArray
       _CalcIPChecksum
       _FindMatchingSocket
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGetDiv256
           _GetTickCopy
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _HandleTCPSeg
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _GetMaxSegSizeOption
           _IPSetRxBuffer
             _MACSetReadPtrInRx
           _MACGet
           _MACGetArray
         _IPSetRxBuffer
           _MACSetReadPtrInRx
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGet
           _GetTickCopy
         _TickGetDiv256
           _GetTickCopy
       _IPSetRxBuffer
         _MACSetReadPtrInRx
       _MACDiscardRx
       _MACGetArray
       _SwapTCPHeader
         _swapl
         _swaps
       _swaps
     _TCPTick
       _ARPIsResolved
       _ARPResolve
         _ARPPut
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACPutHeader
             _MACPut
             _MACPutArray
           _MACSetWritePtr
           _SwapARPPacket
             _swaps
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _CloseSocket
         _LFSRRand
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       _MACIsTxReady
         _MACFlush
           _TickGet
             _GetTickCopy
         _TickGet
           _GetTickCopy
       _SendTCP
         _CalcIPBufferChecksum
           _MACGetArray
         _CalcIPChecksum
         _IPPutHeader
           _CalcIPChecksum
           _MACPutArray
           _MACPutHeader
             _MACPut
             _MACPutArray
           _SwapIPHeader
             _swaps
         _MACFlush
           _TickGet
             _GetTickCopy
         _MACGetFreeRxSize
         _MACIsTxReady
           _MACFlush
             _TickGet
               _GetTickCopy
           _TickGet
             _GetTickCopy
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         _SwapTCPHeader
           _swapl
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGet
           _GetTickCopy
         _swaps
       _SyncTCB
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPDisconnect
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPRAMCopy
         _MACGetArray
         _MACIsMemCopyDone
         _MACMemCopyAsync
           _MACGet
           _MACPut
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGet
         _GetTickCopy
       _TickGetDiv256
         _GetTickCopy
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _TCPServer
     _GetCheckSum
     _PowerOff
     _PowerOn
       _Delay10KTCYx
       _UpdateMasterVolume
         _RefreshLine1
           _RefreshLine1Ex
             _PutsSLCD
               _BusySLCD
                 _DelayFor18TCY
               _WriteDataSLCD
                 _DelayFor18TCY
             _SLCDSetDDRamAddr
               _BusySLCD
                 _DelayFor18TCY
               _WriteCmdSLCD
                 _DelayFor18TCY
         _SendVolumeToDevice
           _SendDataToDeviceCh
             _DbToCode
               ___ftadd
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___fttol
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___ftmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___lwtoft
                 ___ftpack
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         _sprintf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _UpdateSampleRate
         _RefreshLine2Ex
           _PutsSLCD
             _BusySLCD
               _DelayFor18TCY
             _WriteDataSLCD
               _DelayFor18TCY
           _SLCDSetDDRamAddr
             _BusySLCD
               _DelayFor18TCY
             _WriteCmdSLCD
               _DelayFor18TCY
     _SaveToFlash
       _EraseFlash
       _FindEmpty
         _ReadFlash
       _GetCheckSum
       _ReadFlash
       _RefreshLine1
         _RefreshLine1Ex
           _PutsSLCD
             _BusySLCD
               _DelayFor18TCY
             _WriteDataSLCD
               _DelayFor18TCY
           _SLCDSetDDRamAddr
             _BusySLCD
               _DelayFor18TCY
             _WriteCmdSLCD
               _DelayFor18TCY
       _RefreshLine1Ex
         _PutsSLCD
           _BusySLCD
             _DelayFor18TCY
           _WriteDataSLCD
             _DelayFor18TCY
         _SLCDSetDDRamAddr
           _BusySLCD
             _DelayFor18TCY
           _WriteCmdSLCD
             _DelayFor18TCY
       _WriteBlockFlash
       _memcmp
     _SendVolumeToDevice
       _SendDataToDeviceCh
         _DbToCode
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___fttol
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lwtoft
             ___ftpack
     _TCPClose
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPDisconnect
         _CloseSocket
           _LFSRRand
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     _TCPGetArray
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPIsGetReady
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPRAMCopy
         _MACGetArray
         _MACIsMemCopyDone
         _MACMemCopyAsync
           _MACGet
           _MACPut
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGetDiv256
         _GetTickCopy
     _TCPIsConnected
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _TCPIsGetReady
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _TCPIsPutReady
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _TCPOpen
       _SendTCP
         _CalcIPBufferChecksum
           _MACGetArray
         _CalcIPChecksum
         _IPPutHeader
           _CalcIPChecksum
           _MACPutArray
           _MACPutHeader
             _MACPut
             _MACPutArray
           _SwapIPHeader
             _swaps
         _MACFlush
           _TickGet
             _GetTickCopy
         _MACGetFreeRxSize
         _MACIsTxReady
           _MACFlush
             _TickGet
               _GetTickCopy
           _TickGet
             _GetTickCopy
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         _SwapTCPHeader
           _swapl
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _TickGet
           _GetTickCopy
         _swaps
       _SyncTCB
         _TCPRAMCopy
           _MACGetArray
           _MACIsMemCopyDone
           _MACMemCopyAsync
             _MACGet
             _MACPut
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _memcpy (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGet
         _GetTickCopy
       _memcpy
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _TCPPutArray
       _SyncTCBStub
         _memcpy
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TCPFlush
         _SendTCP
           _CalcIPBufferChecksum
             _MACGetArray
           _CalcIPChecksum
           _IPPutHeader
             _CalcIPChecksum
             _MACPutArray
             _MACPutHeader
               _MACPut
               _MACPutArray
             _SwapIPHeader
               _swaps
           _MACFlush
             _TickGet
               _GetTickCopy
           _MACGetFreeRxSize
           _MACIsTxReady
             _MACFlush
               _TickGet
                 _GetTickCopy
             _TickGet
               _GetTickCopy
           _MACPutArray
           _MACSetReadPtr
           _MACSetWritePtr
           _SwapTCPHeader
             _swapl
             _swaps
           _SyncTCB
             _TCPRAMCopy
               _MACGetArray
               _MACIsMemCopyDone
               _MACMemCopyAsync
                 _MACGet
                 _MACPut
               _MACPutArray
               _MACSetReadPtr
               _MACSetWritePtr
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _memcpy (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _TickGet
             _GetTickCopy
           _swaps
         _SyncTCB
           _TCPRAMCopy
             _MACGetArray
             _MACIsMemCopyDone
             _MACMemCopyAsync
               _MACGet
               _MACPut
             _MACPutArray
             _MACSetReadPtr
             _MACSetWritePtr
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _memcpy (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPIsPutReady
         _SyncTCBStub
           _memcpy
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _TCPRAMCopy
         _MACGetArray
         _MACIsMemCopyDone
         _MACMemCopyAsync
           _MACGet
           _MACPut
         _MACPutArray
         _MACSetReadPtr
         _MACSetWritePtr
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _memcpy (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _TickGetDiv256
         _GetTickCopy
     _UpdateMasterVolume
       _RefreshLine1
         _RefreshLine1Ex
           _PutsSLCD
             _BusySLCD
               _DelayFor18TCY
             _WriteDataSLCD
               _DelayFor18TCY
           _SLCDSetDDRamAddr
             _BusySLCD
               _DelayFor18TCY
             _WriteCmdSLCD
               _DelayFor18TCY
       _SendVolumeToDevice
         _SendDataToDeviceCh
           _DbToCode
             ___ftadd
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___fttol
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lwtoft
               ___ftpack
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _UpdateSampleRate
       _RefreshLine2Ex
         _PutsSLCD
           _BusySLCD
             _DelayFor18TCY
           _WriteDataSLCD
             _DelayFor18TCY
         _SLCDSetDDRamAddr
           _BusySLCD
             _DelayFor18TCY
           _WriteCmdSLCD
             _DelayFor18TCY
     _memcpy
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _memset
   _WriteCmdSLCD
     _DelayFor18TCY

 _ISRLP (ROOT)
   _ChangeMasterVolume
     i2_UpdateMasterVolume
       i2_RefreshLine1
         i2_RefreshLine1Ex
           i2_PutsSLCD
             i2_BusySLCD
               i2_DelayFor18TCY
             i2_WriteDataSLCD
               i2_DelayFor18TCY
           i2_SLCDSetDDRamAddr
             i2_BusySLCD
               i2_DelayFor18TCY
             i2_WriteCmdSLCD
               i2_DelayFor18TCY
       i2_SendVolumeToDevice
         i2_SendDataToDeviceCh
           i2_DbToCode
             i2___ftadd
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___fttol
               i2___ftadd (ARG)
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lwtoft
               i2___ftpack
       i2___awtoft
         i2___ftpack
       i2___ftdiv
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2_sprintf
         i2___awdiv
           i2___awmod (ARG)
         i2___ftadd
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftge
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
         i2___ftsub
           i2___ftadd
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol
           i2___ftadd (ARG)
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv
         i2___llmod
         i2___lltoft
           i2___ftpack
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_
         i2__tdiv_to_l_
         i2_fround
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit
         i2_scale
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
   _IRTimerInt
     _ProcessIRCode
       _ChangeMasterVolume
         i2_UpdateMasterVolume
           i2_RefreshLine1
             i2_RefreshLine1Ex
               i2_PutsSLCD
                 i2_BusySLCD
                   i2_DelayFor18TCY
                 i2_WriteDataSLCD
                   i2_DelayFor18TCY
               i2_SLCDSetDDRamAddr
                 i2_BusySLCD
                   i2_DelayFor18TCY
                 i2_WriteCmdSLCD
                   i2_DelayFor18TCY
           i2_SendVolumeToDevice
             i2_SendDataToDeviceCh
               i2_DbToCode
                 i2___ftadd
                   i2___ftmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftpack (ARG)
                         i2___lwtoft (ARG)
                           i2___ftpack
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lwtoft
                   i2___ftpack
           i2___awtoft
             i2___ftpack
           i2___ftdiv
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
           i2_sprintf
             i2___awdiv
               i2___awmod (ARG)
             i2___ftadd
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
             i2___ftsub
               i2___ftadd
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___lltoft (ARG)
                 i2___ftpack
             i2___fttol
               i2___ftadd (ARG)
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lldiv
             i2___llmod
             i2___lltoft
               i2___ftpack
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2__div_to_l_
             i2__tdiv_to_l_
             i2_fround
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_isdigit
             i2_scale
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
       i2_PowerOff
       i2_PowerOn
         i2_Delay10KTCYx
         i2_UpdateMasterVolume
           i2_RefreshLine1
             i2_RefreshLine1Ex
               i2_PutsSLCD
                 i2_BusySLCD
                   i2_DelayFor18TCY
                 i2_WriteDataSLCD
                   i2_DelayFor18TCY
               i2_SLCDSetDDRamAddr
                 i2_BusySLCD
                   i2_DelayFor18TCY
                 i2_WriteCmdSLCD
                   i2_DelayFor18TCY
           i2_SendVolumeToDevice
             i2_SendDataToDeviceCh
               i2_DbToCode
                 i2___ftadd
                   i2___ftmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___fttol
                   i2___ftadd (ARG)
                     i2___ftmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftpack (ARG)
                         i2___lwtoft (ARG)
                           i2___ftpack
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftpack (ARG)
                       i2___lwtoft (ARG)
                         i2___ftpack
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lwtoft
                   i2___ftpack
           i2___awtoft
             i2___ftpack
           i2___ftdiv
             i2___awtoft (ARG)
               i2___ftpack
             i2___ftpack (ARG)
           i2_sprintf
             i2___awdiv
               i2___awmod (ARG)
             i2___ftadd
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
             i2___ftsub
               i2___ftadd
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___lltoft (ARG)
                 i2___ftpack
             i2___fttol
               i2___ftadd (ARG)
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lldiv
             i2___llmod
             i2___lltoft
               i2___ftpack
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2__div_to_l_
             i2__tdiv_to_l_
             i2_fround
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_isdigit
             i2_scale
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2_UpdateSampleRate
           i2_RefreshLine2Ex
             i2_PutsSLCD
               i2_BusySLCD
                 i2_DelayFor18TCY
               i2_WriteDataSLCD
                 i2_DelayFor18TCY
             i2_SLCDSetDDRamAddr
               i2_BusySLCD
                 i2_DelayFor18TCY
               i2_WriteCmdSLCD
                 i2_DelayFor18TCY
       i2_TickGet
         i2_GetTickCopy
       i2_memcmp
     i2_memset
   _ProcessIRInt
     _ReInitTimer
     i2_TickGet
       i2_GetTickCopy
   _TickUpdate
   i2_Delay1KTCYx
   i2_PowerOff
   i2_PowerOn
     i2_Delay10KTCYx
     i2_UpdateMasterVolume
       i2_RefreshLine1
         i2_RefreshLine1Ex
           i2_PutsSLCD
             i2_BusySLCD
               i2_DelayFor18TCY
             i2_WriteDataSLCD
               i2_DelayFor18TCY
           i2_SLCDSetDDRamAddr
             i2_BusySLCD
               i2_DelayFor18TCY
             i2_WriteCmdSLCD
               i2_DelayFor18TCY
       i2_SendVolumeToDevice
         i2_SendDataToDeviceCh
           i2_DbToCode
             i2___ftadd
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___fttol
               i2___ftadd (ARG)
                 i2___ftmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftpack (ARG)
                     i2___lwtoft (ARG)
                       i2___ftpack
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftpack (ARG)
                   i2___lwtoft (ARG)
                     i2___ftpack
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lwtoft
               i2___ftpack
       i2___awtoft
         i2___ftpack
       i2___ftdiv
         i2___awtoft (ARG)
           i2___ftpack
         i2___ftpack (ARG)
       i2_sprintf
         i2___awdiv
           i2___awmod (ARG)
         i2___ftadd
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftge
         i2___ftmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftpack (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
         i2___ftsub
           i2___ftadd
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___lltoft (ARG)
             i2___ftpack
         i2___fttol
           i2___ftadd (ARG)
             i2___ftmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftpack (ARG)
                 i2___lwtoft (ARG)
                   i2___ftpack
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___lwtoft (ARG)
             i2___ftpack
           i2_scale (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftpack (ARG)
               i2___lwtoft (ARG)
                 i2___ftpack
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lldiv
         i2___llmod
         i2___lltoft
           i2___ftpack
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2__div_to_l_
         i2__tdiv_to_l_
         i2_fround
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_isdigit
         i2_scale
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftpack (ARG)
             i2___lwtoft (ARG)
               i2___ftpack
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
     i2_UpdateSampleRate
       i2_RefreshLine2Ex
         i2_PutsSLCD
           i2_BusySLCD
             i2_DelayFor18TCY
           i2_WriteDataSLCD
             i2_DelayFor18TCY
         i2_SLCDSetDDRamAddr
           i2_BusySLCD
             i2_DelayFor18TCY
           i2_WriteCmdSLCD
             i2_DelayFor18TCY
   i2_SaveToFlash
     i2_EraseFlash
     i2_FindEmpty
       i2_ReadFlash
     i2_GetCheckSum
     i2_ReadFlash


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Oct 05 21:35:40 2015

            _s_dacSettingsOriginal 0300                 SaveToFlash@success 013A  
          GetMaxSegSizeOption@wMSS 010A                __end_of_GetCheckSum B302  
                       i2_PowerOff BB04                IPGetHeader@protocol 0136  
                      ?_ARPResolve 0120                       MACGetArray@w 0104  
                       i2_PutsSLCD AE0A                        ?_ARPProcess 0001  
             __size_of_WritePHYReg 0034                                 l59 B866  
             ??i2_UpdateSampleRate 0006             TCPProcess@pseudoHeader 018B  
                     ___awdiv@sign 010B                ___wmul@multiplicand 0110  
                    _InitAppConfig 88A8              ?_CalcIPBufferChecksum 0106  
              i2WriteDataSLCD@data 0001                         i2___awtoft B1AC  
                       i2___ftpack A108                     ?i2_SaveToFlash 0001  
                     __CFG_CP0$OFF 000000                       ___ftadd@exp1 0138  
                     ___ftadd@exp2 0137                         i2___lltoft AEC6  
                   _CalcIPChecksum 8ED4                       ?_MACPutArray 0100  
                    ??_ReInitTimer 0001                       ___ftadd@sign 0136  
                              l257 8BD4                                l353 726E  
                              l345 71B2                                l290 8832  
                              l348 71EA                                l276 9548  
                              l373 AEAC                                l349 7220  
                              l285 87A2                                l542 6FDE  
                              l287 87B4                                l369 AE7E  
                              l546 70F0     GenerateRandomDWORD@dwTotalTime 0120  
                              l477 8E9E                                l399 B4F6  
                              l719 79C2                                l479 8EAE  
                              l882 5C5C                                l884 5C4E  
                              l980 5630                         i2___lwtoft B7E4  
                              l878 5BFE                                l976 54AA  
                              l977 54CE              TCPProcess@optionsSize 018A  
                 ARPResolve@packet 0132                                fsr2 000FD9  
            __size_of_WriteCmdSLCD 0024                       ___awmod@sign 0105  
                   ??_MACGetHeader 0122                                prod 000FF3  
                              wreg 000FE8                       __CFG_FOSC$HS 000000  
                   MACGetArray@len 0102                     MACGetArray@val 0100  
                   DbToCode@volume 0148         __end_of_UpdateMasterVolume 9FB2  
              SendTCP@pseudoHeader 0136                _s_encoderLastUpdate 00D5  
                  ?i2_RefreshLine1 0001                      ?_MACPutHeader 0104  
                  __end_of_ARPInit B702                    __end_of_MACInit 8CD0  
                   ??_MACDiscardRx 0100                __end_of_GetTickCopy B4CA  
                     ___ftdiv@cntr 0115                       ___ftdiv@sign 011A  
                     __CFG_WDT$OFF 000000                               l1031 6866  
                             l1310 0148                               l1224 31E2  
                             l1312 01BC                               l1304 00BC  
                             l1305 00C8                               l1218 3192  
                             l1307 00F0                               l1163 1F80  
                             l2132 A548                               l1237 340C  
                             l1413 1686                               l2133 A4F2  
                             l1414 169E                               l2134 A50E  
                             l1407 1540                               l1351 08A4  
                             l1335 05E0                               l1184 20BA  
                             l2401 BA20                               l1345 06D4  
                             l1506 B496                               l2149 ADD4  
                             l2093 F7CC                               l2165 83F2  
                             l1295 7F14                               l1703 4396  
                             l1368 0D50                               l1712 4556  
                             l1377 0ED8                               l1713 45CE  
                             l1802 758A                               l1715 45E6  
                             l1707 44A6                               l1900 5E70  
                             l1708 44E0                               l1902 5E9E  
                             l2551 4DB8                               l2560 4EA2  
                             l1904 5ECC                               l2545 4D56  
                             l2394 B930                               l1906 5EFA  
                             l1907 5EFC                               l2619 B556  
                             l2580 7CAC                               l2476 5AC2  
                             l2549 4D90                               l2569 4ECC  
                             l2673 988E                               l2594 64CE  
                             l1891 5D8C                               l2683 A2E6  
                             l2587 63DA                               l1892 5DB8  
                             l2588 6426                               l1894 5DE6  
                             l1896 5E14                               l1898 5E42  
                   ?_MACSetReadPtr 0100                               l9710 8B54  
                             l9702 8AEE                               l9712 8B80  
                             l9704 8B02                               l9714 8B94  
                             l9706 8B2E                               l9724 8BBE  
                             l9718 8BA4              __size_ofi2__div_to_l_ 0168  
                             STR_1 FFF7                               STR_2 FFD7  
                             STR_3 FFC6                               l9698 8ADA  
                             STR_4 FFB5                               STR_5 FF93  
                             STR_6 FFA4                               STR_7 FFE8  
                             STR_8 FF60                               STR_9 FF4F  
                             _LATA 000F89                               _LATB 000F8A  
                             _LATC 000F8B                               _LATD 000F8C  
                             _LATE 000F8D                      __CFG_DEBUG$ON 000000  
                             _LOGS FE2B                               i2l59 B8AA  
           i2EraseFlash@flash_addr 000A                       __CFG_STVR$ON 000000  
                  __end_of_TCPInit 5CF4               __end_of_HandleTCPSeg 1832  
                  __end_of_TCPOpen 610A                    __end_of_TCPTick 22F8  
            FormatNetBIOSName@Name 0105                               _main B5FA  
           __end_of_MACSetWritePtr BA92                       ___ftpack@arg 0100  
                     ___ftpack@exp 0103                   i2sprintf@vd_9359 006D  
                   ??_MACIsTxReady 010D                               fsr0h 000FEA  
                             fsr1h 000FE2                               indf0 000FEF  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
         MACMemCopyAsync@WriteSave 010D                       i2___ftadd@f1 002E  
                     i2___ftadd@f2 0031                               pclat 000FFA  
                     i2___ftge@ff1 0001                       i2___ftge@ff2 0004  
           __size_of_WriteDataSLCD 0022           GenerateRandomDWORD@wTime 0130  
                             prodh 000FF4                               prodl 000FF3  
             RestoreFromFlash@addr 011D                               start 01B4  
                    __CFG_IESO$OFF 000000                       i2___ftdiv@f1 000D  
                     i2___ftdiv@f2 0010                       i2___ftdiv@f3 0017  
                    __CFG_FOSC2$ON 000000                    __end_ofi2_scale FFC8  
        __size_of_SLCDSetDDRamAddr 001A                       i2___ftneg@f1 0001  
                     i2___awtoft@c 0009                       _sprintf$9357 0158  
                 MACGetHeader@type 0120                __end_of_CloseSocket 9CAA  
                     ___ftmul@cntr 0121                       i2___ftmul@f1 0015  
                     i2___ftmul@f2 0018                       ___ftmul@sign 0122  
                  _dwInternalTicks 00D1                        ?_TCPRAMCopy 011E  
                     i2___ftsub@f1 003A                       i2___ftsub@f2 003D  
                     i2___fttol@f1 003A                    __end_of_InitrIR AB30  
    __size_ofi2_SendVolumeToDevice 0016                       ___fttol@exp1 0147  
                  __end_of_SendTCP 35FE                       i2___lltoft@c 0009  
                     ___fttol@lval 0143                       _WriteCmdSLCD B7C0  
                 __end_of_MACFlush B3F2                    __end_of_TickGet B74E  
                   ?_InitAppConfig 0001                   ?i2_DelayFor18TCY 0001  
                   TCPGetArray@len 0128             __end_of_CalcIPChecksum 8FCA  
            i2SendDataToDeviceCh@i 0073              i2SendDataToDeviceCh@v 0070  
                      ?i2_DbToCode 0049                        _Delay1KTCYx BA1C  
                  __end_of_PowerOn B0D2          TCPInit@wCurrentETHAddress 013F  
                            l10102 71C2                              l10050 AEB0  
                            l10130 72AE                              l10114 7262  
                            l10202 4F44                              l10212 777E  
             i2FindEmpty@startAddr 0011                              l10062 ABF4  
                            l10070 FFE2                              l10150 4D9E  
                            l10056 ABB8                              l10048 AE96  
                            l11112 7D02                              l10144 4D64  
                            l10232 7806                              l10090 7156  
                            l10066 FFCA                              l11210 96B2  
                            l12002 A070                              l11130 7D8A  
                            l11106 95E4                              l10242 7850  
                            l10218 77B8                              l12020 B414  
                            l10084 713C                              l11116 7D1C  
                            l10172 4E24                              l10156 4DAE  
                            l10236 7824                              l10260 7608  
                            l10094 7188                              l11206 962C  
                            l12006 A0B4                              l11118 7D28  
                            l10174 4E38                              l10166 4DF0  
                            l10246 786E                              l11302 49DC  
                            l12016 B400                              l10096 7190  
                            l11160 AD12                              l11136 7DCE  
                            l11128 7D78                              l12120 2E84  
                            l12104 2DD6                              l10192 4EF6  
                            l10184 4E84                              l10176 4E44  
                            l11400 648E                              l11138 7DD8  
                            l10186 4E98                              l10178 4E50  
                            l10290 7706                              l10282 76CC  
                            l10610 5238                              l11322 3F14  
                            l11084 AFD2                              l12140 2F86  
                            l12132 2F4A                              l12116 2E64  
                            l12124 2EC0                              l12108 2E04  
                            l10292 770C                              l10620 5274  
                            l11260 5E16                              l11252 5DBA  
                            l10700 940A                              l11340 41EE  
                            l11316 3E16                              l12038 9C1C  
                            l11166 AD32                              l13014 5C3C  
                            l11078 AF84                              l10518 A798  
                            l10526 B07E                              l12310 7E6E  
                            l10550 8F0C                              l12230 3396  
                            l12214 32E8                              l12222 331A  
                            l10278 76B0                              l10630 52BA  
                            l11238 5D00                              l11502 97FA  
                            l11422 5954                              l11406 64B0  
                            l11334 40F0                              l11326 3F46  
                            l13110 8A84                              l13102 89FE  
                            l10536 96FE                              l13016 5C50  
                            l10480 B968                              l12312 7E8C  
                            l12136 2F6A                              l10296 7732  
                            l10288 76EE                              l10640 52FE  
                            l10616 525E                              l11272 5EA0  
                            l11264 5E44                              l11256 5DE8  
                            l11504 9812                              l11416 5900  
                            l11408 64C8                              l10712 9448  
                            l11352 B678                              l13120 9A60  
                            l10570 91D8                              l10554 8F44  
                            l11098 95C0                              l12242 3428  
                            l12226 3324                              l12218 3302  
                            l12170 3124                              l12154 30A8  
                            l12162 30EE                              l13042 8CEE  
                            l10634 52D6                              l11282 5F06  
                            l11514 9874                              l11506 9818  
                            l11530 A2CC                              l11522 A26A  
                            l11362 6340                              l12410 F07C  
                            l13130 9AB8                              l10580 921C  
                            l13212 3872                              l13140 361C  
                            l12260 34AC                              l12148 3044  
                            l13052 8D2A                              l13044 8CF4  
                            l10492 AC46                              l10652 534E  
                            l10644 5316                              l10660 5386  
                            l11276 5ECE                              l11268 5E72  
                            l11524 A282                              l11444 5A16  
                            l11436 59BA                              l10716 945C  
                            l10708 943A                              l10740 9DE6  
                            l10732 9DC2                              l12500 F4BE  
                            l12404 F03C                              l10574 91F0  
                            l13206 3858                              l12318 7E9C  
                            l10558 8F82                              l12238 3400  
                            l12190 3252                              l12174 3148  
                            l12166 3106                              l12086 2D98  
                            l13062 8D68                              l13054 8D32  
                            l10486 AC0C                              l11526 A288  
                            l11454 5A66                              l11294 48C4  
                            l12430 F1A6                              l10584 9234  
                            l10592 9276                              l10568 91B2  
                            l14104 7928                              l12336 7EE6  
                            l13064 8D70                              l13072 8D8A  
                            l10656 5366                              l11536 AA4A  
                            l11464 5AA4                              l11368 6380  
                            l10752 9E2C                              l10744 9E0A  
                            l10736 9DD4                              l10728 9DA0  
                            l12512 F530                              l12440 F1F2  
                            l12424 F138                              l10586 924E  
                            l10578 920A                              l10498 B3C4  
                            l13250 3A6C                              l13218 3880  
                            l12362 7F5E                              l12098 2DB0  
                            l13066 8D78                              l10666 53A4  
                            l11482 992C                              l11538 AA62  
                            l11466 5ABC                              l11458 5A82  
                            l10690 93DA                              l10738 9DE0  
                            l12610 F974                              l12530 F5EA  
                            l12434 F1B8                              l12418 F106  
                            l13090 89D0                              l10588 926A  
                            l10596 9288                              l14116 7984  
                            l14036 8892                              l12348 7F1E  
                            l12364 7F6A                              l12276 35A0  
                            l12188 320E                              l13500 0C2E  
                            l13316 0142                              l14220 1C9C  
                            l14212 1C72                              l11396 6472  
                            l10684 93B2                              l10748 9E18  
                            l12516 F598                              l12620 F9A0  
                            l12428 F188                              l12390 ADE8  
                            l14046 7F7A                              l14038 88A0  
                            l13246 3A64                              l13166 370A  
                            l13182 37C0                              l13502 0C32  
                            l13422 05EA                              l13414 05CC  
                            l13406 05B2                              l11478 98E6  
                            l12630 F9E6                              l12534 F63A  
                            l12446 F20E                              l12438 F1BE  
                            l14136 B270                              l11920 81F0  
                            l13280 3C54                              l13512 0C9E  
                            l13504 0C36                              l13432 0652  
                            l13360 02AA                              l14304 1FB2  
                            l14312 1FD8                              l14240 1D70  
                            l14216 1C7A                              l12712 7C64  
                            l11488 9970                              l10696 93F8  
                            l12640 FA4A                              l12608 F966  
                            l12480 F3B8                              l12472 F34A  
                            l12456 F272                              l14066 8000  
                            l13186 37C6                              l13610 1120  
                            l13450 07A2                              l13434 0658  
                            l14330 211A                              l14314 2018  
                            l14170 18D4                              l10698 9404  
                            l12634 FA1A                              l12626 F9BE  
                            l12618 F994                              l12538 F65A  
                            l12546 F67A                              l14076 805C  
                            l13284 3C5A                              l13700 17B2  
                            l13444 0794                              l13452 07B4  
                            l13364 02B6                              l13348 0272  
                            l13356 0286                              l14332 2128  
                            l14308 1FCA                              l14252 1E52  
                            l14164 1884                              l14340 213A  
                            l12652 FAC6                              l12556 F6BA  
                            l12484 F3E4                              l12396 F020  
                            l13710 17EE                              l13606 10E8  
                            l13630 120C                              l13550 0E0C  
                            l13518 0CD6                              l13470 09DA  
                            l14270 1F3A                              l14246 1DBE  
                            l14182 197E                              l14158 1868  
                            l12734 AF50                              l12654 FAD2  
                            l12646 FA82                              l12582 F7D0  
                            l12566 F76E                              l14430 5F90  
                            l15302 43D0                              l15400 6F36  
                            l14088 80AC                              l13712 17F6  
                            l13720 1808                              l13480 0ACA  
                            l13392 04E4                              l13368 0328  
                            l14336 2132                              l14176 1924  
                            l12656 FADC                              l12664 FB06  
                            l12648 FA8E                              l12592 F804  
                            l12568 F77C                              l12576 F79C  
                            l12496 F492                              l12488 F42A  
                            l12672 FB3C                              l14432 5F9C  
                            l11954 6FD2                              l15402 6F4A  
                            l14098 78F2                              l13722 1824  
                            l13650 1490                              l13538 0DDA  
                            l13386 0424                              l14266 1F22  
                            l14258 1E86                              l12674 FB62  
                            l14442 5FCC                              l14426 5F70  
                            l14506 546E                              l15306 4408  
                            l13812 B2F0                              l12908 B156  
                            l13660 154A                              l13636 127C  
                            l13628 1202                              l13476 0A76  
                            l13484 0B20                              l14284 1F8A  
                            l14276 1F72                              l14268 1F26  
                            l12692 7C04                              l12596 F856  
                            l13900 83C6                              l14452 6048  
                            l14540 55DC                              l15340 4528  
                            l15316 446E                              l15260 4222  
                            l11982 70EA                              l13806 B2D8  
                            l12918 A7FC                              l13662 1588  
                            l13654 14AE                              l13646 13D2  
                            l13670 166A                              l13558 0E46  
                            l13566 0E9E                              l13398 055C  
                            l14382 6B3E                              l14358 22F0  
                            l12686 7BCA                              l13750 A1E8  
                            l13742 A1D4                              l13734 A1C2  
                            l13726 A1B2                              l14462 60EA  
                            l15334 4516                              l16046 B604  
                            l11968 705C                              l13664 1592  
                            l13648 1458                              l13496 0C22  
                            l14288 1F98                              l13920 840E  
                            l14464 60FA                              l14472 6106  
                            l14552 5662                              l14528 552C  
                            l15352 45DE                              l16056 B61E  
                            l11994 B190                              l13690 176E  
                            l13594 0FA8                              l14298 1FA6  
                            l13826 9F7C                              l13842 74CE  
                            l13922 8436                              l14570 6710  
                            l14482 B6BE                              l15370 46DC  
                            l15338 4524                              l15362 4650  
                            l11988 B172                              l11996 B196  
                            l13684 16D4                              l14396 6C16  
                            l12964 8794                              l13860 7576  
                            l14580 67BE                              l14468 6100  
                            l15356 4618                              l15364 4692  
                            l15268 426C                              l12982 A928  
                            l12974 A8EC                              l15390 6EAA  
                            l12958 8776                              l14902 9B1A  
                            l13766 A20A                              l13758 A1FA  
                            l13854 753A                              l14654 4AAE  
                            l15286 4350                              l12984 A932  
                            l13696 1782                              l13776 A21E  
                            l13856 754E                              l13848 7524  
                            l14680 4CAC                              l14584 67D6  
                            l15376 46EC                              l12978 A90A  
                            l12986 A936                              l12994 5B2C  
                            l14906 9B46                              l13778 A242  
                            l13890 8372                              l13874 9D44  
                            l14674 4BC8                              l14908 9B4C  
                            l13868 9CAC                              l13876 9D50  
                            l14588 6806                              l14918 9BCE  
                            l13894 838C                              l14686 4CD8  
                            l14880 A5BA                              l14892 A5EA  
                            l14884 A5CA                              l14876 A5A8  
                            l14888 A5DA                    __end_of_SyncTCB 96F6  
                            ?_main 0001                   __end_of_LFSRRand 97CC  
                  __end_of___awdiv 9466                    __end_of___ftadd 4F6A  
                            STR_10 FF71                              STR_11 FF3E  
                            STR_12 FF2D                              STR_13 FF82  
                  __end_of___awmod 9E36                    __end_of___ftdiv 7CE8  
                            _CMCON 000FB4                    __end_of___ftneg B564  
                     i2___lwtoft@c 0009                    __end_of___lldiv 98A0  
                            u11020 AC3C                              u11030 AC6C  
                            u11027 AC32                              u11037 AC62  
                  __end_of___ftmul 78BA                              u10190 ABE6  
                            u10360 BADC                              _T0CON 000FD5  
                            u10601 7796                              u10371 4D02  
                            u12211 6318                              u12300 58D4  
                  ___awdiv@divisor 0108                              u10197 ABDC  
                            u10381 4D22            __size_ofi2_WriteCmdSLCD 0022  
                            u12231 6358                              u12320 5928  
                            u10641 75E0                    __end_of___llmod A2F8  
                            u12305 58C8                    __end_of___ftsub B3BA  
                            u10660 7634                              u10581 775C  
                  __end_of___fttol 7744                              u12325 591C  
                            u13055 706E                              u10665 762A  
                            u14041 7BA8                              u14211 8788  
                            u14061 7BE2                              u16001 804E  
                            u13425 333E                              u13265 306E  
                            u16011 8072                              u11915 95D2  
                  ??_ARPIsResolved 0104                              u15125 0CC4  
                            u15045 0A90                              u15055 0AE4  
                            u14415 9A82                              u14505 37B8  
                            u15225 0E3C                              u14185 86C2  
                            u15235 0E94                              u14195 86EC  
                            u14605 3A08                              u15175 0D88  
                            u16240 1C8E                              u13680 F2C2  
                            u16305 1E48                              u13665 F24C  
                            u15515 1754                              u14395 8A18  
                            _ERDPT 000F7A                              u15525 17D8  
                            u14725 017A                              u13685 F2B6  
                            u14830 04DE                              u16246 1C90  
                            u15640 9CE0                              u16600 B6D4  
                            u14825 046A                              u16505 6B34  
                            u15625 7560                              u16275 1D36  
                            u15660 9D28                              u14935 0610  
                            u14775 02D0                              u15647 9CD6  
                            u14880 05AC                              u14955 077C  
                            u15667 9D1E                              u16811 4CBE  
                            u15685 832E                              u15695 834A  
           ??i2_SendDataToDeviceCh 0054                              u15971 7FE6  
                            u14995 0920                              u17661 6F1C  
                            u16790 4BBC                              u17671 6F2E  
                            _MICMD 000EB2                              u15995 8030  
                            u16796 4BBE                              u18657 BA22  
                            u18667 B938                              _ERXND 000EEA  
                            _MIRDH 000EB9                              _ETXND 000EE6  
                            _MIRDL 000EB8                              _ERXST 000EE8  
                  ___awdiv@counter 010A                              _EWRPT 000EE2  
                            _ETXST 000EE4                              _ISRLP 0008  
                            _TMR0H 000FD7                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _PORTC 000F82  
                     i2__div_to_l_ 7A28                              _TRISA 000F92  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                              _TRISE 000F96  
                            _TRISF 000F97                              _TRISG 000F98  
                            _Cache 00BD              __size_of_Delay10KTCYx 001C  
       __size_of_FormatNetBIOSName 0082                              _MyTCB 01B9  
                       i2memcmp@s1 0001                         i2memcmp@s2 0003  
                     ___lltoft@exp 0110                     __CFG_FCMEN$OFF 000000  
                 __end_of_TCPClose B82A           i2UpdateMasterVolume@dvol 0059  
                 __end_of_TCPFlush B23A                     ??_MACPutHeader 0109  
                       _EraseFlash A4DA                         i2isdigit@c 0003  
                    ___awtoft@sign 010B                         i2memset@p1 0001  
                       SendTCP@len 0134                              _flags 01B6  
               __size_of_TCPServer 04E4                    __end_of_dpowers FEB3  
              __end_of_ReInitTimer BA58                         i2scale@scl 002A  
                      ?_IRTimerInt 0001                        ?_TCPProcess 017E  
                 __end_of_DbToCode 5448                              _resOK 00F7  
                            _scale 3C5E               CalcIPChecksum@buffer 0100  
                  __end_of_isdigit B682              TCPInit@ptrBaseAddress 0139  
                    ___ftpack@sign 0104            __size_of_TCPIsConnected 002A  
                            _swapl B27E                              _swaps B8F2  
          IPGetHeader@CalcChecksum 013E                __size_of_ARPResolve 0102  
                      ?i2_BusySLCD 0001                __size_of_ARPProcess 0146  
                            tablat 000FF5                   __end_ofi2___ftge A722  
                TCPRAMCopy@wLength 0124                 i2Delay10KTCYx@unit 0002  
               __size_ofi2_TickGet 0026                   __end_ofi2___wmul B79A  
            RestoreFromFlash@chSum 011C                  ?_UpdateSampleRate 0001  
                            status 000FD8              __end_of_SETTINGS_ADDR FF0B  
             i2ReadFlash@num_bytes 0005                    ?_MACSetWritePtr 0100  
                  __end_of_sprintf FB78                 __size_ofi2_PowerOn 004A  
                      _GetCheckSum B2C0                       ?_IPGetHeader 0132  
                 __end_ofi2_memcmp A43C              i2ReadFlash@flash_addr 0009  
                   SaveToFlash@cmp 0138                   __end_ofi2_memset B6AE  
                 __end_ofi2_fround 51E0            MACSetReadPtrInRx@ReadPT 0104  
                    i2___ftdiv@exp 001A        MACDiscardRx@NewRXRDLocation 0100  
               __size_ofi2___awdiv 00A4                 ??_UpdateSampleRate 0105  
                TCPRAMCopy@ptrDest 011E                 __size_ofi2___ftadd 01AC  
                  ARPProcess@smARP 01B3                 __size_ofi2___awmod 0090  
               __size_ofi2___ftdiv 00E2                      _sprintf$10835 0155  
               __size_ofi2___ftneg 0026                 __size_ofi2___lldiv 0082  
               __size_ofi2___ftmul 00F0                 __size_ofi2___llmod 0066  
               __size_ofi2___ftsub 0036                 __size_ofi2___fttol 00F6  
                   __CFG_ETHLED$ON 000000               GenerateRandomDWORD@w 011E  
                     ARPPut@packet 011E                       __end_of_LOGS FE8B  
                  __initialization A9C2                  i2___lldiv@divisor 0005  
                 _MACIsMemCopyDone BAD4               i2ReadFlash@startaddr 0001  
               _FindMatchingSocket 35FE                       __end_of_main B628  
                i2___lldiv@counter 000D                      i2___ftmul@exp 001E  
                      ?i2_PowerOff 0001                   __end_of_BusySLCD B86E  
              _GenerateRandomDWORD 6F70               _s_lastIRCodeReceived 00D9  
             _SerializedMACAddress FF21                        ?i2_PutsSLCD 0002  
               _SendVolumeToDevice B9AE                    ??i2_SaveToFlash 0029  
           ??_CalcIPBufferChecksum 0108            MACSetReadPtrInRx@offset 0100  
                     _Delay10KTCYx B92C              __size_of_DelayPORSLCD 0008  
                  ?_CalcIPChecksum 0100                 __size_ofi2_isdigit 0020  
                    ??_SaveToFlash 0128                  ?i2_RefreshLine1Ex 0004  
                ?i2_RefreshLine2Ex 0004                        ?i2___awtoft 0009  
                      ?i2___ftpack 0001                  TCPIsPutReady@hTCP 0125  
                _MACCalcRxChecksum A7AE                   __end_of_OpenSLCD A602  
                      ?i2___lltoft 0009                             ??_main 01B3  
                    ___fttol@sign1 0142                ?_FindMatchingSocket 0128  
                  TCPGetArray@hTCP 012E                 ??i2_RefreshLine1Ex 0006  
               ??i2_RefreshLine2Ex 0006                     _s_numTicksDiff 0400  
                      ?i2___lwtoft 0009                   __end_of_TickInit BA44  
          __size_ofi2_Delay10KTCYx 0016                      __activetblptr 000003  
                    _WriteDataSLCD B82A                        _GetTickCopy B496  
                       i2sprintf@c 0086                         i2sprintf@f 004B  
                   _s_numTicksPrev 00DD                 ?_MACCalcRxChecksum 0128  
                    ?_LFSRSeedRand 010F                             ?_ISRLP 0001  
                        ??_ARPInit 0100                 __size_of_FindEmpty 0184  
              ?_SendVolumeToDevice 0001                          ??_MACInit 0104  
               __size_ofi2_sprintf 0A8A                    CalcIPChecksum@i 0106  
             __size_of__tdiv_to_l_ 01E0                             ISRLP@d 00B2  
                 __end_of_PowerOff BB04                   FindEmpty@tmpAddr 0126  
                TCPServer@cmdBytes 0187                 __size_of_Configure 0068  
                 __end_of_PutsSLCD AC74                    ??_MACSetReadPtr 0102  
                TCPServer@checksum 0186                          ??_TCPInit 0132  
              _GetMaxSegSizeOption 7E32                          ??_TCPOpen 015E  
                        ??_TCPTick 0157               ?_GenerateRandomDWORD 0118  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                     _IR_VOLUME_DOWN FF0F  
                 ___llmod@dividend 0100                             ?_scale 0123  
              ??_MACCalcRxChecksum 012C                             _EECON2 000FA7  
              __size_of_TCPRAMCopy 00EA                       ?_TCPGetArray 0126  
                           _EDMAND 000EF2                   ___awdiv@dividend 0106  
                           _EDMAST 000EF0              __end_of_TCPIsGetReady 9B16  
                 __end_of___awtoft AF7C                   __end_of___ftpack 8BCC  
                           ?_swapl 0100                             _MAADR1 000E84  
                           _MAADR2 000E85                             ?_swaps 0100  
                           _MAADR3 000E82                             _MAADR4 000E83  
                           _MAADR5 000E80                             _MAADR6 000E81  
      __size_of_ChangeMasterVolume 003E                             _MACON1 000EA0  
                           _MACON3 000EA2                             _MACON4 000EA3  
                           _MAIPGH 000EA7                             _ERDPTH 000F7B  
                           _MAIPGL 000EA6                             _ERDPTL 000F7A  
                           _MACGet BAEC                   __end_of___lltoft AAC0  
                           _ARPPut 81F0                             i2l2006 9370  
                           _MACPut BAC6                             i2l2132 AB88  
                EraseFlash@endaddr 0104                             i2l2133 AB46  
                           i2l2134 AB60                             i2l2401 BAB8  
                           i2l1506 B4FE                             i2l2093 2A1A  
                           i2l2149 B000                             i2l2165 9A0C  
         __size_ofi2_WriteDataSLCD 0020                             i2l1802 8544  
                           i2l1900 662E                             i2l1902 6656  
                           i2l1670 011E                             i2l2560 6D3A  
                           i2l1904 667E                             i2l2545 6C62  
                           i2l1906 66A6                             i2l2394 B9DC  
                           i2l1907 66A8                             i2l2619 B7B2  
                           i2l2580 9516                             i2l2476 7B7E  
                           i2l2549 6C8E                             i2l1669 011A  
                           i2l2569 6D56                             i2l2673 A9B0  
                           i2l2594 81DE                             i2l1891 6568  
                           i2l2683 AD98                             i2l2587 814C  
                           i2l1892 658E                             i2l2588 8174  
                           i2l1894 65B6                             i2l1896 65DE  
                           i2l1898 6606                             _INTCON 000FF2  
                           _TABLAT 000FF5                             i2l9800 6C70  
                           i2l9650 A118                             i2l9662 A164  
                           i2l9654 A126                             i2l9830 6CF8  
                           i2l9822 6CCC                             i2l9806 6C9C  
                           i2l9902 9176                             i2l9664 A182  
                           i2l9656 A130                             i2l9840 6D2A  
                           i2l9832 6D00                             i2l9666 A18C  
                           i2l9658 A14E                             i2l9842 6D34  
                           i2l9834 6D08                             i2l9828 6CEE  
                           i2l9916 8FF4                             i2l9934 9060  
                           i2l9848 6D72                             i2l9952 90AE  
                           i2l9944 9088                             i2l9858 6DA2  
                           i2l9874 910C                             i2l9946 9094  
                           i2l9938 9070                             i2l9892 914E  
                           i2l9868 90E6                             i2l9948 9098  
                           i2l9888 913E                             i2l9898 9166  
                        ??i2_scale 0027                   __end_of___lwtoft B656  
                 ??_RefreshLine1Ex 0105                   ??_RefreshLine2Ex 0105  
                _MACPutHeader$1874 0109                __size_ofi2_DbToCode 01D4  
                      _CloseSocket 9BE0               ??_FindMatchingSocket 012C  
               __size_of_ReadFlash 0060                             u980_41 6C2C  
                           u981_41 6C40                         _TickUpdate B948  
            __end_of_TCPDisconnect 8DD2              __end_of_IPSetRxBuffer B92C  
             ??_SendVolumeToDevice 016C             __size_ofi2__tdiv_to_l_ 0132  
                        ??_InitrIR 0108               __size_of_MACGetArray 005C  
                     _DelayPORSLCD BAF6                       ?_IPPutHeader 010E  
                        ??_SendTCP 0129                          ??_TickGet 0104  
                   __CFG_XINST$OFF 000000               __end_of_MACGetHeader 88A8  
                IPPutHeader@header 0113                   __end_of__powers_ FF01  
             ?_GetMaxSegSizeOption 0108                          ??_PowerOn 0182  
                    _s_dacSettings 02D3                    ??_InitAppConfig 011E  
                           ___ftge 98A0                          ??_SyncTCB 0126  
                           ___wmul B42A                       ?i2_FindEmpty 0011  
       __end_of_SendDataToDeviceCh 5F12                          ??___awdiv 010A  
                __end_of_TCPServer 4704                          ??___ftadd 0133  
                        ??___awmod 0104                  IPPutHeader@remote 010E  
                        ??___ftdiv 0112                          ??___ftneg 0103  
                        ??___lldiv 0108          __end_of_MACCalcRxChecksum A836  
                        ??___ftmul 011A                          ??___llmod 0108  
                        ??___ftsub 013F                          ??___fttol 013D  
             __end_of_MACDiscardRx B164                    WritePHYReg@Data 0100  
                      SendTCP@wVal 0131                       ?_TCPPutArray 0157  
              __size_of_IRTimerInt 003E                __size_of_TCPProcess 01AE  
            __end_of_TCPIsPutReady 8AC2                             _memcmp 9CAA  
                           _memcpy AB9E                             _memset B3F2  
                           _fround 4704              __end_ofi2_Delay1KTCYx BAC6  
                           clear_0 A9CA                             clear_1 A9DC  
                           clear_2 A9E8                             clear_3 A9F4  
                 ___awdiv@quotient 010C        i2WriteBlockFlash@num_blocks 0005  
                  ___awmod@divisor 0102                     sprintf@vd_9359 0162  
              __size_ofi2_BusySLCD 0022              StackTask@cIPFrameType 01B1  
                  ___awmod@counter 0104                  __end_ofi2_TickGet B774  
                   ?_WriteDataSLCD 0001                     ??_LFSRSeedRand 0113  
                   i2___awdiv@sign 000C                             _strupr B164  
        __size_of_RestoreFromFlash 01A8              ___ftmul@f3_as_product 011E  
                      _ReInitTimer BA44                  __end_ofi2_PowerOn B11C  
    GenerateRandomDWORD@wLastValue 012A               __end_of_MACIsTxReady AFD6  
       GetMaxSegSizeOption@vOption 010D                 __size_of_StackInit 0044  
                        ??_isdigit 0100           __end_of_MACGetFreeRxSize 9620  
               __size_of_StackTask 00CA                  __end_ofi2___awdiv A39C  
                __end_ofi2___ftadd 6DC8                  __end_ofi2___awmod A692  
                __end_ofi2___ftdiv 9548                     i2___ftadd@exp1 0039  
                   i2___ftadd@exp2 0038                  __end_ofi2___ftneg B7C0  
                __end_ofi2___lldiv A9C2                  __end_ofi2___ftmul 91B0  
                __end_ofi2___llmod ADAA                  __end_ofi2___ftsub B496  
                __end_ofi2___fttol 90C0               __size_of_MACPutArray 0030  
                   i2___ftadd@sign 0037                       __mediumconst FE2A  
              __end_of_SaveToFlash 4CEA             __end_of_IR_VOLUME_DOWN FF18  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                      ?_RefreshLine1 0001  
                     ?i2_ReadFlash 0001                        ?_EraseFlash 0100  
            ??_GenerateRandomDWORD 011C              __size_of_HandleTCPSeg 1832  
                   i2___awmod@sign 0006                             swapl@v 0100  
                           swaps@b 0102                  _s_numTicksDiffIdx 00E9  
                           swaps@t 0103                             swaps@v 0100  
                        ??_sprintf 014F                   ARPProcess@Target 00B3  
           SendDataToDeviceCh@mask 016A                __size_ofi2_PowerOff 0006  
         i2SLCDSetDDRamAddr@DDaddr 0002                __size_ofi2_PutsSLCD 0060  
         __size_of_MACMemCopyAsync 01A2                    SaveToFlash@addr 0134  
                __end_ofi2_isdigit B8D2                     IPGetHeader@len 0138  
               MACGetHeader@header 0124                          ?_MACFlush 0001  
                   i2___ftdiv@cntr 0016             i2ReadFlash@flash_array 0007  
                       __accesstop 0060            __end_of__initialization AA3C  
                   i2___ftdiv@sign 001B               i2GetCheckSum@dataLen 0003  
                       ___ftadd@f1 012D                         ___ftadd@f2 0130  
              __size_ofi2___awtoft 0048                __size_ofi2___ftpack 00A8  
                 ARPProcess@packet 0120                         ___ftge@ff1 0100  
                       ___ftge@ff2 0103              __end_ofi2_GetCheckSum B5C8  
                    i2sprintf@ccnt 0071                      i2sprintf@_val 0076  
                    i2sprintf@flag 007B                 FormatNetBIOSName@i 0107  
              __size_ofi2___lltoft 005C                      i2sprintf@fval 0081  
               MACGetHeader@remote 011E                          MACFlush@i 010C  
        HandleTCPSeg@wMissingBytes 017C      __size_ofi2_UpdateMasterVolume 009E  
                    i2sprintf@prec 0084                         ___ftdiv@f1 010C  
                       ___ftdiv@f2 010F                         ___ftdiv@f3 0116  
                __end_of_FindEmpty 75C8                          ?_LFSRRand 0100  
              __size_ofi2___lwtoft 0024              __end_of_SwapARPPacket A060  
                __end_ofi2_sprintf 2D82                         ___ftneg@f1 0100  
                    __end_of_ISRLP 01B4                         ___awtoft@c 0108  
                   i2___ftpack@arg 0001                   _SLCDSetDDRamAddr B964  
            __end_of_ProcessIRCode 7444                 i2__tdiv_to_l_@exp1 000F  
                i2___llmod@divisor 0005                     i2___ftpack@exp 0004  
               i2__tdiv_to_l_@cntr 000E                  i2___llmod@counter 0009  
               i2__tdiv_to_l_@quot 000A                         ___ftmul@f1 0114  
                       ___ftmul@f2 0117              ??_GetMaxSegSizeOption 010A  
                       ___ftsub@f1 0139                         ___ftsub@f2 013C  
                       ___fttol@f1 0139                          MACPut@val 0100  
                   __pcstackCOMRAM 0001                     TCPIsPutReady@i 0126  
               i2___lldiv@dividend 0001                  __end_of_Configure ACDC  
         __size_of_WriteBlockFlash 0128               __end_of_MACPutHeader A7AE  
                     __pidataBANK0 BAE0                       __pidataBANK1 BB0A  
                        ?_TCPClose 0001                       ??_ARPResolve 0122  
                        ?_TCPFlush 0001                         ___lltoft@c 0108  
                   i2_sprintf$9357 0063                       ??_ARPProcess 0120  
                    _isdigit$10242 0101                     i2___ftmul@cntr 0022  
                    __end_of_scale 4220                     i2___ftmul@sign 0023  
          WriteBlockFlash@saddress 010D                          ?_DbToCode 0148  
                    __end_of_swapl B2C0                      __end_of_swaps B910  
              SendDataToDeviceCh@i 0169                SendDataToDeviceCh@v 0156  
               HandleTCPSeg@dwTemp 016B                     i2___fttol@exp1 0048  
                    ??_SyncTCBStub 011E                         ___lwtoft@c 0108  
                   i2___fttol@lval 0044                     i2_WriteCmdSLCD B86E  
                     _HandleTCPSeg 0000                          ?i2___ftge 0001  
                __end_of_ReadFlash AE0A                  FindEmpty@addrStop 011C  
                 ??i2_RefreshLine1 0006                          ?i2___wmul 000F  
                    i2__tdiv_to_l_ 80BE        i2WriteBlockFlash@write_byte 000C  
            __end_ofi2_GetTickCopy B532                         __div_to_l_ 58AC  
                          ??_ISRLP 0098                     ??_RefreshLine1 0105  
                        ?i2_memcmp 0001                          ?i2_memset 0001  
                        ?i2_fround 0024                          LFSRRand@i 010E  
                FindEmpty@blockEnd 0120            WriteBlockFlash@startptr 0108  
                  TCPPutArray@hTCP 0165              __end_of_SwapTCPHeader 6300  
                  __div_to_l_@exp1 010F                    __div_to_l_@cntr 010E  
                     sprintf@integ 0168                     _TCPIsConnected B6AE  
                  WriteCmdSLCD@cmd 0100                    TCPPutArray@data 0157  
                   TCPInit@wRXSize 013D                            ??_scale 0126  
                   i2___lltoft@exp 0011                     TCPInit@wTXSize 013B  
           __size_of_DelayFor18TCY 0032                    __div_to_l_@quot 010A  
                     sprintf@width 0172               StackTask@tempLocalIP 01AD  
                   TCPInit@vMedium 0141                          ISRLP@diff 00AA  
               i2___lldiv@quotient 0009                            ??_swapl 0104  
                          ??_swaps 0102                        __Identifier 00E7  
                       __pbssBANK0 00B3                         __pbssBANK1 01B3  
                       __pbssBANK2 0200                            ?_MACGet 0001  
                       __pbssBANK4 0400                          ?_BusySLCD 0001  
                          ?_ARPPut 011E                            ?_MACPut 0001  
           __size_of_TickGetDiv256 0026                        i2sprintf@ap 0067  
                      i2sprintf@vd 0069                        i2sprintf@sp 0049  
                 i2__tdiv_to_l_@f1 0001                   i2__tdiv_to_l_@f2 0004  
               __end_of_ARPResolve 8ED4                  WriteDataSLCD@data 0100  
                       ??_MACFlush 0108                 __end_of_ARPProcess 80BE  
       __end_ofi2_SLCDSetDDRamAddr BA1C                  i2Delay1KTCYx@unit 0001  
                      ?_TickUpdate 0001                          ?_OpenSLCD 0001  
              ReadFlash@flash_addr 0108                      __div_to_l_@f1 0100  
                    __div_to_l_@f2 0103                 _UpdateMasterVolume 9EF8  
                       ??_LFSRRand 0102                  __end_of_StackInit B27E  
                        ?_TickInit 0001     FindMatchingSocket@partialMatch 0136  
                __end_of_StackTask 9BE0                   i2GetCheckSum@res 0004  
                ??i2_WriteDataSLCD 0001         i2WriteBlockFlash@startaddr 0001  
             __size_of_IPGetHeader 016E                      ??_WritePHYReg 0102  
                     ??_TCPRAMCopy 0126                            ?___ftge 0100  
                        ?_PowerOff 0001                __size_of_EraseFlash 0094  
                       ??_TCPClose 0157                            ?___wmul 010E  
                       ??_TCPFlush 0156                  i2_WriteBlockFlash 9974  
                  _s_irCodeByteIdx 01B7                          ?_PutsSLCD 0101  
       __size_of_MACCalcRxChecksum 0088                ?_UpdateMasterVolume 0001  
             ProcessIRCode@numTick 0093             __end_ofi2_WriteCmdSLCD B890  
   HandleTCPSeg@bSegmentAcceptable 0164                    ??_WriteDataSLCD 0100  
                     ??i2_DbToCode 004B                         ??_DbToCode 014A  
                     ?_Delay1KTCYx 0001                            ?_memcmp 0100  
                          ?_memcpy 0114                            ?_memset 0100  
      __size_ofi2_UpdateSampleRate 0088                            ?_fround 0123  
               ?i2_WriteBlockFlash 0001                          ?___awtoft 0108  
                          _EDMADST 000EF4                        _SaveToFlash 4A30  
                        ?___ftpack 0100                          ?___lltoft 0108  
                   ?i2__tdiv_to_l_ 0001                            _MABBIPG 000EA4  
                   i2_Delay10KTCYx B9DA                         ??i2___ftge 0007  
                          u1001_41 90D0                            u1003_41 90F6  
                        ?___lwtoft 0108                            u1007_41 8FDA  
                          ?_strupr 0100                         ??i2___wmul 0013  
                          u1165_41 80CE                            _EPKTCNT 000ED9  
                          u1167_41 80F8                            _ARPInit B6D8  
                          u1296_41 9476                            _MACInit 8BCC  
                          u1298_41 949C                            _MAMXFLH 000EAB  
                          i2l11020 B8CA                            _MAMXFLL 000EAA  
                          i2l11030 A962                            i2l10312 AE0C  
                          i2l11032 A96E                            i2l10306 BA08  
                          i2l11042 A9A2                            i2l11034 A972  
                          i2l11050 AD56                            i2l10332 68DA  
                          i2l11052 AD62                            i2l10420 A35A  
                          i2l10412 A33C                            i2l10318 AE40  
                          i2l10342 6906                            i2l11054 AD66  
                          i2l10430 A37A                            i2l10422 A35E  
                          i2l10406 A31C                            i2l10352 693A  
                          i2l11064 AECC                            i2l10362 696A  
                          i2l10338 68F6                            i2l11058 AD8A  
                          i2l11066 AED8                            i2l10418 A352  
                          i2l10434 A384                            i2l10450 A626  
                          i2l10356 694E                            i2l10460 A658  
                          i2l10374 69A2                            i2l10366 697A  
                          i2l10382 69C6                            i2l10438 A392  
                          i2l10462 A65C                            i2l10470 A67A  
                          i2l10454 A642                            i2l10800 6658  
                          i2l10378 69B2                            i2l10810 66B2  
                          i2l10474 A688                            i2l10466 A670  
                          i2l10458 A650                            i2l11602 246A  
                          i2l10388 69DC                            i2l10804 6680  
                          i2l10830 519A                            i2l10822 50C2  
                          i2l11702 28AA                            i2l11614 24BA  
                          i2l11606 2470                            i2l10920 7B56  
                          i2l11640 25DC                            i2l11624 251E  
                          i2l11608 249E                            i2l10906 7B12  
                          i2l10850 FD7A                            i2l11802 2C42  
                          i2l11706 28C4                            i2l11714 28E2  
                          i2l10780 6590                            i2l10916 7B46  
                          i2l10844 FCBE                            i2l11820 2CE0  
                          i2l11724 291C                            i2l11652 266A  
                          i2l11572 2330                            i2l11564 2314  
                          i2l10766 64EC                            i2l10926 7B6E  
                          i2l10942 8112                            i2l10862 FEE2  
                          i2l10854 FDA4                            i2l11822 2CEC  
                          i2l11814 2CA0                            i2l11750 2A1E  
                          i2l11734 29BE                            i2l10792 6608  
                          i2l10784 65B8                            i2l10928 7B7A  
                          i2l10936 80E8                            i2l11824 2CF6  
                          i2l11832 2D1E                            i2l11816 2CAC  
                          i2l11808 2C6C                            i2l11760 2A50  
                          i2l11736 29CC                            i2l11744 29EA  
                          i2l11680 27AE                            i2l11664 2716  
                          i2l11656 26B0                            i2l11648 2644  
                          i2l11592 2400                            i2l11840 2D4C  
                          i2l10970 81A6                            i2l11842 2D6C  
                          i2l11578 236C                            i2l11586 23D4  
                          i2l16010 0140                            i2l10796 6630  
                          i2l10788 65E0                            i2l10884 7AA0  
                          i2l10980 81CE                            i2l10868 FF9E  
                          i2l11764 2AA2                            i2l11684 2816  
                          i2l11668 273C                            i2l11596 243E  
                          i2l12804 A87C                            i2l10878 7A64  
                          i2l10982 81DA                            i2l10974 81B6  
                          i2l11598 2458                            i2l12750 A4AA  
                          i2l12814 A88C                            i2l16006 0136  
                          i2l11856 B1D0                            i2l11872 94B2  
                          i2l10992 A6F2                            i2l11776 2B98  
                          i2l12816 A8B0                            i2l15240 936A  
                          i2l16040 0178                            i2l16024 015E  
                          i2l16016 014A                            i2l16008 013E  
                          i2l11866 948C                            i2l10898 7AE2  
                          i2l11794 2BEE                            i2l11778 2BA6  
                          i2l11786 2BC4                            i2l11698 2868  
                          i2l15234 9354                            i2l15242 9372  
                          i2l16034 016E                            i2l16026 0162  
                          i2l11892 94F0                            i2l10988 A6C2  
                          i2l11788 2BD0                            i2l12780 A852  
                          i2l12772 A844                            i2l12764 A838  
                          i2l16028 0164                            i2l10998 A71E  
                          i2l11798 2C12                            i2l15414 56DE  
                          i2l15256 B33C                            i2l15440 5878  
                          i2l14722 72FA                            i2l15434 57C8  
                          i2l12796 A870                            i2l12788 A862  
                          i2l14812 99B0                            i2l13790 B360  
                          i2l14742 742A                            i2l14734 735E  
                          i2l14750 84B6                            i2l14822 99EC  
                          i2l15446 589E                            i2l14728 7328  
                          i2l14816 99C2                            i2l14738 738A  
                          i2l14762 850C                            i2l14842 9A24  
                          i2l13796 B378                            i2l14852 B69C  
                          i2l14764 8518                            i2l14756 84F8  
                          i2l14844 9A3C                            i2l13982 A39E  
                          i2l13990 A422                            i2l14848 B68C  
                          i2l14768 8538                            i2l14784 B5BC  
                          i2l13978 B012                            i2l14778 B5AA  
                          i2l13988 A41A                            i2l15992 0064  
                          i2l15988 005E              LFSRSeedRand@dwOldSeed 0113  
                          _INTCON2 000FF1                            _INTCON3 000FF0  
                          _EIRbits 000F60                            _ERXRDPT 000EEC  
                       ??i2_memcmp 0007                            _ERXWRPT 000EEE  
                       ??i2_memset 0007                         ??i2_fround 0027  
              ??i2_WriteBlockFlash 0008             __end_of_TCPIsConnected B6D8  
                          _TBLPTRH 000FF7                            _TBLPTRL 000FF6  
                          _TBLPTRU 000FF8                   MACPutHeader@type 0106  
                          _OSCTUNE 000F9B                __end_of_SyncTCBStub A108  
     __end_ofi2_SendVolumeToDevice BA06                            _TCPInit 5AD4  
         __end_of_MACIsMemCopyDone BAE0                            _TCPOpen 5F12  
                          _TCPTick 1832                       ??_IRTimerInt 005F  
                     ??_TCPProcess 0184                   ??_MACSetWritePtr 0102  
             ??_UpdateMasterVolume 017C                          DbToCode@k 0150  
            i2WriteBlockFlash@flag 000D                 __end_of_TCPRAMCopy 929A  
                     ??i2_BusySLCD 0001                         ??_BusySLCD 0100  
                  TickGetDiv256@dw 0104                    __size_of_MACGet 000A  
           MACGetFreeRxSize@ReadPT 0106                            i2_scale FB78  
                  __size_of_ARPPut 012C                    __size_of_MACPut 000E  
             __size_of_TCPGetArray 01DC              __size_of_MACGetHeader 0110  
            i2UpdateMasterVolume@i 005C                 __end_ofi2_DbToCode 6A6E  
                     ?_GetCheckSum 0100                WritePHYReg@Register 0102  
              StackTask@cFrameType 01B2                         ??_OpenSLCD 0102  
             __end_of_LFSRSeedRand AD44                            _InitrIR AAC0  
            __size_of_MACDiscardRx 0048                         ??_TickInit 0100  
                          _SendTCP 2D82                  __end_of__npowers_ FEDA  
                          __Hparam 0000                  TCPDisconnect@hTCP 0156  
                ??_MACMemCopyAsync 0107                            _TickGet B728  
                    i2_scale$11862 0027                   ??_CalcIPChecksum 0104  
                          __Lparam 0000                      ?_ProcessIRInt 0001  
        __end_ofi2_WriteBlockFlash 9A46                     IPPutHeader@len 0111  
   CalcIPBufferChecksum@DataBuffer 010A               i2SaveToFlash@success 003B  
               RefreshLine1Ex@line 0103                            _PowerOn B088  
                        _ECON1bits 000FD2                          _ECON2bits 000EFE  
             __size_of_IPPutHeader 011A                       ??i2_PowerOff 0001  
               RefreshLine2Ex@line 0103                         ??_PowerOff 0100  
                          _SyncTCB 9620                    __size_of___ftge 00D4  
                          ___awdiv 9384                      _DelayFor18TCY B564  
                     ??i2_PutsSLCD 0004                            ___ftadd 4CEA  
                          ___awmod 9D72                         ??_PutsSLCD 0103  
                          ___ftdiv 7B90                            ___ftneg B532  
                          ___lldiv 97CC                    __size_of___wmul 0036  
                          ___ftmul 7744                            ___llmod A254  
                          ___ftsub B37E                            ___fttol 75C8  
            __size_of_MACIsTxReady 005A                  SendTCP@vSendFlags 0128  
           __end_ofi2_Delay10KTCYx B9F0                    ?i2_WriteCmdSLCD 0001  
                    _TickGetDiv256 B702                      ?_SwapIPHeader 0105  
               __end_of_IRTimerInt B340                 __end_of_TCPProcess 6C1C  
        __size_of_UpdateSampleRate 00A4                      HandleTCPSeg@h 0156  
                          __pcinit A9C2                       ??i2___awtoft 000C  
                  __size_of_memcmp 00C8                       ??i2___ftpack 0006  
                  __size_of_memcpy 006C                         ??___awtoft 010B  
                       ??___ftpack 0105               __size_ofi2_FindEmpty 0126  
                  __size_of_memset 0038                    __size_of_fround 032C  
          i2___ftmul@f3_as_product 001F                            __ramtop 1000  
              __end_of_WritePHYReg B4FE                       ??i2___lltoft 000D  
                       ??___lltoft 010C                            __ptext0 B5FA  
                          __ptext1 4220                            __ptext2 5448  
                          __ptext3 89B6                            __ptext4 B1F4  
                          __ptext5 5F12                            __ptext6 B6AE  
                          __ptext7 66BE                            __ptext8 9A46  
                          __ptext9 B808               __size_of_TCPPutArray 0234  
                     ??i2___lwtoft 000C                 __end_ofi2_BusySLCD B8B2  
                       ??___lwtoft 010B                  ??_WriteBlockFlash 0107  
                 _RestoreFromFlash 6DC8                       ?_GetTickCopy 0001  
                        _T1CONbits 000FCD                        ?__div_to_l_ 0100  
                  __size_of_strupr 0048                __size_of_TickUpdate 001C  
                          _dpowers FE8B                       i2fround@prec 002D  
                          _isdigit B656                  TCPProcess@localIP 0180  
                 ___awmod@dividend 0100              __end_of_ARPIsResolved 8798  
                          _smStack 00EE           __size_ofi2_DelayFor18TCY 0032  
    __size_ofi2_SendDataToDeviceCh 01DE              UpdateSampleRate@srStr 0105  
                  ?_TCPIsConnected 0001                        TCPOpen@hTCP 0162  
                     _MACGetHeader 8798                      ?i2_EraseFlash 0001  
                      TCPTick@hTCP 0165                 TCPIsConnected@hTCP 0121  
 GetMaxSegSizeOption@vOptionsBytes 010C       __end_of_TCPSocketInitializer FF07  
               TCPServer@srvSocket 01B4                TCPRAMCopy@vDestType 0120  
                          _sprintf F000               __size_ofi2_ReadFlash 005A  
        __size_ofi2_RefreshLine1Ex 0014          __size_ofi2_RefreshLine2Ex 0014  
             end_of_initialization AA3C                       _MACDiscardRx B11C  
                        _ESTATbits 000EFD                 __end_ofi2_PowerOff BB0A  
                          memcmp@n 0104                            memcpy@d 011A  
               __end_ofi2_PutsSLCD AE6A                            memcpy@n 0118  
                          memcpy@s 011C                       ?_CloseSocket 0001  
                          memset@c 0102                            memset@n 0104  
                          memset@p 0106               EraseFlash@flash_addr 0109  
              i2___wmul@multiplier 000F                          i2u1009_40 9012  
                        i2u1009_45 900A                          i2u1074_40 AE38  
                        i2u1074_47 AE2E                          i2u1075_40 AE62  
                        i2u1075_47 AE58                          i2u1156_40 7A46  
                        i2u1156_45 7A3C              __size_of_MACPutHeader 008C  
                        i2u1158_40 7A82                          i2u1158_45 7A78  
              ARPIsResolved@IPAddr 0100                 __end_ofi2___awtoft B1F4  
               __end_ofi2___ftpack A1B0                          i2u1257_45 24F8  
                        i2u1259_40 256A                          i2u1259_45 2560  
              ChangeMasterVolume@d 005E                          i2u1580_40 A40A  
                        i2u1580_47 A400                TCPGetArray@RightLen 0131  
                     _MACIsTxReady AF7C                          i2u1752_40 92A2  
                        i2u1752_46 92A4                          i2u1578_40 A3CC  
                        i2u1578_47 A3C2                          i2u1771_40 57BE  
                        i2u1771_46 57C0                          i2u1773_41 5888  
               __end_ofi2___lltoft AF22                         _remoteNode 02C9  
                        i2u1695_45 9980                          i2u1696_45 9990  
                        i2u1689_45 8522                    ___lldiv@divisor 0104  
                        i2u1867_47 BABA                          i2u1868_47 B9E2  
                   ??_ProcessIRInt 0009                 __end_ofi2___lwtoft B808  
                  ___lldiv@counter 010C             i2ReadFlash@tblptr_save 000D  
             __end_of_RefreshLine1 B9DA                 MACPutHeader@remote 0104  
                   SwapARPPacket@p 0105                     ?_DelayFor18TCY 0001  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc1 000FE6  
                          postinc2 000FDE                     ?_TickGetDiv256 0100  
                   ??_SwapIPHeader 0107                     __tdiv_to_l_@f1 0100  
                   __tdiv_to_l_@f2 0103        CalcIPBufferChecksum@DataPtr 0120  
                  ??i2__tdiv_to_l_ 0007                    ?i2_Delay10KTCYx 0001  
                      _badChecksum 00FA                      ??__tdiv_to_l_ 0106  
            __end_ofi2_SaveToFlash 58AC      __size_of_CalcIPBufferChecksum 014A  
                          strupr@c 0104                            strupr@s 0100  
                          strupr@t 0102                          _PORTAbits 000F80  
                        _PORTBbits 000F81                TCPProcess@TCPHeader 0197  
                        _TCPServer 4220                        _SyncTCBStub A060  
                     ?_ReInitTimer 0001                     GetCheckSum@res 0103  
          MACMemCopyAsync@ReadSave 010B               MACSetReadPtr@address 0100  
         __end_of_SLCDSetDDRamAddr B97E                  ?_MACGetFreeRxSize 0100  
                        i2_TickGet B74E                     ??i2_EraseFlash 0009  
                        _TRISAbits 000F92                 _SendDataToDeviceCh 5CF4  
                     ??_EraseFlash 0108         __end_of_ChangeMasterVolume B37E  
                        i2_PowerOn B0D2                TCPTick@bCloseSocket 0163  
               ??_MACGetFreeRxSize 0102                       _MACPutHeader A722  
                        i2___awdiv A2F8                          i2___ftadd 6C1C  
                        i2___awmod A602                          i2___ftdiv 9466  
                        i2___ftneg B79A                          i2___lldiv A940  
                        i2___ftmul 90C0                          i2___llmod AD44  
                        i2___ftsub B460                          i2___fttol 8FCA  
                      _hCurrentTCP 01FD              __end_of_MACSetReadPtr BAA4  
        HandleTCPSeg@lMissingBytes 016F                ?_SendDataToDeviceCh 0001  
              TCPRAMCopy@ptrSource 0121                     i2sprintf@integ 0073  
                    ??_MACGetArray 0104                 i2FindEmpty@tmpAddr 0027  
                    FindEmpty@addr 0122                     i2sprintf@width 007D  
                   __end_of_MACGet BAF6                     __end_of_ARPPut 831C  
                   __end_of_MACPut BAD4        __size_of_FindMatchingSocket 0660  
                      ___ftdiv@exp 0119                     _dwLFSRRandSeed 00F3  
              TCPOpen@dwRemoteHost 0156                    i2___awtoft@sign 000C  
               i2___llmod@dividend 0001                 i2___awdiv@dividend 0007  
      __size_of_SendVolumeToDevice 0016                  __size_of_MACFlush 0038  
                  i2___ftpack@sign 0005                          i2_isdigit B8B2  
                        _AppConfig 023C         __end_of_reserveSettingsArr F000  
              __size_of__div_to_l_ 0228         HandleTCPSeg@wSegmentLength 0169  
       __size_ofi2_WriteBlockFlash 00D2                        ___ftmul@exp 011D  
                      _WritePHYReg B4CA                  __size_of_LFSRRand 00D6  
                        _FindEmpty 7444               __end_of_IR_POWER_OFF FF2A  
                        i2_sprintf 22F8               i2_SendVolumeToDevice B9F0  
               __end_of_EraseFlash A56E            MACMemCopyAsync@destAddr 0101  
            __end_of_InitAppConfig 89B6                     __end_of___ftge 9974  
           HandleTCPSeg@wFreeSpace 0173                    i2_sprintf$11863 0060  
                   __end_of___wmul B460                    SyncTCB@hLastTCB 01FC  
             ??_SendDataToDeviceCh 0153             __size_of_TCPIsGetReady 00D0  
     GenerateRandomDWORD@T0CONSave 0127                  __size_of_TCPClose 0022  
                        _Configure AC74                          i2memcmp@n 0005  
                __size_of_TCPFlush 0046                      ??_MACPutArray 0104  
                        i2memset@c 0003                          i2memset@n 0005  
                        i2memset@p 0007                         ?_TCPServer 0001  
                   __end_of_memcmp 9D72                     __end_of_memcpy AC0A  
                        _MyTCBStub 01E0                     __end_of_memset B42A  
                   __end_of_fround 4A30             i2SaveToFlash@emptyAddr 003C  
      __end_of_GenerateRandomDWORD 7116       __end_ofi2_UpdateMasterVolume A4DA  
              CalcIPChecksum@count 0102                  __size_of_DbToCode 0268  
             __size_of_Delay1KTCYx 0014                   i2___wmul@product 0013  
             __end_of_IR_VOLUME_UP FF21             __size_of_TCPDisconnect 0102  
             __end_of_SETTINGS_LEN FF0F             __size_of_IPSetRxBuffer 001C  
                   __end_of_strupr B1AC                start_initialization A9C2  
                  OpenSLCD@lcdtype 0102                  __size_ofi2___ftge 0090  
                       ?i2_TickGet 0001                 i2___awdiv@quotient 000D  
                __size_ofi2___wmul 0026                          _ReadFlash ADAA  
            _CurrentPacketLocation 00E1                __end_of__tdiv_to_l_ 64E0  
                        TickGet@dw 0104                         ?i2_PowerOn 0001  
           HandleTCPSeg@wNewWindow 0162                    i2___fttol@sign1 0043  
                __size_ofi2_memcmp 00A0                  __size_ofi2_memset 002C  
                __size_ofi2_fround 0276                         ?i2___awdiv 0007  
                       ?i2___ftadd 002E                         ?i2___awmod 0001  
                       ?i2___ftdiv 000D                         ?i2___ftneg 0001  
                       ?i2___lldiv 0001                    i2_WriteDataSLCD B8D2  
                       ?i2___ftmul 0015                         ?i2___llmod 0001  
                       ?i2___ftsub 003A                         ?i2___fttol 003A  
                     _vTickReading 00C7              __size_of_LFSRSeedRand 0068  
       HandleTCPSeg@localAckNumber 0175                WriteBlockFlash@flag 010C  
                         ??_MACGet 0100                           ??_ARPPut 0120  
                         ??_MACPut 0100                  ??i2_DelayFor18TCY 0001  
               ProcessIRCode@delta 0097             __size_of_TCPIsPutReady 010C  
      __end_of_GetMaxSegSizeOption 7F78                       ??_TickUpdate 0001  
           __size_ofi2_Delay1KTCYx 0010                    ___llmod@divisor 0104  
                __size_of_BusySLCD 0022                UpdateMasterVolume@i 0181  
                    _SETTINGS_ADDR FF07                    ___llmod@counter 0108  
                 TCPServer@wMaxGet 0182                   TCPServer@wMaxPut 0184  
           TCPOpen@vRemoteHostType 015A                         ?i2_isdigit 0001  
                  ??_DelayFor18TCY 0100               __size_of_GetCheckSum 0042  
    GenerateRandomDWORD@ADCON0Save 0125      GenerateRandomDWORD@ADCON2Save 0126  
            i2EraseFlash@startaddr 0001           WriteBlockFlash@startaddr 0100  
                __size_of_OpenSLCD 0094                __end_of_MACGetArray AEC6  
                  ??_TickGetDiv256 0104                           ??___ftge 0106  
             ProcessIRInt@numTicks 0011                  __size_of_TickInit 0014  
            ?i2_SendVolumeToDevice 0001                         ?_FindEmpty 0110  
                         ??___wmul 0112                     MACPutArray@len 0102  
                       ?i2_sprintf 0049                     MACPutArray@val 0100  
     GenerateRandomDWORD@TMR0HSave 0128            __size_of_RefreshLine1Ex 0018  
          __size_of_RefreshLine2Ex 0018               _TCPSocketInitializer FF01  
                        _StackInit B23A                      ?_WriteCmdSLCD 0001  
     GenerateRandomDWORD@TMR0LSave 0129                          _StackTask 9B16  
                 i2EraseFlash@flag 0009       HandleTCPSeg@localHeaderFlags 0179  
                      __pdataBANK0 00F3                        __pdataBANK1 01FC  
               i2_SLCDSetDDRamAddr BA06                           ??_memcmp 0106  
                         ??_memcpy 011A                           ??_memset 0106  
                         ??_fround 0126                   _UpdateSampleRate A1B0  
                __size_of_PowerOff 0006                       ?_SaveToFlash 0001  
                       ?_Configure 0001                  __size_of_PutsSLCD 006A  
                         ??_strupr 0102                       GetCheckSum@i 0104  
                       fround@prec 012C                           ?_ARPInit 0001  
                    ?i2__div_to_l_ 0001                           ?_MACInit 0001  
                 _s_dacSettingsTmp 02E7                  __size_of___awtoft 005A  
                __size_of___ftpack 010A            i2UpdateSampleRate@srStr 0006  
                TCPGetArray@buffer 0126                       _LFSRSeedRand ACDC  
           __size_ofi2_GetCheckSum 0032                  __size_of___lltoft 007E  
              ?i2_SLCDSetDDRamAddr 0001                 __end_of_TickUpdate B964  
                     i2sprintf@exp 007F                        __pbssCOMRAM 005F  
         i2SendDataToDeviceCh@mask 0074                  __size_of___lwtoft 002E  
                    __pcstackBANK0 0060                      __pcstackBANK1 0100  
             __end_of_ProcessIRInt 9384               __size_of_GetTickCopy 0034  
                       ?_ReadFlash 0100             __size_of_SwapARPPacket 00AE  
                     _fround$10832 0129                       _fround$10833 0126  
           __size_of_ProcessIRCode 018C                __end_of__stringdata FFFE  
              __end_of_MACPutArray FFF8                           ?_TCPInit 0001  
                         ?_TCPOpen 0156                           ?_TCPTick 0001  
                CalcIPChecksum@val 0108                  CalcIPChecksum@sum 010A  
                ?_MACIsMemCopyDone 0001                    _MACMemCopyAsync 7116  
            MACSetWritePtr@address 0100                   i2_RefreshLine1Ex BA6C  
                 i2_RefreshLine2Ex BA58                  HandleTCPSeg@wTemp 017A  
        TCPGetArray@wGetReadyCount 012F          i2WriteBlockFlash@saddress 000E  
                  Delay1KTCYx@unit 0100                      _TCPIsGetReady 9A46  
             __end_of_SwapIPHeader 9EF8                 ??_MACIsMemCopyDone 0100  
                         ?i2_scale 0024                        sprintf@ccnt 0166  
                      sprintf@_val 016B                        sprintf@flag 0170  
            __size_of_RefreshLine1 0016                   SendTCP@vTCPFlags 0133  
                      sprintf@fval 0176               ReadFlash@flash_array 0106  
                      sprintf@prec 0179                     TCPPutArray@len 0159  
                    ??_IPGetHeader 013A                SwapTCPHeader@header 0105  
               WritePHYReg@GIESave 0103           __end_of_RestoreFromFlash 6F70  
                i2GetCheckSum@data 0001                          __pnvBANK2 02D3  
                        __pnvBANK3 0300                      _TCPDisconnect 8CD0  
                         ?_InitrIR 0001              TCPPutArray@wActualLen 0161  
             __size_of_CloseSocket 00CA                      _IPSetRxBuffer B910  
             ??i2_SLCDSetDDRamAddr 0002                    HandleTCPSeg@len 0158  
                         ?_SendTCP 0128             __size_ofi2_GetTickCopy 0034  
           FindMatchingSocket@hTCP 0137                           ?_TickGet 0100  
                 ??i2_WriteCmdSLCD 0001         HandleTCPSeg@localSeqNumber 0165  
                   _s_irCodeBitIdx 01FE                    _WriteBlockFlash 831C  
           FindMatchingSocket@hash 0134          i2WriteBlockFlash@startptr 0009  
             __end_ofi2_EraseFlash AB9E                TCPProcess@checksum1 0186  
              TCPProcess@checksum2 0188             ChangeMasterVolume@prev 005D  
                         ?_PowerOn 0001                          __pintcode 0008  
       __end_ofi2_UpdateSampleRate A8BE                     ??_WriteCmdSLCD 0100  
                    __pmediumconst FE2A                           ?_SyncTCB 0001  
         FindMatchingSocket@remote 012A                           ?___awdiv 0106  
                        __ptext100 9620                          __ptext101 91B0  
                        __ptext110 8BCC                          __ptext102 BA80  
                        __ptext111 B4CA                          __ptext103 BA92  
                        __ptext120 B164                          __ptext112 BAC6  
                        __ptext104 FFC8                          __ptext113 B6D8  
                        __ptext105 7116                          __ptext130 929A  
                        __ptext122 567C                          __ptext114 BAFE  
                        __ptext106 BAEC                          __ptext131 BA44  
                        __ptext123 9974                          __ptext115 AAC0  
                        __ptext107 BAD4                          __ptext140 BA58  
                        __ptext132 B302                          __ptext124 B596  
                        __ptext116 B3F2                          __ptext108 AE6A  
                        __ptext141 B9DA                          __ptext133 B682  
                        __ptext125 8444                          __ptext117 88A8  
                        __ptext109 96F6                           ?___ftadd 012D  
                        __ptext150 A602                          __ptext142 BB04  
                        __ptext134 72B8                          __ptext126 AFD6  
                        __ptext118 AB9E                          __ptext151 A2F8  
                        __ptext143 B340                          __ptext135 A39C  
                        __ptext127 AB30                          __ptext119 A8BE  
                        __ptext160 9466                          __ptext152 80BE  
                        __ptext144 A43C                          __ptext136 B74E  
                        __ptext128 BAB6                          __ptext161 B1AC  
                        __ptext153 7A28                          __ptext145 22F8  
                        __ptext137 B4FE                          __ptext129 B948  
                        __ptext170 BAA4                          __ptext162 B9F0  
                        __ptext154 AEC6                          __ptext146 FB78  
                        __ptext138 B0D2                          __ptext171 BA6C  
                        __ptext163 64E0                          __ptext155 AD44  
                        __ptext147 B8B2                          __ptext139 A836  
                        __ptext172 BA06                          __ptext164 689A  
                        __ptext156 A940                          __ptext148 4F6A  
                        __ptext173 B86E                          __ptext165 B7E4  
                        __ptext157 B460                          __ptext149 B774  
                        __ptext174 AE0A                          __ptext166 8FCA  
                        __ptext158 B79A                          __ptext175 B8D2  
                        __ptext167 90C0                          __ptext159 A692  
                        __ptext176 B890                          __ptext168 6C1C  
                        __ptext177 B5C8                          __ptext169 A108  
                         ?___awmod 0100                           ?___ftdiv 010C  
                       ?_StackInit 0001                           ?___ftneg 0100  
                         ?___lldiv 0100                           ?___ftmul 0114  
                       ?_StackTask 0001                           ?___llmod 0100  
                         ?___ftsub 0139                          __npowers_ FEB3  
                         ?___fttol 0139                      ?_Delay10KTCYx 0001  
                         TCPInit@i 0142             __size_of_SwapTCPHeader 01F6  
          MACCalcRxChecksum@RDSave 012E                           TCPTick@w 0167  
                  SyncTCBStub@hTCP 0120                      _TCPIsPutReady 89B6  
                 ??_TCPIsConnected 0121                  _MACSetReadPtrInRx B030  
               FindEmpty@startAddr 0110                      i2_Delay1KTCYx BAB6  
                      __tdiv_to_l_ 6300                        ??_TCPServer 0182  
            __end_of_WriteDataSLCD B84C                     ??i2__div_to_l_ 0007  
                   SendTCP@options 012D                       ??__div_to_l_ 0106  
          __end_ofi2_WriteDataSLCD B8F2                 ?_MACSetReadPtrInRx 0100  
                   __size_of_ISRLP 01AC                           ?_isdigit 0001  
                  i2_isdigit$10242 0002                        ??i2_TickGet 0005  
             __size_of_ReInitTimer 0014                       _RefreshLine1 B9C4  
                      ??i2_PowerOn 005D         i2SendDataToDeviceCh@offset 0072  
                    ??_TCPGetArray 012A         i2SendDataToDeviceCh@values 0060  
                      ??i2___awdiv 000B                        ??i2___ftadd 0034  
                      ??i2___awmod 0005                           ?_sprintf 0148  
          MACCalcRxChecksum@offset 0128                        ??i2___ftdiv 0013  
                      ??i2___ftneg 0004                        ??i2___lldiv 0009  
                      ??i2___ftmul 001B                     __size_of_scale 05C2  
                      ??i2___llmod 0009                ??_MACSetReadPtrInRx 0102  
                      ??i2___ftsub 0040                        ??i2___fttol 003E  
      __size_of_UpdateMasterVolume 00BA                     ?_TCPIsGetReady 0121  
        CalcIPBufferChecksum@F7102 00CD                          _s_irLearn 01B8  
                   __size_of_swapl 0042                     __size_of_swaps 001E  
 MACMemCopyAsync@UpdateReadPointer 0110             UpdateMasterVolume@dvol 017E  
          __size_ofi2_RefreshLine1 0012                        _wTXWatchdog 00EB  
                         _MACFlush B3BA                   TCPProcess@remote 017E  
                      _MACGetArray AE6A                      StackInit@once 005F  
                   ___wmul@product 0112                           _LATAbits 000F89  
                         _LATBbits 000F8A                 ReadFlash@num_bytes 0104  
                         _LATDbits 000F8C                           _LATEbits 000F8D  
                         _LATFbits 000F8E                     ?_TCPDisconnect 0001  
                         _LATGbits 000F8F                           _MIREGADR 000EB4  
                         _ERXRDPTH 000EED                           _ERXRDPTL 000EEC  
                   ?_IPSetRxBuffer 0106                           _PIE1bits 000F9D  
             i2_UpdateMasterVolume A43C                      ?_DelayPORSLCD 0001  
                    ??_IPPutHeader 0113                           _LFSRRand 96F6  
                      ??i2_isdigit 0001                      i2_GetCheckSum B596  
     __end_ofi2_SendDataToDeviceCh 66BE          CalcIPBufferChecksum@Start 011E  
          TCPPutArray@wFreeTXSpace 0163                   ??i2_Delay10KTCYx 0001  
                    _SwapARPPacket 9FB2                           _PIR1bits 000F9E  
               __end_of__div_to_l_ 5AD4             ??i2_SendVolumeToDevice 0057  
                    _ProcessIRCode 72B8                           _RCONbits 000FD0  
                 __CFG_WDTPS$32768 000000                           _TCBStubs 026F  
                    ??i2_FindEmpty 0015                 ReadFlash@startaddr 0100  
                      ??_FindEmpty 0114                     ??_Delay10KTCYx 0100  
              __end_of_IPGetHeader 7A28                           _TCPClose B808  
                      ??i2_sprintf 0050                           _TCPFlush B1F4  
                    ??_TCPPutArray 015B          __end_of_MACSetReadPtrInRx B088  
                  i2__div_to_l_@f1 0001                    i2__div_to_l_@f2 0004  
                   ?_TCPIsPutReady 0121                           _DbToCode 51E0  
                   ?i2_Delay1KTCYx 0001                        ??_Configure 0147  
  _reserveSettingsArr_absconstaddr 01D000                   i2PutsSLCD@buffer 0002  
               StackTask@dataCount 01AB          WriteBlockFlash@num_blocks 0104  
                    TCPTick@vFlags 0166                         _ADCON0bits 000FC2  
                      __stringdata FF2D                       ?_SyncTCBStub 0001  
                ___wmul@multiplier 010E                           i2___ftge A692  
                      _MACPutArray FFC8                MACSetReadPtr@oldVal 0102  
                         i2___wmul B774            __end_of_MACMemCopyAsync 72B8  
                    i2_GetTickCopy B4FE                   __size_of_ARPInit 002A  
                         i2_memcmp A39C                   __size_of_MACInit 0104  
                i2___awdiv@divisor 0009                           _SYNQueue 0200  
                         i2_memset B682                           i2_fround 4F6A  
                    ??i2_ReadFlash 0009                        ??_ReadFlash 0108  
                i2___awdiv@counter 000B                   Delay10KTCYx@unit 0101  
                ?_SLCDSetDDRamAddr 0001                IPSetRxBuffer@Offset 0106  
              __end_of_IR_POWER_ON FF2D                     EraseFlash@flag 0108  
                      _INTCON2bits 000FF1                 ??_SLCDSetDDRamAddr 0101  
                    LFSRSeedRand@i 0117                       _IR_POWER_OFF FF27  
                      _INTCON3bits 000FF0                   __size_of_TCPInit 0220  
                        copy_data0 AA10                          copy_data1 AA30  
                 __size_of_TCPOpen 01F8                   __size_of_TCPTick 0AC6  
                    _SwapTCPHeader 610A                        i2DbToCode@k 0051  
               i2___awmod@dividend 0001                           _BusySLCD B84C  
     __end_of_CalcIPBufferChecksum 7E32            MACGetFreeRxSize@WritePT 0104  
          __end_of_WriteBlockFlash 8444            CalcIPBufferChecksum@len 0106  
                     TCPClose@hTCP 0157                   __size_ofi2_scale 0450  
                     _s_prevIRPort 01FF                     ??_DelayPORSLCD 0101  
            ?i2_UpdateMasterVolume 0001                     ?i2_GetCheckSum 0001  
                   _invalidCommand 00FC                         _EECON1bits 000FA6  
                         _OpenSLCD A56E                __end_of_TCPGetArray 689A  
     GenerateRandomDWORD@vBitCount 0124                        _scale$10834 0126  
                         _NextPort 00E5                 _ChangeMasterVolume B340  
        __size_of_MACGetFreeRxSize 00D8                       _IR_VOLUME_UP FF18  
                   ?_SwapARPPacket 0105                 LFSRSeedRand@dwSeed 010F  
                         _TickInit BA30                           __Hrparam 0000  
                     _SETTINGS_LEN FF0B                     ?_ProcessIRCode 0001  
                    SwapIPHeader@h 0105            __size_of_MACSetWritePtr 0012  
                 __size_of_InitrIR 0070       i2WriteBlockFlash@flash_array 0006  
                 __size_of_SendTCP 087C                           __Lrparam 0000  
              EraseFlash@startaddr 0100                       ?_WritePHYReg 0100  
           __size_of_ARPIsResolved 0114                        _errataTempH 000E7F  
                      _errataTempL 000E7E               i2RefreshLine1Ex@line 0004  
                 __size_of_TickGet 0026               i2RefreshLine2Ex@line 0004  
                   _RefreshLine1Ex B996                     _RefreshLine2Ex B97E  
                         _PowerOff BAFE                        ??_StackInit 0143  
                 __size_of_PowerOn 004A                           _PutsSLCD AC0A  
                      ??_StackTask 01AB        __p_reserveSettingsArr_const D000  
              ?_ChangeMasterVolume 0001                   __size_of_SyncTCB 00D6  
              __end_of_IPPutHeader 8684                   __size_of___awdiv 00E2  
                 __size_of___ftadd 0280                   __size_of___awmod 00C4  
                 __size_of___ftdiv 0158                   __size_of___ftneg 0032  
            i2___wmul@multiplicand 0011                   __size_of___lldiv 00D4  
                 __size_of___ftmul 0176                   __size_of___llmod 00A4  
                 __size_of___ftsub 003C                   __size_of___fttol 017C  
                         ___awtoft AF22                           ___ftpack 8AC2  
                    ?_HandleTCPSeg 0156              __size_of_ProcessIRInt 00EA  
                         ___lltoft AA42                 _NextPacketLocation 00E3  
            __end_ofi2__tdiv_to_l_ 81F0                 _reserveSettingsArr D000  
                         ___lwtoft B628            __size_of_CalcIPChecksum 00F6  
              __end_ofi2_FindEmpty 856A                     ?i2_GetTickCopy 0001  
             __size_of_SaveToFlash 02BA                       TCPFlush@hTCP 0156  
                  i2_DelayFor18TCY B5C8                         sprintf@exp 0174  
                 ?i2_WriteDataSLCD 0001                __end_of_TCPPutArray 567C  
        WriteBlockFlash@write_byte 010B               MACSetWritePtr@oldVal 0102  
                 __size_of_isdigit 002C                     i2GetCheckSum@i 0005  
            __size_of_SwapIPHeader 00C2                FindMatchingSocket@h 0128  
                    SendTCP@header 0142                    ??_TCPIsGetReady 0123  
                         __ptext10 4A30                           __ptext11 9CAA  
                         __ptext20 3C5E                           __ptext12 831C  
                         __ptext21 B656                           __ptext13 7444  
                         __ptext30 B37E                           __ptext22 4704  
                         __ptext14 A4DA                           __ptext31 B532  
                         __ptext23 9D72                           __ptext15 B088  
                         __ptext40 7744                           __ptext32 98A0  
                         __ptext24 9384                           __ptext16 A1B0  
                         __ptext41 4CEA                           __ptext33 7B90  
                         __ptext25 6300                           __ptext17 B97E  
                         __ptext50 8DD2                           __ptext42 8AC2  
                         __ptext34 AF22                           __ptext26 58AC  
                         __ptext18 9EF8                           __ptext51 8684  
                         __ptext43 B9C4                           __ptext35 B9AE  
                         __ptext27 AA42                           __ptext19 F000  
                         __ptext60 7E32                           __ptext52 6A6E  
                         __ptext44 B996                           __ptext36 5CF4  
                         __ptext28 A254                           __ptext61 B910  
                         __ptext53 0000                           __ptext45 AC0A  
                         __ptext37 51E0                           __ptext29 97CC  
                         __ptext70 7CE8                           __ptext62 35FE  
                         __ptext54 2D82                           __ptext46 B82A  
                         __ptext38 B628                           __ptext71 7F78  
                         __ptext63 B42A                           __ptext55 610A  
                         __ptext47 9B16                           __ptext39 75C8  
                         __ptext80 B496                           __ptext72 B11C  
                         __ptext64 B702                           __ptext56 B27E  
                         __ptext48 1832                           __ptext81 6DC8  
                         __ptext73 81F0                           __ptext65 8798  
                         __ptext57 9548                           __ptext49 8CD0  
                         __ptext90 BA1C                           __ptext82 ADAA  
                         __ptext74 9FB2                           __ptext66 78BA  
                         __ptext58 856A                           __ptext91 B92C  
                         __ptext83 B2C0                           __ptext75 B8F2  
                         __ptext67 9E36                           __ptext59 8ED4  
                         __ptext92 AC74                           __ptext84 A56E  
                         __ptext76 A722                           __ptext68 B030  
                         __ptext93 BA30                           __ptext85 B964  
                         __ptext77 AF7C                           __ptext69 A7AE  
                         __ptext94 B23A                           __ptext86 B7C0  
                         __ptext78 B3BA                           __ptext95 5AD4  
                         __ptext87 B84C                           __ptext79 B728  
                         __ptext96 A060                           __ptext88 B564  
                         __ptext97 6F70                           __ptext89 BAF6  
                         __ptext98 ACDC                           __ptext99 9BE0  
                    TCPProcess@len 0182                     ?_SwapTCPHeader 0105  
                         __powers_ FEDA                IPPutHeader@protocol 0110  
             ??_ChangeMasterVolume 005D               __end_of_WriteCmdSLCD B7E4  
                         _dispbuf1 028B                           _dispbuf2 029C  
                   i2_fround$11860 002A                     i2_fround$11861 0027  
       __end_of_FindMatchingSocket 3C5E                   __size_of_sprintf 0B78  
                  ??_TCPDisconnect 0156           __end_of_UpdateSampleRate A254  
                  ??_IPSetRxBuffer 0108         __end_of_SendVolumeToDevice B9C4  
              __end_ofi2_ReadFlash B030                      __size_of_main 002E  
               GetCheckSum@dataLen 0102                    _StackInit$10831 0143  
            __size_ofi2_EraseFlash 006E                           _s_irCode 02AD  
           __size_ofi2_SaveToFlash 0230                        _IPHeaderLen 01B5  
           SLCDSetDDRamAddr@DDaddr 0101                        _IPGetHeader 78BA  
             __end_ofi2__div_to_l_ 7B90               TCPPutArray@wRightLen 015F  
           __end_of_RefreshLine1Ex B9AE             __end_of_RefreshLine2Ex B996  
               TCPTick@bRetransmit 0164                           _toRotate 00EF  
             ReadFlash@tblptr_save 010C                       _ProcessIRInt 929A  
                 i2DbToCode@volume 0049                    ??_TCPIsPutReady 0123  
       WriteBlockFlash@flash_array 0105                       TCPOpen@wPort 015B  
                  ??i2_Delay1KTCYx 0001                         _ARPResolve 8DD2  
                       _ARPProcess 7F78         __size_of_MACSetReadPtrInRx 0058  
         __end_ofi2_RefreshLine1Ex BA80           __end_ofi2_RefreshLine2Ex BA6C  
                    ??_Delay1KTCYx 0100                i2EraseFlash@endaddr 0005  
                   ??_HandleTCPSeg 015A             __size_of_MACSetReadPtr 0012  
                     _SwapIPHeader 9E36        __size_of_SendDataToDeviceCh 021E  
                 _CloseSocket$7622 0128         TCPGetRemoteInfo@RemoteInfo 02BD  
                      _IR_POWER_ON FF2A           TCPInit@vSocketsAllocated 0138  
                i2___awmod@divisor 0003                 MACMemCopyAsync@len 0105  
                 ?_MACMemCopyAsync 0101                  i2___awmod@counter 0005  
                       _INTCONbits 000FF2                           memcmp@s1 0100  
                         memcmp@s2 0102               i2_SendDataToDeviceCh 64E0  
                         memcpy@d1 0114                           memcpy@s1 0116  
          TCPServer@tcpServerState 00ED                      _ARPIsResolved 8684  
                         isdigit@c 0102                           memset@p1 0100  
                     i2_EraseFlash AB30                  _FormatNetBIOSName A8BE  
  GenerateRandomDWORD@randomResult 012C                           scale@scl 0129  
     __size_of_GenerateRandomDWORD 01A6               ARPIsResolved@MACAddr 0102  
             __end_of_Delay10KTCYx B948                        _TCPGetArray 66BE  
                 ProcessIRInt@diff 000D                     i2_RefreshLine1 BAA4  
               ?_FormatNetBIOSName 0105                           intlevel2 0000  
                   PutsSLCD@buffer 0101                          sprintf@ap 015C  
              MACPutHeader@dataLen 0107                   __tdiv_to_l_@exp1 010E  
                        sprintf@vd 015E                          sprintf@sp 0148  
                 __tdiv_to_l_@cntr 010D                   __tdiv_to_l_@quot 0109  
           __size_of_InitAppConfig 010E                    ??i2_GetCheckSum 0004  
           ??i2_UpdateMasterVolume 0057                         _MISTATbits 000E8A  
                 ?_WriteBlockFlash 0100                      ??_GetCheckSum 0103  
                 ___lldiv@dividend 0100                    ??_SwapARPPacket 0107  
                i2SaveToFlash@addr 0035                    ??_ProcessIRCode 0087  
                ?_RestoreFromFlash 0001              MACCalcRxChecksum@temp 0130  
              ??_FormatNetBIOSName 0107                        _IPPutHeader 856A  
                       _OSCCONbits 000FD3                    ?_RefreshLine1Ex 0103  
                  ?_RefreshLine2Ex 0103              TCPRAMCopy@vSourceType 0123  
               ??_RestoreFromFlash 0110                     ISRLP@currentTS 00AE  
            __end_of_DelayFor18TCY B596                    i2FindEmpty@addr 0023  
     __size_of_GetMaxSegSizeOption 0146                         _TCPRAMCopy 91B0  
        __size_of_MACIsMemCopyDone 000C           RestoreFromFlash@addrStop 0118  
                      i2_FindEmpty 8444              __end_of_TickGetDiv256 B728  
          __end_ofi2_DelayFor18TCY B5FA                        _TCPPutArray 5448  
                  _ARPResolve$3399 012E                         i2_DbToCode 689A  
        MACMemCopyAsync@sourceAddr 0103                    ??i2_GetTickCopy 0001  
                     ?__tdiv_to_l_ 0100               _CalcIPBufferChecksum 7CE8  
                    i2_SaveToFlash 567C                      ??_GetTickCopy 0100  
     CalcIPBufferChecksum@Checksum 0122                           sprintf@c 017B  
                         sprintf@f 014A               SaveToFlash@emptyAddr 013B  
             __end_of_DelayPORSLCD BAFE                   ___lldiv@quotient 0108  
MACMemCopyAsync@UpdateWritePointer 010F                   i2SaveToFlash@cmp 0039  
            ?i2_SendDataToDeviceCh 0001          __end_of_FormatNetBIOSName A940  
              __end_of_Delay1KTCYx BA30               MACCalcRxChecksum@len 012A  
             __size_of_SyncTCBStub 00A8                     ?_ARPIsResolved 0100  
               i2_UpdateSampleRate A836       CalcIPBufferChecksum@ChunkLen 0126  
                  ??_SwapTCPHeader 0107                      ?_MACGetHeader 011E  
                      i2_ReadFlash AFD6             __end_ofi2_RefreshLine1 BAB6  
     __end_of_SerializedMACAddress FF27                        i2TickGet@dw 0005  
         SendDataToDeviceCh@offset 0158                         _IRTimerInt B302  
                       _TCPProcess 6A6E           SendDataToDeviceCh@values 0159  
                    ?_MACDiscardRx 0001              TCPOpen@vSocketPurpose 015D  
                       i2_BusySLCD B890                ?i2_UpdateSampleRate 0001  
                    _MACSetReadPtr BA92                  i2__div_to_l_@exp1 0010  
                i2__div_to_l_@cntr 000F                  i2WriteCmdSLCD@cmd 0001  
                  GetCheckSum@data 0100                      ??_CloseSocket 0128  
                i2__div_to_l_@quot 000B                       ?_MACGetArray 0100  
              i2FindEmpty@addrStop 001D                 IPGetHeader@localIP 0132  
                IPGetHeader@header 0140                      ?_MACIsTxReady 0001  
                 _MACGetFreeRxSize 9548                     _MACSetWritePtr BA80  
      __size_ofi2_SLCDSetDDRamAddr 0016                   ARPResolve@IPAddr 0120  
                TCPIsGetReady@hTCP 0125                  IPGetHeader@remote 0134  
FindMatchingSocket@wQueueInsertPos 0138                i2FindEmpty@blockEnd 0021  
